
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 c5 4f 00 00 	mov    0x4fc5(%rip),%rax        # 5fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__cxa_begin_catch@plt-0x10>:
    1020:	ff 35 ca 4f 00 00    	push   0x4fca(%rip)        # 5ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 4f 00 00    	jmp    *0x4fcc(%rip)        # 5ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <__cxa_begin_catch@plt>:
    1030:	ff 25 ca 4f 00 00    	jmp    *0x4fca(%rip)        # 6000 <__cxa_begin_catch@CXXABI_1.3>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__cxa_atexit@plt>:
    1040:	ff 25 c2 4f 00 00    	jmp    *0x4fc2(%rip)        # 6008 <__cxa_atexit@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <vkGetInstanceProcAddr@plt>:
    1050:	ff 25 ba 4f 00 00    	jmp    *0x4fba(%rip)        # 6010 <vkGetInstanceProcAddr@Base>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    1060:	ff 25 b2 4f 00 00    	jmp    *0x4fb2(%rip)        # 6018 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <_Znwm@plt>:
    1070:	ff 25 aa 4f 00 00    	jmp    *0x4faa(%rip)        # 6020 <_Znwm@GLIBCXX_3.4>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <_ZdlPvm@plt>:
    1080:	ff 25 a2 4f 00 00    	jmp    *0x4fa2(%rip)        # 6028 <_ZdlPvm@CXXABI_1.3.9>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <_ZNSolsEPFRSoS_E@plt>:
    1090:	ff 25 9a 4f 00 00    	jmp    *0x4f9a(%rip)        # 6030 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <_ZNSt8ios_base4InitC1Ev@plt>:
    10a0:	ff 25 92 4f 00 00    	jmp    *0x4f92(%rip)        # 6038 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <__cxa_end_catch@plt>:
    10b0:	ff 25 8a 4f 00 00    	jmp    *0x4f8a(%rip)        # 6040 <__cxa_end_catch@CXXABI_1.3>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <_Unwind_Resume@plt>:
    10c0:	ff 25 82 4f 00 00    	jmp    *0x4f82(%rip)        # 6048 <_Unwind_Resume@GCC_3.0>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	ff 25 da 4e 00 00    	jmp    *0x4eda(%rip)        # 5fb0 <__cxa_finalize@GLIBC_2.2.5>
    10d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	31 ed                	xor    %ebp,%ebp
    10e2:	49 89 d1             	mov    %rdx,%r9
    10e5:	5e                   	pop    %rsi
    10e6:	48 89 e2             	mov    %rsp,%rdx
    10e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10ed:	50                   	push   %rax
    10ee:	54                   	push   %rsp
    10ef:	45 31 c0             	xor    %r8d,%r8d
    10f2:	31 c9                	xor    %ecx,%ecx
    10f4:	48 8d 3d 0d 01 00 00 	lea    0x10d(%rip),%rdi        # 1208 <main>
    10fb:	ff 15 bf 4e 00 00    	call   *0x4ebf(%rip)        # 5fc0 <__libc_start_main@GLIBC_2.34>
    1101:	f4                   	hlt
    1102:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1109:	00 00 00 
    110c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d 59 4f 00 00 	lea    0x4f59(%rip),%rdi        # 6070 <__TMC_END__>
    1117:	48 8d 05 52 4f 00 00 	lea    0x4f52(%rip),%rax        # 6070 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 9e 4e 00 00 	mov    0x4e9e(%rip),%rax        # 5fc8 <_ITM_deregisterTMCloneTable@Base>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmp    *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d 29 4f 00 00 	lea    0x4f29(%rip),%rdi        # 6070 <__TMC_END__>
    1147:	48 8d 35 22 4f 00 00 	lea    0x4f22(%rip),%rsi        # 6070 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 6d 4e 00 00 	mov    0x4e6d(%rip),%rax        # 5fd8 <_ITM_registerTMCloneTable@Base>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmp    *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	ret
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64
    1184:	80 3d 05 50 00 00 00 	cmpb   $0x0,0x5005(%rip)        # 6190 <completed.0>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 1a 4e 00 00 	cmpq   $0x0,0x4e1a(%rip)        # 5fb0 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d b6 4e 00 00 	mov    0x4eb6(%rip),%rdi        # 6058 <__dso_handle>
    11a2:	e8 29 ff ff ff       	call   10d0 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	call   1110 <deregister_tm_clones>
    11ac:	c6 05 dd 4f 00 00 01 	movb   $0x1,0x4fdd(%rip)        # 6190 <completed.0>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	ret
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	ret
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64
    11c4:	e9 77 ff ff ff       	jmp    1140 <register_tm_clones>

00000000000011c9 <_Z14protected_mainv>:
#include <neko.hpp>

#include <iostream>

int protected_main() {
    11c9:	55                   	push   %rbp
    11ca:	48 89 e5             	mov    %rsp,%rbp
    11cd:	48 83 ec 10          	sub    $0x10,%rsp
  auto engine = new neko::Engine();
    11d1:	bf 01 00 00 00       	mov    $0x1,%edi
    11d6:	e8 95 fe ff ff       	call   1070 <_Znwm@plt>
    11db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  engine->start();
    11df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11e3:	48 89 c7             	mov    %rax,%rdi
    11e6:	e8 5f 01 00 00       	call   134a <_ZN4neko6Engine5startEv>
  delete engine;
    11eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11ef:	48 85 c0             	test   %rax,%rax
    11f2:	74 0d                	je     1201 <_Z14protected_mainv+0x38>
    11f4:	be 01 00 00 00       	mov    $0x1,%esi
    11f9:	48 89 c7             	mov    %rax,%rdi
    11fc:	e8 7f fe ff ff       	call   1080 <_ZdlPvm@plt>
  return EXIT_SUCCESS;
    1201:	b8 00 00 00 00       	mov    $0x0,%eax
}
    1206:	c9                   	leave
    1207:	c3                   	ret

0000000000001208 <main>:

int main() {
    1208:	55                   	push   %rbp
    1209:	48 89 e5             	mov    %rsp,%rbp
    120c:	53                   	push   %rbx
    120d:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    1211:	e8 b3 ff ff ff       	call   11c9 <_Z14protected_mainv>
    1216:	e9 c1 00 00 00       	jmp    12dc <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    121b:	b8 01 00 00 00       	mov    $0x1,%eax
    1220:	e9 b7 00 00 00       	jmp    12dc <main+0xd4>
  } catch (std::exception &e) {
    1225:	48 83 fa 01          	cmp    $0x1,%rdx
    1229:	75 4e                	jne    1279 <main+0x71>
    122b:	48 89 c7             	mov    %rax,%rdi
    122e:	e8 fd fd ff ff       	call   1030 <__cxa_begin_catch@plt>
    1233:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    1237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    123b:	48 8b 00             	mov    (%rax),%rax
    123e:	48 83 c0 10          	add    $0x10,%rax
    1242:	48 8b 10             	mov    (%rax),%rdx
    1245:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1249:	48 89 c7             	mov    %rax,%rdi
    124c:	ff d2                	call   *%rdx
    124e:	48 89 c6             	mov    %rax,%rsi
    1251:	48 8d 05 28 4e 00 00 	lea    0x4e28(%rip),%rax        # 6080 <_ZSt4cerr@GLIBCXX_3.4>
    1258:	48 89 c7             	mov    %rax,%rdi
    125b:	e8 00 fe ff ff       	call   1060 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1260:	48 8b 15 51 4d 00 00 	mov    0x4d51(%rip),%rdx        # 5fb8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1267:	48 89 d6             	mov    %rdx,%rsi
    126a:	48 89 c7             	mov    %rax,%rdi
    126d:	e8 1e fe ff ff       	call   1090 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    1272:	e8 39 fe ff ff       	call   10b0 <__cxa_end_catch@plt>
    1277:	eb a2                	jmp    121b <main+0x13>
    1279:	48 89 c7             	mov    %rax,%rdi
    127c:	e8 af fd ff ff       	call   1030 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    1281:	48 8d 05 b0 13 00 00 	lea    0x13b0(%rip),%rax        # 2638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    1288:	48 89 c6             	mov    %rax,%rsi
    128b:	48 8d 05 ee 4d 00 00 	lea    0x4dee(%rip),%rax        # 6080 <_ZSt4cerr@GLIBCXX_3.4>
    1292:	48 89 c7             	mov    %rax,%rdi
    1295:	e8 c6 fd ff ff       	call   1060 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    129a:	48 8b 15 17 4d 00 00 	mov    0x4d17(%rip),%rdx        # 5fb8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    12a1:	48 89 d6             	mov    %rdx,%rsi
    12a4:	48 89 c7             	mov    %rax,%rdi
    12a7:	e8 e4 fd ff ff       	call   1090 <_ZNSolsEPFRSoS_E@plt>
  }
    12ac:	e8 ff fd ff ff       	call   10b0 <__cxa_end_catch@plt>
    12b1:	e9 65 ff ff ff       	jmp    121b <main+0x13>
  } catch (...) {
    12b6:	48 89 c3             	mov    %rax,%rbx
    12b9:	e8 f2 fd ff ff       	call   10b0 <__cxa_end_catch@plt>
    12be:	48 89 d8             	mov    %rbx,%rax
    12c1:	48 89 c7             	mov    %rax,%rdi
    12c4:	e8 f7 fd ff ff       	call   10c0 <_Unwind_Resume@plt>
  }
    12c9:	48 89 c3             	mov    %rax,%rbx
    12cc:	e8 df fd ff ff       	call   10b0 <__cxa_end_catch@plt>
    12d1:	48 89 d8             	mov    %rbx,%rax
    12d4:	48 89 c7             	mov    %rax,%rdi
    12d7:	e8 e4 fd ff ff       	call   10c0 <_Unwind_Resume@plt>
    12dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    12e0:	c9                   	leave
    12e1:	c3                   	ret

00000000000012e2 <_Z41__static_initialization_and_destruction_0ii>:
    12e2:	55                   	push   %rbp
    12e3:	48 89 e5             	mov    %rsp,%rbp
    12e6:	48 83 ec 10          	sub    $0x10,%rsp
    12ea:	89 7d fc             	mov    %edi,-0x4(%rbp)
    12ed:	89 75 f8             	mov    %esi,-0x8(%rbp)
    12f0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    12f4:	75 3b                	jne    1331 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    12f6:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    12fd:	75 32                	jne    1331 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    12ff:	48 8d 05 8b 4e 00 00 	lea    0x4e8b(%rip),%rax        # 6191 <_ZStL8__ioinit>
    1306:	48 89 c7             	mov    %rax,%rdi
    1309:	e8 92 fd ff ff       	call   10a0 <_ZNSt8ios_base4InitC1Ev@plt>
    130e:	48 8d 05 43 4d 00 00 	lea    0x4d43(%rip),%rax        # 6058 <__dso_handle>
    1315:	48 89 c2             	mov    %rax,%rdx
    1318:	48 8d 05 72 4e 00 00 	lea    0x4e72(%rip),%rax        # 6191 <_ZStL8__ioinit>
    131f:	48 89 c6             	mov    %rax,%rsi
    1322:	48 8b 05 b7 4c 00 00 	mov    0x4cb7(%rip),%rax        # 5fe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    1329:	48 89 c7             	mov    %rax,%rdi
    132c:	e8 0f fd ff ff       	call   1040 <__cxa_atexit@plt>
    1331:	90                   	nop
    1332:	c9                   	leave
    1333:	c3                   	ret

0000000000001334 <_GLOBAL__sub_I__Z14protected_mainv>:
    1334:	55                   	push   %rbp
    1335:	48 89 e5             	mov    %rsp,%rbp
    1338:	be ff ff 00 00       	mov    $0xffff,%esi
    133d:	bf 01 00 00 00       	mov    $0x1,%edi
    1342:	e8 9b ff ff ff       	call   12e2 <_Z41__static_initialization_and_destruction_0ii>
    1347:	5d                   	pop    %rbp
    1348:	c3                   	ret
    1349:	90                   	nop

000000000000134a <_ZN4neko6Engine5startEv>:

class Engine {
public:
  Engine() = default;
  ~Engine() = default;
  void start(){};
    134a:	55                   	push   %rbp
    134b:	48 89 e5             	mov    %rsp,%rbp
    134e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1352:	90                   	nop
    1353:	5d                   	pop    %rbp
    1354:	c3                   	ret
    1355:	90                   	nop

0000000000001356 <_ZN4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
namespace neko {

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) {
    1356:	55                   	push   %rbp
    1357:	48 89 e5             	mov    %rsp,%rbp
    135a:	48 83 ec 40          	sub    $0x40,%rsp
    135e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1362:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1366:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    136a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    136e:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    1372:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1376:	48 8d 15 33 1f 00 00 	lea    0x1f33(%rip),%rdx        # 32b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    137d:	48 89 d6             	mov    %rdx,%rsi
    1380:	48 89 c7             	mov    %rax,%rdi
    1383:	e8 c8 fc ff ff       	call   1050 <vkGetInstanceProcAddr@plt>
    1388:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    138c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1391:	74 1c                	je     13af <_ZN4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    1393:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    1397:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    139b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    139f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    13a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13a7:	48 89 c7             	mov    %rax,%rdi
    13aa:	41 ff d0             	call   *%r8
    13ad:	eb 05                	jmp    13b4 <_ZN4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    13af:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    13b4:	c9                   	leave
    13b5:	c3                   	ret

00000000000013b6 <_ZN4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(VkInstance instance,
                                    VkDebugUtilsMessengerEXT debugMessenger,
                                    const VkAllocationCallbacks *pAllocator) {
    13b6:	55                   	push   %rbp
    13b7:	48 89 e5             	mov    %rsp,%rbp
    13ba:	48 83 ec 30          	sub    $0x30,%rsp
    13be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    13c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    13c6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    13ca:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    13ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13d2:	48 8d 15 f7 1e 00 00 	lea    0x1ef7(%rip),%rdx        # 32d0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    13d9:	48 89 d6             	mov    %rdx,%rsi
    13dc:	48 89 c7             	mov    %rax,%rdi
    13df:	e8 6c fc ff ff       	call   1050 <vkGetInstanceProcAddr@plt>
    13e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    13e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    13ed:	74 19                	je     1408 <_ZN4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    13ef:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    13f3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    13f7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    13fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13ff:	48 89 ce             	mov    %rcx,%rsi
    1402:	48 89 c7             	mov    %rax,%rdi
    1405:	41 ff d0             	call   *%r8
  }
}
    1408:	90                   	nop
    1409:	c9                   	leave
    140a:	c3                   	ret

Disassembly of section .fini:

000000000000140c <_fini>:
    140c:	48 83 ec 08          	sub    $0x8,%rsp
    1410:	48 83 c4 08          	add    $0x8,%rsp
    1414:	c3                   	ret
