
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad cf 02 00 	mov    0x2cfad(%rip),%rax        # 30fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca cf 02 00    	push   0x2cfca(%rip)        # 30ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc cf 02 00    	jmp    *0x2cfcc(%rip)        # 30ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca cf 02 00    	jmp    *0x2cfca(%rip)        # 31000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 cf 02 00    	jmp    *0x2cfc2(%rip)        # 31008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba cf 02 00    	jmp    *0x2cfba(%rip)        # 31010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 cf 02 00    	jmp    *0x2cfb2(%rip)        # 31018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa cf 02 00    	jmp    *0x2cfaa(%rip)        # 31020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 cf 02 00    	jmp    *0x2cfa2(%rip)        # 31028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <vkGetBufferMemoryRequirements@plt>:
    4090:	ff 25 9a cf 02 00    	jmp    *0x2cf9a(%rip)        # 31030 <vkGetBufferMemoryRequirements@Base>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    40a0:	ff 25 92 cf 02 00    	jmp    *0x2cf92(%rip)        # 31038 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSolsEm@plt>:
    40b0:	ff 25 8a cf 02 00    	jmp    *0x2cf8a(%rip)        # 31040 <_ZNSolsEm@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDeviceWaitIdle@plt>:
    40c0:	ff 25 82 cf 02 00    	jmp    *0x2cf82(%rip)        # 31048 <vkDeviceWaitIdle@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40d0:	ff 25 7a cf 02 00    	jmp    *0x2cf7a(%rip)        # 31050 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySwapchainKHR@plt>:
    40e0:	ff 25 72 cf 02 00    	jmp    *0x2cf72(%rip)        # 31058 <vkDestroySwapchainKHR@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <vkDestroySemaphore@plt>:
    40f0:	ff 25 6a cf 02 00    	jmp    *0x2cf6a(%rip)        # 31060 <vkDestroySemaphore@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <glfwDestroyWindow@plt>:
    4100:	ff 25 62 cf 02 00    	jmp    *0x2cf62(%rip)        # 31068 <glfwDestroyWindow@Base>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZSt17__throw_bad_allocv@plt>:
    4110:	ff 25 5a cf 02 00    	jmp    *0x2cf5a(%rip)        # 31070 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4120:	ff 25 52 cf 02 00    	jmp    *0x2cf52(%rip)        # 31078 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <_ZNSt13runtime_errorC1EPKc@plt>:
    4130:	ff 25 4a cf 02 00    	jmp    *0x2cf4a(%rip)        # 31080 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <vkGetPhysicalDeviceProperties@plt>:
    4140:	ff 25 42 cf 02 00    	jmp    *0x2cf42(%rip)        # 31088 <vkGetPhysicalDeviceProperties@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkCmdDrawIndexed@plt>:
    4150:	ff 25 3a cf 02 00    	jmp    *0x2cf3a(%rip)        # 31090 <vkCmdDrawIndexed@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <__cxa_begin_catch@plt>:
    4160:	ff 25 32 cf 02 00    	jmp    *0x2cf32(%rip)        # 31098 <__cxa_begin_catch@CXXABI_1.3>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <vkAcquireNextImageKHR@plt>:
    4170:	ff 25 2a cf 02 00    	jmp    *0x2cf2a(%rip)        # 310a0 <vkAcquireNextImageKHR@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <vkCreateCommandPool@plt>:
    4180:	ff 25 22 cf 02 00    	jmp    *0x2cf22(%rip)        # 310a8 <vkCreateCommandPool@Base>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <strlen@plt>:
    4190:	ff 25 1a cf 02 00    	jmp    *0x2cf1a(%rip)        # 310b0 <strlen@GLIBC_2.2.5>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <memcmp@plt>:
    41a0:	ff 25 12 cf 02 00    	jmp    *0x2cf12(%rip)        # 310b8 <memcmp@GLIBC_2.2.5>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <vkCreateGraphicsPipelines@plt>:
    41b0:	ff 25 0a cf 02 00    	jmp    *0x2cf0a(%rip)        # 310c0 <vkCreateGraphicsPipelines@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <__cxa_allocate_exception@plt>:
    41c0:	ff 25 02 cf 02 00    	jmp    *0x2cf02(%rip)        # 310c8 <__cxa_allocate_exception@CXXABI_1.3>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <vkDestroyBuffer@plt>:
    41d0:	ff 25 fa ce 02 00    	jmp    *0x2cefa(%rip)        # 310d0 <vkDestroyBuffer@Base>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <glfwSetWindowUserPointer@plt>:
    41e0:	ff 25 f2 ce 02 00    	jmp    *0x2cef2(%rip)        # 310d8 <glfwSetWindowUserPointer@Base>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZSt20__throw_length_errorPKc@plt>:
    41f0:	ff 25 ea ce 02 00    	jmp    *0x2ceea(%rip)        # 310e0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <vkEnumeratePhysicalDevices@plt>:
    4200:	ff 25 e2 ce 02 00    	jmp    *0x2cee2(%rip)        # 310e8 <vkEnumeratePhysicalDevices@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <memset@plt>:
    4210:	ff 25 da ce 02 00    	jmp    *0x2ceda(%rip)        # 310f0 <memset@GLIBC_2.2.5>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZNSaIcEC1ERKS_@plt>:
    4220:	ff 25 d2 ce 02 00    	jmp    *0x2ced2(%rip)        # 310f8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <vkWaitForFences@plt>:
    4230:	ff 25 ca ce 02 00    	jmp    *0x2ceca(%rip)        # 31100 <vkWaitForFences@Base>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <glfwWaitEvents@plt>:
    4240:	ff 25 c2 ce 02 00    	jmp    *0x2cec2(%rip)        # 31108 <glfwWaitEvents@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <vkGetSwapchainImagesKHR@plt>:
    4250:	ff 25 ba ce 02 00    	jmp    *0x2ceba(%rip)        # 31110 <vkGetSwapchainImagesKHR@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    4260:	ff 25 b2 ce 02 00    	jmp    *0x2ceb2(%rip)        # 31118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4270:	ff 25 aa ce 02 00    	jmp    *0x2ceaa(%rip)        # 31120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <vkCreateRenderPass@plt>:
    4280:	ff 25 a2 ce 02 00    	jmp    *0x2cea2(%rip)        # 31128 <vkCreateRenderPass@Base>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4290:	ff 25 9a ce 02 00    	jmp    *0x2ce9a(%rip)        # 31130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    42a0:	ff 25 92 ce 02 00    	jmp    *0x2ce92(%rip)        # 31138 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    42b0:	ff 25 8a ce 02 00    	jmp    *0x2ce8a(%rip)        # 31140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <_ZSt19__throw_logic_errorPKc@plt>:
    42c0:	ff 25 82 ce 02 00    	jmp    *0x2ce82(%rip)        # 31148 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <__cxa_free_exception@plt>:
    42d0:	ff 25 7a ce 02 00    	jmp    *0x2ce7a(%rip)        # 31150 <__cxa_free_exception@CXXABI_1.3>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <vkFreeCommandBuffers@plt>:
    42e0:	ff 25 72 ce 02 00    	jmp    *0x2ce72(%rip)        # 31158 <vkFreeCommandBuffers@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42f0:	ff 25 6a ce 02 00    	jmp    *0x2ce6a(%rip)        # 31160 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <glfwGetRequiredInstanceExtensions@plt>:
    4300:	ff 25 62 ce 02 00    	jmp    *0x2ce62(%rip)        # 31168 <glfwGetRequiredInstanceExtensions@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4310:	ff 25 5a ce 02 00    	jmp    *0x2ce5a(%rip)        # 31170 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkCreateShaderModule@plt>:
    4320:	ff 25 52 ce 02 00    	jmp    *0x2ce52(%rip)        # 31178 <vkCreateShaderModule@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4330:	ff 25 4a ce 02 00    	jmp    *0x2ce4a(%rip)        # 31180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkUnmapMemory@plt>:
    4340:	ff 25 42 ce 02 00    	jmp    *0x2ce42(%rip)        # 31188 <vkUnmapMemory@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <memcpy@plt>:
    4350:	ff 25 3a ce 02 00    	jmp    *0x2ce3a(%rip)        # 31190 <memcpy@GLIBC_2.14>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkDestroyDevice@plt>:
    4360:	ff 25 32 ce 02 00    	jmp    *0x2ce32(%rip)        # 31198 <vkDestroyDevice@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <vkCreatePipelineLayout@plt>:
    4370:	ff 25 2a ce 02 00    	jmp    *0x2ce2a(%rip)        # 311a0 <vkCreatePipelineLayout@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <vkEnumerateInstanceExtensionProperties@plt>:
    4380:	ff 25 22 ce 02 00    	jmp    *0x2ce22(%rip)        # 311a8 <vkEnumerateInstanceExtensionProperties@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4390:	ff 25 1a ce 02 00    	jmp    *0x2ce1a(%rip)        # 311b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <glfwWindowHint@plt>:
    43a0:	ff 25 12 ce 02 00    	jmp    *0x2ce12(%rip)        # 311b8 <glfwWindowHint@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    43b0:	ff 25 0a ce 02 00    	jmp    *0x2ce0a(%rip)        # 311c0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkCmdBindPipeline@plt>:
    43c0:	ff 25 02 ce 02 00    	jmp    *0x2ce02(%rip)        # 311c8 <vkCmdBindPipeline@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <__cxa_atexit@plt>:
    43d0:	ff 25 fa cd 02 00    	jmp    *0x2cdfa(%rip)        # 311d0 <__cxa_atexit@GLIBC_2.2.5>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    43e0:	ff 25 f2 cd 02 00    	jmp    *0x2cdf2(%rip)        # 311d8 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkMapMemory@plt>:
    43f0:	ff 25 ea cd 02 00    	jmp    *0x2cdea(%rip)        # 311e0 <vkMapMemory@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkFreeMemory@plt>:
    4400:	ff 25 e2 cd 02 00    	jmp    *0x2cde2(%rip)        # 311e8 <vkFreeMemory@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <vkAllocateCommandBuffers@plt>:
    4410:	ff 25 da cd 02 00    	jmp    *0x2cdda(%rip)        # 311f0 <vkAllocateCommandBuffers@Base>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkGetPhysicalDeviceProperties2@plt>:
    4420:	ff 25 d2 cd 02 00    	jmp    *0x2cdd2(%rip)        # 311f8 <vkGetPhysicalDeviceProperties2@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkGetInstanceProcAddr@plt>:
    4430:	ff 25 ca cd 02 00    	jmp    *0x2cdca(%rip)        # 31200 <vkGetInstanceProcAddr@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <glfwPollEvents@plt>:
    4440:	ff 25 c2 cd 02 00    	jmp    *0x2cdc2(%rip)        # 31208 <glfwPollEvents@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <vkDestroyRenderPass@plt>:
    4450:	ff 25 ba cd 02 00    	jmp    *0x2cdba(%rip)        # 31210 <vkDestroyRenderPass@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkCreateBuffer@plt>:
    4460:	ff 25 b2 cd 02 00    	jmp    *0x2cdb2(%rip)        # 31218 <vkCreateBuffer@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4470:	ff 25 aa cd 02 00    	jmp    *0x2cdaa(%rip)        # 31220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_Znwm@plt>:
    4480:	ff 25 a2 cd 02 00    	jmp    *0x2cda2(%rip)        # 31228 <_Znwm@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkBeginCommandBuffer@plt>:
    4490:	ff 25 9a cd 02 00    	jmp    *0x2cd9a(%rip)        # 31230 <vkBeginCommandBuffer@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZdlPvm@plt>:
    44a0:	ff 25 92 cd 02 00    	jmp    *0x2cd92(%rip)        # 31238 <_ZdlPvm@CXXABI_1.3.9>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkDestroyInstance@plt>:
    44b0:	ff 25 8a cd 02 00    	jmp    *0x2cd8a(%rip)        # 31240 <vkDestroyInstance@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <glfwTerminate@plt>:
    44c0:	ff 25 82 cd 02 00    	jmp    *0x2cd82(%rip)        # 31248 <glfwTerminate@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkCreateImageView@plt>:
    44d0:	ff 25 7a cd 02 00    	jmp    *0x2cd7a(%rip)        # 31250 <vkCreateImageView@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    44e0:	ff 25 72 cd 02 00    	jmp    *0x2cd72(%rip)        # 31258 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSolsEPFRSoS_E@plt>:
    44f0:	ff 25 6a cd 02 00    	jmp    *0x2cd6a(%rip)        # 31260 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4500:	ff 25 62 cd 02 00    	jmp    *0x2cd62(%rip)        # 31268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4510:	ff 25 5a cd 02 00    	jmp    *0x2cd5a(%rip)        # 31270 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4520:	ff 25 52 cd 02 00    	jmp    *0x2cd52(%rip)        # 31278 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSaIcED1Ev@plt>:
    4530:	ff 25 4a cd 02 00    	jmp    *0x2cd4a(%rip)        # 31280 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkDestroyFence@plt>:
    4540:	ff 25 42 cd 02 00    	jmp    *0x2cd42(%rip)        # 31288 <vkDestroyFence@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkDestroyPipeline@plt>:
    4550:	ff 25 3a cd 02 00    	jmp    *0x2cd3a(%rip)        # 31290 <vkDestroyPipeline@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4560:	ff 25 32 cd 02 00    	jmp    *0x2cd32(%rip)        # 31298 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4570:	ff 25 2a cd 02 00    	jmp    *0x2cd2a(%rip)        # 312a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkEnumerateInstanceLayerProperties@plt>:
    4580:	ff 25 22 cd 02 00    	jmp    *0x2cd22(%rip)        # 312a8 <vkEnumerateInstanceLayerProperties@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <glfwInit@plt>:
    4590:	ff 25 1a cd 02 00    	jmp    *0x2cd1a(%rip)        # 312b0 <glfwInit@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    45a0:	ff 25 12 cd 02 00    	jmp    *0x2cd12(%rip)        # 312b8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkBindBufferMemory@plt>:
    45b0:	ff 25 0a cd 02 00    	jmp    *0x2cd0a(%rip)        # 312c0 <vkBindBufferMemory@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkCreateSwapchainKHR@plt>:
    45c0:	ff 25 02 cd 02 00    	jmp    *0x2cd02(%rip)        # 312c8 <vkCreateSwapchainKHR@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    45d0:	ff 25 fa cc 02 00    	jmp    *0x2ccfa(%rip)        # 312d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkDestroyShaderModule@plt>:
    45e0:	ff 25 f2 cc 02 00    	jmp    *0x2ccf2(%rip)        # 312d8 <vkDestroyShaderModule@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkCreateInstance@plt>:
    45f0:	ff 25 ea cc 02 00    	jmp    *0x2ccea(%rip)        # 312e0 <vkCreateInstance@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4600:	ff 25 e2 cc 02 00    	jmp    *0x2cce2(%rip)        # 312e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkCreateFence@plt>:
    4610:	ff 25 da cc 02 00    	jmp    *0x2ccda(%rip)        # 312f0 <vkCreateFence@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <vkResetCommandBuffer@plt>:
    4620:	ff 25 d2 cc 02 00    	jmp    *0x2ccd2(%rip)        # 312f8 <vkResetCommandBuffer@Base>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <vkDestroyPipelineLayout@plt>:
    4630:	ff 25 ca cc 02 00    	jmp    *0x2ccca(%rip)        # 31300 <vkDestroyPipelineLayout@Base>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSi4readEPcl@plt>:
    4640:	ff 25 c2 cc 02 00    	jmp    *0x2ccc2(%rip)        # 31308 <_ZNSi4readEPcl@GLIBCXX_3.4>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4650:	ff 25 ba cc 02 00    	jmp    *0x2ccba(%rip)        # 31310 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4660:	ff 25 b2 cc 02 00    	jmp    *0x2ccb2(%rip)        # 31318 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4670:	ff 25 aa cc 02 00    	jmp    *0x2ccaa(%rip)        # 31320 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkQueueSubmit@plt>:
    4680:	ff 25 a2 cc 02 00    	jmp    *0x2cca2(%rip)        # 31328 <vkQueueSubmit@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <vkGetDeviceQueue@plt>:
    4690:	ff 25 9a cc 02 00    	jmp    *0x2cc9a(%rip)        # 31330 <vkGetDeviceQueue@Base>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <_ZNSolsEj@plt>:
    46a0:	ff 25 92 cc 02 00    	jmp    *0x2cc92(%rip)        # 31338 <_ZNSolsEj@GLIBCXX_3.4>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <vkCreateFramebuffer@plt>:
    46b0:	ff 25 8a cc 02 00    	jmp    *0x2cc8a(%rip)        # 31340 <vkCreateFramebuffer@Base>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <glfwGetWindowUserPointer@plt>:
    46c0:	ff 25 82 cc 02 00    	jmp    *0x2cc82(%rip)        # 31348 <glfwGetWindowUserPointer@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    46d0:	ff 25 7a cc 02 00    	jmp    *0x2cc7a(%rip)        # 31350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    46e0:	ff 25 72 cc 02 00    	jmp    *0x2cc72(%rip)        # 31358 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <vkEnumerateDeviceExtensionProperties@plt>:
    46f0:	ff 25 6a cc 02 00    	jmp    *0x2cc6a(%rip)        # 31360 <vkEnumerateDeviceExtensionProperties@Base>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <vkCreateSemaphore@plt>:
    4700:	ff 25 62 cc 02 00    	jmp    *0x2cc62(%rip)        # 31368 <vkCreateSemaphore@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkCmdBeginRenderPass@plt>:
    4710:	ff 25 5a cc 02 00    	jmp    *0x2cc5a(%rip)        # 31370 <vkCmdBeginRenderPass@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <vkDestroyCommandPool@plt>:
    4720:	ff 25 52 cc 02 00    	jmp    *0x2cc52(%rip)        # 31378 <vkDestroyCommandPool@Base>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <vkCmdBindIndexBuffer@plt>:
    4730:	ff 25 4a cc 02 00    	jmp    *0x2cc4a(%rip)        # 31380 <vkCmdBindIndexBuffer@Base>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <vkCmdBindVertexBuffers@plt>:
    4740:	ff 25 42 cc 02 00    	jmp    *0x2cc42(%rip)        # 31388 <vkCmdBindVertexBuffers@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSaIcEC2ERKS_@plt>:
    4750:	ff 25 3a cc 02 00    	jmp    *0x2cc3a(%rip)        # 31390 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <vkCmdCopyBuffer@plt>:
    4760:	ff 25 32 cc 02 00    	jmp    *0x2cc32(%rip)        # 31398 <vkCmdCopyBuffer@Base>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <__cxa_rethrow@plt>:
    4770:	ff 25 2a cc 02 00    	jmp    *0x2cc2a(%rip)        # 313a0 <__cxa_rethrow@CXXABI_1.3>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <vkCreateDevice@plt>:
    4780:	ff 25 22 cc 02 00    	jmp    *0x2cc22(%rip)        # 313a8 <vkCreateDevice@Base>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <glfwSetFramebufferSizeCallback@plt>:
    4790:	ff 25 1a cc 02 00    	jmp    *0x2cc1a(%rip)        # 313b0 <glfwSetFramebufferSizeCallback@Base>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <_ZNSt8ios_base4InitC1Ev@plt>:
    47a0:	ff 25 12 cc 02 00    	jmp    *0x2cc12(%rip)        # 313b8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <glfwCreateWindowSurface@plt>:
    47b0:	ff 25 0a cc 02 00    	jmp    *0x2cc0a(%rip)        # 313c0 <glfwCreateWindowSurface@Base>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <vkResetFences@plt>:
    47c0:	ff 25 02 cc 02 00    	jmp    *0x2cc02(%rip)        # 313c8 <vkResetFences@Base>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <glfwCreateWindow@plt>:
    47d0:	ff 25 fa cb 02 00    	jmp    *0x2cbfa(%rip)        # 313d0 <glfwCreateWindow@Base>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    47e0:	ff 25 f2 cb 02 00    	jmp    *0x2cbf2(%rip)        # 313d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <vkQueuePresentKHR@plt>:
    47f0:	ff 25 ea cb 02 00    	jmp    *0x2cbea(%rip)        # 313e0 <vkQueuePresentKHR@Base>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <vkGetPhysicalDeviceMemoryProperties@plt>:
    4800:	ff 25 e2 cb 02 00    	jmp    *0x2cbe2(%rip)        # 313e8 <vkGetPhysicalDeviceMemoryProperties@Base>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <glfwGetFramebufferSize@plt>:
    4810:	ff 25 da cb 02 00    	jmp    *0x2cbda(%rip)        # 313f0 <glfwGetFramebufferSize@Base>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4820:	ff 25 d2 cb 02 00    	jmp    *0x2cbd2(%rip)        # 313f8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4830:	ff 25 ca cb 02 00    	jmp    *0x2cbca(%rip)        # 31400 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4840:	ff 25 c2 cb 02 00    	jmp    *0x2cbc2(%rip)        # 31408 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <memmove@plt>:
    4850:	ff 25 ba cb 02 00    	jmp    *0x2cbba(%rip)        # 31410 <memmove@GLIBC_2.2.5>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <__cxa_end_catch@plt>:
    4860:	ff 25 b2 cb 02 00    	jmp    *0x2cbb2(%rip)        # 31418 <__cxa_end_catch@CXXABI_1.3>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <vkAllocateMemory@plt>:
    4870:	ff 25 aa cb 02 00    	jmp    *0x2cbaa(%rip)        # 31420 <vkAllocateMemory@Base>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <vkDestroyFramebuffer@plt>:
    4880:	ff 25 a2 cb 02 00    	jmp    *0x2cba2(%rip)        # 31428 <vkDestroyFramebuffer@Base>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <__cxa_throw@plt>:
    4890:	ff 25 9a cb 02 00    	jmp    *0x2cb9a(%rip)        # 31430 <__cxa_throw@CXXABI_1.3>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    48a0:	ff 25 92 cb 02 00    	jmp    *0x2cb92(%rip)        # 31438 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    48a6:	68 87 00 00 00       	push   $0x87
    48ab:	e9 70 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    48b0:	ff 25 8a cb 02 00    	jmp    *0x2cb8a(%rip)        # 31440 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    48b6:	68 88 00 00 00       	push   $0x88
    48bb:	e9 60 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048c0 <_ZNSolsEi@plt>:
    48c0:	ff 25 82 cb 02 00    	jmp    *0x2cb82(%rip)        # 31448 <_ZNSolsEi@GLIBCXX_3.4>
    48c6:	68 89 00 00 00       	push   $0x89
    48cb:	e9 50 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048d0 <_ZNSi5tellgEv@plt>:
    48d0:	ff 25 7a cb 02 00    	jmp    *0x2cb7a(%rip)        # 31450 <_ZNSi5tellgEv@GLIBCXX_3.4>
    48d6:	68 8a 00 00 00       	push   $0x8a
    48db:	e9 40 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048e0 <vkQueueWaitIdle@plt>:
    48e0:	ff 25 72 cb 02 00    	jmp    *0x2cb72(%rip)        # 31458 <vkQueueWaitIdle@Base>
    48e6:	68 8b 00 00 00       	push   $0x8b
    48eb:	e9 30 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048f0 <vkDestroySurfaceKHR@plt>:
    48f0:	ff 25 6a cb 02 00    	jmp    *0x2cb6a(%rip)        # 31460 <vkDestroySurfaceKHR@Base>
    48f6:	68 8c 00 00 00       	push   $0x8c
    48fb:	e9 20 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004900 <_Unwind_Resume@plt>:
    4900:	ff 25 62 cb 02 00    	jmp    *0x2cb62(%rip)        # 31468 <_Unwind_Resume@GCC_3.0>
    4906:	68 8d 00 00 00       	push   $0x8d
    490b:	e9 10 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004910 <_ZNSaIcEC1Ev@plt>:
    4910:	ff 25 5a cb 02 00    	jmp    *0x2cb5a(%rip)        # 31470 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4916:	68 8e 00 00 00       	push   $0x8e
    491b:	e9 00 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004920 <vkDestroyImageView@plt>:
    4920:	ff 25 52 cb 02 00    	jmp    *0x2cb52(%rip)        # 31478 <vkDestroyImageView@Base>
    4926:	68 8f 00 00 00       	push   $0x8f
    492b:	e9 f0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4930:	ff 25 4a cb 02 00    	jmp    *0x2cb4a(%rip)        # 31480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4936:	68 90 00 00 00       	push   $0x90
    493b:	e9 e0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004940 <_ZNSt9exceptionD2Ev@plt>:
    4940:	ff 25 42 cb 02 00    	jmp    *0x2cb42(%rip)        # 31488 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4946:	68 91 00 00 00       	push   $0x91
    494b:	e9 d0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004950 <glfwWindowShouldClose@plt>:
    4950:	ff 25 3a cb 02 00    	jmp    *0x2cb3a(%rip)        # 31490 <glfwWindowShouldClose@Base>
    4956:	68 92 00 00 00       	push   $0x92
    495b:	e9 c0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004960 <vkEndCommandBuffer@plt>:
    4960:	ff 25 32 cb 02 00    	jmp    *0x2cb32(%rip)        # 31498 <vkEndCommandBuffer@Base>
    4966:	68 93 00 00 00       	push   $0x93
    496b:	e9 b0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004970 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4970:	ff 25 2a cb 02 00    	jmp    *0x2cb2a(%rip)        # 314a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4976:	68 94 00 00 00       	push   $0x94
    497b:	e9 a0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4980:	ff 25 22 cb 02 00    	jmp    *0x2cb22(%rip)        # 314a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4986:	68 95 00 00 00       	push   $0x95
    498b:	e9 90 f6 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004990 <__cxa_finalize@plt>:
    4990:	ff 25 fa c5 02 00    	jmp    *0x2c5fa(%rip)        # 30f90 <__cxa_finalize@GLIBC_2.2.5>
    4996:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000049a0 <_start>:
    49a0:	31 ed                	xor    %ebp,%ebp
    49a2:	49 89 d1             	mov    %rdx,%r9
    49a5:	5e                   	pop    %rsi
    49a6:	48 89 e2             	mov    %rsp,%rdx
    49a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    49ad:	50                   	push   %rax
    49ae:	54                   	push   %rsp
    49af:	45 31 c0             	xor    %r8d,%r8d
    49b2:	31 c9                	xor    %ecx,%ecx
    49b4:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4b64 <main>
    49bb:	ff 15 df c5 02 00    	call   *0x2c5df(%rip)        # 30fa0 <__libc_start_main@GLIBC_2.34>
    49c1:	f4                   	hlt
    49c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    49c9:	00 00 00 
    49cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000049d0 <deregister_tm_clones>:
    49d0:	48 8d 3d f9 ca 02 00 	lea    0x2caf9(%rip),%rdi        # 314d0 <__TMC_END__>
    49d7:	48 8d 05 f2 ca 02 00 	lea    0x2caf2(%rip),%rax        # 314d0 <__TMC_END__>
    49de:	48 39 f8             	cmp    %rdi,%rax
    49e1:	74 15                	je     49f8 <deregister_tm_clones+0x28>
    49e3:	48 8b 05 c6 c5 02 00 	mov    0x2c5c6(%rip),%rax        # 30fb0 <_ITM_deregisterTMCloneTable@Base>
    49ea:	48 85 c0             	test   %rax,%rax
    49ed:	74 09                	je     49f8 <deregister_tm_clones+0x28>
    49ef:	ff e0                	jmp    *%rax
    49f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    49f8:	c3                   	ret
    49f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a00 <register_tm_clones>:
    4a00:	48 8d 3d c9 ca 02 00 	lea    0x2cac9(%rip),%rdi        # 314d0 <__TMC_END__>
    4a07:	48 8d 35 c2 ca 02 00 	lea    0x2cac2(%rip),%rsi        # 314d0 <__TMC_END__>
    4a0e:	48 29 fe             	sub    %rdi,%rsi
    4a11:	48 89 f0             	mov    %rsi,%rax
    4a14:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4a18:	48 c1 f8 03          	sar    $0x3,%rax
    4a1c:	48 01 c6             	add    %rax,%rsi
    4a1f:	48 d1 fe             	sar    %rsi
    4a22:	74 14                	je     4a38 <register_tm_clones+0x38>
    4a24:	48 8b 05 95 c5 02 00 	mov    0x2c595(%rip),%rax        # 30fc0 <_ITM_registerTMCloneTable@Base>
    4a2b:	48 85 c0             	test   %rax,%rax
    4a2e:	74 08                	je     4a38 <register_tm_clones+0x38>
    4a30:	ff e0                	jmp    *%rax
    4a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4a38:	c3                   	ret
    4a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a40 <__do_global_dtors_aux>:
    4a40:	f3 0f 1e fa          	endbr64
    4a44:	80 3d a5 cb 02 00 00 	cmpb   $0x0,0x2cba5(%rip)        # 315f0 <completed.0>
    4a4b:	75 2b                	jne    4a78 <__do_global_dtors_aux+0x38>
    4a4d:	55                   	push   %rbp
    4a4e:	48 83 3d 3a c5 02 00 	cmpq   $0x0,0x2c53a(%rip)        # 30f90 <__cxa_finalize@GLIBC_2.2.5>
    4a55:	00 
    4a56:	48 89 e5             	mov    %rsp,%rbp
    4a59:	74 0c                	je     4a67 <__do_global_dtors_aux+0x27>
    4a5b:	48 8b 3d 56 ca 02 00 	mov    0x2ca56(%rip),%rdi        # 314b8 <__dso_handle>
    4a62:	e8 29 ff ff ff       	call   4990 <__cxa_finalize@plt>
    4a67:	e8 64 ff ff ff       	call   49d0 <deregister_tm_clones>
    4a6c:	c6 05 7d cb 02 00 01 	movb   $0x1,0x2cb7d(%rip)        # 315f0 <completed.0>
    4a73:	5d                   	pop    %rbp
    4a74:	c3                   	ret
    4a75:	0f 1f 00             	nopl   (%rax)
    4a78:	c3                   	ret
    4a79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a80 <frame_dummy>:
    4a80:	f3 0f 1e fa          	endbr64
    4a84:	e9 77 ff ff ff       	jmp    4a00 <register_tm_clones>

0000000000004a89 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

// #include <typeinfo>

int protected_main() {
    4a89:	55                   	push   %rbp
    4a8a:	48 89 e5             	mov    %rsp,%rbp
    4a8d:	53                   	push   %rbx
    4a8e:	48 81 ec f8 01 00 00 	sub    $0x1f8,%rsp
  VulkanApp app;
    4a95:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4a9c:	48 89 c7             	mov    %rax,%rdi
    4a9f:	e8 c4 d2 00 00       	call   11d68 <_ZN9VulkanAppC1Ev>
  app.run();
    4aa4:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4aab:	48 89 c7             	mov    %rax,%rdi
    4aae:	e8 a7 d8 00 00       	call   1235a <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4ab3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ab7:	48 89 c7             	mov    %rax,%rdi
    4aba:	e8 51 fe ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    4abf:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4ac3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ac7:	48 8d 0d 6a 8b 01 00 	lea    0x18b6a(%rip),%rcx        # 1d638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    4ace:	48 89 ce             	mov    %rcx,%rsi
    4ad1:	48 89 c7             	mov    %rax,%rdi
    4ad4:	e8 75 06 00 00       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4ad9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4add:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4ae4:	48 89 d6             	mov    %rdx,%rsi
    4ae7:	48 89 c7             	mov    %rax,%rdi
    4aea:	e8 b5 d8 00 00       	call   123a4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4aef:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4af3:	48 89 c7             	mov    %rax,%rdi
    4af6:	e8 75 f7 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4afb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4aff:	48 89 c7             	mov    %rax,%rdi
    4b02:	e8 29 fa ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4b07:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4b0c:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4b13:	48 89 c7             	mov    %rax,%rdi
    4b16:	e8 a5 d5 00 00       	call   120c0 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    4b1b:	89 d8                	mov    %ebx,%eax
    4b1d:	eb 3f                	jmp    4b5e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    4b1f:	48 89 c3             	mov    %rax,%rbx
    4b22:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4b26:	48 89 c7             	mov    %rax,%rdi
    4b29:	e8 42 f7 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b2e:	eb 03                	jmp    4b33 <_Z14protected_mainv+0xaa>
    4b30:	48 89 c3             	mov    %rax,%rbx
    4b33:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4b37:	48 89 c7             	mov    %rax,%rdi
    4b3a:	e8 f1 f9 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    4b3f:	eb 03                	jmp    4b44 <_Z14protected_mainv+0xbb>
}
    4b41:	48 89 c3             	mov    %rax,%rbx
    4b44:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    4b4b:	48 89 c7             	mov    %rax,%rdi
    4b4e:	e8 6d d5 00 00       	call   120c0 <_ZN9VulkanAppD1Ev>
    4b53:	48 89 d8             	mov    %rbx,%rax
    4b56:	48 89 c7             	mov    %rax,%rdi
    4b59:	e8 a2 fd ff ff       	call   4900 <_Unwind_Resume@plt>
    4b5e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b62:	c9                   	leave
    4b63:	c3                   	ret

0000000000004b64 <main>:

int main() {
    4b64:	55                   	push   %rbp
    4b65:	48 89 e5             	mov    %rsp,%rbp
    4b68:	53                   	push   %rbx
    4b69:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    4b6d:	e8 17 ff ff ff       	call   4a89 <_Z14protected_mainv>
    4b72:	e9 aa 00 00 00       	jmp    4c21 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4b77:	b8 01 00 00 00       	mov    $0x1,%eax
    4b7c:	e9 a0 00 00 00       	jmp    4c21 <main+0xbd>
  } catch (const std::exception &e) {
    4b81:	48 83 fa 01          	cmp    $0x1,%rdx
    4b85:	75 49                	jne    4bd0 <main+0x6c>
    4b87:	48 89 c7             	mov    %rax,%rdi
    4b8a:	e8 d1 f5 ff ff       	call   4160 <__cxa_begin_catch@plt>
    4b8f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b97:	48 8b 00             	mov    (%rax),%rax
    4b9a:	48 83 c0 10          	add    $0x10,%rax
    4b9e:	48 8b 10             	mov    (%rax),%rdx
    4ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ba5:	48 89 c7             	mov    %rax,%rdi
    4ba8:	ff d2                	call   *%rdx
    4baa:	48 89 c6             	mov    %rax,%rsi
    4bad:	48 8d 05 2c c9 02 00 	lea    0x2c92c(%rip),%rax        # 314e0 <_ZSt4cerr@GLIBCXX_3.4>
    4bb4:	48 89 c7             	mov    %rax,%rdi
    4bb7:	e8 b4 f8 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4bbc:	be 0a 00 00 00       	mov    $0xa,%esi
    4bc1:	48 89 c7             	mov    %rax,%rdi
    4bc4:	e8 d7 f9 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4bc9:	e8 92 fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4bce:	eb a7                	jmp    4b77 <main+0x13>
    4bd0:	48 89 c7             	mov    %rax,%rdi
    4bd3:	e8 88 f5 ff ff       	call   4160 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4bd8:	48 8d 05 62 8a 01 00 	lea    0x18a62(%rip),%rax        # 1d641 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x11>
    4bdf:	48 89 c6             	mov    %rax,%rsi
    4be2:	48 8d 05 f7 c8 02 00 	lea    0x2c8f7(%rip),%rax        # 314e0 <_ZSt4cerr@GLIBCXX_3.4>
    4be9:	48 89 c7             	mov    %rax,%rdi
    4bec:	e8 7f f8 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4bf1:	e8 6a fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4bf6:	e9 7c ff ff ff       	jmp    4b77 <main+0x13>
  } catch (...) {
    4bfb:	48 89 c3             	mov    %rax,%rbx
    4bfe:	e8 5d fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4c03:	48 89 d8             	mov    %rbx,%rax
    4c06:	48 89 c7             	mov    %rax,%rdi
    4c09:	e8 f2 fc ff ff       	call   4900 <_Unwind_Resume@plt>
  }
    4c0e:	48 89 c3             	mov    %rax,%rbx
    4c11:	e8 4a fc ff ff       	call   4860 <__cxa_end_catch@plt>
    4c16:	48 89 d8             	mov    %rbx,%rax
    4c19:	48 89 c7             	mov    %rax,%rdi
    4c1c:	e8 df fc ff ff       	call   4900 <_Unwind_Resume@plt>
    4c21:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c25:	c9                   	leave
    4c26:	c3                   	ret

0000000000004c27 <_Z41__static_initialization_and_destruction_0ii>:
    4c27:	55                   	push   %rbp
    4c28:	48 89 e5             	mov    %rsp,%rbp
    4c2b:	41 57                	push   %r15
    4c2d:	41 56                	push   %r14
    4c2f:	41 55                	push   %r13
    4c31:	41 54                	push   %r12
    4c33:	53                   	push   %rbx
    4c34:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    4c3b:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
    4c41:	89 b5 58 ff ff ff    	mov    %esi,-0xa8(%rbp)
    4c47:	83 bd 5c ff ff ff 01 	cmpl   $0x1,-0xa4(%rbp)
    4c4e:	0f 85 92 02 00 00    	jne    4ee6 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
    4c54:	81 bd 58 ff ff ff ff 	cmpl   $0xffff,-0xa8(%rbp)
    4c5b:	ff 00 00 
    4c5e:	0f 85 82 02 00 00    	jne    4ee6 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4c64:	48 8d 05 95 c9 02 00 	lea    0x2c995(%rip),%rax        # 31600 <_ZStL8__ioinit>
    4c6b:	48 89 c7             	mov    %rax,%rdi
    4c6e:	e8 2d fb ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
    4c73:	48 8d 05 3e c8 02 00 	lea    0x2c83e(%rip),%rax        # 314b8 <__dso_handle>
    4c7a:	48 89 c2             	mov    %rax,%rdx
    4c7d:	48 8d 05 7c c9 02 00 	lea    0x2c97c(%rip),%rax        # 31600 <_ZStL8__ioinit>
    4c84:	48 89 c6             	mov    %rax,%rsi
    4c87:	48 8b 05 3a c3 02 00 	mov    0x2c33a(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4c8e:	48 89 c7             	mov    %rax,%rdi
    4c91:	e8 3a f7 ff ff       	call   43d0 <__cxa_atexit@plt>
#include <vector>
#include <vkh.hpp>

namespace shader {

const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
    4c96:	66 c7 85 62 ff ff ff 	movw   $0x0,-0x9e(%rbp)
    4c9d:	00 00 
    4c9f:	66 c7 85 64 ff ff ff 	movw   $0x1,-0x9c(%rbp)
    4ca6:	01 00 
    4ca8:	66 c7 85 66 ff ff ff 	movw   $0x2,-0x9a(%rbp)
    4caf:	02 00 
    4cb1:	66 c7 85 68 ff ff ff 	movw   $0x2,-0x98(%rbp)
    4cb8:	02 00 
    4cba:	66 c7 85 6a ff ff ff 	movw   $0x3,-0x96(%rbp)
    4cc1:	03 00 
    4cc3:	66 c7 85 6c ff ff ff 	movw   $0x0,-0x94(%rbp)
    4cca:	00 00 
    4ccc:	48 8d 85 62 ff ff ff 	lea    -0x9e(%rbp),%rax
    4cd3:	49 89 c6             	mov    %rax,%r14
    4cd6:	41 bf 06 00 00 00    	mov    $0x6,%r15d
    4cdc:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4ce3:	48 89 c7             	mov    %rax,%rdi
    4ce6:	e8 e3 02 00 00       	call   4fce <_ZNSaItEC1Ev>
    4ceb:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4cf2:	4c 89 f6             	mov    %r14,%rsi
    4cf5:	4c 89 ff             	mov    %r15,%rdi
    4cf8:	4c 89 f1             	mov    %r14,%rcx
    4cfb:	4c 89 fb             	mov    %r15,%rbx
    4cfe:	48 89 da             	mov    %rbx,%rdx
    4d01:	48 89 c1             	mov    %rax,%rcx
    4d04:	48 8d 05 05 c9 02 00 	lea    0x2c905(%rip),%rax        # 31610 <_ZN6shaderL16triangle_indicesE>
    4d0b:	48 89 c7             	mov    %rax,%rdi
    4d0e:	e8 f3 02 00 00       	call   5006 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
    4d13:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4d1a:	48 89 c7             	mov    %rax,%rdi
    4d1d:	e8 c8 02 00 00       	call   4fea <_ZNSaItED1Ev>
    4d22:	48 8d 05 8f c7 02 00 	lea    0x2c78f(%rip),%rax        # 314b8 <__dso_handle>
    4d29:	48 89 c2             	mov    %rax,%rdx
    4d2c:	48 8d 05 dd c8 02 00 	lea    0x2c8dd(%rip),%rax        # 31610 <_ZN6shaderL16triangle_indicesE>
    4d33:	48 89 c6             	mov    %rax,%rsi
    4d36:	48 8d 05 f9 14 00 00 	lea    0x14f9(%rip),%rax        # 6236 <_ZNSt6vectorItSaItEED1Ev>
    4d3d:	48 89 c7             	mov    %rax,%rdi
    4d40:	e8 8b f6 ff ff       	call   43d0 <__cxa_atexit@plt>
const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
    {{-0.5f, -0.5f}, {1.0f, 0.0f, 0.0f}},
    {{0.5f, -0.5f}, {0.0f, 1.0f, 0.0f}},
    {{0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}},
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
    4d45:	f3 0f 10 05 77 89 01 	movss  0x18977(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4d4c:	00 
    4d4d:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
    4d54:	ff 
    4d55:	f3 0f 10 05 67 89 01 	movss  0x18967(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4d5c:	00 
    4d5d:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
    4d64:	ff 
    4d65:	f3 0f 10 05 5b 89 01 	movss  0x1895b(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4d6c:	00 
    4d6d:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
    4d74:	ff 
    4d75:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4d79:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
    4d80:	ff 
    4d81:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4d85:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    4d8a:	f3 0f 10 05 3a 89 01 	movss  0x1893a(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4d91:	00 
    4d92:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    4d97:	f3 0f 10 05 25 89 01 	movss  0x18925(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4d9e:	00 
    4d9f:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    4da4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4da8:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
    4dad:	f3 0f 10 05 13 89 01 	movss  0x18913(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4db4:	00 
    4db5:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
    4dba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4dbe:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
    4dc3:	f3 0f 10 05 01 89 01 	movss  0x18901(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4dca:	00 
    4dcb:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
    4dd0:	f3 0f 10 05 f4 88 01 	movss  0x188f4(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4dd7:	00 
    4dd8:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
    4ddd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4de1:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    4de6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4dea:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    4def:	f3 0f 10 05 d1 88 01 	movss  0x188d1(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4df6:	00 
    4df7:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    4dfc:	f3 0f 10 05 c0 88 01 	movss  0x188c0(%rip),%xmm0        # 1d6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4e03:	00 
    4e04:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    4e09:	f3 0f 10 05 bb 88 01 	movss  0x188bb(%rip),%xmm0        # 1d6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4e10:	00 
    4e11:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    4e16:	f3 0f 10 05 aa 88 01 	movss  0x188aa(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4e1d:	00 
    4e1e:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    4e23:	f3 0f 10 05 9d 88 01 	movss  0x1889d(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4e2a:	00 
    4e2b:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    4e30:	f3 0f 10 05 90 88 01 	movss  0x18890(%rip),%xmm0        # 1d6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4e37:	00 
    4e38:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    4e3d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    4e44:	49 89 c4             	mov    %rax,%r12
    4e47:	41 bd 04 00 00 00    	mov    $0x4,%r13d
    4e4d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4e51:	48 89 c7             	mov    %rax,%rdi
    4e54:	e8 35 02 00 00       	call   508e <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
    4e59:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4e5d:	4c 89 e6             	mov    %r12,%rsi
    4e60:	4c 89 ef             	mov    %r13,%rdi
    4e63:	4c 89 e1             	mov    %r12,%rcx
    4e66:	4c 89 eb             	mov    %r13,%rbx
    4e69:	48 89 da             	mov    %rbx,%rdx
    4e6c:	48 89 c1             	mov    %rax,%rcx
    4e6f:	48 8d 05 ba c7 02 00 	lea    0x2c7ba(%rip),%rax        # 31630 <_ZN6shaderL19triangle_index_dataE>
    4e76:	48 89 c7             	mov    %rax,%rdi
    4e79:	e8 48 02 00 00       	call   50c6 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
    4e7e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4e82:	48 89 c7             	mov    %rax,%rdi
    4e85:	e8 20 02 00 00       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
    4e8a:	48 8d 05 27 c6 02 00 	lea    0x2c627(%rip),%rax        # 314b8 <__dso_handle>
    4e91:	48 89 c2             	mov    %rax,%rdx
    4e94:	48 8d 05 95 c7 02 00 	lea    0x2c795(%rip),%rax        # 31630 <_ZN6shaderL19triangle_index_dataE>
    4e9b:	48 89 c6             	mov    %rax,%rsi
    4e9e:	48 8d 05 d5 13 00 00 	lea    0x13d5(%rip),%rax        # 627a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    4ea5:	48 89 c7             	mov    %rax,%rdi
    4ea8:	e8 23 f5 ff ff       	call   43d0 <__cxa_atexit@plt>
    4ead:	eb 37                	jmp    4ee6 <_Z41__static_initialization_and_destruction_0ii+0x2bf>
const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
    4eaf:	48 89 c3             	mov    %rax,%rbx
    4eb2:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    4eb9:	48 89 c7             	mov    %rax,%rdi
    4ebc:	e8 29 01 00 00       	call   4fea <_ZNSaItED1Ev>
    4ec1:	48 89 d8             	mov    %rbx,%rax
    4ec4:	48 89 c7             	mov    %rax,%rdi
    4ec7:	e8 34 fa ff ff       	call   4900 <_Unwind_Resume@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
    4ecc:	48 89 c3             	mov    %rax,%rbx
    4ecf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4ed3:	48 89 c7             	mov    %rax,%rdi
    4ed6:	e8 cf 01 00 00       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    4edb:	48 89 d8             	mov    %rbx,%rax
    4ede:	48 89 c7             	mov    %rax,%rdi
    4ee1:	e8 1a fa ff ff       	call   4900 <_Unwind_Resume@plt>
    4ee6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    4eed:	5b                   	pop    %rbx
    4eee:	41 5c                	pop    %r12
    4ef0:	41 5d                	pop    %r13
    4ef2:	41 5e                	pop    %r14
    4ef4:	41 5f                	pop    %r15
    4ef6:	5d                   	pop    %rbp
    4ef7:	c3                   	ret

0000000000004ef8 <_GLOBAL__sub_I__Z14protected_mainv>:
    4ef8:	55                   	push   %rbp
    4ef9:	48 89 e5             	mov    %rsp,%rbp
    4efc:	be ff ff 00 00       	mov    $0xffff,%esi
    4f01:	bf 01 00 00 00       	mov    $0x1,%edi
    4f06:	e8 1c fd ff ff       	call   4c27 <_Z41__static_initialization_and_destruction_0ii>
    4f0b:	5d                   	pop    %rbp
    4f0c:	c3                   	ret

0000000000004f0d <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4f0d:	55                   	push   %rbp
    4f0e:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4f11:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4f16:	5d                   	pop    %rbp
    4f17:	c3                   	ret

0000000000004f18 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4f18:	55                   	push   %rbp
    4f19:	48 89 e5             	mov    %rsp,%rbp
    4f1c:	48 83 ec 10          	sub    $0x10,%rsp
    4f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4f24:	e8 e4 ff ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
    4f29:	84 c0                	test   %al,%al
    4f2b:	74 0e                	je     4f3b <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f31:	48 89 c7             	mov    %rax,%rdi
    4f34:	e8 11 00 00 00       	call   4f4a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4f39:	eb 0d                	jmp    4f48 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f3f:	48 89 c7             	mov    %rax,%rdi
    4f42:	e8 49 f2 ff ff       	call   4190 <strlen@plt>
    4f47:	90                   	nop
      }
    4f48:	c9                   	leave
    4f49:	c3                   	ret

0000000000004f4a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	48 83 ec 20          	sub    $0x20,%rsp
    4f52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4f56:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4f5d:	00 
      while (!eq(__p[__i], char_type()))
    4f5e:	eb 05                	jmp    4f65 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4f60:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4f65:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4f69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f71:	48 01 c2             	add    %rax,%rdx
    4f74:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4f78:	48 89 c6             	mov    %rax,%rsi
    4f7b:	48 89 d7             	mov    %rdx,%rdi
    4f7e:	e8 0d 00 00 00       	call   4f90 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4f83:	83 f0 01             	xor    $0x1,%eax
    4f86:	84 c0                	test   %al,%al
    4f88:	75 d6                	jne    4f60 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4f8e:	c9                   	leave
    4f8f:	c3                   	ret

0000000000004f90 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4f90:	55                   	push   %rbp
    4f91:	48 89 e5             	mov    %rsp,%rbp
    4f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa0:	0f b6 10             	movzbl (%rax),%edx
    4fa3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4fa7:	0f b6 00             	movzbl (%rax),%eax
    4faa:	38 c2                	cmp    %al,%dl
    4fac:	0f 94 c0             	sete   %al
    4faf:	5d                   	pop    %rbp
    4fb0:	c3                   	ret
    4fb1:	90                   	nop

0000000000004fb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4fb2:	55                   	push   %rbp
    4fb3:	48 89 e5             	mov    %rsp,%rbp
    4fb6:	48 83 ec 10          	sub    $0x10,%rsp
    4fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc2:	48 89 c7             	mov    %rax,%rdi
    4fc5:	e8 a6 f0 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4fca:	90                   	nop
    4fcb:	c9                   	leave
    4fcc:	c3                   	ret
    4fcd:	90                   	nop

0000000000004fce <_ZNSaItEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4fce:	55                   	push   %rbp
    4fcf:	48 89 e5             	mov    %rsp,%rbp
    4fd2:	48 83 ec 10          	sub    $0x10,%rsp
    4fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fde:	48 89 c7             	mov    %rax,%rdi
    4fe1:	e8 34 03 00 00       	call   531a <_ZNSt15__new_allocatorItEC1Ev>
    4fe6:	90                   	nop
    4fe7:	c9                   	leave
    4fe8:	c3                   	ret
    4fe9:	90                   	nop

0000000000004fea <_ZNSaItED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4fea:	55                   	push   %rbp
    4feb:	48 89 e5             	mov    %rsp,%rbp
    4fee:	48 83 ec 10          	sub    $0x10,%rsp
    4ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ffa:	48 89 c7             	mov    %rax,%rdi
    4ffd:	e8 24 03 00 00       	call   5326 <_ZNSt15__new_allocatorItED1Ev>
    5002:	90                   	nop
    5003:	c9                   	leave
    5004:	c3                   	ret
    5005:	90                   	nop

0000000000005006 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    5006:	55                   	push   %rbp
    5007:	48 89 e5             	mov    %rsp,%rbp
    500a:	53                   	push   %rbx
    500b:	48 83 ec 38          	sub    $0x38,%rsp
    500f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5013:	48 89 f0             	mov    %rsi,%rax
    5016:	48 89 d6             	mov    %rdx,%rsi
    5019:	48 89 f2             	mov    %rsi,%rdx
    501c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5020:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    5024:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    5028:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    502c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5030:	48 89 d6             	mov    %rdx,%rsi
    5033:	48 89 c7             	mov    %rax,%rdi
    5036:	e8 13 03 00 00       	call   534e <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    503b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    503f:	48 89 c7             	mov    %rax,%rdi
    5042:	e8 8b 03 00 00       	call   53d2 <_ZNKSt16initializer_listItE3endEv>
    5047:	48 89 c3             	mov    %rax,%rbx
    504a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    504e:	48 89 c7             	mov    %rax,%rdi
    5051:	e8 6a 03 00 00       	call   53c0 <_ZNKSt16initializer_listItE5beginEv>
    5056:	48 89 c1             	mov    %rax,%rcx
    5059:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    505d:	48 89 da             	mov    %rbx,%rdx
    5060:	48 89 ce             	mov    %rcx,%rsi
    5063:	48 89 c7             	mov    %rax,%rdi
    5066:	e8 cd 03 00 00       	call   5438 <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    506b:	eb 1a                	jmp    5087 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_+0x81>
    506d:	48 89 c3             	mov    %rax,%rbx
    5070:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5074:	48 89 c7             	mov    %rax,%rdi
    5077:	e8 f8 02 00 00       	call   5374 <_ZNSt12_Vector_baseItSaItEED1Ev>
    507c:	48 89 d8             	mov    %rbx,%rax
    507f:	48 89 c7             	mov    %rax,%rdi
    5082:	e8 79 f8 ff ff       	call   4900 <_Unwind_Resume@plt>
    5087:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    508b:	c9                   	leave
    508c:	c3                   	ret
    508d:	90                   	nop

000000000000508e <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    508e:	55                   	push   %rbp
    508f:	48 89 e5             	mov    %rsp,%rbp
    5092:	48 83 ec 10          	sub    $0x10,%rsp
    5096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    509a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    509e:	48 89 c7             	mov    %rax,%rdi
    50a1:	e8 40 04 00 00       	call   54e6 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>
    50a6:	90                   	nop
    50a7:	c9                   	leave
    50a8:	c3                   	ret
    50a9:	90                   	nop

00000000000050aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    50aa:	55                   	push   %rbp
    50ab:	48 89 e5             	mov    %rsp,%rbp
    50ae:	48 83 ec 10          	sub    $0x10,%rsp
    50b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ba:	48 89 c7             	mov    %rax,%rdi
    50bd:	e8 30 04 00 00       	call   54f2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>
    50c2:	90                   	nop
    50c3:	c9                   	leave
    50c4:	c3                   	ret
    50c5:	90                   	nop

00000000000050c6 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>:
      vector(initializer_list<value_type> __l,
    50c6:	55                   	push   %rbp
    50c7:	48 89 e5             	mov    %rsp,%rbp
    50ca:	53                   	push   %rbx
    50cb:	48 83 ec 38          	sub    $0x38,%rsp
    50cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    50d3:	48 89 f0             	mov    %rsi,%rax
    50d6:	48 89 d6             	mov    %rdx,%rsi
    50d9:	48 89 f2             	mov    %rsi,%rdx
    50dc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    50e0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    50e4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    50e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    50f0:	48 89 d6             	mov    %rdx,%rsi
    50f3:	48 89 c7             	mov    %rax,%rdi
    50f6:	e8 1f 04 00 00       	call   551a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>
	_M_range_initialize(__l.begin(), __l.end(),
    50fb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    50ff:	48 89 c7             	mov    %rax,%rdi
    5102:	e8 a3 04 00 00       	call   55aa <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>
    5107:	48 89 c3             	mov    %rax,%rbx
    510a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    510e:	48 89 c7             	mov    %rax,%rdi
    5111:	e8 82 04 00 00       	call   5598 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    5116:	48 89 c1             	mov    %rax,%rcx
    5119:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    511d:	48 89 da             	mov    %rbx,%rdx
    5120:	48 89 ce             	mov    %rcx,%rsi
    5123:	48 89 c7             	mov    %rax,%rdi
    5126:	e8 f3 04 00 00       	call   561e <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>
      }
    512b:	eb 1a                	jmp    5147 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_+0x81>
    512d:	48 89 c3             	mov    %rax,%rbx
    5130:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5134:	48 89 c7             	mov    %rax,%rdi
    5137:	e8 04 04 00 00       	call   5540 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    513c:	48 89 d8             	mov    %rbx,%rax
    513f:	48 89 c7             	mov    %rax,%rdi
    5142:	e8 b9 f7 ff ff       	call   4900 <_Unwind_Resume@plt>
    5147:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    514b:	c9                   	leave
    514c:	c3                   	ret
    514d:	90                   	nop

000000000000514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    514e:	55                   	push   %rbp
    514f:	48 89 e5             	mov    %rsp,%rbp
    5152:	53                   	push   %rbx
    5153:	48 83 ec 38          	sub    $0x38,%rsp
    5157:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    515b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    515f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    5163:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5167:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    516b:	48 89 c7             	mov    %rax,%rdi
    516e:	e8 bd f1 ff ff       	call   4330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    5173:	48 89 c1             	mov    %rax,%rcx
    5176:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    517a:	48 89 c2             	mov    %rax,%rdx
    517d:	48 89 ce             	mov    %rcx,%rsi
    5180:	48 89 df             	mov    %rbx,%rdi
    5183:	e8 78 f3 ff ff       	call   4500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    5188:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    518d:	75 0f                	jne    519e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    518f:	48 8d 05 c2 84 01 00 	lea    0x184c2(%rip),%rax        # 1d658 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    5196:	48 89 c7             	mov    %rax,%rdi
    5199:	e8 22 f1 ff ff       	call   42c0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    519e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    51a2:	48 89 c7             	mov    %rax,%rdi
    51a5:	e8 6e fd ff ff       	call   4f18 <_ZNSt11char_traitsIcE6lengthEPKc>
    51aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    51ae:	48 01 d0             	add    %rdx,%rax
    51b1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    51b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51b9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    51bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51c1:	48 89 ce             	mov    %rcx,%rsi
    51c4:	48 89 c7             	mov    %rax,%rdi
    51c7:	e8 66 00 00 00       	call   5232 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    51cc:	eb 1a                	jmp    51e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    51ce:	48 89 c3             	mov    %rax,%rbx
    51d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51d5:	48 89 c7             	mov    %rax,%rdi
    51d8:	e8 d5 fd ff ff       	call   4fb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    51dd:	48 89 d8             	mov    %rbx,%rax
    51e0:	48 89 c7             	mov    %rax,%rdi
    51e3:	e8 18 f7 ff ff       	call   4900 <_Unwind_Resume@plt>
    51e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51ec:	c9                   	leave
    51ed:	c3                   	ret

00000000000051ee <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    51ee:	55                   	push   %rbp
    51ef:	48 89 e5             	mov    %rsp,%rbp
    51f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    51fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5202:	48 89 10             	mov    %rdx,(%rax)
    5205:	90                   	nop
    5206:	5d                   	pop    %rbp
    5207:	c3                   	ret

0000000000005208 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    5208:	55                   	push   %rbp
    5209:	48 89 e5             	mov    %rsp,%rbp
    520c:	48 83 ec 10          	sub    $0x10,%rsp
    5210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5218:	48 8b 00             	mov    (%rax),%rax
    521b:	48 85 c0             	test   %rax,%rax
    521e:	74 0f                	je     522f <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    5220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5224:	48 8b 00             	mov    (%rax),%rax
    5227:	48 89 c7             	mov    %rax,%rdi
    522a:	e8 d1 f3 ff ff       	call   4600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    522f:	90                   	nop
    5230:	c9                   	leave
    5231:	c3                   	ret

0000000000005232 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    5232:	55                   	push   %rbp
    5233:	48 89 e5             	mov    %rsp,%rbp
    5236:	48 83 ec 40          	sub    $0x40,%rsp
    523a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    523e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5242:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    5246:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    524a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    524e:	48 89 d6             	mov    %rdx,%rsi
    5251:	48 89 c7             	mov    %rax,%rdi
    5254:	e8 7f 04 00 00       	call   56d8 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    5259:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    525d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5261:	48 83 f8 0f          	cmp    $0xf,%rax
    5265:	76 3f                	jbe    52a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    5267:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    526b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    526f:	ba 00 00 00 00       	mov    $0x0,%edx
    5274:	48 89 ce             	mov    %rcx,%rsi
    5277:	48 89 c7             	mov    %rax,%rdi
    527a:	e8 b1 f6 ff ff       	call   4930 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    527f:	48 89 c2             	mov    %rax,%rdx
    5282:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5286:	48 89 d6             	mov    %rdx,%rsi
    5289:	48 89 c7             	mov    %rax,%rdi
    528c:	e8 ff f0 ff ff       	call   4390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    5291:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5299:	48 89 d6             	mov    %rdx,%rsi
    529c:	48 89 c7             	mov    %rax,%rdi
    529f:	e8 dc f6 ff ff       	call   4980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    52a4:	eb 15                	jmp    52bb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    52a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    52ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b2:	48 89 c7             	mov    %rax,%rdi
    52b5:	e8 76 f0 ff ff       	call   4330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    52ba:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    52bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    52bf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    52c3:	48 89 d6             	mov    %rdx,%rsi
    52c6:	48 89 c7             	mov    %rax,%rdi
    52c9:	e8 20 ff ff ff       	call   51ee <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    52ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52d2:	48 89 c7             	mov    %rax,%rdi
    52d5:	e8 86 f2 ff ff       	call   4560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    52da:	48 89 c1             	mov    %rax,%rcx
    52dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    52e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    52e5:	48 89 c6             	mov    %rax,%rsi
    52e8:	48 89 cf             	mov    %rcx,%rdi
    52eb:	e8 80 f2 ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    52f0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    52f7:	00 

	_M_set_length(__dnew);
    52f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5300:	48 89 d6             	mov    %rdx,%rsi
    5303:	48 89 c7             	mov    %rax,%rdi
    5306:	e8 85 ef ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    530b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    530f:	48 89 c7             	mov    %rax,%rdi
    5312:	e8 f1 fe ff ff       	call   5208 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    5317:	c9                   	leave
    5318:	c3                   	ret
    5319:	90                   	nop

000000000000531a <_ZNSt15__new_allocatorItEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    531a:	55                   	push   %rbp
    531b:	48 89 e5             	mov    %rsp,%rbp
    531e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5322:	90                   	nop
    5323:	5d                   	pop    %rbp
    5324:	c3                   	ret
    5325:	90                   	nop

0000000000005326 <_ZNSt15__new_allocatorItED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5326:	55                   	push   %rbp
    5327:	48 89 e5             	mov    %rsp,%rbp
    532a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    532e:	90                   	nop
    532f:	5d                   	pop    %rbp
    5330:	c3                   	ret
    5331:	90                   	nop

0000000000005332 <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>:
      struct _Vector_impl
    5332:	55                   	push   %rbp
    5333:	48 89 e5             	mov    %rsp,%rbp
    5336:	48 83 ec 10          	sub    $0x10,%rsp
    533a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    533e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5342:	48 89 c7             	mov    %rax,%rdi
    5345:	e8 a0 fc ff ff       	call   4fea <_ZNSaItED1Ev>
    534a:	90                   	nop
    534b:	c9                   	leave
    534c:	c3                   	ret
    534d:	90                   	nop

000000000000534e <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    534e:	55                   	push   %rbp
    534f:	48 89 e5             	mov    %rsp,%rbp
    5352:	48 83 ec 10          	sub    $0x10,%rsp
    5356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    535a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    535e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5362:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5366:	48 89 d6             	mov    %rdx,%rsi
    5369:	48 89 c7             	mov    %rax,%rdi
    536c:	e8 99 03 00 00       	call   570a <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>
    5371:	90                   	nop
    5372:	c9                   	leave
    5373:	c3                   	ret

0000000000005374 <_ZNSt12_Vector_baseItSaItEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5374:	55                   	push   %rbp
    5375:	48 89 e5             	mov    %rsp,%rbp
    5378:	48 83 ec 10          	sub    $0x10,%rsp
    537c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5384:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    538c:	48 8b 00             	mov    (%rax),%rax
    538f:	48 29 c2             	sub    %rax,%rdx
    5392:	48 89 d0             	mov    %rdx,%rax
    5395:	48 d1 f8             	sar    %rax
	_M_deallocate(_M_impl._M_start,
    5398:	48 89 c2             	mov    %rax,%rdx
    539b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    539f:	48 8b 08             	mov    (%rax),%rcx
    53a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a6:	48 89 ce             	mov    %rcx,%rsi
    53a9:	48 89 c7             	mov    %rax,%rdi
    53ac:	e8 8b 03 00 00       	call   573c <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>
      }
    53b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b5:	48 89 c7             	mov    %rax,%rdi
    53b8:	e8 75 ff ff ff       	call   5332 <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>
    53bd:	90                   	nop
    53be:	c9                   	leave
    53bf:	c3                   	ret

00000000000053c0 <_ZNKSt16initializer_listItE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    53c0:	55                   	push   %rbp
    53c1:	48 89 e5             	mov    %rsp,%rbp
    53c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53cc:	48 8b 00             	mov    (%rax),%rax
    53cf:	5d                   	pop    %rbp
    53d0:	c3                   	ret
    53d1:	90                   	nop

00000000000053d2 <_ZNKSt16initializer_listItE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    53d2:	55                   	push   %rbp
    53d3:	48 89 e5             	mov    %rsp,%rbp
    53d6:	53                   	push   %rbx
    53d7:	48 83 ec 18          	sub    $0x18,%rsp
    53db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53e3:	48 89 c7             	mov    %rax,%rdi
    53e6:	e8 d5 ff ff ff       	call   53c0 <_ZNKSt16initializer_listItE5beginEv>
    53eb:	48 89 c3             	mov    %rax,%rbx
    53ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53f2:	48 89 c7             	mov    %rax,%rdi
    53f5:	e8 78 03 00 00       	call   5772 <_ZNKSt16initializer_listItE4sizeEv>
    53fa:	48 01 c0             	add    %rax,%rax
    53fd:	48 01 d8             	add    %rbx,%rax
    5400:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5404:	c9                   	leave
    5405:	c3                   	ret

0000000000005406 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    5406:	55                   	push   %rbp
    5407:	48 89 e5             	mov    %rsp,%rbp
    540a:	48 83 ec 10          	sub    $0x10,%rsp
    540e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    5416:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    541a:	48 89 c7             	mov    %rax,%rdi
    541d:	e8 62 03 00 00       	call   5784 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    5422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5426:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    542a:	48 89 d6             	mov    %rdx,%rsi
    542d:	48 89 c7             	mov    %rax,%rdi
    5430:	e8 5a 03 00 00       	call   578f <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5435:	c9                   	leave
    5436:	c3                   	ret
    5437:	90                   	nop

0000000000005438 <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5438:	55                   	push   %rbp
    5439:	48 89 e5             	mov    %rsp,%rbp
    543c:	53                   	push   %rbx
    543d:	48 83 ec 38          	sub    $0x38,%rsp
    5441:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5445:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5449:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    544d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5451:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5455:	48 89 d6             	mov    %rdx,%rsi
    5458:	48 89 c7             	mov    %rax,%rdi
    545b:	e8 a6 ff ff ff       	call   5406 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    5460:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5464:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5468:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    546c:	48 89 c7             	mov    %rax,%rdi
    546f:	e8 94 03 00 00       	call   5808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    5474:	48 89 c2             	mov    %rax,%rdx
    5477:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    547b:	48 89 d6             	mov    %rdx,%rsi
    547e:	48 89 c7             	mov    %rax,%rdi
    5481:	e8 22 03 00 00       	call   57a8 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>
    5486:	48 89 c6             	mov    %rax,%rsi
    5489:	48 89 df             	mov    %rbx,%rdi
    548c:	e8 85 03 00 00       	call   5816 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>
    5491:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5495:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    549c:	48 8b 00             	mov    (%rax),%rax
    549f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    54a3:	48 01 d2             	add    %rdx,%rdx
    54a6:	48 01 c2             	add    %rax,%rdx
    54a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    54b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54b5:	48 89 c7             	mov    %rax,%rdi
    54b8:	e8 4b 03 00 00       	call   5808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    54bd:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    54c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54c4:	48 8b 10             	mov    (%rax),%rdx
    54c7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    54cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    54cf:	48 89 c7             	mov    %rax,%rdi
    54d2:	e8 72 03 00 00       	call   5849 <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    54d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    54db:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    54df:	90                   	nop
    54e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54e4:	c9                   	leave
    54e5:	c3                   	ret

00000000000054e6 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    54e6:	55                   	push   %rbp
    54e7:	48 89 e5             	mov    %rsp,%rbp
    54ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54ee:	90                   	nop
    54ef:	5d                   	pop    %rbp
    54f0:	c3                   	ret
    54f1:	90                   	nop

00000000000054f2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    54f2:	55                   	push   %rbp
    54f3:	48 89 e5             	mov    %rsp,%rbp
    54f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54fa:	90                   	nop
    54fb:	5d                   	pop    %rbp
    54fc:	c3                   	ret
    54fd:	90                   	nop

00000000000054fe <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    54fe:	55                   	push   %rbp
    54ff:	48 89 e5             	mov    %rsp,%rbp
    5502:	48 83 ec 10          	sub    $0x10,%rsp
    5506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    550a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    550e:	48 89 c7             	mov    %rax,%rdi
    5511:	e8 94 fb ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    5516:	90                   	nop
    5517:	c9                   	leave
    5518:	c3                   	ret
    5519:	90                   	nop

000000000000551a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    551a:	55                   	push   %rbp
    551b:	48 89 e5             	mov    %rsp,%rbp
    551e:	48 83 ec 10          	sub    $0x10,%rsp
    5522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    552a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    552e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5532:	48 89 d6             	mov    %rdx,%rsi
    5535:	48 89 c7             	mov    %rax,%rdi
    5538:	e8 3d 03 00 00       	call   587a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>
    553d:	90                   	nop
    553e:	c9                   	leave
    553f:	c3                   	ret

0000000000005540 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5540:	55                   	push   %rbp
    5541:	48 89 e5             	mov    %rsp,%rbp
    5544:	48 83 ec 10          	sub    $0x10,%rsp
    5548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    554c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5550:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5558:	48 8b 00             	mov    (%rax),%rax
    555b:	48 29 c2             	sub    %rax,%rdx
    555e:	48 c1 fa 02          	sar    $0x2,%rdx
    5562:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5569:	cc cc cc 
    556c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5570:	48 89 c2             	mov    %rax,%rdx
    5573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5577:	48 8b 08             	mov    (%rax),%rcx
    557a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    557e:	48 89 ce             	mov    %rcx,%rsi
    5581:	48 89 c7             	mov    %rax,%rdi
    5584:	e8 23 03 00 00       	call   58ac <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>
      }
    5589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    558d:	48 89 c7             	mov    %rax,%rdi
    5590:	e8 69 ff ff ff       	call   54fe <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>
    5595:	90                   	nop
    5596:	c9                   	leave
    5597:	c3                   	ret

0000000000005598 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>:
      begin() const noexcept { return _M_array; }
    5598:	55                   	push   %rbp
    5599:	48 89 e5             	mov    %rsp,%rbp
    559c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a4:	48 8b 00             	mov    (%rax),%rax
    55a7:	5d                   	pop    %rbp
    55a8:	c3                   	ret
    55a9:	90                   	nop

00000000000055aa <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>:
      end() const noexcept { return begin() + size(); }
    55aa:	55                   	push   %rbp
    55ab:	48 89 e5             	mov    %rsp,%rbp
    55ae:	53                   	push   %rbx
    55af:	48 83 ec 18          	sub    $0x18,%rsp
    55b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55bb:	48 89 c7             	mov    %rax,%rdi
    55be:	e8 d5 ff ff ff       	call   5598 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    55c3:	48 89 c3             	mov    %rax,%rbx
    55c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55ca:	48 89 c7             	mov    %rax,%rdi
    55cd:	e8 10 03 00 00       	call   58e2 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>
    55d2:	48 89 c2             	mov    %rax,%rdx
    55d5:	48 89 d0             	mov    %rdx,%rax
    55d8:	48 c1 e0 02          	shl    $0x2,%rax
    55dc:	48 01 d0             	add    %rdx,%rax
    55df:	48 c1 e0 02          	shl    $0x2,%rax
    55e3:	48 01 d8             	add    %rbx,%rax
    55e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55ea:	c9                   	leave
    55eb:	c3                   	ret

00000000000055ec <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>:
    distance(_InputIterator __first, _InputIterator __last)
    55ec:	55                   	push   %rbp
    55ed:	48 89 e5             	mov    %rsp,%rbp
    55f0:	48 83 ec 10          	sub    $0x10,%rsp
    55f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    55fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5600:	48 89 c7             	mov    %rax,%rdi
    5603:	e8 ec 02 00 00       	call   58f4 <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>
      return std::__distance(__first, __last,
    5608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    560c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5610:	48 89 d6             	mov    %rdx,%rsi
    5613:	48 89 c7             	mov    %rax,%rdi
    5616:	e8 e4 02 00 00       	call   58ff <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>
    }
    561b:	c9                   	leave
    561c:	c3                   	ret
    561d:	90                   	nop

000000000000561e <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    561e:	55                   	push   %rbp
    561f:	48 89 e5             	mov    %rsp,%rbp
    5622:	53                   	push   %rbx
    5623:	48 83 ec 38          	sub    $0x38,%rsp
    5627:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    562b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    562f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5633:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5637:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    563b:	48 89 d6             	mov    %rdx,%rsi
    563e:	48 89 c7             	mov    %rax,%rdi
    5641:	e8 a6 ff ff ff       	call   55ec <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>
    5646:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    564a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    564e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5652:	48 89 c7             	mov    %rax,%rdi
    5655:	e8 30 03 00 00       	call   598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    565a:	48 89 c2             	mov    %rax,%rdx
    565d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5661:	48 89 d6             	mov    %rdx,%rsi
    5664:	48 89 c7             	mov    %rax,%rdi
    5667:	e8 be 02 00 00       	call   592a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>
    566c:	48 89 c6             	mov    %rax,%rsi
    566f:	48 89 df             	mov    %rbx,%rdi
    5672:	e8 21 03 00 00       	call   5998 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>
    5677:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    567b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    567e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5682:	48 8b 08             	mov    (%rax),%rcx
    5685:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5689:	48 89 d0             	mov    %rdx,%rax
    568c:	48 c1 e0 02          	shl    $0x2,%rax
    5690:	48 01 d0             	add    %rdx,%rax
    5693:	48 c1 e0 02          	shl    $0x2,%rax
    5697:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    569b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    569f:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    56a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56a7:	48 89 c7             	mov    %rax,%rdi
    56aa:	e8 db 02 00 00       	call   598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    56af:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    56b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56b6:	48 8b 10             	mov    (%rax),%rdx
    56b9:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    56bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    56c1:	48 89 c7             	mov    %rax,%rdi
    56c4:	e8 02 03 00 00       	call   59cb <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>
	  this->_M_impl._M_finish =
    56c9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    56cd:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    56d1:	90                   	nop
    56d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56d6:	c9                   	leave
    56d7:	c3                   	ret

00000000000056d8 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    56d8:	55                   	push   %rbp
    56d9:	48 89 e5             	mov    %rsp,%rbp
    56dc:	48 83 ec 10          	sub    $0x10,%rsp
    56e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    56e8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    56ec:	48 89 c7             	mov    %rax,%rdi
    56ef:	e8 08 03 00 00       	call   59fc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    56f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56fc:	48 89 d6             	mov    %rdx,%rsi
    56ff:	48 89 c7             	mov    %rax,%rdi
    5702:	e8 00 03 00 00       	call   5a07 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5707:	c9                   	leave
    5708:	c3                   	ret
    5709:	90                   	nop

000000000000570a <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    570a:	55                   	push   %rbp
    570b:	48 89 e5             	mov    %rsp,%rbp
    570e:	48 83 ec 10          	sub    $0x10,%rsp
    5712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    571a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    571e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5722:	48 89 d6             	mov    %rdx,%rsi
    5725:	48 89 c7             	mov    %rax,%rdi
    5728:	e8 f1 02 00 00       	call   5a1e <_ZNSaItEC1ERKS_>
    572d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5731:	48 89 c7             	mov    %rax,%rdi
    5734:	e8 0b 03 00 00       	call   5a44 <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>
	{ }
    5739:	90                   	nop
    573a:	c9                   	leave
    573b:	c3                   	ret

000000000000573c <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>:
      _M_deallocate(pointer __p, size_t __n)
    573c:	55                   	push   %rbp
    573d:	48 89 e5             	mov    %rsp,%rbp
    5740:	48 83 ec 20          	sub    $0x20,%rsp
    5744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    574c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5750:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5755:	74 17                	je     576e <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    575b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    575f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5763:	48 89 ce             	mov    %rcx,%rsi
    5766:	48 89 c7             	mov    %rax,%rdi
    5769:	e8 04 03 00 00       	call   5a72 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>
      }
    576e:	90                   	nop
    576f:	c9                   	leave
    5770:	c3                   	ret
    5771:	90                   	nop

0000000000005772 <_ZNKSt16initializer_listItE4sizeEv>:
      size() const noexcept { return _M_len; }
    5772:	55                   	push   %rbp
    5773:	48 89 e5             	mov    %rsp,%rbp
    5776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    577a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    577e:	48 8b 40 08          	mov    0x8(%rax),%rax
    5782:	5d                   	pop    %rbp
    5783:	c3                   	ret

0000000000005784 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    5784:	55                   	push   %rbp
    5785:	48 89 e5             	mov    %rsp,%rbp
    5788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    578c:	90                   	nop
    578d:	5d                   	pop    %rbp
    578e:	c3                   	ret

000000000000578f <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    578f:	55                   	push   %rbp
    5790:	48 89 e5             	mov    %rsp,%rbp
    5793:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5797:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    579b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    579f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    57a3:	48 d1 f8             	sar    %rax
    }
    57a6:	5d                   	pop    %rbp
    57a7:	c3                   	ret

00000000000057a8 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    57a8:	55                   	push   %rbp
    57a9:	48 89 e5             	mov    %rsp,%rbp
    57ac:	53                   	push   %rbx
    57ad:	48 83 ec 28          	sub    $0x28,%rsp
    57b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57b5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    57b9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    57bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57c1:	48 89 d6             	mov    %rdx,%rsi
    57c4:	48 89 c7             	mov    %rax,%rdi
    57c7:	e8 52 02 00 00       	call   5a1e <_ZNSaItEC1ERKS_>
    57cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57d0:	48 89 c7             	mov    %rax,%rdi
    57d3:	e8 c8 02 00 00       	call   5aa0 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>
    57d8:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    57dc:	0f 92 c3             	setb   %bl
    57df:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57e3:	48 89 c7             	mov    %rax,%rdi
    57e6:	e8 ff f7 ff ff       	call   4fea <_ZNSaItED1Ev>
    57eb:	84 db                	test   %bl,%bl
    57ed:	74 0f                	je     57fe <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    57ef:	48 8d 05 9a 7e 01 00 	lea    0x17e9a(%rip),%rax        # 1d690 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x60>
    57f6:	48 89 c7             	mov    %rax,%rdi
    57f9:	e8 f2 e9 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    57fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5802:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5806:	c9                   	leave
    5807:	c3                   	ret

0000000000005808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5808:	55                   	push   %rbp
    5809:	48 89 e5             	mov    %rsp,%rbp
    580c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5814:	5d                   	pop    %rbp
    5815:	c3                   	ret

0000000000005816 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5816:	55                   	push   %rbp
    5817:	48 89 e5             	mov    %rsp,%rbp
    581a:	48 83 ec 10          	sub    $0x10,%rsp
    581e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5822:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5826:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    582b:	74 15                	je     5842 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x2c>
    582d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5831:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5835:	48 89 d6             	mov    %rdx,%rsi
    5838:	48 89 c7             	mov    %rax,%rdi
    583b:	e8 a2 02 00 00       	call   5ae2 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>
    5840:	eb 05                	jmp    5847 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x31>
    5842:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5847:	c9                   	leave
    5848:	c3                   	ret

0000000000005849 <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    5849:	55                   	push   %rbp
    584a:	48 89 e5             	mov    %rsp,%rbp
    584d:	48 83 ec 20          	sub    $0x20,%rsp
    5851:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5855:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5859:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    585d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    5861:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5865:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    586d:	48 89 ce             	mov    %rcx,%rsi
    5870:	48 89 c7             	mov    %rax,%rdi
    5873:	e8 94 02 00 00       	call   5b0c <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>
    }
    5878:	c9                   	leave
    5879:	c3                   	ret

000000000000587a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    587a:	55                   	push   %rbp
    587b:	48 89 e5             	mov    %rsp,%rbp
    587e:	48 83 ec 10          	sub    $0x10,%rsp
    5882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    588a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    588e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5892:	48 89 d6             	mov    %rdx,%rsi
    5895:	48 89 c7             	mov    %rax,%rdi
    5898:	e8 a5 02 00 00       	call   5b42 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    589d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58a1:	48 89 c7             	mov    %rax,%rdi
    58a4:	e8 bf 02 00 00       	call   5b68 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>
	{ }
    58a9:	90                   	nop
    58aa:	c9                   	leave
    58ab:	c3                   	ret

00000000000058ac <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>:
      _M_deallocate(pointer __p, size_t __n)
    58ac:	55                   	push   %rbp
    58ad:	48 89 e5             	mov    %rsp,%rbp
    58b0:	48 83 ec 20          	sub    $0x20,%rsp
    58b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    58c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    58c5:	74 17                	je     58de <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    58c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    58cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    58d3:	48 89 ce             	mov    %rcx,%rsi
    58d6:	48 89 c7             	mov    %rax,%rdi
    58d9:	e8 b8 02 00 00       	call   5b96 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>
      }
    58de:	90                   	nop
    58df:	c9                   	leave
    58e0:	c3                   	ret
    58e1:	90                   	nop

00000000000058e2 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>:
    58e2:	55                   	push   %rbp
    58e3:	48 89 e5             	mov    %rsp,%rbp
    58e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ee:	48 8b 40 08          	mov    0x8(%rax),%rax
    58f2:	5d                   	pop    %rbp
    58f3:	c3                   	ret

00000000000058f4 <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>:
    __iterator_category(const _Iter&)
    58f4:	55                   	push   %rbp
    58f5:	48 89 e5             	mov    %rsp,%rbp
    58f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    58fc:	90                   	nop
    58fd:	5d                   	pop    %rbp
    58fe:	c3                   	ret

00000000000058ff <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    58ff:	55                   	push   %rbp
    5900:	48 89 e5             	mov    %rsp,%rbp
    5903:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5907:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    590b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    590f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    5913:	48 c1 f8 02          	sar    $0x2,%rax
    5917:	48 89 c2             	mov    %rax,%rdx
    591a:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5921:	cc cc cc 
    5924:	48 0f af c2          	imul   %rdx,%rax
    }
    5928:	5d                   	pop    %rbp
    5929:	c3                   	ret

000000000000592a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    592a:	55                   	push   %rbp
    592b:	48 89 e5             	mov    %rsp,%rbp
    592e:	53                   	push   %rbx
    592f:	48 83 ec 28          	sub    $0x28,%rsp
    5933:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5937:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    593b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    593f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5943:	48 89 d6             	mov    %rdx,%rsi
    5946:	48 89 c7             	mov    %rax,%rdi
    5949:	e8 f4 01 00 00       	call   5b42 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    594e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5952:	48 89 c7             	mov    %rax,%rdi
    5955:	e8 6a 02 00 00       	call   5bc4 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>
    595a:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    595e:	0f 92 c3             	setb   %bl
    5961:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5965:	48 89 c7             	mov    %rax,%rdi
    5968:	e8 3d f7 ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    596d:	84 db                	test   %bl,%bl
    596f:	74 0f                	je     5980 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_+0x56>
	  __throw_length_error(
    5971:	48 8d 05 18 7d 01 00 	lea    0x17d18(%rip),%rax        # 1d690 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x60>
    5978:	48 89 c7             	mov    %rax,%rdi
    597b:	e8 70 e8 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5980:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5984:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5988:	c9                   	leave
    5989:	c3                   	ret

000000000000598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    598a:	55                   	push   %rbp
    598b:	48 89 e5             	mov    %rsp,%rbp
    598e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5996:	5d                   	pop    %rbp
    5997:	c3                   	ret

0000000000005998 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5998:	55                   	push   %rbp
    5999:	48 89 e5             	mov    %rsp,%rbp
    599c:	48 83 ec 10          	sub    $0x10,%rsp
    59a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    59a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    59ad:	74 15                	je     59c4 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x2c>
    59af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    59b7:	48 89 d6             	mov    %rdx,%rsi
    59ba:	48 89 c7             	mov    %rax,%rdi
    59bd:	e8 44 02 00 00       	call   5c06 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>
    59c2:	eb 05                	jmp    59c9 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x31>
    59c4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    59c9:	c9                   	leave
    59ca:	c3                   	ret

00000000000059cb <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    59cb:	55                   	push   %rbp
    59cc:	48 89 e5             	mov    %rsp,%rbp
    59cf:	48 83 ec 20          	sub    $0x20,%rsp
    59d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    59df:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    59e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    59e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    59eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59ef:	48 89 ce             	mov    %rcx,%rsi
    59f2:	48 89 c7             	mov    %rax,%rdi
    59f5:	e8 36 02 00 00       	call   5c30 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    }
    59fa:	c9                   	leave
    59fb:	c3                   	ret

00000000000059fc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    59fc:	55                   	push   %rbp
    59fd:	48 89 e5             	mov    %rsp,%rbp
    5a00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5a04:	90                   	nop
    5a05:	5d                   	pop    %rbp
    5a06:	c3                   	ret

0000000000005a07 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    5a07:	55                   	push   %rbp
    5a08:	48 89 e5             	mov    %rsp,%rbp
    5a0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    5a13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a17:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    5a1b:	5d                   	pop    %rbp
    5a1c:	c3                   	ret
    5a1d:	90                   	nop

0000000000005a1e <_ZNSaItEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5a1e:	55                   	push   %rbp
    5a1f:	48 89 e5             	mov    %rsp,%rbp
    5a22:	48 83 ec 10          	sub    $0x10,%rsp
    5a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5a2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a36:	48 89 d6             	mov    %rdx,%rsi
    5a39:	48 89 c7             	mov    %rax,%rdi
    5a3c:	e8 25 02 00 00       	call   5c66 <_ZNSt15__new_allocatorItEC1ERKS0_>
    5a41:	90                   	nop
    5a42:	c9                   	leave
    5a43:	c3                   	ret

0000000000005a44 <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5a44:	55                   	push   %rbp
    5a45:	48 89 e5             	mov    %rsp,%rbp
    5a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a50:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a5b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5a62:	00 
    5a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a67:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5a6e:	00 
	{ }
    5a6f:	90                   	nop
    5a70:	5d                   	pop    %rbp
    5a71:	c3                   	ret

0000000000005a72 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5a72:	55                   	push   %rbp
    5a73:	48 89 e5             	mov    %rsp,%rbp
    5a76:	48 83 ec 20          	sub    $0x20,%rsp
    5a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5a86:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a92:	48 89 ce             	mov    %rcx,%rsi
    5a95:	48 89 c7             	mov    %rax,%rdi
    5a98:	e8 d9 01 00 00       	call   5c76 <_ZNSt15__new_allocatorItE10deallocateEPtm>
    5a9d:	90                   	nop
    5a9e:	c9                   	leave
    5a9f:	c3                   	ret

0000000000005aa0 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5aa0:	55                   	push   %rbp
    5aa1:	48 89 e5             	mov    %rsp,%rbp
    5aa4:	48 83 ec 20          	sub    $0x20,%rsp
    5aa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    5aac:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    5ab3:	ff ff 3f 
    5ab6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5aba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5abe:	48 89 c7             	mov    %rax,%rdi
    5ac1:	e8 dd 01 00 00       	call   5ca3 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>
    5ac6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5aca:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5ace:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5ad2:	48 89 d6             	mov    %rdx,%rsi
    5ad5:	48 89 c7             	mov    %rax,%rdi
    5ad8:	e8 e0 01 00 00       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    5add:	48 8b 00             	mov    (%rax),%rax
      }
    5ae0:	c9                   	leave
    5ae1:	c3                   	ret

0000000000005ae2 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    5ae2:	55                   	push   %rbp
    5ae3:	48 89 e5             	mov    %rsp,%rbp
    5ae6:	48 83 ec 10          	sub    $0x10,%rsp
    5aea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5aee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5af2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5afa:	ba 00 00 00 00       	mov    $0x0,%edx
    5aff:	48 89 ce             	mov    %rcx,%rsi
    5b02:	48 89 c7             	mov    %rax,%rdi
    5b05:	e8 de 01 00 00       	call   5ce8 <_ZNSt15__new_allocatorItE8allocateEmPKv>
    5b0a:	c9                   	leave
    5b0b:	c3                   	ret

0000000000005b0c <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    5b0c:	55                   	push   %rbp
    5b0d:	48 89 e5             	mov    %rsp,%rbp
    5b10:	48 83 ec 30          	sub    $0x30,%rsp
    5b14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5b1c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    5b20:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    5b24:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    5b28:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b34:	48 89 ce             	mov    %rcx,%rsi
    5b37:	48 89 c7             	mov    %rax,%rdi
    5b3a:	e8 02 02 00 00       	call   5d41 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>
    }
    5b3f:	c9                   	leave
    5b40:	c3                   	ret
    5b41:	90                   	nop

0000000000005b42 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5b42:	55                   	push   %rbp
    5b43:	48 89 e5             	mov    %rsp,%rbp
    5b46:	48 83 ec 10          	sub    $0x10,%rsp
    5b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5b52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5a:	48 89 d6             	mov    %rdx,%rsi
    5b5d:	48 89 c7             	mov    %rax,%rdi
    5b60:	e8 09 02 00 00       	call   5d6e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>
    5b65:	90                   	nop
    5b66:	c9                   	leave
    5b67:	c3                   	ret

0000000000005b68 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5b68:	55                   	push   %rbp
    5b69:	48 89 e5             	mov    %rsp,%rbp
    5b6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b74:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b7f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5b86:	00 
    5b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b8b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5b92:	00 
	{ }
    5b93:	90                   	nop
    5b94:	5d                   	pop    %rbp
    5b95:	c3                   	ret

0000000000005b96 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5b96:	55                   	push   %rbp
    5b97:	48 89 e5             	mov    %rsp,%rbp
    5b9a:	48 83 ec 20          	sub    $0x20,%rsp
    5b9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ba2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ba6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5baa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bb6:	48 89 ce             	mov    %rcx,%rsi
    5bb9:	48 89 c7             	mov    %rax,%rdi
    5bbc:	e8 bd 01 00 00       	call   5d7e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>
    5bc1:	90                   	nop
    5bc2:	c9                   	leave
    5bc3:	c3                   	ret

0000000000005bc4 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5bc4:	55                   	push   %rbp
    5bc5:	48 89 e5             	mov    %rsp,%rbp
    5bc8:	48 83 ec 20          	sub    $0x20,%rsp
    5bcc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5bd0:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    5bd7:	66 66 06 
    5bda:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5bde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5be2:	48 89 c7             	mov    %rax,%rdi
    5be5:	e8 ce 01 00 00       	call   5db8 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>
    5bea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5bee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5bf2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5bf6:	48 89 d6             	mov    %rdx,%rsi
    5bf9:	48 89 c7             	mov    %rax,%rdi
    5bfc:	e8 bc 00 00 00       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    5c01:	48 8b 00             	mov    (%rax),%rax
      }
    5c04:	c9                   	leave
    5c05:	c3                   	ret

0000000000005c06 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>:
      allocate(allocator_type& __a, size_type __n)
    5c06:	55                   	push   %rbp
    5c07:	48 89 e5             	mov    %rsp,%rbp
    5c0a:	48 83 ec 10          	sub    $0x10,%rsp
    5c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5c16:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c1e:	ba 00 00 00 00       	mov    $0x0,%edx
    5c23:	48 89 ce             	mov    %rcx,%rsi
    5c26:	48 89 c7             	mov    %rax,%rdi
    5c29:	e8 a4 01 00 00       	call   5dd2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>
    5c2e:	c9                   	leave
    5c2f:	c3                   	ret

0000000000005c30 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    5c30:	55                   	push   %rbp
    5c31:	48 89 e5             	mov    %rsp,%rbp
    5c34:	48 83 ec 30          	sub    $0x30,%rsp
    5c38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c40:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    5c44:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    5c48:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    5c4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c50:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5c54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c58:	48 89 ce             	mov    %rcx,%rsi
    5c5b:	48 89 c7             	mov    %rax,%rdi
    5c5e:	e8 da 01 00 00       	call   5e3d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>
    }
    5c63:	c9                   	leave
    5c64:	c3                   	ret
    5c65:	90                   	nop

0000000000005c66 <_ZNSt15__new_allocatorItEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5c66:	55                   	push   %rbp
    5c67:	48 89 e5             	mov    %rsp,%rbp
    5c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c72:	90                   	nop
    5c73:	5d                   	pop    %rbp
    5c74:	c3                   	ret
    5c75:	90                   	nop

0000000000005c76 <_ZNSt15__new_allocatorItE10deallocateEPtm>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5c76:	55                   	push   %rbp
    5c77:	48 89 e5             	mov    %rsp,%rbp
    5c7a:	48 83 ec 20          	sub    $0x20,%rsp
    5c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5c8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c8e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    5c92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c96:	48 89 d6             	mov    %rdx,%rsi
    5c99:	48 89 c7             	mov    %rax,%rdi
    5c9c:	e8 ff e7 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    5ca1:	c9                   	leave
    5ca2:	c3                   	ret

0000000000005ca3 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5ca3:	55                   	push   %rbp
    5ca4:	48 89 e5             	mov    %rsp,%rbp
    5ca7:	48 83 ec 10          	sub    $0x10,%rsp
    5cab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
    5caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cb3:	48 89 c7             	mov    %rax,%rdi
    5cb6:	e8 af 01 00 00       	call   5e6a <_ZNKSt15__new_allocatorItE8max_sizeEv>
#else
	return size_t(-1) / sizeof(value_type);
#endif
      }
    5cbb:	c9                   	leave
    5cbc:	c3                   	ret

0000000000005cbd <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    5cbd:	55                   	push   %rbp
    5cbe:	48 89 e5             	mov    %rsp,%rbp
    5cc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cc5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    5cc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ccd:	48 8b 10             	mov    (%rax),%rdx
    5cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cd4:	48 8b 00             	mov    (%rax),%rax
    5cd7:	48 39 c2             	cmp    %rax,%rdx
    5cda:	73 06                	jae    5ce2 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    5cdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ce0:	eb 04                	jmp    5ce6 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5ce6:	5d                   	pop    %rbp
    5ce7:	c3                   	ret

0000000000005ce8 <_ZNSt15__new_allocatorItE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5ce8:	55                   	push   %rbp
    5ce9:	48 89 e5             	mov    %rsp,%rbp
    5cec:	48 83 ec 20          	sub    $0x20,%rsp
    5cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cf8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d00:	48 89 c7             	mov    %rax,%rdi
    5d03:	e8 7c 01 00 00       	call   5e84 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    5d08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5d0c:	0f 92 c0             	setb   %al
    5d0f:	0f b6 c0             	movzbl %al,%eax
    5d12:	48 85 c0             	test   %rax,%rax
    5d15:	0f 95 c0             	setne  %al
    5d18:	84 c0                	test   %al,%al
    5d1a:	74 13                	je     5d2f <_ZNSt15__new_allocatorItE8allocateEmPKv+0x47>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5d1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d20:	48 85 c0             	test   %rax,%rax
    5d23:	79 05                	jns    5d2a <_ZNSt15__new_allocatorItE8allocateEmPKv+0x42>
	      std::__throw_bad_array_new_length();
    5d25:	e8 e6 e5 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5d2a:	e8 e1 e3 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5d2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d33:	48 01 c0             	add    %rax,%rax
    5d36:	48 89 c7             	mov    %rax,%rdi
    5d39:	e8 42 e7 ff ff       	call   4480 <_Znwm@plt>
    5d3e:	90                   	nop
      }
    5d3f:	c9                   	leave
    5d40:	c3                   	ret

0000000000005d41 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    5d41:	55                   	push   %rbp
    5d42:	48 89 e5             	mov    %rsp,%rbp
    5d45:	48 83 ec 20          	sub    $0x20,%rsp
    5d49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d51:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    5d55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d61:	48 89 ce             	mov    %rcx,%rsi
    5d64:	48 89 c7             	mov    %rax,%rdi
    5d67:	e8 2c 01 00 00       	call   5e98 <_ZSt4copyIPKtPtET0_T_S4_S3_>
    5d6c:	c9                   	leave
    5d6d:	c3                   	ret

0000000000005d6e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5d6e:	55                   	push   %rbp
    5d6f:	48 89 e5             	mov    %rsp,%rbp
    5d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d7a:	90                   	nop
    5d7b:	5d                   	pop    %rbp
    5d7c:	c3                   	ret
    5d7d:	90                   	nop

0000000000005d7e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5d7e:	55                   	push   %rbp
    5d7f:	48 89 e5             	mov    %rsp,%rbp
    5d82:	48 83 ec 20          	sub    $0x20,%rsp
    5d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5d92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d96:	48 89 d0             	mov    %rdx,%rax
    5d99:	48 c1 e0 02          	shl    $0x2,%rax
    5d9d:	48 01 d0             	add    %rdx,%rax
    5da0:	48 c1 e0 02          	shl    $0x2,%rax
    5da4:	48 89 c2             	mov    %rax,%rdx
    5da7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5dab:	48 89 d6             	mov    %rdx,%rsi
    5dae:	48 89 c7             	mov    %rax,%rdi
    5db1:	e8 ea e6 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    5db6:	c9                   	leave
    5db7:	c3                   	ret

0000000000005db8 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5db8:	55                   	push   %rbp
    5db9:	48 89 e5             	mov    %rsp,%rbp
    5dbc:	48 83 ec 10          	sub    $0x10,%rsp
    5dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc8:	48 89 c7             	mov    %rax,%rdi
    5dcb:	e8 14 01 00 00       	call   5ee4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>
      }
    5dd0:	c9                   	leave
    5dd1:	c3                   	ret

0000000000005dd2 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5dd2:	55                   	push   %rbp
    5dd3:	48 89 e5             	mov    %rsp,%rbp
    5dd6:	48 83 ec 20          	sub    $0x20,%rsp
    5dda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5de2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dea:	48 89 c7             	mov    %rax,%rdi
    5ded:	e8 0c 01 00 00       	call   5efe <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    5df2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5df6:	0f 92 c0             	setb   %al
    5df9:	0f b6 c0             	movzbl %al,%eax
    5dfc:	48 85 c0             	test   %rax,%rax
    5dff:	0f 95 c0             	setne  %al
    5e02:	84 c0                	test   %al,%al
    5e04:	74 1a                	je     5e20 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5e06:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    5e0d:	cc cc 0c 
    5e10:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5e14:	73 05                	jae    5e1b <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5e16:	e8 f5 e4 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5e1b:	e8 f0 e2 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5e20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e24:	48 89 d0             	mov    %rdx,%rax
    5e27:	48 c1 e0 02          	shl    $0x2,%rax
    5e2b:	48 01 d0             	add    %rdx,%rax
    5e2e:	48 c1 e0 02          	shl    $0x2,%rax
    5e32:	48 89 c7             	mov    %rax,%rdi
    5e35:	e8 46 e6 ff ff       	call   4480 <_Znwm@plt>
    5e3a:	90                   	nop
      }
    5e3b:	c9                   	leave
    5e3c:	c3                   	ret

0000000000005e3d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    5e3d:	55                   	push   %rbp
    5e3e:	48 89 e5             	mov    %rsp,%rbp
    5e41:	48 83 ec 20          	sub    $0x20,%rsp
    5e45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    5e51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e55:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e5d:	48 89 ce             	mov    %rcx,%rsi
    5e60:	48 89 c7             	mov    %rax,%rdi
    5e63:	e8 aa 00 00 00       	call   5f12 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    5e68:	c9                   	leave
    5e69:	c3                   	ret

0000000000005e6a <_ZNKSt15__new_allocatorItE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5e6a:	55                   	push   %rbp
    5e6b:	48 89 e5             	mov    %rsp,%rbp
    5e6e:	48 83 ec 10          	sub    $0x10,%rsp
    5e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e7a:	48 89 c7             	mov    %rax,%rdi
    5e7d:	e8 02 00 00 00       	call   5e84 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    5e82:	c9                   	leave
    5e83:	c3                   	ret

0000000000005e84 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5e84:	55                   	push   %rbp
    5e85:	48 89 e5             	mov    %rsp,%rbp
    5e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5e8c:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    5e93:	ff ff 3f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5e96:	5d                   	pop    %rbp
    5e97:	c3                   	ret

0000000000005e98 <_ZSt4copyIPKtPtET0_T_S4_S3_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    5e98:	55                   	push   %rbp
    5e99:	48 89 e5             	mov    %rsp,%rbp
    5e9c:	53                   	push   %rbx
    5e9d:	48 83 ec 28          	sub    $0x28,%rsp
    5ea1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ea5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5ea9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    5ead:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5eb1:	48 89 c7             	mov    %rax,%rdi
    5eb4:	e8 a4 00 00 00       	call   5f5d <_ZSt12__miter_baseIPKtET_S2_>
    5eb9:	48 89 c3             	mov    %rax,%rbx
    5ebc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ec0:	48 89 c7             	mov    %rax,%rdi
    5ec3:	e8 95 00 00 00       	call   5f5d <_ZSt12__miter_baseIPKtET_S2_>
    5ec8:	48 89 c1             	mov    %rax,%rcx
    5ecb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ecf:	48 89 c2             	mov    %rax,%rdx
    5ed2:	48 89 de             	mov    %rbx,%rsi
    5ed5:	48 89 cf             	mov    %rcx,%rdi
    5ed8:	e8 8e 00 00 00       	call   5f6b <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>
    }
    5edd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5ee1:	c9                   	leave
    5ee2:	c3                   	ret
    5ee3:	90                   	nop

0000000000005ee4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5ee4:	55                   	push   %rbp
    5ee5:	48 89 e5             	mov    %rsp,%rbp
    5ee8:	48 83 ec 10          	sub    $0x10,%rsp
    5eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef4:	48 89 c7             	mov    %rax,%rdi
    5ef7:	e8 02 00 00 00       	call   5efe <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    5efc:	c9                   	leave
    5efd:	c3                   	ret

0000000000005efe <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5f06:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    5f0d:	66 66 06 
      }
    5f10:	5d                   	pop    %rbp
    5f11:	c3                   	ret

0000000000005f12 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    copy(_II __first, _II __last, _OI __result)
    5f12:	55                   	push   %rbp
    5f13:	48 89 e5             	mov    %rsp,%rbp
    5f16:	53                   	push   %rbx
    5f17:	48 83 ec 28          	sub    $0x28,%rsp
    5f1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f1f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5f23:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    5f27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f2b:	48 89 c7             	mov    %rax,%rdi
    5f2e:	e8 a2 00 00 00       	call   5fd5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    5f33:	48 89 c3             	mov    %rax,%rbx
    5f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f3a:	48 89 c7             	mov    %rax,%rdi
    5f3d:	e8 93 00 00 00       	call   5fd5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    5f42:	48 89 c1             	mov    %rax,%rcx
    5f45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f49:	48 89 c2             	mov    %rax,%rdx
    5f4c:	48 89 de             	mov    %rbx,%rsi
    5f4f:	48 89 cf             	mov    %rcx,%rdi
    5f52:	e8 8c 00 00 00       	call   5fe3 <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    }
    5f57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f5b:	c9                   	leave
    5f5c:	c3                   	ret

0000000000005f5d <_ZSt12__miter_baseIPKtET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    5f5d:	55                   	push   %rbp
    5f5e:	48 89 e5             	mov    %rsp,%rbp
    5f61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    5f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f69:	5d                   	pop    %rbp
    5f6a:	c3                   	ret

0000000000005f6b <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    5f6b:	55                   	push   %rbp
    5f6c:	48 89 e5             	mov    %rsp,%rbp
    5f6f:	41 54                	push   %r12
    5f71:	53                   	push   %rbx
    5f72:	48 83 ec 20          	sub    $0x20,%rsp
    5f76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f7a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5f7e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    5f82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f86:	48 89 c7             	mov    %rax,%rdi
    5f89:	e8 cd 00 00 00       	call   605b <_ZSt12__niter_baseIPtET_S1_>
    5f8e:	49 89 c4             	mov    %rax,%r12
    5f91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f95:	48 89 c7             	mov    %rax,%rdi
    5f98:	e8 b0 00 00 00       	call   604d <_ZSt12__niter_baseIPKtET_S2_>
    5f9d:	48 89 c3             	mov    %rax,%rbx
    5fa0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fa4:	48 89 c7             	mov    %rax,%rdi
    5fa7:	e8 a1 00 00 00       	call   604d <_ZSt12__niter_baseIPKtET_S2_>
    5fac:	4c 89 e2             	mov    %r12,%rdx
    5faf:	48 89 de             	mov    %rbx,%rsi
    5fb2:	48 89 c7             	mov    %rax,%rdi
    5fb5:	e8 af 00 00 00       	call   6069 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>
    5fba:	48 89 c2             	mov    %rax,%rdx
    5fbd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    5fc1:	48 89 d6             	mov    %rdx,%rsi
    5fc4:	48 89 c7             	mov    %rax,%rdi
    5fc7:	e8 ca 00 00 00       	call   6096 <_ZSt12__niter_wrapIPtET_RKS1_S1_>
    }
    5fcc:	48 83 c4 20          	add    $0x20,%rsp
    5fd0:	5b                   	pop    %rbx
    5fd1:	41 5c                	pop    %r12
    5fd3:	5d                   	pop    %rbp
    5fd4:	c3                   	ret

0000000000005fd5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __miter_base(_Iterator __it)
    5fd5:	55                   	push   %rbp
    5fd6:	48 89 e5             	mov    %rsp,%rbp
    5fd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    5fdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe1:	5d                   	pop    %rbp
    5fe2:	c3                   	ret

0000000000005fe3 <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    5fe3:	55                   	push   %rbp
    5fe4:	48 89 e5             	mov    %rsp,%rbp
    5fe7:	41 54                	push   %r12
    5fe9:	53                   	push   %rbx
    5fea:	48 83 ec 20          	sub    $0x20,%rsp
    5fee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ff2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5ff6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    5ffa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ffe:	48 89 c7             	mov    %rax,%rdi
    6001:	e8 b0 00 00 00       	call   60b6 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>
    6006:	49 89 c4             	mov    %rax,%r12
    6009:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    600d:	48 89 c7             	mov    %rax,%rdi
    6010:	e8 93 00 00 00       	call   60a8 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    6015:	48 89 c3             	mov    %rax,%rbx
    6018:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    601c:	48 89 c7             	mov    %rax,%rdi
    601f:	e8 84 00 00 00       	call   60a8 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    6024:	4c 89 e2             	mov    %r12,%rdx
    6027:	48 89 de             	mov    %rbx,%rsi
    602a:	48 89 c7             	mov    %rax,%rdi
    602d:	e8 92 00 00 00       	call   60c4 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    6032:	48 89 c2             	mov    %rax,%rdx
    6035:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6039:	48 89 d6             	mov    %rdx,%rsi
    603c:	48 89 c7             	mov    %rax,%rdi
    603f:	e8 ad 00 00 00       	call   60f1 <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>
    }
    6044:	48 83 c4 20          	add    $0x20,%rsp
    6048:	5b                   	pop    %rbx
    6049:	41 5c                	pop    %r12
    604b:	5d                   	pop    %rbp
    604c:	c3                   	ret

000000000000604d <_ZSt12__niter_baseIPKtET_S2_>:
    __niter_base(_Iterator __it)
    604d:	55                   	push   %rbp
    604e:	48 89 e5             	mov    %rsp,%rbp
    6051:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6059:	5d                   	pop    %rbp
    605a:	c3                   	ret

000000000000605b <_ZSt12__niter_baseIPtET_S1_>:
    __niter_base(_Iterator __it)
    605b:	55                   	push   %rbp
    605c:	48 89 e5             	mov    %rsp,%rbp
    605f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6067:	5d                   	pop    %rbp
    6068:	c3                   	ret

0000000000006069 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6069:	55                   	push   %rbp
    606a:	48 89 e5             	mov    %rsp,%rbp
    606d:	48 83 ec 20          	sub    $0x20,%rsp
    6071:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6075:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6079:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    607d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6081:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6089:	48 89 ce             	mov    %rcx,%rsi
    608c:	48 89 c7             	mov    %rax,%rdi
    608f:	e8 6f 00 00 00       	call   6103 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>
    6094:	c9                   	leave
    6095:	c3                   	ret

0000000000006096 <_ZSt12__niter_wrapIPtET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6096:	55                   	push   %rbp
    6097:	48 89 e5             	mov    %rsp,%rbp
    609a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    609e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    60a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    60a6:	5d                   	pop    %rbp
    60a7:	c3                   	ret

00000000000060a8 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __niter_base(_Iterator __it)
    60a8:	55                   	push   %rbp
    60a9:	48 89 e5             	mov    %rsp,%rbp
    60ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    60b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b4:	5d                   	pop    %rbp
    60b5:	c3                   	ret

00000000000060b6 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>:
    __niter_base(_Iterator __it)
    60b6:	55                   	push   %rbp
    60b7:	48 89 e5             	mov    %rsp,%rbp
    60ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    60be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c2:	5d                   	pop    %rbp
    60c3:	c3                   	ret

00000000000060c4 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    60c4:	55                   	push   %rbp
    60c5:	48 89 e5             	mov    %rsp,%rbp
    60c8:	48 83 ec 20          	sub    $0x20,%rsp
    60cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    60d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    60dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60e4:	48 89 ce             	mov    %rcx,%rsi
    60e7:	48 89 c7             	mov    %rax,%rdi
    60ea:	e8 41 00 00 00       	call   6130 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    60ef:	c9                   	leave
    60f0:	c3                   	ret

00000000000060f1 <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    60f1:	55                   	push   %rbp
    60f2:	48 89 e5             	mov    %rsp,%rbp
    60f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    60fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6101:	5d                   	pop    %rbp
    6102:	c3                   	ret

0000000000006103 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6103:	55                   	push   %rbp
    6104:	48 89 e5             	mov    %rsp,%rbp
    6107:	48 83 ec 20          	sub    $0x20,%rsp
    610b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    610f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6113:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6117:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    611b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    611f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6123:	48 89 ce             	mov    %rcx,%rsi
    6126:	48 89 c7             	mov    %rax,%rdi
    6129:	e8 2f 00 00 00       	call   615d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>
    }
    612e:	c9                   	leave
    612f:	c3                   	ret

0000000000006130 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6130:	55                   	push   %rbp
    6131:	48 89 e5             	mov    %rsp,%rbp
    6134:	48 83 ec 20          	sub    $0x20,%rsp
    6138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    613c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6140:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6144:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6148:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    614c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6150:	48 89 ce             	mov    %rcx,%rsi
    6153:	48 89 c7             	mov    %rax,%rdi
    6156:	e8 58 00 00 00       	call   61b3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>
    }
    615b:	c9                   	leave
    615c:	c3                   	ret

000000000000615d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    615d:	55                   	push   %rbp
    615e:	48 89 e5             	mov    %rsp,%rbp
    6161:	48 83 ec 30          	sub    $0x30,%rsp
    6165:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6169:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    616d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6171:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6175:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6179:	48 d1 f8             	sar    %rax
    617c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6180:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6185:	74 1b                	je     61a2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_+0x45>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    6187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    618f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6193:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6197:	48 89 ce             	mov    %rcx,%rsi
    619a:	48 89 c7             	mov    %rax,%rdi
    619d:	e8 ae e6 ff ff       	call   4850 <memmove@plt>
	  return __result + _Num;
    61a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a6:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    61aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61ae:	48 01 d0             	add    %rdx,%rax
	}
    61b1:	c9                   	leave
    61b2:	c3                   	ret

00000000000061b3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    61b3:	55                   	push   %rbp
    61b4:	48 89 e5             	mov    %rsp,%rbp
    61b7:	48 83 ec 30          	sub    $0x30,%rsp
    61bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    61c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    61cb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    61cf:	48 c1 f8 02          	sar    $0x2,%rax
    61d3:	48 89 c2             	mov    %rax,%rdx
    61d6:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    61dd:	cc cc cc 
    61e0:	48 0f af c2          	imul   %rdx,%rax
    61e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    61e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    61ed:	74 28                	je     6217 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    61ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61f3:	48 89 d0             	mov    %rdx,%rax
    61f6:	48 c1 e0 02          	shl    $0x2,%rax
    61fa:	48 01 d0             	add    %rdx,%rax
    61fd:	48 c1 e0 02          	shl    $0x2,%rax
    6201:	48 89 c2             	mov    %rax,%rdx
    6204:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    620c:	48 89 ce             	mov    %rcx,%rsi
    620f:	48 89 c7             	mov    %rax,%rdi
    6212:	e8 39 e6 ff ff       	call   4850 <memmove@plt>
	  return __result + _Num;
    6217:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    621b:	48 89 d0             	mov    %rdx,%rax
    621e:	48 c1 e0 02          	shl    $0x2,%rax
    6222:	48 01 d0             	add    %rdx,%rax
    6225:	48 c1 e0 02          	shl    $0x2,%rax
    6229:	48 89 c2             	mov    %rax,%rdx
    622c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6230:	48 01 d0             	add    %rdx,%rax
	}
    6233:	c9                   	leave
    6234:	c3                   	ret
    6235:	90                   	nop

0000000000006236 <_ZNSt6vectorItSaItEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6236:	55                   	push   %rbp
    6237:	48 89 e5             	mov    %rsp,%rbp
    623a:	48 83 ec 10          	sub    $0x10,%rsp
    623e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6246:	48 89 c7             	mov    %rax,%rdi
    6249:	e8 ba f5 ff ff       	call   5808 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    624e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6255:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625d:	48 8b 00             	mov    (%rax),%rax
    6260:	48 89 ce             	mov    %rcx,%rsi
    6263:	48 89 c7             	mov    %rax,%rdi
    6266:	e8 53 00 00 00       	call   62be <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>
      }
    626b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626f:	48 89 c7             	mov    %rax,%rdi
    6272:	e8 fd f0 ff ff       	call   5374 <_ZNSt12_Vector_baseItSaItEED1Ev>
    6277:	90                   	nop
    6278:	c9                   	leave
    6279:	c3                   	ret

000000000000627a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    627a:	55                   	push   %rbp
    627b:	48 89 e5             	mov    %rsp,%rbp
    627e:	48 83 ec 10          	sub    $0x10,%rsp
    6282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628a:	48 89 c7             	mov    %rax,%rdi
    628d:	e8 f8 f6 ff ff       	call   598a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    6292:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6299:	48 8b 48 08          	mov    0x8(%rax),%rcx
    629d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a1:	48 8b 00             	mov    (%rax),%rax
    62a4:	48 89 ce             	mov    %rcx,%rsi
    62a7:	48 89 c7             	mov    %rax,%rdi
    62aa:	e8 39 00 00 00       	call   62e8 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>
      }
    62af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b3:	48 89 c7             	mov    %rax,%rdi
    62b6:	e8 85 f2 ff ff       	call   5540 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    62bb:	90                   	nop
    62bc:	c9                   	leave
    62bd:	c3                   	ret

00000000000062be <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    62be:	55                   	push   %rbp
    62bf:	48 89 e5             	mov    %rsp,%rbp
    62c2:	48 83 ec 20          	sub    $0x20,%rsp
    62c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    62d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62da:	48 89 d6             	mov    %rdx,%rsi
    62dd:	48 89 c7             	mov    %rax,%rdi
    62e0:	e8 2d 00 00 00       	call   6312 <_ZSt8_DestroyIPtEvT_S1_>
    }
    62e5:	90                   	nop
    62e6:	c9                   	leave
    62e7:	c3                   	ret

00000000000062e8 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    62e8:	55                   	push   %rbp
    62e9:	48 89 e5             	mov    %rsp,%rbp
    62ec:	48 83 ec 20          	sub    $0x20,%rsp
    62f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    62fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6304:	48 89 d6             	mov    %rdx,%rsi
    6307:	48 89 c7             	mov    %rax,%rdi
    630a:	e8 29 00 00 00       	call   6338 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>
    }
    630f:	90                   	nop
    6310:	c9                   	leave
    6311:	c3                   	ret

0000000000006312 <_ZSt8_DestroyIPtEvT_S1_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6312:	55                   	push   %rbp
    6313:	48 89 e5             	mov    %rsp,%rbp
    6316:	48 83 ec 10          	sub    $0x10,%rsp
    631a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    631e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    6322:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    632a:	48 89 d6             	mov    %rdx,%rsi
    632d:	48 89 c7             	mov    %rax,%rdi
    6330:	e8 29 00 00 00       	call   635e <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>
    }
    6335:	90                   	nop
    6336:	c9                   	leave
    6337:	c3                   	ret

0000000000006338 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6338:	55                   	push   %rbp
    6339:	48 89 e5             	mov    %rsp,%rbp
    633c:	48 83 ec 10          	sub    $0x10,%rsp
    6340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6348:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    634c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6350:	48 89 d6             	mov    %rdx,%rsi
    6353:	48 89 c7             	mov    %rax,%rdi
    6356:	e8 12 00 00 00       	call   636d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>
    }
    635b:	90                   	nop
    635c:	c9                   	leave
    635d:	c3                   	ret

000000000000635e <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    635e:	55                   	push   %rbp
    635f:	48 89 e5             	mov    %rsp,%rbp
    6362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    636a:	90                   	nop
    636b:	5d                   	pop    %rbp
    636c:	c3                   	ret

000000000000636d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>:
    636d:	55                   	push   %rbp
    636e:	48 89 e5             	mov    %rsp,%rbp
    6371:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6375:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6379:	90                   	nop
    637a:	5d                   	pop    %rbp
    637b:	c3                   	ret

000000000000637c <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

VkCommandBuffer
allocateCommandBuffer(VkDevice device,
                      const VkCommandBufferAllocateInfo *pAllocateInfo) {
    637c:	55                   	push   %rbp
    637d:	48 89 e5             	mov    %rsp,%rbp
    6380:	41 54                	push   %r12
    6382:	53                   	push   %rbx
    6383:	48 83 ec 20          	sub    $0x20,%rsp
    6387:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    638b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (pAllocateInfo->commandBufferCount != 1) {
    638f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6393:	8b 40 1c             	mov    0x1c(%rax),%eax
    6396:	83 f8 01             	cmp    $0x1,%eax
    6399:	74 3b                	je     63d6 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0x5a>
    throw std::runtime_error(
        "VkCommandBufferAllocateInfo::commandBufferCount != 1, use "
        "{allocateCommandBuffers} instead.");
    639b:	bf 10 00 00 00       	mov    $0x10,%edi
    63a0:	e8 1b de ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    63a5:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    63a8:	48 8d 05 51 79 01 00 	lea    0x17951(%rip),%rax        # 1dd00 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    63af:	48 89 c6             	mov    %rax,%rsi
    63b2:	48 89 df             	mov    %rbx,%rdi
    63b5:	e8 76 dd ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "{allocateCommandBuffers} instead.");
    63ba:	48 8b 05 e7 ab 02 00 	mov    0x2abe7(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    63c1:	48 89 c2             	mov    %rax,%rdx
    63c4:	48 8d 05 75 a9 02 00 	lea    0x2a975(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    63cb:	48 89 c6             	mov    %rax,%rsi
    63ce:	48 89 df             	mov    %rbx,%rdi
    63d1:	e8 ba e4 ff ff       	call   4890 <__cxa_throw@plt>
  }
  VkCommandBuffer commandBuffer;
  if (vkAllocateCommandBuffers(device, pAllocateInfo, &commandBuffer) !=
    63d6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    63da:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    63de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63e2:	48 89 ce             	mov    %rcx,%rsi
    63e5:	48 89 c7             	mov    %rax,%rdi
    63e8:	e8 23 e0 ff ff       	call   4410 <vkAllocateCommandBuffers@plt>
    63ed:	85 c0                	test   %eax,%eax
    63ef:	0f 95 c0             	setne  %al
    63f2:	84 c0                	test   %al,%al
    63f4:	74 3b                	je     6431 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    63f6:	bf 10 00 00 00       	mov    $0x10,%edi
    63fb:	e8 c0 dd ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6400:	48 89 c3             	mov    %rax,%rbx
    6403:	48 8d 05 56 79 01 00 	lea    0x17956(%rip),%rax        # 1dd60 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    640a:	48 89 c6             	mov    %rax,%rsi
    640d:	48 89 df             	mov    %rbx,%rdi
    6410:	e8 1b dd ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6415:	48 8b 05 8c ab 02 00 	mov    0x2ab8c(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    641c:	48 89 c2             	mov    %rax,%rdx
    641f:	48 8d 05 1a a9 02 00 	lea    0x2a91a(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6426:	48 89 c6             	mov    %rax,%rsi
    6429:	48 89 df             	mov    %rbx,%rdi
    642c:	e8 5f e4 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return commandBuffer;
    6431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6435:	eb 2c                	jmp    6463 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xe7>
        "{allocateCommandBuffers} instead.");
    6437:	49 89 c4             	mov    %rax,%r12
    643a:	48 89 df             	mov    %rbx,%rdi
    643d:	e8 8e de ff ff       	call   42d0 <__cxa_free_exception@plt>
    6442:	4c 89 e0             	mov    %r12,%rax
    6445:	48 89 c7             	mov    %rax,%rdi
    6448:	e8 b3 e4 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    644d:	49 89 c4             	mov    %rax,%r12
    6450:	48 89 df             	mov    %rbx,%rdi
    6453:	e8 78 de ff ff       	call   42d0 <__cxa_free_exception@plt>
    6458:	4c 89 e0             	mov    %r12,%rax
    645b:	48 89 c7             	mov    %rax,%rdi
    645e:	e8 9d e4 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    6463:	48 83 c4 20          	add    $0x20,%rsp
    6467:	5b                   	pop    %rbx
    6468:	41 5c                	pop    %r12
    646a:	5d                   	pop    %rbp
    646b:	c3                   	ret

000000000000646c <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    646c:	55                   	push   %rbp
    646d:	48 89 e5             	mov    %rsp,%rbp
    6470:	41 54                	push   %r12
    6472:	53                   	push   %rbx
    6473:	48 83 ec 30          	sub    $0x30,%rsp
    6477:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    647b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    647f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    6483:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6487:	8b 40 1c             	mov    0x1c(%rax),%eax
    648a:	89 c3                	mov    %eax,%ebx
    648c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6490:	48 89 c7             	mov    %rax,%rdi
    6493:	e8 1c 02 00 00       	call   66b4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    6498:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    649c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64a0:	48 89 de             	mov    %rbx,%rsi
    64a3:	48 89 c7             	mov    %rax,%rdi
    64a6:	e8 41 02 00 00       	call   66ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    64ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    64af:	48 89 c7             	mov    %rax,%rdi
    64b2:	e8 19 02 00 00       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    64b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64bb:	48 89 c7             	mov    %rax,%rdi
    64be:	e8 e3 02 00 00       	call   67a6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    64c3:	48 89 c2             	mov    %rax,%rdx
    64c6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    64ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64ce:	48 89 ce             	mov    %rcx,%rsi
    64d1:	48 89 c7             	mov    %rax,%rdi
    64d4:	e8 37 df ff ff       	call   4410 <vkAllocateCommandBuffers@plt>
    64d9:	85 c0                	test   %eax,%eax
    64db:	0f 95 c0             	setne  %al
    64de:	84 c0                	test   %al,%al
    64e0:	74 7f                	je     6561 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    64e2:	bf 10 00 00 00       	mov    $0x10,%edi
    64e7:	e8 d4 dc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    64ec:	48 89 c3             	mov    %rax,%rbx
    64ef:	48 8d 05 6a 78 01 00 	lea    0x1786a(%rip),%rax        # 1dd60 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    64f6:	48 89 c6             	mov    %rax,%rsi
    64f9:	48 89 df             	mov    %rbx,%rdi
    64fc:	e8 2f dc ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6501:	48 8b 05 a0 aa 02 00 	mov    0x2aaa0(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6508:	48 89 c2             	mov    %rax,%rdx
    650b:	48 8d 05 2e a8 02 00 	lea    0x2a82e(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6512:	48 89 c6             	mov    %rax,%rsi
    6515:	48 89 df             	mov    %rbx,%rdi
    6518:	e8 73 e3 ff ff       	call   4890 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    651d:	48 89 c3             	mov    %rax,%rbx
    6520:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6524:	48 89 c7             	mov    %rax,%rdi
    6527:	e8 a4 01 00 00       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    652c:	48 89 d8             	mov    %rbx,%rax
    652f:	48 89 c7             	mov    %rax,%rdi
    6532:	e8 c9 e3 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    6537:	49 89 c4             	mov    %rax,%r12
    653a:	48 89 df             	mov    %rbx,%rdi
    653d:	e8 8e dd ff ff       	call   42d0 <__cxa_free_exception@plt>
    6542:	4c 89 e3             	mov    %r12,%rbx
    6545:	eb 03                	jmp    654a <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    6547:	48 89 c3             	mov    %rax,%rbx
    654a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    654e:	48 89 c7             	mov    %rax,%rdi
    6551:	e8 0c 02 00 00       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    6556:	48 89 d8             	mov    %rbx,%rax
    6559:	48 89 c7             	mov    %rax,%rdi
    655c:	e8 9f e3 ff ff       	call   4900 <_Unwind_Resume@plt>
  return commandBuffers;
    6561:	90                   	nop
}
    6562:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6566:	48 83 c4 30          	add    $0x30,%rsp
    656a:	5b                   	pop    %rbx
    656b:	41 5c                	pop    %r12
    656d:	5d                   	pop    %rbp
    656e:	c3                   	ret

000000000000656f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    656f:	55                   	push   %rbp
    6570:	48 89 e5             	mov    %rsp,%rbp
    6573:	41 54                	push   %r12
    6575:	53                   	push   %rbx
    6576:	48 83 ec 10          	sub    $0x10,%rsp
    657a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    657e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    6582:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6586:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    658a:	48 89 d6             	mov    %rdx,%rsi
    658d:	48 89 c7             	mov    %rax,%rdi
    6590:	e8 fb de ff ff       	call   4490 <vkBeginCommandBuffer@plt>
    6595:	85 c0                	test   %eax,%eax
    6597:	0f 95 c0             	setne  %al
    659a:	84 c0                	test   %al,%al
    659c:	74 51                	je     65ef <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    659e:	bf 10 00 00 00       	mov    $0x10,%edi
    65a3:	e8 18 dc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    65a8:	48 89 c3             	mov    %rax,%rbx
    65ab:	48 8d 05 d6 77 01 00 	lea    0x177d6(%rip),%rax        # 1dd88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    65b2:	48 89 c6             	mov    %rax,%rsi
    65b5:	48 89 df             	mov    %rbx,%rdi
    65b8:	e8 73 db ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    65bd:	48 8b 05 e4 a9 02 00 	mov    0x2a9e4(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    65c4:	48 89 c2             	mov    %rax,%rdx
    65c7:	48 8d 05 72 a7 02 00 	lea    0x2a772(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    65ce:	48 89 c6             	mov    %rax,%rsi
    65d1:	48 89 df             	mov    %rbx,%rdi
    65d4:	e8 b7 e2 ff ff       	call   4890 <__cxa_throw@plt>
    65d9:	49 89 c4             	mov    %rax,%r12
    65dc:	48 89 df             	mov    %rbx,%rdi
    65df:	e8 ec dc ff ff       	call   42d0 <__cxa_free_exception@plt>
    65e4:	4c 89 e0             	mov    %r12,%rax
    65e7:	48 89 c7             	mov    %rax,%rdi
    65ea:	e8 11 e3 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
}
    65ef:	90                   	nop
    65f0:	48 83 c4 10          	add    $0x10,%rsp
    65f4:	5b                   	pop    %rbx
    65f5:	41 5c                	pop    %r12
    65f7:	5d                   	pop    %rbp
    65f8:	c3                   	ret

00000000000065f9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    65f9:	55                   	push   %rbp
    65fa:	48 89 e5             	mov    %rsp,%rbp
    65fd:	41 54                	push   %r12
    65ff:	53                   	push   %rbx
    6600:	48 83 ec 10          	sub    $0x10,%rsp
    6604:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    6608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    660c:	48 89 c7             	mov    %rax,%rdi
    660f:	e8 4c e3 ff ff       	call   4960 <vkEndCommandBuffer@plt>
    6614:	85 c0                	test   %eax,%eax
    6616:	0f 95 c0             	setne  %al
    6619:	84 c0                	test   %al,%al
    661b:	74 51                	je     666e <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    661d:	bf 10 00 00 00       	mov    $0x10,%edi
    6622:	e8 99 db ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6627:	48 89 c3             	mov    %rax,%rbx
    662a:	48 8d 05 77 77 01 00 	lea    0x17777(%rip),%rax        # 1dda8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    6631:	48 89 c6             	mov    %rax,%rsi
    6634:	48 89 df             	mov    %rbx,%rdi
    6637:	e8 f4 da ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    663c:	48 8b 05 65 a9 02 00 	mov    0x2a965(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6643:	48 89 c2             	mov    %rax,%rdx
    6646:	48 8d 05 f3 a6 02 00 	lea    0x2a6f3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    664d:	48 89 c6             	mov    %rax,%rsi
    6650:	48 89 df             	mov    %rbx,%rdi
    6653:	e8 38 e2 ff ff       	call   4890 <__cxa_throw@plt>
    6658:	49 89 c4             	mov    %rax,%r12
    665b:	48 89 df             	mov    %rbx,%rdi
    665e:	e8 6d dc ff ff       	call   42d0 <__cxa_free_exception@plt>
    6663:	4c 89 e0             	mov    %r12,%rax
    6666:	48 89 c7             	mov    %rax,%rdi
    6669:	e8 92 e2 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
}
    666e:	90                   	nop
    666f:	48 83 c4 10          	add    $0x10,%rsp
    6673:	5b                   	pop    %rbx
    6674:	41 5c                	pop    %r12
    6676:	5d                   	pop    %rbp
    6677:	c3                   	ret

0000000000006678 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    6678:	55                   	push   %rbp
    6679:	48 89 e5             	mov    %rsp,%rbp
    667c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6680:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6688:	5d                   	pop    %rbp
    6689:	c3                   	ret

000000000000668a <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    668a:	55                   	push   %rbp
    668b:	48 89 e5             	mov    %rsp,%rbp
    668e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6696:	5d                   	pop    %rbp
    6697:	c3                   	ret

0000000000006698 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    6698:	55                   	push   %rbp
    6699:	48 89 e5             	mov    %rsp,%rbp
    669c:	48 83 ec 10          	sub    $0x10,%rsp
    66a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a8:	48 89 c7             	mov    %rax,%rdi
    66ab:	e8 20 00 00 00       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    66b0:	90                   	nop
    66b1:	c9                   	leave
    66b2:	c3                   	ret
    66b3:	90                   	nop

00000000000066b4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    66b4:	55                   	push   %rbp
    66b5:	48 89 e5             	mov    %rsp,%rbp
    66b8:	48 83 ec 10          	sub    $0x10,%rsp
    66bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c4:	48 89 c7             	mov    %rax,%rdi
    66c7:	e8 4c 01 00 00       	call   6818 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    66cc:	90                   	nop
    66cd:	c9                   	leave
    66ce:	c3                   	ret
    66cf:	90                   	nop

00000000000066d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    66d0:	55                   	push   %rbp
    66d1:	48 89 e5             	mov    %rsp,%rbp
    66d4:	48 83 ec 10          	sub    $0x10,%rsp
    66d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e0:	48 89 c7             	mov    %rax,%rdi
    66e3:	e8 3c 01 00 00       	call   6824 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    66e8:	90                   	nop
    66e9:	c9                   	leave
    66ea:	c3                   	ret
    66eb:	90                   	nop

00000000000066ec <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    66ec:	55                   	push   %rbp
    66ed:	48 89 e5             	mov    %rsp,%rbp
    66f0:	53                   	push   %rbx
    66f1:	48 83 ec 28          	sub    $0x28,%rsp
    66f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    66f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    66fd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6701:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6705:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6709:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    670d:	48 89 d6             	mov    %rdx,%rsi
    6710:	48 89 c7             	mov    %rax,%rdi
    6713:	e8 17 01 00 00       	call   682f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    6718:	48 89 c1             	mov    %rax,%rcx
    671b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    671f:	48 89 c2             	mov    %rax,%rdx
    6722:	48 89 ce             	mov    %rcx,%rsi
    6725:	48 89 df             	mov    %rbx,%rdi
    6728:	e8 63 01 00 00       	call   6890 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    672d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6735:	48 89 d6             	mov    %rdx,%rsi
    6738:	48 89 c7             	mov    %rax,%rdi
    673b:	e8 ae 01 00 00       	call   68ee <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    6740:	eb 1a                	jmp    675c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    6742:	48 89 c3             	mov    %rax,%rbx
    6745:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6749:	48 89 c7             	mov    %rax,%rdi
    674c:	e8 79 00 00 00       	call   67ca <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    6751:	48 89 d8             	mov    %rbx,%rax
    6754:	48 89 c7             	mov    %rax,%rdi
    6757:	e8 a4 e1 ff ff       	call   4900 <_Unwind_Resume@plt>
    675c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6760:	c9                   	leave
    6761:	c3                   	ret

0000000000006762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6762:	55                   	push   %rbp
    6763:	48 89 e5             	mov    %rsp,%rbp
    6766:	48 83 ec 10          	sub    $0x10,%rsp
    676a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    676e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6772:	48 89 c7             	mov    %rax,%rdi
    6775:	e8 b4 01 00 00       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    677a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    677d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6781:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6789:	48 8b 00             	mov    (%rax),%rax
    678c:	48 89 ce             	mov    %rcx,%rsi
    678f:	48 89 c7             	mov    %rax,%rdi
    6792:	e8 a5 01 00 00       	call   693c <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    6797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    679b:	48 89 c7             	mov    %rax,%rdi
    679e:	e8 27 00 00 00       	call   67ca <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    67a3:	90                   	nop
    67a4:	c9                   	leave
    67a5:	c3                   	ret

00000000000067a6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    67a6:	55                   	push   %rbp
    67a7:	48 89 e5             	mov    %rsp,%rbp
    67aa:	48 83 ec 10          	sub    $0x10,%rsp
    67ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    67b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b6:	48 8b 10             	mov    (%rax),%rdx
    67b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67bd:	48 89 d6             	mov    %rdx,%rsi
    67c0:	48 89 c7             	mov    %rax,%rdi
    67c3:	e8 9e 01 00 00       	call   6966 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    67c8:	c9                   	leave
    67c9:	c3                   	ret

00000000000067ca <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    67ca:	55                   	push   %rbp
    67cb:	48 89 e5             	mov    %rsp,%rbp
    67ce:	48 83 ec 10          	sub    $0x10,%rsp
    67d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    67d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67da:	48 8b 50 10          	mov    0x10(%rax),%rdx
    67de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67e2:	48 8b 00             	mov    (%rax),%rax
    67e5:	48 29 c2             	sub    %rax,%rdx
    67e8:	48 89 d0             	mov    %rdx,%rax
    67eb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    67ef:	48 89 c2             	mov    %rax,%rdx
    67f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67f6:	48 8b 08             	mov    (%rax),%rcx
    67f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67fd:	48 89 ce             	mov    %rcx,%rsi
    6800:	48 89 c7             	mov    %rax,%rdi
    6803:	e8 96 01 00 00       	call   699e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    6808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680c:	48 89 c7             	mov    %rax,%rdi
    680f:	e8 84 fe ff ff       	call   6698 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    6814:	90                   	nop
    6815:	c9                   	leave
    6816:	c3                   	ret
    6817:	90                   	nop

0000000000006818 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6818:	55                   	push   %rbp
    6819:	48 89 e5             	mov    %rsp,%rbp
    681c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6820:	90                   	nop
    6821:	5d                   	pop    %rbp
    6822:	c3                   	ret
    6823:	90                   	nop

0000000000006824 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6824:	55                   	push   %rbp
    6825:	48 89 e5             	mov    %rsp,%rbp
    6828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    682c:	90                   	nop
    682d:	5d                   	pop    %rbp
    682e:	c3                   	ret

000000000000682f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    682f:	55                   	push   %rbp
    6830:	48 89 e5             	mov    %rsp,%rbp
    6833:	53                   	push   %rbx
    6834:	48 83 ec 28          	sub    $0x28,%rsp
    6838:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    683c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6840:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6844:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6848:	48 89 d6             	mov    %rdx,%rsi
    684b:	48 89 c7             	mov    %rax,%rdi
    684e:	e8 25 01 00 00       	call   6978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    6853:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6857:	48 89 c7             	mov    %rax,%rdi
    685a:	e8 74 01 00 00       	call   69d3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    685f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6863:	0f 92 c3             	setb   %bl
    6866:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    686a:	48 89 c7             	mov    %rax,%rdi
    686d:	e8 5e fe ff ff       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    6872:	84 db                	test   %bl,%bl
    6874:	74 0f                	je     6885 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6876:	48 8d 05 4b 75 01 00 	lea    0x1754b(%rip),%rax        # 1ddc8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    687d:	48 89 c7             	mov    %rax,%rdi
    6880:	e8 6b d9 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6885:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6889:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    688d:	c9                   	leave
    688e:	c3                   	ret
    688f:	90                   	nop

0000000000006890 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6890:	55                   	push   %rbp
    6891:	48 89 e5             	mov    %rsp,%rbp
    6894:	53                   	push   %rbx
    6895:	48 83 ec 28          	sub    $0x28,%rsp
    6899:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    689d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    68a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    68a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    68ad:	48 89 d6             	mov    %rdx,%rsi
    68b0:	48 89 c7             	mov    %rax,%rdi
    68b3:	e8 5e 01 00 00       	call   6a16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    68b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68c0:	48 89 d6             	mov    %rdx,%rsi
    68c3:	48 89 c7             	mov    %rax,%rdi
    68c6:	e8 7d 01 00 00       	call   6a48 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    68cb:	eb 1a                	jmp    68e7 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    68cd:	48 89 c3             	mov    %rax,%rbx
    68d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68d4:	48 89 c7             	mov    %rax,%rdi
    68d7:	e8 bc fd ff ff       	call   6698 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    68dc:	48 89 d8             	mov    %rbx,%rax
    68df:	48 89 c7             	mov    %rax,%rdi
    68e2:	e8 19 e0 ff ff       	call   4900 <_Unwind_Resume@plt>
    68e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68eb:	c9                   	leave
    68ec:	c3                   	ret
    68ed:	90                   	nop

00000000000068ee <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    68ee:	55                   	push   %rbp
    68ef:	48 89 e5             	mov    %rsp,%rbp
    68f2:	48 83 ec 10          	sub    $0x10,%rsp
    68f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    68fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6902:	48 89 c7             	mov    %rax,%rdi
    6905:	e8 24 00 00 00       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    690a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    690d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6911:	48 8b 00             	mov    (%rax),%rax
    6914:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6918:	48 89 ce             	mov    %rcx,%rsi
    691b:	48 89 c7             	mov    %rax,%rdi
    691e:	e8 7b 01 00 00       	call   6a9e <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6923:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6927:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    692b:	90                   	nop
    692c:	c9                   	leave
    692d:	c3                   	ret

000000000000692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    692e:	55                   	push   %rbp
    692f:	48 89 e5             	mov    %rsp,%rbp
    6932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    693a:	5d                   	pop    %rbp
    693b:	c3                   	ret

000000000000693c <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    693c:	55                   	push   %rbp
    693d:	48 89 e5             	mov    %rsp,%rbp
    6940:	48 83 ec 20          	sub    $0x20,%rsp
    6944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    694c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6950:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6958:	48 89 d6             	mov    %rdx,%rsi
    695b:	48 89 c7             	mov    %rax,%rdi
    695e:	e8 64 01 00 00       	call   6ac7 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    6963:	90                   	nop
    6964:	c9                   	leave
    6965:	c3                   	ret

0000000000006966 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6966:	55                   	push   %rbp
    6967:	48 89 e5             	mov    %rsp,%rbp
    696a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    696e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6972:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6976:	5d                   	pop    %rbp
    6977:	c3                   	ret

0000000000006978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6978:	55                   	push   %rbp
    6979:	48 89 e5             	mov    %rsp,%rbp
    697c:	48 83 ec 10          	sub    $0x10,%rsp
    6980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6984:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6988:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    698c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6990:	48 89 d6             	mov    %rdx,%rsi
    6993:	48 89 c7             	mov    %rax,%rdi
    6996:	e8 53 01 00 00       	call   6aee <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    699b:	90                   	nop
    699c:	c9                   	leave
    699d:	c3                   	ret

000000000000699e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    699e:	55                   	push   %rbp
    699f:	48 89 e5             	mov    %rsp,%rbp
    69a2:	48 83 ec 20          	sub    $0x20,%rsp
    69a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    69b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    69b7:	74 17                	je     69d0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    69b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69c5:	48 89 ce             	mov    %rcx,%rsi
    69c8:	48 89 c7             	mov    %rax,%rdi
    69cb:	e8 2d 01 00 00       	call   6afd <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    69d0:	90                   	nop
    69d1:	c9                   	leave
    69d2:	c3                   	ret

00000000000069d3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    69d3:	55                   	push   %rbp
    69d4:	48 89 e5             	mov    %rsp,%rbp
    69d7:	48 83 ec 20          	sub    $0x20,%rsp
    69db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    69df:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    69e6:	ff ff 0f 
    69e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    69ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69f1:	48 89 c7             	mov    %rax,%rdi
    69f4:	e8 32 01 00 00       	call   6b2b <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    69f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    69fd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6a01:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a05:	48 89 d6             	mov    %rdx,%rsi
    6a08:	48 89 c7             	mov    %rax,%rdi
    6a0b:	e8 ad f2 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    6a10:	48 8b 00             	mov    (%rax),%rax
      }
    6a13:	c9                   	leave
    6a14:	c3                   	ret
    6a15:	90                   	nop

0000000000006a16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6a16:	55                   	push   %rbp
    6a17:	48 89 e5             	mov    %rsp,%rbp
    6a1a:	48 83 ec 10          	sub    $0x10,%rsp
    6a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6a26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a2e:	48 89 d6             	mov    %rdx,%rsi
    6a31:	48 89 c7             	mov    %rax,%rdi
    6a34:	e8 3f ff ff ff       	call   6978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    6a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a3d:	48 89 c7             	mov    %rax,%rdi
    6a40:	e8 01 01 00 00       	call   6b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6a45:	90                   	nop
    6a46:	c9                   	leave
    6a47:	c3                   	ret

0000000000006a48 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6a48:	55                   	push   %rbp
    6a49:	48 89 e5             	mov    %rsp,%rbp
    6a4c:	48 83 ec 10          	sub    $0x10,%rsp
    6a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6a58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a60:	48 89 d6             	mov    %rdx,%rsi
    6a63:	48 89 c7             	mov    %rax,%rdi
    6a66:	e8 09 01 00 00       	call   6b74 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    6a6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6a6f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a76:	48 8b 10             	mov    (%rax),%rdx
    6a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a85:	48 8b 00             	mov    (%rax),%rax
    6a88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a8c:	48 c1 e2 03          	shl    $0x3,%rdx
    6a90:	48 01 c2             	add    %rax,%rdx
    6a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a97:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6a9b:	90                   	nop
    6a9c:	c9                   	leave
    6a9d:	c3                   	ret

0000000000006a9e <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6a9e:	55                   	push   %rbp
    6a9f:	48 89 e5             	mov    %rsp,%rbp
    6aa2:	48 83 ec 20          	sub    $0x20,%rsp
    6aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    6ab2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aba:	48 89 d6             	mov    %rdx,%rsi
    6abd:	48 89 c7             	mov    %rax,%rdi
    6ac0:	e8 e2 00 00 00       	call   6ba7 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    6ac5:	c9                   	leave
    6ac6:	c3                   	ret

0000000000006ac7 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6ac7:	55                   	push   %rbp
    6ac8:	48 89 e5             	mov    %rsp,%rbp
    6acb:	48 83 ec 10          	sub    $0x10,%rsp
    6acf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ad3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6ad7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6adf:	48 89 d6             	mov    %rdx,%rsi
    6ae2:	48 89 c7             	mov    %rax,%rdi
    6ae5:	e8 e6 00 00 00       	call   6bd0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    6aea:	90                   	nop
    6aeb:	c9                   	leave
    6aec:	c3                   	ret
    6aed:	90                   	nop

0000000000006aee <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6aee:	55                   	push   %rbp
    6aef:	48 89 e5             	mov    %rsp,%rbp
    6af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6afa:	90                   	nop
    6afb:	5d                   	pop    %rbp
    6afc:	c3                   	ret

0000000000006afd <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6afd:	55                   	push   %rbp
    6afe:	48 89 e5             	mov    %rsp,%rbp
    6b01:	48 83 ec 20          	sub    $0x20,%rsp
    6b05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6b11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b1d:	48 89 ce             	mov    %rcx,%rsi
    6b20:	48 89 c7             	mov    %rax,%rdi
    6b23:	e8 b8 00 00 00       	call   6be0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    6b28:	90                   	nop
    6b29:	c9                   	leave
    6b2a:	c3                   	ret

0000000000006b2b <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6b2b:	55                   	push   %rbp
    6b2c:	48 89 e5             	mov    %rsp,%rbp
    6b2f:	48 83 ec 10          	sub    $0x10,%rsp
    6b33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b3b:	48 89 c7             	mov    %rax,%rdi
    6b3e:	e8 cf 00 00 00       	call   6c12 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    6b43:	c9                   	leave
    6b44:	c3                   	ret
    6b45:	90                   	nop

0000000000006b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6b46:	55                   	push   %rbp
    6b47:	48 89 e5             	mov    %rsp,%rbp
    6b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b52:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b5d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6b64:	00 
    6b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b69:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6b70:	00 
	{ }
    6b71:	90                   	nop
    6b72:	5d                   	pop    %rbp
    6b73:	c3                   	ret

0000000000006b74 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6b74:	55                   	push   %rbp
    6b75:	48 89 e5             	mov    %rsp,%rbp
    6b78:	48 83 ec 10          	sub    $0x10,%rsp
    6b7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6b84:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6b89:	74 15                	je     6ba0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    6b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b8f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b93:	48 89 d6             	mov    %rdx,%rsi
    6b96:	48 89 c7             	mov    %rax,%rdi
    6b99:	e8 8e 00 00 00       	call   6c2c <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    6b9e:	eb 05                	jmp    6ba5 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    6ba0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6ba5:	c9                   	leave
    6ba6:	c3                   	ret

0000000000006ba7 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6ba7:	55                   	push   %rbp
    6ba8:	48 89 e5             	mov    %rsp,%rbp
    6bab:	48 83 ec 20          	sub    $0x20,%rsp
    6baf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6bb3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6bb7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6bbb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6bbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6bc3:	48 89 d6             	mov    %rdx,%rsi
    6bc6:	48 89 c7             	mov    %rax,%rdi
    6bc9:	e8 88 00 00 00       	call   6c56 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    6bce:	c9                   	leave
    6bcf:	c3                   	ret

0000000000006bd0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6bd0:	55                   	push   %rbp
    6bd1:	48 89 e5             	mov    %rsp,%rbp
    6bd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bdc:	90                   	nop
    6bdd:	5d                   	pop    %rbp
    6bde:	c3                   	ret
    6bdf:	90                   	nop

0000000000006be0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6be0:	55                   	push   %rbp
    6be1:	48 89 e5             	mov    %rsp,%rbp
    6be4:	48 83 ec 20          	sub    $0x20,%rsp
    6be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6bf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6bf8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6bff:	00 
    6c00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6c04:	48 89 d6             	mov    %rdx,%rsi
    6c07:	48 89 c7             	mov    %rax,%rdi
    6c0a:	e8 91 d8 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    6c0f:	c9                   	leave
    6c10:	c3                   	ret
    6c11:	90                   	nop

0000000000006c12 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6c12:	55                   	push   %rbp
    6c13:	48 89 e5             	mov    %rsp,%rbp
    6c16:	48 83 ec 10          	sub    $0x10,%rsp
    6c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c22:	48 89 c7             	mov    %rax,%rdi
    6c25:	e8 8a 00 00 00       	call   6cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6c2a:	c9                   	leave
    6c2b:	c3                   	ret

0000000000006c2c <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6c2c:	55                   	push   %rbp
    6c2d:	48 89 e5             	mov    %rsp,%rbp
    6c30:	48 83 ec 10          	sub    $0x10,%rsp
    6c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6c3c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c44:	ba 00 00 00 00       	mov    $0x0,%edx
    6c49:	48 89 ce             	mov    %rcx,%rsi
    6c4c:	48 89 c7             	mov    %rax,%rdi
    6c4f:	e8 74 00 00 00       	call   6cc8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    6c54:	c9                   	leave
    6c55:	c3                   	ret

0000000000006c56 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    6c56:	55                   	push   %rbp
    6c57:	48 89 e5             	mov    %rsp,%rbp
    6c5a:	48 83 ec 20          	sub    $0x20,%rsp
    6c5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    6c66:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6c6b:	74 40                	je     6cad <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    6c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c71:	48 89 c7             	mov    %rax,%rdi
    6c74:	e8 b0 00 00 00       	call   6d29 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    6c79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c81:	48 89 c7             	mov    %rax,%rdi
    6c84:	e8 ae 00 00 00       	call   6d37 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    6c89:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6c8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6c92:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    6c96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c9e:	48 89 ce             	mov    %rcx,%rsi
    6ca1:	48 89 c7             	mov    %rax,%rdi
    6ca4:	e8 b5 00 00 00       	call   6d5e <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    6ca9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6cad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6cb1:	c9                   	leave
    6cb2:	c3                   	ret
    6cb3:	90                   	nop

0000000000006cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6cb4:	55                   	push   %rbp
    6cb5:	48 89 e5             	mov    %rsp,%rbp
    6cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6cbc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6cc3:	ff ff 0f 
      }
    6cc6:	5d                   	pop    %rbp
    6cc7:	c3                   	ret

0000000000006cc8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6cc8:	55                   	push   %rbp
    6cc9:	48 89 e5             	mov    %rsp,%rbp
    6ccc:	48 83 ec 20          	sub    $0x20,%rsp
    6cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ce0:	48 89 c7             	mov    %rax,%rdi
    6ce3:	e8 cc ff ff ff       	call   6cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6ce8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6cec:	0f 92 c0             	setb   %al
    6cef:	0f b6 c0             	movzbl %al,%eax
    6cf2:	48 85 c0             	test   %rax,%rax
    6cf5:	0f 95 c0             	setne  %al
    6cf8:	84 c0                	test   %al,%al
    6cfa:	74 1a                	je     6d16 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6cfc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    6d03:	ff ff 1f 
    6d06:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6d0a:	73 05                	jae    6d11 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6d0c:	e8 ff d5 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6d11:	e8 fa d3 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6d16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d1a:	48 c1 e0 03          	shl    $0x3,%rax
    6d1e:	48 89 c7             	mov    %rax,%rdi
    6d21:	e8 5a d7 ff ff       	call   4480 <_Znwm@plt>
    6d26:	90                   	nop
      }
    6d27:	c9                   	leave
    6d28:	c3                   	ret

0000000000006d29 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6d29:	55                   	push   %rbp
    6d2a:	48 89 e5             	mov    %rsp,%rbp
    6d2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d35:	5d                   	pop    %rbp
    6d36:	c3                   	ret

0000000000006d37 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6d37:	55                   	push   %rbp
    6d38:	48 89 e5             	mov    %rsp,%rbp
    6d3b:	48 83 ec 10          	sub    $0x10,%rsp
    6d3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d47:	48 89 c6             	mov    %rax,%rsi
    6d4a:	bf 08 00 00 00       	mov    $0x8,%edi
    6d4f:	e8 24 f9 ff ff       	call   6678 <_ZnwmPv>
    6d54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    6d5b:	90                   	nop
    6d5c:	c9                   	leave
    6d5d:	c3                   	ret

0000000000006d5e <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6d5e:	55                   	push   %rbp
    6d5f:	48 89 e5             	mov    %rsp,%rbp
    6d62:	48 83 ec 20          	sub    $0x20,%rsp
    6d66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    6d72:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6d76:	48 89 c7             	mov    %rax,%rdi
    6d79:	e8 24 00 00 00       	call   6da2 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6d7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d82:	48 89 c7             	mov    %rax,%rdi
    6d85:	e8 00 f9 ff ff       	call   668a <_ZSt17__size_to_integerm>
    6d8a:	48 89 c1             	mov    %rax,%rcx
    6d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6d95:	48 89 ce             	mov    %rcx,%rsi
    6d98:	48 89 c7             	mov    %rax,%rdi
    6d9b:	e8 0d 00 00 00       	call   6dad <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    6da0:	c9                   	leave
    6da1:	c3                   	ret

0000000000006da2 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    6da2:	55                   	push   %rbp
    6da3:	48 89 e5             	mov    %rsp,%rbp
    6da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6daa:	90                   	nop
    6dab:	5d                   	pop    %rbp
    6dac:	c3                   	ret

0000000000006dad <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6dad:	55                   	push   %rbp
    6dae:	48 89 e5             	mov    %rsp,%rbp
    6db1:	48 83 ec 20          	sub    $0x20,%rsp
    6db5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6db9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6dbd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6dc1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6dc6:	75 06                	jne    6dce <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dcc:	eb 3a                	jmp    6e08 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    6dce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6dd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6dd9:	00 
    6dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dde:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6de2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dea:	48 89 ce             	mov    %rcx,%rsi
    6ded:	48 89 c7             	mov    %rax,%rdi
    6df0:	e8 15 00 00 00       	call   6e0a <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    6df5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6df9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6e00:	00 
    6e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e05:	48 01 d0             	add    %rdx,%rax
    }
    6e08:	c9                   	leave
    6e09:	c3                   	ret

0000000000006e0a <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6e0a:	55                   	push   %rbp
    6e0b:	48 89 e5             	mov    %rsp,%rbp
    6e0e:	48 83 ec 20          	sub    $0x20,%rsp
    6e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6e1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e22:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e2a:	48 89 ce             	mov    %rcx,%rsi
    6e2d:	48 89 c7             	mov    %rax,%rdi
    6e30:	e8 03 00 00 00       	call   6e38 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    6e35:	90                   	nop
    6e36:	c9                   	leave
    6e37:	c3                   	ret

0000000000006e38 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6e38:	55                   	push   %rbp
    6e39:	48 89 e5             	mov    %rsp,%rbp
    6e3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6e44:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    6e48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e4c:	48 8b 00             	mov    (%rax),%rax
    6e4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    6e53:	eb 10                	jmp    6e65 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    6e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6e5d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    6e60:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    6e65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e69:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6e6d:	75 e6                	jne    6e55 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6e6f:	90                   	nop
    6e70:	90                   	nop
    6e71:	5d                   	pop    %rbp
    6e72:	c3                   	ret

0000000000006e73 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    6e73:	55                   	push   %rbp
    6e74:	48 89 e5             	mov    %rsp,%rbp
    6e77:	48 83 ec 20          	sub    $0x20,%rsp
    6e7b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6e7e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6e81:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    6e85:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    6e89:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    6e8d:	be 00 00 00 00       	mov    $0x0,%esi
    6e92:	bf 01 20 02 00       	mov    $0x22001,%edi
    6e97:	e8 04 d5 ff ff       	call   43a0 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
  return glfwCreateWindow(width, height, title, monitor, share);
    6e9c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    6ea0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6ea4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ea8:	8b 75 f8             	mov    -0x8(%rbp),%esi
    6eab:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6eae:	49 89 f8             	mov    %rdi,%r8
    6eb1:	89 c7                	mov    %eax,%edi
    6eb3:	e8 18 d9 ff ff       	call   47d0 <glfwCreateWindow@plt>
}
    6eb8:	c9                   	leave
    6eb9:	c3                   	ret

0000000000006eba <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    6eba:	55                   	push   %rbp
    6ebb:	48 89 e5             	mov    %rsp,%rbp
    6ebe:	41 54                	push   %r12
    6ec0:	53                   	push   %rbx
    6ec1:	48 83 ec 20          	sub    $0x20,%rsp
    6ec5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ec9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    6ecd:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6ed1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6ed5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ed9:	48 89 ce             	mov    %rcx,%rsi
    6edc:	48 89 c7             	mov    %rax,%rdi
    6edf:	e8 0c d7 ff ff       	call   45f0 <vkCreateInstance@plt>
    6ee4:	85 c0                	test   %eax,%eax
    6ee6:	0f 95 c0             	setne  %al
    6ee9:	84 c0                	test   %al,%al
    6eeb:	74 3b                	je     6f28 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    6eed:	bf 10 00 00 00       	mov    $0x10,%edi
    6ef2:	e8 c9 d2 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6ef7:	48 89 c3             	mov    %rax,%rbx
    6efa:	48 8d 05 2f 75 01 00 	lea    0x1752f(%rip),%rax        # 1e430 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6f01:	48 89 c6             	mov    %rax,%rsi
    6f04:	48 89 df             	mov    %rbx,%rdi
    6f07:	e8 24 d2 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6f0c:	48 8b 05 95 a0 02 00 	mov    0x2a095(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6f13:	48 89 c2             	mov    %rax,%rdx
    6f16:	48 8d 05 23 9e 02 00 	lea    0x29e23(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6f1d:	48 89 c6             	mov    %rax,%rsi
    6f20:	48 89 df             	mov    %rbx,%rdi
    6f23:	e8 68 d9 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return instance;
    6f28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f2c:	eb 16                	jmp    6f44 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    6f2e:	49 89 c4             	mov    %rax,%r12
    6f31:	48 89 df             	mov    %rbx,%rdi
    6f34:	e8 97 d3 ff ff       	call   42d0 <__cxa_free_exception@plt>
    6f39:	4c 89 e0             	mov    %r12,%rax
    6f3c:	48 89 c7             	mov    %rax,%rdi
    6f3f:	e8 bc d9 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    6f44:	48 83 c4 20          	add    $0x20,%rsp
    6f48:	5b                   	pop    %rbx
    6f49:	41 5c                	pop    %r12
    6f4b:	5d                   	pop    %rbp
    6f4c:	c3                   	ret

0000000000006f4d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    6f4d:	55                   	push   %rbp
    6f4e:	48 89 e5             	mov    %rsp,%rbp
    6f51:	41 54                	push   %r12
    6f53:	53                   	push   %rbx
    6f54:	48 83 ec 30          	sub    $0x30,%rsp
    6f58:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6f5c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6f60:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    6f64:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6f68:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6f6c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6f70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f74:	48 89 c7             	mov    %rax,%rdi
    6f77:	e8 04 d8 ff ff       	call   4780 <vkCreateDevice@plt>
    6f7c:	85 c0                	test   %eax,%eax
    6f7e:	0f 95 c0             	setne  %al
    6f81:	84 c0                	test   %al,%al
    6f83:	74 3b                	je     6fc0 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    6f85:	bf 10 00 00 00       	mov    $0x10,%edi
    6f8a:	e8 31 d2 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    6f8f:	48 89 c3             	mov    %rax,%rbx
    6f92:	48 8d 05 b7 74 01 00 	lea    0x174b7(%rip),%rax        # 1e450 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    6f99:	48 89 c6             	mov    %rax,%rsi
    6f9c:	48 89 df             	mov    %rbx,%rdi
    6f9f:	e8 8c d1 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6fa4:	48 8b 05 fd 9f 02 00 	mov    0x29ffd(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6fab:	48 89 c2             	mov    %rax,%rdx
    6fae:	48 8d 05 8b 9d 02 00 	lea    0x29d8b(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6fb5:	48 89 c6             	mov    %rax,%rsi
    6fb8:	48 89 df             	mov    %rbx,%rdi
    6fbb:	e8 d0 d8 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return device;
    6fc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fc4:	eb 16                	jmp    6fdc <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    6fc6:	49 89 c4             	mov    %rax,%r12
    6fc9:	48 89 df             	mov    %rbx,%rdi
    6fcc:	e8 ff d2 ff ff       	call   42d0 <__cxa_free_exception@plt>
    6fd1:	4c 89 e0             	mov    %r12,%rax
    6fd4:	48 89 c7             	mov    %rax,%rdi
    6fd7:	e8 24 d9 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    6fdc:	48 83 c4 30          	add    $0x30,%rsp
    6fe0:	5b                   	pop    %rbx
    6fe1:	41 5c                	pop    %r12
    6fe3:	5d                   	pop    %rbp
    6fe4:	c3                   	ret

0000000000006fe5 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    6fe5:	55                   	push   %rbp
    6fe6:	48 89 e5             	mov    %rsp,%rbp
    6fe9:	41 54                	push   %r12
    6feb:	53                   	push   %rbx
    6fec:	48 83 ec 30          	sub    $0x30,%rsp
    6ff0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ff4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6ff8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    6ffc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7000:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7004:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7008:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    700c:	48 89 c7             	mov    %rax,%rdi
    700f:	e8 9c d7 ff ff       	call   47b0 <glfwCreateWindowSurface@plt>
    7014:	85 c0                	test   %eax,%eax
    7016:	0f 95 c0             	setne  %al
    7019:	84 c0                	test   %al,%al
    701b:	74 3b                	je     7058 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    701d:	bf 10 00 00 00       	mov    $0x10,%edi
    7022:	e8 99 d1 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7027:	48 89 c3             	mov    %rax,%rbx
    702a:	48 8d 05 47 74 01 00 	lea    0x17447(%rip),%rax        # 1e478 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    7031:	48 89 c6             	mov    %rax,%rsi
    7034:	48 89 df             	mov    %rbx,%rdi
    7037:	e8 f4 d0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    703c:	48 8b 05 65 9f 02 00 	mov    0x29f65(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7043:	48 89 c2             	mov    %rax,%rdx
    7046:	48 8d 05 f3 9c 02 00 	lea    0x29cf3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    704d:	48 89 c6             	mov    %rax,%rsi
    7050:	48 89 df             	mov    %rbx,%rdi
    7053:	e8 38 d8 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return surface;
    7058:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    705c:	eb 16                	jmp    7074 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    705e:	49 89 c4             	mov    %rax,%r12
    7061:	48 89 df             	mov    %rbx,%rdi
    7064:	e8 67 d2 ff ff       	call   42d0 <__cxa_free_exception@plt>
    7069:	4c 89 e0             	mov    %r12,%rax
    706c:	48 89 c7             	mov    %rax,%rdi
    706f:	e8 8c d8 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7074:	48 83 c4 30          	add    $0x30,%rsp
    7078:	5b                   	pop    %rbx
    7079:	41 5c                	pop    %r12
    707b:	5d                   	pop    %rbp
    707c:	c3                   	ret

000000000000707d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    707d:	55                   	push   %rbp
    707e:	48 89 e5             	mov    %rsp,%rbp
    7081:	41 54                	push   %r12
    7083:	53                   	push   %rbx
    7084:	48 83 ec 30          	sub    $0x30,%rsp
    7088:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    708c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7090:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    7094:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    709b:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    709c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    70a0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    70a4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    70a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70ac:	48 89 c7             	mov    %rax,%rdi
    70af:	e8 0c d5 ff ff       	call   45c0 <vkCreateSwapchainKHR@plt>
    70b4:	85 c0                	test   %eax,%eax
    70b6:	0f 95 c0             	setne  %al
    70b9:	84 c0                	test   %al,%al
    70bb:	74 3b                	je     70f8 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    70bd:	bf 10 00 00 00       	mov    $0x10,%edi
    70c2:	e8 f9 d0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    70c7:	48 89 c3             	mov    %rax,%rbx
    70ca:	48 8d 05 c8 73 01 00 	lea    0x173c8(%rip),%rax        # 1e499 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x71>
    70d1:	48 89 c6             	mov    %rax,%rsi
    70d4:	48 89 df             	mov    %rbx,%rdi
    70d7:	e8 54 d0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    70dc:	48 8b 05 c5 9e 02 00 	mov    0x29ec5(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    70e3:	48 89 c2             	mov    %rax,%rdx
    70e6:	48 8d 05 53 9c 02 00 	lea    0x29c53(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    70ed:	48 89 c6             	mov    %rax,%rsi
    70f0:	48 89 df             	mov    %rbx,%rdi
    70f3:	e8 98 d7 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return swapchain;
    70f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70fc:	eb 16                	jmp    7114 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    70fe:	49 89 c4             	mov    %rax,%r12
    7101:	48 89 df             	mov    %rbx,%rdi
    7104:	e8 c7 d1 ff ff       	call   42d0 <__cxa_free_exception@plt>
    7109:	4c 89 e0             	mov    %r12,%rax
    710c:	48 89 c7             	mov    %rax,%rdi
    710f:	e8 ec d7 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7114:	48 83 c4 30          	add    $0x30,%rsp
    7118:	5b                   	pop    %rbx
    7119:	41 5c                	pop    %r12
    711b:	5d                   	pop    %rbp
    711c:	c3                   	ret

000000000000711d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    711d:	55                   	push   %rbp
    711e:	48 89 e5             	mov    %rsp,%rbp
    7121:	41 54                	push   %r12
    7123:	53                   	push   %rbx
    7124:	48 83 ec 30          	sub    $0x30,%rsp
    7128:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    712c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7130:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    7134:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7138:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    713c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7140:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7144:	48 89 c7             	mov    %rax,%rdi
    7147:	e8 84 d3 ff ff       	call   44d0 <vkCreateImageView@plt>
    714c:	85 c0                	test   %eax,%eax
    714e:	0f 95 c0             	setne  %al
    7151:	84 c0                	test   %al,%al
    7153:	74 3b                	je     7190 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    7155:	bf 10 00 00 00       	mov    $0x10,%edi
    715a:	e8 61 d0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    715f:	48 89 c3             	mov    %rax,%rbx
    7162:	48 8d 05 4f 73 01 00 	lea    0x1734f(%rip),%rax        # 1e4b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    7169:	48 89 c6             	mov    %rax,%rsi
    716c:	48 89 df             	mov    %rbx,%rdi
    716f:	e8 bc cf ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7174:	48 8b 05 2d 9e 02 00 	mov    0x29e2d(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    717b:	48 89 c2             	mov    %rax,%rdx
    717e:	48 8d 05 bb 9b 02 00 	lea    0x29bbb(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7185:	48 89 c6             	mov    %rax,%rsi
    7188:	48 89 df             	mov    %rbx,%rdi
    718b:	e8 00 d7 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return imageView;
    7190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7194:	eb 16                	jmp    71ac <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    7196:	49 89 c4             	mov    %rax,%r12
    7199:	48 89 df             	mov    %rbx,%rdi
    719c:	e8 2f d1 ff ff       	call   42d0 <__cxa_free_exception@plt>
    71a1:	4c 89 e0             	mov    %r12,%rax
    71a4:	48 89 c7             	mov    %rax,%rdi
    71a7:	e8 54 d7 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    71ac:	48 83 c4 30          	add    $0x30,%rsp
    71b0:	5b                   	pop    %rbx
    71b1:	41 5c                	pop    %r12
    71b3:	5d                   	pop    %rbp
    71b4:	c3                   	ret

00000000000071b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    71b5:	55                   	push   %rbp
    71b6:	48 89 e5             	mov    %rsp,%rbp
    71b9:	41 54                	push   %r12
    71bb:	53                   	push   %rbx
    71bc:	48 83 ec 60          	sub    $0x60,%rsp
    71c0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    71c4:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    71c8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    71cc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    71d0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    71d4:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    71d8:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    71dd:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    71e4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    71e8:	48 89 c7             	mov    %rax,%rdi
    71eb:	e8 80 06 00 00       	call   7870 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    71f0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    71f4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    71f8:	48 89 c7             	mov    %rax,%rdi
    71fb:	e8 90 06 00 00       	call   7890 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    7200:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    7204:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    720b:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    720c:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    7210:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    7214:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7218:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    721c:	48 89 c7             	mov    %rax,%rdi
    721f:	e8 fc d0 ff ff       	call   4320 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    7224:	85 c0                	test   %eax,%eax
    7226:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    7229:	84 c0                	test   %al,%al
    722b:	74 3b                	je     7268 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    722d:	bf 10 00 00 00       	mov    $0x10,%edi
    7232:	e8 89 cf ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7237:	48 89 c3             	mov    %rax,%rbx
    723a:	48 8d 05 97 72 01 00 	lea    0x17297(%rip),%rax        # 1e4d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    7241:	48 89 c6             	mov    %rax,%rsi
    7244:	48 89 df             	mov    %rbx,%rdi
    7247:	e8 e4 ce ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    724c:	48 8b 05 55 9d 02 00 	mov    0x29d55(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7253:	48 89 c2             	mov    %rax,%rdx
    7256:	48 8d 05 e3 9a 02 00 	lea    0x29ae3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    725d:	48 89 c6             	mov    %rax,%rsi
    7260:	48 89 df             	mov    %rbx,%rdi
    7263:	e8 28 d6 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return shaderModule;
    7268:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    726c:	eb 16                	jmp    7284 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    726e:	49 89 c4             	mov    %rax,%r12
    7271:	48 89 df             	mov    %rbx,%rdi
    7274:	e8 57 d0 ff ff       	call   42d0 <__cxa_free_exception@plt>
    7279:	4c 89 e0             	mov    %r12,%rax
    727c:	48 89 c7             	mov    %rax,%rdi
    727f:	e8 7c d6 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7284:	48 83 c4 60          	add    $0x60,%rsp
    7288:	5b                   	pop    %rbx
    7289:	41 5c                	pop    %r12
    728b:	5d                   	pop    %rbp
    728c:	c3                   	ret

000000000000728d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    728d:	55                   	push   %rbp
    728e:	48 89 e5             	mov    %rsp,%rbp
    7291:	41 54                	push   %r12
    7293:	53                   	push   %rbx
    7294:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    729b:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    72a2:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    72a9:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    72b0:	be 04 00 00 00       	mov    $0x4,%esi
    72b5:	bf 02 00 00 00       	mov    $0x2,%edi
    72ba:	e8 9e 05 00 00       	call   785d <_ZStorSt13_Ios_OpenmodeS_>
    72bf:	89 c2                	mov    %eax,%edx
    72c1:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    72c8:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    72cf:	48 89 ce             	mov    %rcx,%rsi
    72d2:	48 89 c7             	mov    %rax,%rdi
    72d5:	e8 56 d5 ff ff       	call   4830 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    72da:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    72e1:	48 89 c7             	mov    %rax,%rdi
    72e4:	e8 37 d5 ff ff       	call   4820 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    72e9:	83 f0 01             	xor    $0x1,%eax
    72ec:	84 c0                	test   %al,%al
    72ee:	74 61                	je     7351 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    72f0:	bf 10 00 00 00       	mov    $0x10,%edi
    72f5:	e8 c6 ce ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    72fa:	48 89 c3             	mov    %rax,%rbx
    72fd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7301:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    7308:	48 8d 0d e9 71 01 00 	lea    0x171e9(%rip),%rcx        # 1e4f8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    730f:	48 89 ce             	mov    %rcx,%rsi
    7312:	48 89 c7             	mov    %rax,%rdi
    7315:	e8 9a 05 00 00       	call   78b4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    731a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    731e:	48 89 c6             	mov    %rax,%rsi
    7321:	48 89 df             	mov    %rbx,%rdi
    7324:	e8 17 d5 ff ff       	call   4840 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    7329:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    732d:	48 89 c7             	mov    %rax,%rdi
    7330:	e8 3b cf ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7335:	48 8b 05 6c 9c 02 00 	mov    0x29c6c(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    733c:	48 89 c2             	mov    %rax,%rdx
    733f:	48 8d 05 fa 99 02 00 	lea    0x299fa(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7346:	48 89 c6             	mov    %rax,%rsi
    7349:	48 89 df             	mov    %rbx,%rdi
    734c:	e8 3f d5 ff ff       	call   4890 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    7351:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    7358:	48 89 c7             	mov    %rax,%rdi
    735b:	e8 70 d5 ff ff       	call   48d0 <_ZNSi5tellgEv@plt>
    7360:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7364:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7368:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    736c:	48 89 c7             	mov    %rax,%rdi
    736f:	e8 42 06 00 00       	call   79b6 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    7374:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    7378:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    737c:	48 89 c7             	mov    %rax,%rdi
    737f:	e8 8c d5 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    7384:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    7388:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    738c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    7393:	48 89 ce             	mov    %rcx,%rsi
    7396:	48 89 c7             	mov    %rax,%rdi
    7399:	e8 2a 06 00 00       	call   79c8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    739e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    73a2:	48 89 c7             	mov    %rax,%rdi
    73a5:	e8 86 d1 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    73aa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    73ae:	be 00 00 00 00       	mov    $0x0,%esi
    73b3:	48 89 c7             	mov    %rax,%rdi
    73b6:	e8 c7 06 00 00       	call   7a82 <_ZNSt4fposI11__mbstate_tEC1El>
    73bb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    73bf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    73c3:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    73ca:	48 89 ce             	mov    %rcx,%rsi
    73cd:	48 89 c7             	mov    %rax,%rdi
    73d0:	e8 7b d2 ff ff       	call   4650 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    73d5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    73d9:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    73e0:	48 89 c7             	mov    %rax,%rdi
    73e3:	e8 ca 06 00 00       	call   7ab2 <_ZNSt6vectorIcSaIcEE4dataEv>
    73e8:	48 89 c1             	mov    %rax,%rcx
    73eb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    73f2:	48 89 da             	mov    %rbx,%rdx
    73f5:	48 89 ce             	mov    %rcx,%rsi
    73f8:	48 89 c7             	mov    %rax,%rdi
    73fb:	e8 40 d2 ff ff       	call   4640 <_ZNSi4readEPcl@plt>
  file.close();
    7400:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    7407:	48 89 c7             	mov    %rax,%rdi
    740a:	e8 71 cc ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    740f:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    7416:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    741d:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    7424:	48 89 ce             	mov    %rcx,%rsi
    7427:	48 89 c7             	mov    %rax,%rdi
    742a:	e8 86 fd ff ff       	call   71b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    742f:	48 89 c3             	mov    %rax,%rbx
    7432:	90                   	nop
}
    7433:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    743a:	48 89 c7             	mov    %rax,%rdi
    743d:	e8 fc 05 00 00       	call   7a3e <_ZNSt6vectorIcSaIcEED1Ev>
    7442:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    7449:	48 89 c7             	mov    %rax,%rdi
    744c:	e8 7f cc ff ff       	call   40d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    7451:	48 89 d8             	mov    %rbx,%rax
    7454:	eb 63                	jmp    74b9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    7456:	49 89 c4             	mov    %rax,%r12
    7459:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    745d:	48 89 c7             	mov    %rax,%rdi
    7460:	e8 0b ce ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7465:	eb 03                	jmp    746a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    7467:	49 89 c4             	mov    %rax,%r12
    746a:	48 89 df             	mov    %rbx,%rdi
    746d:	e8 5e ce ff ff       	call   42d0 <__cxa_free_exception@plt>
    7472:	4c 89 e3             	mov    %r12,%rbx
    7475:	eb 28                	jmp    749f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    7477:	48 89 c3             	mov    %rax,%rbx
    747a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    747e:	48 89 c7             	mov    %rax,%rdi
    7481:	e8 aa d0 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    7486:	eb 17                	jmp    749f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    7488:	48 89 c3             	mov    %rax,%rbx
    748b:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    7492:	48 89 c7             	mov    %rax,%rdi
    7495:	e8 a4 05 00 00       	call   7a3e <_ZNSt6vectorIcSaIcEED1Ev>
    749a:	eb 03                	jmp    749f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    749c:	48 89 c3             	mov    %rax,%rbx
    749f:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    74a6:	48 89 c7             	mov    %rax,%rdi
    74a9:	e8 22 cc ff ff       	call   40d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    74ae:	48 89 d8             	mov    %rbx,%rax
    74b1:	48 89 c7             	mov    %rax,%rdi
    74b4:	e8 47 d4 ff ff       	call   4900 <_Unwind_Resume@plt>
    74b9:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    74c0:	5b                   	pop    %rbx
    74c1:	41 5c                	pop    %r12
    74c3:	5d                   	pop    %rbp
    74c4:	c3                   	ret

00000000000074c5 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    74c5:	55                   	push   %rbp
    74c6:	48 89 e5             	mov    %rsp,%rbp
    74c9:	41 54                	push   %r12
    74cb:	53                   	push   %rbx
    74cc:	48 83 ec 30          	sub    $0x30,%rsp
    74d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    74d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    74d8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    74dc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    74e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    74e4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    74e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74ec:	48 89 c7             	mov    %rax,%rdi
    74ef:	e8 7c ce ff ff       	call   4370 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    74f4:	85 c0                	test   %eax,%eax
    74f6:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    74f9:	84 c0                	test   %al,%al
    74fb:	74 3b                	je     7538 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    74fd:	bf 10 00 00 00       	mov    $0x10,%edi
    7502:	e8 b9 cc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7507:	48 89 c3             	mov    %rax,%rbx
    750a:	48 8d 05 f7 6f 01 00 	lea    0x16ff7(%rip),%rax        # 1e508 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    7511:	48 89 c6             	mov    %rax,%rsi
    7514:	48 89 df             	mov    %rbx,%rdi
    7517:	e8 14 cc ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    751c:	48 8b 05 85 9a 02 00 	mov    0x29a85(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7523:	48 89 c2             	mov    %rax,%rdx
    7526:	48 8d 05 13 98 02 00 	lea    0x29813(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    752d:	48 89 c6             	mov    %rax,%rsi
    7530:	48 89 df             	mov    %rbx,%rdi
    7533:	e8 58 d3 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return pipelineLayout;
    7538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    753c:	eb 16                	jmp    7554 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    753e:	49 89 c4             	mov    %rax,%r12
    7541:	48 89 df             	mov    %rbx,%rdi
    7544:	e8 87 cd ff ff       	call   42d0 <__cxa_free_exception@plt>
    7549:	4c 89 e0             	mov    %r12,%rax
    754c:	48 89 c7             	mov    %rax,%rdi
    754f:	e8 ac d3 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7554:	48 83 c4 30          	add    $0x30,%rsp
    7558:	5b                   	pop    %rbx
    7559:	41 5c                	pop    %r12
    755b:	5d                   	pop    %rbp
    755c:	c3                   	ret

000000000000755d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    755d:	55                   	push   %rbp
    755e:	48 89 e5             	mov    %rsp,%rbp
    7561:	41 54                	push   %r12
    7563:	53                   	push   %rbx
    7564:	48 83 ec 30          	sub    $0x30,%rsp
    7568:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    756c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7570:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    7574:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7578:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    757c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7584:	48 89 c7             	mov    %rax,%rdi
    7587:	e8 f4 cc ff ff       	call   4280 <vkCreateRenderPass@plt>
    758c:	85 c0                	test   %eax,%eax
    758e:	0f 95 c0             	setne  %al
    7591:	84 c0                	test   %al,%al
    7593:	74 3b                	je     75d0 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    7595:	bf 10 00 00 00       	mov    $0x10,%edi
    759a:	e8 21 cc ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    759f:	48 89 c3             	mov    %rax,%rbx
    75a2:	48 8d 05 5f 6f 01 00 	lea    0x16f5f(%rip),%rax        # 1e508 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    75a9:	48 89 c6             	mov    %rax,%rsi
    75ac:	48 89 df             	mov    %rbx,%rdi
    75af:	e8 7c cb ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    75b4:	48 8b 05 ed 99 02 00 	mov    0x299ed(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    75bb:	48 89 c2             	mov    %rax,%rdx
    75be:	48 8d 05 7b 97 02 00 	lea    0x2977b(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    75c5:	48 89 c6             	mov    %rax,%rsi
    75c8:	48 89 df             	mov    %rbx,%rdi
    75cb:	e8 c0 d2 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return renderPass;
    75d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75d4:	eb 16                	jmp    75ec <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    75d6:	49 89 c4             	mov    %rax,%r12
    75d9:	48 89 df             	mov    %rbx,%rdi
    75dc:	e8 ef cc ff ff       	call   42d0 <__cxa_free_exception@plt>
    75e1:	4c 89 e0             	mov    %r12,%rax
    75e4:	48 89 c7             	mov    %rax,%rdi
    75e7:	e8 14 d3 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    75ec:	48 83 c4 30          	add    $0x30,%rsp
    75f0:	5b                   	pop    %rbx
    75f1:	41 5c                	pop    %r12
    75f3:	5d                   	pop    %rbp
    75f4:	c3                   	ret

00000000000075f5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    75f5:	55                   	push   %rbp
    75f6:	48 89 e5             	mov    %rsp,%rbp
    75f9:	41 54                	push   %r12
    75fb:	53                   	push   %rbx
    75fc:	48 83 ec 30          	sub    $0x30,%rsp
    7600:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7604:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7608:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    760c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7610:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7614:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7618:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    761c:	48 89 c7             	mov    %rax,%rdi
    761f:	e8 8c d0 ff ff       	call   46b0 <vkCreateFramebuffer@plt>
    7624:	85 c0                	test   %eax,%eax
    7626:	0f 95 c0             	setne  %al
    7629:	84 c0                	test   %al,%al
    762b:	74 3b                	je     7668 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    762d:	bf 10 00 00 00       	mov    $0x10,%edi
    7632:	e8 89 cb ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7637:	48 89 c3             	mov    %rax,%rbx
    763a:	48 8d 05 e9 6e 01 00 	lea    0x16ee9(%rip),%rax        # 1e52a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x102>
    7641:	48 89 c6             	mov    %rax,%rsi
    7644:	48 89 df             	mov    %rbx,%rdi
    7647:	e8 e4 ca ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    764c:	48 8b 05 55 99 02 00 	mov    0x29955(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7653:	48 89 c2             	mov    %rax,%rdx
    7656:	48 8d 05 e3 96 02 00 	lea    0x296e3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    765d:	48 89 c6             	mov    %rax,%rsi
    7660:	48 89 df             	mov    %rbx,%rdi
    7663:	e8 28 d2 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return framebuffer;
    7668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    766c:	eb 16                	jmp    7684 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    766e:	49 89 c4             	mov    %rax,%r12
    7671:	48 89 df             	mov    %rbx,%rdi
    7674:	e8 57 cc ff ff       	call   42d0 <__cxa_free_exception@plt>
    7679:	4c 89 e0             	mov    %r12,%rax
    767c:	48 89 c7             	mov    %rax,%rdi
    767f:	e8 7c d2 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7684:	48 83 c4 30          	add    $0x30,%rsp
    7688:	5b                   	pop    %rbx
    7689:	41 5c                	pop    %r12
    768b:	5d                   	pop    %rbp
    768c:	c3                   	ret

000000000000768d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    768d:	55                   	push   %rbp
    768e:	48 89 e5             	mov    %rsp,%rbp
    7691:	41 54                	push   %r12
    7693:	53                   	push   %rbx
    7694:	48 83 ec 30          	sub    $0x30,%rsp
    7698:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    769c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    76a0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    76a4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    76ab:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    76ac:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    76b0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    76b4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    76b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76bc:	48 89 c7             	mov    %rax,%rdi
    76bf:	e8 bc ca ff ff       	call   4180 <vkCreateCommandPool@plt>
    76c4:	85 c0                	test   %eax,%eax
    76c6:	0f 95 c0             	setne  %al
    76c9:	84 c0                	test   %al,%al
    76cb:	74 3b                	je     7708 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    76cd:	bf 10 00 00 00       	mov    $0x10,%edi
    76d2:	e8 e9 ca ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    76d7:	48 89 c3             	mov    %rax,%rbx
    76da:	48 8d 05 67 6e 01 00 	lea    0x16e67(%rip),%rax        # 1e548 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    76e1:	48 89 c6             	mov    %rax,%rsi
    76e4:	48 89 df             	mov    %rbx,%rdi
    76e7:	e8 44 ca ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    76ec:	48 8b 05 b5 98 02 00 	mov    0x298b5(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    76f3:	48 89 c2             	mov    %rax,%rdx
    76f6:	48 8d 05 43 96 02 00 	lea    0x29643(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    76fd:	48 89 c6             	mov    %rax,%rsi
    7700:	48 89 df             	mov    %rbx,%rdi
    7703:	e8 88 d1 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return commandPool;
    7708:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    770c:	eb 16                	jmp    7724 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    770e:	49 89 c4             	mov    %rax,%r12
    7711:	48 89 df             	mov    %rbx,%rdi
    7714:	e8 b7 cb ff ff       	call   42d0 <__cxa_free_exception@plt>
    7719:	4c 89 e0             	mov    %r12,%rax
    771c:	48 89 c7             	mov    %rax,%rdi
    771f:	e8 dc d1 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7724:	48 83 c4 30          	add    $0x30,%rsp
    7728:	5b                   	pop    %rbx
    7729:	41 5c                	pop    %r12
    772b:	5d                   	pop    %rbp
    772c:	c3                   	ret

000000000000772d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    772d:	55                   	push   %rbp
    772e:	48 89 e5             	mov    %rsp,%rbp
    7731:	41 54                	push   %r12
    7733:	53                   	push   %rbx
    7734:	48 83 ec 30          	sub    $0x30,%rsp
    7738:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    773c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7740:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    7744:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7748:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    774c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7750:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7754:	48 89 c7             	mov    %rax,%rdi
    7757:	e8 a4 cf ff ff       	call   4700 <vkCreateSemaphore@plt>
    775c:	85 c0                	test   %eax,%eax
    775e:	0f 95 c0             	setne  %al
    7761:	84 c0                	test   %al,%al
    7763:	74 3b                	je     77a0 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    7765:	bf 10 00 00 00       	mov    $0x10,%edi
    776a:	e8 51 ca ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    776f:	48 89 c3             	mov    %rax,%rbx
    7772:	48 8d 05 ee 6d 01 00 	lea    0x16dee(%rip),%rax        # 1e567 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13f>
    7779:	48 89 c6             	mov    %rax,%rsi
    777c:	48 89 df             	mov    %rbx,%rdi
    777f:	e8 ac c9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7784:	48 8b 05 1d 98 02 00 	mov    0x2981d(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    778b:	48 89 c2             	mov    %rax,%rdx
    778e:	48 8d 05 ab 95 02 00 	lea    0x295ab(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7795:	48 89 c6             	mov    %rax,%rsi
    7798:	48 89 df             	mov    %rbx,%rdi
    779b:	e8 f0 d0 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return semaphore;
    77a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77a4:	eb 16                	jmp    77bc <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    77a6:	49 89 c4             	mov    %rax,%r12
    77a9:	48 89 df             	mov    %rbx,%rdi
    77ac:	e8 1f cb ff ff       	call   42d0 <__cxa_free_exception@plt>
    77b1:	4c 89 e0             	mov    %r12,%rax
    77b4:	48 89 c7             	mov    %rax,%rdi
    77b7:	e8 44 d1 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    77bc:	48 83 c4 30          	add    $0x30,%rsp
    77c0:	5b                   	pop    %rbx
    77c1:	41 5c                	pop    %r12
    77c3:	5d                   	pop    %rbp
    77c4:	c3                   	ret

00000000000077c5 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    77c5:	55                   	push   %rbp
    77c6:	48 89 e5             	mov    %rsp,%rbp
    77c9:	41 54                	push   %r12
    77cb:	53                   	push   %rbx
    77cc:	48 83 ec 30          	sub    $0x30,%rsp
    77d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    77d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    77d8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    77dc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    77e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    77e4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    77e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77ec:	48 89 c7             	mov    %rax,%rdi
    77ef:	e8 1c ce ff ff       	call   4610 <vkCreateFence@plt>
    77f4:	85 c0                	test   %eax,%eax
    77f6:	0f 95 c0             	setne  %al
    77f9:	84 c0                	test   %al,%al
    77fb:	74 3b                	je     7838 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    77fd:	bf 10 00 00 00       	mov    $0x10,%edi
    7802:	e8 b9 c9 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    7807:	48 89 c3             	mov    %rax,%rbx
    780a:	48 8d 05 72 6d 01 00 	lea    0x16d72(%rip),%rax        # 1e583 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x15b>
    7811:	48 89 c6             	mov    %rax,%rsi
    7814:	48 89 df             	mov    %rbx,%rdi
    7817:	e8 14 c9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    781c:	48 8b 05 85 97 02 00 	mov    0x29785(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7823:	48 89 c2             	mov    %rax,%rdx
    7826:	48 8d 05 13 95 02 00 	lea    0x29513(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    782d:	48 89 c6             	mov    %rax,%rsi
    7830:	48 89 df             	mov    %rbx,%rdi
    7833:	e8 58 d0 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return fence;
    7838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    783c:	eb 16                	jmp    7854 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    783e:	49 89 c4             	mov    %rax,%r12
    7841:	48 89 df             	mov    %rbx,%rdi
    7844:	e8 87 ca ff ff       	call   42d0 <__cxa_free_exception@plt>
    7849:	4c 89 e0             	mov    %r12,%rax
    784c:	48 89 c7             	mov    %rax,%rdi
    784f:	e8 ac d0 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    7854:	48 83 c4 30          	add    $0x30,%rsp
    7858:	5b                   	pop    %rbx
    7859:	41 5c                	pop    %r12
    785b:	5d                   	pop    %rbp
    785c:	c3                   	ret

000000000000785d <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    785d:	55                   	push   %rbp
    785e:	48 89 e5             	mov    %rsp,%rbp
    7861:	89 7d fc             	mov    %edi,-0x4(%rbp)
    7864:	89 75 f8             	mov    %esi,-0x8(%rbp)
    7867:	8b 45 fc             	mov    -0x4(%rbp),%eax
    786a:	0b 45 f8             	or     -0x8(%rbp),%eax
    786d:	5d                   	pop    %rbp
    786e:	c3                   	ret
    786f:	90                   	nop

0000000000007870 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7870:	55                   	push   %rbp
    7871:	48 89 e5             	mov    %rsp,%rbp
    7874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    7878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    787c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7884:	48 8b 00             	mov    (%rax),%rax
    7887:	48 29 c2             	sub    %rax,%rdx
    788a:	48 89 d0             	mov    %rdx,%rax
    788d:	5d                   	pop    %rbp
    788e:	c3                   	ret
    788f:	90                   	nop

0000000000007890 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    7890:	55                   	push   %rbp
    7891:	48 89 e5             	mov    %rsp,%rbp
    7894:	48 83 ec 10          	sub    $0x10,%rsp
    7898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    789c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a0:	48 8b 10             	mov    (%rax),%rdx
    78a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a7:	48 89 d6             	mov    %rdx,%rsi
    78aa:	48 89 c7             	mov    %rax,%rdi
    78ad:	e8 24 02 00 00       	call   7ad6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    78b2:	c9                   	leave
    78b3:	c3                   	ret

00000000000078b4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    78b4:	55                   	push   %rbp
    78b5:	48 89 e5             	mov    %rsp,%rbp
    78b8:	53                   	push   %rbx
    78b9:	48 83 ec 38          	sub    $0x38,%rsp
    78bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    78c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    78c5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    78c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78cd:	48 89 c7             	mov    %rax,%rdi
    78d0:	e8 43 d6 ff ff       	call   4f18 <_ZNSt11char_traitsIcE6lengthEPKc>
    78d5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    78d9:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    78dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    78e1:	48 89 d6             	mov    %rdx,%rsi
    78e4:	48 89 c7             	mov    %rax,%rdi
    78e7:	e8 34 c8 ff ff       	call   4120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    78ec:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    78f0:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    78f4:	48 89 d6             	mov    %rdx,%rsi
    78f7:	48 89 c7             	mov    %rax,%rdi
    78fa:	e8 e9 01 00 00       	call   7ae8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    78ff:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    7903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7907:	48 89 d6             	mov    %rdx,%rsi
    790a:	48 89 c7             	mov    %rax,%rdi
    790d:	e8 8e cf ff ff       	call   48a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    7912:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    7916:	48 89 c7             	mov    %rax,%rdi
    7919:	e8 12 cc ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    791e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    7922:	48 89 c7             	mov    %rax,%rdi
    7925:	e8 06 cc ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    792a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    792e:	48 89 c7             	mov    %rax,%rdi
    7931:	e8 7a c9 ff ff       	call   42b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    7936:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    793a:	48 01 c2             	add    %rax,%rdx
    793d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7941:	48 89 d6             	mov    %rdx,%rsi
    7944:	48 89 c7             	mov    %rax,%rdi
    7947:	e8 94 ce ff ff       	call   47e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    794c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7950:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    7954:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7958:	48 89 ce             	mov    %rcx,%rsi
    795b:	48 89 c7             	mov    %rax,%rdi
    795e:	e8 dd c6 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    7963:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7967:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    796b:	48 89 d6             	mov    %rdx,%rsi
    796e:	48 89 c7             	mov    %rax,%rdi
    7971:	e8 fa cf ff ff       	call   4970 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    7976:	eb 34                	jmp    79ac <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    7978:	48 89 c3             	mov    %rax,%rbx
    797b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    797f:	48 89 c7             	mov    %rax,%rdi
    7982:	e8 a9 cb ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    7987:	48 89 d8             	mov    %rbx,%rax
    798a:	48 89 c7             	mov    %rax,%rdi
    798d:	e8 6e cf ff ff       	call   4900 <_Unwind_Resume@plt>
    }
    7992:	48 89 c3             	mov    %rax,%rbx
    7995:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7999:	48 89 c7             	mov    %rax,%rdi
    799c:	e8 cf c8 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    79a1:	48 89 d8             	mov    %rbx,%rax
    79a4:	48 89 c7             	mov    %rax,%rdi
    79a7:	e8 54 cf ff ff       	call   4900 <_Unwind_Resume@plt>
    79ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79b4:	c9                   	leave
    79b5:	c3                   	ret

00000000000079b6 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    79b6:	55                   	push   %rbp
    79b7:	48 89 e5             	mov    %rsp,%rbp
    79ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c2:	48 8b 00             	mov    (%rax),%rax
    79c5:	5d                   	pop    %rbp
    79c6:	c3                   	ret
    79c7:	90                   	nop

00000000000079c8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    79c8:	55                   	push   %rbp
    79c9:	48 89 e5             	mov    %rsp,%rbp
    79cc:	53                   	push   %rbx
    79cd:	48 83 ec 28          	sub    $0x28,%rsp
    79d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    79d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    79dd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    79e1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    79e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79e9:	48 89 d6             	mov    %rdx,%rsi
    79ec:	48 89 c7             	mov    %rax,%rdi
    79ef:	e8 1d 01 00 00       	call   7b11 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    79f4:	48 89 c1             	mov    %rax,%rcx
    79f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79fb:	48 89 c2             	mov    %rax,%rdx
    79fe:	48 89 ce             	mov    %rcx,%rsi
    7a01:	48 89 df             	mov    %rbx,%rdi
    7a04:	e8 85 01 00 00       	call   7b8e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    7a09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a11:	48 89 d6             	mov    %rdx,%rsi
    7a14:	48 89 c7             	mov    %rax,%rdi
    7a17:	e8 14 02 00 00       	call   7c30 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    7a1c:	eb 1a                	jmp    7a38 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    7a1e:	48 89 c3             	mov    %rax,%rbx
    7a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 bf 01 00 00       	call   7bec <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    7a2d:	48 89 d8             	mov    %rbx,%rax
    7a30:	48 89 c7             	mov    %rax,%rdi
    7a33:	e8 c8 ce ff ff       	call   4900 <_Unwind_Resume@plt>
    7a38:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a3c:	c9                   	leave
    7a3d:	c3                   	ret

0000000000007a3e <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7a3e:	55                   	push   %rbp
    7a3f:	48 89 e5             	mov    %rsp,%rbp
    7a42:	48 83 ec 10          	sub    $0x10,%rsp
    7a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a4e:	48 89 c7             	mov    %rax,%rdi
    7a51:	e8 1a 02 00 00       	call   7c70 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    7a56:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7a59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a5d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a65:	48 8b 00             	mov    (%rax),%rax
    7a68:	48 89 ce             	mov    %rcx,%rsi
    7a6b:	48 89 c7             	mov    %rax,%rdi
    7a6e:	e8 0b 02 00 00       	call   7c7e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    7a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a77:	48 89 c7             	mov    %rax,%rdi
    7a7a:	e8 6d 01 00 00       	call   7bec <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    7a7f:	90                   	nop
    7a80:	c9                   	leave
    7a81:	c3                   	ret

0000000000007a82 <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    7a82:	55                   	push   %rbp
    7a83:	48 89 e5             	mov    %rsp,%rbp
    7a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    7a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7a96:	48 89 10             	mov    %rdx,(%rax)
    7a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a9d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    7aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7aa8:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    7aaf:	90                   	nop
    7ab0:	5d                   	pop    %rbp
    7ab1:	c3                   	ret

0000000000007ab2 <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7ab2:	55                   	push   %rbp
    7ab3:	48 89 e5             	mov    %rsp,%rbp
    7ab6:	48 83 ec 10          	sub    $0x10,%rsp
    7aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac2:	48 8b 10             	mov    (%rax),%rdx
    7ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac9:	48 89 d6             	mov    %rdx,%rsi
    7acc:	48 89 c7             	mov    %rax,%rdi
    7acf:	e8 02 00 00 00       	call   7ad6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    7ad4:	c9                   	leave
    7ad5:	c3                   	ret

0000000000007ad6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    7ad6:	55                   	push   %rbp
    7ad7:	48 89 e5             	mov    %rsp,%rbp
    7ada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7ae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7ae6:	5d                   	pop    %rbp
    7ae7:	c3                   	ret

0000000000007ae8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    7ae8:	55                   	push   %rbp
    7ae9:	48 89 e5             	mov    %rsp,%rbp
    7aec:	48 83 ec 10          	sub    $0x10,%rsp
    7af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7af4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    7af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7afc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b00:	48 89 d6             	mov    %rdx,%rsi
    7b03:	48 89 c7             	mov    %rax,%rdi
    7b06:	e8 a8 01 00 00       	call   7cb3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    7b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b0f:	c9                   	leave
    7b10:	c3                   	ret

0000000000007b11 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7b11:	55                   	push   %rbp
    7b12:	48 89 e5             	mov    %rsp,%rbp
    7b15:	53                   	push   %rbx
    7b16:	48 83 ec 28          	sub    $0x28,%rsp
    7b1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7b1e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    7b22:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7b26:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b2a:	48 89 d6             	mov    %rdx,%rsi
    7b2d:	48 89 c7             	mov    %rax,%rdi
    7b30:	e8 eb c6 ff ff       	call   4220 <_ZNSaIcEC1ERKS_@plt>
    7b35:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b39:	48 89 c7             	mov    %rax,%rdi
    7b3c:	e8 9b 01 00 00       	call   7cdc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    7b41:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7b45:	0f 92 c3             	setb   %bl
    7b48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b4c:	48 89 c7             	mov    %rax,%rdi
    7b4f:	e8 dc c9 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    7b54:	84 db                	test   %bl,%bl
    7b56:	74 0f                	je     7b67 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    7b58:	48 8d 05 41 6a 01 00 	lea    0x16a41(%rip),%rax        # 1e5a0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x178>
    7b5f:	48 89 c7             	mov    %rax,%rdi
    7b62:	e8 89 c6 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    7b67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7b6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b6f:	c9                   	leave
    7b70:	c3                   	ret
    7b71:	90                   	nop

0000000000007b72 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    7b72:	55                   	push   %rbp
    7b73:	48 89 e5             	mov    %rsp,%rbp
    7b76:	48 83 ec 10          	sub    $0x10,%rsp
    7b7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b82:	48 89 c7             	mov    %rax,%rdi
    7b85:	e8 e6 c4 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    7b8a:	90                   	nop
    7b8b:	c9                   	leave
    7b8c:	c3                   	ret
    7b8d:	90                   	nop

0000000000007b8e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7b8e:	55                   	push   %rbp
    7b8f:	48 89 e5             	mov    %rsp,%rbp
    7b92:	53                   	push   %rbx
    7b93:	48 83 ec 28          	sub    $0x28,%rsp
    7b97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7b9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    7ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ba7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7bab:	48 89 d6             	mov    %rdx,%rsi
    7bae:	48 89 c7             	mov    %rax,%rdi
    7bb1:	e8 68 01 00 00       	call   7d1e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    7bb6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7bba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bbe:	48 89 d6             	mov    %rdx,%rsi
    7bc1:	48 89 c7             	mov    %rax,%rdi
    7bc4:	e8 87 01 00 00       	call   7d50 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    7bc9:	eb 1a                	jmp    7be5 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    7bcb:	48 89 c3             	mov    %rax,%rbx
    7bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bd2:	48 89 c7             	mov    %rax,%rdi
    7bd5:	e8 98 ff ff ff       	call   7b72 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7bda:	48 89 d8             	mov    %rbx,%rax
    7bdd:	48 89 c7             	mov    %rax,%rdi
    7be0:	e8 1b cd ff ff       	call   4900 <_Unwind_Resume@plt>
    7be5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7be9:	c9                   	leave
    7bea:	c3                   	ret
    7beb:	90                   	nop

0000000000007bec <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7bec:	55                   	push   %rbp
    7bed:	48 89 e5             	mov    %rsp,%rbp
    7bf0:	48 83 ec 10          	sub    $0x10,%rsp
    7bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bfc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c04:	48 8b 00             	mov    (%rax),%rax
    7c07:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    7c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c0e:	48 8b 08             	mov    (%rax),%rcx
    7c11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c15:	48 89 ce             	mov    %rcx,%rsi
    7c18:	48 89 c7             	mov    %rax,%rdi
    7c1b:	e8 82 01 00 00       	call   7da2 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    7c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c24:	48 89 c7             	mov    %rax,%rdi
    7c27:	e8 46 ff ff ff       	call   7b72 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7c2c:	90                   	nop
    7c2d:	c9                   	leave
    7c2e:	c3                   	ret
    7c2f:	90                   	nop

0000000000007c30 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7c30:	55                   	push   %rbp
    7c31:	48 89 e5             	mov    %rsp,%rbp
    7c34:	48 83 ec 10          	sub    $0x10,%rsp
    7c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c44:	48 89 c7             	mov    %rax,%rdi
    7c47:	e8 24 00 00 00       	call   7c70 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    7c4c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c53:	48 8b 00             	mov    (%rax),%rax
    7c56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7c5a:	48 89 ce             	mov    %rcx,%rsi
    7c5d:	48 89 c7             	mov    %rax,%rdi
    7c60:	e8 72 01 00 00       	call   7dd7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7c65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c69:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7c6d:	90                   	nop
    7c6e:	c9                   	leave
    7c6f:	c3                   	ret

0000000000007c70 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7c70:	55                   	push   %rbp
    7c71:	48 89 e5             	mov    %rsp,%rbp
    7c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c7c:	5d                   	pop    %rbp
    7c7d:	c3                   	ret

0000000000007c7e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7c7e:	55                   	push   %rbp
    7c7f:	48 89 e5             	mov    %rsp,%rbp
    7c82:	48 83 ec 20          	sub    $0x20,%rsp
    7c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7c92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c9a:	48 89 d6             	mov    %rdx,%rsi
    7c9d:	48 89 c7             	mov    %rax,%rdi
    7ca0:	e8 5b 01 00 00       	call   7e00 <_ZSt8_DestroyIPcEvT_S1_>
    }
    7ca5:	90                   	nop
    7ca6:	c9                   	leave
    7ca7:	c3                   	ret

0000000000007ca8 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    7ca8:	55                   	push   %rbp
    7ca9:	48 89 e5             	mov    %rsp,%rbp
    7cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7cb0:	90                   	nop
    7cb1:	5d                   	pop    %rbp
    7cb2:	c3                   	ret

0000000000007cb3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    7cb3:	55                   	push   %rbp
    7cb4:	48 89 e5             	mov    %rsp,%rbp
    7cb7:	48 83 ec 10          	sub    $0x10,%rsp
    7cbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    7cc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ccb:	48 89 d6             	mov    %rdx,%rsi
    7cce:	48 89 c7             	mov    %rax,%rdi
    7cd1:	e8 4a c5 ff ff       	call   4220 <_ZNSaIcEC1ERKS_@plt>
    7cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cda:	c9                   	leave
    7cdb:	c3                   	ret

0000000000007cdc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7cdc:	55                   	push   %rbp
    7cdd:	48 89 e5             	mov    %rsp,%rbp
    7ce0:	48 83 ec 20          	sub    $0x20,%rsp
    7ce4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7ce8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7cef:	ff ff 7f 
    7cf2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7cf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cfa:	48 89 c7             	mov    %rax,%rdi
    7cfd:	e8 52 01 00 00       	call   7e54 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    7d02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7d06:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7d0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7d0e:	48 89 d6             	mov    %rdx,%rsi
    7d11:	48 89 c7             	mov    %rax,%rdi
    7d14:	e8 a4 df ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    7d19:	48 8b 00             	mov    (%rax),%rax
      }
    7d1c:	c9                   	leave
    7d1d:	c3                   	ret

0000000000007d1e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7d1e:	55                   	push   %rbp
    7d1f:	48 89 e5             	mov    %rsp,%rbp
    7d22:	48 83 ec 10          	sub    $0x10,%rsp
    7d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7d2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d36:	48 89 d6             	mov    %rdx,%rsi
    7d39:	48 89 c7             	mov    %rax,%rdi
    7d3c:	e8 0f ca ff ff       	call   4750 <_ZNSaIcEC2ERKS_@plt>
    7d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d45:	48 89 c7             	mov    %rax,%rdi
    7d48:	e8 21 01 00 00       	call   7e6e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    7d4d:	90                   	nop
    7d4e:	c9                   	leave
    7d4f:	c3                   	ret

0000000000007d50 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	48 83 ec 10          	sub    $0x10,%rsp
    7d58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7d60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d68:	48 89 d6             	mov    %rdx,%rsi
    7d6b:	48 89 c7             	mov    %rax,%rdi
    7d6e:	e8 29 01 00 00       	call   7e9c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    7d73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d77:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7e:	48 8b 10             	mov    (%rax),%rdx
    7d81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d85:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d8d:	48 8b 10             	mov    (%rax),%rdx
    7d90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d94:	48 01 c2             	add    %rax,%rdx
    7d97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d9b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7d9f:	90                   	nop
    7da0:	c9                   	leave
    7da1:	c3                   	ret

0000000000007da2 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    7da2:	55                   	push   %rbp
    7da3:	48 89 e5             	mov    %rsp,%rbp
    7da6:	48 83 ec 20          	sub    $0x20,%rsp
    7daa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7db2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    7db6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7dbb:	74 17                	je     7dd4 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7dc5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7dc9:	48 89 ce             	mov    %rcx,%rsi
    7dcc:	48 89 c7             	mov    %rax,%rdi
    7dcf:	e8 52 00 00 00       	call   7e26 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    7dd4:	90                   	nop
    7dd5:	c9                   	leave
    7dd6:	c3                   	ret

0000000000007dd7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7dd7:	55                   	push   %rbp
    7dd8:	48 89 e5             	mov    %rsp,%rbp
    7ddb:	48 83 ec 20          	sub    $0x20,%rsp
    7ddf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7de7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7deb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7df3:	48 89 d6             	mov    %rdx,%rsi
    7df6:	48 89 c7             	mov    %rax,%rdi
    7df9:	e8 d1 00 00 00       	call   7ecf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    7dfe:	c9                   	leave
    7dff:	c3                   	ret

0000000000007e00 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7e00:	55                   	push   %rbp
    7e01:	48 89 e5             	mov    %rsp,%rbp
    7e04:	48 83 ec 10          	sub    $0x10,%rsp
    7e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7e10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e18:	48 89 d6             	mov    %rdx,%rsi
    7e1b:	48 89 c7             	mov    %rax,%rdi
    7e1e:	e8 d5 00 00 00       	call   7ef8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    7e23:	90                   	nop
    7e24:	c9                   	leave
    7e25:	c3                   	ret

0000000000007e26 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7e26:	55                   	push   %rbp
    7e27:	48 89 e5             	mov    %rsp,%rbp
    7e2a:	48 83 ec 20          	sub    $0x20,%rsp
    7e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7e3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e3e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e46:	48 89 ce             	mov    %rcx,%rsi
    7e49:	48 89 c7             	mov    %rax,%rdi
    7e4c:	e8 c5 00 00 00       	call   7f16 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    7e51:	90                   	nop
    7e52:	c9                   	leave
    7e53:	c3                   	ret

0000000000007e54 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7e54:	55                   	push   %rbp
    7e55:	48 89 e5             	mov    %rsp,%rbp
    7e58:	48 83 ec 10          	sub    $0x10,%rsp
    7e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e64:	48 89 c7             	mov    %rax,%rdi
    7e67:	e8 d4 00 00 00       	call   7f40 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    7e6c:	c9                   	leave
    7e6d:	c3                   	ret

0000000000007e6e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7e6e:	55                   	push   %rbp
    7e6f:	48 89 e5             	mov    %rsp,%rbp
    7e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7e8c:	00 
    7e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e91:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7e98:	00 
	{ }
    7e99:	90                   	nop
    7e9a:	5d                   	pop    %rbp
    7e9b:	c3                   	ret

0000000000007e9c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7e9c:	55                   	push   %rbp
    7e9d:	48 89 e5             	mov    %rsp,%rbp
    7ea0:	48 83 ec 10          	sub    $0x10,%rsp
    7ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7eac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7eb1:	74 15                	je     7ec8 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    7eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ebb:	48 89 d6             	mov    %rdx,%rsi
    7ebe:	48 89 c7             	mov    %rax,%rdi
    7ec1:	e8 94 00 00 00       	call   7f5a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    7ec6:	eb 05                	jmp    7ecd <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    7ec8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7ecd:	c9                   	leave
    7ece:	c3                   	ret

0000000000007ecf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7ecf:	55                   	push   %rbp
    7ed0:	48 89 e5             	mov    %rsp,%rbp
    7ed3:	48 83 ec 20          	sub    $0x20,%rsp
    7ed7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7edb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7edf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7ee3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7ee7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7eeb:	48 89 d6             	mov    %rdx,%rsi
    7eee:	48 89 c7             	mov    %rax,%rdi
    7ef1:	e8 8e 00 00 00       	call   7f84 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    7ef6:	c9                   	leave
    7ef7:	c3                   	ret

0000000000007ef8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7ef8:	55                   	push   %rbp
    7ef9:	48 89 e5             	mov    %rsp,%rbp
    7efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f04:	90                   	nop
    7f05:	5d                   	pop    %rbp
    7f06:	c3                   	ret

0000000000007f07 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7f07:	55                   	push   %rbp
    7f08:	48 89 e5             	mov    %rsp,%rbp
    7f0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f13:	5d                   	pop    %rbp
    7f14:	c3                   	ret
    7f15:	90                   	nop

0000000000007f16 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7f16:	55                   	push   %rbp
    7f17:	48 89 e5             	mov    %rsp,%rbp
    7f1a:	48 83 ec 20          	sub    $0x20,%rsp
    7f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7f2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f32:	48 89 d6             	mov    %rdx,%rsi
    7f35:	48 89 c7             	mov    %rax,%rdi
    7f38:	e8 63 c5 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    7f3d:	c9                   	leave
    7f3e:	c3                   	ret
    7f3f:	90                   	nop

0000000000007f40 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7f40:	55                   	push   %rbp
    7f41:	48 89 e5             	mov    %rsp,%rbp
    7f44:	48 83 ec 10          	sub    $0x10,%rsp
    7f48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f50:	48 89 c7             	mov    %rax,%rdi
    7f53:	e8 8a 00 00 00       	call   7fe2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    7f58:	c9                   	leave
    7f59:	c3                   	ret

0000000000007f5a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    7f5a:	55                   	push   %rbp
    7f5b:	48 89 e5             	mov    %rsp,%rbp
    7f5e:	48 83 ec 10          	sub    $0x10,%rsp
    7f62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7f6a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	ba 00 00 00 00       	mov    $0x0,%edx
    7f77:	48 89 ce             	mov    %rcx,%rsi
    7f7a:	48 89 c7             	mov    %rax,%rdi
    7f7d:	e8 74 00 00 00       	call   7ff6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    7f82:	c9                   	leave
    7f83:	c3                   	ret

0000000000007f84 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7f84:	55                   	push   %rbp
    7f85:	48 89 e5             	mov    %rsp,%rbp
    7f88:	48 83 ec 20          	sub    $0x20,%rsp
    7f8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f90:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7f94:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7f99:	74 40                	je     7fdb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    7f9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f9f:	48 89 c7             	mov    %rax,%rdi
    7fa2:	e8 60 ff ff ff       	call   7f07 <_ZSt11__addressofIcEPT_RS0_>
    7fa7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7faf:	48 89 c7             	mov    %rax,%rdi
    7fb2:	e8 87 00 00 00       	call   803e <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    7fb7:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7fbc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fc0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7fc4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fcc:	48 89 ce             	mov    %rcx,%rsi
    7fcf:	48 89 c7             	mov    %rax,%rdi
    7fd2:	e8 8a 00 00 00       	call   8061 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    7fd7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7fdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7fdf:	c9                   	leave
    7fe0:	c3                   	ret
    7fe1:	90                   	nop

0000000000007fe2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7fe2:	55                   	push   %rbp
    7fe3:	48 89 e5             	mov    %rsp,%rbp
    7fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7fea:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7ff1:	ff ff 7f 
      }
    7ff4:	5d                   	pop    %rbp
    7ff5:	c3                   	ret

0000000000007ff6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7ff6:	55                   	push   %rbp
    7ff7:	48 89 e5             	mov    %rsp,%rbp
    7ffa:	48 83 ec 20          	sub    $0x20,%rsp
    7ffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    800a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800e:	48 89 c7             	mov    %rax,%rdi
    8011:	e8 cc ff ff ff       	call   7fe2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    8016:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    801a:	0f 92 c0             	setb   %al
    801d:	0f b6 c0             	movzbl %al,%eax
    8020:	48 85 c0             	test   %rax,%rax
    8023:	0f 95 c0             	setne  %al
    8026:	84 c0                	test   %al,%al
    8028:	74 05                	je     802f <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    802a:	e8 e1 c0 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    802f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8033:	48 89 c7             	mov    %rax,%rdi
    8036:	e8 45 c4 ff ff       	call   4480 <_Znwm@plt>
    803b:	90                   	nop
      }
    803c:	c9                   	leave
    803d:	c3                   	ret

000000000000803e <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    803e:	55                   	push   %rbp
    803f:	48 89 e5             	mov    %rsp,%rbp
    8042:	48 83 ec 10          	sub    $0x10,%rsp
    8046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    804a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    804e:	48 89 c6             	mov    %rax,%rsi
    8051:	bf 01 00 00 00       	mov    $0x1,%edi
    8056:	e8 1d e6 ff ff       	call   6678 <_ZnwmPv>
    805b:	c6 00 00             	movb   $0x0,(%rax)
    }
    805e:	90                   	nop
    805f:	c9                   	leave
    8060:	c3                   	ret

0000000000008061 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8061:	55                   	push   %rbp
    8062:	48 89 e5             	mov    %rsp,%rbp
    8065:	48 83 ec 20          	sub    $0x20,%rsp
    8069:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    806d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8071:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8075:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8079:	48 89 c7             	mov    %rax,%rdi
    807c:	e8 27 fc ff ff       	call   7ca8 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8081:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8085:	48 89 c7             	mov    %rax,%rdi
    8088:	e8 fd e5 ff ff       	call   668a <_ZSt17__size_to_integerm>
    808d:	48 89 c1             	mov    %rax,%rcx
    8090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8094:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8098:	48 89 ce             	mov    %rcx,%rsi
    809b:	48 89 c7             	mov    %rax,%rdi
    809e:	e8 02 00 00 00       	call   80a5 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    80a3:	c9                   	leave
    80a4:	c3                   	ret

00000000000080a5 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    80a5:	55                   	push   %rbp
    80a6:	48 89 e5             	mov    %rsp,%rbp
    80a9:	48 83 ec 20          	sub    $0x20,%rsp
    80ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    80b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    80b9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    80be:	75 06                	jne    80c6 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    80c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80c4:	eb 2a                	jmp    80f0 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    80c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80ce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    80d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    80d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80da:	48 89 ce             	mov    %rcx,%rsi
    80dd:	48 89 c7             	mov    %rax,%rdi
    80e0:	e8 0d 00 00 00       	call   80f2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    80e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80ed:	48 01 d0             	add    %rdx,%rax
    }
    80f0:	c9                   	leave
    80f1:	c3                   	ret

00000000000080f2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    80f2:	55                   	push   %rbp
    80f3:	48 89 e5             	mov    %rsp,%rbp
    80f6:	48 83 ec 20          	sub    $0x20,%rsp
    80fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8102:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8106:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    810a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    810e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8112:	48 89 ce             	mov    %rcx,%rsi
    8115:	48 89 c7             	mov    %rax,%rdi
    8118:	e8 03 00 00 00       	call   8120 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    811d:	90                   	nop
    811e:	c9                   	leave
    811f:	c3                   	ret

0000000000008120 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    8120:	55                   	push   %rbp
    8121:	48 89 e5             	mov    %rsp,%rbp
    8124:	48 83 ec 30          	sub    $0x30,%rsp
    8128:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    812c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8130:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    8134:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8138:	0f b6 00             	movzbl (%rax),%eax
    813b:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    813e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8142:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    8146:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    814a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    814f:	74 19                	je     816a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    8151:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    8155:	0f b6 c8             	movzbl %al,%ecx
    8158:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    815c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8160:	89 ce                	mov    %ecx,%esi
    8162:	48 89 c7             	mov    %rax,%rdi
    8165:	e8 a6 c0 ff ff       	call   4210 <memset@plt>
    }
    816a:	90                   	nop
    816b:	c9                   	leave
    816c:	c3                   	ret

000000000000816d <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    816d:	55                   	push   %rbp
    816e:	48 89 e5             	mov    %rsp,%rbp
    8171:	48 83 ec 10          	sub    $0x10,%rsp
    8175:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    817d:	48 89 c7             	mov    %rax,%rdi
    8180:	e8 7b bf ff ff       	call   4100 <glfwDestroyWindow@plt>
    8185:	90                   	nop
    8186:	c9                   	leave
    8187:	c3                   	ret

0000000000008188 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    8188:	55                   	push   %rbp
    8189:	48 89 e5             	mov    %rsp,%rbp
    818c:	48 83 ec 10          	sub    $0x10,%rsp
    8190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    8198:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    819c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a0:	48 89 d6             	mov    %rdx,%rsi
    81a3:	48 89 c7             	mov    %rax,%rdi
    81a6:	e8 05 c3 ff ff       	call   44b0 <vkDestroyInstance@plt>
}
    81ab:	90                   	nop
    81ac:	c9                   	leave
    81ad:	c3                   	ret

00000000000081ae <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    81ae:	55                   	push   %rbp
    81af:	48 89 e5             	mov    %rsp,%rbp
    81b2:	48 83 ec 10          	sub    $0x10,%rsp
    81b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    81be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    81c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81c6:	48 89 d6             	mov    %rdx,%rsi
    81c9:	48 89 c7             	mov    %rax,%rdi
    81cc:	e8 8f c1 ff ff       	call   4360 <vkDestroyDevice@plt>
}
    81d1:	90                   	nop
    81d2:	c9                   	leave
    81d3:	c3                   	ret

00000000000081d4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    81d4:	55                   	push   %rbp
    81d5:	48 89 e5             	mov    %rsp,%rbp
    81d8:	48 83 ec 20          	sub    $0x20,%rsp
    81dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    81e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    81ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    81f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81f4:	48 89 ce             	mov    %rcx,%rsi
    81f7:	48 89 c7             	mov    %rax,%rdi
    81fa:	e8 f1 c6 ff ff       	call   48f0 <vkDestroySurfaceKHR@plt>
}
    81ff:	90                   	nop
    8200:	c9                   	leave
    8201:	c3                   	ret

0000000000008202 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    8202:	55                   	push   %rbp
    8203:	48 89 e5             	mov    %rsp,%rbp
    8206:	48 83 ec 20          	sub    $0x20,%rsp
    820a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    820e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8212:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    8216:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    821a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    821e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8222:	48 89 ce             	mov    %rcx,%rsi
    8225:	48 89 c7             	mov    %rax,%rdi
    8228:	e8 b3 be ff ff       	call   40e0 <vkDestroySwapchainKHR@plt>
}
    822d:	90                   	nop
    822e:	c9                   	leave
    822f:	c3                   	ret

0000000000008230 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    8230:	55                   	push   %rbp
    8231:	48 89 e5             	mov    %rsp,%rbp
    8234:	48 83 ec 20          	sub    $0x20,%rsp
    8238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    823c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8240:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    8244:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8248:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    824c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8250:	48 89 ce             	mov    %rcx,%rsi
    8253:	48 89 c7             	mov    %rax,%rdi
    8256:	e8 c5 c6 ff ff       	call   4920 <vkDestroyImageView@plt>
}
    825b:	90                   	nop
    825c:	c9                   	leave
    825d:	c3                   	ret

000000000000825e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    825e:	55                   	push   %rbp
    825f:	48 89 e5             	mov    %rsp,%rbp
    8262:	48 83 ec 20          	sub    $0x20,%rsp
    8266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    826a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    826e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    8272:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8276:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    827a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    827e:	48 89 ce             	mov    %rcx,%rsi
    8281:	48 89 c7             	mov    %rax,%rdi
    8284:	e8 57 c3 ff ff       	call   45e0 <vkDestroyShaderModule@plt>
}
    8289:	90                   	nop
    828a:	c9                   	leave
    828b:	c3                   	ret

000000000000828c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    828c:	55                   	push   %rbp
    828d:	48 89 e5             	mov    %rsp,%rbp
    8290:	48 83 ec 20          	sub    $0x20,%rsp
    8294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    829c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    82a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    82a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ac:	48 89 ce             	mov    %rcx,%rsi
    82af:	48 89 c7             	mov    %rax,%rdi
    82b2:	e8 79 c3 ff ff       	call   4630 <vkDestroyPipelineLayout@plt>
}
    82b7:	90                   	nop
    82b8:	c9                   	leave
    82b9:	c3                   	ret

00000000000082ba <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    82ba:	55                   	push   %rbp
    82bb:	48 89 e5             	mov    %rsp,%rbp
    82be:	48 83 ec 20          	sub    $0x20,%rsp
    82c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    82ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    82d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82da:	48 89 ce             	mov    %rcx,%rsi
    82dd:	48 89 c7             	mov    %rax,%rdi
    82e0:	e8 6b c1 ff ff       	call   4450 <vkDestroyRenderPass@plt>
}
    82e5:	90                   	nop
    82e6:	c9                   	leave
    82e7:	c3                   	ret

00000000000082e8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    82e8:	55                   	push   %rbp
    82e9:	48 89 e5             	mov    %rsp,%rbp
    82ec:	48 83 ec 20          	sub    $0x20,%rsp
    82f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    82fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8300:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8308:	48 89 ce             	mov    %rcx,%rsi
    830b:	48 89 c7             	mov    %rax,%rdi
    830e:	e8 3d c2 ff ff       	call   4550 <vkDestroyPipeline@plt>
}
    8313:	90                   	nop
    8314:	c9                   	leave
    8315:	c3                   	ret

0000000000008316 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    8316:	55                   	push   %rbp
    8317:	48 89 e5             	mov    %rsp,%rbp
    831a:	48 83 ec 40          	sub    $0x40,%rsp
    831e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8322:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8326:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    832a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    832e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8336:	48 89 c7             	mov    %rax,%rdi
    8339:	e8 20 01 00 00       	call   845e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    833e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8346:	48 89 c7             	mov    %rax,%rdi
    8349:	e8 36 01 00 00       	call   8484 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    834e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8352:	eb 36                	jmp    838a <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    8354:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8358:	48 89 c7             	mov    %rax,%rdi
    835b:	e8 a8 01 00 00       	call   8508 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    8360:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    8364:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8368:	48 8b 08             	mov    (%rax),%rcx
    836b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    836f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8373:	48 89 ce             	mov    %rcx,%rsi
    8376:	48 89 c7             	mov    %rax,%rdi
    8379:	e8 d2 c1 ff ff       	call   4550 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    837e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8382:	48 89 c7             	mov    %rax,%rdi
    8385:	e8 5e 01 00 00       	call   84e8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    838a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    838e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8392:	48 89 d6             	mov    %rdx,%rsi
    8395:	48 89 c7             	mov    %rax,%rdi
    8398:	e8 10 01 00 00       	call   84ad <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    839d:	84 c0                	test   %al,%al
    839f:	75 b3                	jne    8354 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    83a1:	90                   	nop
    83a2:	90                   	nop
    83a3:	c9                   	leave
    83a4:	c3                   	ret

00000000000083a5 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    83a5:	55                   	push   %rbp
    83a6:	48 89 e5             	mov    %rsp,%rbp
    83a9:	48 83 ec 20          	sub    $0x20,%rsp
    83ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    83b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83c5:	48 89 ce             	mov    %rcx,%rsi
    83c8:	48 89 c7             	mov    %rax,%rdi
    83cb:	e8 b0 c4 ff ff       	call   4880 <vkDestroyFramebuffer@plt>
}
    83d0:	90                   	nop
    83d1:	c9                   	leave
    83d2:	c3                   	ret

00000000000083d3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    83d3:	55                   	push   %rbp
    83d4:	48 89 e5             	mov    %rsp,%rbp
    83d7:	48 83 ec 20          	sub    $0x20,%rsp
    83db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    83e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f3:	48 89 ce             	mov    %rcx,%rsi
    83f6:	48 89 c7             	mov    %rax,%rdi
    83f9:	e8 22 c3 ff ff       	call   4720 <vkDestroyCommandPool@plt>
}
    83fe:	90                   	nop
    83ff:	c9                   	leave
    8400:	c3                   	ret

0000000000008401 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    8401:	55                   	push   %rbp
    8402:	48 89 e5             	mov    %rsp,%rbp
    8405:	48 83 ec 20          	sub    $0x20,%rsp
    8409:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8411:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    8415:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8419:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    841d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8421:	48 89 ce             	mov    %rcx,%rsi
    8424:	48 89 c7             	mov    %rax,%rdi
    8427:	e8 c4 bc ff ff       	call   40f0 <vkDestroySemaphore@plt>
}
    842c:	90                   	nop
    842d:	c9                   	leave
    842e:	c3                   	ret

000000000000842f <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    842f:	55                   	push   %rbp
    8430:	48 89 e5             	mov    %rsp,%rbp
    8433:	48 83 ec 20          	sub    $0x20,%rsp
    8437:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    843b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    843f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    8443:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8447:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    844b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    844f:	48 89 ce             	mov    %rcx,%rsi
    8452:	48 89 c7             	mov    %rax,%rdi
    8455:	e8 e6 c0 ff ff       	call   4540 <vkDestroyFence@plt>
}
    845a:	90                   	nop
    845b:	c9                   	leave
    845c:	c3                   	ret
    845d:	90                   	nop

000000000000845e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    845e:	55                   	push   %rbp
    845f:	48 89 e5             	mov    %rsp,%rbp
    8462:	48 83 ec 20          	sub    $0x20,%rsp
    8466:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    846a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    846e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8472:	48 89 d6             	mov    %rdx,%rsi
    8475:	48 89 c7             	mov    %rax,%rdi
    8478:	e8 9d 00 00 00       	call   851a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    847d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8481:	c9                   	leave
    8482:	c3                   	ret
    8483:	90                   	nop

0000000000008484 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8484:	55                   	push   %rbp
    8485:	48 89 e5             	mov    %rsp,%rbp
    8488:	48 83 ec 20          	sub    $0x20,%rsp
    848c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8494:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8498:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    849c:	48 89 d6             	mov    %rdx,%rsi
    849f:	48 89 c7             	mov    %rax,%rdi
    84a2:	e8 73 00 00 00       	call   851a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    84a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ab:	c9                   	leave
    84ac:	c3                   	ret

00000000000084ad <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    84ad:	55                   	push   %rbp
    84ae:	48 89 e5             	mov    %rsp,%rbp
    84b1:	53                   	push   %rbx
    84b2:	48 83 ec 18          	sub    $0x18,%rsp
    84b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    84be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c2:	48 89 c7             	mov    %rax,%rdi
    84c5:	e8 6e 00 00 00       	call   8538 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    84ca:	48 8b 18             	mov    (%rax),%rbx
    84cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84d1:	48 89 c7             	mov    %rax,%rdi
    84d4:	e8 5f 00 00 00       	call   8538 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    84d9:	48 8b 00             	mov    (%rax),%rax
    84dc:	48 39 c3             	cmp    %rax,%rbx
    84df:	0f 95 c0             	setne  %al
    84e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84e6:	c9                   	leave
    84e7:	c3                   	ret

00000000000084e8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    84e8:	55                   	push   %rbp
    84e9:	48 89 e5             	mov    %rsp,%rbp
    84ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    84f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84f4:	48 8b 00             	mov    (%rax),%rax
    84f7:	48 8d 50 08          	lea    0x8(%rax),%rdx
    84fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ff:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8506:	5d                   	pop    %rbp
    8507:	c3                   	ret

0000000000008508 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8508:	55                   	push   %rbp
    8509:	48 89 e5             	mov    %rsp,%rbp
    850c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8514:	48 8b 00             	mov    (%rax),%rax
    8517:	5d                   	pop    %rbp
    8518:	c3                   	ret
    8519:	90                   	nop

000000000000851a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    851a:	55                   	push   %rbp
    851b:	48 89 e5             	mov    %rsp,%rbp
    851e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    8526:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    852a:	48 8b 10             	mov    (%rax),%rdx
    852d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8531:	48 89 10             	mov    %rdx,(%rax)
    8534:	90                   	nop
    8535:	5d                   	pop    %rbp
    8536:	c3                   	ret
    8537:	90                   	nop

0000000000008538 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    8538:	55                   	push   %rbp
    8539:	48 89 e5             	mov    %rsp,%rbp
    853c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    8540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8544:	5d                   	pop    %rbp
    8545:	c3                   	ret

0000000000008546 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    8546:	55                   	push   %rbp
    8547:	48 89 e5             	mov    %rsp,%rbp
    854a:	53                   	push   %rbx
    854b:	48 83 ec 28          	sub    $0x28,%rsp
    854f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    8553:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8557:	be 00 00 00 00       	mov    $0x0,%esi
    855c:	48 89 c7             	mov    %rax,%rdi
    855f:	e8 1c c0 ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    8564:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8567:	89 c3                	mov    %eax,%ebx
    8569:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    856d:	48 89 c7             	mov    %rax,%rdi
    8570:	e8 47 11 00 00       	call   96bc <_ZNSaI17VkLayerPropertiesEC1Ev>
    8575:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8579:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    857d:	48 89 de             	mov    %rbx,%rsi
    8580:	48 89 c7             	mov    %rax,%rdi
    8583:	e8 6c 11 00 00       	call   96f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    8588:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    858c:	48 89 c7             	mov    %rax,%rdi
    858f:	e8 44 11 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    8594:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8598:	48 89 c7             	mov    %rax,%rdi
    859b:	e8 0e 12 00 00       	call   97ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    85a0:	48 89 c2             	mov    %rax,%rdx
    85a3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    85a7:	48 89 d6             	mov    %rdx,%rsi
    85aa:	48 89 c7             	mov    %rax,%rdi
    85ad:	e8 ce bf ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    85b2:	eb 34                	jmp    85e8 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    85b4:	48 89 c3             	mov    %rax,%rbx
    85b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    85bb:	48 89 c7             	mov    %rax,%rdi
    85be:	e8 15 11 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    85c3:	48 89 d8             	mov    %rbx,%rax
    85c6:	48 89 c7             	mov    %rax,%rdi
    85c9:	e8 32 c3 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    85ce:	48 89 c3             	mov    %rax,%rbx
    85d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    85d5:	48 89 c7             	mov    %rax,%rdi
    85d8:	e8 8d 11 00 00       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    85dd:	48 89 d8             	mov    %rbx,%rax
    85e0:	48 89 c7             	mov    %rax,%rdi
    85e3:	e8 18 c3 ff ff       	call   4900 <_Unwind_Resume@plt>
    85e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    85ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85f0:	c9                   	leave
    85f1:	c3                   	ret

00000000000085f2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    85f2:	55                   	push   %rbp
    85f3:	48 89 e5             	mov    %rsp,%rbp
    85f6:	41 54                	push   %r12
    85f8:	53                   	push   %rbx
    85f9:	48 83 ec 20          	sub    $0x20,%rsp
    85fd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8601:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    8605:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8609:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    860d:	ba 00 00 00 00       	mov    $0x0,%edx
    8612:	48 89 ce             	mov    %rcx,%rsi
    8615:	48 89 c7             	mov    %rax,%rdi
    8618:	e8 63 bd ff ff       	call   4380 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    861d:	85 c0                	test   %eax,%eax
    861f:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    8622:	84 c0                	test   %al,%al
    8624:	74 3b                	je     8661 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    8626:	bf 10 00 00 00       	mov    $0x10,%edi
    862b:	e8 90 bb ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8630:	48 89 c3             	mov    %rax,%rbx
    8633:	48 8d 05 fe 6b 01 00 	lea    0x16bfe(%rip),%rax        # 1f238 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    863a:	48 89 c6             	mov    %rax,%rsi
    863d:	48 89 df             	mov    %rbx,%rdi
    8640:	e8 eb ba ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8645:	48 8b 05 5c 89 02 00 	mov    0x2895c(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    864c:	48 89 c2             	mov    %rax,%rdx
    864f:	48 8d 05 ea 86 02 00 	lea    0x286ea(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8656:	48 89 c6             	mov    %rax,%rsi
    8659:	48 89 df             	mov    %rbx,%rdi
    865c:	e8 2f c2 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    8661:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8664:	89 c3                	mov    %eax,%ebx
    8666:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    866a:	48 89 c7             	mov    %rax,%rdi
    866d:	e8 b8 11 00 00       	call   982a <_ZNSaI21VkExtensionPropertiesEC1Ev>
    8672:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8676:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    867a:	48 89 de             	mov    %rbx,%rsi
    867d:	48 89 c7             	mov    %rax,%rdi
    8680:	e8 dd 11 00 00       	call   9862 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    8685:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8689:	48 89 c7             	mov    %rax,%rdi
    868c:	e8 b5 11 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    8691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8695:	48 89 c7             	mov    %rax,%rdi
    8698:	e8 7f 12 00 00       	call   991c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    869d:	48 89 c2             	mov    %rax,%rdx
    86a0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    86a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86a8:	48 89 ce             	mov    %rcx,%rsi
    86ab:	48 89 c7             	mov    %rax,%rdi
    86ae:	e8 cd bc ff ff       	call   4380 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    86b3:	85 c0                	test   %eax,%eax
    86b5:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    86b8:	84 c0                	test   %al,%al
    86ba:	0f 84 95 00 00 00    	je     8755 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    86c0:	bf 10 00 00 00       	mov    $0x10,%edi
    86c5:	e8 f6 ba ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    86ca:	48 89 c3             	mov    %rax,%rbx
    86cd:	48 8d 05 64 6b 01 00 	lea    0x16b64(%rip),%rax        # 1f238 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    86d4:	48 89 c6             	mov    %rax,%rsi
    86d7:	48 89 df             	mov    %rbx,%rdi
    86da:	e8 51 ba ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    86df:	48 8b 05 c2 88 02 00 	mov    0x288c2(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    86e6:	48 89 c2             	mov    %rax,%rdx
    86e9:	48 8d 05 50 86 02 00 	lea    0x28650(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    86f0:	48 89 c6             	mov    %rax,%rsi
    86f3:	48 89 df             	mov    %rbx,%rdi
    86f6:	e8 95 c1 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    86fb:	49 89 c4             	mov    %rax,%r12
    86fe:	48 89 df             	mov    %rbx,%rdi
    8701:	e8 ca bb ff ff       	call   42d0 <__cxa_free_exception@plt>
    8706:	4c 89 e0             	mov    %r12,%rax
    8709:	48 89 c7             	mov    %rax,%rdi
    870c:	e8 ef c1 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    8711:	48 89 c3             	mov    %rax,%rbx
    8714:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8718:	48 89 c7             	mov    %rax,%rdi
    871b:	e8 26 11 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8720:	48 89 d8             	mov    %rbx,%rax
    8723:	48 89 c7             	mov    %rax,%rdi
    8726:	e8 d5 c1 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    872b:	49 89 c4             	mov    %rax,%r12
    872e:	48 89 df             	mov    %rbx,%rdi
    8731:	e8 9a bb ff ff       	call   42d0 <__cxa_free_exception@plt>
    8736:	4c 89 e3             	mov    %r12,%rbx
    8739:	eb 03                	jmp    873e <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    873b:	48 89 c3             	mov    %rax,%rbx
    873e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8742:	48 89 c7             	mov    %rax,%rdi
    8745:	e8 8e 11 00 00       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    874a:	48 89 d8             	mov    %rbx,%rax
    874d:	48 89 c7             	mov    %rax,%rdi
    8750:	e8 ab c1 ff ff       	call   4900 <_Unwind_Resume@plt>
  return instanceExtensions;
    8755:	90                   	nop
}
    8756:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    875a:	48 83 c4 20          	add    $0x20,%rsp
    875e:	5b                   	pop    %rbx
    875f:	41 5c                	pop    %r12
    8761:	5d                   	pop    %rbp
    8762:	c3                   	ret

0000000000008763 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    8763:	55                   	push   %rbp
    8764:	48 89 e5             	mov    %rsp,%rbp
    8767:	41 54                	push   %r12
    8769:	53                   	push   %rbx
    876a:	48 83 ec 30          	sub    $0x30,%rsp
    876e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8772:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8776:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    877a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    877e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8782:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8786:	b9 00 00 00 00       	mov    $0x0,%ecx
    878b:	48 89 c7             	mov    %rax,%rdi
    878e:	e8 5d bf ff ff       	call   46f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    8793:	85 c0                	test   %eax,%eax
    8795:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    8798:	84 c0                	test   %al,%al
    879a:	74 3b                	je     87d7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    879c:	bf 10 00 00 00       	mov    $0x10,%edi
    87a1:	e8 1a ba ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    87a6:	48 89 c3             	mov    %rax,%rbx
    87a9:	48 8d 05 b0 6a 01 00 	lea    0x16ab0(%rip),%rax        # 1f260 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    87b0:	48 89 c6             	mov    %rax,%rsi
    87b3:	48 89 df             	mov    %rbx,%rdi
    87b6:	e8 75 b9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    87bb:	48 8b 05 e6 87 02 00 	mov    0x287e6(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    87c2:	48 89 c2             	mov    %rax,%rdx
    87c5:	48 8d 05 74 85 02 00 	lea    0x28574(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    87cc:	48 89 c6             	mov    %rax,%rsi
    87cf:	48 89 df             	mov    %rbx,%rdi
    87d2:	e8 b9 c0 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    87d7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    87da:	89 c3                	mov    %eax,%ebx
    87dc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87e0:	48 89 c7             	mov    %rax,%rdi
    87e3:	e8 42 10 00 00       	call   982a <_ZNSaI21VkExtensionPropertiesEC1Ev>
    87e8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    87ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87f0:	48 89 de             	mov    %rbx,%rsi
    87f3:	48 89 c7             	mov    %rax,%rdi
    87f6:	e8 67 10 00 00       	call   9862 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    87fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87ff:	48 89 c7             	mov    %rax,%rdi
    8802:	e8 3f 10 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    8807:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    880b:	48 89 c7             	mov    %rax,%rdi
    880e:	e8 09 11 00 00       	call   991c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    8813:	48 89 c1             	mov    %rax,%rcx
    8816:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    881a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    881e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8822:	48 89 c7             	mov    %rax,%rdi
    8825:	e8 c6 be ff ff       	call   46f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    882a:	85 c0                	test   %eax,%eax
    882c:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    882f:	84 c0                	test   %al,%al
    8831:	0f 84 95 00 00 00    	je     88cc <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    8837:	bf 10 00 00 00       	mov    $0x10,%edi
    883c:	e8 7f b9 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8841:	48 89 c3             	mov    %rax,%rbx
    8844:	48 8d 05 15 6a 01 00 	lea    0x16a15(%rip),%rax        # 1f260 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    884b:	48 89 c6             	mov    %rax,%rsi
    884e:	48 89 df             	mov    %rbx,%rdi
    8851:	e8 da b8 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8856:	48 8b 05 4b 87 02 00 	mov    0x2874b(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    885d:	48 89 c2             	mov    %rax,%rdx
    8860:	48 8d 05 d9 84 02 00 	lea    0x284d9(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8867:	48 89 c6             	mov    %rax,%rsi
    886a:	48 89 df             	mov    %rbx,%rdi
    886d:	e8 1e c0 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    8872:	49 89 c4             	mov    %rax,%r12
    8875:	48 89 df             	mov    %rbx,%rdi
    8878:	e8 53 ba ff ff       	call   42d0 <__cxa_free_exception@plt>
    887d:	4c 89 e0             	mov    %r12,%rax
    8880:	48 89 c7             	mov    %rax,%rdi
    8883:	e8 78 c0 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    8888:	48 89 c3             	mov    %rax,%rbx
    888b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    888f:	48 89 c7             	mov    %rax,%rdi
    8892:	e8 af 0f 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8897:	48 89 d8             	mov    %rbx,%rax
    889a:	48 89 c7             	mov    %rax,%rdi
    889d:	e8 5e c0 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    88a2:	49 89 c4             	mov    %rax,%r12
    88a5:	48 89 df             	mov    %rbx,%rdi
    88a8:	e8 23 ba ff ff       	call   42d0 <__cxa_free_exception@plt>
    88ad:	4c 89 e3             	mov    %r12,%rbx
    88b0:	eb 03                	jmp    88b5 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    88b2:	48 89 c3             	mov    %rax,%rbx
    88b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88b9:	48 89 c7             	mov    %rax,%rdi
    88bc:	e8 17 10 00 00       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    88c1:	48 89 d8             	mov    %rbx,%rax
    88c4:	48 89 c7             	mov    %rax,%rdi
    88c7:	e8 34 c0 ff ff       	call   4900 <_Unwind_Resume@plt>
  return deviceExtensions;
    88cc:	90                   	nop
}
    88cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88d1:	48 83 c4 30          	add    $0x30,%rsp
    88d5:	5b                   	pop    %rbx
    88d6:	41 5c                	pop    %r12
    88d8:	5d                   	pop    %rbp
    88d9:	c3                   	ret

00000000000088da <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    88da:	55                   	push   %rbp
    88db:	48 89 e5             	mov    %rsp,%rbp
    88de:	53                   	push   %rbx
    88df:	48 83 ec 38          	sub    $0x38,%rsp
    88e3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    88e7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    88eb:	48 89 c7             	mov    %rax,%rdi
    88ee:	e8 0d ba ff ff       	call   4300 <glfwGetRequiredInstanceExtensions@plt>
    88f3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    88f7:	8b 45 d8             	mov    -0x28(%rbp),%eax
    88fa:	89 c3                	mov    %eax,%ebx
    88fc:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    8900:	48 89 c7             	mov    %rax,%rdi
    8903:	e8 90 10 00 00       	call   9998 <_ZNSaIPKcEC1Ev>
    8908:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    890c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8910:	48 89 de             	mov    %rbx,%rsi
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 b5 10 00 00       	call   99d0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    891b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    891f:	48 89 c7             	mov    %rax,%rdi
    8922:	e8 8d 10 00 00       	call   99b4 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    8927:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    892e:	eb 2e                	jmp    895e <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    8930:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8933:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    893a:	00 
    893b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    893f:	48 01 d0             	add    %rdx,%rax
    8942:	48 8b 18             	mov    (%rax),%rbx
    8945:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8948:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    894c:	48 89 d6             	mov    %rdx,%rsi
    894f:	48 89 c7             	mov    %rax,%rdi
    8952:	e8 ef 10 00 00       	call   9a46 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    8957:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    895a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    895e:	8b 45 d8             	mov    -0x28(%rbp),%eax
    8961:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    8964:	72 ca                	jb     8930 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    8966:	eb 1a                	jmp    8982 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    8968:	48 89 c3             	mov    %rax,%rbx
    896b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    896f:	48 89 c7             	mov    %rax,%rdi
    8972:	e8 3d 10 00 00       	call   99b4 <_ZNSaIPKcED1Ev>
    8977:	48 89 d8             	mov    %rbx,%rax
    897a:	48 89 c7             	mov    %rax,%rdi
    897d:	e8 7e bf ff ff       	call   4900 <_Unwind_Resume@plt>
}
    8982:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8986:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    898a:	c9                   	leave
    898b:	c3                   	ret

000000000000898c <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    898c:	55                   	push   %rbp
    898d:	48 89 e5             	mov    %rsp,%rbp
    8990:	53                   	push   %rbx
    8991:	48 83 ec 28          	sub    $0x28,%rsp
    8995:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    8999:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    899d:	be 00 00 00 00       	mov    $0x0,%esi
    89a2:	48 89 c7             	mov    %rax,%rdi
    89a5:	e8 d6 bb ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    89aa:	8b 45 e8             	mov    -0x18(%rbp),%eax
    89ad:	89 c3                	mov    %eax,%ebx
    89af:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    89b3:	48 89 c7             	mov    %rax,%rdi
    89b6:	e8 01 0d 00 00       	call   96bc <_ZNSaI17VkLayerPropertiesEC1Ev>
    89bb:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    89bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89c3:	48 89 de             	mov    %rbx,%rsi
    89c6:	48 89 c7             	mov    %rax,%rdi
    89c9:	e8 26 0d 00 00       	call   96f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    89ce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    89d2:	48 89 c7             	mov    %rax,%rdi
    89d5:	e8 fe 0c 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    89da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89de:	48 89 c7             	mov    %rax,%rdi
    89e1:	e8 c8 0d 00 00       	call   97ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    89e6:	48 89 c2             	mov    %rax,%rdx
    89e9:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    89ed:	48 89 d6             	mov    %rdx,%rsi
    89f0:	48 89 c7             	mov    %rax,%rdi
    89f3:	e8 88 bb ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    89f8:	eb 34                	jmp    8a2e <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    89fa:	48 89 c3             	mov    %rax,%rbx
    89fd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a01:	48 89 c7             	mov    %rax,%rdi
    8a04:	e8 cf 0c 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    8a09:	48 89 d8             	mov    %rbx,%rax
    8a0c:	48 89 c7             	mov    %rax,%rdi
    8a0f:	e8 ec be ff ff       	call   4900 <_Unwind_Resume@plt>
}
    8a14:	48 89 c3             	mov    %rax,%rbx
    8a17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a1b:	48 89 c7             	mov    %rax,%rdi
    8a1e:	e8 47 0d 00 00       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    8a23:	48 89 d8             	mov    %rbx,%rax
    8a26:	48 89 c7             	mov    %rax,%rdi
    8a29:	e8 d2 be ff ff       	call   4900 <_Unwind_Resume@plt>
    8a2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a32:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a36:	c9                   	leave
    8a37:	c3                   	ret

0000000000008a38 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    8a38:	55                   	push   %rbp
    8a39:	48 89 e5             	mov    %rsp,%rbp
    8a3c:	41 54                	push   %r12
    8a3e:	53                   	push   %rbx
    8a3f:	48 83 ec 20          	sub    $0x20,%rsp
    8a43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a47:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    8a4b:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8a4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a53:	ba 00 00 00 00       	mov    $0x0,%edx
    8a58:	48 89 ce             	mov    %rcx,%rsi
    8a5b:	48 89 c7             	mov    %rax,%rdi
    8a5e:	e8 9d b7 ff ff       	call   4200 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    8a63:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8a66:	85 c0                	test   %eax,%eax
    8a68:	75 3b                	jne    8aa5 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    8a6a:	bf 10 00 00 00       	mov    $0x10,%edi
    8a6f:	e8 4c b7 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8a74:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    8a77:	48 8d 05 0a 68 01 00 	lea    0x1680a(%rip),%rax        # 1f288 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x58>
    8a7e:	48 89 c6             	mov    %rax,%rsi
    8a81:	48 89 df             	mov    %rbx,%rdi
    8a84:	e8 a7 b6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    8a89:	48 8b 05 18 85 02 00 	mov    0x28518(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8a90:	48 89 c2             	mov    %rax,%rdx
    8a93:	48 8d 05 a6 82 02 00 	lea    0x282a6(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8a9a:	48 89 c6             	mov    %rax,%rsi
    8a9d:	48 89 df             	mov    %rbx,%rdi
    8aa0:	e8 eb bd ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    8aa5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8aa8:	89 c3                	mov    %eax,%ebx
    8aaa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8aae:	48 89 c7             	mov    %rax,%rdi
    8ab1:	e8 fe 0f 00 00       	call   9ab4 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    8ab6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8aba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8abe:	48 89 de             	mov    %rbx,%rsi
    8ac1:	48 89 c7             	mov    %rax,%rdi
    8ac4:	e8 23 10 00 00       	call   9aec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    8ac9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8acd:	48 89 c7             	mov    %rax,%rdi
    8ad0:	e8 fb 0f 00 00       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    8ad5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ad9:	48 89 c7             	mov    %rax,%rdi
    8adc:	e8 c5 10 00 00       	call   9ba6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    8ae1:	48 89 c2             	mov    %rax,%rdx
    8ae4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8ae8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8aec:	48 89 ce             	mov    %rcx,%rsi
    8aef:	48 89 c7             	mov    %rax,%rdi
    8af2:	e8 09 b7 ff ff       	call   4200 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    8af7:	85 c0                	test   %eax,%eax
    8af9:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    8afc:	84 c0                	test   %al,%al
    8afe:	0f 84 95 00 00 00    	je     8b99 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    8b04:	bf 10 00 00 00       	mov    $0x10,%edi
    8b09:	e8 b2 b6 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    8b0e:	48 89 c3             	mov    %rax,%rbx
    8b11:	48 8d 05 a8 67 01 00 	lea    0x167a8(%rip),%rax        # 1f2c0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    8b18:	48 89 c6             	mov    %rax,%rsi
    8b1b:	48 89 df             	mov    %rbx,%rdi
    8b1e:	e8 0d b6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8b23:	48 8b 05 7e 84 02 00 	mov    0x2847e(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8b2a:	48 89 c2             	mov    %rax,%rdx
    8b2d:	48 8d 05 0c 82 02 00 	lea    0x2820c(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8b34:	48 89 c6             	mov    %rax,%rsi
    8b37:	48 89 df             	mov    %rbx,%rdi
    8b3a:	e8 51 bd ff ff       	call   4890 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    8b3f:	49 89 c4             	mov    %rax,%r12
    8b42:	48 89 df             	mov    %rbx,%rdi
    8b45:	e8 86 b7 ff ff       	call   42d0 <__cxa_free_exception@plt>
    8b4a:	4c 89 e0             	mov    %r12,%rax
    8b4d:	48 89 c7             	mov    %rax,%rdi
    8b50:	e8 ab bd ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    8b55:	48 89 c3             	mov    %rax,%rbx
    8b58:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b5c:	48 89 c7             	mov    %rax,%rdi
    8b5f:	e8 6c 0f 00 00       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8b64:	48 89 d8             	mov    %rbx,%rax
    8b67:	48 89 c7             	mov    %rax,%rdi
    8b6a:	e8 91 bd ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    8b6f:	49 89 c4             	mov    %rax,%r12
    8b72:	48 89 df             	mov    %rbx,%rdi
    8b75:	e8 56 b7 ff ff       	call   42d0 <__cxa_free_exception@plt>
    8b7a:	4c 89 e3             	mov    %r12,%rbx
    8b7d:	eb 03                	jmp    8b82 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    8b7f:	48 89 c3             	mov    %rax,%rbx
    8b82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b86:	48 89 c7             	mov    %rax,%rdi
    8b89:	e8 d4 0f 00 00       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8b8e:	48 89 d8             	mov    %rbx,%rax
    8b91:	48 89 c7             	mov    %rax,%rdi
    8b94:	e8 67 bd ff ff       	call   4900 <_Unwind_Resume@plt>
  return physicalDevices;
    8b99:	90                   	nop
}
    8b9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b9e:	48 83 c4 20          	add    $0x20,%rsp
    8ba2:	5b                   	pop    %rbx
    8ba3:	41 5c                	pop    %r12
    8ba5:	5d                   	pop    %rbp
    8ba6:	c3                   	ret

0000000000008ba7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    8ba7:	55                   	push   %rbp
    8ba8:	48 89 e5             	mov    %rsp,%rbp
    8bab:	48 83 ec 10          	sub    $0x10,%rsp
    8baf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bb3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    8bb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8bbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bbf:	48 89 d6             	mov    %rdx,%rsi
    8bc2:	48 89 c7             	mov    %rax,%rdi
    8bc5:	e8 76 b5 ff ff       	call   4140 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    8bca:	90                   	nop
}
    8bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bcf:	c9                   	leave
    8bd0:	c3                   	ret

0000000000008bd1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    8bd1:	55                   	push   %rbp
    8bd2:	48 89 e5             	mov    %rsp,%rbp
    8bd5:	48 83 ec 20          	sub    $0x20,%rsp
    8bd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bdd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8be1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    8be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be9:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    8bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bf7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    8bfb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8bff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c03:	48 89 d6             	mov    %rdx,%rsi
    8c06:	48 89 c7             	mov    %rax,%rdi
    8c09:	e8 12 b8 ff ff       	call   4420 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    8c0e:	90                   	nop
}
    8c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c13:	c9                   	leave
    8c14:	c3                   	ret

0000000000008c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8c15:	55                   	push   %rbp
    8c16:	48 89 e5             	mov    %rsp,%rbp
    8c19:	53                   	push   %rbx
    8c1a:	48 83 ec 28          	sub    $0x28,%rsp
    8c1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8c22:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    8c26:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8c2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c2e:	ba 00 00 00 00       	mov    $0x0,%edx
    8c33:	48 89 ce             	mov    %rcx,%rsi
    8c36:	48 89 c7             	mov    %rax,%rdi
    8c39:	e8 b2 b6 ff ff       	call   42f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    8c3e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8c41:	89 c3                	mov    %eax,%ebx
    8c43:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c47:	48 89 c7             	mov    %rax,%rdi
    8c4a:	e8 c9 0f 00 00       	call   9c18 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    8c4f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c57:	48 89 de             	mov    %rbx,%rsi
    8c5a:	48 89 c7             	mov    %rax,%rdi
    8c5d:	e8 ee 0f 00 00       	call   9c50 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    8c62:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c66:	48 89 c7             	mov    %rax,%rdi
    8c69:	e8 c6 0f 00 00       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    8c6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c72:	48 89 c7             	mov    %rax,%rdi
    8c75:	e8 90 10 00 00       	call   9d0a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    8c7a:	48 89 c2             	mov    %rax,%rdx
    8c7d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8c81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c85:	48 89 ce             	mov    %rcx,%rsi
    8c88:	48 89 c7             	mov    %rax,%rdi
    8c8b:	e8 60 b6 ff ff       	call   42f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    8c90:	eb 34                	jmp    8cc6 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    8c92:	48 89 c3             	mov    %rax,%rbx
    8c95:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c99:	48 89 c7             	mov    %rax,%rdi
    8c9c:	e8 93 0f 00 00       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8ca1:	48 89 d8             	mov    %rbx,%rax
    8ca4:	48 89 c7             	mov    %rax,%rdi
    8ca7:	e8 54 bc ff ff       	call   4900 <_Unwind_Resume@plt>
}
    8cac:	48 89 c3             	mov    %rax,%rbx
    8caf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cb3:	48 89 c7             	mov    %rax,%rdi
    8cb6:	e8 0b 10 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8cbb:	48 89 d8             	mov    %rbx,%rax
    8cbe:	48 89 c7             	mov    %rax,%rdi
    8cc1:	e8 3a bc ff ff       	call   4900 <_Unwind_Resume@plt>
    8cc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cce:	c9                   	leave
    8ccf:	c3                   	ret

0000000000008cd0 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8cd0:	55                   	push   %rbp
    8cd1:	48 89 e5             	mov    %rsp,%rbp
    8cd4:	53                   	push   %rbx
    8cd5:	48 83 ec 68          	sub    $0x68,%rsp
    8cd9:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8cdd:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8ce1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8ce5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8ce9:	48 89 d6             	mov    %rdx,%rsi
    8cec:	48 89 c7             	mov    %rax,%rdi
    8cef:	e8 21 ff ff ff       	call   8c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    8cf4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8cf8:	48 89 c7             	mov    %rax,%rdi
    8cfb:	e8 86 10 00 00       	call   9d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8d00:	48 89 c3             	mov    %rax,%rbx
    8d03:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8d07:	48 89 c7             	mov    %rax,%rdi
    8d0a:	e8 a5 10 00 00       	call   9db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8d0f:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8d13:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8d17:	48 89 de             	mov    %rbx,%rsi
    8d1a:	48 89 c7             	mov    %rax,%rdi
    8d1d:	e8 ca 10 00 00       	call   9dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8d22:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8d26:	48 89 c7             	mov    %rax,%rdi
    8d29:	e8 a2 10 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    8d2e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8d35:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8d36:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8d3a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8d3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d42:	48 89 c7             	mov    %rax,%rdi
    8d45:	e8 5c 11 00 00       	call   9ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8d4a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8d4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d52:	48 89 c7             	mov    %rax,%rdi
    8d55:	e8 72 11 00 00       	call   9ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8d5a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8d5e:	eb 4e                	jmp    8dae <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    8d60:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8d64:	48 89 c7             	mov    %rax,%rdi
    8d67:	e8 e4 11 00 00       	call   9f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8d6c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    8d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d74:	8b 00                	mov    (%rax),%eax
    8d76:	83 e0 01             	and    $0x1,%eax
    8d79:	85 c0                	test   %eax,%eax
    8d7b:	74 25                	je     8da2 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    8d7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8d85:	48 89 d6             	mov    %rdx,%rsi
    8d88:	48 89 c7             	mov    %rax,%rdi
    8d8b:	e8 d2 11 00 00       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    8d90:	48 89 c2             	mov    %rax,%rdx
    8d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d97:	48 89 c6             	mov    %rax,%rsi
    8d9a:	48 89 d7             	mov    %rdx,%rdi
    8d9d:	e8 ea 11 00 00       	call   9f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8da2:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8da6:	48 89 c7             	mov    %rax,%rdi
    8da9:	e8 82 11 00 00       	call   9f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8dae:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8db2:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8db6:	48 89 d6             	mov    %rdx,%rsi
    8db9:	48 89 c7             	mov    %rax,%rdi
    8dbc:	e8 34 11 00 00       	call   9ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8dc1:	84 c0                	test   %al,%al
    8dc3:	75 9b                	jne    8d60 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    8dc5:	90                   	nop
}
    8dc6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8dca:	48 89 c7             	mov    %rax,%rdi
    8dcd:	e8 f4 0e 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    8dd2:	eb 26                	jmp    8dfa <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    8dd4:	48 89 c3             	mov    %rax,%rbx
    8dd7:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8ddb:	48 89 c7             	mov    %rax,%rdi
    8dde:	e8 ed 0f 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    8de3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8de7:	48 89 c7             	mov    %rax,%rdi
    8dea:	e8 d7 0e 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8def:	48 89 d8             	mov    %rbx,%rax
    8df2:	48 89 c7             	mov    %rax,%rdi
    8df5:	e8 06 bb ff ff       	call   4900 <_Unwind_Resume@plt>
    8dfa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8dfe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e02:	c9                   	leave
    8e03:	c3                   	ret

0000000000008e04 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    8e04:	55                   	push   %rbp
    8e05:	48 89 e5             	mov    %rsp,%rbp
    8e08:	53                   	push   %rbx
    8e09:	48 83 ec 68          	sub    $0x68,%rsp
    8e0d:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8e11:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8e15:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e19:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8e1d:	48 89 d6             	mov    %rdx,%rsi
    8e20:	48 89 c7             	mov    %rax,%rdi
    8e23:	e8 ed fd ff ff       	call   8c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    8e28:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e2c:	48 89 c7             	mov    %rax,%rdi
    8e2f:	e8 52 0f 00 00       	call   9d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8e34:	48 89 c3             	mov    %rax,%rbx
    8e37:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8e3b:	48 89 c7             	mov    %rax,%rdi
    8e3e:	e8 71 0f 00 00       	call   9db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8e43:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8e47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8e4b:	48 89 de             	mov    %rbx,%rsi
    8e4e:	48 89 c7             	mov    %rax,%rdi
    8e51:	e8 96 0f 00 00       	call   9dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8e56:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8e5a:	48 89 c7             	mov    %rax,%rdi
    8e5d:	e8 6e 0f 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    8e62:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8e69:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8e6a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e6e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8e72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e76:	48 89 c7             	mov    %rax,%rdi
    8e79:	e8 28 10 00 00       	call   9ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8e7e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8e82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e86:	48 89 c7             	mov    %rax,%rdi
    8e89:	e8 3e 10 00 00       	call   9ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8e8e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8e92:	eb 53                	jmp    8ee7 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    8e94:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8e98:	48 89 c7             	mov    %rax,%rdi
    8e9b:	e8 b0 10 00 00       	call   9f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8ea0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    8ea4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ea8:	8b 00                	mov    (%rax),%eax
    8eaa:	83 e0 02             	and    $0x2,%eax
    8ead:	85 c0                	test   %eax,%eax
    8eaf:	74 25                	je     8ed6 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    8eb1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8eb5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8eb9:	48 89 d6             	mov    %rdx,%rsi
    8ebc:	48 89 c7             	mov    %rax,%rdi
    8ebf:	e8 9e 10 00 00       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    8ec4:	48 89 c2             	mov    %rax,%rdx
    8ec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ecb:	48 89 c6             	mov    %rax,%rsi
    8ece:	48 89 d7             	mov    %rdx,%rdi
    8ed1:	e8 b6 10 00 00       	call   9f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    8ed6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8edb:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8edf:	48 89 c7             	mov    %rax,%rdi
    8ee2:	e8 49 10 00 00       	call   9f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8ee7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8eeb:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8eef:	48 89 d6             	mov    %rdx,%rsi
    8ef2:	48 89 c7             	mov    %rax,%rdi
    8ef5:	e8 fb 0f 00 00       	call   9ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8efa:	84 c0                	test   %al,%al
    8efc:	75 96                	jne    8e94 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    8efe:	90                   	nop
}
    8eff:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f03:	48 89 c7             	mov    %rax,%rdi
    8f06:	e8 bb 0d 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    8f0b:	eb 26                	jmp    8f33 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    8f0d:	48 89 c3             	mov    %rax,%rbx
    8f10:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8f14:	48 89 c7             	mov    %rax,%rdi
    8f17:	e8 b4 0e 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    8f1c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f20:	48 89 c7             	mov    %rax,%rdi
    8f23:	e8 9e 0d 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8f28:	48 89 d8             	mov    %rbx,%rax
    8f2b:	48 89 c7             	mov    %rax,%rdi
    8f2e:	e8 cd b9 ff ff       	call   4900 <_Unwind_Resume@plt>
    8f33:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8f37:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f3b:	c9                   	leave
    8f3c:	c3                   	ret

0000000000008f3d <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    8f3d:	55                   	push   %rbp
    8f3e:	48 89 e5             	mov    %rsp,%rbp
    8f41:	53                   	push   %rbx
    8f42:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    8f49:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    8f4d:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    8f51:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8f58:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f5c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    8f60:	48 89 d6             	mov    %rdx,%rsi
    8f63:	48 89 c7             	mov    %rax,%rdi
    8f66:	e8 aa fc ff ff       	call   8c15 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    8f6b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f6f:	48 89 c7             	mov    %rax,%rdi
    8f72:	e8 0f 0e 00 00       	call   9d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8f77:	48 89 c3             	mov    %rax,%rbx
    8f7a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8f7e:	48 89 c7             	mov    %rax,%rdi
    8f81:	e8 2e 0e 00 00       	call   9db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8f86:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8f8a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8f8e:	48 89 de             	mov    %rbx,%rsi
    8f91:	48 89 c7             	mov    %rax,%rdi
    8f94:	e8 53 0e 00 00       	call   9dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    8f99:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8f9d:	48 89 c7             	mov    %rax,%rdi
    8fa0:	e8 2b 0e 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    8fa5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8fac:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8fb0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8fb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fb8:	48 89 c7             	mov    %rax,%rdi
    8fbb:	e8 e6 0e 00 00       	call   9ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8fc0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8fc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fc8:	48 89 c7             	mov    %rax,%rdi
    8fcb:	e8 fc 0e 00 00       	call   9ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8fd0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8fd4:	eb 6c                	jmp    9042 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    8fd6:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8fda:	48 89 c7             	mov    %rax,%rdi
    8fdd:	e8 6e 0f 00 00       	call   9f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8fe2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    8fe6:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    8fed:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    8ff1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8ff8:	8b 75 ec             	mov    -0x14(%rbp),%esi
    8ffb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8fff:	48 89 c7             	mov    %rax,%rdi
    9002:	e8 09 b5 ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    9007:	8b 45 9c             	mov    -0x64(%rbp),%eax
    900a:	85 c0                	test   %eax,%eax
    900c:	74 24                	je     9032 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    900e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9011:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9015:	48 89 d6             	mov    %rdx,%rsi
    9018:	48 89 c7             	mov    %rax,%rdi
    901b:	e8 42 0f 00 00       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9020:	48 89 c2             	mov    %rax,%rdx
    9023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9027:	48 89 c6             	mov    %rax,%rsi
    902a:	48 89 d7             	mov    %rdx,%rdi
    902d:	e8 5a 0f 00 00       	call   9f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    9032:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    9036:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    903a:	48 89 c7             	mov    %rax,%rdi
    903d:	e8 ee 0e 00 00       	call   9f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    9042:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    9046:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    904a:	48 89 d6             	mov    %rdx,%rsi
    904d:	48 89 c7             	mov    %rax,%rdi
    9050:	e8 a0 0e 00 00       	call   9ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    9055:	84 c0                	test   %al,%al
    9057:	0f 85 79 ff ff ff    	jne    8fd6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    905d:	90                   	nop
}
    905e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9062:	48 89 c7             	mov    %rax,%rdi
    9065:	e8 5c 0c 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    906a:	eb 37                	jmp    90a3 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    906c:	48 89 c3             	mov    %rax,%rbx
    906f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    9073:	48 89 c7             	mov    %rax,%rdi
    9076:	e8 55 0d 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    907b:	eb 0f                	jmp    908c <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    907d:	48 89 c3             	mov    %rax,%rbx
    9080:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9084:	48 89 c7             	mov    %rax,%rdi
    9087:	e8 d6 0d 00 00       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    908c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9090:	48 89 c7             	mov    %rax,%rdi
    9093:	e8 2e 0c 00 00       	call   9cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9098:	48 89 d8             	mov    %rbx,%rax
    909b:	48 89 c7             	mov    %rax,%rdi
    909e:	e8 5d b8 ff ff       	call   4900 <_Unwind_Resume@plt>
    90a3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    90a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90ab:	c9                   	leave
    90ac:	c3                   	ret

00000000000090ad <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    90ad:	55                   	push   %rbp
    90ae:	48 89 e5             	mov    %rsp,%rbp
    90b1:	41 54                	push   %r12
    90b3:	53                   	push   %rbx
    90b4:	48 83 ec 20          	sub    $0x20,%rsp
    90b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    90c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90c8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    90cc:	0f 11 00             	movups %xmm0,(%rax)
    90cf:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    90d3:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    90d7:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    90dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90e0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    90e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90e8:	48 89 ce             	mov    %rcx,%rsi
    90eb:	48 89 c7             	mov    %rax,%rdi
    90ee:	e8 bd b2 ff ff       	call   43b0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    90f3:	85 c0                	test   %eax,%eax
    90f5:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    90f8:	84 c0                	test   %al,%al
    90fa:	74 51                	je     914d <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    90fc:	bf 10 00 00 00       	mov    $0x10,%edi
    9101:	e8 ba b0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9106:	48 89 c3             	mov    %rax,%rbx
    9109:	48 8d 05 d8 61 01 00 	lea    0x161d8(%rip),%rax        # 1f2e8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb8>
    9110:	48 89 c6             	mov    %rax,%rsi
    9113:	48 89 df             	mov    %rbx,%rdi
    9116:	e8 15 b0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    911b:	48 8b 05 86 7e 02 00 	mov    0x27e86(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9122:	48 89 c2             	mov    %rax,%rdx
    9125:	48 8d 05 14 7c 02 00 	lea    0x27c14(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    912c:	48 89 c6             	mov    %rax,%rsi
    912f:	48 89 df             	mov    %rbx,%rdi
    9132:	e8 59 b7 ff ff       	call   4890 <__cxa_throw@plt>
    9137:	49 89 c4             	mov    %rax,%r12
    913a:	48 89 df             	mov    %rbx,%rdi
    913d:	e8 8e b1 ff ff       	call   42d0 <__cxa_free_exception@plt>
    9142:	4c 89 e0             	mov    %r12,%rax
    9145:	48 89 c7             	mov    %rax,%rdi
    9148:	e8 b3 b7 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    914d:	90                   	nop
}
    914e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9152:	48 83 c4 20          	add    $0x20,%rsp
    9156:	5b                   	pop    %rbx
    9157:	41 5c                	pop    %r12
    9159:	5d                   	pop    %rbp
    915a:	c3                   	ret

000000000000915b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    915b:	55                   	push   %rbp
    915c:	48 89 e5             	mov    %rsp,%rbp
    915f:	41 54                	push   %r12
    9161:	53                   	push   %rbx
    9162:	48 83 ec 30          	sub    $0x30,%rsp
    9166:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    916a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    916e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    9172:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9176:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    917a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    917e:	b9 00 00 00 00       	mov    $0x0,%ecx
    9183:	48 89 c7             	mov    %rax,%rdi
    9186:	e8 d5 b4 ff ff       	call   4660 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    918b:	85 c0                	test   %eax,%eax
    918d:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    9190:	84 c0                	test   %al,%al
    9192:	74 3b                	je     91cf <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    9194:	bf 10 00 00 00       	mov    $0x10,%edi
    9199:	e8 22 b0 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    919e:	48 89 c3             	mov    %rax,%rbx
    91a1:	48 8d 05 68 61 01 00 	lea    0x16168(%rip),%rax        # 1f310 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    91a8:	48 89 c6             	mov    %rax,%rsi
    91ab:	48 89 df             	mov    %rbx,%rdi
    91ae:	e8 7d af ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    91b3:	48 8b 05 ee 7d 02 00 	mov    0x27dee(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    91ba:	48 89 c2             	mov    %rax,%rdx
    91bd:	48 8d 05 7c 7b 02 00 	lea    0x27b7c(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    91c4:	48 89 c6             	mov    %rax,%rsi
    91c7:	48 89 df             	mov    %rbx,%rdi
    91ca:	e8 c1 b6 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    91cf:	8b 45 e8             	mov    -0x18(%rbp),%eax
    91d2:	89 c3                	mov    %eax,%ebx
    91d4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91d8:	48 89 c7             	mov    %rax,%rdi
    91db:	e8 84 0e 00 00       	call   a064 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    91e0:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    91e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    91e8:	48 89 de             	mov    %rbx,%rsi
    91eb:	48 89 c7             	mov    %rax,%rdi
    91ee:	e8 a9 0e 00 00       	call   a09c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    91f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91f7:	48 89 c7             	mov    %rax,%rdi
    91fa:	e8 81 0e 00 00       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    91ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9203:	48 89 c7             	mov    %rax,%rdi
    9206:	e8 4b 0f 00 00       	call   a156 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    920b:	48 89 c1             	mov    %rax,%rcx
    920e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9212:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9216:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    921a:	48 89 c7             	mov    %rax,%rdi
    921d:	e8 3e b4 ff ff       	call   4660 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    9222:	85 c0                	test   %eax,%eax
    9224:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    9227:	84 c0                	test   %al,%al
    9229:	0f 84 95 00 00 00    	je     92c4 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    922f:	bf 10 00 00 00       	mov    $0x10,%edi
    9234:	e8 87 af ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9239:	48 89 c3             	mov    %rax,%rbx
    923c:	48 8d 05 cd 60 01 00 	lea    0x160cd(%rip),%rax        # 1f310 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    9243:	48 89 c6             	mov    %rax,%rsi
    9246:	48 89 df             	mov    %rbx,%rdi
    9249:	e8 e2 ae ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    924e:	48 8b 05 53 7d 02 00 	mov    0x27d53(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9255:	48 89 c2             	mov    %rax,%rdx
    9258:	48 8d 05 e1 7a 02 00 	lea    0x27ae1(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    925f:	48 89 c6             	mov    %rax,%rsi
    9262:	48 89 df             	mov    %rbx,%rdi
    9265:	e8 26 b6 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    926a:	49 89 c4             	mov    %rax,%r12
    926d:	48 89 df             	mov    %rbx,%rdi
    9270:	e8 5b b0 ff ff       	call   42d0 <__cxa_free_exception@plt>
    9275:	4c 89 e0             	mov    %r12,%rax
    9278:	48 89 c7             	mov    %rax,%rdi
    927b:	e8 80 b6 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    9280:	48 89 c3             	mov    %rax,%rbx
    9283:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9287:	48 89 c7             	mov    %rax,%rdi
    928a:	e8 f1 0d 00 00       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    928f:	48 89 d8             	mov    %rbx,%rax
    9292:	48 89 c7             	mov    %rax,%rdi
    9295:	e8 66 b6 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    929a:	49 89 c4             	mov    %rax,%r12
    929d:	48 89 df             	mov    %rbx,%rdi
    92a0:	e8 2b b0 ff ff       	call   42d0 <__cxa_free_exception@plt>
    92a5:	4c 89 e3             	mov    %r12,%rbx
    92a8:	eb 03                	jmp    92ad <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    92aa:	48 89 c3             	mov    %rax,%rbx
    92ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92b1:	48 89 c7             	mov    %rax,%rdi
    92b4:	e8 59 0e 00 00       	call   a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    92b9:	48 89 d8             	mov    %rbx,%rax
    92bc:	48 89 c7             	mov    %rax,%rdi
    92bf:	e8 3c b6 ff ff       	call   4900 <_Unwind_Resume@plt>
  return surfaceFormats;
    92c4:	90                   	nop
}
    92c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92c9:	48 83 c4 30          	add    $0x30,%rsp
    92cd:	5b                   	pop    %rbx
    92ce:	41 5c                	pop    %r12
    92d0:	5d                   	pop    %rbp
    92d1:	c3                   	ret

00000000000092d2 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    92d2:	55                   	push   %rbp
    92d3:	48 89 e5             	mov    %rsp,%rbp
    92d6:	41 54                	push   %r12
    92d8:	53                   	push   %rbx
    92d9:	48 83 ec 30          	sub    $0x30,%rsp
    92dd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    92e1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    92e5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    92e9:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    92ed:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    92f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    92f5:	b9 00 00 00 00       	mov    $0x0,%ecx
    92fa:	48 89 c7             	mov    %rax,%rdi
    92fd:	e8 6e b3 ff ff       	call   4670 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    9302:	85 c0                	test   %eax,%eax
    9304:	0f 95 c0             	setne  %al
    9307:	84 c0                	test   %al,%al
    9309:	74 3b                	je     9346 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    930b:	bf 10 00 00 00       	mov    $0x10,%edi
    9310:	e8 ab ae ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9315:	48 89 c3             	mov    %rax,%rbx
    9318:	48 8d 05 19 60 01 00 	lea    0x16019(%rip),%rax        # 1f338 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    931f:	48 89 c6             	mov    %rax,%rsi
    9322:	48 89 df             	mov    %rbx,%rdi
    9325:	e8 06 ae ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    932a:	48 8b 05 77 7c 02 00 	mov    0x27c77(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9331:	48 89 c2             	mov    %rax,%rdx
    9334:	48 8d 05 05 7a 02 00 	lea    0x27a05(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    933b:	48 89 c6             	mov    %rax,%rsi
    933e:	48 89 df             	mov    %rbx,%rdi
    9341:	e8 4a b5 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    9346:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9349:	89 c3                	mov    %eax,%ebx
    934b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    934f:	48 89 c7             	mov    %rax,%rdi
    9352:	e8 71 0e 00 00       	call   a1c8 <_ZNSaI16VkPresentModeKHREC1Ev>
    9357:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    935b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    935f:	48 89 de             	mov    %rbx,%rsi
    9362:	48 89 c7             	mov    %rax,%rdi
    9365:	e8 96 0e 00 00       	call   a200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    936a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    936e:	48 89 c7             	mov    %rax,%rdi
    9371:	e8 6e 0e 00 00       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    9376:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    937a:	48 89 c7             	mov    %rax,%rdi
    937d:	e8 38 0f 00 00       	call   a2ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    9382:	48 89 c1             	mov    %rax,%rcx
    9385:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9389:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    938d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9391:	48 89 c7             	mov    %rax,%rdi
    9394:	e8 d7 b2 ff ff       	call   4670 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    9399:	85 c0                	test   %eax,%eax
    939b:	0f 95 c0             	setne  %al
    939e:	84 c0                	test   %al,%al
    93a0:	0f 84 95 00 00 00    	je     943b <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    93a6:	bf 10 00 00 00       	mov    $0x10,%edi
    93ab:	e8 10 ae ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    93b0:	48 89 c3             	mov    %rax,%rbx
    93b3:	48 8d 05 7e 5f 01 00 	lea    0x15f7e(%rip),%rax        # 1f338 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    93ba:	48 89 c6             	mov    %rax,%rsi
    93bd:	48 89 df             	mov    %rbx,%rdi
    93c0:	e8 6b ad ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    93c5:	48 8b 05 dc 7b 02 00 	mov    0x27bdc(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    93cc:	48 89 c2             	mov    %rax,%rdx
    93cf:	48 8d 05 6a 79 02 00 	lea    0x2796a(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    93d6:	48 89 c6             	mov    %rax,%rsi
    93d9:	48 89 df             	mov    %rbx,%rdi
    93dc:	e8 af b4 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    93e1:	49 89 c4             	mov    %rax,%r12
    93e4:	48 89 df             	mov    %rbx,%rdi
    93e7:	e8 e4 ae ff ff       	call   42d0 <__cxa_free_exception@plt>
    93ec:	4c 89 e0             	mov    %r12,%rax
    93ef:	48 89 c7             	mov    %rax,%rdi
    93f2:	e8 09 b5 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    93f7:	48 89 c3             	mov    %rax,%rbx
    93fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93fe:	48 89 c7             	mov    %rax,%rdi
    9401:	e8 de 0d 00 00       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
    9406:	48 89 d8             	mov    %rbx,%rax
    9409:	48 89 c7             	mov    %rax,%rdi
    940c:	e8 ef b4 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    9411:	49 89 c4             	mov    %rax,%r12
    9414:	48 89 df             	mov    %rbx,%rdi
    9417:	e8 b4 ae ff ff       	call   42d0 <__cxa_free_exception@plt>
    941c:	4c 89 e3             	mov    %r12,%rbx
    941f:	eb 03                	jmp    9424 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    9421:	48 89 c3             	mov    %rax,%rbx
    9424:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9428:	48 89 c7             	mov    %rax,%rdi
    942b:	e8 46 0e 00 00       	call   a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    9430:	48 89 d8             	mov    %rbx,%rax
    9433:	48 89 c7             	mov    %rax,%rdi
    9436:	e8 c5 b4 ff ff       	call   4900 <_Unwind_Resume@plt>
  return presentModes;
    943b:	90                   	nop
}
    943c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9440:	48 83 c4 30          	add    $0x30,%rsp
    9444:	5b                   	pop    %rbx
    9445:	41 5c                	pop    %r12
    9447:	5d                   	pop    %rbp
    9448:	c3                   	ret

0000000000009449 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    9449:	55                   	push   %rbp
    944a:	48 89 e5             	mov    %rsp,%rbp
    944d:	41 54                	push   %r12
    944f:	53                   	push   %rbx
    9450:	48 83 ec 30          	sub    $0x30,%rsp
    9454:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9458:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    945c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    9460:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9464:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9468:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    946c:	b9 00 00 00 00       	mov    $0x0,%ecx
    9471:	48 89 c7             	mov    %rax,%rdi
    9474:	e8 d7 ad ff ff       	call   4250 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    9479:	85 c0                	test   %eax,%eax
    947b:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    947e:	84 c0                	test   %al,%al
    9480:	74 3b                	je     94bd <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    9482:	bf 10 00 00 00       	mov    $0x10,%edi
    9487:	e8 34 ad ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    948c:	48 89 c3             	mov    %rax,%rbx
    948f:	48 8d 05 d2 5e 01 00 	lea    0x15ed2(%rip),%rax        # 1f368 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    9496:	48 89 c6             	mov    %rax,%rsi
    9499:	48 89 df             	mov    %rbx,%rdi
    949c:	e8 8f ac ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    94a1:	48 8b 05 00 7b 02 00 	mov    0x27b00(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    94a8:	48 89 c2             	mov    %rax,%rdx
    94ab:	48 8d 05 8e 78 02 00 	lea    0x2788e(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    94b2:	48 89 c6             	mov    %rax,%rsi
    94b5:	48 89 df             	mov    %rbx,%rdi
    94b8:	e8 d3 b3 ff ff       	call   4890 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    94bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    94c0:	89 c3                	mov    %eax,%ebx
    94c2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94c6:	48 89 c7             	mov    %rax,%rdi
    94c9:	e8 5e 0e 00 00       	call   a32c <_ZNSaIP9VkImage_TEC1Ev>
    94ce:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    94d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    94d6:	48 89 de             	mov    %rbx,%rsi
    94d9:	48 89 c7             	mov    %rax,%rdi
    94dc:	e8 83 0e 00 00       	call   a364 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    94e1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94e5:	48 89 c7             	mov    %rax,%rdi
    94e8:	e8 5b 0e 00 00       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    94ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    94f1:	48 89 c7             	mov    %rax,%rdi
    94f4:	e8 25 0f 00 00       	call   a41e <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    94f9:	48 89 c1             	mov    %rax,%rcx
    94fc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9500:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9504:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9508:	48 89 c7             	mov    %rax,%rdi
    950b:	e8 40 ad ff ff       	call   4250 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    9510:	85 c0                	test   %eax,%eax
    9512:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    9515:	84 c0                	test   %al,%al
    9517:	0f 84 95 00 00 00    	je     95b2 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    951d:	bf 10 00 00 00       	mov    $0x10,%edi
    9522:	e8 99 ac ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    9527:	48 89 c3             	mov    %rax,%rbx
    952a:	48 8d 05 37 5e 01 00 	lea    0x15e37(%rip),%rax        # 1f368 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    9531:	48 89 c6             	mov    %rax,%rsi
    9534:	48 89 df             	mov    %rbx,%rdi
    9537:	e8 f4 ab ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    953c:	48 8b 05 65 7a 02 00 	mov    0x27a65(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9543:	48 89 c2             	mov    %rax,%rdx
    9546:	48 8d 05 f3 77 02 00 	lea    0x277f3(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    954d:	48 89 c6             	mov    %rax,%rsi
    9550:	48 89 df             	mov    %rbx,%rdi
    9553:	e8 38 b3 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    9558:	49 89 c4             	mov    %rax,%r12
    955b:	48 89 df             	mov    %rbx,%rdi
    955e:	e8 6d ad ff ff       	call   42d0 <__cxa_free_exception@plt>
    9563:	4c 89 e0             	mov    %r12,%rax
    9566:	48 89 c7             	mov    %rax,%rdi
    9569:	e8 92 b3 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    956e:	48 89 c3             	mov    %rax,%rbx
    9571:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9575:	48 89 c7             	mov    %rax,%rdi
    9578:	e8 cb 0d 00 00       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
    957d:	48 89 d8             	mov    %rbx,%rax
    9580:	48 89 c7             	mov    %rax,%rdi
    9583:	e8 78 b3 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    9588:	49 89 c4             	mov    %rax,%r12
    958b:	48 89 df             	mov    %rbx,%rdi
    958e:	e8 3d ad ff ff       	call   42d0 <__cxa_free_exception@plt>
    9593:	4c 89 e3             	mov    %r12,%rbx
    9596:	eb 03                	jmp    959b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    9598:	48 89 c3             	mov    %rax,%rbx
    959b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    959f:	48 89 c7             	mov    %rax,%rdi
    95a2:	e8 33 0e 00 00       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    95a7:	48 89 d8             	mov    %rbx,%rax
    95aa:	48 89 c7             	mov    %rax,%rdi
    95ad:	e8 4e b3 ff ff       	call   4900 <_Unwind_Resume@plt>
  return swapchainImages;
    95b2:	90                   	nop
}
    95b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    95b7:	48 83 c4 30          	add    $0x30,%rsp
    95bb:	5b                   	pop    %rbx
    95bc:	41 5c                	pop    %r12
    95be:	5d                   	pop    %rbp
    95bf:	c3                   	ret

00000000000095c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    95c0:	55                   	push   %rbp
    95c1:	48 89 e5             	mov    %rsp,%rbp
    95c4:	48 83 ec 10          	sub    $0x10,%rsp
    95c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95d0:	48 89 c7             	mov    %rax,%rdi
    95d3:	e8 00 01 00 00       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    95d8:	90                   	nop
    95d9:	c9                   	leave
    95da:	c3                   	ret
    95db:	90                   	nop

00000000000095dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    95dc:	55                   	push   %rbp
    95dd:	48 89 e5             	mov    %rsp,%rbp
    95e0:	48 83 ec 10          	sub    $0x10,%rsp
    95e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ec:	48 89 c7             	mov    %rax,%rdi
    95ef:	e8 52 02 00 00       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    95f4:	90                   	nop
    95f5:	c9                   	leave
    95f6:	c3                   	ret
    95f7:	90                   	nop

00000000000095f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    95f8:	55                   	push   %rbp
    95f9:	48 89 e5             	mov    %rsp,%rbp
    95fc:	48 83 ec 10          	sub    $0x10,%rsp
    9600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9608:	48 89 c7             	mov    %rax,%rdi
    960b:	e8 a4 03 00 00       	call   99b4 <_ZNSaIPKcED1Ev>
    9610:	90                   	nop
    9611:	c9                   	leave
    9612:	c3                   	ret
    9613:	90                   	nop

0000000000009614 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    9614:	55                   	push   %rbp
    9615:	48 89 e5             	mov    %rsp,%rbp
    9618:	48 83 ec 10          	sub    $0x10,%rsp
    961c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9624:	48 89 c7             	mov    %rax,%rdi
    9627:	e8 a4 04 00 00       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    962c:	90                   	nop
    962d:	c9                   	leave
    962e:	c3                   	ret
    962f:	90                   	nop

0000000000009630 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	48 83 ec 10          	sub    $0x10,%rsp
    9638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    963c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9640:	48 89 c7             	mov    %rax,%rdi
    9643:	e8 ec 05 00 00       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9648:	90                   	nop
    9649:	c9                   	leave
    964a:	c3                   	ret
    964b:	90                   	nop

000000000000964c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    964c:	55                   	push   %rbp
    964d:	48 89 e5             	mov    %rsp,%rbp
    9650:	48 83 ec 10          	sub    $0x10,%rsp
    9654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    965c:	48 89 c7             	mov    %rax,%rdi
    965f:	e8 6c 07 00 00       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9664:	90                   	nop
    9665:	c9                   	leave
    9666:	c3                   	ret
    9667:	90                   	nop

0000000000009668 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    9668:	55                   	push   %rbp
    9669:	48 89 e5             	mov    %rsp,%rbp
    966c:	48 83 ec 10          	sub    $0x10,%rsp
    9670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9678:	48 89 c7             	mov    %rax,%rdi
    967b:	e8 00 0a 00 00       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    9680:	90                   	nop
    9681:	c9                   	leave
    9682:	c3                   	ret
    9683:	90                   	nop

0000000000009684 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    9684:	55                   	push   %rbp
    9685:	48 89 e5             	mov    %rsp,%rbp
    9688:	48 83 ec 10          	sub    $0x10,%rsp
    968c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9694:	48 89 c7             	mov    %rax,%rdi
    9697:	e8 48 0b 00 00       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
    969c:	90                   	nop
    969d:	c9                   	leave
    969e:	c3                   	ret
    969f:	90                   	nop

00000000000096a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    96a0:	55                   	push   %rbp
    96a1:	48 89 e5             	mov    %rsp,%rbp
    96a4:	48 83 ec 10          	sub    $0x10,%rsp
    96a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b0:	48 89 c7             	mov    %rax,%rdi
    96b3:	e8 90 0c 00 00       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
    96b8:	90                   	nop
    96b9:	c9                   	leave
    96ba:	c3                   	ret
    96bb:	90                   	nop

00000000000096bc <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    96bc:	55                   	push   %rbp
    96bd:	48 89 e5             	mov    %rsp,%rbp
    96c0:	48 83 ec 10          	sub    $0x10,%rsp
    96c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96cc:	48 89 c7             	mov    %rax,%rdi
    96cf:	e8 bc 0d 00 00       	call   a490 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    96d4:	90                   	nop
    96d5:	c9                   	leave
    96d6:	c3                   	ret
    96d7:	90                   	nop

00000000000096d8 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    96d8:	55                   	push   %rbp
    96d9:	48 89 e5             	mov    %rsp,%rbp
    96dc:	48 83 ec 10          	sub    $0x10,%rsp
    96e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e8:	48 89 c7             	mov    %rax,%rdi
    96eb:	e8 ac 0d 00 00       	call   a49c <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    96f0:	90                   	nop
    96f1:	c9                   	leave
    96f2:	c3                   	ret
    96f3:	90                   	nop

00000000000096f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    96f4:	55                   	push   %rbp
    96f5:	48 89 e5             	mov    %rsp,%rbp
    96f8:	53                   	push   %rbx
    96f9:	48 83 ec 28          	sub    $0x28,%rsp
    96fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9701:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9705:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9709:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    970d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9711:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9715:	48 89 d6             	mov    %rdx,%rsi
    9718:	48 89 c7             	mov    %rax,%rdi
    971b:	e8 87 0d 00 00       	call   a4a7 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    9720:	48 89 c1             	mov    %rax,%rcx
    9723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9727:	48 89 c2             	mov    %rax,%rdx
    972a:	48 89 ce             	mov    %rcx,%rsi
    972d:	48 89 df             	mov    %rbx,%rdi
    9730:	e8 d3 0d 00 00       	call   a508 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9735:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9739:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    973d:	48 89 d6             	mov    %rdx,%rsi
    9740:	48 89 c7             	mov    %rax,%rdi
    9743:	e8 1e 0e 00 00       	call   a566 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    9748:	eb 1a                	jmp    9764 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    974a:	48 89 c3             	mov    %rax,%rbx
    974d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9751:	48 89 c7             	mov    %rax,%rdi
    9754:	e8 79 00 00 00       	call   97d2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    9759:	48 89 d8             	mov    %rbx,%rax
    975c:	48 89 c7             	mov    %rax,%rdi
    975f:	e8 9c b1 ff ff       	call   4900 <_Unwind_Resume@plt>
    9764:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9768:	c9                   	leave
    9769:	c3                   	ret

000000000000976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    976a:	55                   	push   %rbp
    976b:	48 89 e5             	mov    %rsp,%rbp
    976e:	48 83 ec 10          	sub    $0x10,%rsp
    9772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    977a:	48 89 c7             	mov    %rax,%rdi
    977d:	e8 24 0e 00 00       	call   a5a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9782:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9789:	48 8b 48 08          	mov    0x8(%rax),%rcx
    978d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9791:	48 8b 00             	mov    (%rax),%rax
    9794:	48 89 ce             	mov    %rcx,%rsi
    9797:	48 89 c7             	mov    %rax,%rdi
    979a:	e8 15 0e 00 00       	call   a5b4 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    979f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a3:	48 89 c7             	mov    %rax,%rdi
    97a6:	e8 27 00 00 00       	call   97d2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    97ab:	90                   	nop
    97ac:	c9                   	leave
    97ad:	c3                   	ret

00000000000097ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    97ae:	55                   	push   %rbp
    97af:	48 89 e5             	mov    %rsp,%rbp
    97b2:	48 83 ec 10          	sub    $0x10,%rsp
    97b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    97ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97be:	48 8b 10             	mov    (%rax),%rdx
    97c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c5:	48 89 d6             	mov    %rdx,%rsi
    97c8:	48 89 c7             	mov    %rax,%rdi
    97cb:	e8 0e 0e 00 00       	call   a5de <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    97d0:	c9                   	leave
    97d1:	c3                   	ret

00000000000097d2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    97d2:	55                   	push   %rbp
    97d3:	48 89 e5             	mov    %rsp,%rbp
    97d6:	48 83 ec 10          	sub    $0x10,%rsp
    97da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    97de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    97e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ea:	48 8b 00             	mov    (%rax),%rax
    97ed:	48 29 c2             	sub    %rax,%rdx
    97f0:	48 c1 fa 03          	sar    $0x3,%rdx
    97f4:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    97fb:	fc c0 0f 
    97fe:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9802:	48 89 c2             	mov    %rax,%rdx
    9805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9809:	48 8b 08             	mov    (%rax),%rcx
    980c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9810:	48 89 ce             	mov    %rcx,%rsi
    9813:	48 89 c7             	mov    %rax,%rdi
    9816:	e8 fb 0d 00 00       	call   a616 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    981b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    981f:	48 89 c7             	mov    %rax,%rdi
    9822:	e8 99 fd ff ff       	call   95c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    9827:	90                   	nop
    9828:	c9                   	leave
    9829:	c3                   	ret

000000000000982a <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    982a:	55                   	push   %rbp
    982b:	48 89 e5             	mov    %rsp,%rbp
    982e:	48 83 ec 10          	sub    $0x10,%rsp
    9832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    983a:	48 89 c7             	mov    %rax,%rdi
    983d:	e8 0a 0e 00 00       	call   a64c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    9842:	90                   	nop
    9843:	c9                   	leave
    9844:	c3                   	ret
    9845:	90                   	nop

0000000000009846 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9846:	55                   	push   %rbp
    9847:	48 89 e5             	mov    %rsp,%rbp
    984a:	48 83 ec 10          	sub    $0x10,%rsp
    984e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 fa 0d 00 00       	call   a658 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    985e:	90                   	nop
    985f:	c9                   	leave
    9860:	c3                   	ret
    9861:	90                   	nop

0000000000009862 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9862:	55                   	push   %rbp
    9863:	48 89 e5             	mov    %rsp,%rbp
    9866:	53                   	push   %rbx
    9867:	48 83 ec 28          	sub    $0x28,%rsp
    986b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    986f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9873:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9877:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    987b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    987f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9883:	48 89 d6             	mov    %rdx,%rsi
    9886:	48 89 c7             	mov    %rax,%rdi
    9889:	e8 d5 0d 00 00       	call   a663 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    988e:	48 89 c1             	mov    %rax,%rcx
    9891:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9895:	48 89 c2             	mov    %rax,%rdx
    9898:	48 89 ce             	mov    %rcx,%rsi
    989b:	48 89 df             	mov    %rbx,%rdi
    989e:	e8 21 0e 00 00       	call   a6c4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    98a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98ab:	48 89 d6             	mov    %rdx,%rsi
    98ae:	48 89 c7             	mov    %rax,%rdi
    98b1:	e8 6c 0e 00 00       	call   a722 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    98b6:	eb 1a                	jmp    98d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    98b8:	48 89 c3             	mov    %rax,%rbx
    98bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98bf:	48 89 c7             	mov    %rax,%rdi
    98c2:	e8 79 00 00 00       	call   9940 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    98c7:	48 89 d8             	mov    %rbx,%rax
    98ca:	48 89 c7             	mov    %rax,%rdi
    98cd:	e8 2e b0 ff ff       	call   4900 <_Unwind_Resume@plt>
    98d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98d6:	c9                   	leave
    98d7:	c3                   	ret

00000000000098d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    98d8:	55                   	push   %rbp
    98d9:	48 89 e5             	mov    %rsp,%rbp
    98dc:	48 83 ec 10          	sub    $0x10,%rsp
    98e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    98e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e8:	48 89 c7             	mov    %rax,%rdi
    98eb:	e8 72 0e 00 00       	call   a762 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    98f0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    98f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    98fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ff:	48 8b 00             	mov    (%rax),%rax
    9902:	48 89 ce             	mov    %rcx,%rsi
    9905:	48 89 c7             	mov    %rax,%rdi
    9908:	e8 63 0e 00 00       	call   a770 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    990d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9911:	48 89 c7             	mov    %rax,%rdi
    9914:	e8 27 00 00 00       	call   9940 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    9919:	90                   	nop
    991a:	c9                   	leave
    991b:	c3                   	ret

000000000000991c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    991c:	55                   	push   %rbp
    991d:	48 89 e5             	mov    %rsp,%rbp
    9920:	48 83 ec 10          	sub    $0x10,%rsp
    9924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    992c:	48 8b 10             	mov    (%rax),%rdx
    992f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9933:	48 89 d6             	mov    %rdx,%rsi
    9936:	48 89 c7             	mov    %rax,%rdi
    9939:	e8 5c 0e 00 00       	call   a79a <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    993e:	c9                   	leave
    993f:	c3                   	ret

0000000000009940 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9940:	55                   	push   %rbp
    9941:	48 89 e5             	mov    %rsp,%rbp
    9944:	48 83 ec 10          	sub    $0x10,%rsp
    9948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    994c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9950:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9958:	48 8b 00             	mov    (%rax),%rax
    995b:	48 29 c2             	sub    %rax,%rdx
    995e:	48 c1 fa 02          	sar    $0x2,%rdx
    9962:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    9969:	fc c0 0f 
    996c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9970:	48 89 c2             	mov    %rax,%rdx
    9973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9977:	48 8b 08             	mov    (%rax),%rcx
    997a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997e:	48 89 ce             	mov    %rcx,%rsi
    9981:	48 89 c7             	mov    %rax,%rdi
    9984:	e8 49 0e 00 00       	call   a7d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    9989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    998d:	48 89 c7             	mov    %rax,%rdi
    9990:	e8 47 fc ff ff       	call   95dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    9995:	90                   	nop
    9996:	c9                   	leave
    9997:	c3                   	ret

0000000000009998 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9998:	55                   	push   %rbp
    9999:	48 89 e5             	mov    %rsp,%rbp
    999c:	48 83 ec 10          	sub    $0x10,%rsp
    99a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99a8:	48 89 c7             	mov    %rax,%rdi
    99ab:	e8 58 0e 00 00       	call   a808 <_ZNSt15__new_allocatorIPKcEC1Ev>
    99b0:	90                   	nop
    99b1:	c9                   	leave
    99b2:	c3                   	ret
    99b3:	90                   	nop

00000000000099b4 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    99b4:	55                   	push   %rbp
    99b5:	48 89 e5             	mov    %rsp,%rbp
    99b8:	48 83 ec 10          	sub    $0x10,%rsp
    99bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99c4:	48 89 c7             	mov    %rax,%rdi
    99c7:	e8 48 0e 00 00       	call   a814 <_ZNSt15__new_allocatorIPKcED1Ev>
    99cc:	90                   	nop
    99cd:	c9                   	leave
    99ce:	c3                   	ret
    99cf:	90                   	nop

00000000000099d0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    99d0:	55                   	push   %rbp
    99d1:	48 89 e5             	mov    %rsp,%rbp
    99d4:	53                   	push   %rbx
    99d5:	48 83 ec 28          	sub    $0x28,%rsp
    99d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    99e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    99e5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    99e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99f1:	48 89 d6             	mov    %rdx,%rsi
    99f4:	48 89 c7             	mov    %rax,%rdi
    99f7:	e8 23 0e 00 00       	call   a81f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    99fc:	48 89 c1             	mov    %rax,%rcx
    99ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a03:	48 89 c2             	mov    %rax,%rdx
    9a06:	48 89 ce             	mov    %rcx,%rsi
    9a09:	48 89 df             	mov    %rbx,%rdi
    9a0c:	e8 6f 0e 00 00       	call   a880 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9a11:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a19:	48 89 d6             	mov    %rdx,%rsi
    9a1c:	48 89 c7             	mov    %rax,%rdi
    9a1f:	e8 ba 0e 00 00       	call   a8de <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    9a24:	eb 1a                	jmp    9a40 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    9a26:	48 89 c3             	mov    %rax,%rbx
    9a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a2d:	48 89 c7             	mov    %rax,%rdi
    9a30:	e8 31 00 00 00       	call   9a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    9a35:	48 89 d8             	mov    %rbx,%rax
    9a38:	48 89 c7             	mov    %rax,%rdi
    9a3b:	e8 c0 ae ff ff       	call   4900 <_Unwind_Resume@plt>
    9a40:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a44:	c9                   	leave
    9a45:	c3                   	ret

0000000000009a46 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    9a46:	55                   	push   %rbp
    9a47:	48 89 e5             	mov    %rsp,%rbp
    9a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a56:	48 8b 00             	mov    (%rax),%rax
    9a59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a5d:	48 c1 e2 03          	shl    $0x3,%rdx
    9a61:	48 01 d0             	add    %rdx,%rax
      }
    9a64:	5d                   	pop    %rbp
    9a65:	c3                   	ret

0000000000009a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9a66:	55                   	push   %rbp
    9a67:	48 89 e5             	mov    %rsp,%rbp
    9a6a:	48 83 ec 10          	sub    $0x10,%rsp
    9a6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a76:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a7e:	48 8b 00             	mov    (%rax),%rax
    9a81:	48 29 c2             	sub    %rax,%rdx
    9a84:	48 89 d0             	mov    %rdx,%rax
    9a87:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9a8b:	48 89 c2             	mov    %rax,%rdx
    9a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a92:	48 8b 08             	mov    (%rax),%rcx
    9a95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a99:	48 89 ce             	mov    %rcx,%rsi
    9a9c:	48 89 c7             	mov    %rax,%rdi
    9a9f:	e8 ae 0e 00 00       	call   a952 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    9aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa8:	48 89 c7             	mov    %rax,%rdi
    9aab:	e8 48 fb ff ff       	call   95f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    9ab0:	90                   	nop
    9ab1:	c9                   	leave
    9ab2:	c3                   	ret
    9ab3:	90                   	nop

0000000000009ab4 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9ab4:	55                   	push   %rbp
    9ab5:	48 89 e5             	mov    %rsp,%rbp
    9ab8:	48 83 ec 10          	sub    $0x10,%rsp
    9abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac4:	48 89 c7             	mov    %rax,%rdi
    9ac7:	e8 bc 0e 00 00       	call   a988 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    9acc:	90                   	nop
    9acd:	c9                   	leave
    9ace:	c3                   	ret
    9acf:	90                   	nop

0000000000009ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9ad0:	55                   	push   %rbp
    9ad1:	48 89 e5             	mov    %rsp,%rbp
    9ad4:	48 83 ec 10          	sub    $0x10,%rsp
    9ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae0:	48 89 c7             	mov    %rax,%rdi
    9ae3:	e8 ac 0e 00 00       	call   a994 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    9ae8:	90                   	nop
    9ae9:	c9                   	leave
    9aea:	c3                   	ret
    9aeb:	90                   	nop

0000000000009aec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9aec:	55                   	push   %rbp
    9aed:	48 89 e5             	mov    %rsp,%rbp
    9af0:	53                   	push   %rbx
    9af1:	48 83 ec 28          	sub    $0x28,%rsp
    9af5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9af9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9afd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9b01:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9b05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b0d:	48 89 d6             	mov    %rdx,%rsi
    9b10:	48 89 c7             	mov    %rax,%rdi
    9b13:	e8 87 0e 00 00       	call   a99f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    9b18:	48 89 c1             	mov    %rax,%rcx
    9b1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b1f:	48 89 c2             	mov    %rax,%rdx
    9b22:	48 89 ce             	mov    %rcx,%rsi
    9b25:	48 89 df             	mov    %rbx,%rdi
    9b28:	e8 d3 0e 00 00       	call   aa00 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9b2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b35:	48 89 d6             	mov    %rdx,%rsi
    9b38:	48 89 c7             	mov    %rax,%rdi
    9b3b:	e8 1e 0f 00 00       	call   aa5e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    9b40:	eb 1a                	jmp    9b5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    9b42:	48 89 c3             	mov    %rax,%rbx
    9b45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b49:	48 89 c7             	mov    %rax,%rdi
    9b4c:	e8 79 00 00 00       	call   9bca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    9b51:	48 89 d8             	mov    %rbx,%rax
    9b54:	48 89 c7             	mov    %rax,%rdi
    9b57:	e8 a4 ad ff ff       	call   4900 <_Unwind_Resume@plt>
    9b5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b60:	c9                   	leave
    9b61:	c3                   	ret

0000000000009b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9b62:	55                   	push   %rbp
    9b63:	48 89 e5             	mov    %rsp,%rbp
    9b66:	48 83 ec 10          	sub    $0x10,%rsp
    9b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b72:	48 89 c7             	mov    %rax,%rdi
    9b75:	e8 24 0f 00 00       	call   aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9b7a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b81:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b89:	48 8b 00             	mov    (%rax),%rax
    9b8c:	48 89 ce             	mov    %rcx,%rsi
    9b8f:	48 89 c7             	mov    %rax,%rdi
    9b92:	e8 15 0f 00 00       	call   aaac <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    9b97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b9b:	48 89 c7             	mov    %rax,%rdi
    9b9e:	e8 27 00 00 00       	call   9bca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    9ba3:	90                   	nop
    9ba4:	c9                   	leave
    9ba5:	c3                   	ret

0000000000009ba6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9ba6:	55                   	push   %rbp
    9ba7:	48 89 e5             	mov    %rsp,%rbp
    9baa:	48 83 ec 10          	sub    $0x10,%rsp
    9bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bb6:	48 8b 10             	mov    (%rax),%rdx
    9bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bbd:	48 89 d6             	mov    %rdx,%rsi
    9bc0:	48 89 c7             	mov    %rax,%rdi
    9bc3:	e8 0e 0f 00 00       	call   aad6 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9bc8:	c9                   	leave
    9bc9:	c3                   	ret

0000000000009bca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9bca:	55                   	push   %rbp
    9bcb:	48 89 e5             	mov    %rsp,%rbp
    9bce:	48 83 ec 10          	sub    $0x10,%rsp
    9bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bda:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be2:	48 8b 00             	mov    (%rax),%rax
    9be5:	48 29 c2             	sub    %rax,%rdx
    9be8:	48 89 d0             	mov    %rdx,%rax
    9beb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9bef:	48 89 c2             	mov    %rax,%rdx
    9bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf6:	48 8b 08             	mov    (%rax),%rcx
    9bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bfd:	48 89 ce             	mov    %rcx,%rsi
    9c00:	48 89 c7             	mov    %rax,%rdi
    9c03:	e8 06 0f 00 00       	call   ab0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    9c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c0c:	48 89 c7             	mov    %rax,%rdi
    9c0f:	e8 00 fa ff ff       	call   9614 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9c14:	90                   	nop
    9c15:	c9                   	leave
    9c16:	c3                   	ret
    9c17:	90                   	nop

0000000000009c18 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9c18:	55                   	push   %rbp
    9c19:	48 89 e5             	mov    %rsp,%rbp
    9c1c:	48 83 ec 10          	sub    $0x10,%rsp
    9c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c28:	48 89 c7             	mov    %rax,%rdi
    9c2b:	e8 14 0f 00 00       	call   ab44 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    9c30:	90                   	nop
    9c31:	c9                   	leave
    9c32:	c3                   	ret
    9c33:	90                   	nop

0000000000009c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9c34:	55                   	push   %rbp
    9c35:	48 89 e5             	mov    %rsp,%rbp
    9c38:	48 83 ec 10          	sub    $0x10,%rsp
    9c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c44:	48 89 c7             	mov    %rax,%rdi
    9c47:	e8 04 0f 00 00       	call   ab50 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    9c4c:	90                   	nop
    9c4d:	c9                   	leave
    9c4e:	c3                   	ret
    9c4f:	90                   	nop

0000000000009c50 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9c50:	55                   	push   %rbp
    9c51:	48 89 e5             	mov    %rsp,%rbp
    9c54:	53                   	push   %rbx
    9c55:	48 83 ec 28          	sub    $0x28,%rsp
    9c59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9c61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9c65:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9c69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c71:	48 89 d6             	mov    %rdx,%rsi
    9c74:	48 89 c7             	mov    %rax,%rdi
    9c77:	e8 df 0e 00 00       	call   ab5b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    9c7c:	48 89 c1             	mov    %rax,%rcx
    9c7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c83:	48 89 c2             	mov    %rax,%rdx
    9c86:	48 89 ce             	mov    %rcx,%rsi
    9c89:	48 89 df             	mov    %rbx,%rdi
    9c8c:	e8 2b 0f 00 00       	call   abbc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9c91:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c99:	48 89 d6             	mov    %rdx,%rsi
    9c9c:	48 89 c7             	mov    %rax,%rdi
    9c9f:	e8 76 0f 00 00       	call   ac1a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    9ca4:	eb 1a                	jmp    9cc0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    9ca6:	48 89 c3             	mov    %rax,%rbx
    9ca9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cad:	48 89 c7             	mov    %rax,%rdi
    9cb0:	e8 79 00 00 00       	call   9d2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9cb5:	48 89 d8             	mov    %rbx,%rax
    9cb8:	48 89 c7             	mov    %rax,%rdi
    9cbb:	e8 40 ac ff ff       	call   4900 <_Unwind_Resume@plt>
    9cc0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9cc4:	c9                   	leave
    9cc5:	c3                   	ret

0000000000009cc6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9cc6:	55                   	push   %rbp
    9cc7:	48 89 e5             	mov    %rsp,%rbp
    9cca:	48 83 ec 10          	sub    $0x10,%rsp
    9cce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd6:	48 89 c7             	mov    %rax,%rdi
    9cd9:	e8 7c 0f 00 00       	call   ac5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9cde:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ce5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ced:	48 8b 00             	mov    (%rax),%rax
    9cf0:	48 89 ce             	mov    %rcx,%rsi
    9cf3:	48 89 c7             	mov    %rax,%rdi
    9cf6:	e8 6d 0f 00 00       	call   ac68 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    9cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cff:	48 89 c7             	mov    %rax,%rdi
    9d02:	e8 27 00 00 00       	call   9d2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9d07:	90                   	nop
    9d08:	c9                   	leave
    9d09:	c3                   	ret

0000000000009d0a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9d0a:	55                   	push   %rbp
    9d0b:	48 89 e5             	mov    %rsp,%rbp
    9d0e:	48 83 ec 10          	sub    $0x10,%rsp
    9d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d1a:	48 8b 10             	mov    (%rax),%rdx
    9d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d21:	48 89 d6             	mov    %rdx,%rsi
    9d24:	48 89 c7             	mov    %rax,%rdi
    9d27:	e8 66 0f 00 00       	call   ac92 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9d2c:	c9                   	leave
    9d2d:	c3                   	ret

0000000000009d2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9d2e:	55                   	push   %rbp
    9d2f:	48 89 e5             	mov    %rsp,%rbp
    9d32:	48 83 ec 10          	sub    $0x10,%rsp
    9d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d46:	48 8b 00             	mov    (%rax),%rax
    9d49:	48 29 c2             	sub    %rax,%rdx
    9d4c:	48 c1 fa 03          	sar    $0x3,%rdx
    9d50:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    9d57:	aa aa aa 
    9d5a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9d5e:	48 89 c2             	mov    %rax,%rdx
    9d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d65:	48 8b 08             	mov    (%rax),%rcx
    9d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6c:	48 89 ce             	mov    %rcx,%rsi
    9d6f:	48 89 c7             	mov    %rax,%rdi
    9d72:	e8 53 0f 00 00       	call   acca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    9d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7b:	48 89 c7             	mov    %rax,%rdi
    9d7e:	e8 ad f8 ff ff       	call   9630 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    9d83:	90                   	nop
    9d84:	c9                   	leave
    9d85:	c3                   	ret

0000000000009d86 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    9d86:	55                   	push   %rbp
    9d87:	48 89 e5             	mov    %rsp,%rbp
    9d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d92:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d9a:	48 8b 00             	mov    (%rax),%rax
    9d9d:	48 29 c2             	sub    %rax,%rdx
    9da0:	48 c1 fa 03          	sar    $0x3,%rdx
    9da4:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    9dab:	aa aa aa 
    9dae:	48 0f af c2          	imul   %rdx,%rax
    9db2:	5d                   	pop    %rbp
    9db3:	c3                   	ret

0000000000009db4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9db4:	55                   	push   %rbp
    9db5:	48 89 e5             	mov    %rsp,%rbp
    9db8:	48 83 ec 10          	sub    $0x10,%rsp
    9dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc4:	48 89 c7             	mov    %rax,%rdi
    9dc7:	e8 34 0f 00 00       	call   ad00 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    9dcc:	90                   	nop
    9dcd:	c9                   	leave
    9dce:	c3                   	ret
    9dcf:	90                   	nop

0000000000009dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9dd0:	55                   	push   %rbp
    9dd1:	48 89 e5             	mov    %rsp,%rbp
    9dd4:	48 83 ec 10          	sub    $0x10,%rsp
    9dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de0:	48 89 c7             	mov    %rax,%rdi
    9de3:	e8 24 0f 00 00       	call   ad0c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9de8:	90                   	nop
    9de9:	c9                   	leave
    9dea:	c3                   	ret
    9deb:	90                   	nop

0000000000009dec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9dec:	55                   	push   %rbp
    9ded:	48 89 e5             	mov    %rsp,%rbp
    9df0:	53                   	push   %rbx
    9df1:	48 83 ec 28          	sub    $0x28,%rsp
    9df5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9df9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9dfd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9e01:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9e05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9e09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e0d:	48 89 d6             	mov    %rdx,%rsi
    9e10:	48 89 c7             	mov    %rax,%rdi
    9e13:	e8 ff 0e 00 00       	call   ad17 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    9e18:	48 89 c1             	mov    %rax,%rcx
    9e1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e1f:	48 89 c2             	mov    %rax,%rdx
    9e22:	48 89 ce             	mov    %rcx,%rsi
    9e25:	48 89 df             	mov    %rbx,%rdi
    9e28:	e8 4b 0f 00 00       	call   ad78 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    9e2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9e31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e35:	48 89 d6             	mov    %rdx,%rsi
    9e38:	48 89 c7             	mov    %rax,%rdi
    9e3b:	e8 96 0f 00 00       	call   add6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    9e40:	eb 1a                	jmp    9e5c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    9e42:	48 89 c3             	mov    %rax,%rbx
    9e45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e49:	48 89 c7             	mov    %rax,%rdi
    9e4c:	e8 bb 01 00 00       	call   a00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9e51:	48 89 d8             	mov    %rbx,%rax
    9e54:	48 89 c7             	mov    %rax,%rdi
    9e57:	e8 a4 aa ff ff       	call   4900 <_Unwind_Resume@plt>
    9e5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9e60:	c9                   	leave
    9e61:	c3                   	ret

0000000000009e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9e62:	55                   	push   %rbp
    9e63:	48 89 e5             	mov    %rsp,%rbp
    9e66:	48 83 ec 10          	sub    $0x10,%rsp
    9e6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e72:	48 89 c7             	mov    %rax,%rdi
    9e75:	e8 9c 0f 00 00       	call   ae16 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9e7a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e81:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e89:	48 8b 00             	mov    (%rax),%rax
    9e8c:	48 89 ce             	mov    %rcx,%rsi
    9e8f:	48 89 c7             	mov    %rax,%rdi
    9e92:	e8 8d 0f 00 00       	call   ae24 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    9e97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9b:	48 89 c7             	mov    %rax,%rdi
    9e9e:	e8 69 01 00 00       	call   a00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9ea3:	90                   	nop
    9ea4:	c9                   	leave
    9ea5:	c3                   	ret

0000000000009ea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9ea6:	55                   	push   %rbp
    9ea7:	48 89 e5             	mov    %rsp,%rbp
    9eaa:	48 83 ec 20          	sub    $0x20,%rsp
    9eae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    9eb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9eb6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9eba:	48 89 d6             	mov    %rdx,%rsi
    9ebd:	48 89 c7             	mov    %rax,%rdi
    9ec0:	e8 89 0f 00 00       	call   ae4e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec9:	c9                   	leave
    9eca:	c3                   	ret
    9ecb:	90                   	nop

0000000000009ecc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9ecc:	55                   	push   %rbp
    9ecd:	48 89 e5             	mov    %rsp,%rbp
    9ed0:	48 83 ec 20          	sub    $0x20,%rsp
    9ed4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9ed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9edc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9ee0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9ee4:	48 89 d6             	mov    %rdx,%rsi
    9ee7:	48 89 c7             	mov    %rax,%rdi
    9eea:	e8 5f 0f 00 00       	call   ae4e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef3:	c9                   	leave
    9ef4:	c3                   	ret

0000000000009ef5 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9ef5:	55                   	push   %rbp
    9ef6:	48 89 e5             	mov    %rsp,%rbp
    9ef9:	53                   	push   %rbx
    9efa:	48 83 ec 18          	sub    $0x18,%rsp
    9efe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9f06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f0a:	48 89 c7             	mov    %rax,%rdi
    9f0d:	e8 5a 0f 00 00       	call   ae6c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9f12:	48 8b 18             	mov    (%rax),%rbx
    9f15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f19:	48 89 c7             	mov    %rax,%rdi
    9f1c:	e8 4b 0f 00 00       	call   ae6c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9f21:	48 8b 00             	mov    (%rax),%rax
    9f24:	48 39 c3             	cmp    %rax,%rbx
    9f27:	0f 95 c0             	setne  %al
    9f2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f2e:	c9                   	leave
    9f2f:	c3                   	ret

0000000000009f30 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9f30:	55                   	push   %rbp
    9f31:	48 89 e5             	mov    %rsp,%rbp
    9f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f3c:	48 8b 00             	mov    (%rax),%rax
    9f3f:	48 8d 50 18          	lea    0x18(%rax),%rdx
    9f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f47:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9f4e:	5d                   	pop    %rbp
    9f4f:	c3                   	ret

0000000000009f50 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9f50:	55                   	push   %rbp
    9f51:	48 89 e5             	mov    %rsp,%rbp
    9f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f5c:	48 8b 00             	mov    (%rax),%rax
    9f5f:	5d                   	pop    %rbp
    9f60:	c3                   	ret
    9f61:	90                   	nop

0000000000009f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    9f62:	55                   	push   %rbp
    9f63:	48 89 e5             	mov    %rsp,%rbp
    9f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f72:	48 8b 08             	mov    (%rax),%rcx
    9f75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f79:	48 89 d0             	mov    %rdx,%rax
    9f7c:	48 c1 e0 03          	shl    $0x3,%rax
    9f80:	48 29 d0             	sub    %rdx,%rax
    9f83:	48 c1 e0 02          	shl    $0x2,%rax
    9f87:	48 01 c8             	add    %rcx,%rax
      }
    9f8a:	5d                   	pop    %rbp
    9f8b:	c3                   	ret

0000000000009f8c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    9f8c:	55                   	push   %rbp
    9f8d:	48 89 e5             	mov    %rsp,%rbp
    9f90:	53                   	push   %rbx
    9f91:	48 83 ec 18          	sub    $0x18,%rsp
    9f95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f99:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    9f9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fa1:	48 89 c7             	mov    %rax,%rdi
    9fa4:	e8 d1 0e 00 00       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    9fa9:	84 c0                	test   %al,%al
    9fab:	74 36                	je     9fe3 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    9fad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fb1:	48 89 c7             	mov    %rax,%rdi
    9fb4:	e8 17 0f 00 00       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9fb9:	48 89 c3             	mov    %rax,%rbx
    9fbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fc0:	48 89 c7             	mov    %rax,%rdi
    9fc3:	e8 c4 0e 00 00       	call   ae8c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    9fc8:	48 89 c1             	mov    %rax,%rcx
    9fcb:	48 8b 03             	mov    (%rbx),%rax
    9fce:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    9fd2:	48 89 01             	mov    %rax,(%rcx)
    9fd5:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    9fd9:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9fdd:	48 89 41 10          	mov    %rax,0x10(%rcx)
    9fe1:	eb 1e                	jmp    a001 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    9fe3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fe7:	48 89 c7             	mov    %rax,%rdi
    9fea:	e8 e1 0e 00 00       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9fef:	48 89 c2             	mov    %rax,%rdx
    9ff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ff6:	48 89 d6             	mov    %rdx,%rsi
    9ff9:	48 89 c7             	mov    %rax,%rdi
    9ffc:	e8 dd 0e 00 00       	call   aede <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    a001:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    a005:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a009:	c9                   	leave
    a00a:	c3                   	ret
    a00b:	90                   	nop

000000000000a00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a00c:	55                   	push   %rbp
    a00d:	48 89 e5             	mov    %rsp,%rbp
    a010:	48 83 ec 10          	sub    $0x10,%rsp
    a014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a01c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a024:	48 8b 00             	mov    (%rax),%rax
    a027:	48 29 c2             	sub    %rax,%rdx
    a02a:	48 c1 fa 02          	sar    $0x2,%rdx
    a02e:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    a035:	db b6 6d 
    a038:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    a03c:	48 89 c2             	mov    %rax,%rdx
    a03f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a043:	48 8b 08             	mov    (%rax),%rcx
    a046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04a:	48 89 ce             	mov    %rcx,%rsi
    a04d:	48 89 c7             	mov    %rax,%rdi
    a050:	e8 e3 0e 00 00       	call   af38 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    a055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a059:	48 89 c7             	mov    %rax,%rdi
    a05c:	e8 eb f5 ff ff       	call   964c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    a061:	90                   	nop
    a062:	c9                   	leave
    a063:	c3                   	ret

000000000000a064 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a064:	55                   	push   %rbp
    a065:	48 89 e5             	mov    %rsp,%rbp
    a068:	48 83 ec 10          	sub    $0x10,%rsp
    a06c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a074:	48 89 c7             	mov    %rax,%rdi
    a077:	e8 f2 0e 00 00       	call   af6e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    a07c:	90                   	nop
    a07d:	c9                   	leave
    a07e:	c3                   	ret
    a07f:	90                   	nop

000000000000a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a080:	55                   	push   %rbp
    a081:	48 89 e5             	mov    %rsp,%rbp
    a084:	48 83 ec 10          	sub    $0x10,%rsp
    a088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a08c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a090:	48 89 c7             	mov    %rax,%rdi
    a093:	e8 e2 0e 00 00       	call   af7a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    a098:	90                   	nop
    a099:	c9                   	leave
    a09a:	c3                   	ret
    a09b:	90                   	nop

000000000000a09c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a09c:	55                   	push   %rbp
    a09d:	48 89 e5             	mov    %rsp,%rbp
    a0a0:	53                   	push   %rbx
    a0a1:	48 83 ec 28          	sub    $0x28,%rsp
    a0a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0ad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a0b1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a0b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a0b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a0bd:	48 89 d6             	mov    %rdx,%rsi
    a0c0:	48 89 c7             	mov    %rax,%rdi
    a0c3:	e8 bd 0e 00 00       	call   af85 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    a0c8:	48 89 c1             	mov    %rax,%rcx
    a0cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a0cf:	48 89 c2             	mov    %rax,%rdx
    a0d2:	48 89 ce             	mov    %rcx,%rsi
    a0d5:	48 89 df             	mov    %rbx,%rdi
    a0d8:	e8 09 0f 00 00       	call   afe6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    a0dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a0e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0e5:	48 89 d6             	mov    %rdx,%rsi
    a0e8:	48 89 c7             	mov    %rax,%rdi
    a0eb:	e8 54 0f 00 00       	call   b044 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    a0f0:	eb 1a                	jmp    a10c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    a0f2:	48 89 c3             	mov    %rax,%rbx
    a0f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0f9:	48 89 c7             	mov    %rax,%rdi
    a0fc:	e8 79 00 00 00       	call   a17a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    a101:	48 89 d8             	mov    %rbx,%rax
    a104:	48 89 c7             	mov    %rax,%rdi
    a107:	e8 f4 a7 ff ff       	call   4900 <_Unwind_Resume@plt>
    a10c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a110:	c9                   	leave
    a111:	c3                   	ret

000000000000a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a112:	55                   	push   %rbp
    a113:	48 89 e5             	mov    %rsp,%rbp
    a116:	48 83 ec 10          	sub    $0x10,%rsp
    a11a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a11e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a122:	48 89 c7             	mov    %rax,%rdi
    a125:	e8 5a 0f 00 00       	call   b084 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a12a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a12d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a131:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a139:	48 8b 00             	mov    (%rax),%rax
    a13c:	48 89 ce             	mov    %rcx,%rsi
    a13f:	48 89 c7             	mov    %rax,%rdi
    a142:	e8 4b 0f 00 00       	call   b092 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    a147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a14b:	48 89 c7             	mov    %rax,%rdi
    a14e:	e8 27 00 00 00       	call   a17a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    a153:	90                   	nop
    a154:	c9                   	leave
    a155:	c3                   	ret

000000000000a156 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a156:	55                   	push   %rbp
    a157:	48 89 e5             	mov    %rsp,%rbp
    a15a:	48 83 ec 10          	sub    $0x10,%rsp
    a15e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a166:	48 8b 10             	mov    (%rax),%rdx
    a169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a16d:	48 89 d6             	mov    %rdx,%rsi
    a170:	48 89 c7             	mov    %rax,%rdi
    a173:	e8 44 0f 00 00       	call   b0bc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    a178:	c9                   	leave
    a179:	c3                   	ret

000000000000a17a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a17a:	55                   	push   %rbp
    a17b:	48 89 e5             	mov    %rsp,%rbp
    a17e:	48 83 ec 10          	sub    $0x10,%rsp
    a182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a192:	48 8b 00             	mov    (%rax),%rax
    a195:	48 29 c2             	sub    %rax,%rdx
    a198:	48 89 d0             	mov    %rdx,%rax
    a19b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    a19f:	48 89 c2             	mov    %rax,%rdx
    a1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a6:	48 8b 08             	mov    (%rax),%rcx
    a1a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ad:	48 89 ce             	mov    %rcx,%rsi
    a1b0:	48 89 c7             	mov    %rax,%rdi
    a1b3:	e8 3c 0f 00 00       	call   b0f4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    a1b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1bc:	48 89 c7             	mov    %rax,%rdi
    a1bf:	e8 a4 f4 ff ff       	call   9668 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    a1c4:	90                   	nop
    a1c5:	c9                   	leave
    a1c6:	c3                   	ret
    a1c7:	90                   	nop

000000000000a1c8 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a1c8:	55                   	push   %rbp
    a1c9:	48 89 e5             	mov    %rsp,%rbp
    a1cc:	48 83 ec 10          	sub    $0x10,%rsp
    a1d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1d8:	48 89 c7             	mov    %rax,%rdi
    a1db:	e8 4a 0f 00 00       	call   b12a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    a1e0:	90                   	nop
    a1e1:	c9                   	leave
    a1e2:	c3                   	ret
    a1e3:	90                   	nop

000000000000a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a1e4:	55                   	push   %rbp
    a1e5:	48 89 e5             	mov    %rsp,%rbp
    a1e8:	48 83 ec 10          	sub    $0x10,%rsp
    a1ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f4:	48 89 c7             	mov    %rax,%rdi
    a1f7:	e8 3a 0f 00 00       	call   b136 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    a1fc:	90                   	nop
    a1fd:	c9                   	leave
    a1fe:	c3                   	ret
    a1ff:	90                   	nop

000000000000a200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a200:	55                   	push   %rbp
    a201:	48 89 e5             	mov    %rsp,%rbp
    a204:	53                   	push   %rbx
    a205:	48 83 ec 28          	sub    $0x28,%rsp
    a209:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a20d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a211:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a215:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a219:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a21d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a221:	48 89 d6             	mov    %rdx,%rsi
    a224:	48 89 c7             	mov    %rax,%rdi
    a227:	e8 15 0f 00 00       	call   b141 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    a22c:	48 89 c1             	mov    %rax,%rcx
    a22f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a233:	48 89 c2             	mov    %rax,%rdx
    a236:	48 89 ce             	mov    %rcx,%rsi
    a239:	48 89 df             	mov    %rbx,%rdi
    a23c:	e8 61 0f 00 00       	call   b1a2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    a241:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a245:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a249:	48 89 d6             	mov    %rdx,%rsi
    a24c:	48 89 c7             	mov    %rax,%rdi
    a24f:	e8 ac 0f 00 00       	call   b200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    a254:	eb 1a                	jmp    a270 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    a256:	48 89 c3             	mov    %rax,%rbx
    a259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a25d:	48 89 c7             	mov    %rax,%rdi
    a260:	e8 79 00 00 00       	call   a2de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    a265:	48 89 d8             	mov    %rbx,%rax
    a268:	48 89 c7             	mov    %rax,%rdi
    a26b:	e8 90 a6 ff ff       	call   4900 <_Unwind_Resume@plt>
    a270:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a274:	c9                   	leave
    a275:	c3                   	ret

000000000000a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a276:	55                   	push   %rbp
    a277:	48 89 e5             	mov    %rsp,%rbp
    a27a:	48 83 ec 10          	sub    $0x10,%rsp
    a27e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a286:	48 89 c7             	mov    %rax,%rdi
    a289:	e8 b2 0f 00 00       	call   b240 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a28e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a295:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a29d:	48 8b 00             	mov    (%rax),%rax
    a2a0:	48 89 ce             	mov    %rcx,%rsi
    a2a3:	48 89 c7             	mov    %rax,%rdi
    a2a6:	e8 a3 0f 00 00       	call   b24e <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    a2ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2af:	48 89 c7             	mov    %rax,%rdi
    a2b2:	e8 27 00 00 00       	call   a2de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    a2b7:	90                   	nop
    a2b8:	c9                   	leave
    a2b9:	c3                   	ret

000000000000a2ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a2ba:	55                   	push   %rbp
    a2bb:	48 89 e5             	mov    %rsp,%rbp
    a2be:	48 83 ec 10          	sub    $0x10,%rsp
    a2c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a2c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ca:	48 8b 10             	mov    (%rax),%rdx
    a2cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d1:	48 89 d6             	mov    %rdx,%rsi
    a2d4:	48 89 c7             	mov    %rax,%rdi
    a2d7:	e8 9c 0f 00 00       	call   b278 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    a2dc:	c9                   	leave
    a2dd:	c3                   	ret

000000000000a2de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a2de:	55                   	push   %rbp
    a2df:	48 89 e5             	mov    %rsp,%rbp
    a2e2:	48 83 ec 10          	sub    $0x10,%rsp
    a2e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a2ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ee:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a2f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f6:	48 8b 00             	mov    (%rax),%rax
    a2f9:	48 29 c2             	sub    %rax,%rdx
    a2fc:	48 89 d0             	mov    %rdx,%rax
    a2ff:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    a303:	48 89 c2             	mov    %rax,%rdx
    a306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a30a:	48 8b 08             	mov    (%rax),%rcx
    a30d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a311:	48 89 ce             	mov    %rcx,%rsi
    a314:	48 89 c7             	mov    %rax,%rdi
    a317:	e8 94 0f 00 00       	call   b2b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    a31c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a320:	48 89 c7             	mov    %rax,%rdi
    a323:	e8 5c f3 ff ff       	call   9684 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    a328:	90                   	nop
    a329:	c9                   	leave
    a32a:	c3                   	ret
    a32b:	90                   	nop

000000000000a32c <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a32c:	55                   	push   %rbp
    a32d:	48 89 e5             	mov    %rsp,%rbp
    a330:	48 83 ec 10          	sub    $0x10,%rsp
    a334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33c:	48 89 c7             	mov    %rax,%rdi
    a33f:	e8 a2 0f 00 00       	call   b2e6 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    a344:	90                   	nop
    a345:	c9                   	leave
    a346:	c3                   	ret
    a347:	90                   	nop

000000000000a348 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a348:	55                   	push   %rbp
    a349:	48 89 e5             	mov    %rsp,%rbp
    a34c:	48 83 ec 10          	sub    $0x10,%rsp
    a350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a358:	48 89 c7             	mov    %rax,%rdi
    a35b:	e8 92 0f 00 00       	call   b2f2 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    a360:	90                   	nop
    a361:	c9                   	leave
    a362:	c3                   	ret
    a363:	90                   	nop

000000000000a364 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a364:	55                   	push   %rbp
    a365:	48 89 e5             	mov    %rsp,%rbp
    a368:	53                   	push   %rbx
    a369:	48 83 ec 28          	sub    $0x28,%rsp
    a36d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a371:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a375:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a379:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a37d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a381:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a385:	48 89 d6             	mov    %rdx,%rsi
    a388:	48 89 c7             	mov    %rax,%rdi
    a38b:	e8 6d 0f 00 00       	call   b2fd <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    a390:	48 89 c1             	mov    %rax,%rcx
    a393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a397:	48 89 c2             	mov    %rax,%rdx
    a39a:	48 89 ce             	mov    %rcx,%rsi
    a39d:	48 89 df             	mov    %rbx,%rdi
    a3a0:	e8 b9 0f 00 00       	call   b35e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    a3a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a3a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3ad:	48 89 d6             	mov    %rdx,%rsi
    a3b0:	48 89 c7             	mov    %rax,%rdi
    a3b3:	e8 04 10 00 00       	call   b3bc <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    a3b8:	eb 1a                	jmp    a3d4 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    a3ba:	48 89 c3             	mov    %rax,%rbx
    a3bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3c1:	48 89 c7             	mov    %rax,%rdi
    a3c4:	e8 79 00 00 00       	call   a442 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    a3c9:	48 89 d8             	mov    %rbx,%rax
    a3cc:	48 89 c7             	mov    %rax,%rdi
    a3cf:	e8 2c a5 ff ff       	call   4900 <_Unwind_Resume@plt>
    a3d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a3d8:	c9                   	leave
    a3d9:	c3                   	ret

000000000000a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a3da:	55                   	push   %rbp
    a3db:	48 89 e5             	mov    %rsp,%rbp
    a3de:	48 83 ec 10          	sub    $0x10,%rsp
    a3e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ea:	48 89 c7             	mov    %rax,%rdi
    a3ed:	e8 0a 10 00 00       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a3f2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a3f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a401:	48 8b 00             	mov    (%rax),%rax
    a404:	48 89 ce             	mov    %rcx,%rsi
    a407:	48 89 c7             	mov    %rax,%rdi
    a40a:	e8 fb 0f 00 00       	call   b40a <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    a40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a413:	48 89 c7             	mov    %rax,%rdi
    a416:	e8 27 00 00 00       	call   a442 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    a41b:	90                   	nop
    a41c:	c9                   	leave
    a41d:	c3                   	ret

000000000000a41e <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a41e:	55                   	push   %rbp
    a41f:	48 89 e5             	mov    %rsp,%rbp
    a422:	48 83 ec 10          	sub    $0x10,%rsp
    a426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42e:	48 8b 10             	mov    (%rax),%rdx
    a431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a435:	48 89 d6             	mov    %rdx,%rsi
    a438:	48 89 c7             	mov    %rax,%rdi
    a43b:	e8 f4 0f 00 00       	call   b434 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    a440:	c9                   	leave
    a441:	c3                   	ret

000000000000a442 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a442:	55                   	push   %rbp
    a443:	48 89 e5             	mov    %rsp,%rbp
    a446:	48 83 ec 10          	sub    $0x10,%rsp
    a44a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a44e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a452:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a45a:	48 8b 00             	mov    (%rax),%rax
    a45d:	48 29 c2             	sub    %rax,%rdx
    a460:	48 89 d0             	mov    %rdx,%rax
    a463:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    a467:	48 89 c2             	mov    %rax,%rdx
    a46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a46e:	48 8b 08             	mov    (%rax),%rcx
    a471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a475:	48 89 ce             	mov    %rcx,%rsi
    a478:	48 89 c7             	mov    %rax,%rdi
    a47b:	e8 ec 0f 00 00       	call   b46c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    a480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a484:	48 89 c7             	mov    %rax,%rdi
    a487:	e8 14 f2 ff ff       	call   96a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    a48c:	90                   	nop
    a48d:	c9                   	leave
    a48e:	c3                   	ret
    a48f:	90                   	nop

000000000000a490 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a490:	55                   	push   %rbp
    a491:	48 89 e5             	mov    %rsp,%rbp
    a494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a498:	90                   	nop
    a499:	5d                   	pop    %rbp
    a49a:	c3                   	ret
    a49b:	90                   	nop

000000000000a49c <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a49c:	55                   	push   %rbp
    a49d:	48 89 e5             	mov    %rsp,%rbp
    a4a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4a4:	90                   	nop
    a4a5:	5d                   	pop    %rbp
    a4a6:	c3                   	ret

000000000000a4a7 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a4a7:	55                   	push   %rbp
    a4a8:	48 89 e5             	mov    %rsp,%rbp
    a4ab:	53                   	push   %rbx
    a4ac:	48 83 ec 28          	sub    $0x28,%rsp
    a4b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a4b4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a4b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a4bc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4c0:	48 89 d6             	mov    %rdx,%rsi
    a4c3:	48 89 c7             	mov    %rax,%rdi
    a4c6:	e8 25 01 00 00       	call   a5f0 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    a4cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4cf:	48 89 c7             	mov    %rax,%rdi
    a4d2:	e8 ca 0f 00 00       	call   b4a1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a4d7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a4db:	0f 92 c3             	setb   %bl
    a4de:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4e2:	48 89 c7             	mov    %rax,%rdi
    a4e5:	e8 ee f1 ff ff       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    a4ea:	84 db                	test   %bl,%bl
    a4ec:	74 0f                	je     a4fd <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a4ee:	48 8d 05 93 4e 01 00 	lea    0x14e93(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a4f5:	48 89 c7             	mov    %rax,%rdi
    a4f8:	e8 f3 9c ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a4fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a501:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a505:	c9                   	leave
    a506:	c3                   	ret
    a507:	90                   	nop

000000000000a508 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a508:	55                   	push   %rbp
    a509:	48 89 e5             	mov    %rsp,%rbp
    a50c:	53                   	push   %rbx
    a50d:	48 83 ec 28          	sub    $0x28,%rsp
    a511:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a515:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a519:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a51d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a521:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a525:	48 89 d6             	mov    %rdx,%rsi
    a528:	48 89 c7             	mov    %rax,%rdi
    a52b:	e8 b4 0f 00 00       	call   b4e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a530:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a538:	48 89 d6             	mov    %rdx,%rsi
    a53b:	48 89 c7             	mov    %rax,%rdi
    a53e:	e8 d3 0f 00 00       	call   b516 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    a543:	eb 1a                	jmp    a55f <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    a545:	48 89 c3             	mov    %rax,%rbx
    a548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a54c:	48 89 c7             	mov    %rax,%rdi
    a54f:	e8 6c f0 ff ff       	call   95c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    a554:	48 89 d8             	mov    %rbx,%rax
    a557:	48 89 c7             	mov    %rax,%rdi
    a55a:	e8 a1 a3 ff ff       	call   4900 <_Unwind_Resume@plt>
    a55f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a563:	c9                   	leave
    a564:	c3                   	ret
    a565:	90                   	nop

000000000000a566 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a566:	55                   	push   %rbp
    a567:	48 89 e5             	mov    %rsp,%rbp
    a56a:	48 83 ec 10          	sub    $0x10,%rsp
    a56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a57a:	48 89 c7             	mov    %rax,%rdi
    a57d:	e8 24 00 00 00       	call   a5a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a582:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a589:	48 8b 00             	mov    (%rax),%rax
    a58c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a590:	48 89 ce             	mov    %rcx,%rsi
    a593:	48 89 c7             	mov    %rax,%rdi
    a596:	e8 dc 0f 00 00       	call   b577 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a59b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a59f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a5a3:	90                   	nop
    a5a4:	c9                   	leave
    a5a5:	c3                   	ret

000000000000a5a6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a5a6:	55                   	push   %rbp
    a5a7:	48 89 e5             	mov    %rsp,%rbp
    a5aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b2:	5d                   	pop    %rbp
    a5b3:	c3                   	ret

000000000000a5b4 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a5b4:	55                   	push   %rbp
    a5b5:	48 89 e5             	mov    %rsp,%rbp
    a5b8:	48 83 ec 20          	sub    $0x20,%rsp
    a5bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a5c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d0:	48 89 d6             	mov    %rdx,%rsi
    a5d3:	48 89 c7             	mov    %rax,%rdi
    a5d6:	e8 c5 0f 00 00       	call   b5a0 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    a5db:	90                   	nop
    a5dc:	c9                   	leave
    a5dd:	c3                   	ret

000000000000a5de <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a5de:	55                   	push   %rbp
    a5df:	48 89 e5             	mov    %rsp,%rbp
    a5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a5ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a5ee:	5d                   	pop    %rbp
    a5ef:	c3                   	ret

000000000000a5f0 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a5f0:	55                   	push   %rbp
    a5f1:	48 89 e5             	mov    %rsp,%rbp
    a5f4:	48 83 ec 10          	sub    $0x10,%rsp
    a5f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a600:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a608:	48 89 d6             	mov    %rdx,%rsi
    a60b:	48 89 c7             	mov    %rax,%rdi
    a60e:	e8 b3 0f 00 00       	call   b5c6 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    a613:	90                   	nop
    a614:	c9                   	leave
    a615:	c3                   	ret

000000000000a616 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a616:	55                   	push   %rbp
    a617:	48 89 e5             	mov    %rsp,%rbp
    a61a:	48 83 ec 20          	sub    $0x20,%rsp
    a61e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a622:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a626:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a62a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a62f:	74 17                	je     a648 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a635:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a639:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a63d:	48 89 ce             	mov    %rcx,%rsi
    a640:	48 89 c7             	mov    %rax,%rdi
    a643:	e8 8d 0f 00 00       	call   b5d5 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    a648:	90                   	nop
    a649:	c9                   	leave
    a64a:	c3                   	ret
    a64b:	90                   	nop

000000000000a64c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a64c:	55                   	push   %rbp
    a64d:	48 89 e5             	mov    %rsp,%rbp
    a650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a654:	90                   	nop
    a655:	5d                   	pop    %rbp
    a656:	c3                   	ret
    a657:	90                   	nop

000000000000a658 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a658:	55                   	push   %rbp
    a659:	48 89 e5             	mov    %rsp,%rbp
    a65c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a660:	90                   	nop
    a661:	5d                   	pop    %rbp
    a662:	c3                   	ret

000000000000a663 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a663:	55                   	push   %rbp
    a664:	48 89 e5             	mov    %rsp,%rbp
    a667:	53                   	push   %rbx
    a668:	48 83 ec 28          	sub    $0x28,%rsp
    a66c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a670:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a674:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a678:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a67c:	48 89 d6             	mov    %rdx,%rsi
    a67f:	48 89 c7             	mov    %rax,%rdi
    a682:	e8 25 01 00 00       	call   a7ac <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    a687:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a68b:	48 89 c7             	mov    %rax,%rdi
    a68e:	e8 70 0f 00 00       	call   b603 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a693:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a697:	0f 92 c3             	setb   %bl
    a69a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a69e:	48 89 c7             	mov    %rax,%rdi
    a6a1:	e8 a0 f1 ff ff       	call   9846 <_ZNSaI21VkExtensionPropertiesED1Ev>
    a6a6:	84 db                	test   %bl,%bl
    a6a8:	74 0f                	je     a6b9 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a6aa:	48 8d 05 d7 4c 01 00 	lea    0x14cd7(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a6b1:	48 89 c7             	mov    %rax,%rdi
    a6b4:	e8 37 9b ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a6b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a6bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a6c1:	c9                   	leave
    a6c2:	c3                   	ret
    a6c3:	90                   	nop

000000000000a6c4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a6c4:	55                   	push   %rbp
    a6c5:	48 89 e5             	mov    %rsp,%rbp
    a6c8:	53                   	push   %rbx
    a6c9:	48 83 ec 28          	sub    $0x28,%rsp
    a6cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a6d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a6d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a6d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a6e1:	48 89 d6             	mov    %rdx,%rsi
    a6e4:	48 89 c7             	mov    %rax,%rdi
    a6e7:	e8 5a 0f 00 00       	call   b646 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a6ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a6f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6f4:	48 89 d6             	mov    %rdx,%rsi
    a6f7:	48 89 c7             	mov    %rax,%rdi
    a6fa:	e8 79 0f 00 00       	call   b678 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    a6ff:	eb 1a                	jmp    a71b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    a701:	48 89 c3             	mov    %rax,%rbx
    a704:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a708:	48 89 c7             	mov    %rax,%rdi
    a70b:	e8 cc ee ff ff       	call   95dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    a710:	48 89 d8             	mov    %rbx,%rax
    a713:	48 89 c7             	mov    %rax,%rdi
    a716:	e8 e5 a1 ff ff       	call   4900 <_Unwind_Resume@plt>
    a71b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a71f:	c9                   	leave
    a720:	c3                   	ret
    a721:	90                   	nop

000000000000a722 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a722:	55                   	push   %rbp
    a723:	48 89 e5             	mov    %rsp,%rbp
    a726:	48 83 ec 10          	sub    $0x10,%rsp
    a72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a72e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a736:	48 89 c7             	mov    %rax,%rdi
    a739:	e8 24 00 00 00       	call   a762 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a73e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a745:	48 8b 00             	mov    (%rax),%rax
    a748:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a74c:	48 89 ce             	mov    %rcx,%rsi
    a74f:	48 89 c7             	mov    %rax,%rdi
    a752:	e8 82 0f 00 00       	call   b6d9 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a757:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a75b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a75f:	90                   	nop
    a760:	c9                   	leave
    a761:	c3                   	ret

000000000000a762 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a762:	55                   	push   %rbp
    a763:	48 89 e5             	mov    %rsp,%rbp
    a766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a76a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a76e:	5d                   	pop    %rbp
    a76f:	c3                   	ret

000000000000a770 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a770:	55                   	push   %rbp
    a771:	48 89 e5             	mov    %rsp,%rbp
    a774:	48 83 ec 20          	sub    $0x20,%rsp
    a778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a77c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a780:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a784:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a78c:	48 89 d6             	mov    %rdx,%rsi
    a78f:	48 89 c7             	mov    %rax,%rdi
    a792:	e8 6b 0f 00 00       	call   b702 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    a797:	90                   	nop
    a798:	c9                   	leave
    a799:	c3                   	ret

000000000000a79a <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a79a:	55                   	push   %rbp
    a79b:	48 89 e5             	mov    %rsp,%rbp
    a79e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a7a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7aa:	5d                   	pop    %rbp
    a7ab:	c3                   	ret

000000000000a7ac <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a7ac:	55                   	push   %rbp
    a7ad:	48 89 e5             	mov    %rsp,%rbp
    a7b0:	48 83 ec 10          	sub    $0x10,%rsp
    a7b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a7bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c4:	48 89 d6             	mov    %rdx,%rsi
    a7c7:	48 89 c7             	mov    %rax,%rdi
    a7ca:	e8 59 0f 00 00       	call   b728 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    a7cf:	90                   	nop
    a7d0:	c9                   	leave
    a7d1:	c3                   	ret

000000000000a7d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a7d2:	55                   	push   %rbp
    a7d3:	48 89 e5             	mov    %rsp,%rbp
    a7d6:	48 83 ec 20          	sub    $0x20,%rsp
    a7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a7e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a7eb:	74 17                	je     a804 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a7ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a7f9:	48 89 ce             	mov    %rcx,%rsi
    a7fc:	48 89 c7             	mov    %rax,%rdi
    a7ff:	e8 33 0f 00 00       	call   b737 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    a804:	90                   	nop
    a805:	c9                   	leave
    a806:	c3                   	ret
    a807:	90                   	nop

000000000000a808 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a808:	55                   	push   %rbp
    a809:	48 89 e5             	mov    %rsp,%rbp
    a80c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a810:	90                   	nop
    a811:	5d                   	pop    %rbp
    a812:	c3                   	ret
    a813:	90                   	nop

000000000000a814 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a814:	55                   	push   %rbp
    a815:	48 89 e5             	mov    %rsp,%rbp
    a818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a81c:	90                   	nop
    a81d:	5d                   	pop    %rbp
    a81e:	c3                   	ret

000000000000a81f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a81f:	55                   	push   %rbp
    a820:	48 89 e5             	mov    %rsp,%rbp
    a823:	53                   	push   %rbx
    a824:	48 83 ec 28          	sub    $0x28,%rsp
    a828:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a82c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a830:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a834:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a838:	48 89 d6             	mov    %rdx,%rsi
    a83b:	48 89 c7             	mov    %rax,%rdi
    a83e:	e8 e9 00 00 00       	call   a92c <_ZNSaIPKcEC1ERKS1_>
    a843:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a847:	48 89 c7             	mov    %rax,%rdi
    a84a:	e8 16 0f 00 00       	call   b765 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    a84f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a853:	0f 92 c3             	setb   %bl
    a856:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a85a:	48 89 c7             	mov    %rax,%rdi
    a85d:	e8 52 f1 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
    a862:	84 db                	test   %bl,%bl
    a864:	74 0f                	je     a875 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    a866:	48 8d 05 1b 4b 01 00 	lea    0x14b1b(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a86d:	48 89 c7             	mov    %rax,%rdi
    a870:	e8 7b 99 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a875:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a879:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a87d:	c9                   	leave
    a87e:	c3                   	ret
    a87f:	90                   	nop

000000000000a880 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a880:	55                   	push   %rbp
    a881:	48 89 e5             	mov    %rsp,%rbp
    a884:	53                   	push   %rbx
    a885:	48 83 ec 28          	sub    $0x28,%rsp
    a889:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a88d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a891:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a899:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a89d:	48 89 d6             	mov    %rdx,%rsi
    a8a0:	48 89 c7             	mov    %rax,%rdi
    a8a3:	e8 00 0f 00 00       	call   b7a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    a8a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a8ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8b0:	48 89 d6             	mov    %rdx,%rsi
    a8b3:	48 89 c7             	mov    %rax,%rdi
    a8b6:	e8 1f 0f 00 00       	call   b7da <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    a8bb:	eb 1a                	jmp    a8d7 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    a8bd:	48 89 c3             	mov    %rax,%rbx
    a8c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8c4:	48 89 c7             	mov    %rax,%rdi
    a8c7:	e8 2c ed ff ff       	call   95f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    a8cc:	48 89 d8             	mov    %rbx,%rax
    a8cf:	48 89 c7             	mov    %rax,%rdi
    a8d2:	e8 29 a0 ff ff       	call   4900 <_Unwind_Resume@plt>
    a8d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a8db:	c9                   	leave
    a8dc:	c3                   	ret
    a8dd:	90                   	nop

000000000000a8de <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a8de:	55                   	push   %rbp
    a8df:	48 89 e5             	mov    %rsp,%rbp
    a8e2:	48 83 ec 10          	sub    $0x10,%rsp
    a8e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f2:	48 89 c7             	mov    %rax,%rdi
    a8f5:	e8 24 00 00 00       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    a8fa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a8fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a901:	48 8b 00             	mov    (%rax),%rax
    a904:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a908:	48 89 ce             	mov    %rcx,%rsi
    a90b:	48 89 c7             	mov    %rax,%rdi
    a90e:	e8 1d 0f 00 00       	call   b830 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a913:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a917:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a91b:	90                   	nop
    a91c:	c9                   	leave
    a91d:	c3                   	ret

000000000000a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a91e:	55                   	push   %rbp
    a91f:	48 89 e5             	mov    %rsp,%rbp
    a922:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a92a:	5d                   	pop    %rbp
    a92b:	c3                   	ret

000000000000a92c <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a92c:	55                   	push   %rbp
    a92d:	48 89 e5             	mov    %rsp,%rbp
    a930:	48 83 ec 10          	sub    $0x10,%rsp
    a934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a938:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a93c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a944:	48 89 d6             	mov    %rdx,%rsi
    a947:	48 89 c7             	mov    %rax,%rdi
    a94a:	e8 0b 0f 00 00       	call   b85a <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    a94f:	90                   	nop
    a950:	c9                   	leave
    a951:	c3                   	ret

000000000000a952 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    a952:	55                   	push   %rbp
    a953:	48 89 e5             	mov    %rsp,%rbp
    a956:	48 83 ec 20          	sub    $0x20,%rsp
    a95a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a95e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a962:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a966:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a96b:	74 17                	je     a984 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a971:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a975:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a979:	48 89 ce             	mov    %rcx,%rsi
    a97c:	48 89 c7             	mov    %rax,%rdi
    a97f:	e8 e5 0e 00 00       	call   b869 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    a984:	90                   	nop
    a985:	c9                   	leave
    a986:	c3                   	ret
    a987:	90                   	nop

000000000000a988 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a988:	55                   	push   %rbp
    a989:	48 89 e5             	mov    %rsp,%rbp
    a98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a990:	90                   	nop
    a991:	5d                   	pop    %rbp
    a992:	c3                   	ret
    a993:	90                   	nop

000000000000a994 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a994:	55                   	push   %rbp
    a995:	48 89 e5             	mov    %rsp,%rbp
    a998:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a99c:	90                   	nop
    a99d:	5d                   	pop    %rbp
    a99e:	c3                   	ret

000000000000a99f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a99f:	55                   	push   %rbp
    a9a0:	48 89 e5             	mov    %rsp,%rbp
    a9a3:	53                   	push   %rbx
    a9a4:	48 83 ec 28          	sub    $0x28,%rsp
    a9a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a9ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a9b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a9b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9b8:	48 89 d6             	mov    %rdx,%rsi
    a9bb:	48 89 c7             	mov    %rax,%rdi
    a9be:	e8 25 01 00 00       	call   aae8 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    a9c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9c7:	48 89 c7             	mov    %rax,%rdi
    a9ca:	e8 c8 0e 00 00       	call   b897 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    a9cf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a9d3:	0f 92 c3             	setb   %bl
    a9d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9da:	48 89 c7             	mov    %rax,%rdi
    a9dd:	e8 ee f0 ff ff       	call   9ad0 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    a9e2:	84 db                	test   %bl,%bl
    a9e4:	74 0f                	je     a9f5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    a9e6:	48 8d 05 9b 49 01 00 	lea    0x1499b(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a9ed:	48 89 c7             	mov    %rax,%rdi
    a9f0:	e8 fb 97 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a9f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a9f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a9fd:	c9                   	leave
    a9fe:	c3                   	ret
    a9ff:	90                   	nop

000000000000aa00 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    aa00:	55                   	push   %rbp
    aa01:	48 89 e5             	mov    %rsp,%rbp
    aa04:	53                   	push   %rbx
    aa05:	48 83 ec 28          	sub    $0x28,%rsp
    aa09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aa11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    aa15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    aa1d:	48 89 d6             	mov    %rdx,%rsi
    aa20:	48 89 c7             	mov    %rax,%rdi
    aa23:	e8 b2 0e 00 00       	call   b8da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    aa28:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa30:	48 89 d6             	mov    %rdx,%rsi
    aa33:	48 89 c7             	mov    %rax,%rdi
    aa36:	e8 d1 0e 00 00       	call   b90c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    aa3b:	eb 1a                	jmp    aa57 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    aa3d:	48 89 c3             	mov    %rax,%rbx
    aa40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa44:	48 89 c7             	mov    %rax,%rdi
    aa47:	e8 c8 eb ff ff       	call   9614 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    aa4c:	48 89 d8             	mov    %rbx,%rax
    aa4f:	48 89 c7             	mov    %rax,%rdi
    aa52:	e8 a9 9e ff ff       	call   4900 <_Unwind_Resume@plt>
    aa57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa5b:	c9                   	leave
    aa5c:	c3                   	ret
    aa5d:	90                   	nop

000000000000aa5e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    aa5e:	55                   	push   %rbp
    aa5f:	48 89 e5             	mov    %rsp,%rbp
    aa62:	48 83 ec 10          	sub    $0x10,%rsp
    aa66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    aa6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa72:	48 89 c7             	mov    %rax,%rdi
    aa75:	e8 24 00 00 00       	call   aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    aa7a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    aa7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa81:	48 8b 00             	mov    (%rax),%rax
    aa84:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aa88:	48 89 ce             	mov    %rcx,%rsi
    aa8b:	48 89 c7             	mov    %rax,%rdi
    aa8e:	e8 cf 0e 00 00       	call   b962 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    aa93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aa97:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    aa9b:	90                   	nop
    aa9c:	c9                   	leave
    aa9d:	c3                   	ret

000000000000aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    aa9e:	55                   	push   %rbp
    aa9f:	48 89 e5             	mov    %rsp,%rbp
    aaa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    aaa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaaa:	5d                   	pop    %rbp
    aaab:	c3                   	ret

000000000000aaac <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    aaac:	55                   	push   %rbp
    aaad:	48 89 e5             	mov    %rsp,%rbp
    aab0:	48 83 ec 20          	sub    $0x20,%rsp
    aab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aab8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aabc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    aac0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aac8:	48 89 d6             	mov    %rdx,%rsi
    aacb:	48 89 c7             	mov    %rax,%rdi
    aace:	e8 b8 0e 00 00       	call   b98b <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    aad3:	90                   	nop
    aad4:	c9                   	leave
    aad5:	c3                   	ret

000000000000aad6 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    aad6:	55                   	push   %rbp
    aad7:	48 89 e5             	mov    %rsp,%rbp
    aada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    aae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aae6:	5d                   	pop    %rbp
    aae7:	c3                   	ret

000000000000aae8 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    aae8:	55                   	push   %rbp
    aae9:	48 89 e5             	mov    %rsp,%rbp
    aaec:	48 83 ec 10          	sub    $0x10,%rsp
    aaf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    aaf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aafc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab00:	48 89 d6             	mov    %rdx,%rsi
    ab03:	48 89 c7             	mov    %rax,%rdi
    ab06:	e8 a7 0e 00 00       	call   b9b2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    ab0b:	90                   	nop
    ab0c:	c9                   	leave
    ab0d:	c3                   	ret

000000000000ab0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    ab0e:	55                   	push   %rbp
    ab0f:	48 89 e5             	mov    %rsp,%rbp
    ab12:	48 83 ec 20          	sub    $0x20,%rsp
    ab16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ab22:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab27:	74 17                	je     ab40 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ab29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ab35:	48 89 ce             	mov    %rcx,%rsi
    ab38:	48 89 c7             	mov    %rax,%rdi
    ab3b:	e8 81 0e 00 00       	call   b9c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    ab40:	90                   	nop
    ab41:	c9                   	leave
    ab42:	c3                   	ret
    ab43:	90                   	nop

000000000000ab44 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ab44:	55                   	push   %rbp
    ab45:	48 89 e5             	mov    %rsp,%rbp
    ab48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab4c:	90                   	nop
    ab4d:	5d                   	pop    %rbp
    ab4e:	c3                   	ret
    ab4f:	90                   	nop

000000000000ab50 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ab50:	55                   	push   %rbp
    ab51:	48 89 e5             	mov    %rsp,%rbp
    ab54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab58:	90                   	nop
    ab59:	5d                   	pop    %rbp
    ab5a:	c3                   	ret

000000000000ab5b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ab5b:	55                   	push   %rbp
    ab5c:	48 89 e5             	mov    %rsp,%rbp
    ab5f:	53                   	push   %rbx
    ab60:	48 83 ec 28          	sub    $0x28,%rsp
    ab64:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ab68:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ab6c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ab70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ab74:	48 89 d6             	mov    %rdx,%rsi
    ab77:	48 89 c7             	mov    %rax,%rdi
    ab7a:	e8 25 01 00 00       	call   aca4 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    ab7f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ab83:	48 89 c7             	mov    %rax,%rdi
    ab86:	e8 64 0e 00 00       	call   b9ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    ab8b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ab8f:	0f 92 c3             	setb   %bl
    ab92:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ab96:	48 89 c7             	mov    %rax,%rdi
    ab99:	e8 96 f0 ff ff       	call   9c34 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    ab9e:	84 db                	test   %bl,%bl
    aba0:	74 0f                	je     abb1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    aba2:	48 8d 05 df 47 01 00 	lea    0x147df(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    aba9:	48 89 c7             	mov    %rax,%rdi
    abac:	e8 3f 96 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    abb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    abb5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    abb9:	c9                   	leave
    abba:	c3                   	ret
    abbb:	90                   	nop

000000000000abbc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    abbc:	55                   	push   %rbp
    abbd:	48 89 e5             	mov    %rsp,%rbp
    abc0:	53                   	push   %rbx
    abc1:	48 83 ec 28          	sub    $0x28,%rsp
    abc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    abcd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    abd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abd5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    abd9:	48 89 d6             	mov    %rdx,%rsi
    abdc:	48 89 c7             	mov    %rax,%rdi
    abdf:	e8 4e 0e 00 00       	call   ba32 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    abe4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abec:	48 89 d6             	mov    %rdx,%rsi
    abef:	48 89 c7             	mov    %rax,%rdi
    abf2:	e8 6d 0e 00 00       	call   ba64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    abf7:	eb 1a                	jmp    ac13 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    abf9:	48 89 c3             	mov    %rax,%rbx
    abfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac00:	48 89 c7             	mov    %rax,%rdi
    ac03:	e8 28 ea ff ff       	call   9630 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    ac08:	48 89 d8             	mov    %rbx,%rax
    ac0b:	48 89 c7             	mov    %rax,%rdi
    ac0e:	e8 ed 9c ff ff       	call   4900 <_Unwind_Resume@plt>
    ac13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac17:	c9                   	leave
    ac18:	c3                   	ret
    ac19:	90                   	nop

000000000000ac1a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ac1a:	55                   	push   %rbp
    ac1b:	48 89 e5             	mov    %rsp,%rbp
    ac1e:	48 83 ec 10          	sub    $0x10,%rsp
    ac22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ac2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac2e:	48 89 c7             	mov    %rax,%rdi
    ac31:	e8 24 00 00 00       	call   ac5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ac36:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ac39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac3d:	48 8b 00             	mov    (%rax),%rax
    ac40:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ac44:	48 89 ce             	mov    %rcx,%rsi
    ac47:	48 89 c7             	mov    %rax,%rdi
    ac4a:	e8 75 0e 00 00       	call   bac4 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ac4f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ac53:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ac57:	90                   	nop
    ac58:	c9                   	leave
    ac59:	c3                   	ret

000000000000ac5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ac5a:	55                   	push   %rbp
    ac5b:	48 89 e5             	mov    %rsp,%rbp
    ac5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ac62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac66:	5d                   	pop    %rbp
    ac67:	c3                   	ret

000000000000ac68 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ac68:	55                   	push   %rbp
    ac69:	48 89 e5             	mov    %rsp,%rbp
    ac6c:	48 83 ec 20          	sub    $0x20,%rsp
    ac70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ac7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac84:	48 89 d6             	mov    %rdx,%rsi
    ac87:	48 89 c7             	mov    %rax,%rdi
    ac8a:	e8 5e 0e 00 00       	call   baed <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    ac8f:	90                   	nop
    ac90:	c9                   	leave
    ac91:	c3                   	ret

000000000000ac92 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ac92:	55                   	push   %rbp
    ac93:	48 89 e5             	mov    %rsp,%rbp
    ac96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ac9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aca2:	5d                   	pop    %rbp
    aca3:	c3                   	ret

000000000000aca4 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    aca4:	55                   	push   %rbp
    aca5:	48 89 e5             	mov    %rsp,%rbp
    aca8:	48 83 ec 10          	sub    $0x10,%rsp
    acac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    acb4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    acb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acbc:	48 89 d6             	mov    %rdx,%rsi
    acbf:	48 89 c7             	mov    %rax,%rdi
    acc2:	e8 4d 0e 00 00       	call   bb14 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    acc7:	90                   	nop
    acc8:	c9                   	leave
    acc9:	c3                   	ret

000000000000acca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    acca:	55                   	push   %rbp
    accb:	48 89 e5             	mov    %rsp,%rbp
    acce:	48 83 ec 20          	sub    $0x20,%rsp
    acd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acda:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    acde:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ace3:	74 17                	je     acfc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ace5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aced:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    acf1:	48 89 ce             	mov    %rcx,%rsi
    acf4:	48 89 c7             	mov    %rax,%rdi
    acf7:	e8 27 0e 00 00       	call   bb23 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    acfc:	90                   	nop
    acfd:	c9                   	leave
    acfe:	c3                   	ret
    acff:	90                   	nop

000000000000ad00 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ad00:	55                   	push   %rbp
    ad01:	48 89 e5             	mov    %rsp,%rbp
    ad04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad08:	90                   	nop
    ad09:	5d                   	pop    %rbp
    ad0a:	c3                   	ret
    ad0b:	90                   	nop

000000000000ad0c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ad0c:	55                   	push   %rbp
    ad0d:	48 89 e5             	mov    %rsp,%rbp
    ad10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad14:	90                   	nop
    ad15:	5d                   	pop    %rbp
    ad16:	c3                   	ret

000000000000ad17 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ad17:	55                   	push   %rbp
    ad18:	48 89 e5             	mov    %rsp,%rbp
    ad1b:	53                   	push   %rbx
    ad1c:	48 83 ec 28          	sub    $0x28,%rsp
    ad20:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ad24:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ad28:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ad2c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad30:	48 89 d6             	mov    %rdx,%rsi
    ad33:	48 89 c7             	mov    %rax,%rdi
    ad36:	e8 d7 01 00 00       	call   af12 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    ad3b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad3f:	48 89 c7             	mov    %rax,%rdi
    ad42:	e8 0a 0e 00 00       	call   bb51 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    ad47:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ad4b:	0f 92 c3             	setb   %bl
    ad4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad52:	48 89 c7             	mov    %rax,%rdi
    ad55:	e8 76 f0 ff ff       	call   9dd0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    ad5a:	84 db                	test   %bl,%bl
    ad5c:	74 0f                	je     ad6d <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    ad5e:	48 8d 05 23 46 01 00 	lea    0x14623(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    ad65:	48 89 c7             	mov    %rax,%rdi
    ad68:	e8 83 94 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    ad6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ad71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad75:	c9                   	leave
    ad76:	c3                   	ret
    ad77:	90                   	nop

000000000000ad78 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ad78:	55                   	push   %rbp
    ad79:	48 89 e5             	mov    %rsp,%rbp
    ad7c:	53                   	push   %rbx
    ad7d:	48 83 ec 28          	sub    $0x28,%rsp
    ad81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ad89:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ad8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad91:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ad95:	48 89 d6             	mov    %rdx,%rsi
    ad98:	48 89 c7             	mov    %rax,%rdi
    ad9b:	e8 f4 0d 00 00       	call   bb94 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    ada0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ada4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ada8:	48 89 d6             	mov    %rdx,%rsi
    adab:	48 89 c7             	mov    %rax,%rdi
    adae:	e8 13 0e 00 00       	call   bbc6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    adb3:	eb 1a                	jmp    adcf <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    adb5:	48 89 c3             	mov    %rax,%rbx
    adb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adbc:	48 89 c7             	mov    %rax,%rdi
    adbf:	e8 88 e8 ff ff       	call   964c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    adc4:	48 89 d8             	mov    %rbx,%rax
    adc7:	48 89 c7             	mov    %rax,%rdi
    adca:	e8 31 9b ff ff       	call   4900 <_Unwind_Resume@plt>
    adcf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    add3:	c9                   	leave
    add4:	c3                   	ret
    add5:	90                   	nop

000000000000add6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    add6:	55                   	push   %rbp
    add7:	48 89 e5             	mov    %rsp,%rbp
    adda:	48 83 ec 10          	sub    $0x10,%rsp
    adde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ade2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ade6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adea:	48 89 c7             	mov    %rax,%rdi
    aded:	e8 24 00 00 00       	call   ae16 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    adf2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    adf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf9:	48 8b 00             	mov    (%rax),%rax
    adfc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae00:	48 89 ce             	mov    %rcx,%rsi
    ae03:	48 89 c7             	mov    %rax,%rdi
    ae06:	e8 1c 0e 00 00       	call   bc27 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ae0b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae0f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ae13:	90                   	nop
    ae14:	c9                   	leave
    ae15:	c3                   	ret

000000000000ae16 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ae16:	55                   	push   %rbp
    ae17:	48 89 e5             	mov    %rsp,%rbp
    ae1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ae1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae22:	5d                   	pop    %rbp
    ae23:	c3                   	ret

000000000000ae24 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ae24:	55                   	push   %rbp
    ae25:	48 89 e5             	mov    %rsp,%rbp
    ae28:	48 83 ec 20          	sub    $0x20,%rsp
    ae2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ae38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae40:	48 89 d6             	mov    %rdx,%rsi
    ae43:	48 89 c7             	mov    %rax,%rdi
    ae46:	e8 05 0e 00 00       	call   bc50 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    ae4b:	90                   	nop
    ae4c:	c9                   	leave
    ae4d:	c3                   	ret

000000000000ae4e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ae4e:	55                   	push   %rbp
    ae4f:	48 89 e5             	mov    %rsp,%rbp
    ae52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ae5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae5e:	48 8b 10             	mov    (%rax),%rdx
    ae61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae65:	48 89 10             	mov    %rdx,(%rax)
    ae68:	90                   	nop
    ae69:	5d                   	pop    %rbp
    ae6a:	c3                   	ret
    ae6b:	90                   	nop

000000000000ae6c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ae6c:	55                   	push   %rbp
    ae6d:	48 89 e5             	mov    %rsp,%rbp
    ae70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ae74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae78:	5d                   	pop    %rbp
    ae79:	c3                   	ret

000000000000ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    ae7a:	55                   	push   %rbp
    ae7b:	48 89 e5             	mov    %rsp,%rbp
    ae7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    ae82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae86:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    ae8a:	5d                   	pop    %rbp
    ae8b:	c3                   	ret

000000000000ae8c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    ae8c:	55                   	push   %rbp
    ae8d:	48 89 e5             	mov    %rsp,%rbp
    ae90:	48 83 ec 10          	sub    $0x10,%rsp
    ae94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    ae98:	e8 70 a0 ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
    ae9d:	84 c0                	test   %al,%al
    ae9f:	74 1a                	je     aebb <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    aea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea5:	48 89 c7             	mov    %rax,%rdi
    aea8:	e8 cd ff ff ff       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    aead:	83 f0 01             	xor    $0x1,%eax
    aeb0:	84 c0                	test   %al,%al
    aeb2:	74 07                	je     aebb <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    aeb4:	b8 01 00 00 00       	mov    $0x1,%eax
    aeb9:	eb 05                	jmp    aec0 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    aebb:	b8 00 00 00 00       	mov    $0x0,%eax
    aec0:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    aec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec6:	48 89 c7             	mov    %rax,%rdi
    aec9:	e8 a8 0d 00 00       	call   bc76 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    aece:	c9                   	leave
    aecf:	c3                   	ret

000000000000aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    aed0:	55                   	push   %rbp
    aed1:	48 89 e5             	mov    %rsp,%rbp
    aed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    aed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aedc:	5d                   	pop    %rbp
    aedd:	c3                   	ret

000000000000aede <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    aede:	55                   	push   %rbp
    aedf:	48 89 e5             	mov    %rsp,%rbp
    aee2:	53                   	push   %rbx
    aee3:	48 83 ec 18          	sub    $0x18,%rsp
    aee7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aeeb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    aeef:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    aef3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aef7:	48 89 c7             	mov    %rax,%rdi
    aefa:	e8 d1 ff ff ff       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    aeff:	48 89 c6             	mov    %rax,%rsi
    af02:	48 89 df             	mov    %rbx,%rdi
    af05:	e8 7a 0d 00 00       	call   bc84 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    af0a:	90                   	nop
    af0b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    af0f:	c9                   	leave
    af10:	c3                   	ret
    af11:	90                   	nop

000000000000af12 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    af12:	55                   	push   %rbp
    af13:	48 89 e5             	mov    %rsp,%rbp
    af16:	48 83 ec 10          	sub    $0x10,%rsp
    af1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    af22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af2a:	48 89 d6             	mov    %rdx,%rsi
    af2d:	48 89 c7             	mov    %rax,%rdi
    af30:	e8 95 0d 00 00       	call   bcca <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    af35:	90                   	nop
    af36:	c9                   	leave
    af37:	c3                   	ret

000000000000af38 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    af38:	55                   	push   %rbp
    af39:	48 89 e5             	mov    %rsp,%rbp
    af3c:	48 83 ec 20          	sub    $0x20,%rsp
    af40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    af4c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af51:	74 17                	je     af6a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    af53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    af5b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af5f:	48 89 ce             	mov    %rcx,%rsi
    af62:	48 89 c7             	mov    %rax,%rdi
    af65:	e8 6f 0d 00 00       	call   bcd9 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    af6a:	90                   	nop
    af6b:	c9                   	leave
    af6c:	c3                   	ret
    af6d:	90                   	nop

000000000000af6e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    af6e:	55                   	push   %rbp
    af6f:	48 89 e5             	mov    %rsp,%rbp
    af72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af76:	90                   	nop
    af77:	5d                   	pop    %rbp
    af78:	c3                   	ret
    af79:	90                   	nop

000000000000af7a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    af7a:	55                   	push   %rbp
    af7b:	48 89 e5             	mov    %rsp,%rbp
    af7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af82:	90                   	nop
    af83:	5d                   	pop    %rbp
    af84:	c3                   	ret

000000000000af85 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    af85:	55                   	push   %rbp
    af86:	48 89 e5             	mov    %rsp,%rbp
    af89:	53                   	push   %rbx
    af8a:	48 83 ec 28          	sub    $0x28,%rsp
    af8e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    af92:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    af96:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    af9a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    af9e:	48 89 d6             	mov    %rdx,%rsi
    afa1:	48 89 c7             	mov    %rax,%rdi
    afa4:	e8 25 01 00 00       	call   b0ce <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    afa9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    afad:	48 89 c7             	mov    %rax,%rdi
    afb0:	e8 52 0d 00 00       	call   bd07 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    afb5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    afb9:	0f 92 c3             	setb   %bl
    afbc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    afc0:	48 89 c7             	mov    %rax,%rdi
    afc3:	e8 b8 f0 ff ff       	call   a080 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    afc8:	84 db                	test   %bl,%bl
    afca:	74 0f                	je     afdb <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    afcc:	48 8d 05 b5 43 01 00 	lea    0x143b5(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    afd3:	48 89 c7             	mov    %rax,%rdi
    afd6:	e8 15 92 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    afdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    afdf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    afe3:	c9                   	leave
    afe4:	c3                   	ret
    afe5:	90                   	nop

000000000000afe6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    afe6:	55                   	push   %rbp
    afe7:	48 89 e5             	mov    %rsp,%rbp
    afea:	53                   	push   %rbx
    afeb:	48 83 ec 28          	sub    $0x28,%rsp
    afef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aff3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aff7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    affb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b003:	48 89 d6             	mov    %rdx,%rsi
    b006:	48 89 c7             	mov    %rax,%rdi
    b009:	e8 3c 0d 00 00       	call   bd4a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    b00e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b012:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b016:	48 89 d6             	mov    %rdx,%rsi
    b019:	48 89 c7             	mov    %rax,%rdi
    b01c:	e8 5b 0d 00 00       	call   bd7c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    b021:	eb 1a                	jmp    b03d <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    b023:	48 89 c3             	mov    %rax,%rbx
    b026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b02a:	48 89 c7             	mov    %rax,%rdi
    b02d:	e8 36 e6 ff ff       	call   9668 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    b032:	48 89 d8             	mov    %rbx,%rax
    b035:	48 89 c7             	mov    %rax,%rdi
    b038:	e8 c3 98 ff ff       	call   4900 <_Unwind_Resume@plt>
    b03d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b041:	c9                   	leave
    b042:	c3                   	ret
    b043:	90                   	nop

000000000000b044 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b044:	55                   	push   %rbp
    b045:	48 89 e5             	mov    %rsp,%rbp
    b048:	48 83 ec 10          	sub    $0x10,%rsp
    b04c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b050:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b058:	48 89 c7             	mov    %rax,%rdi
    b05b:	e8 24 00 00 00       	call   b084 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b060:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b067:	48 8b 00             	mov    (%rax),%rax
    b06a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b06e:	48 89 ce             	mov    %rcx,%rsi
    b071:	48 89 c7             	mov    %rax,%rdi
    b074:	e8 59 0d 00 00       	call   bdd2 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b079:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b07d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b081:	90                   	nop
    b082:	c9                   	leave
    b083:	c3                   	ret

000000000000b084 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b084:	55                   	push   %rbp
    b085:	48 89 e5             	mov    %rsp,%rbp
    b088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b08c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b090:	5d                   	pop    %rbp
    b091:	c3                   	ret

000000000000b092 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b092:	55                   	push   %rbp
    b093:	48 89 e5             	mov    %rsp,%rbp
    b096:	48 83 ec 20          	sub    $0x20,%rsp
    b09a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b09e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b0a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0ae:	48 89 d6             	mov    %rdx,%rsi
    b0b1:	48 89 c7             	mov    %rax,%rdi
    b0b4:	e8 42 0d 00 00       	call   bdfb <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    b0b9:	90                   	nop
    b0ba:	c9                   	leave
    b0bb:	c3                   	ret

000000000000b0bc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b0bc:	55                   	push   %rbp
    b0bd:	48 89 e5             	mov    %rsp,%rbp
    b0c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b0c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b0cc:	5d                   	pop    %rbp
    b0cd:	c3                   	ret

000000000000b0ce <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b0ce:	55                   	push   %rbp
    b0cf:	48 89 e5             	mov    %rsp,%rbp
    b0d2:	48 83 ec 10          	sub    $0x10,%rsp
    b0d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b0de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e6:	48 89 d6             	mov    %rdx,%rsi
    b0e9:	48 89 c7             	mov    %rax,%rdi
    b0ec:	e8 31 0d 00 00       	call   be22 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    b0f1:	90                   	nop
    b0f2:	c9                   	leave
    b0f3:	c3                   	ret

000000000000b0f4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b0f4:	55                   	push   %rbp
    b0f5:	48 89 e5             	mov    %rsp,%rbp
    b0f8:	48 83 ec 20          	sub    $0x20,%rsp
    b0fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b104:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b108:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b10d:	74 17                	je     b126 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b113:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b117:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b11b:	48 89 ce             	mov    %rcx,%rsi
    b11e:	48 89 c7             	mov    %rax,%rdi
    b121:	e8 0b 0d 00 00       	call   be31 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    b126:	90                   	nop
    b127:	c9                   	leave
    b128:	c3                   	ret
    b129:	90                   	nop

000000000000b12a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b12a:	55                   	push   %rbp
    b12b:	48 89 e5             	mov    %rsp,%rbp
    b12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b132:	90                   	nop
    b133:	5d                   	pop    %rbp
    b134:	c3                   	ret
    b135:	90                   	nop

000000000000b136 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b136:	55                   	push   %rbp
    b137:	48 89 e5             	mov    %rsp,%rbp
    b13a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b13e:	90                   	nop
    b13f:	5d                   	pop    %rbp
    b140:	c3                   	ret

000000000000b141 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b141:	55                   	push   %rbp
    b142:	48 89 e5             	mov    %rsp,%rbp
    b145:	53                   	push   %rbx
    b146:	48 83 ec 28          	sub    $0x28,%rsp
    b14a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b14e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b152:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b156:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b15a:	48 89 d6             	mov    %rdx,%rsi
    b15d:	48 89 c7             	mov    %rax,%rdi
    b160:	e8 25 01 00 00       	call   b28a <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    b165:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b169:	48 89 c7             	mov    %rax,%rdi
    b16c:	e8 ee 0c 00 00       	call   be5f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    b171:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b175:	0f 92 c3             	setb   %bl
    b178:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b17c:	48 89 c7             	mov    %rax,%rdi
    b17f:	e8 60 f0 ff ff       	call   a1e4 <_ZNSaI16VkPresentModeKHRED1Ev>
    b184:	84 db                	test   %bl,%bl
    b186:	74 0f                	je     b197 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    b188:	48 8d 05 f9 41 01 00 	lea    0x141f9(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    b18f:	48 89 c7             	mov    %rax,%rdi
    b192:	e8 59 90 ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b19b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b19f:	c9                   	leave
    b1a0:	c3                   	ret
    b1a1:	90                   	nop

000000000000b1a2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b1a2:	55                   	push   %rbp
    b1a3:	48 89 e5             	mov    %rsp,%rbp
    b1a6:	53                   	push   %rbx
    b1a7:	48 83 ec 28          	sub    $0x28,%rsp
    b1ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b1b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b1b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b1bf:	48 89 d6             	mov    %rdx,%rsi
    b1c2:	48 89 c7             	mov    %rax,%rdi
    b1c5:	e8 d8 0c 00 00       	call   bea2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    b1ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b1ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1d2:	48 89 d6             	mov    %rdx,%rsi
    b1d5:	48 89 c7             	mov    %rax,%rdi
    b1d8:	e8 f7 0c 00 00       	call   bed4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    b1dd:	eb 1a                	jmp    b1f9 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    b1df:	48 89 c3             	mov    %rax,%rbx
    b1e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1e6:	48 89 c7             	mov    %rax,%rdi
    b1e9:	e8 96 e4 ff ff       	call   9684 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    b1ee:	48 89 d8             	mov    %rbx,%rax
    b1f1:	48 89 c7             	mov    %rax,%rdi
    b1f4:	e8 07 97 ff ff       	call   4900 <_Unwind_Resume@plt>
    b1f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b1fd:	c9                   	leave
    b1fe:	c3                   	ret
    b1ff:	90                   	nop

000000000000b200 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b200:	55                   	push   %rbp
    b201:	48 89 e5             	mov    %rsp,%rbp
    b204:	48 83 ec 10          	sub    $0x10,%rsp
    b208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b20c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b214:	48 89 c7             	mov    %rax,%rdi
    b217:	e8 24 00 00 00       	call   b240 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b21c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b223:	48 8b 00             	mov    (%rax),%rax
    b226:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b22a:	48 89 ce             	mov    %rcx,%rsi
    b22d:	48 89 c7             	mov    %rax,%rdi
    b230:	e8 f5 0c 00 00       	call   bf2a <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b235:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b239:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b23d:	90                   	nop
    b23e:	c9                   	leave
    b23f:	c3                   	ret

000000000000b240 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b240:	55                   	push   %rbp
    b241:	48 89 e5             	mov    %rsp,%rbp
    b244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b24c:	5d                   	pop    %rbp
    b24d:	c3                   	ret

000000000000b24e <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b24e:	55                   	push   %rbp
    b24f:	48 89 e5             	mov    %rsp,%rbp
    b252:	48 83 ec 20          	sub    $0x20,%rsp
    b256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b25a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b25e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b262:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b26a:	48 89 d6             	mov    %rdx,%rsi
    b26d:	48 89 c7             	mov    %rax,%rdi
    b270:	e8 de 0c 00 00       	call   bf53 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    b275:	90                   	nop
    b276:	c9                   	leave
    b277:	c3                   	ret

000000000000b278 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b278:	55                   	push   %rbp
    b279:	48 89 e5             	mov    %rsp,%rbp
    b27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b284:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b288:	5d                   	pop    %rbp
    b289:	c3                   	ret

000000000000b28a <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b28a:	55                   	push   %rbp
    b28b:	48 89 e5             	mov    %rsp,%rbp
    b28e:	48 83 ec 10          	sub    $0x10,%rsp
    b292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b29a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2a2:	48 89 d6             	mov    %rdx,%rsi
    b2a5:	48 89 c7             	mov    %rax,%rdi
    b2a8:	e8 cd 0c 00 00       	call   bf7a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    b2ad:	90                   	nop
    b2ae:	c9                   	leave
    b2af:	c3                   	ret

000000000000b2b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b2b0:	55                   	push   %rbp
    b2b1:	48 89 e5             	mov    %rsp,%rbp
    b2b4:	48 83 ec 20          	sub    $0x20,%rsp
    b2b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b2c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b2c9:	74 17                	je     b2e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b2cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b2d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2d7:	48 89 ce             	mov    %rcx,%rsi
    b2da:	48 89 c7             	mov    %rax,%rdi
    b2dd:	e8 a7 0c 00 00       	call   bf89 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    b2e2:	90                   	nop
    b2e3:	c9                   	leave
    b2e4:	c3                   	ret
    b2e5:	90                   	nop

000000000000b2e6 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b2e6:	55                   	push   %rbp
    b2e7:	48 89 e5             	mov    %rsp,%rbp
    b2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2ee:	90                   	nop
    b2ef:	5d                   	pop    %rbp
    b2f0:	c3                   	ret
    b2f1:	90                   	nop

000000000000b2f2 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b2f2:	55                   	push   %rbp
    b2f3:	48 89 e5             	mov    %rsp,%rbp
    b2f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2fa:	90                   	nop
    b2fb:	5d                   	pop    %rbp
    b2fc:	c3                   	ret

000000000000b2fd <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b2fd:	55                   	push   %rbp
    b2fe:	48 89 e5             	mov    %rsp,%rbp
    b301:	53                   	push   %rbx
    b302:	48 83 ec 28          	sub    $0x28,%rsp
    b306:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b30a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b30e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b312:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b316:	48 89 d6             	mov    %rdx,%rsi
    b319:	48 89 c7             	mov    %rax,%rdi
    b31c:	e8 25 01 00 00       	call   b446 <_ZNSaIP9VkImage_TEC1ERKS1_>
    b321:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b325:	48 89 c7             	mov    %rax,%rdi
    b328:	e8 8a 0c 00 00       	call   bfb7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    b32d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b331:	0f 92 c3             	setb   %bl
    b334:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b338:	48 89 c7             	mov    %rax,%rdi
    b33b:	e8 08 f0 ff ff       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
    b340:	84 db                	test   %bl,%bl
    b342:	74 0f                	je     b353 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    b344:	48 8d 05 3d 40 01 00 	lea    0x1403d(%rip),%rax        # 1f388 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    b34b:	48 89 c7             	mov    %rax,%rdi
    b34e:	e8 9d 8e ff ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b357:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b35b:	c9                   	leave
    b35c:	c3                   	ret
    b35d:	90                   	nop

000000000000b35e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b35e:	55                   	push   %rbp
    b35f:	48 89 e5             	mov    %rsp,%rbp
    b362:	53                   	push   %rbx
    b363:	48 83 ec 28          	sub    $0x28,%rsp
    b367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b36b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b36f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b377:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b37b:	48 89 d6             	mov    %rdx,%rsi
    b37e:	48 89 c7             	mov    %rax,%rdi
    b381:	e8 74 0c 00 00       	call   bffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    b386:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b38a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b38e:	48 89 d6             	mov    %rdx,%rsi
    b391:	48 89 c7             	mov    %rax,%rdi
    b394:	e8 93 0c 00 00       	call   c02c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    b399:	eb 1a                	jmp    b3b5 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    b39b:	48 89 c3             	mov    %rax,%rbx
    b39e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3a2:	48 89 c7             	mov    %rax,%rdi
    b3a5:	e8 f6 e2 ff ff       	call   96a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    b3aa:	48 89 d8             	mov    %rbx,%rax
    b3ad:	48 89 c7             	mov    %rax,%rdi
    b3b0:	e8 4b 95 ff ff       	call   4900 <_Unwind_Resume@plt>
    b3b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b3b9:	c9                   	leave
    b3ba:	c3                   	ret
    b3bb:	90                   	nop

000000000000b3bc <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b3bc:	55                   	push   %rbp
    b3bd:	48 89 e5             	mov    %rsp,%rbp
    b3c0:	48 83 ec 10          	sub    $0x10,%rsp
    b3c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b3cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3d0:	48 89 c7             	mov    %rax,%rdi
    b3d3:	e8 24 00 00 00       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    b3d8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b3db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3df:	48 8b 00             	mov    (%rax),%rax
    b3e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3e6:	48 89 ce             	mov    %rcx,%rsi
    b3e9:	48 89 c7             	mov    %rax,%rdi
    b3ec:	e8 91 0c 00 00       	call   c082 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b3f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b3f5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b3f9:	90                   	nop
    b3fa:	c9                   	leave
    b3fb:	c3                   	ret

000000000000b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b3fc:	55                   	push   %rbp
    b3fd:	48 89 e5             	mov    %rsp,%rbp
    b400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b408:	5d                   	pop    %rbp
    b409:	c3                   	ret

000000000000b40a <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b40a:	55                   	push   %rbp
    b40b:	48 89 e5             	mov    %rsp,%rbp
    b40e:	48 83 ec 20          	sub    $0x20,%rsp
    b412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b41a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b41e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b426:	48 89 d6             	mov    %rdx,%rsi
    b429:	48 89 c7             	mov    %rax,%rdi
    b42c:	e8 7a 0c 00 00       	call   c0ab <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    b431:	90                   	nop
    b432:	c9                   	leave
    b433:	c3                   	ret

000000000000b434 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b434:	55                   	push   %rbp
    b435:	48 89 e5             	mov    %rsp,%rbp
    b438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b43c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b440:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b444:	5d                   	pop    %rbp
    b445:	c3                   	ret

000000000000b446 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b446:	55                   	push   %rbp
    b447:	48 89 e5             	mov    %rsp,%rbp
    b44a:	48 83 ec 10          	sub    $0x10,%rsp
    b44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b456:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b45e:	48 89 d6             	mov    %rdx,%rsi
    b461:	48 89 c7             	mov    %rax,%rdi
    b464:	e8 69 0c 00 00       	call   c0d2 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    b469:	90                   	nop
    b46a:	c9                   	leave
    b46b:	c3                   	ret

000000000000b46c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    b46c:	55                   	push   %rbp
    b46d:	48 89 e5             	mov    %rsp,%rbp
    b470:	48 83 ec 20          	sub    $0x20,%rsp
    b474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b478:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b47c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b480:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b485:	74 17                	je     b49e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b48b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b48f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b493:	48 89 ce             	mov    %rcx,%rsi
    b496:	48 89 c7             	mov    %rax,%rdi
    b499:	e8 43 0c 00 00       	call   c0e1 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    b49e:	90                   	nop
    b49f:	c9                   	leave
    b4a0:	c3                   	ret

000000000000b4a1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b4a1:	55                   	push   %rbp
    b4a2:	48 89 e5             	mov    %rsp,%rbp
    b4a5:	48 83 ec 20          	sub    $0x20,%rsp
    b4a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b4ad:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b4b4:	03 3f 00 
    b4b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4bf:	48 89 c7             	mov    %rax,%rdi
    b4c2:	e8 48 0c 00 00       	call   c10f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    b4c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b4cb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b4cf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b4d3:	48 89 d6             	mov    %rdx,%rsi
    b4d6:	48 89 c7             	mov    %rax,%rdi
    b4d9:	e8 df a7 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b4de:	48 8b 00             	mov    (%rax),%rax
      }
    b4e1:	c9                   	leave
    b4e2:	c3                   	ret
    b4e3:	90                   	nop

000000000000b4e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b4e4:	55                   	push   %rbp
    b4e5:	48 89 e5             	mov    %rsp,%rbp
    b4e8:	48 83 ec 10          	sub    $0x10,%rsp
    b4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b4f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b4f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4fc:	48 89 d6             	mov    %rdx,%rsi
    b4ff:	48 89 c7             	mov    %rax,%rdi
    b502:	e8 e9 f0 ff ff       	call   a5f0 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    b507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b50b:	48 89 c7             	mov    %rax,%rdi
    b50e:	e8 17 0c 00 00       	call   c12a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b513:	90                   	nop
    b514:	c9                   	leave
    b515:	c3                   	ret

000000000000b516 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b516:	55                   	push   %rbp
    b517:	48 89 e5             	mov    %rsp,%rbp
    b51a:	48 83 ec 10          	sub    $0x10,%rsp
    b51e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b526:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b52a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b52e:	48 89 d6             	mov    %rdx,%rsi
    b531:	48 89 c7             	mov    %rax,%rdi
    b534:	e8 1f 0c 00 00       	call   c158 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    b539:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b53d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b544:	48 8b 10             	mov    (%rax),%rdx
    b547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b54b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b54f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b553:	48 8b 08             	mov    (%rax),%rcx
    b556:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b55a:	48 89 d0             	mov    %rdx,%rax
    b55d:	48 c1 e0 06          	shl    $0x6,%rax
    b561:	48 01 d0             	add    %rdx,%rax
    b564:	48 c1 e0 03          	shl    $0x3,%rax
    b568:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b56c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b570:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b574:	90                   	nop
    b575:	c9                   	leave
    b576:	c3                   	ret

000000000000b577 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b577:	55                   	push   %rbp
    b578:	48 89 e5             	mov    %rsp,%rbp
    b57b:	48 83 ec 20          	sub    $0x20,%rsp
    b57f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b583:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b587:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b58b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b593:	48 89 d6             	mov    %rdx,%rsi
    b596:	48 89 c7             	mov    %rax,%rdi
    b599:	e8 ed 0b 00 00       	call   c18b <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    b59e:	c9                   	leave
    b59f:	c3                   	ret

000000000000b5a0 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b5a0:	55                   	push   %rbp
    b5a1:	48 89 e5             	mov    %rsp,%rbp
    b5a4:	48 83 ec 10          	sub    $0x10,%rsp
    b5a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b5b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b5b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b8:	48 89 d6             	mov    %rdx,%rsi
    b5bb:	48 89 c7             	mov    %rax,%rdi
    b5be:	e8 f1 0b 00 00       	call   c1b4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    b5c3:	90                   	nop
    b5c4:	c9                   	leave
    b5c5:	c3                   	ret

000000000000b5c6 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    b5c6:	55                   	push   %rbp
    b5c7:	48 89 e5             	mov    %rsp,%rbp
    b5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5d2:	90                   	nop
    b5d3:	5d                   	pop    %rbp
    b5d4:	c3                   	ret

000000000000b5d5 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b5d5:	55                   	push   %rbp
    b5d6:	48 89 e5             	mov    %rsp,%rbp
    b5d9:	48 83 ec 20          	sub    $0x20,%rsp
    b5dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b5e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b5ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b5f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5f5:	48 89 ce             	mov    %rcx,%rsi
    b5f8:	48 89 c7             	mov    %rax,%rdi
    b5fb:	e8 c4 0b 00 00       	call   c1c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    b600:	90                   	nop
    b601:	c9                   	leave
    b602:	c3                   	ret

000000000000b603 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b603:	55                   	push   %rbp
    b604:	48 89 e5             	mov    %rsp,%rbp
    b607:	48 83 ec 20          	sub    $0x20,%rsp
    b60b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b60f:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b616:	07 7e 00 
    b619:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b61d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b621:	48 89 c7             	mov    %rax,%rdi
    b624:	e8 d5 0b 00 00       	call   c1fe <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    b629:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b62d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b631:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b635:	48 89 d6             	mov    %rdx,%rsi
    b638:	48 89 c7             	mov    %rax,%rdi
    b63b:	e8 7d a6 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b640:	48 8b 00             	mov    (%rax),%rax
      }
    b643:	c9                   	leave
    b644:	c3                   	ret
    b645:	90                   	nop

000000000000b646 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b646:	55                   	push   %rbp
    b647:	48 89 e5             	mov    %rsp,%rbp
    b64a:	48 83 ec 10          	sub    $0x10,%rsp
    b64e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b652:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b656:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b65a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b65e:	48 89 d6             	mov    %rdx,%rsi
    b661:	48 89 c7             	mov    %rax,%rdi
    b664:	e8 43 f1 ff ff       	call   a7ac <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    b669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b66d:	48 89 c7             	mov    %rax,%rdi
    b670:	e8 a3 0b 00 00       	call   c218 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b675:	90                   	nop
    b676:	c9                   	leave
    b677:	c3                   	ret

000000000000b678 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b678:	55                   	push   %rbp
    b679:	48 89 e5             	mov    %rsp,%rbp
    b67c:	48 83 ec 10          	sub    $0x10,%rsp
    b680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b688:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b68c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b690:	48 89 d6             	mov    %rdx,%rsi
    b693:	48 89 c7             	mov    %rax,%rdi
    b696:	e8 ab 0b 00 00       	call   c246 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    b69b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b69f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6a6:	48 8b 10             	mov    (%rax),%rdx
    b6a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b5:	48 8b 08             	mov    (%rax),%rcx
    b6b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b6bc:	48 89 d0             	mov    %rdx,%rax
    b6bf:	48 c1 e0 06          	shl    $0x6,%rax
    b6c3:	48 01 d0             	add    %rdx,%rax
    b6c6:	48 c1 e0 02          	shl    $0x2,%rax
    b6ca:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b6ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b6d6:	90                   	nop
    b6d7:	c9                   	leave
    b6d8:	c3                   	ret

000000000000b6d9 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b6d9:	55                   	push   %rbp
    b6da:	48 89 e5             	mov    %rsp,%rbp
    b6dd:	48 83 ec 20          	sub    $0x20,%rsp
    b6e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b6ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f5:	48 89 d6             	mov    %rdx,%rsi
    b6f8:	48 89 c7             	mov    %rax,%rdi
    b6fb:	e8 79 0b 00 00       	call   c279 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    b700:	c9                   	leave
    b701:	c3                   	ret

000000000000b702 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b702:	55                   	push   %rbp
    b703:	48 89 e5             	mov    %rsp,%rbp
    b706:	48 83 ec 10          	sub    $0x10,%rsp
    b70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b70e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b712:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b71a:	48 89 d6             	mov    %rdx,%rsi
    b71d:	48 89 c7             	mov    %rax,%rdi
    b720:	e8 7d 0b 00 00       	call   c2a2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    b725:	90                   	nop
    b726:	c9                   	leave
    b727:	c3                   	ret

000000000000b728 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    b728:	55                   	push   %rbp
    b729:	48 89 e5             	mov    %rsp,%rbp
    b72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b734:	90                   	nop
    b735:	5d                   	pop    %rbp
    b736:	c3                   	ret

000000000000b737 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b737:	55                   	push   %rbp
    b738:	48 89 e5             	mov    %rsp,%rbp
    b73b:	48 83 ec 20          	sub    $0x20,%rsp
    b73f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b743:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b747:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b74b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b74f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b757:	48 89 ce             	mov    %rcx,%rsi
    b75a:	48 89 c7             	mov    %rax,%rdi
    b75d:	e8 50 0b 00 00       	call   c2b2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    b762:	90                   	nop
    b763:	c9                   	leave
    b764:	c3                   	ret

000000000000b765 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b765:	55                   	push   %rbp
    b766:	48 89 e5             	mov    %rsp,%rbp
    b769:	48 83 ec 20          	sub    $0x20,%rsp
    b76d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b771:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b778:	ff ff 0f 
    b77b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b77f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b783:	48 89 c7             	mov    %rax,%rdi
    b786:	e8 61 0b 00 00       	call   c2ec <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    b78b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b78f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b793:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b797:	48 89 d6             	mov    %rdx,%rsi
    b79a:	48 89 c7             	mov    %rax,%rdi
    b79d:	e8 1b a5 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b7a2:	48 8b 00             	mov    (%rax),%rax
      }
    b7a5:	c9                   	leave
    b7a6:	c3                   	ret
    b7a7:	90                   	nop

000000000000b7a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b7a8:	55                   	push   %rbp
    b7a9:	48 89 e5             	mov    %rsp,%rbp
    b7ac:	48 83 ec 10          	sub    $0x10,%rsp
    b7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b7b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7c0:	48 89 d6             	mov    %rdx,%rsi
    b7c3:	48 89 c7             	mov    %rax,%rdi
    b7c6:	e8 61 f1 ff ff       	call   a92c <_ZNSaIPKcEC1ERKS1_>
    b7cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cf:	48 89 c7             	mov    %rax,%rdi
    b7d2:	e8 2f 0b 00 00       	call   c306 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    b7d7:	90                   	nop
    b7d8:	c9                   	leave
    b7d9:	c3                   	ret

000000000000b7da <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b7da:	55                   	push   %rbp
    b7db:	48 89 e5             	mov    %rsp,%rbp
    b7de:	48 83 ec 10          	sub    $0x10,%rsp
    b7e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b7ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f2:	48 89 d6             	mov    %rdx,%rsi
    b7f5:	48 89 c7             	mov    %rax,%rdi
    b7f8:	e8 37 0b 00 00       	call   c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    b7fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b801:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b808:	48 8b 10             	mov    (%rax),%rdx
    b80b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b817:	48 8b 00             	mov    (%rax),%rax
    b81a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b81e:	48 c1 e2 03          	shl    $0x3,%rdx
    b822:	48 01 c2             	add    %rax,%rdx
    b825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b829:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b82d:	90                   	nop
    b82e:	c9                   	leave
    b82f:	c3                   	ret

000000000000b830 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b830:	55                   	push   %rbp
    b831:	48 89 e5             	mov    %rsp,%rbp
    b834:	48 83 ec 20          	sub    $0x20,%rsp
    b838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b83c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b840:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b844:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84c:	48 89 d6             	mov    %rdx,%rsi
    b84f:	48 89 c7             	mov    %rax,%rdi
    b852:	e8 10 0b 00 00       	call   c367 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    b857:	c9                   	leave
    b858:	c3                   	ret
    b859:	90                   	nop

000000000000b85a <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    b85a:	55                   	push   %rbp
    b85b:	48 89 e5             	mov    %rsp,%rbp
    b85e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b866:	90                   	nop
    b867:	5d                   	pop    %rbp
    b868:	c3                   	ret

000000000000b869 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b869:	55                   	push   %rbp
    b86a:	48 89 e5             	mov    %rsp,%rbp
    b86d:	48 83 ec 20          	sub    $0x20,%rsp
    b871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b875:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b879:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b87d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b881:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b889:	48 89 ce             	mov    %rcx,%rsi
    b88c:	48 89 c7             	mov    %rax,%rdi
    b88f:	e8 fc 0a 00 00       	call   c390 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    b894:	90                   	nop
    b895:	c9                   	leave
    b896:	c3                   	ret

000000000000b897 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b897:	55                   	push   %rbp
    b898:	48 89 e5             	mov    %rsp,%rbp
    b89b:	48 83 ec 20          	sub    $0x20,%rsp
    b89f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b8a3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b8aa:	ff ff 0f 
    b8ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b8b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8b5:	48 89 c7             	mov    %rax,%rdi
    b8b8:	e8 04 0b 00 00       	call   c3c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    b8bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b8c1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b8c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8c9:	48 89 d6             	mov    %rdx,%rsi
    b8cc:	48 89 c7             	mov    %rax,%rdi
    b8cf:	e8 e9 a3 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    b8d4:	48 8b 00             	mov    (%rax),%rax
      }
    b8d7:	c9                   	leave
    b8d8:	c3                   	ret
    b8d9:	90                   	nop

000000000000b8da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b8da:	55                   	push   %rbp
    b8db:	48 89 e5             	mov    %rsp,%rbp
    b8de:	48 83 ec 10          	sub    $0x10,%rsp
    b8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b8ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f2:	48 89 d6             	mov    %rdx,%rsi
    b8f5:	48 89 c7             	mov    %rax,%rdi
    b8f8:	e8 eb f1 ff ff       	call   aae8 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    b8fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b901:	48 89 c7             	mov    %rax,%rdi
    b904:	e8 d3 0a 00 00       	call   c3dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    b909:	90                   	nop
    b90a:	c9                   	leave
    b90b:	c3                   	ret

000000000000b90c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b90c:	55                   	push   %rbp
    b90d:	48 89 e5             	mov    %rsp,%rbp
    b910:	48 83 ec 10          	sub    $0x10,%rsp
    b914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b91c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b924:	48 89 d6             	mov    %rdx,%rsi
    b927:	48 89 c7             	mov    %rax,%rdi
    b92a:	e8 db 0a 00 00       	call   c40a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    b92f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b933:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b93a:	48 8b 10             	mov    (%rax),%rdx
    b93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b941:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b949:	48 8b 00             	mov    (%rax),%rax
    b94c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b950:	48 c1 e2 03          	shl    $0x3,%rdx
    b954:	48 01 c2             	add    %rax,%rdx
    b957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b95b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b95f:	90                   	nop
    b960:	c9                   	leave
    b961:	c3                   	ret

000000000000b962 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b962:	55                   	push   %rbp
    b963:	48 89 e5             	mov    %rsp,%rbp
    b966:	48 83 ec 20          	sub    $0x20,%rsp
    b96a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b96e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b976:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b97e:	48 89 d6             	mov    %rdx,%rsi
    b981:	48 89 c7             	mov    %rax,%rdi
    b984:	e8 b4 0a 00 00       	call   c43d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    b989:	c9                   	leave
    b98a:	c3                   	ret

000000000000b98b <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b98b:	55                   	push   %rbp
    b98c:	48 89 e5             	mov    %rsp,%rbp
    b98f:	48 83 ec 10          	sub    $0x10,%rsp
    b993:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b997:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b99b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9a3:	48 89 d6             	mov    %rdx,%rsi
    b9a6:	48 89 c7             	mov    %rax,%rdi
    b9a9:	e8 b8 0a 00 00       	call   c466 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    b9ae:	90                   	nop
    b9af:	c9                   	leave
    b9b0:	c3                   	ret
    b9b1:	90                   	nop

000000000000b9b2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    b9b2:	55                   	push   %rbp
    b9b3:	48 89 e5             	mov    %rsp,%rbp
    b9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9be:	90                   	nop
    b9bf:	5d                   	pop    %rbp
    b9c0:	c3                   	ret

000000000000b9c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b9c1:	55                   	push   %rbp
    b9c2:	48 89 e5             	mov    %rsp,%rbp
    b9c5:	48 83 ec 20          	sub    $0x20,%rsp
    b9c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b9d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b9d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b9dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9e1:	48 89 ce             	mov    %rcx,%rsi
    b9e4:	48 89 c7             	mov    %rax,%rdi
    b9e7:	e8 8a 0a 00 00       	call   c476 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    b9ec:	90                   	nop
    b9ed:	c9                   	leave
    b9ee:	c3                   	ret

000000000000b9ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b9ef:	55                   	push   %rbp
    b9f0:	48 89 e5             	mov    %rsp,%rbp
    b9f3:	48 83 ec 20          	sub    $0x20,%rsp
    b9f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b9fb:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ba02:	55 55 05 
    ba05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ba09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba0d:	48 89 c7             	mov    %rax,%rdi
    ba10:	e8 92 0a 00 00       	call   c4a7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    ba15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ba19:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ba1d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ba21:	48 89 d6             	mov    %rdx,%rsi
    ba24:	48 89 c7             	mov    %rax,%rdi
    ba27:	e8 91 a2 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    ba2c:	48 8b 00             	mov    (%rax),%rax
      }
    ba2f:	c9                   	leave
    ba30:	c3                   	ret
    ba31:	90                   	nop

000000000000ba32 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ba32:	55                   	push   %rbp
    ba33:	48 89 e5             	mov    %rsp,%rbp
    ba36:	48 83 ec 10          	sub    $0x10,%rsp
    ba3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ba42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba4a:	48 89 d6             	mov    %rdx,%rsi
    ba4d:	48 89 c7             	mov    %rax,%rdi
    ba50:	e8 4f f2 ff ff       	call   aca4 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    ba55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba59:	48 89 c7             	mov    %rax,%rdi
    ba5c:	e8 61 0a 00 00       	call   c4c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ba61:	90                   	nop
    ba62:	c9                   	leave
    ba63:	c3                   	ret

000000000000ba64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ba64:	55                   	push   %rbp
    ba65:	48 89 e5             	mov    %rsp,%rbp
    ba68:	48 83 ec 10          	sub    $0x10,%rsp
    ba6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ba74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba7c:	48 89 d6             	mov    %rdx,%rsi
    ba7f:	48 89 c7             	mov    %rax,%rdi
    ba82:	e8 69 0a 00 00       	call   c4f0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    ba87:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ba8b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ba8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba92:	48 8b 10             	mov    (%rax),%rdx
    ba95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba99:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ba9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa1:	48 8b 08             	mov    (%rax),%rcx
    baa4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    baa8:	48 89 d0             	mov    %rdx,%rax
    baab:	48 01 c0             	add    %rax,%rax
    baae:	48 01 d0             	add    %rdx,%rax
    bab1:	48 c1 e0 03          	shl    $0x3,%rax
    bab5:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    bab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    babd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bac1:	90                   	nop
    bac2:	c9                   	leave
    bac3:	c3                   	ret

000000000000bac4 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bac4:	55                   	push   %rbp
    bac5:	48 89 e5             	mov    %rsp,%rbp
    bac8:	48 83 ec 20          	sub    $0x20,%rsp
    bacc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bad4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bad8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    badc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bae0:	48 89 d6             	mov    %rdx,%rsi
    bae3:	48 89 c7             	mov    %rax,%rdi
    bae6:	e8 38 0a 00 00       	call   c523 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    baeb:	c9                   	leave
    baec:	c3                   	ret

000000000000baed <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    baed:	55                   	push   %rbp
    baee:	48 89 e5             	mov    %rsp,%rbp
    baf1:	48 83 ec 10          	sub    $0x10,%rsp
    baf5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baf9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bafd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb05:	48 89 d6             	mov    %rdx,%rsi
    bb08:	48 89 c7             	mov    %rax,%rdi
    bb0b:	e8 3c 0a 00 00       	call   c54c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    bb10:	90                   	nop
    bb11:	c9                   	leave
    bb12:	c3                   	ret
    bb13:	90                   	nop

000000000000bb14 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    bb14:	55                   	push   %rbp
    bb15:	48 89 e5             	mov    %rsp,%rbp
    bb18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb20:	90                   	nop
    bb21:	5d                   	pop    %rbp
    bb22:	c3                   	ret

000000000000bb23 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bb23:	55                   	push   %rbp
    bb24:	48 89 e5             	mov    %rsp,%rbp
    bb27:	48 83 ec 20          	sub    $0x20,%rsp
    bb2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bb37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb3b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bb3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb43:	48 89 ce             	mov    %rcx,%rsi
    bb46:	48 89 c7             	mov    %rax,%rdi
    bb49:	e8 0e 0a 00 00       	call   c55c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    bb4e:	90                   	nop
    bb4f:	c9                   	leave
    bb50:	c3                   	ret

000000000000bb51 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bb51:	55                   	push   %rbp
    bb52:	48 89 e5             	mov    %rsp,%rbp
    bb55:	48 83 ec 20          	sub    $0x20,%rsp
    bb59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bb5d:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    bb64:	49 92 04 
    bb67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bb6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb6f:	48 89 c7             	mov    %rax,%rdi
    bb72:	e8 1e 0a 00 00       	call   c595 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    bb77:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bb7b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bb7f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb83:	48 89 d6             	mov    %rdx,%rsi
    bb86:	48 89 c7             	mov    %rax,%rdi
    bb89:	e8 2f a1 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    bb8e:	48 8b 00             	mov    (%rax),%rax
      }
    bb91:	c9                   	leave
    bb92:	c3                   	ret
    bb93:	90                   	nop

000000000000bb94 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bb94:	55                   	push   %rbp
    bb95:	48 89 e5             	mov    %rsp,%rbp
    bb98:	48 83 ec 10          	sub    $0x10,%rsp
    bb9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bba0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    bba4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbac:	48 89 d6             	mov    %rdx,%rsi
    bbaf:	48 89 c7             	mov    %rax,%rdi
    bbb2:	e8 5b f3 ff ff       	call   af12 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    bbb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbbb:	48 89 c7             	mov    %rax,%rdi
    bbbe:	e8 ed 09 00 00       	call   c5b0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    bbc3:	90                   	nop
    bbc4:	c9                   	leave
    bbc5:	c3                   	ret

000000000000bbc6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bbc6:	55                   	push   %rbp
    bbc7:	48 89 e5             	mov    %rsp,%rbp
    bbca:	48 83 ec 10          	sub    $0x10,%rsp
    bbce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bbd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbde:	48 89 d6             	mov    %rdx,%rsi
    bbe1:	48 89 c7             	mov    %rax,%rdi
    bbe4:	e8 f5 09 00 00       	call   c5de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    bbe9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bbed:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    bbf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf4:	48 8b 10             	mov    (%rax),%rdx
    bbf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbfb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bbff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc03:	48 8b 08             	mov    (%rax),%rcx
    bc06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc0a:	48 89 d0             	mov    %rdx,%rax
    bc0d:	48 c1 e0 03          	shl    $0x3,%rax
    bc11:	48 29 d0             	sub    %rdx,%rax
    bc14:	48 c1 e0 02          	shl    $0x2,%rax
    bc18:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    bc1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc20:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bc24:	90                   	nop
    bc25:	c9                   	leave
    bc26:	c3                   	ret

000000000000bc27 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bc27:	55                   	push   %rbp
    bc28:	48 89 e5             	mov    %rsp,%rbp
    bc2b:	48 83 ec 20          	sub    $0x20,%rsp
    bc2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc33:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc37:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bc3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc43:	48 89 d6             	mov    %rdx,%rsi
    bc46:	48 89 c7             	mov    %rax,%rdi
    bc49:	e8 c3 09 00 00       	call   c611 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    bc4e:	c9                   	leave
    bc4f:	c3                   	ret

000000000000bc50 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bc50:	55                   	push   %rbp
    bc51:	48 89 e5             	mov    %rsp,%rbp
    bc54:	48 83 ec 10          	sub    $0x10,%rsp
    bc58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bc60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc68:	48 89 d6             	mov    %rdx,%rsi
    bc6b:	48 89 c7             	mov    %rax,%rdi
    bc6e:	e8 c7 09 00 00       	call   c63a <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    bc73:	90                   	nop
    bc74:	c9                   	leave
    bc75:	c3                   	ret

000000000000bc76 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    bc76:	55                   	push   %rbp
    bc77:	48 89 e5             	mov    %rsp,%rbp
    bc7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    bc7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc82:	5d                   	pop    %rbp
    bc83:	c3                   	ret

000000000000bc84 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    bc84:	55                   	push   %rbp
    bc85:	48 89 e5             	mov    %rsp,%rbp
    bc88:	53                   	push   %rbx
    bc89:	48 83 ec 18          	sub    $0x18,%rsp
    bc8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    bc95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bc99:	48 89 c7             	mov    %rax,%rdi
    bc9c:	e8 2f f2 ff ff       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    bca1:	48 89 c3             	mov    %rax,%rbx
    bca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bca8:	48 89 c7             	mov    %rax,%rdi
    bcab:	e8 99 09 00 00       	call   c649 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    bcb0:	48 89 de             	mov    %rbx,%rsi
    bcb3:	48 89 c7             	mov    %rax,%rdi
    bcb6:	e8 9c 09 00 00       	call   c657 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    bcbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcbf:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    bcc3:	90                   	nop
    bcc4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bcc8:	c9                   	leave
    bcc9:	c3                   	ret

000000000000bcca <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    bcca:	55                   	push   %rbp
    bccb:	48 89 e5             	mov    %rsp,%rbp
    bcce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcd6:	90                   	nop
    bcd7:	5d                   	pop    %rbp
    bcd8:	c3                   	ret

000000000000bcd9 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bcd9:	55                   	push   %rbp
    bcda:	48 89 e5             	mov    %rsp,%rbp
    bcdd:	48 83 ec 20          	sub    $0x20,%rsp
    bce1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bce5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bce9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bced:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bcf1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bcf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf9:	48 89 ce             	mov    %rcx,%rsi
    bcfc:	48 89 c7             	mov    %rax,%rdi
    bcff:	e8 a4 09 00 00       	call   c6a8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    bd04:	90                   	nop
    bd05:	c9                   	leave
    bd06:	c3                   	ret

000000000000bd07 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bd07:	55                   	push   %rbp
    bd08:	48 89 e5             	mov    %rsp,%rbp
    bd0b:	48 83 ec 20          	sub    $0x20,%rsp
    bd0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bd13:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bd1a:	ff ff 0f 
    bd1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bd21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd25:	48 89 c7             	mov    %rax,%rdi
    bd28:	e8 b5 09 00 00       	call   c6e2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    bd2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bd31:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bd35:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd39:	48 89 d6             	mov    %rdx,%rsi
    bd3c:	48 89 c7             	mov    %rax,%rdi
    bd3f:	e8 79 9f ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    bd44:	48 8b 00             	mov    (%rax),%rax
      }
    bd47:	c9                   	leave
    bd48:	c3                   	ret
    bd49:	90                   	nop

000000000000bd4a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bd4a:	55                   	push   %rbp
    bd4b:	48 89 e5             	mov    %rsp,%rbp
    bd4e:	48 83 ec 10          	sub    $0x10,%rsp
    bd52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    bd5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd62:	48 89 d6             	mov    %rdx,%rsi
    bd65:	48 89 c7             	mov    %rax,%rdi
    bd68:	e8 61 f3 ff ff       	call   b0ce <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    bd6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd71:	48 89 c7             	mov    %rax,%rdi
    bd74:	e8 83 09 00 00       	call   c6fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    bd79:	90                   	nop
    bd7a:	c9                   	leave
    bd7b:	c3                   	ret

000000000000bd7c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bd7c:	55                   	push   %rbp
    bd7d:	48 89 e5             	mov    %rsp,%rbp
    bd80:	48 83 ec 10          	sub    $0x10,%rsp
    bd84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bd8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd94:	48 89 d6             	mov    %rdx,%rsi
    bd97:	48 89 c7             	mov    %rax,%rdi
    bd9a:	e8 8b 09 00 00       	call   c72a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    bd9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bda3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    bda6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdaa:	48 8b 10             	mov    (%rax),%rdx
    bdad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bdb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb9:	48 8b 00             	mov    (%rax),%rax
    bdbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdc0:	48 c1 e2 03          	shl    $0x3,%rdx
    bdc4:	48 01 c2             	add    %rax,%rdx
    bdc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdcb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bdcf:	90                   	nop
    bdd0:	c9                   	leave
    bdd1:	c3                   	ret

000000000000bdd2 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bdd2:	55                   	push   %rbp
    bdd3:	48 89 e5             	mov    %rsp,%rbp
    bdd6:	48 83 ec 20          	sub    $0x20,%rsp
    bdda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bde2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bde6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdee:	48 89 d6             	mov    %rdx,%rsi
    bdf1:	48 89 c7             	mov    %rax,%rdi
    bdf4:	e8 64 09 00 00       	call   c75d <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    bdf9:	c9                   	leave
    bdfa:	c3                   	ret

000000000000bdfb <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bdfb:	55                   	push   %rbp
    bdfc:	48 89 e5             	mov    %rsp,%rbp
    bdff:	48 83 ec 10          	sub    $0x10,%rsp
    be03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    be0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be13:	48 89 d6             	mov    %rdx,%rsi
    be16:	48 89 c7             	mov    %rax,%rdi
    be19:	e8 68 09 00 00       	call   c786 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    be1e:	90                   	nop
    be1f:	c9                   	leave
    be20:	c3                   	ret
    be21:	90                   	nop

000000000000be22 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    be22:	55                   	push   %rbp
    be23:	48 89 e5             	mov    %rsp,%rbp
    be26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be2e:	90                   	nop
    be2f:	5d                   	pop    %rbp
    be30:	c3                   	ret

000000000000be31 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    be31:	55                   	push   %rbp
    be32:	48 89 e5             	mov    %rsp,%rbp
    be35:	48 83 ec 20          	sub    $0x20,%rsp
    be39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    be45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    be4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be51:	48 89 ce             	mov    %rcx,%rsi
    be54:	48 89 c7             	mov    %rax,%rdi
    be57:	e8 3a 09 00 00       	call   c796 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    be5c:	90                   	nop
    be5d:	c9                   	leave
    be5e:	c3                   	ret

000000000000be5f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    be5f:	55                   	push   %rbp
    be60:	48 89 e5             	mov    %rsp,%rbp
    be63:	48 83 ec 20          	sub    $0x20,%rsp
    be67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    be6b:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    be72:	ff ff 1f 
    be75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    be79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be7d:	48 89 c7             	mov    %rax,%rdi
    be80:	e8 42 09 00 00       	call   c7c7 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    be85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    be89:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    be8d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be91:	48 89 d6             	mov    %rdx,%rsi
    be94:	48 89 c7             	mov    %rax,%rdi
    be97:	e8 21 9e ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    be9c:	48 8b 00             	mov    (%rax),%rax
      }
    be9f:	c9                   	leave
    bea0:	c3                   	ret
    bea1:	90                   	nop

000000000000bea2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bea2:	55                   	push   %rbp
    bea3:	48 89 e5             	mov    %rsp,%rbp
    bea6:	48 83 ec 10          	sub    $0x10,%rsp
    beaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    beb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    beb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beba:	48 89 d6             	mov    %rdx,%rsi
    bebd:	48 89 c7             	mov    %rax,%rdi
    bec0:	e8 c5 f3 ff ff       	call   b28a <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    bec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec9:	48 89 c7             	mov    %rax,%rdi
    becc:	e8 11 09 00 00       	call   c7e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    bed1:	90                   	nop
    bed2:	c9                   	leave
    bed3:	c3                   	ret

000000000000bed4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bed4:	55                   	push   %rbp
    bed5:	48 89 e5             	mov    %rsp,%rbp
    bed8:	48 83 ec 10          	sub    $0x10,%rsp
    bedc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bee0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bee4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beec:	48 89 d6             	mov    %rdx,%rsi
    beef:	48 89 c7             	mov    %rax,%rdi
    bef2:	e8 19 09 00 00       	call   c810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    bef7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    befb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    befe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf02:	48 8b 10             	mov    (%rax),%rdx
    bf05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf09:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bf0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf11:	48 8b 00             	mov    (%rax),%rax
    bf14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf18:	48 c1 e2 02          	shl    $0x2,%rdx
    bf1c:	48 01 c2             	add    %rax,%rdx
    bf1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf23:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bf27:	90                   	nop
    bf28:	c9                   	leave
    bf29:	c3                   	ret

000000000000bf2a <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bf2a:	55                   	push   %rbp
    bf2b:	48 89 e5             	mov    %rsp,%rbp
    bf2e:	48 83 ec 20          	sub    $0x20,%rsp
    bf32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bf3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf46:	48 89 d6             	mov    %rdx,%rsi
    bf49:	48 89 c7             	mov    %rax,%rdi
    bf4c:	e8 f2 08 00 00       	call   c843 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    bf51:	c9                   	leave
    bf52:	c3                   	ret

000000000000bf53 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bf53:	55                   	push   %rbp
    bf54:	48 89 e5             	mov    %rsp,%rbp
    bf57:	48 83 ec 10          	sub    $0x10,%rsp
    bf5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bf63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf6b:	48 89 d6             	mov    %rdx,%rsi
    bf6e:	48 89 c7             	mov    %rax,%rdi
    bf71:	e8 f6 08 00 00       	call   c86c <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    bf76:	90                   	nop
    bf77:	c9                   	leave
    bf78:	c3                   	ret
    bf79:	90                   	nop

000000000000bf7a <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    bf7a:	55                   	push   %rbp
    bf7b:	48 89 e5             	mov    %rsp,%rbp
    bf7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf86:	90                   	nop
    bf87:	5d                   	pop    %rbp
    bf88:	c3                   	ret

000000000000bf89 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bf89:	55                   	push   %rbp
    bf8a:	48 89 e5             	mov    %rsp,%rbp
    bf8d:	48 83 ec 20          	sub    $0x20,%rsp
    bf91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf95:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf99:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bf9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfa1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bfa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfa9:	48 89 ce             	mov    %rcx,%rsi
    bfac:	48 89 c7             	mov    %rax,%rdi
    bfaf:	e8 c8 08 00 00       	call   c87c <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    bfb4:	90                   	nop
    bfb5:	c9                   	leave
    bfb6:	c3                   	ret

000000000000bfb7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bfb7:	55                   	push   %rbp
    bfb8:	48 89 e5             	mov    %rsp,%rbp
    bfbb:	48 83 ec 20          	sub    $0x20,%rsp
    bfbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bfc3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bfca:	ff ff 0f 
    bfcd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bfd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfd5:	48 89 c7             	mov    %rax,%rdi
    bfd8:	e8 d0 08 00 00       	call   c8ad <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    bfdd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bfe1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bfe5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfe9:	48 89 d6             	mov    %rdx,%rsi
    bfec:	48 89 c7             	mov    %rax,%rdi
    bfef:	e8 c9 9c ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    bff4:	48 8b 00             	mov    (%rax),%rax
      }
    bff7:	c9                   	leave
    bff8:	c3                   	ret
    bff9:	90                   	nop

000000000000bffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bffa:	55                   	push   %rbp
    bffb:	48 89 e5             	mov    %rsp,%rbp
    bffe:	48 83 ec 10          	sub    $0x10,%rsp
    c002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    c00a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c012:	48 89 d6             	mov    %rdx,%rsi
    c015:	48 89 c7             	mov    %rax,%rdi
    c018:	e8 29 f4 ff ff       	call   b446 <_ZNSaIP9VkImage_TEC1ERKS1_>
    c01d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c021:	48 89 c7             	mov    %rax,%rdi
    c024:	e8 9f 08 00 00       	call   c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    c029:	90                   	nop
    c02a:	c9                   	leave
    c02b:	c3                   	ret

000000000000c02c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    c02c:	55                   	push   %rbp
    c02d:	48 89 e5             	mov    %rsp,%rbp
    c030:	48 83 ec 10          	sub    $0x10,%rsp
    c034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    c03c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c044:	48 89 d6             	mov    %rdx,%rsi
    c047:	48 89 c7             	mov    %rax,%rdi
    c04a:	e8 a7 08 00 00       	call   c8f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    c04f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c053:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    c056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c05a:	48 8b 10             	mov    (%rax),%rdx
    c05d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c061:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c069:	48 8b 00             	mov    (%rax),%rax
    c06c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c070:	48 c1 e2 03          	shl    $0x3,%rdx
    c074:	48 01 c2             	add    %rax,%rdx
    c077:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c07b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    c07f:	90                   	nop
    c080:	c9                   	leave
    c081:	c3                   	ret

000000000000c082 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c082:	55                   	push   %rbp
    c083:	48 89 e5             	mov    %rsp,%rbp
    c086:	48 83 ec 20          	sub    $0x20,%rsp
    c08a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c08e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c092:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c096:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c09a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c09e:	48 89 d6             	mov    %rdx,%rsi
    c0a1:	48 89 c7             	mov    %rax,%rdi
    c0a4:	e8 80 08 00 00       	call   c929 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    c0a9:	c9                   	leave
    c0aa:	c3                   	ret

000000000000c0ab <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    c0ab:	55                   	push   %rbp
    c0ac:	48 89 e5             	mov    %rsp,%rbp
    c0af:	48 83 ec 10          	sub    $0x10,%rsp
    c0b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    c0bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c3:	48 89 d6             	mov    %rdx,%rsi
    c0c6:	48 89 c7             	mov    %rax,%rdi
    c0c9:	e8 84 08 00 00       	call   c952 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    c0ce:	90                   	nop
    c0cf:	c9                   	leave
    c0d0:	c3                   	ret
    c0d1:	90                   	nop

000000000000c0d2 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    c0d2:	55                   	push   %rbp
    c0d3:	48 89 e5             	mov    %rsp,%rbp
    c0d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0de:	90                   	nop
    c0df:	5d                   	pop    %rbp
    c0e0:	c3                   	ret

000000000000c0e1 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    c0e1:	55                   	push   %rbp
    c0e2:	48 89 e5             	mov    %rsp,%rbp
    c0e5:	48 83 ec 20          	sub    $0x20,%rsp
    c0e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    c0f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c0fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c101:	48 89 ce             	mov    %rcx,%rsi
    c104:	48 89 c7             	mov    %rax,%rdi
    c107:	e8 56 08 00 00       	call   c962 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    c10c:	90                   	nop
    c10d:	c9                   	leave
    c10e:	c3                   	ret

000000000000c10f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c10f:	55                   	push   %rbp
    c110:	48 89 e5             	mov    %rsp,%rbp
    c113:	48 83 ec 10          	sub    $0x10,%rsp
    c117:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c11f:	48 89 c7             	mov    %rax,%rdi
    c122:	e8 6d 08 00 00       	call   c994 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    c127:	c9                   	leave
    c128:	c3                   	ret
    c129:	90                   	nop

000000000000c12a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c12a:	55                   	push   %rbp
    c12b:	48 89 e5             	mov    %rsp,%rbp
    c12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c136:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c13d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c141:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c148:	00 
    c149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c154:	00 
	{ }
    c155:	90                   	nop
    c156:	5d                   	pop    %rbp
    c157:	c3                   	ret

000000000000c158 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c158:	55                   	push   %rbp
    c159:	48 89 e5             	mov    %rsp,%rbp
    c15c:	48 83 ec 10          	sub    $0x10,%rsp
    c160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c168:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c16d:	74 15                	je     c184 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c16f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c173:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c177:	48 89 d6             	mov    %rdx,%rsi
    c17a:	48 89 c7             	mov    %rax,%rdi
    c17d:	e8 2c 08 00 00       	call   c9ae <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    c182:	eb 05                	jmp    c189 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c184:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c189:	c9                   	leave
    c18a:	c3                   	ret

000000000000c18b <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c18b:	55                   	push   %rbp
    c18c:	48 89 e5             	mov    %rsp,%rbp
    c18f:	48 83 ec 20          	sub    $0x20,%rsp
    c193:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c197:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c19b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c19f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c1a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1a7:	48 89 d6             	mov    %rdx,%rsi
    c1aa:	48 89 c7             	mov    %rax,%rdi
    c1ad:	e8 26 08 00 00       	call   c9d8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    c1b2:	c9                   	leave
    c1b3:	c3                   	ret

000000000000c1b4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    c1b4:	55                   	push   %rbp
    c1b5:	48 89 e5             	mov    %rsp,%rbp
    c1b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1c0:	90                   	nop
    c1c1:	5d                   	pop    %rbp
    c1c2:	c3                   	ret
    c1c3:	90                   	nop

000000000000c1c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c1c4:	55                   	push   %rbp
    c1c5:	48 89 e5             	mov    %rsp,%rbp
    c1c8:	48 83 ec 20          	sub    $0x20,%rsp
    c1cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c1d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1dc:	48 89 d0             	mov    %rdx,%rax
    c1df:	48 c1 e0 06          	shl    $0x6,%rax
    c1e3:	48 01 d0             	add    %rdx,%rax
    c1e6:	48 c1 e0 03          	shl    $0x3,%rax
    c1ea:	48 89 c2             	mov    %rax,%rdx
    c1ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1f1:	48 89 d6             	mov    %rdx,%rsi
    c1f4:	48 89 c7             	mov    %rax,%rdi
    c1f7:	e8 a4 82 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c1fc:	c9                   	leave
    c1fd:	c3                   	ret

000000000000c1fe <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c1fe:	55                   	push   %rbp
    c1ff:	48 89 e5             	mov    %rsp,%rbp
    c202:	48 83 ec 10          	sub    $0x10,%rsp
    c206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c20a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20e:	48 89 c7             	mov    %rax,%rdi
    c211:	e8 22 08 00 00       	call   ca38 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    c216:	c9                   	leave
    c217:	c3                   	ret

000000000000c218 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c218:	55                   	push   %rbp
    c219:	48 89 e5             	mov    %rsp,%rbp
    c21c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c224:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c236:	00 
    c237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c23b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c242:	00 
	{ }
    c243:	90                   	nop
    c244:	5d                   	pop    %rbp
    c245:	c3                   	ret

000000000000c246 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c246:	55                   	push   %rbp
    c247:	48 89 e5             	mov    %rsp,%rbp
    c24a:	48 83 ec 10          	sub    $0x10,%rsp
    c24e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c252:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c256:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c25b:	74 15                	je     c272 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c25d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c261:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c265:	48 89 d6             	mov    %rdx,%rsi
    c268:	48 89 c7             	mov    %rax,%rdi
    c26b:	e8 e2 07 00 00       	call   ca52 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    c270:	eb 05                	jmp    c277 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c272:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c277:	c9                   	leave
    c278:	c3                   	ret

000000000000c279 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c279:	55                   	push   %rbp
    c27a:	48 89 e5             	mov    %rsp,%rbp
    c27d:	48 83 ec 20          	sub    $0x20,%rsp
    c281:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c285:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c289:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c28d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c295:	48 89 d6             	mov    %rdx,%rsi
    c298:	48 89 c7             	mov    %rax,%rdi
    c29b:	e8 dc 07 00 00       	call   ca7c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    c2a0:	c9                   	leave
    c2a1:	c3                   	ret

000000000000c2a2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    c2a2:	55                   	push   %rbp
    c2a3:	48 89 e5             	mov    %rsp,%rbp
    c2a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2ae:	90                   	nop
    c2af:	5d                   	pop    %rbp
    c2b0:	c3                   	ret
    c2b1:	90                   	nop

000000000000c2b2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c2b2:	55                   	push   %rbp
    c2b3:	48 89 e5             	mov    %rsp,%rbp
    c2b6:	48 83 ec 20          	sub    $0x20,%rsp
    c2ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c2c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2ca:	48 89 d0             	mov    %rdx,%rax
    c2cd:	48 c1 e0 06          	shl    $0x6,%rax
    c2d1:	48 01 d0             	add    %rdx,%rax
    c2d4:	48 c1 e0 02          	shl    $0x2,%rax
    c2d8:	48 89 c2             	mov    %rax,%rdx
    c2db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2df:	48 89 d6             	mov    %rdx,%rsi
    c2e2:	48 89 c7             	mov    %rax,%rdi
    c2e5:	e8 b6 81 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c2ea:	c9                   	leave
    c2eb:	c3                   	ret

000000000000c2ec <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c2ec:	55                   	push   %rbp
    c2ed:	48 89 e5             	mov    %rsp,%rbp
    c2f0:	48 83 ec 10          	sub    $0x10,%rsp
    c2f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c2f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2fc:	48 89 c7             	mov    %rax,%rdi
    c2ff:	e8 d8 07 00 00       	call   cadc <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    c304:	c9                   	leave
    c305:	c3                   	ret

000000000000c306 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c306:	55                   	push   %rbp
    c307:	48 89 e5             	mov    %rsp,%rbp
    c30a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c30e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c312:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c31d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c324:	00 
    c325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c329:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c330:	00 
	{ }
    c331:	90                   	nop
    c332:	5d                   	pop    %rbp
    c333:	c3                   	ret

000000000000c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c334:	55                   	push   %rbp
    c335:	48 89 e5             	mov    %rsp,%rbp
    c338:	48 83 ec 10          	sub    $0x10,%rsp
    c33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c340:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c344:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c349:	74 15                	je     c360 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    c34b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c353:	48 89 d6             	mov    %rdx,%rsi
    c356:	48 89 c7             	mov    %rax,%rdi
    c359:	e8 98 07 00 00       	call   caf6 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    c35e:	eb 05                	jmp    c365 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    c360:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c365:	c9                   	leave
    c366:	c3                   	ret

000000000000c367 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c367:	55                   	push   %rbp
    c368:	48 89 e5             	mov    %rsp,%rbp
    c36b:	48 83 ec 20          	sub    $0x20,%rsp
    c36f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c373:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c377:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c37b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c37f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c383:	48 89 d6             	mov    %rdx,%rsi
    c386:	48 89 c7             	mov    %rax,%rdi
    c389:	e8 92 07 00 00       	call   cb20 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    c38e:	c9                   	leave
    c38f:	c3                   	ret

000000000000c390 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c390:	55                   	push   %rbp
    c391:	48 89 e5             	mov    %rsp,%rbp
    c394:	48 83 ec 20          	sub    $0x20,%rsp
    c398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c39c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c3a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3af:	00 
    c3b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3b4:	48 89 d6             	mov    %rdx,%rsi
    c3b7:	48 89 c7             	mov    %rax,%rdi
    c3ba:	e8 e1 80 ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c3bf:	c9                   	leave
    c3c0:	c3                   	ret

000000000000c3c1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c3c1:	55                   	push   %rbp
    c3c2:	48 89 e5             	mov    %rsp,%rbp
    c3c5:	48 83 ec 10          	sub    $0x10,%rsp
    c3c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c3cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d1:	48 89 c7             	mov    %rax,%rdi
    c3d4:	e8 a5 07 00 00       	call   cb7e <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    c3d9:	c9                   	leave
    c3da:	c3                   	ret
    c3db:	90                   	nop

000000000000c3dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c3dc:	55                   	push   %rbp
    c3dd:	48 89 e5             	mov    %rsp,%rbp
    c3e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c3e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c3ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c3fa:	00 
    c3fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ff:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c406:	00 
	{ }
    c407:	90                   	nop
    c408:	5d                   	pop    %rbp
    c409:	c3                   	ret

000000000000c40a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c40a:	55                   	push   %rbp
    c40b:	48 89 e5             	mov    %rsp,%rbp
    c40e:	48 83 ec 10          	sub    $0x10,%rsp
    c412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c41a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c41f:	74 15                	je     c436 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    c421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c425:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c429:	48 89 d6             	mov    %rdx,%rsi
    c42c:	48 89 c7             	mov    %rax,%rdi
    c42f:	e8 64 07 00 00       	call   cb98 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    c434:	eb 05                	jmp    c43b <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    c436:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c43b:	c9                   	leave
    c43c:	c3                   	ret

000000000000c43d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c43d:	55                   	push   %rbp
    c43e:	48 89 e5             	mov    %rsp,%rbp
    c441:	48 83 ec 20          	sub    $0x20,%rsp
    c445:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c449:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c44d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c451:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c459:	48 89 d6             	mov    %rdx,%rsi
    c45c:	48 89 c7             	mov    %rax,%rdi
    c45f:	e8 5e 07 00 00       	call   cbc2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    c464:	c9                   	leave
    c465:	c3                   	ret

000000000000c466 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    c466:	55                   	push   %rbp
    c467:	48 89 e5             	mov    %rsp,%rbp
    c46a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c46e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c472:	90                   	nop
    c473:	5d                   	pop    %rbp
    c474:	c3                   	ret
    c475:	90                   	nop

000000000000c476 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c476:	55                   	push   %rbp
    c477:	48 89 e5             	mov    %rsp,%rbp
    c47a:	48 83 ec 20          	sub    $0x20,%rsp
    c47e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c486:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c48a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c48e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c495:	00 
    c496:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c49a:	48 89 d6             	mov    %rdx,%rsi
    c49d:	48 89 c7             	mov    %rax,%rdi
    c4a0:	e8 fb 7f ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c4a5:	c9                   	leave
    c4a6:	c3                   	ret

000000000000c4a7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c4a7:	55                   	push   %rbp
    c4a8:	48 89 e5             	mov    %rsp,%rbp
    c4ab:	48 83 ec 10          	sub    $0x10,%rsp
    c4af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4b7:	48 89 c7             	mov    %rax,%rdi
    c4ba:	e8 61 07 00 00       	call   cc20 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    c4bf:	c9                   	leave
    c4c0:	c3                   	ret
    c4c1:	90                   	nop

000000000000c4c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c4c2:	55                   	push   %rbp
    c4c3:	48 89 e5             	mov    %rsp,%rbp
    c4c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c4ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c4d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c4e0:	00 
    c4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c4ec:	00 
	{ }
    c4ed:	90                   	nop
    c4ee:	5d                   	pop    %rbp
    c4ef:	c3                   	ret

000000000000c4f0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c4f0:	55                   	push   %rbp
    c4f1:	48 89 e5             	mov    %rsp,%rbp
    c4f4:	48 83 ec 10          	sub    $0x10,%rsp
    c4f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c500:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c505:	74 15                	je     c51c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c50b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c50f:	48 89 d6             	mov    %rdx,%rsi
    c512:	48 89 c7             	mov    %rax,%rdi
    c515:	e8 20 07 00 00       	call   cc3a <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    c51a:	eb 05                	jmp    c521 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c51c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c521:	c9                   	leave
    c522:	c3                   	ret

000000000000c523 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c523:	55                   	push   %rbp
    c524:	48 89 e5             	mov    %rsp,%rbp
    c527:	48 83 ec 20          	sub    $0x20,%rsp
    c52b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c52f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c533:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c537:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c53b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53f:	48 89 d6             	mov    %rdx,%rsi
    c542:	48 89 c7             	mov    %rax,%rdi
    c545:	e8 1a 07 00 00       	call   cc64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    c54a:	c9                   	leave
    c54b:	c3                   	ret

000000000000c54c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    c54c:	55                   	push   %rbp
    c54d:	48 89 e5             	mov    %rsp,%rbp
    c550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c558:	90                   	nop
    c559:	5d                   	pop    %rbp
    c55a:	c3                   	ret
    c55b:	90                   	nop

000000000000c55c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c55c:	55                   	push   %rbp
    c55d:	48 89 e5             	mov    %rsp,%rbp
    c560:	48 83 ec 20          	sub    $0x20,%rsp
    c564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c568:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c56c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c570:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c574:	48 89 d0             	mov    %rdx,%rax
    c577:	48 01 c0             	add    %rax,%rax
    c57a:	48 01 d0             	add    %rdx,%rax
    c57d:	48 c1 e0 03          	shl    $0x3,%rax
    c581:	48 89 c2             	mov    %rax,%rdx
    c584:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c588:	48 89 d6             	mov    %rdx,%rsi
    c58b:	48 89 c7             	mov    %rax,%rdi
    c58e:	e8 0d 7f ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c593:	c9                   	leave
    c594:	c3                   	ret

000000000000c595 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c595:	55                   	push   %rbp
    c596:	48 89 e5             	mov    %rsp,%rbp
    c599:	48 83 ec 10          	sub    $0x10,%rsp
    c59d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5a5:	48 89 c7             	mov    %rax,%rdi
    c5a8:	e8 15 07 00 00       	call   ccc2 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    c5ad:	c9                   	leave
    c5ae:	c3                   	ret
    c5af:	90                   	nop

000000000000c5b0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c5b0:	55                   	push   %rbp
    c5b1:	48 89 e5             	mov    %rsp,%rbp
    c5b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c5b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5bc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c5c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c5ce:	00 
    c5cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c5da:	00 
	{ }
    c5db:	90                   	nop
    c5dc:	5d                   	pop    %rbp
    c5dd:	c3                   	ret

000000000000c5de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c5de:	55                   	push   %rbp
    c5df:	48 89 e5             	mov    %rsp,%rbp
    c5e2:	48 83 ec 10          	sub    $0x10,%rsp
    c5e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c5ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c5f3:	74 15                	je     c60a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    c5f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c5fd:	48 89 d6             	mov    %rdx,%rsi
    c600:	48 89 c7             	mov    %rax,%rdi
    c603:	e8 d4 06 00 00       	call   ccdc <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    c608:	eb 05                	jmp    c60f <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    c60a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c60f:	c9                   	leave
    c610:	c3                   	ret

000000000000c611 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c611:	55                   	push   %rbp
    c612:	48 89 e5             	mov    %rsp,%rbp
    c615:	48 83 ec 20          	sub    $0x20,%rsp
    c619:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c61d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c621:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c625:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c629:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c62d:	48 89 d6             	mov    %rdx,%rsi
    c630:	48 89 c7             	mov    %rax,%rdi
    c633:	e8 ce 06 00 00       	call   cd06 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    c638:	c9                   	leave
    c639:	c3                   	ret

000000000000c63a <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    c63a:	55                   	push   %rbp
    c63b:	48 89 e5             	mov    %rsp,%rbp
    c63e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c642:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c646:	90                   	nop
    c647:	5d                   	pop    %rbp
    c648:	c3                   	ret

000000000000c649 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c649:	55                   	push   %rbp
    c64a:	48 89 e5             	mov    %rsp,%rbp
    c64d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c655:	5d                   	pop    %rbp
    c656:	c3                   	ret

000000000000c657 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c657:	55                   	push   %rbp
    c658:	48 89 e5             	mov    %rsp,%rbp
    c65b:	53                   	push   %rbx
    c65c:	48 83 ec 18          	sub    $0x18,%rsp
    c660:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c664:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c668:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c66c:	48 89 c6             	mov    %rax,%rsi
    c66f:	bf 18 00 00 00       	mov    $0x18,%edi
    c674:	e8 ff 9f ff ff       	call   6678 <_ZnwmPv>
    c679:	48 89 c3             	mov    %rax,%rbx
    c67c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c680:	48 89 c7             	mov    %rax,%rdi
    c683:	e8 48 e8 ff ff       	call   aed0 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    c688:	48 89 c1             	mov    %rax,%rcx
    c68b:	48 8b 01             	mov    (%rcx),%rax
    c68e:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    c692:	48 89 03             	mov    %rax,(%rbx)
    c695:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    c699:	48 8b 41 10          	mov    0x10(%rcx),%rax
    c69d:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    c6a1:	90                   	nop
    c6a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6a6:	c9                   	leave
    c6a7:	c3                   	ret

000000000000c6a8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c6a8:	55                   	push   %rbp
    c6a9:	48 89 e5             	mov    %rsp,%rbp
    c6ac:	48 83 ec 20          	sub    $0x20,%rsp
    c6b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c6bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6c0:	48 89 d0             	mov    %rdx,%rax
    c6c3:	48 c1 e0 03          	shl    $0x3,%rax
    c6c7:	48 29 d0             	sub    %rdx,%rax
    c6ca:	48 c1 e0 02          	shl    $0x2,%rax
    c6ce:	48 89 c2             	mov    %rax,%rdx
    c6d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6d5:	48 89 d6             	mov    %rdx,%rsi
    c6d8:	48 89 c7             	mov    %rax,%rdi
    c6db:	e8 c0 7d ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c6e0:	c9                   	leave
    c6e1:	c3                   	ret

000000000000c6e2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c6e2:	55                   	push   %rbp
    c6e3:	48 89 e5             	mov    %rsp,%rbp
    c6e6:	48 83 ec 10          	sub    $0x10,%rsp
    c6ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c6ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f2:	48 89 c7             	mov    %rax,%rdi
    c6f5:	e8 52 06 00 00       	call   cd4c <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    c6fa:	c9                   	leave
    c6fb:	c3                   	ret

000000000000c6fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c6fc:	55                   	push   %rbp
    c6fd:	48 89 e5             	mov    %rsp,%rbp
    c700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c708:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c70f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c713:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c71a:	00 
    c71b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c726:	00 
	{ }
    c727:	90                   	nop
    c728:	5d                   	pop    %rbp
    c729:	c3                   	ret

000000000000c72a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c72a:	55                   	push   %rbp
    c72b:	48 89 e5             	mov    %rsp,%rbp
    c72e:	48 83 ec 10          	sub    $0x10,%rsp
    c732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c73a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c73f:	74 15                	je     c756 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    c741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c745:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c749:	48 89 d6             	mov    %rdx,%rsi
    c74c:	48 89 c7             	mov    %rax,%rdi
    c74f:	e8 12 06 00 00       	call   cd66 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    c754:	eb 05                	jmp    c75b <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    c756:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c75b:	c9                   	leave
    c75c:	c3                   	ret

000000000000c75d <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c75d:	55                   	push   %rbp
    c75e:	48 89 e5             	mov    %rsp,%rbp
    c761:	48 83 ec 20          	sub    $0x20,%rsp
    c765:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c769:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c76d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c771:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c779:	48 89 d6             	mov    %rdx,%rsi
    c77c:	48 89 c7             	mov    %rax,%rdi
    c77f:	e8 0c 06 00 00       	call   cd90 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    c784:	c9                   	leave
    c785:	c3                   	ret

000000000000c786 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    c786:	55                   	push   %rbp
    c787:	48 89 e5             	mov    %rsp,%rbp
    c78a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c78e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c792:	90                   	nop
    c793:	5d                   	pop    %rbp
    c794:	c3                   	ret
    c795:	90                   	nop

000000000000c796 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c796:	55                   	push   %rbp
    c797:	48 89 e5             	mov    %rsp,%rbp
    c79a:	48 83 ec 20          	sub    $0x20,%rsp
    c79e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c7aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7ae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c7b5:	00 
    c7b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7ba:	48 89 d6             	mov    %rdx,%rsi
    c7bd:	48 89 c7             	mov    %rax,%rdi
    c7c0:	e8 db 7c ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c7c5:	c9                   	leave
    c7c6:	c3                   	ret

000000000000c7c7 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c7c7:	55                   	push   %rbp
    c7c8:	48 89 e5             	mov    %rsp,%rbp
    c7cb:	48 83 ec 10          	sub    $0x10,%rsp
    c7cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c7d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7d7:	48 89 c7             	mov    %rax,%rdi
    c7da:	e8 0f 06 00 00       	call   cdee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    c7df:	c9                   	leave
    c7e0:	c3                   	ret
    c7e1:	90                   	nop

000000000000c7e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c7e2:	55                   	push   %rbp
    c7e3:	48 89 e5             	mov    %rsp,%rbp
    c7e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c7ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ee:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c7f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7f9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c800:	00 
    c801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c805:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c80c:	00 
	{ }
    c80d:	90                   	nop
    c80e:	5d                   	pop    %rbp
    c80f:	c3                   	ret

000000000000c810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c810:	55                   	push   %rbp
    c811:	48 89 e5             	mov    %rsp,%rbp
    c814:	48 83 ec 10          	sub    $0x10,%rsp
    c818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c81c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c820:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c825:	74 15                	je     c83c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    c827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c82f:	48 89 d6             	mov    %rdx,%rsi
    c832:	48 89 c7             	mov    %rax,%rdi
    c835:	e8 ce 05 00 00       	call   ce08 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    c83a:	eb 05                	jmp    c841 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    c83c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c841:	c9                   	leave
    c842:	c3                   	ret

000000000000c843 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c843:	55                   	push   %rbp
    c844:	48 89 e5             	mov    %rsp,%rbp
    c847:	48 83 ec 20          	sub    $0x20,%rsp
    c84b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c84f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c853:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c857:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c85b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c85f:	48 89 d6             	mov    %rdx,%rsi
    c862:	48 89 c7             	mov    %rax,%rdi
    c865:	e8 c8 05 00 00       	call   ce32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    c86a:	c9                   	leave
    c86b:	c3                   	ret

000000000000c86c <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    c86c:	55                   	push   %rbp
    c86d:	48 89 e5             	mov    %rsp,%rbp
    c870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c878:	90                   	nop
    c879:	5d                   	pop    %rbp
    c87a:	c3                   	ret
    c87b:	90                   	nop

000000000000c87c <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c87c:	55                   	push   %rbp
    c87d:	48 89 e5             	mov    %rsp,%rbp
    c880:	48 83 ec 20          	sub    $0x20,%rsp
    c884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c888:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c88c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c894:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c89b:	00 
    c89c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8a0:	48 89 d6             	mov    %rdx,%rsi
    c8a3:	48 89 c7             	mov    %rax,%rdi
    c8a6:	e8 f5 7b ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c8ab:	c9                   	leave
    c8ac:	c3                   	ret

000000000000c8ad <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c8ad:	55                   	push   %rbp
    c8ae:	48 89 e5             	mov    %rsp,%rbp
    c8b1:	48 83 ec 10          	sub    $0x10,%rsp
    c8b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c8b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8bd:	48 89 c7             	mov    %rax,%rdi
    c8c0:	e8 cb 05 00 00       	call   ce90 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    c8c5:	c9                   	leave
    c8c6:	c3                   	ret
    c8c7:	90                   	nop

000000000000c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c8c8:	55                   	push   %rbp
    c8c9:	48 89 e5             	mov    %rsp,%rbp
    c8cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c8d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c8db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8df:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c8e6:	00 
    c8e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c8f2:	00 
	{ }
    c8f3:	90                   	nop
    c8f4:	5d                   	pop    %rbp
    c8f5:	c3                   	ret

000000000000c8f6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c8f6:	55                   	push   %rbp
    c8f7:	48 89 e5             	mov    %rsp,%rbp
    c8fa:	48 83 ec 10          	sub    $0x10,%rsp
    c8fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c906:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c90b:	74 15                	je     c922 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    c90d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c911:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c915:	48 89 d6             	mov    %rdx,%rsi
    c918:	48 89 c7             	mov    %rax,%rdi
    c91b:	e8 8a 05 00 00       	call   ceaa <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    c920:	eb 05                	jmp    c927 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    c922:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c927:	c9                   	leave
    c928:	c3                   	ret

000000000000c929 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c929:	55                   	push   %rbp
    c92a:	48 89 e5             	mov    %rsp,%rbp
    c92d:	48 83 ec 20          	sub    $0x20,%rsp
    c931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c935:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c939:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c93d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c945:	48 89 d6             	mov    %rdx,%rsi
    c948:	48 89 c7             	mov    %rax,%rdi
    c94b:	e8 84 05 00 00       	call   ced4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    c950:	c9                   	leave
    c951:	c3                   	ret

000000000000c952 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    c952:	55                   	push   %rbp
    c953:	48 89 e5             	mov    %rsp,%rbp
    c956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c95a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c95e:	90                   	nop
    c95f:	5d                   	pop    %rbp
    c960:	c3                   	ret
    c961:	90                   	nop

000000000000c962 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c962:	55                   	push   %rbp
    c963:	48 89 e5             	mov    %rsp,%rbp
    c966:	48 83 ec 20          	sub    $0x20,%rsp
    c96a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c96e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c97a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c981:	00 
    c982:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c986:	48 89 d6             	mov    %rdx,%rsi
    c989:	48 89 c7             	mov    %rax,%rdi
    c98c:	e8 0f 7b ff ff       	call   44a0 <_ZdlPvm@plt>
      }
    c991:	c9                   	leave
    c992:	c3                   	ret
    c993:	90                   	nop

000000000000c994 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c994:	55                   	push   %rbp
    c995:	48 89 e5             	mov    %rsp,%rbp
    c998:	48 83 ec 10          	sub    $0x10,%rsp
    c99c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c9a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a4:	48 89 c7             	mov    %rax,%rdi
    c9a7:	e8 86 05 00 00       	call   cf32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    c9ac:	c9                   	leave
    c9ad:	c3                   	ret

000000000000c9ae <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c9ae:	55                   	push   %rbp
    c9af:	48 89 e5             	mov    %rsp,%rbp
    c9b2:	48 83 ec 10          	sub    $0x10,%rsp
    c9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c9be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c6:	ba 00 00 00 00       	mov    $0x0,%edx
    c9cb:	48 89 ce             	mov    %rcx,%rsi
    c9ce:	48 89 c7             	mov    %rax,%rdi
    c9d1:	e8 70 05 00 00       	call   cf46 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    c9d6:	c9                   	leave
    c9d7:	c3                   	ret

000000000000c9d8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c9d8:	55                   	push   %rbp
    c9d9:	48 89 e5             	mov    %rsp,%rbp
    c9dc:	48 83 ec 20          	sub    $0x20,%rsp
    c9e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c9e8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c9ed:	74 43                	je     ca32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    c9ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9f3:	48 89 c7             	mov    %rax,%rdi
    c9f6:	e8 b6 05 00 00       	call   cfb1 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    c9fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c9ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca03:	48 89 c7             	mov    %rax,%rdi
    ca06:	e8 b4 05 00 00       	call   cfbf <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    ca0b:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    ca12:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    ca13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca17:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    ca1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca23:	48 89 ce             	mov    %rcx,%rsi
    ca26:	48 89 c7             	mov    %rax,%rdi
    ca29:	e8 eb 05 00 00       	call   d019 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    ca2e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ca32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ca36:	c9                   	leave
    ca37:	c3                   	ret

000000000000ca38 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ca38:	55                   	push   %rbp
    ca39:	48 89 e5             	mov    %rsp,%rbp
    ca3c:	48 83 ec 10          	sub    $0x10,%rsp
    ca40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ca44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca48:	48 89 c7             	mov    %rax,%rdi
    ca4b:	e8 0e 06 00 00       	call   d05e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    ca50:	c9                   	leave
    ca51:	c3                   	ret

000000000000ca52 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    ca52:	55                   	push   %rbp
    ca53:	48 89 e5             	mov    %rsp,%rbp
    ca56:	48 83 ec 10          	sub    $0x10,%rsp
    ca5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ca62:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ca66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca6a:	ba 00 00 00 00       	mov    $0x0,%edx
    ca6f:	48 89 ce             	mov    %rcx,%rsi
    ca72:	48 89 c7             	mov    %rax,%rdi
    ca75:	e8 f8 05 00 00       	call   d072 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    ca7a:	c9                   	leave
    ca7b:	c3                   	ret

000000000000ca7c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ca7c:	55                   	push   %rbp
    ca7d:	48 89 e5             	mov    %rsp,%rbp
    ca80:	48 83 ec 20          	sub    $0x20,%rsp
    ca84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca88:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ca8c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ca91:	74 43                	je     cad6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    ca93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca97:	48 89 c7             	mov    %rax,%rdi
    ca9a:	e8 3e 06 00 00       	call   d0dd <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    ca9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    caa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa7:	48 89 c7             	mov    %rax,%rdi
    caaa:	e8 3c 06 00 00       	call   d0eb <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    caaf:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    cab6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    cab7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cabb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cabf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cac7:	48 89 ce             	mov    %rcx,%rsi
    caca:	48 89 c7             	mov    %rax,%rdi
    cacd:	e8 73 06 00 00       	call   d145 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    cad2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cada:	c9                   	leave
    cadb:	c3                   	ret

000000000000cadc <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cadc:	55                   	push   %rbp
    cadd:	48 89 e5             	mov    %rsp,%rbp
    cae0:	48 83 ec 10          	sub    $0x10,%rsp
    cae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caec:	48 89 c7             	mov    %rax,%rdi
    caef:	e8 96 06 00 00       	call   d18a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    caf4:	c9                   	leave
    caf5:	c3                   	ret

000000000000caf6 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    caf6:	55                   	push   %rbp
    caf7:	48 89 e5             	mov    %rsp,%rbp
    cafa:	48 83 ec 10          	sub    $0x10,%rsp
    cafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cb06:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cb0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb0e:	ba 00 00 00 00       	mov    $0x0,%edx
    cb13:	48 89 ce             	mov    %rcx,%rsi
    cb16:	48 89 c7             	mov    %rax,%rdi
    cb19:	e8 80 06 00 00       	call   d19e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    cb1e:	c9                   	leave
    cb1f:	c3                   	ret

000000000000cb20 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cb20:	55                   	push   %rbp
    cb21:	48 89 e5             	mov    %rsp,%rbp
    cb24:	48 83 ec 20          	sub    $0x20,%rsp
    cb28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cb30:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cb35:	74 40                	je     cb77 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    cb37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb3b:	48 89 c7             	mov    %rax,%rdi
    cb3e:	e8 bc 06 00 00       	call   d1ff <_ZSt11__addressofIPKcEPT_RS2_>
    cb43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cb47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb4b:	48 89 c7             	mov    %rax,%rdi
    cb4e:	e8 ba 06 00 00       	call   d20d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    cb53:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cb58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb5c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cb60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb68:	48 89 ce             	mov    %rcx,%rsi
    cb6b:	48 89 c7             	mov    %rax,%rdi
    cb6e:	e8 c1 06 00 00       	call   d234 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    cb73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cb77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cb7b:	c9                   	leave
    cb7c:	c3                   	ret
    cb7d:	90                   	nop

000000000000cb7e <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cb7e:	55                   	push   %rbp
    cb7f:	48 89 e5             	mov    %rsp,%rbp
    cb82:	48 83 ec 10          	sub    $0x10,%rsp
    cb86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cb8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb8e:	48 89 c7             	mov    %rax,%rdi
    cb91:	e8 e2 06 00 00       	call   d278 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    cb96:	c9                   	leave
    cb97:	c3                   	ret

000000000000cb98 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    cb98:	55                   	push   %rbp
    cb99:	48 89 e5             	mov    %rsp,%rbp
    cb9c:	48 83 ec 10          	sub    $0x10,%rsp
    cba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cba4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cba8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb0:	ba 00 00 00 00       	mov    $0x0,%edx
    cbb5:	48 89 ce             	mov    %rcx,%rsi
    cbb8:	48 89 c7             	mov    %rax,%rdi
    cbbb:	e8 cc 06 00 00       	call   d28c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    cbc0:	c9                   	leave
    cbc1:	c3                   	ret

000000000000cbc2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cbc2:	55                   	push   %rbp
    cbc3:	48 89 e5             	mov    %rsp,%rbp
    cbc6:	48 83 ec 20          	sub    $0x20,%rsp
    cbca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cbd2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cbd7:	74 40                	je     cc19 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    cbd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbdd:	48 89 c7             	mov    %rax,%rdi
    cbe0:	e8 08 07 00 00       	call   d2ed <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    cbe5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cbe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbed:	48 89 c7             	mov    %rax,%rdi
    cbf0:	e8 06 07 00 00       	call   d2fb <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    cbf5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cbfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbfe:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cc02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc0a:	48 89 ce             	mov    %rcx,%rsi
    cc0d:	48 89 c7             	mov    %rax,%rdi
    cc10:	e8 0d 07 00 00       	call   d322 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    cc15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cc19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cc1d:	c9                   	leave
    cc1e:	c3                   	ret
    cc1f:	90                   	nop

000000000000cc20 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cc20:	55                   	push   %rbp
    cc21:	48 89 e5             	mov    %rsp,%rbp
    cc24:	48 83 ec 10          	sub    $0x10,%rsp
    cc28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cc2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc30:	48 89 c7             	mov    %rax,%rdi
    cc33:	e8 2e 07 00 00       	call   d366 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    cc38:	c9                   	leave
    cc39:	c3                   	ret

000000000000cc3a <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    cc3a:	55                   	push   %rbp
    cc3b:	48 89 e5             	mov    %rsp,%rbp
    cc3e:	48 83 ec 10          	sub    $0x10,%rsp
    cc42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cc4a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cc4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc52:	ba 00 00 00 00       	mov    $0x0,%edx
    cc57:	48 89 ce             	mov    %rcx,%rsi
    cc5a:	48 89 c7             	mov    %rax,%rdi
    cc5d:	e8 18 07 00 00       	call   d37a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    cc62:	c9                   	leave
    cc63:	c3                   	ret

000000000000cc64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cc64:	55                   	push   %rbp
    cc65:	48 89 e5             	mov    %rsp,%rbp
    cc68:	48 83 ec 20          	sub    $0x20,%rsp
    cc6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc70:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cc74:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cc79:	74 40                	je     ccbb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    cc7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc7f:	48 89 c7             	mov    %rax,%rdi
    cc82:	e8 c2 f9 ff ff       	call   c649 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    cc87:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cc8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc8f:	48 89 c7             	mov    %rax,%rdi
    cc92:	e8 4d 07 00 00       	call   d3e4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    cc97:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cc9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cca0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cca4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cca8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccac:	48 89 ce             	mov    %rcx,%rsi
    ccaf:	48 89 c7             	mov    %rax,%rdi
    ccb2:	e8 76 07 00 00       	call   d42d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    ccb7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ccbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ccbf:	c9                   	leave
    ccc0:	c3                   	ret
    ccc1:	90                   	nop

000000000000ccc2 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ccc2:	55                   	push   %rbp
    ccc3:	48 89 e5             	mov    %rsp,%rbp
    ccc6:	48 83 ec 10          	sub    $0x10,%rsp
    ccca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ccce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd2:	48 89 c7             	mov    %rax,%rdi
    ccd5:	e8 98 07 00 00       	call   d472 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    ccda:	c9                   	leave
    ccdb:	c3                   	ret

000000000000ccdc <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    ccdc:	55                   	push   %rbp
    ccdd:	48 89 e5             	mov    %rsp,%rbp
    cce0:	48 83 ec 10          	sub    $0x10,%rsp
    cce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cce8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ccec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ccf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccf4:	ba 00 00 00 00       	mov    $0x0,%edx
    ccf9:	48 89 ce             	mov    %rcx,%rsi
    ccfc:	48 89 c7             	mov    %rax,%rdi
    ccff:	e8 82 07 00 00       	call   d486 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    cd04:	c9                   	leave
    cd05:	c3                   	ret

000000000000cd06 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cd06:	55                   	push   %rbp
    cd07:	48 89 e5             	mov    %rsp,%rbp
    cd0a:	48 83 ec 20          	sub    $0x20,%rsp
    cd0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    cd16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    cd1e:	eb 1e                	jmp    cd3e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    cd20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd24:	48 89 c7             	mov    %rax,%rdi
    cd27:	e8 c5 07 00 00       	call   d4f1 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    cd2c:	48 89 c7             	mov    %rax,%rdi
    cd2f:	e8 cb 07 00 00       	call   d4ff <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    cd34:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    cd39:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    cd3e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cd43:	75 db                	jne    cd20 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    cd45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    cd49:	c9                   	leave
    cd4a:	c3                   	ret
    cd4b:	90                   	nop

000000000000cd4c <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cd4c:	55                   	push   %rbp
    cd4d:	48 89 e5             	mov    %rsp,%rbp
    cd50:	48 83 ec 10          	sub    $0x10,%rsp
    cd54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cd58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd5c:	48 89 c7             	mov    %rax,%rdi
    cd5f:	e8 c4 07 00 00       	call   d528 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    cd64:	c9                   	leave
    cd65:	c3                   	ret

000000000000cd66 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    cd66:	55                   	push   %rbp
    cd67:	48 89 e5             	mov    %rsp,%rbp
    cd6a:	48 83 ec 10          	sub    $0x10,%rsp
    cd6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    cd76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cd7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7e:	ba 00 00 00 00       	mov    $0x0,%edx
    cd83:	48 89 ce             	mov    %rcx,%rsi
    cd86:	48 89 c7             	mov    %rax,%rdi
    cd89:	e8 ae 07 00 00       	call   d53c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    cd8e:	c9                   	leave
    cd8f:	c3                   	ret

000000000000cd90 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    cd90:	55                   	push   %rbp
    cd91:	48 89 e5             	mov    %rsp,%rbp
    cd94:	48 83 ec 20          	sub    $0x20,%rsp
    cd98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cda0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cda5:	74 40                	je     cde7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    cda7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdab:	48 89 c7             	mov    %rax,%rdi
    cdae:	e8 ea 07 00 00       	call   d59d <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    cdb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cdb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdbb:	48 89 c7             	mov    %rax,%rdi
    cdbe:	e8 e8 07 00 00       	call   d5ab <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    cdc3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cdc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cdcc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cdd0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cdd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdd8:	48 89 ce             	mov    %rcx,%rsi
    cddb:	48 89 c7             	mov    %rax,%rdi
    cdde:	e8 f5 07 00 00       	call   d5d8 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    cde3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cde7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cdeb:	c9                   	leave
    cdec:	c3                   	ret
    cded:	90                   	nop

000000000000cdee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    cdee:	55                   	push   %rbp
    cdef:	48 89 e5             	mov    %rsp,%rbp
    cdf2:	48 83 ec 10          	sub    $0x10,%rsp
    cdf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    cdfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdfe:	48 89 c7             	mov    %rax,%rdi
    ce01:	e8 16 08 00 00       	call   d61c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    ce06:	c9                   	leave
    ce07:	c3                   	ret

000000000000ce08 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    ce08:	55                   	push   %rbp
    ce09:	48 89 e5             	mov    %rsp,%rbp
    ce0c:	48 83 ec 10          	sub    $0x10,%rsp
    ce10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ce18:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ce1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce20:	ba 00 00 00 00       	mov    $0x0,%edx
    ce25:	48 89 ce             	mov    %rcx,%rsi
    ce28:	48 89 c7             	mov    %rax,%rdi
    ce2b:	e8 00 08 00 00       	call   d630 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    ce30:	c9                   	leave
    ce31:	c3                   	ret

000000000000ce32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ce32:	55                   	push   %rbp
    ce33:	48 89 e5             	mov    %rsp,%rbp
    ce36:	48 83 ec 20          	sub    $0x20,%rsp
    ce3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ce3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ce42:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ce47:	74 40                	je     ce89 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    ce49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce4d:	48 89 c7             	mov    %rax,%rdi
    ce50:	e8 3c 08 00 00       	call   d691 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    ce55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    ce59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5d:	48 89 c7             	mov    %rax,%rdi
    ce60:	e8 3a 08 00 00       	call   d69f <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    ce65:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    ce6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ce6e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    ce72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce7a:	48 89 ce             	mov    %rcx,%rsi
    ce7d:	48 89 c7             	mov    %rax,%rdi
    ce80:	e8 40 08 00 00       	call   d6c5 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    ce85:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ce89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ce8d:	c9                   	leave
    ce8e:	c3                   	ret
    ce8f:	90                   	nop

000000000000ce90 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ce90:	55                   	push   %rbp
    ce91:	48 89 e5             	mov    %rsp,%rbp
    ce94:	48 83 ec 10          	sub    $0x10,%rsp
    ce98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ce9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cea0:	48 89 c7             	mov    %rax,%rdi
    cea3:	e8 62 08 00 00       	call   d70a <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    cea8:	c9                   	leave
    cea9:	c3                   	ret

000000000000ceaa <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    ceaa:	55                   	push   %rbp
    ceab:	48 89 e5             	mov    %rsp,%rbp
    ceae:	48 83 ec 10          	sub    $0x10,%rsp
    ceb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ceb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ceba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec2:	ba 00 00 00 00       	mov    $0x0,%edx
    cec7:	48 89 ce             	mov    %rcx,%rsi
    ceca:	48 89 c7             	mov    %rax,%rdi
    cecd:	e8 4c 08 00 00       	call   d71e <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    ced2:	c9                   	leave
    ced3:	c3                   	ret

000000000000ced4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ced4:	55                   	push   %rbp
    ced5:	48 89 e5             	mov    %rsp,%rbp
    ced8:	48 83 ec 20          	sub    $0x20,%rsp
    cedc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cee0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    cee4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cee9:	74 40                	je     cf2b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    ceeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceef:	48 89 c7             	mov    %rax,%rdi
    cef2:	e8 88 08 00 00       	call   d77f <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    cef7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    cefb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceff:	48 89 c7             	mov    %rax,%rdi
    cf02:	e8 86 08 00 00       	call   d78d <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    cf07:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    cf0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf10:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    cf14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf1c:	48 89 ce             	mov    %rcx,%rsi
    cf1f:	48 89 c7             	mov    %rax,%rdi
    cf22:	e8 8d 08 00 00       	call   d7b4 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    cf27:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    cf2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    cf2f:	c9                   	leave
    cf30:	c3                   	ret
    cf31:	90                   	nop

000000000000cf32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    cf32:	55                   	push   %rbp
    cf33:	48 89 e5             	mov    %rsp,%rbp
    cf36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    cf3a:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    cf41:	03 3f 00 
      }
    cf44:	5d                   	pop    %rbp
    cf45:	c3                   	ret

000000000000cf46 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    cf46:	55                   	push   %rbp
    cf47:	48 89 e5             	mov    %rsp,%rbp
    cf4a:	48 83 ec 20          	sub    $0x20,%rsp
    cf4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    cf5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf5e:	48 89 c7             	mov    %rax,%rdi
    cf61:	e8 cc ff ff ff       	call   cf32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    cf66:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cf6a:	0f 92 c0             	setb   %al
    cf6d:	0f b6 c0             	movzbl %al,%eax
    cf70:	48 85 c0             	test   %rax,%rax
    cf73:	0f 95 c0             	setne  %al
    cf76:	84 c0                	test   %al,%al
    cf78:	74 1a                	je     cf94 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    cf7a:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    cf81:	07 7e 00 
    cf84:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cf88:	73 05                	jae    cf8f <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    cf8a:	e8 81 73 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    cf8f:	e8 7c 71 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cf94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf98:	48 89 d0             	mov    %rdx,%rax
    cf9b:	48 c1 e0 06          	shl    $0x6,%rax
    cf9f:	48 01 d0             	add    %rdx,%rax
    cfa2:	48 c1 e0 03          	shl    $0x3,%rax
    cfa6:	48 89 c7             	mov    %rax,%rdi
    cfa9:	e8 d2 74 ff ff       	call   4480 <_Znwm@plt>
    cfae:	90                   	nop
      }
    cfaf:	c9                   	leave
    cfb0:	c3                   	ret

000000000000cfb1 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cfb1:	55                   	push   %rbp
    cfb2:	48 89 e5             	mov    %rsp,%rbp
    cfb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    cfb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfbd:	5d                   	pop    %rbp
    cfbe:	c3                   	ret

000000000000cfbf <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    cfbf:	55                   	push   %rbp
    cfc0:	48 89 e5             	mov    %rsp,%rbp
    cfc3:	48 83 ec 10          	sub    $0x10,%rsp
    cfc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    cfcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfcf:	48 89 c6             	mov    %rax,%rsi
    cfd2:	bf 08 02 00 00       	mov    $0x208,%edi
    cfd7:	e8 9c 96 ff ff       	call   6678 <_ZnwmPv>
    cfdc:	b9 08 02 00 00       	mov    $0x208,%ecx
    cfe1:	be 00 00 00 00       	mov    $0x0,%esi
    cfe6:	48 89 30             	mov    %rsi,(%rax)
    cfe9:	89 ca                	mov    %ecx,%edx
    cfeb:	48 01 c2             	add    %rax,%rdx
    cfee:	48 83 c2 08          	add    $0x8,%rdx
    cff2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    cff6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cffa:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    cffe:	48 29 d0             	sub    %rdx,%rax
    d001:	01 c1                	add    %eax,%ecx
    d003:	83 e1 f8             	and    $0xfffffff8,%ecx
    d006:	89 c8                	mov    %ecx,%eax
    d008:	c1 e8 03             	shr    $0x3,%eax
    d00b:	89 c1                	mov    %eax,%ecx
    d00d:	48 89 d7             	mov    %rdx,%rdi
    d010:	48 89 f0             	mov    %rsi,%rax
    d013:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    d016:	90                   	nop
    d017:	c9                   	leave
    d018:	c3                   	ret

000000000000d019 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d019:	55                   	push   %rbp
    d01a:	48 89 e5             	mov    %rsp,%rbp
    d01d:	48 83 ec 20          	sub    $0x20,%rsp
    d021:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d025:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d029:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d02d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d031:	48 89 c7             	mov    %rax,%rdi
    d034:	e8 bf 07 00 00       	call   d7f8 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d039:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d03d:	48 89 c7             	mov    %rax,%rdi
    d040:	e8 45 96 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d045:	48 89 c1             	mov    %rax,%rcx
    d048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d050:	48 89 ce             	mov    %rcx,%rsi
    d053:	48 89 c7             	mov    %rax,%rdi
    d056:	e8 a8 07 00 00       	call   d803 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d05b:	c9                   	leave
    d05c:	c3                   	ret
    d05d:	90                   	nop

000000000000d05e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d05e:	55                   	push   %rbp
    d05f:	48 89 e5             	mov    %rsp,%rbp
    d062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d066:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    d06d:	07 7e 00 
      }
    d070:	5d                   	pop    %rbp
    d071:	c3                   	ret

000000000000d072 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d072:	55                   	push   %rbp
    d073:	48 89 e5             	mov    %rsp,%rbp
    d076:	48 83 ec 20          	sub    $0x20,%rsp
    d07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d082:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d08a:	48 89 c7             	mov    %rax,%rdi
    d08d:	e8 cc ff ff ff       	call   d05e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    d092:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d096:	0f 92 c0             	setb   %al
    d099:	0f b6 c0             	movzbl %al,%eax
    d09c:	48 85 c0             	test   %rax,%rax
    d09f:	0f 95 c0             	setne  %al
    d0a2:	84 c0                	test   %al,%al
    d0a4:	74 1a                	je     d0c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d0a6:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    d0ad:	0f fc 00 
    d0b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d0b4:	73 05                	jae    d0bb <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d0b6:	e8 55 72 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d0bb:	e8 50 70 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d0c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0c4:	48 89 d0             	mov    %rdx,%rax
    d0c7:	48 c1 e0 06          	shl    $0x6,%rax
    d0cb:	48 01 d0             	add    %rdx,%rax
    d0ce:	48 c1 e0 02          	shl    $0x2,%rax
    d0d2:	48 89 c7             	mov    %rax,%rdi
    d0d5:	e8 a6 73 ff ff       	call   4480 <_Znwm@plt>
    d0da:	90                   	nop
      }
    d0db:	c9                   	leave
    d0dc:	c3                   	ret

000000000000d0dd <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d0dd:	55                   	push   %rbp
    d0de:	48 89 e5             	mov    %rsp,%rbp
    d0e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e9:	5d                   	pop    %rbp
    d0ea:	c3                   	ret

000000000000d0eb <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d0eb:	55                   	push   %rbp
    d0ec:	48 89 e5             	mov    %rsp,%rbp
    d0ef:	48 83 ec 10          	sub    $0x10,%rsp
    d0f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d0f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0fb:	48 89 c6             	mov    %rax,%rsi
    d0fe:	bf 04 01 00 00       	mov    $0x104,%edi
    d103:	e8 70 95 ff ff       	call   6678 <_ZnwmPv>
    d108:	b9 04 01 00 00       	mov    $0x104,%ecx
    d10d:	be 00 00 00 00       	mov    $0x0,%esi
    d112:	48 89 30             	mov    %rsi,(%rax)
    d115:	89 ca                	mov    %ecx,%edx
    d117:	48 01 c2             	add    %rax,%rdx
    d11a:	48 83 c2 08          	add    $0x8,%rdx
    d11e:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    d122:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d126:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    d12a:	48 29 d0             	sub    %rdx,%rax
    d12d:	01 c1                	add    %eax,%ecx
    d12f:	83 e1 f8             	and    $0xfffffff8,%ecx
    d132:	89 c8                	mov    %ecx,%eax
    d134:	c1 e8 03             	shr    $0x3,%eax
    d137:	89 c1                	mov    %eax,%ecx
    d139:	48 89 d7             	mov    %rdx,%rdi
    d13c:	48 89 f0             	mov    %rsi,%rax
    d13f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    d142:	90                   	nop
    d143:	c9                   	leave
    d144:	c3                   	ret

000000000000d145 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d145:	55                   	push   %rbp
    d146:	48 89 e5             	mov    %rsp,%rbp
    d149:	48 83 ec 20          	sub    $0x20,%rsp
    d14d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d151:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d155:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d159:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d15d:	48 89 c7             	mov    %rax,%rdi
    d160:	e8 0d 07 00 00       	call   d872 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d165:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d169:	48 89 c7             	mov    %rax,%rdi
    d16c:	e8 19 95 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d171:	48 89 c1             	mov    %rax,%rcx
    d174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d178:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d17c:	48 89 ce             	mov    %rcx,%rsi
    d17f:	48 89 c7             	mov    %rax,%rdi
    d182:	e8 f6 06 00 00       	call   d87d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d187:	c9                   	leave
    d188:	c3                   	ret
    d189:	90                   	nop

000000000000d18a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d18a:	55                   	push   %rbp
    d18b:	48 89 e5             	mov    %rsp,%rbp
    d18e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d192:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d199:	ff ff 0f 
      }
    d19c:	5d                   	pop    %rbp
    d19d:	c3                   	ret

000000000000d19e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d19e:	55                   	push   %rbp
    d19f:	48 89 e5             	mov    %rsp,%rbp
    d1a2:	48 83 ec 20          	sub    $0x20,%rsp
    d1a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1b6:	48 89 c7             	mov    %rax,%rdi
    d1b9:	e8 cc ff ff ff       	call   d18a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    d1be:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d1c2:	0f 92 c0             	setb   %al
    d1c5:	0f b6 c0             	movzbl %al,%eax
    d1c8:	48 85 c0             	test   %rax,%rax
    d1cb:	0f 95 c0             	setne  %al
    d1ce:	84 c0                	test   %al,%al
    d1d0:	74 1a                	je     d1ec <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d1d2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d1d9:	ff ff 1f 
    d1dc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d1e0:	73 05                	jae    d1e7 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d1e2:	e8 29 71 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d1e7:	e8 24 6f ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d1ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d1f0:	48 c1 e0 03          	shl    $0x3,%rax
    d1f4:	48 89 c7             	mov    %rax,%rdi
    d1f7:	e8 84 72 ff ff       	call   4480 <_Znwm@plt>
    d1fc:	90                   	nop
      }
    d1fd:	c9                   	leave
    d1fe:	c3                   	ret

000000000000d1ff <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d1ff:	55                   	push   %rbp
    d200:	48 89 e5             	mov    %rsp,%rbp
    d203:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20b:	5d                   	pop    %rbp
    d20c:	c3                   	ret

000000000000d20d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d20d:	55                   	push   %rbp
    d20e:	48 89 e5             	mov    %rsp,%rbp
    d211:	48 83 ec 10          	sub    $0x10,%rsp
    d215:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d21d:	48 89 c6             	mov    %rax,%rsi
    d220:	bf 08 00 00 00       	mov    $0x8,%edi
    d225:	e8 4e 94 ff ff       	call   6678 <_ZnwmPv>
    d22a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    d231:	90                   	nop
    d232:	c9                   	leave
    d233:	c3                   	ret

000000000000d234 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d234:	55                   	push   %rbp
    d235:	48 89 e5             	mov    %rsp,%rbp
    d238:	48 83 ec 20          	sub    $0x20,%rsp
    d23c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d240:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d244:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d248:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d24c:	48 89 c7             	mov    %rax,%rdi
    d24f:	e8 98 06 00 00       	call   d8ec <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d254:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d258:	48 89 c7             	mov    %rax,%rdi
    d25b:	e8 2a 94 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d260:	48 89 c1             	mov    %rax,%rcx
    d263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d267:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d26b:	48 89 ce             	mov    %rcx,%rsi
    d26e:	48 89 c7             	mov    %rax,%rdi
    d271:	e8 81 06 00 00       	call   d8f7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    d276:	c9                   	leave
    d277:	c3                   	ret

000000000000d278 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d278:	55                   	push   %rbp
    d279:	48 89 e5             	mov    %rsp,%rbp
    d27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d280:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d287:	ff ff 0f 
      }
    d28a:	5d                   	pop    %rbp
    d28b:	c3                   	ret

000000000000d28c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d28c:	55                   	push   %rbp
    d28d:	48 89 e5             	mov    %rsp,%rbp
    d290:	48 83 ec 20          	sub    $0x20,%rsp
    d294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d29c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d2a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2a4:	48 89 c7             	mov    %rax,%rdi
    d2a7:	e8 cc ff ff ff       	call   d278 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    d2ac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2b0:	0f 92 c0             	setb   %al
    d2b3:	0f b6 c0             	movzbl %al,%eax
    d2b6:	48 85 c0             	test   %rax,%rax
    d2b9:	0f 95 c0             	setne  %al
    d2bc:	84 c0                	test   %al,%al
    d2be:	74 1a                	je     d2da <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d2c0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d2c7:	ff ff 1f 
    d2ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2ce:	73 05                	jae    d2d5 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d2d0:	e8 3b 70 ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d2d5:	e8 36 6e ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d2da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d2de:	48 c1 e0 03          	shl    $0x3,%rax
    d2e2:	48 89 c7             	mov    %rax,%rdi
    d2e5:	e8 96 71 ff ff       	call   4480 <_Znwm@plt>
    d2ea:	90                   	nop
      }
    d2eb:	c9                   	leave
    d2ec:	c3                   	ret

000000000000d2ed <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d2ed:	55                   	push   %rbp
    d2ee:	48 89 e5             	mov    %rsp,%rbp
    d2f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d2f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f9:	5d                   	pop    %rbp
    d2fa:	c3                   	ret

000000000000d2fb <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d2fb:	55                   	push   %rbp
    d2fc:	48 89 e5             	mov    %rsp,%rbp
    d2ff:	48 83 ec 10          	sub    $0x10,%rsp
    d303:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d30b:	48 89 c6             	mov    %rax,%rsi
    d30e:	bf 08 00 00 00       	mov    $0x8,%edi
    d313:	e8 60 93 ff ff       	call   6678 <_ZnwmPv>
    d318:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    d31f:	90                   	nop
    d320:	c9                   	leave
    d321:	c3                   	ret

000000000000d322 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d322:	55                   	push   %rbp
    d323:	48 89 e5             	mov    %rsp,%rbp
    d326:	48 83 ec 20          	sub    $0x20,%rsp
    d32a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d32e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d332:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d336:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d33a:	48 89 c7             	mov    %rax,%rdi
    d33d:	e8 12 06 00 00       	call   d954 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d342:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d346:	48 89 c7             	mov    %rax,%rdi
    d349:	e8 3c 93 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d34e:	48 89 c1             	mov    %rax,%rcx
    d351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d355:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d359:	48 89 ce             	mov    %rcx,%rsi
    d35c:	48 89 c7             	mov    %rax,%rdi
    d35f:	e8 fb 05 00 00       	call   d95f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    d364:	c9                   	leave
    d365:	c3                   	ret

000000000000d366 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d366:	55                   	push   %rbp
    d367:	48 89 e5             	mov    %rsp,%rbp
    d36a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d36e:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    d375:	55 55 05 
      }
    d378:	5d                   	pop    %rbp
    d379:	c3                   	ret

000000000000d37a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d37a:	55                   	push   %rbp
    d37b:	48 89 e5             	mov    %rsp,%rbp
    d37e:	48 83 ec 20          	sub    $0x20,%rsp
    d382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d38a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d38e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d392:	48 89 c7             	mov    %rax,%rdi
    d395:	e8 cc ff ff ff       	call   d366 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    d39a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d39e:	0f 92 c0             	setb   %al
    d3a1:	0f b6 c0             	movzbl %al,%eax
    d3a4:	48 85 c0             	test   %rax,%rax
    d3a7:	0f 95 c0             	setne  %al
    d3aa:	84 c0                	test   %al,%al
    d3ac:	74 1a                	je     d3c8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d3ae:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    d3b5:	aa aa 0a 
    d3b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d3bc:	73 05                	jae    d3c3 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d3be:	e8 4d 6f ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d3c3:	e8 48 6d ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d3c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3cc:	48 89 d0             	mov    %rdx,%rax
    d3cf:	48 01 c0             	add    %rax,%rax
    d3d2:	48 01 d0             	add    %rdx,%rax
    d3d5:	48 c1 e0 03          	shl    $0x3,%rax
    d3d9:	48 89 c7             	mov    %rax,%rdi
    d3dc:	e8 9f 70 ff ff       	call   4480 <_Znwm@plt>
    d3e1:	90                   	nop
      }
    d3e2:	c9                   	leave
    d3e3:	c3                   	ret

000000000000d3e4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d3e4:	55                   	push   %rbp
    d3e5:	48 89 e5             	mov    %rsp,%rbp
    d3e8:	48 83 ec 10          	sub    $0x10,%rsp
    d3ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d3f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3f4:	48 89 c6             	mov    %rax,%rsi
    d3f7:	bf 18 00 00 00       	mov    $0x18,%edi
    d3fc:	e8 77 92 ff ff       	call   6678 <_ZnwmPv>
    d401:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    d407:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    d40e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    d415:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    d41c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    d423:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    d42a:	90                   	nop
    d42b:	c9                   	leave
    d42c:	c3                   	ret

000000000000d42d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d42d:	55                   	push   %rbp
    d42e:	48 89 e5             	mov    %rsp,%rbp
    d431:	48 83 ec 20          	sub    $0x20,%rsp
    d435:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d439:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d43d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d441:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d445:	48 89 c7             	mov    %rax,%rdi
    d448:	e8 6f 05 00 00       	call   d9bc <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d44d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d451:	48 89 c7             	mov    %rax,%rdi
    d454:	e8 31 92 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d459:	48 89 c1             	mov    %rax,%rcx
    d45c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d460:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d464:	48 89 ce             	mov    %rcx,%rsi
    d467:	48 89 c7             	mov    %rax,%rdi
    d46a:	e8 58 05 00 00       	call   d9c7 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d46f:	c9                   	leave
    d470:	c3                   	ret
    d471:	90                   	nop

000000000000d472 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d472:	55                   	push   %rbp
    d473:	48 89 e5             	mov    %rsp,%rbp
    d476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d47a:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    d481:	49 92 04 
      }
    d484:	5d                   	pop    %rbp
    d485:	c3                   	ret

000000000000d486 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d486:	55                   	push   %rbp
    d487:	48 89 e5             	mov    %rsp,%rbp
    d48a:	48 83 ec 20          	sub    $0x20,%rsp
    d48e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d492:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d496:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d49e:	48 89 c7             	mov    %rax,%rdi
    d4a1:	e8 cc ff ff ff       	call   d472 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    d4a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d4aa:	0f 92 c0             	setb   %al
    d4ad:	0f b6 c0             	movzbl %al,%eax
    d4b0:	48 85 c0             	test   %rax,%rax
    d4b3:	0f 95 c0             	setne  %al
    d4b6:	84 c0                	test   %al,%al
    d4b8:	74 1a                	je     d4d4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d4ba:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    d4c1:	92 24 09 
    d4c4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d4c8:	73 05                	jae    d4cf <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d4ca:	e8 41 6e ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d4cf:	e8 3c 6c ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d4d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d4d8:	48 89 d0             	mov    %rdx,%rax
    d4db:	48 c1 e0 03          	shl    $0x3,%rax
    d4df:	48 29 d0             	sub    %rdx,%rax
    d4e2:	48 c1 e0 02          	shl    $0x2,%rax
    d4e6:	48 89 c7             	mov    %rax,%rdi
    d4e9:	e8 92 6f ff ff       	call   4480 <_Znwm@plt>
    d4ee:	90                   	nop
      }
    d4ef:	c9                   	leave
    d4f0:	c3                   	ret

000000000000d4f1 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d4f1:	55                   	push   %rbp
    d4f2:	48 89 e5             	mov    %rsp,%rbp
    d4f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d4f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4fd:	5d                   	pop    %rbp
    d4fe:	c3                   	ret

000000000000d4ff <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d4ff:	55                   	push   %rbp
    d500:	48 89 e5             	mov    %rsp,%rbp
    d503:	48 83 ec 10          	sub    $0x10,%rsp
    d507:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d50f:	48 89 c6             	mov    %rax,%rsi
    d512:	bf 1c 00 00 00       	mov    $0x1c,%edi
    d517:	e8 5c 91 ff ff       	call   6678 <_ZnwmPv>
    d51c:	48 89 c7             	mov    %rax,%rdi
    d51f:	e8 6c 05 00 00       	call   da90 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    d524:	90                   	nop
    d525:	c9                   	leave
    d526:	c3                   	ret
    d527:	90                   	nop

000000000000d528 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d528:	55                   	push   %rbp
    d529:	48 89 e5             	mov    %rsp,%rbp
    d52c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d530:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d537:	ff ff 0f 
      }
    d53a:	5d                   	pop    %rbp
    d53b:	c3                   	ret

000000000000d53c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d53c:	55                   	push   %rbp
    d53d:	48 89 e5             	mov    %rsp,%rbp
    d540:	48 83 ec 20          	sub    $0x20,%rsp
    d544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d548:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d54c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d554:	48 89 c7             	mov    %rax,%rdi
    d557:	e8 cc ff ff ff       	call   d528 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    d55c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d560:	0f 92 c0             	setb   %al
    d563:	0f b6 c0             	movzbl %al,%eax
    d566:	48 85 c0             	test   %rax,%rax
    d569:	0f 95 c0             	setne  %al
    d56c:	84 c0                	test   %al,%al
    d56e:	74 1a                	je     d58a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d570:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d577:	ff ff 1f 
    d57a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d57e:	73 05                	jae    d585 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d580:	e8 8b 6d ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d585:	e8 86 6b ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d58a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d58e:	48 c1 e0 03          	shl    $0x3,%rax
    d592:	48 89 c7             	mov    %rax,%rdi
    d595:	e8 e6 6e ff ff       	call   4480 <_Znwm@plt>
    d59a:	90                   	nop
      }
    d59b:	c9                   	leave
    d59c:	c3                   	ret

000000000000d59d <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d59d:	55                   	push   %rbp
    d59e:	48 89 e5             	mov    %rsp,%rbp
    d5a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d5a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a9:	5d                   	pop    %rbp
    d5aa:	c3                   	ret

000000000000d5ab <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d5ab:	55                   	push   %rbp
    d5ac:	48 89 e5             	mov    %rsp,%rbp
    d5af:	48 83 ec 10          	sub    $0x10,%rsp
    d5b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d5b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5bb:	48 89 c6             	mov    %rax,%rsi
    d5be:	bf 08 00 00 00       	mov    $0x8,%edi
    d5c3:	e8 b0 90 ff ff       	call   6678 <_ZnwmPv>
    d5c8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    d5ce:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    d5d5:	90                   	nop
    d5d6:	c9                   	leave
    d5d7:	c3                   	ret

000000000000d5d8 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d5d8:	55                   	push   %rbp
    d5d9:	48 89 e5             	mov    %rsp,%rbp
    d5dc:	48 83 ec 20          	sub    $0x20,%rsp
    d5e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d5e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d5ec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d5f0:	48 89 c7             	mov    %rax,%rdi
    d5f3:	e8 b3 04 00 00       	call   daab <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d5f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d5fc:	48 89 c7             	mov    %rax,%rdi
    d5ff:	e8 86 90 ff ff       	call   668a <_ZSt17__size_to_integerm>
    d604:	48 89 c1             	mov    %rax,%rcx
    d607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d60b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d60f:	48 89 ce             	mov    %rcx,%rsi
    d612:	48 89 c7             	mov    %rax,%rdi
    d615:	e8 9c 04 00 00       	call   dab6 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d61a:	c9                   	leave
    d61b:	c3                   	ret

000000000000d61c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d61c:	55                   	push   %rbp
    d61d:	48 89 e5             	mov    %rsp,%rbp
    d620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d624:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d62b:	ff ff 1f 
      }
    d62e:	5d                   	pop    %rbp
    d62f:	c3                   	ret

000000000000d630 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d630:	55                   	push   %rbp
    d631:	48 89 e5             	mov    %rsp,%rbp
    d634:	48 83 ec 20          	sub    $0x20,%rsp
    d638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d63c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d640:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d648:	48 89 c7             	mov    %rax,%rdi
    d64b:	e8 cc ff ff ff       	call   d61c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    d650:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d654:	0f 92 c0             	setb   %al
    d657:	0f b6 c0             	movzbl %al,%eax
    d65a:	48 85 c0             	test   %rax,%rax
    d65d:	0f 95 c0             	setne  %al
    d660:	84 c0                	test   %al,%al
    d662:	74 1a                	je     d67e <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d664:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    d66b:	ff ff 3f 
    d66e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d672:	73 05                	jae    d679 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d674:	e8 97 6c ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d679:	e8 92 6a ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d67e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d682:	48 c1 e0 02          	shl    $0x2,%rax
    d686:	48 89 c7             	mov    %rax,%rdi
    d689:	e8 f2 6d ff ff       	call   4480 <_Znwm@plt>
    d68e:	90                   	nop
      }
    d68f:	c9                   	leave
    d690:	c3                   	ret

000000000000d691 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d691:	55                   	push   %rbp
    d692:	48 89 e5             	mov    %rsp,%rbp
    d695:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d69d:	5d                   	pop    %rbp
    d69e:	c3                   	ret

000000000000d69f <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d69f:	55                   	push   %rbp
    d6a0:	48 89 e5             	mov    %rsp,%rbp
    d6a3:	48 83 ec 10          	sub    $0x10,%rsp
    d6a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d6ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6af:	48 89 c6             	mov    %rax,%rsi
    d6b2:	bf 04 00 00 00       	mov    $0x4,%edi
    d6b7:	e8 bc 8f ff ff       	call   6678 <_ZnwmPv>
    d6bc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    d6c2:	90                   	nop
    d6c3:	c9                   	leave
    d6c4:	c3                   	ret

000000000000d6c5 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d6c5:	55                   	push   %rbp
    d6c6:	48 89 e5             	mov    %rsp,%rbp
    d6c9:	48 83 ec 20          	sub    $0x20,%rsp
    d6cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d6d9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d6dd:	48 89 c7             	mov    %rax,%rdi
    d6e0:	e8 2e 04 00 00       	call   db13 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d6e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d6e9:	48 89 c7             	mov    %rax,%rdi
    d6ec:	e8 99 8f ff ff       	call   668a <_ZSt17__size_to_integerm>
    d6f1:	48 89 c1             	mov    %rax,%rcx
    d6f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d6fc:	48 89 ce             	mov    %rcx,%rsi
    d6ff:	48 89 c7             	mov    %rax,%rdi
    d702:	e8 17 04 00 00       	call   db1e <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    d707:	c9                   	leave
    d708:	c3                   	ret
    d709:	90                   	nop

000000000000d70a <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    d70a:	55                   	push   %rbp
    d70b:	48 89 e5             	mov    %rsp,%rbp
    d70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    d712:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d719:	ff ff 0f 
      }
    d71c:	5d                   	pop    %rbp
    d71d:	c3                   	ret

000000000000d71e <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    d71e:	55                   	push   %rbp
    d71f:	48 89 e5             	mov    %rsp,%rbp
    d722:	48 83 ec 20          	sub    $0x20,%rsp
    d726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d72a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d72e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    d732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d736:	48 89 c7             	mov    %rax,%rdi
    d739:	e8 cc ff ff ff       	call   d70a <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    d73e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d742:	0f 92 c0             	setb   %al
    d745:	0f b6 c0             	movzbl %al,%eax
    d748:	48 85 c0             	test   %rax,%rax
    d74b:	0f 95 c0             	setne  %al
    d74e:	84 c0                	test   %al,%al
    d750:	74 1a                	je     d76c <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    d752:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d759:	ff ff 1f 
    d75c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d760:	73 05                	jae    d767 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    d762:	e8 a9 6b ff ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    d767:	e8 a4 69 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    d76c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d770:	48 c1 e0 03          	shl    $0x3,%rax
    d774:	48 89 c7             	mov    %rax,%rdi
    d777:	e8 04 6d ff ff       	call   4480 <_Znwm@plt>
    d77c:	90                   	nop
      }
    d77d:	c9                   	leave
    d77e:	c3                   	ret

000000000000d77f <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d77f:	55                   	push   %rbp
    d780:	48 89 e5             	mov    %rsp,%rbp
    d783:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d78b:	5d                   	pop    %rbp
    d78c:	c3                   	ret

000000000000d78d <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d78d:	55                   	push   %rbp
    d78e:	48 89 e5             	mov    %rsp,%rbp
    d791:	48 83 ec 10          	sub    $0x10,%rsp
    d795:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d79d:	48 89 c6             	mov    %rax,%rsi
    d7a0:	bf 08 00 00 00       	mov    $0x8,%edi
    d7a5:	e8 ce 8e ff ff       	call   6678 <_ZnwmPv>
    d7aa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    d7b1:	90                   	nop
    d7b2:	c9                   	leave
    d7b3:	c3                   	ret

000000000000d7b4 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    d7b4:	55                   	push   %rbp
    d7b5:	48 89 e5             	mov    %rsp,%rbp
    d7b8:	48 83 ec 20          	sub    $0x20,%rsp
    d7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d7c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    d7c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d7cc:	48 89 c7             	mov    %rax,%rdi
    d7cf:	e8 a7 03 00 00       	call   db7b <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    d7d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d7d8:	48 89 c7             	mov    %rax,%rdi
    d7db:	e8 aa 8e ff ff       	call   668a <_ZSt17__size_to_integerm>
    d7e0:	48 89 c1             	mov    %rax,%rcx
    d7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d7eb:	48 89 ce             	mov    %rcx,%rsi
    d7ee:	48 89 c7             	mov    %rax,%rdi
    d7f1:	e8 90 03 00 00       	call   db86 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    d7f6:	c9                   	leave
    d7f7:	c3                   	ret

000000000000d7f8 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d7f8:	55                   	push   %rbp
    d7f9:	48 89 e5             	mov    %rsp,%rbp
    d7fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d800:	90                   	nop
    d801:	5d                   	pop    %rbp
    d802:	c3                   	ret

000000000000d803 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d803:	55                   	push   %rbp
    d804:	48 89 e5             	mov    %rsp,%rbp
    d807:	48 83 ec 20          	sub    $0x20,%rsp
    d80b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d80f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d813:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d817:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d81c:	75 06                	jne    d824 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d81e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d822:	eb 4c                	jmp    d870 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    d824:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d828:	48 89 d0             	mov    %rdx,%rax
    d82b:	48 c1 e0 06          	shl    $0x6,%rax
    d82f:	48 01 d0             	add    %rdx,%rax
    d832:	48 c1 e0 03          	shl    $0x3,%rax
    d836:	48 89 c2             	mov    %rax,%rdx
    d839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d83d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d841:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d849:	48 89 ce             	mov    %rcx,%rsi
    d84c:	48 89 c7             	mov    %rax,%rdi
    d84f:	e8 8f 03 00 00       	call   dbe3 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    d854:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d858:	48 89 d0             	mov    %rdx,%rax
    d85b:	48 c1 e0 06          	shl    $0x6,%rax
    d85f:	48 01 d0             	add    %rdx,%rax
    d862:	48 c1 e0 03          	shl    $0x3,%rax
    d866:	48 89 c2             	mov    %rax,%rdx
    d869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d86d:	48 01 d0             	add    %rdx,%rax
    }
    d870:	c9                   	leave
    d871:	c3                   	ret

000000000000d872 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d872:	55                   	push   %rbp
    d873:	48 89 e5             	mov    %rsp,%rbp
    d876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d87a:	90                   	nop
    d87b:	5d                   	pop    %rbp
    d87c:	c3                   	ret

000000000000d87d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d87d:	55                   	push   %rbp
    d87e:	48 89 e5             	mov    %rsp,%rbp
    d881:	48 83 ec 20          	sub    $0x20,%rsp
    d885:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d889:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d88d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d891:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d896:	75 06                	jne    d89e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d89c:	eb 4c                	jmp    d8ea <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    d89e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8a2:	48 89 d0             	mov    %rdx,%rax
    d8a5:	48 c1 e0 06          	shl    $0x6,%rax
    d8a9:	48 01 d0             	add    %rdx,%rax
    d8ac:	48 c1 e0 02          	shl    $0x2,%rax
    d8b0:	48 89 c2             	mov    %rax,%rdx
    d8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8b7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d8bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8c3:	48 89 ce             	mov    %rcx,%rsi
    d8c6:	48 89 c7             	mov    %rax,%rdi
    d8c9:	e8 43 03 00 00       	call   dc11 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    d8ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8d2:	48 89 d0             	mov    %rdx,%rax
    d8d5:	48 c1 e0 06          	shl    $0x6,%rax
    d8d9:	48 01 d0             	add    %rdx,%rax
    d8dc:	48 c1 e0 02          	shl    $0x2,%rax
    d8e0:	48 89 c2             	mov    %rax,%rdx
    d8e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8e7:	48 01 d0             	add    %rdx,%rax
    }
    d8ea:	c9                   	leave
    d8eb:	c3                   	ret

000000000000d8ec <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    d8ec:	55                   	push   %rbp
    d8ed:	48 89 e5             	mov    %rsp,%rbp
    d8f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d8f4:	90                   	nop
    d8f5:	5d                   	pop    %rbp
    d8f6:	c3                   	ret

000000000000d8f7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d8f7:	55                   	push   %rbp
    d8f8:	48 89 e5             	mov    %rsp,%rbp
    d8fb:	48 83 ec 20          	sub    $0x20,%rsp
    d8ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d907:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d90b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d910:	75 06                	jne    d918 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d916:	eb 3a                	jmp    d952 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d918:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d91c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d923:	00 
    d924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d928:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d92c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d934:	48 89 ce             	mov    %rcx,%rsi
    d937:	48 89 c7             	mov    %rax,%rdi
    d93a:	e8 00 03 00 00       	call   dc3f <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    d93f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d943:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d94a:	00 
    d94b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d94f:	48 01 d0             	add    %rdx,%rax
    }
    d952:	c9                   	leave
    d953:	c3                   	ret

000000000000d954 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    d954:	55                   	push   %rbp
    d955:	48 89 e5             	mov    %rsp,%rbp
    d958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d95c:	90                   	nop
    d95d:	5d                   	pop    %rbp
    d95e:	c3                   	ret

000000000000d95f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d95f:	55                   	push   %rbp
    d960:	48 89 e5             	mov    %rsp,%rbp
    d963:	48 83 ec 20          	sub    $0x20,%rsp
    d967:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d96b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d96f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d973:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d978:	75 06                	jne    d980 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d97e:	eb 3a                	jmp    d9ba <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d980:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d984:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d98b:	00 
    d98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d990:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d994:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d99c:	48 89 ce             	mov    %rcx,%rsi
    d99f:	48 89 c7             	mov    %rax,%rdi
    d9a2:	e8 c6 02 00 00       	call   dc6d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    d9a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d9ab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d9b2:	00 
    d9b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b7:	48 01 d0             	add    %rdx,%rax
    }
    d9ba:	c9                   	leave
    d9bb:	c3                   	ret

000000000000d9bc <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d9bc:	55                   	push   %rbp
    d9bd:	48 89 e5             	mov    %rsp,%rbp
    d9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d9c4:	90                   	nop
    d9c5:	5d                   	pop    %rbp
    d9c6:	c3                   	ret

000000000000d9c7 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d9c7:	55                   	push   %rbp
    d9c8:	48 89 e5             	mov    %rsp,%rbp
    d9cb:	48 83 ec 20          	sub    $0x20,%rsp
    d9cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d9d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d9db:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d9e0:	75 06                	jne    d9e8 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d9e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9e6:	eb 4a                	jmp    da32 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    d9e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9ec:	48 89 d0             	mov    %rdx,%rax
    d9ef:	48 01 c0             	add    %rax,%rax
    d9f2:	48 01 d0             	add    %rdx,%rax
    d9f5:	48 c1 e0 03          	shl    $0x3,%rax
    d9f9:	48 89 c2             	mov    %rax,%rdx
    d9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da00:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    da04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da0c:	48 89 ce             	mov    %rcx,%rsi
    da0f:	48 89 c7             	mov    %rax,%rdi
    da12:	e8 84 02 00 00       	call   dc9b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    da17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da1b:	48 89 d0             	mov    %rdx,%rax
    da1e:	48 01 c0             	add    %rax,%rax
    da21:	48 01 d0             	add    %rdx,%rax
    da24:	48 c1 e0 03          	shl    $0x3,%rax
    da28:	48 89 c2             	mov    %rax,%rdx
    da2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da2f:	48 01 d0             	add    %rdx,%rax
    }
    da32:	c9                   	leave
    da33:	c3                   	ret

000000000000da34 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    da34:	55                   	push   %rbp
    da35:	48 89 e5             	mov    %rsp,%rbp
    da38:	48 83 ec 10          	sub    $0x10,%rsp
    da3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da44:	48 89 c7             	mov    %rax,%rdi
    da47:	e8 7e 02 00 00       	call   dcca <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    da4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da50:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    da54:	90                   	nop
    da55:	c9                   	leave
    da56:	c3                   	ret
    da57:	90                   	nop

000000000000da58 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    da58:	55                   	push   %rbp
    da59:	48 89 e5             	mov    %rsp,%rbp
    da5c:	48 83 ec 10          	sub    $0x10,%rsp
    da60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da68:	48 89 c7             	mov    %rax,%rdi
    da6b:	e8 c4 ff ff ff       	call   da34 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    da70:	90                   	nop
    da71:	c9                   	leave
    da72:	c3                   	ret
    da73:	90                   	nop

000000000000da74 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    da74:	55                   	push   %rbp
    da75:	48 89 e5             	mov    %rsp,%rbp
    da78:	48 83 ec 10          	sub    $0x10,%rsp
    da7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da84:	48 89 c7             	mov    %rax,%rdi
    da87:	e8 cc ff ff ff       	call   da58 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    da8c:	90                   	nop
    da8d:	c9                   	leave
    da8e:	c3                   	ret
    da8f:	90                   	nop

000000000000da90 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    da90:	55                   	push   %rbp
    da91:	48 89 e5             	mov    %rsp,%rbp
    da94:	48 83 ec 10          	sub    $0x10,%rsp
    da98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daa0:	48 89 c7             	mov    %rax,%rdi
    daa3:	e8 cc ff ff ff       	call   da74 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    daa8:	90                   	nop
    daa9:	c9                   	leave
    daaa:	c3                   	ret

000000000000daab <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    daab:	55                   	push   %rbp
    daac:	48 89 e5             	mov    %rsp,%rbp
    daaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    dab3:	90                   	nop
    dab4:	5d                   	pop    %rbp
    dab5:	c3                   	ret

000000000000dab6 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    dab6:	55                   	push   %rbp
    dab7:	48 89 e5             	mov    %rsp,%rbp
    daba:	48 83 ec 20          	sub    $0x20,%rsp
    dabe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dac6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    daca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dacf:	75 06                	jne    dad7 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    dad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dad5:	eb 3a                	jmp    db11 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    dad7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dadb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dae2:	00 
    dae3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dae7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    daeb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    daef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daf3:	48 89 ce             	mov    %rcx,%rsi
    daf6:	48 89 c7             	mov    %rax,%rdi
    daf9:	e8 d7 01 00 00       	call   dcd5 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    dafe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db02:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    db09:	00 
    db0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db0e:	48 01 d0             	add    %rdx,%rax
    }
    db11:	c9                   	leave
    db12:	c3                   	ret

000000000000db13 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    db13:	55                   	push   %rbp
    db14:	48 89 e5             	mov    %rsp,%rbp
    db17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    db1b:	90                   	nop
    db1c:	5d                   	pop    %rbp
    db1d:	c3                   	ret

000000000000db1e <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    db1e:	55                   	push   %rbp
    db1f:	48 89 e5             	mov    %rsp,%rbp
    db22:	48 83 ec 20          	sub    $0x20,%rsp
    db26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    db32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    db37:	75 06                	jne    db3f <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    db39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db3d:	eb 3a                	jmp    db79 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    db3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db43:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    db4a:	00 
    db4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db4f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    db53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    db57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db5b:	48 89 ce             	mov    %rcx,%rsi
    db5e:	48 89 c7             	mov    %rax,%rdi
    db61:	e8 9d 01 00 00       	call   dd03 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    db66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db6a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    db71:	00 
    db72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db76:	48 01 d0             	add    %rdx,%rax
    }
    db79:	c9                   	leave
    db7a:	c3                   	ret

000000000000db7b <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    db7b:	55                   	push   %rbp
    db7c:	48 89 e5             	mov    %rsp,%rbp
    db7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    db83:	90                   	nop
    db84:	5d                   	pop    %rbp
    db85:	c3                   	ret

000000000000db86 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    db86:	55                   	push   %rbp
    db87:	48 89 e5             	mov    %rsp,%rbp
    db8a:	48 83 ec 20          	sub    $0x20,%rsp
    db8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    db9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    db9f:	75 06                	jne    dba7 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    dba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba5:	eb 3a                	jmp    dbe1 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    dba7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dbb2:	00 
    dbb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbb7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    dbbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbc3:	48 89 ce             	mov    %rcx,%rsi
    dbc6:	48 89 c7             	mov    %rax,%rdi
    dbc9:	e8 63 01 00 00       	call   dd31 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    dbce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dbd9:	00 
    dbda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbde:	48 01 d0             	add    %rdx,%rax
    }
    dbe1:	c9                   	leave
    dbe2:	c3                   	ret

000000000000dbe3 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dbe3:	55                   	push   %rbp
    dbe4:	48 89 e5             	mov    %rsp,%rbp
    dbe7:	48 83 ec 20          	sub    $0x20,%rsp
    dbeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dbf3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dbf7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbfb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dbff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc03:	48 89 ce             	mov    %rcx,%rsi
    dc06:	48 89 c7             	mov    %rax,%rdi
    dc09:	e8 51 01 00 00       	call   dd5f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dc0e:	90                   	nop
    dc0f:	c9                   	leave
    dc10:	c3                   	ret

000000000000dc11 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc11:	55                   	push   %rbp
    dc12:	48 89 e5             	mov    %rsp,%rbp
    dc15:	48 83 ec 20          	sub    $0x20,%rsp
    dc19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dc25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc31:	48 89 ce             	mov    %rcx,%rsi
    dc34:	48 89 c7             	mov    %rax,%rdi
    dc37:	e8 9b 01 00 00       	call   ddd7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dc3c:	90                   	nop
    dc3d:	c9                   	leave
    dc3e:	c3                   	ret

000000000000dc3f <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc3f:	55                   	push   %rbp
    dc40:	48 89 e5             	mov    %rsp,%rbp
    dc43:	48 83 ec 20          	sub    $0x20,%rsp
    dc47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc4f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dc53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc57:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc5f:	48 89 ce             	mov    %rcx,%rsi
    dc62:	48 89 c7             	mov    %rax,%rdi
    dc65:	e8 e5 01 00 00       	call   de4f <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    dc6a:	90                   	nop
    dc6b:	c9                   	leave
    dc6c:	c3                   	ret

000000000000dc6d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc6d:	55                   	push   %rbp
    dc6e:	48 89 e5             	mov    %rsp,%rbp
    dc71:	48 83 ec 20          	sub    $0x20,%rsp
    dc75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dc81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc8d:	48 89 ce             	mov    %rcx,%rsi
    dc90:	48 89 c7             	mov    %rax,%rdi
    dc93:	e8 f2 01 00 00       	call   de8a <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    dc98:	90                   	nop
    dc99:	c9                   	leave
    dc9a:	c3                   	ret

000000000000dc9b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dc9b:	55                   	push   %rbp
    dc9c:	48 89 e5             	mov    %rsp,%rbp
    dc9f:	48 83 ec 20          	sub    $0x20,%rsp
    dca3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dca7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dcaf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dcb3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dcb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcbb:	48 89 ce             	mov    %rcx,%rsi
    dcbe:	48 89 c7             	mov    %rax,%rdi
    dcc1:	e8 ff 01 00 00       	call   dec5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dcc6:	90                   	nop
    dcc7:	c9                   	leave
    dcc8:	c3                   	ret
    dcc9:	90                   	nop

000000000000dcca <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    dcca:	55                   	push   %rbp
    dccb:	48 89 e5             	mov    %rsp,%rbp
    dcce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcd2:	90                   	nop
    dcd3:	5d                   	pop    %rbp
    dcd4:	c3                   	ret

000000000000dcd5 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dcd5:	55                   	push   %rbp
    dcd6:	48 89 e5             	mov    %rsp,%rbp
    dcd9:	48 83 ec 20          	sub    $0x20,%rsp
    dcdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dce1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dce5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dced:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dcf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcf5:	48 89 ce             	mov    %rcx,%rsi
    dcf8:	48 89 c7             	mov    %rax,%rdi
    dcfb:	e8 08 02 00 00       	call   df08 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dd00:	90                   	nop
    dd01:	c9                   	leave
    dd02:	c3                   	ret

000000000000dd03 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dd03:	55                   	push   %rbp
    dd04:	48 89 e5             	mov    %rsp,%rbp
    dd07:	48 83 ec 20          	sub    $0x20,%rsp
    dd0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dd17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd1b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd23:	48 89 ce             	mov    %rcx,%rsi
    dd26:	48 89 c7             	mov    %rax,%rdi
    dd29:	e8 0d 02 00 00       	call   df3b <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    dd2e:	90                   	nop
    dd2f:	c9                   	leave
    dd30:	c3                   	ret

000000000000dd31 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    dd31:	55                   	push   %rbp
    dd32:	48 89 e5             	mov    %rsp,%rbp
    dd35:	48 83 ec 20          	sub    $0x20,%rsp
    dd39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    dd45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd51:	48 89 ce             	mov    %rcx,%rsi
    dd54:	48 89 c7             	mov    %rax,%rdi
    dd57:	e8 10 02 00 00       	call   df6c <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    dd5c:	90                   	nop
    dd5d:	c9                   	leave
    dd5e:	c3                   	ret

000000000000dd5f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    dd5f:	55                   	push   %rbp
    dd60:	48 89 e5             	mov    %rsp,%rbp
    dd63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    dd6f:	eb 58                	jmp    ddc9 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    dd71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd79:	b9 08 02 00 00       	mov    $0x208,%ecx
    dd7e:	48 8b 32             	mov    (%rdx),%rsi
    dd81:	48 89 30             	mov    %rsi,(%rax)
    dd84:	89 ce                	mov    %ecx,%esi
    dd86:	48 01 c6             	add    %rax,%rsi
    dd89:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    dd8d:	89 ce                	mov    %ecx,%esi
    dd8f:	48 01 d6             	add    %rdx,%rsi
    dd92:	48 83 c6 08          	add    $0x8,%rsi
    dd96:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    dd9a:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    dd9e:	48 8d 78 08          	lea    0x8(%rax),%rdi
    dda2:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    dda6:	48 29 f8             	sub    %rdi,%rax
    dda9:	48 29 c2             	sub    %rax,%rdx
    ddac:	01 c1                	add    %eax,%ecx
    ddae:	83 e1 f8             	and    $0xfffffff8,%ecx
    ddb1:	89 c8                	mov    %ecx,%eax
    ddb3:	c1 e8 03             	shr    $0x3,%eax
    ddb6:	89 c0                	mov    %eax,%eax
    ddb8:	48 89 d6             	mov    %rdx,%rsi
    ddbb:	48 89 c1             	mov    %rax,%rcx
    ddbe:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    ddc1:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    ddc8:	00 
    ddc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddcd:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ddd1:	75 9e                	jne    dd71 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    ddd3:	90                   	nop
    ddd4:	90                   	nop
    ddd5:	5d                   	pop    %rbp
    ddd6:	c3                   	ret

000000000000ddd7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    ddd7:	55                   	push   %rbp
    ddd8:	48 89 e5             	mov    %rsp,%rbp
    dddb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dddf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dde3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    dde7:	eb 58                	jmp    de41 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    dde9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dded:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ddf1:	b9 04 01 00 00       	mov    $0x104,%ecx
    ddf6:	48 8b 32             	mov    (%rdx),%rsi
    ddf9:	48 89 30             	mov    %rsi,(%rax)
    ddfc:	89 ce                	mov    %ecx,%esi
    ddfe:	48 01 c6             	add    %rax,%rsi
    de01:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    de05:	89 ce                	mov    %ecx,%esi
    de07:	48 01 d6             	add    %rdx,%rsi
    de0a:	48 83 c6 08          	add    $0x8,%rsi
    de0e:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    de12:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    de16:	48 8d 78 08          	lea    0x8(%rax),%rdi
    de1a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    de1e:	48 29 f8             	sub    %rdi,%rax
    de21:	48 29 c2             	sub    %rax,%rdx
    de24:	01 c1                	add    %eax,%ecx
    de26:	83 e1 f8             	and    $0xfffffff8,%ecx
    de29:	89 c8                	mov    %ecx,%eax
    de2b:	c1 e8 03             	shr    $0x3,%eax
    de2e:	89 c0                	mov    %eax,%eax
    de30:	48 89 d6             	mov    %rdx,%rsi
    de33:	48 89 c1             	mov    %rax,%rcx
    de36:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    de39:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    de40:	00 
    de41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de45:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    de49:	75 9e                	jne    dde9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    de4b:	90                   	nop
    de4c:	90                   	nop
    de4d:	5d                   	pop    %rbp
    de4e:	c3                   	ret

000000000000de4f <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    de4f:	55                   	push   %rbp
    de50:	48 89 e5             	mov    %rsp,%rbp
    de53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    de5b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    de5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de63:	48 8b 00             	mov    (%rax),%rax
    de66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    de6a:	eb 10                	jmp    de7c <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    de6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de74:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    de77:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    de7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de80:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    de84:	75 e6                	jne    de6c <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    de86:	90                   	nop
    de87:	90                   	nop
    de88:	5d                   	pop    %rbp
    de89:	c3                   	ret

000000000000de8a <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    de8a:	55                   	push   %rbp
    de8b:	48 89 e5             	mov    %rsp,%rbp
    de8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    de96:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    de9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de9e:	48 8b 00             	mov    (%rax),%rax
    dea1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    dea5:	eb 10                	jmp    deb7 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    dea7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    deab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    deaf:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    deb2:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    deb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    debb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    debf:	75 e6                	jne    dea7 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    dec1:	90                   	nop
    dec2:	90                   	nop
    dec3:	5d                   	pop    %rbp
    dec4:	c3                   	ret

000000000000dec5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    dec5:	55                   	push   %rbp
    dec6:	48 89 e5             	mov    %rsp,%rbp
    dec9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    decd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ded1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    ded5:	eb 23                	jmp    defa <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    ded7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    dedb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    dedf:	48 8b 06             	mov    (%rsi),%rax
    dee2:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    dee6:	48 89 01             	mov    %rax,(%rcx)
    dee9:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    deed:	48 8b 46 10          	mov    0x10(%rsi),%rax
    def1:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    def5:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    defa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    defe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    df02:	75 d3                	jne    ded7 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    df04:	90                   	nop
    df05:	90                   	nop
    df06:	5d                   	pop    %rbp
    df07:	c3                   	ret

000000000000df08 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    df08:	55                   	push   %rbp
    df09:	48 89 e5             	mov    %rsp,%rbp
    df0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    df18:	eb 13                	jmp    df2d <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    df1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    df22:	48 8b 12             	mov    (%rdx),%rdx
    df25:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    df28:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    df2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df31:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    df35:	75 e3                	jne    df1a <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    df37:	90                   	nop
    df38:	90                   	nop
    df39:	5d                   	pop    %rbp
    df3a:	c3                   	ret

000000000000df3b <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    df3b:	55                   	push   %rbp
    df3c:	48 89 e5             	mov    %rsp,%rbp
    df3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df47:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    df4b:	eb 11                	jmp    df5e <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    df4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df51:	8b 10                	mov    (%rax),%edx
    df53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df57:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    df59:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    df5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df62:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    df66:	75 e5                	jne    df4d <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    df68:	90                   	nop
    df69:	90                   	nop
    df6a:	5d                   	pop    %rbp
    df6b:	c3                   	ret

000000000000df6c <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    df6c:	55                   	push   %rbp
    df6d:	48 89 e5             	mov    %rsp,%rbp
    df70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    df78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    df7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df80:	48 8b 00             	mov    (%rax),%rax
    df83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    df87:	eb 10                	jmp    df99 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    df89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df8d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    df91:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    df94:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    df99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df9d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    dfa1:	75 e6                	jne    df89 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    dfa3:	90                   	nop
    dfa4:	90                   	nop
    dfa5:	5d                   	pop    %rbp
    dfa6:	c3                   	ret

000000000000dfa7 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    dfa7:	55                   	push   %rbp
    dfa8:	48 89 e5             	mov    %rsp,%rbp
    dfab:	53                   	push   %rbx
    dfac:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    dfb0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    dfb4:	be 00 00 00 00       	mov    $0x0,%esi
    dfb9:	48 89 c7             	mov    %rax,%rdi
    dfbc:	e8 bf 65 ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    dfc1:	8b 45 c8             	mov    -0x38(%rbp),%eax
    dfc4:	89 c3                	mov    %eax,%ebx
    dfc6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dfca:	48 89 c7             	mov    %rax,%rdi
    dfcd:	e8 ea b6 ff ff       	call   96bc <_ZNSaI17VkLayerPropertiesEC1Ev>
    dfd2:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    dfd6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    dfda:	48 89 de             	mov    %rbx,%rsi
    dfdd:	48 89 c7             	mov    %rax,%rdi
    dfe0:	e8 0f b7 ff ff       	call   96f4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    dfe5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dfe9:	48 89 c7             	mov    %rax,%rdi
    dfec:	e8 e7 b6 ff ff       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    dff1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    dff5:	48 89 c7             	mov    %rax,%rdi
    dff8:	e8 b1 b7 ff ff       	call   97ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    dffd:	48 89 c2             	mov    %rax,%rdx
    e000:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    e004:	48 89 d6             	mov    %rdx,%rsi
    e007:	48 89 c7             	mov    %rax,%rdi
    e00a:	e8 71 65 ff ff       	call   4580 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    e00f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e013:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e01b:	48 89 c7             	mov    %rax,%rdi
    e01e:	e8 63 04 00 00       	call   e486 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    e023:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e027:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e02b:	48 89 c7             	mov    %rax,%rdi
    e02e:	e8 79 04 00 00       	call   e4ac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    e033:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    e037:	eb 5b                	jmp    e094 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    e039:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    e03d:	48 89 c7             	mov    %rax,%rdi
    e040:	e8 ef 04 00 00       	call   e534 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    e045:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    e049:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e04d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e051:	48 89 d6             	mov    %rdx,%rsi
    e054:	48 89 c7             	mov    %rax,%rdi
    e057:	e8 f8 03 00 00       	call   e454 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    e05c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e060:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e064:	48 8b 3d 35 2c 02 00 	mov    0x22c35(%rip),%rdi        # 30ca0 <_ZN3vkh19validationLayerNameE>
    e06b:	48 8b 35 36 2c 02 00 	mov    0x22c36(%rip),%rsi        # 30ca8 <_ZN3vkh19validationLayerNameE+0x8>
    e072:	48 89 d1             	mov    %rdx,%rcx
    e075:	48 89 c2             	mov    %rax,%rdx
    e078:	e8 da 04 00 00       	call   e557 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    e07d:	84 c0                	test   %al,%al
    e07f:	74 07                	je     e088 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    e081:	bb 01 00 00 00       	mov    $0x1,%ebx
    e086:	eb 28                	jmp    e0b0 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    e088:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    e08c:	48 89 c7             	mov    %rax,%rdi
    e08f:	e8 7c 04 00 00       	call   e510 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    e094:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    e098:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    e09c:	48 89 d6             	mov    %rdx,%rsi
    e09f:	48 89 c7             	mov    %rax,%rdi
    e0a2:	e8 2e 04 00 00       	call   e4d5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e0a7:	84 c0                	test   %al,%al
    e0a9:	75 8e                	jne    e039 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    e0ab:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    e0b0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e0b4:	48 89 c7             	mov    %rax,%rdi
    e0b7:	e8 ae b6 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    e0bc:	89 d8                	mov    %ebx,%eax
    e0be:	eb 34                	jmp    e0f4 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    e0c0:	48 89 c3             	mov    %rax,%rbx
    e0c3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e0c7:	48 89 c7             	mov    %rax,%rdi
    e0ca:	e8 09 b6 ff ff       	call   96d8 <_ZNSaI17VkLayerPropertiesED1Ev>
    e0cf:	48 89 d8             	mov    %rbx,%rax
    e0d2:	48 89 c7             	mov    %rax,%rdi
    e0d5:	e8 26 68 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    e0da:	48 89 c3             	mov    %rax,%rbx
    e0dd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e0e1:	48 89 c7             	mov    %rax,%rdi
    e0e4:	e8 81 b6 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    e0e9:	48 89 d8             	mov    %rbx,%rax
    e0ec:	48 89 c7             	mov    %rax,%rdi
    e0ef:	e8 0c 68 ff ff       	call   4900 <_Unwind_Resume@plt>
    e0f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e0f8:	c9                   	leave
    e0f9:	c3                   	ret

000000000000e0fa <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    e0fa:	55                   	push   %rbp
    e0fb:	48 89 e5             	mov    %rsp,%rbp
    e0fe:	48 83 ec 20          	sub    $0x20,%rsp
    e102:	89 7d fc             	mov    %edi,-0x4(%rbp)
    e105:	89 75 f8             	mov    %esi,-0x8(%rbp)
    e108:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    e10c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    e110:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e113:	83 f8 01             	cmp    $0x1,%eax
    e116:	7e 3c                	jle    e154 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    e118:	be 0a 00 00 00       	mov    $0xa,%esi
    e11d:	48 8d 05 bc 33 02 00 	lea    0x233bc(%rip),%rax        # 314e0 <_ZSt4cerr@GLIBCXX_3.4>
    e124:	48 89 c7             	mov    %rax,%rdi
    e127:	e8 74 64 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    e12c:	48 89 c2             	mov    %rax,%rdx
    e12f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e133:	48 8b 40 28          	mov    0x28(%rax),%rax
    e137:	48 89 c6             	mov    %rax,%rsi
    e13a:	48 89 d7             	mov    %rdx,%rdi
    e13d:	e8 2e 63 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e142:	48 8b 15 4f 2e 02 00 	mov    0x22e4f(%rip),%rdx        # 30f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    e149:	48 89 d6             	mov    %rdx,%rsi
    e14c:	48 89 c7             	mov    %rax,%rdi
    e14f:	e8 9c 63 ff ff       	call   44f0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    e154:	b8 00 00 00 00       	mov    $0x0,%eax
}
    e159:	c9                   	leave
    e15a:	c3                   	ret

000000000000e15b <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    e15b:	55                   	push   %rbp
    e15c:	48 89 e5             	mov    %rsp,%rbp
    e15f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    e163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e167:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e16b:	0f 11 00             	movups %xmm0,(%rax)
    e16e:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    e172:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    e176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e17a:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    e180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e184:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    e18b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e18f:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    e196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e19a:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # e0fa <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    e1a1:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    e1a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a9:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    e1b0:	00 
}
    e1b1:	90                   	nop
    e1b2:	5d                   	pop    %rbp
    e1b3:	c3                   	ret

000000000000e1b4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    e1b4:	55                   	push   %rbp
    e1b5:	48 89 e5             	mov    %rsp,%rbp
    e1b8:	48 83 ec 30          	sub    $0x30,%rsp
    e1bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e1c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e1c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e1c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    e1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1d0:	48 8d 15 39 18 01 00 	lea    0x11839(%rip),%rdx        # 1fa10 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    e1d7:	48 89 d6             	mov    %rdx,%rsi
    e1da:	48 89 c7             	mov    %rax,%rdi
    e1dd:	e8 4e 62 ff ff       	call   4430 <vkGetInstanceProcAddr@plt>
    e1e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    e1e6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e1eb:	75 07                	jne    e1f4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    e1ed:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    e1f2:	eb 1b                	jmp    e20f <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    e1f4:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    e1f8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e1fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e200:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e208:	48 89 c7             	mov    %rax,%rdi
    e20b:	41 ff d0             	call   *%r8
    e20e:	90                   	nop
}
    e20f:	c9                   	leave
    e210:	c3                   	ret

000000000000e211 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    e211:	55                   	push   %rbp
    e212:	48 89 e5             	mov    %rsp,%rbp
    e215:	41 54                	push   %r12
    e217:	53                   	push   %rbx
    e218:	48 83 ec 50          	sub    $0x50,%rsp
    e21c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    e220:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e224:	48 89 c7             	mov    %rax,%rdi
    e227:	e8 2f ff ff ff       	call   e15b <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    e22c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    e233:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    e234:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    e238:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    e23c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e240:	48 89 d1             	mov    %rdx,%rcx
    e243:	ba 00 00 00 00       	mov    $0x0,%edx
    e248:	48 89 c7             	mov    %rax,%rdi
    e24b:	e8 64 ff ff ff       	call   e1b4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    e250:	85 c0                	test   %eax,%eax
    e252:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    e255:	84 c0                	test   %al,%al
    e257:	74 3b                	je     e294 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    e259:	bf 10 00 00 00       	mov    $0x10,%edi
    e25e:	e8 5d 5f ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    e263:	48 89 c3             	mov    %rax,%rbx
    e266:	48 8d 05 c3 17 01 00 	lea    0x117c3(%rip),%rax        # 1fa30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    e26d:	48 89 c6             	mov    %rax,%rsi
    e270:	48 89 df             	mov    %rbx,%rdi
    e273:	e8 b8 5e ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    e278:	48 8b 05 29 2d 02 00 	mov    0x22d29(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e27f:	48 89 c2             	mov    %rax,%rdx
    e282:	48 8d 05 b7 2a 02 00 	lea    0x22ab7(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e289:	48 89 c6             	mov    %rax,%rsi
    e28c:	48 89 df             	mov    %rbx,%rdi
    e28f:	e8 fc 65 ff ff       	call   4890 <__cxa_throw@plt>
  }
  return debugMessenger;
    e294:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e298:	eb 16                	jmp    e2b0 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    e29a:	49 89 c4             	mov    %rax,%r12
    e29d:	48 89 df             	mov    %rbx,%rdi
    e2a0:	e8 2b 60 ff ff       	call   42d0 <__cxa_free_exception@plt>
    e2a5:	4c 89 e0             	mov    %r12,%rax
    e2a8:	48 89 c7             	mov    %rax,%rdi
    e2ab:	e8 50 66 ff ff       	call   4900 <_Unwind_Resume@plt>
}
    e2b0:	48 83 c4 50          	add    $0x50,%rsp
    e2b4:	5b                   	pop    %rbx
    e2b5:	41 5c                	pop    %r12
    e2b7:	5d                   	pop    %rbp
    e2b8:	c3                   	ret

000000000000e2b9 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    e2b9:	55                   	push   %rbp
    e2ba:	48 89 e5             	mov    %rsp,%rbp
    e2bd:	48 83 ec 30          	sub    $0x30,%rsp
    e2c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e2c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e2c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    e2cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2d1:	48 8d 15 78 17 01 00 	lea    0x11778(%rip),%rdx        # 1fa50 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    e2d8:	48 89 d6             	mov    %rdx,%rsi
    e2db:	48 89 c7             	mov    %rax,%rdi
    e2de:	e8 4d 61 ff ff       	call   4430 <vkGetInstanceProcAddr@plt>
    e2e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    e2e7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e2ec:	74 19                	je     e307 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    e2ee:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    e2f2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e2f6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e2fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2fe:	48 89 ce             	mov    %rcx,%rsi
    e301:	48 89 c7             	mov    %rax,%rdi
    e304:	41 ff d0             	call   *%r8
  }
}
    e307:	90                   	nop
    e308:	c9                   	leave
    e309:	c3                   	ret

000000000000e30a <_Z41__static_initialization_and_destruction_0ii>:

    e30a:	55                   	push   %rbp
    e30b:	48 89 e5             	mov    %rsp,%rbp
    e30e:	48 83 ec 10          	sub    $0x10,%rsp
    e312:	89 7d fc             	mov    %edi,-0x4(%rbp)
    e315:	89 75 f8             	mov    %esi,-0x8(%rbp)
    e318:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    e31c:	75 3b                	jne    e359 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    e31e:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    e325:	75 32                	jne    e359 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    e327:	48 8d 05 1a 33 02 00 	lea    0x2331a(%rip),%rax        # 31648 <_ZStL8__ioinit>
    e32e:	48 89 c7             	mov    %rax,%rdi
    e331:	e8 6a 64 ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
    e336:	48 8d 05 7b 31 02 00 	lea    0x2317b(%rip),%rax        # 314b8 <__dso_handle>
    e33d:	48 89 c2             	mov    %rax,%rdx
    e340:	48 8d 05 01 33 02 00 	lea    0x23301(%rip),%rax        # 31648 <_ZStL8__ioinit>
    e347:	48 89 c6             	mov    %rax,%rsi
    e34a:	48 8b 05 77 2c 02 00 	mov    0x22c77(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    e351:	48 89 c7             	mov    %rax,%rdi
    e354:	e8 77 60 ff ff       	call   43d0 <__cxa_atexit@plt>
    e359:	90                   	nop
    e35a:	c9                   	leave
    e35b:	c3                   	ret

000000000000e35c <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    e35c:	55                   	push   %rbp
    e35d:	48 89 e5             	mov    %rsp,%rbp
    e360:	be ff ff 00 00       	mov    $0xffff,%esi
    e365:	bf 01 00 00 00       	mov    $0x1,%edi
    e36a:	e8 9b ff ff ff       	call   e30a <_Z41__static_initialization_and_destruction_0ii>
    e36f:	5d                   	pop    %rbp
    e370:	c3                   	ret

000000000000e371 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    e371:	55                   	push   %rbp
    e372:	48 89 e5             	mov    %rsp,%rbp
    e375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e379:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    e37d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e381:	0f b6 00             	movzbl (%rax),%eax
    e384:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    e386:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e38a:	0f b6 00             	movzbl (%rax),%eax
    e38d:	38 c2                	cmp    %al,%dl
    e38f:	0f 92 c0             	setb   %al
      }
    e392:	5d                   	pop    %rbp
    e393:	c3                   	ret

000000000000e394 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    e394:	55                   	push   %rbp
    e395:	48 89 e5             	mov    %rsp,%rbp
    e398:	48 83 ec 30          	sub    $0x30,%rsp
    e39c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e3a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    e3a8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e3ad:	75 0a                	jne    e3b9 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    e3af:	b8 00 00 00 00       	mov    $0x0,%eax
    e3b4:	e9 99 00 00 00       	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    e3b9:	e8 4f 6b ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
    e3be:	84 c0                	test   %al,%al
    e3c0:	74 78                	je     e43a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    e3c2:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    e3c9:	00 
    e3ca:	eb 5d                	jmp    e429 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    e3cc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e3d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3d4:	48 01 c2             	add    %rax,%rdx
    e3d7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e3db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3df:	48 01 c8             	add    %rcx,%rax
    e3e2:	48 89 d6             	mov    %rdx,%rsi
    e3e5:	48 89 c7             	mov    %rax,%rdi
    e3e8:	e8 84 ff ff ff       	call   e371 <_ZNSt11char_traitsIcE2ltERKcS2_>
    e3ed:	84 c0                	test   %al,%al
    e3ef:	74 07                	je     e3f8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    e3f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    e3f6:	eb 5a                	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    e3f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e400:	48 01 c2             	add    %rax,%rdx
    e403:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e40b:	48 01 c8             	add    %rcx,%rax
    e40e:	48 89 d6             	mov    %rdx,%rsi
    e411:	48 89 c7             	mov    %rax,%rdi
    e414:	e8 58 ff ff ff       	call   e371 <_ZNSt11char_traitsIcE2ltERKcS2_>
    e419:	84 c0                	test   %al,%al
    e41b:	74 07                	je     e424 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    e41d:	b8 01 00 00 00       	mov    $0x1,%eax
    e422:	eb 2e                	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    e424:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    e429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e42d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e431:	72 99                	jb     e3cc <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    e433:	b8 00 00 00 00       	mov    $0x0,%eax
    e438:	eb 18                	jmp    e452 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    e43a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e43e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e442:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e446:	48 89 ce             	mov    %rcx,%rsi
    e449:	48 89 c7             	mov    %rax,%rdi
    e44c:	e8 4f 5d ff ff       	call   41a0 <memcmp@plt>
    e451:	90                   	nop
      }
    e452:	c9                   	leave
    e453:	c3                   	ret

000000000000e454 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    e454:	55                   	push   %rbp
    e455:	48 89 e5             	mov    %rsp,%rbp
    e458:	48 83 ec 10          	sub    $0x10,%rsp
    e45c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e460:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    e464:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e468:	48 89 c7             	mov    %rax,%rdi
    e46b:	e8 a8 6a ff ff       	call   4f18 <_ZNSt11char_traitsIcE6lengthEPKc>
    e470:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e474:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    e477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e47b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e47f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    e483:	90                   	nop
    e484:	c9                   	leave
    e485:	c3                   	ret

000000000000e486 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e486:	55                   	push   %rbp
    e487:	48 89 e5             	mov    %rsp,%rbp
    e48a:	48 83 ec 20          	sub    $0x20,%rsp
    e48e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    e492:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e496:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e49a:	48 89 d6             	mov    %rdx,%rsi
    e49d:	48 89 c7             	mov    %rax,%rdi
    e4a0:	e8 27 01 00 00       	call   e5cc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4a9:	c9                   	leave
    e4aa:	c3                   	ret
    e4ab:	90                   	nop

000000000000e4ac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    e4ac:	55                   	push   %rbp
    e4ad:	48 89 e5             	mov    %rsp,%rbp
    e4b0:	48 83 ec 20          	sub    $0x20,%rsp
    e4b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    e4b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4bc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e4c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e4c4:	48 89 d6             	mov    %rdx,%rsi
    e4c7:	48 89 c7             	mov    %rax,%rdi
    e4ca:	e8 fd 00 00 00       	call   e5cc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e4cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4d3:	c9                   	leave
    e4d4:	c3                   	ret

000000000000e4d5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e4d5:	55                   	push   %rbp
    e4d6:	48 89 e5             	mov    %rsp,%rbp
    e4d9:	53                   	push   %rbx
    e4da:	48 83 ec 18          	sub    $0x18,%rsp
    e4de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e4e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e4e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4ea:	48 89 c7             	mov    %rax,%rdi
    e4ed:	e8 f8 00 00 00       	call   e5ea <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    e4f2:	48 8b 18             	mov    (%rax),%rbx
    e4f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4f9:	48 89 c7             	mov    %rax,%rdi
    e4fc:	e8 e9 00 00 00       	call   e5ea <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    e501:	48 8b 00             	mov    (%rax),%rax
    e504:	48 39 c3             	cmp    %rax,%rbx
    e507:	0f 95 c0             	setne  %al
    e50a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e50e:	c9                   	leave
    e50f:	c3                   	ret

000000000000e510 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e510:	55                   	push   %rbp
    e511:	48 89 e5             	mov    %rsp,%rbp
    e514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e51c:	48 8b 00             	mov    (%rax),%rax
    e51f:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    e526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e52a:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e531:	5d                   	pop    %rbp
    e532:	c3                   	ret
    e533:	90                   	nop

000000000000e534 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e534:	55                   	push   %rbp
    e535:	48 89 e5             	mov    %rsp,%rbp
    e538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e53c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e540:	48 8b 00             	mov    (%rax),%rax
    e543:	5d                   	pop    %rbp
    e544:	c3                   	ret
    e545:	90                   	nop

000000000000e546 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    e546:	55                   	push   %rbp
    e547:	48 89 e5             	mov    %rsp,%rbp
    e54a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    e54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e552:	48 8b 00             	mov    (%rax),%rax
    e555:	5d                   	pop    %rbp
    e556:	c3                   	ret

000000000000e557 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    e557:	55                   	push   %rbp
    e558:	48 89 e5             	mov    %rsp,%rbp
    e55b:	53                   	push   %rbx
    e55c:	48 83 ec 28          	sub    $0x28,%rsp
    e560:	48 89 f0             	mov    %rsi,%rax
    e563:	49 89 f8             	mov    %rdi,%r8
    e566:	4c 89 c6             	mov    %r8,%rsi
    e569:	4c 89 cf             	mov    %r9,%rdi
    e56c:	48 89 c7             	mov    %rax,%rdi
    e56f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e573:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e577:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    e57b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    e57f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e583:	48 89 c7             	mov    %rax,%rdi
    e586:	e8 bb ff ff ff       	call   e546 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    e58b:	48 89 c3             	mov    %rax,%rbx
    e58e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e592:	48 89 c7             	mov    %rax,%rdi
    e595:	e8 ac ff ff ff       	call   e546 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    e59a:	48 39 c3             	cmp    %rax,%rbx
    e59d:	75 22                	jne    e5c1 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    e59f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e5a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e5a7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e5ab:	48 89 ce             	mov    %rcx,%rsi
    e5ae:	48 89 c7             	mov    %rax,%rdi
    e5b1:	e8 42 00 00 00       	call   e5f8 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    e5b6:	85 c0                	test   %eax,%eax
    e5b8:	75 07                	jne    e5c1 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    e5ba:	b8 01 00 00 00       	mov    $0x1,%eax
    e5bf:	eb 05                	jmp    e5c6 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    e5c1:	b8 00 00 00 00       	mov    $0x0,%eax
    e5c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e5ca:	c9                   	leave
    e5cb:	c3                   	ret

000000000000e5cc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e5cc:	55                   	push   %rbp
    e5cd:	48 89 e5             	mov    %rsp,%rbp
    e5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e5d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5dc:	48 8b 10             	mov    (%rax),%rdx
    e5df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5e3:	48 89 10             	mov    %rdx,(%rax)
    e5e6:	90                   	nop
    e5e7:	5d                   	pop    %rbp
    e5e8:	c3                   	ret
    e5e9:	90                   	nop

000000000000e5ea <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e5ea:	55                   	push   %rbp
    e5eb:	48 89 e5             	mov    %rsp,%rbp
    e5ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5f6:	5d                   	pop    %rbp
    e5f7:	c3                   	ret

000000000000e5f8 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    e5f8:	55                   	push   %rbp
    e5f9:	48 89 e5             	mov    %rsp,%rbp
    e5fc:	48 83 ec 30          	sub    $0x30,%rsp
    e600:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e604:	48 89 d1             	mov    %rdx,%rcx
    e607:	48 89 f0             	mov    %rsi,%rax
    e60a:	48 89 fa             	mov    %rdi,%rdx
    e60d:	48 89 ca             	mov    %rcx,%rdx
    e610:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e614:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    e618:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e61c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e620:	48 89 d6             	mov    %rdx,%rsi
    e623:	48 89 c7             	mov    %rax,%rdi
    e626:	e8 92 76 ff ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
    e62b:	48 8b 00             	mov    (%rax),%rax
    e62e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    e632:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    e636:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e63a:	48 8b 40 08          	mov    0x8(%rax),%rax
    e63e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e642:	48 89 ce             	mov    %rcx,%rsi
    e645:	48 89 c7             	mov    %rax,%rdi
    e648:	e8 47 fd ff ff       	call   e394 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    e64d:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    e650:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    e654:	75 19                	jne    e66f <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    e656:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e65a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e65e:	48 8b 00             	mov    (%rax),%rax
    e661:	48 89 d6             	mov    %rdx,%rsi
    e664:	48 89 c7             	mov    %rax,%rdi
    e667:	e8 08 00 00 00       	call   e674 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    e66c:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    e66f:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    e672:	c9                   	leave
    e673:	c3                   	ret

000000000000e674 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    e674:	55                   	push   %rbp
    e675:	48 89 e5             	mov    %rsp,%rbp
    e678:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e67c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    e680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e684:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    e688:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    e68c:	b8 00 00 00 80       	mov    $0x80000000,%eax
    e691:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e695:	7c 07                	jl     e69e <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    e697:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    e69c:	eb 1b                	jmp    e6b9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    e69e:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    e6a5:	ff ff ff 
    e6a8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e6ac:	7f 07                	jg     e6b5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    e6ae:	b8 00 00 00 80       	mov    $0x80000000,%eax
    e6b3:	eb 04                	jmp    e6b9 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    e6b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e6b9:	5d                   	pop    %rbp
    e6ba:	c3                   	ret
    e6bb:	90                   	nop

000000000000e6bc <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    e6bc:	55                   	push   %rbp
    e6bd:	48 89 e5             	mov    %rsp,%rbp
    e6c0:	48 83 ec 10          	sub    $0x10,%rsp
    e6c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    e6c8:	e8 c3 5e ff ff       	call   4590 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    e6cd:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    e6d3:	b9 00 00 00 00       	mov    $0x0,%ecx
    e6d8:	48 8d 05 45 20 01 00 	lea    0x12045(%rip),%rax        # 20724 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    e6df:	48 89 c2             	mov    %rax,%rdx
    e6e2:	be 58 02 00 00       	mov    $0x258,%esi
    e6e7:	bf 20 03 00 00       	mov    $0x320,%edi
    e6ec:	e8 82 87 ff ff       	call   6e73 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    e6f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e6f5:	48 89 02             	mov    %rax,(%rdx)
  glfwSetWindowUserPointer(window, this);
    e6f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6fc:	48 8b 00             	mov    (%rax),%rax
    e6ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e703:	48 89 d6             	mov    %rdx,%rsi
    e706:	48 89 c7             	mov    %rax,%rdi
    e709:	e8 d2 5a ff ff       	call   41e0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    e70e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e712:	48 8b 00             	mov    (%rax),%rax
    e715:	48 8d 15 86 23 00 00 	lea    0x2386(%rip),%rdx        # 10aa2 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>
    e71c:	48 89 d6             	mov    %rdx,%rsi
    e71f:	48 89 c7             	mov    %rax,%rdi
    e722:	e8 69 60 ff ff       	call   4790 <glfwSetFramebufferSizeCallback@plt>
}
    e727:	90                   	nop
    e728:	c9                   	leave
    e729:	c3                   	ret

000000000000e72a <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    e72a:	55                   	push   %rbp
    e72b:	48 89 e5             	mov    %rsp,%rbp
    e72e:	53                   	push   %rbx
    e72f:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    e736:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    e73d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e741:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    e745:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    e749:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    e74d:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    e754:	48 8d 05 c9 1f 01 00 	lea    0x11fc9(%rip),%rax        # 20724 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    e75b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    e75f:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    e766:	48 8d 05 ca 1f 01 00 	lea    0x11fca(%rip),%rax        # 20737 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f>
    e76d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    e771:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    e778:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    e77f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e783:	48 89 c7             	mov    %rax,%rdi
    e786:	e8 4f a1 ff ff       	call   88da <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    e78b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e78f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e793:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e797:	48 89 c7             	mov    %rax,%rdi
    e79a:	e8 87 52 00 00       	call   13a26 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    e79f:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    e7a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7aa:	48 89 c7             	mov    %rax,%rdi
    e7ad:	e8 9a 52 00 00       	call   13a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    e7b2:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    e7b9:	eb 3c                	jmp    e7f7 <_ZN9VulkanApp14createInstanceEv+0xcd>
    e7bb:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    e7c2:	48 89 c7             	mov    %rax,%rdi
    e7c5:	e8 06 53 00 00       	call   13ad0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e7ca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    e7ce:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e7d5:	48 8d 50 10          	lea    0x10(%rax),%rdx
    e7d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e7dd:	48 89 c6             	mov    %rax,%rsi
    e7e0:	48 89 d7             	mov    %rdx,%rdi
    e7e3:	e8 fa 52 00 00       	call   13ae2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    e7e8:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    e7ef:	48 89 c7             	mov    %rax,%rdi
    e7f2:	e8 b9 52 00 00       	call   13ab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    e7f7:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    e7fe:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    e805:	48 89 d6             	mov    %rdx,%rsi
    e808:	48 89 c7             	mov    %rax,%rdi
    e80b:	e8 65 52 00 00       	call   13a75 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e810:	84 c0                	test   %al,%al
    e812:	75 a7                	jne    e7bb <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    e814:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e818:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    e81f:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e826:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    e82a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e831:	48 89 c7             	mov    %rax,%rdi
    e834:	e8 22 f9 ff ff       	call   e15b <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    e839:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    e840:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    e843:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e84a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    e851:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e855:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    e85c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e863:	48 83 c0 28          	add    $0x28,%rax
    e867:	48 89 c7             	mov    %rax,%rdi
    e86a:	e8 17 53 00 00       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    e86f:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    e875:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e87c:	48 83 c0 28          	add    $0x28,%rax
    e880:	48 89 c7             	mov    %rax,%rdi
    e883:	e8 22 53 00 00       	call   13baa <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    e888:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    e88f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e896:	48 83 c0 10          	add    $0x10,%rax
    e89a:	48 89 c7             	mov    %rax,%rdi
    e89d:	e8 e4 52 00 00       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    e8a2:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    e8a8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    e8af:	48 83 c0 10          	add    $0x10,%rax
    e8b3:	48 89 c7             	mov    %rax,%rdi
    e8b6:	e8 13 53 00 00       	call   13bce <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    e8bb:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    e8c2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e8c9:	be 00 00 00 00       	mov    $0x0,%esi
    e8ce:	48 89 c7             	mov    %rax,%rdi
    e8d1:	e8 e4 85 ff ff       	call   6eba <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    e8d6:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    e8dd:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    e8e1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e8e5:	48 89 c7             	mov    %rax,%rdi
    e8e8:	e8 f5 50 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e8ed:	eb 1a                	jmp    e909 <_ZN9VulkanApp14createInstanceEv+0x1df>
    e8ef:	48 89 c3             	mov    %rax,%rbx
    e8f2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e8f6:	48 89 c7             	mov    %rax,%rdi
    e8f9:	e8 e4 50 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e8fe:	48 89 d8             	mov    %rbx,%rax
    e901:	48 89 c7             	mov    %rax,%rdi
    e904:	e8 f7 5f ff ff       	call   4900 <_Unwind_Resume@plt>
    e909:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e90d:	c9                   	leave
    e90e:	c3                   	ret
    e90f:	90                   	nop

000000000000e910 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    e910:	55                   	push   %rbp
    e911:	48 89 e5             	mov    %rsp,%rbp
    e914:	41 54                	push   %r12
    e916:	53                   	push   %rbx
    e917:	48 83 ec 10          	sub    $0x10,%rsp
    e91b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    e91f:	e8 83 f6 ff ff       	call   dfa7 <_ZN3vkh27checkValidationLayerSupportEv>
    e924:	0f b6 c0             	movzbl %al,%eax
    e927:	85 c0                	test   %eax,%eax
    e929:	0f 94 c0             	sete   %al
    e92c:	84 c0                	test   %al,%al
    e92e:	74 3b                	je     e96b <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    e930:	bf 10 00 00 00       	mov    $0x10,%edi
    e935:	e8 86 58 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    e93a:	48 89 c3             	mov    %rax,%rbx
    e93d:	48 8d 05 04 1e 01 00 	lea    0x11e04(%rip),%rax        # 20748 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x40>
    e944:	48 89 c6             	mov    %rax,%rsi
    e947:	48 89 df             	mov    %rbx,%rdi
    e94a:	e8 e1 57 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    e94f:	48 8b 05 52 26 02 00 	mov    0x22652(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e956:	48 89 c2             	mov    %rax,%rdx
    e959:	48 8d 05 e0 23 02 00 	lea    0x223e0(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e960:	48 89 c6             	mov    %rax,%rsi
    e963:	48 89 df             	mov    %rbx,%rdi
    e966:	e8 25 5f ff ff       	call   4890 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    e96b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e96f:	48 8b 40 08          	mov    0x8(%rax),%rax
    e973:	48 89 c7             	mov    %rax,%rdi
    e976:	e8 96 f8 ff ff       	call   e211 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    e97b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e97f:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    e983:	eb 16                	jmp    e99b <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    e985:	49 89 c4             	mov    %rax,%r12
    e988:	48 89 df             	mov    %rbx,%rdi
    e98b:	e8 40 59 ff ff       	call   42d0 <__cxa_free_exception@plt>
    e990:	4c 89 e0             	mov    %r12,%rax
    e993:	48 89 c7             	mov    %rax,%rdi
    e996:	e8 65 5f ff ff       	call   4900 <_Unwind_Resume@plt>
}
    e99b:	48 83 c4 10          	add    $0x10,%rsp
    e99f:	5b                   	pop    %rbx
    e9a0:	41 5c                	pop    %r12
    e9a2:	5d                   	pop    %rbp
    e9a3:	c3                   	ret

000000000000e9a4 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    e9a4:	55                   	push   %rbp
    e9a5:	48 89 e5             	mov    %rsp,%rbp
    e9a8:	48 83 ec 10          	sub    $0x10,%rsp
    e9ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    e9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9b4:	48 8b 08             	mov    (%rax),%rcx
    e9b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9bb:	48 8b 40 08          	mov    0x8(%rax),%rax
    e9bf:	ba 00 00 00 00       	mov    $0x0,%edx
    e9c4:	48 89 ce             	mov    %rcx,%rsi
    e9c7:	48 89 c7             	mov    %rax,%rdi
    e9ca:	e8 16 86 ff ff       	call   6fe5 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    e9cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e9d3:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    e9d7:	90                   	nop
    e9d8:	c9                   	leave
    e9d9:	c3                   	ret

000000000000e9da <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    e9da:	55                   	push   %rbp
    e9db:	48 89 e5             	mov    %rsp,%rbp
    e9de:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    e9e5:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    e9ec:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    e9f3:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    e9fa:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    ea01:	48 89 d6             	mov    %rdx,%rsi
    ea04:	48 89 c7             	mov    %rax,%rdi
    ea07:	e8 9b a1 ff ff       	call   8ba7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    ea0c:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    ea12:	83 f8 02             	cmp    $0x2,%eax
    ea15:	0f 94 c0             	sete   %al
}
    ea18:	c9                   	leave
    ea19:	c3                   	ret

000000000000ea1a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    ea1a:	55                   	push   %rbp
    ea1b:	48 89 e5             	mov    %rsp,%rbp
    ea1e:	53                   	push   %rbx
    ea1f:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    ea26:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    ea2d:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    ea34:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    ea3b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ea3f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    ea46:	48 89 d6             	mov    %rdx,%rsi
    ea49:	48 89 c7             	mov    %rax,%rdi
    ea4c:	e8 7f a2 ff ff       	call   8cd0 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    ea51:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ea55:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    ea5c:	48 89 d6             	mov    %rdx,%rsi
    ea5f:	48 89 c7             	mov    %rax,%rdi
    ea62:	e8 9d a3 ff ff       	call   8e04 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    ea67:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ea6e:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ea72:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ea79:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    ea80:	48 89 ce             	mov    %rcx,%rsi
    ea83:	48 89 c7             	mov    %rax,%rdi
    ea86:	e8 b2 a4 ff ff       	call   8f3d <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    ea8b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ea92:	00 
    ea93:	e9 c5 00 00 00       	jmp    eb5d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    ea98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ea9c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eaa0:	48 89 d6             	mov    %rdx,%rsi
    eaa3:	48 89 c7             	mov    %rax,%rdi
    eaa6:	e8 b7 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eaab:	48 89 c7             	mov    %rax,%rdi
    eaae:	e8 6d 51 00 00       	call   13c20 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    eab3:	84 c0                	test   %al,%al
    eab5:	74 48                	je     eaff <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    eab7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eabb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    eabf:	48 89 d6             	mov    %rdx,%rsi
    eac2:	48 89 c7             	mov    %rax,%rdi
    eac5:	e8 98 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eaca:	48 89 c7             	mov    %rax,%rdi
    eacd:	e8 4e 51 00 00       	call   13c20 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    ead2:	84 c0                	test   %al,%al
    ead4:	74 29                	je     eaff <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    ead6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eada:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    eae1:	48 89 d6             	mov    %rdx,%rsi
    eae4:	48 89 c7             	mov    %rax,%rdi
    eae7:	e8 76 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eaec:	48 89 c7             	mov    %rax,%rdi
    eaef:	e8 2c 51 00 00       	call   13c20 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    eaf4:	84 c0                	test   %al,%al
    eaf6:	74 07                	je     eaff <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    eaf8:	b8 01 00 00 00       	mov    $0x1,%eax
    eafd:	eb 05                	jmp    eb04 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    eaff:	b8 00 00 00 00       	mov    $0x0,%eax
    eb04:	84 c0                	test   %al,%al
    eb06:	74 50                	je     eb58 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    eb08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb0c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    eb0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb13:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eb17:	48 89 d6             	mov    %rdx,%rsi
    eb1a:	48 89 c7             	mov    %rax,%rdi
    eb1d:	e8 40 b4 ff ff       	call   9f62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    eb22:	48 89 c7             	mov    %rax,%rdi
    eb25:	e8 10 51 00 00       	call   13c3a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    eb2a:	48 89 c2             	mov    %rax,%rdx
    eb2d:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    eb31:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb35:	48 89 ce             	mov    %rcx,%rsi
    eb38:	48 89 c7             	mov    %rax,%rdi
    eb3b:	e8 2c 51 00 00       	call   13c6c <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    eb40:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    eb44:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    eb4b:	48 89 d6             	mov    %rdx,%rsi
    eb4e:	48 89 c7             	mov    %rax,%rdi
    eb51:	e8 6c 51 00 00       	call   13cc2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    eb56:	eb 2f                	jmp    eb87 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    eb58:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    eb5d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eb61:	48 89 c7             	mov    %rax,%rdi
    eb64:	e8 89 50 00 00       	call   13bf2 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    eb69:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    eb6d:	0f 92 c0             	setb   %al
    eb70:	84 c0                	test   %al,%al
    eb72:	0f 85 20 ff ff ff    	jne    ea98 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    eb78:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    eb7f:	48 89 c7             	mov    %rax,%rdi
    eb82:	e8 fd 49 00 00       	call   13584 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    eb87:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    eb8e:	48 89 c7             	mov    %rax,%rdi
    eb91:	e8 cc b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    eb96:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    eb9a:	48 89 c7             	mov    %rax,%rdi
    eb9d:	e8 c0 b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    eba2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eba6:	48 89 c7             	mov    %rax,%rdi
    eba9:	e8 b4 b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ebae:	eb 3f                	jmp    ebef <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    ebb0:	48 89 c3             	mov    %rax,%rbx
    ebb3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ebba:	48 89 c7             	mov    %rax,%rdi
    ebbd:	e8 a0 b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ebc2:	eb 03                	jmp    ebc7 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    ebc4:	48 89 c3             	mov    %rax,%rbx
    ebc7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ebcb:	48 89 c7             	mov    %rax,%rdi
    ebce:	e8 8f b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ebd3:	eb 03                	jmp    ebd8 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    ebd5:	48 89 c3             	mov    %rax,%rbx
    ebd8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ebdc:	48 89 c7             	mov    %rax,%rdi
    ebdf:	e8 7e b2 ff ff       	call   9e62 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    ebe4:	48 89 d8             	mov    %rbx,%rax
    ebe7:	48 89 c7             	mov    %rax,%rdi
    ebea:	e8 11 5d ff ff       	call   4900 <_Unwind_Resume@plt>
    ebef:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ebf6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ebfa:	c9                   	leave
    ebfb:	c3                   	ret

000000000000ebfc <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    ebfc:	55                   	push   %rbp
    ebfd:	48 89 e5             	mov    %rsp,%rbp
    ec00:	41 54                	push   %r12
    ec02:	53                   	push   %rbx
    ec03:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    ec0a:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    ec11:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ec18:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ec1c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ec20:	48 89 d6             	mov    %rdx,%rsi
    ec23:	48 89 c7             	mov    %rax,%rdi
    ec26:	e8 0d 9e ff ff       	call   8a38 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    ec2b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ec32:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    ec33:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ec37:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    ec3b:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    ec3f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ec43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ec47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec4b:	48 89 c7             	mov    %rax,%rdi
    ec4e:	e8 a3 50 00 00       	call   13cf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    ec53:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    ec5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec5e:	48 89 c7             	mov    %rax,%rdi
    ec61:	e8 b6 50 00 00       	call   13d1c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    ec66:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    ec6d:	e9 dd 00 00 00       	jmp    ed4f <_ZN9VulkanApp12createDeviceEv+0x153>
    ec72:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    ec79:	48 89 c7             	mov    %rax,%rdi
    ec7c:	e8 1f 51 00 00       	call   13da0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    ec81:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    ec85:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ec89:	48 8b 10             	mov    (%rax),%rdx
    ec8c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ec93:	48 89 d6             	mov    %rdx,%rsi
    ec96:	48 89 c7             	mov    %rax,%rdi
    ec99:	e8 3c fd ff ff       	call   e9da <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    ec9e:	84 c0                	test   %al,%al
    eca0:	74 41                	je     ece3 <_ZN9VulkanApp12createDeviceEv+0xe7>
    eca2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eca6:	48 8b 10             	mov    (%rax),%rdx
    eca9:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ecb0:	48 89 d6             	mov    %rdx,%rsi
    ecb3:	48 89 c7             	mov    %rax,%rdi
    ecb6:	e8 f9 02 00 00       	call   efb4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    ecbb:	84 c0                	test   %al,%al
    ecbd:	74 24                	je     ece3 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    ecbf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ecc3:	48 8b 10             	mov    (%rax),%rdx
    ecc6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    eccd:	48 89 d6             	mov    %rdx,%rsi
    ecd0:	48 89 c7             	mov    %rax,%rdi
    ecd3:	e8 16 06 00 00       	call   f2ee <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    ecd8:	84 c0                	test   %al,%al
    ecda:	74 07                	je     ece3 <_ZN9VulkanApp12createDeviceEv+0xe7>
    ecdc:	b8 01 00 00 00       	mov    $0x1,%eax
    ece1:	eb 05                	jmp    ece8 <_ZN9VulkanApp12createDeviceEv+0xec>
    ece3:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    ece8:	84 c0                	test   %al,%al
    ecea:	74 54                	je     ed40 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    ecec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ecf0:	48 8b 10             	mov    (%rax),%rdx
    ecf3:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    ecfa:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    ed01:	48 89 ce             	mov    %rcx,%rsi
    ed04:	48 89 c7             	mov    %rax,%rdi
    ed07:	e8 0e fd ff ff       	call   ea1a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    ed0c:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    ed13:	48 89 c7             	mov    %rax,%rdi
    ed16:	e8 97 50 00 00       	call   13db2 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    ed1b:	84 c0                	test   %al,%al
    ed1d:	74 21                	je     ed40 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    ed1f:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    ed26:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ed2a:	48 89 d6             	mov    %rdx,%rsi
    ed2d:	48 89 c7             	mov    %rax,%rdi
    ed30:	e8 a1 48 00 00       	call   135d6 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    ed35:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed39:	48 8b 00             	mov    (%rax),%rax
    ed3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    ed40:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    ed47:	48 89 c7             	mov    %rax,%rdi
    ed4a:	e8 31 50 00 00       	call   13d80 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    ed4f:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    ed56:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    ed5d:	48 89 d6             	mov    %rdx,%rsi
    ed60:	48 89 c7             	mov    %rax,%rdi
    ed63:	e8 dd 4f 00 00       	call   13d45 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ed68:	84 c0                	test   %al,%al
    ed6a:	0f 85 02 ff ff ff    	jne    ec72 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    ed70:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    ed75:	75 3b                	jne    edb2 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    ed77:	bf 10 00 00 00       	mov    $0x10,%edi
    ed7c:	e8 3f 54 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    ed81:	48 89 c3             	mov    %rax,%rbx
    ed84:	48 8d 05 e5 19 01 00 	lea    0x119e5(%rip),%rax        # 20770 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    ed8b:	48 89 c6             	mov    %rax,%rsi
    ed8e:	48 89 df             	mov    %rbx,%rdi
    ed91:	e8 9a 53 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    ed96:	48 8b 05 0b 22 02 00 	mov    0x2220b(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ed9d:	48 89 c2             	mov    %rax,%rdx
    eda0:	48 8d 05 99 1f 02 00 	lea    0x21f99(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    eda7:	48 89 c6             	mov    %rax,%rsi
    edaa:	48 89 df             	mov    %rbx,%rdi
    edad:	e8 de 5a ff ff       	call   4890 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    edb2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    edb6:	48 89 c7             	mov    %rax,%rdi
    edb9:	e8 42 48 00 00       	call   13600 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    edbe:	8b 00                	mov    (%rax),%eax
    edc0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    edc3:	f3 0f 10 05 bd 1e 01 	movss  0x11ebd(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    edca:	00 
    edcb:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    edd0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    edd4:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    eddb:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ede2:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    ede7:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    edee:	00 00 00 
  queueInfo.pNext = nullptr;
    edf1:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    edf8:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    edfc:	8b 45 dc             	mov    -0x24(%rbp),%eax
    edff:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    ee05:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    ee0c:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    ee0f:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    ee13:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    ee17:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    ee1e:	b8 00 00 00 00       	mov    $0x0,%eax
    ee23:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    ee28:	48 89 d7             	mov    %rdx,%rdi
    ee2b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    ee2e:	48 89 fa             	mov    %rdi,%rdx
    ee31:	89 02                	mov    %eax,(%rdx)
    ee33:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    ee37:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee3b:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    ee42:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    ee49:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    ee50:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    ee57:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    ee5e:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    ee5f:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    ee66:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    ee69:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    ee70:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    ee74:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    ee7b:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    ee7e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ee85:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    ee8c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ee93:	48 05 90 00 00 00    	add    $0x90,%rax
    ee99:	48 89 c7             	mov    %rax,%rdi
    ee9c:	e8 e5 4c 00 00       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    eea1:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    eea7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    eeae:	48 05 90 00 00 00    	add    $0x90,%rax
    eeb4:	48 89 c7             	mov    %rax,%rdi
    eeb7:	e8 12 4d 00 00       	call   13bce <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    eebc:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    eec3:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    eeca:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    eed1:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    eed8:	48 83 c0 28          	add    $0x28,%rax
    eedc:	48 89 c7             	mov    %rax,%rdi
    eedf:	e8 a2 4c 00 00       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    eee4:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    eeea:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    eef1:	48 83 c0 28          	add    $0x28,%rax
    eef5:	48 89 c7             	mov    %rax,%rdi
    eef8:	e8 ad 4c 00 00       	call   13baa <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    eefd:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    ef04:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    ef0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef0f:	ba 00 00 00 00       	mov    $0x0,%edx
    ef14:	48 89 ce             	mov    %rcx,%rsi
    ef17:	48 89 c7             	mov    %rax,%rdi
    ef1a:	e8 2e 80 ff ff       	call   6f4d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    ef1f:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    ef26:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    ef2a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef31:	48 8d 50 60          	lea    0x60(%rax),%rdx
    ef35:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef3c:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef40:	8b 75 dc             	mov    -0x24(%rbp),%esi
    ef43:	48 89 d1             	mov    %rdx,%rcx
    ef46:	ba 00 00 00 00       	mov    $0x0,%edx
    ef4b:	48 89 c7             	mov    %rax,%rdi
    ef4e:	e8 3d 57 ff ff       	call   4690 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    ef53:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef5a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef5e:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    ef62:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ef69:	8b 55 dc             	mov    -0x24(%rbp),%edx
    ef6c:	89 50 68             	mov    %edx,0x68(%rax)
}
    ef6f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef73:	48 89 c7             	mov    %rax,%rdi
    ef76:	e8 e7 ab ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ef7b:	eb 2a                	jmp    efa7 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    ef7d:	49 89 c4             	mov    %rax,%r12
    ef80:	48 89 df             	mov    %rbx,%rdi
    ef83:	e8 48 53 ff ff       	call   42d0 <__cxa_free_exception@plt>
    ef88:	4c 89 e3             	mov    %r12,%rbx
    ef8b:	eb 03                	jmp    ef90 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    ef8d:	48 89 c3             	mov    %rax,%rbx
    ef90:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef94:	48 89 c7             	mov    %rax,%rdi
    ef97:	e8 c6 ab ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ef9c:	48 89 d8             	mov    %rbx,%rax
    ef9f:	48 89 c7             	mov    %rax,%rdi
    efa2:	e8 59 59 ff ff       	call   4900 <_Unwind_Resume@plt>
    efa7:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    efae:	5b                   	pop    %rbx
    efaf:	41 5c                	pop    %r12
    efb1:	5d                   	pop    %rbp
    efb2:	c3                   	ret
    efb3:	90                   	nop

000000000000efb4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    efb4:	55                   	push   %rbp
    efb5:	48 89 e5             	mov    %rsp,%rbp
    efb8:	53                   	push   %rbx
    efb9:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    efc0:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    efc7:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    efce:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    efd5:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    efdc:	ba 00 00 00 00       	mov    $0x0,%edx
    efe1:	48 89 ce             	mov    %rcx,%rsi
    efe4:	48 89 c7             	mov    %rax,%rdi
    efe7:	e8 77 97 ff ff       	call   8763 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    efec:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    eff3:	48 89 c7             	mov    %rax,%rdi
    eff6:	e8 81 46 00 00       	call   1367c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    effb:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f002:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f006:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f00a:	48 89 c7             	mov    %rax,%rdi
    f00d:	e8 b6 4e 00 00       	call   13ec8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f012:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    f019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f01d:	48 89 c7             	mov    %rax,%rdi
    f020:	e8 c9 4e 00 00       	call   13eee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f025:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    f02c:	e9 8c 00 00 00       	jmp    f0bd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    f031:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    f038:	48 89 c7             	mov    %rax,%rdi
    f03b:	e8 36 4f 00 00       	call   13f76 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f040:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    f044:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f04b:	48 89 c7             	mov    %rax,%rdi
    f04e:	e8 bd 58 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    f053:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f057:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    f05e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f065:	48 89 ce             	mov    %rcx,%rsi
    f068:	48 89 c7             	mov    %rax,%rdi
    f06b:	e8 de 60 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f070:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    f077:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f07e:	48 89 d6             	mov    %rdx,%rsi
    f081:	48 89 c7             	mov    %rax,%rdi
    f084:	e8 ff 4e 00 00       	call   13f88 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f089:	8b 10                	mov    (%rax),%edx
    f08b:	83 c2 01             	add    $0x1,%edx
    f08e:	89 10                	mov    %edx,(%rax)
    f090:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f097:	48 89 c7             	mov    %rax,%rdi
    f09a:	e8 d1 51 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f09f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f0a6:	48 89 c7             	mov    %rax,%rdi
    f0a9:	e8 82 54 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    f0ae:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    f0b5:	48 89 c7             	mov    %rax,%rdi
    f0b8:	e8 95 4e 00 00       	call   13f52 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f0bd:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    f0c4:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    f0cb:	48 89 d6             	mov    %rdx,%rsi
    f0ce:	48 89 c7             	mov    %rax,%rdi
    f0d1:	e8 41 4e 00 00       	call   13f17 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f0d6:	84 c0                	test   %al,%al
    f0d8:	0f 85 53 ff ff ff    	jne    f031 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    f0de:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    f0e5:	48 05 90 00 00 00    	add    $0x90,%rax
    f0eb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f0ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f0f3:	48 89 c7             	mov    %rax,%rdi
    f0f6:	e8 2b 49 00 00       	call   13a26 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f0fb:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    f102:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f106:	48 89 c7             	mov    %rax,%rdi
    f109:	e8 3e 49 00 00       	call   13a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f10e:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    f115:	e9 ed 00 00 00       	jmp    f207 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    f11a:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    f121:	48 89 c7             	mov    %rax,%rdi
    f124:	e8 a7 49 00 00       	call   13ad0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f129:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    f12d:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    f131:	48 89 c7             	mov    %rax,%rdi
    f134:	e8 d7 57 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    f139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f13d:	48 8b 08             	mov    (%rax),%rcx
    f140:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    f144:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f14b:	48 89 ce             	mov    %rcx,%rsi
    f14e:	48 89 c7             	mov    %rax,%rdi
    f151:	e8 f8 5f ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f156:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    f15d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f164:	48 89 d6             	mov    %rdx,%rsi
    f167:	48 89 c7             	mov    %rax,%rdi
    f16a:	e8 19 4e 00 00       	call   13f88 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f16f:	8b 10                	mov    (%rax),%edx
    f171:	83 c2 01             	add    $0x1,%edx
    f174:	89 10                	mov    %edx,(%rax)
    f176:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f17d:	48 89 c7             	mov    %rax,%rdi
    f180:	e8 eb 50 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f185:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    f189:	48 89 c7             	mov    %rax,%rdi
    f18c:	e8 9f 53 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    f191:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f195:	48 89 c7             	mov    %rax,%rdi
    f198:	e8 73 57 ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    f19d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f1a1:	48 8b 08             	mov    (%rax),%rcx
    f1a4:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    f1a8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f1ac:	48 89 ce             	mov    %rcx,%rsi
    f1af:	48 89 c7             	mov    %rax,%rdi
    f1b2:	e8 97 5f ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f1b7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    f1bb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f1c2:	48 89 d6             	mov    %rdx,%rsi
    f1c5:	48 89 c7             	mov    %rax,%rdi
    f1c8:	e8 bb 4d 00 00       	call   13f88 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f1cd:	8b 00                	mov    (%rax),%eax
    f1cf:	83 f8 01             	cmp    $0x1,%eax
    f1d2:	0f 96 c3             	setbe  %bl
    f1d5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f1d9:	48 89 c7             	mov    %rax,%rdi
    f1dc:	e8 8f 50 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f1e1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f1e5:	48 89 c7             	mov    %rax,%rdi
    f1e8:	e8 43 53 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    f1ed:	84 db                	test   %bl,%bl
    f1ef:	74 07                	je     f1f8 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    f1f1:	bb 00 00 00 00       	mov    $0x0,%ebx
    f1f6:	eb 35                	jmp    f22d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    f1f8:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    f1ff:	48 89 c7             	mov    %rax,%rdi
    f202:	e8 a9 48 00 00       	call   13ab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f207:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    f20e:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    f215:	48 89 d6             	mov    %rdx,%rsi
    f218:	48 89 c7             	mov    %rax,%rdi
    f21b:	e8 55 48 00 00       	call   13a75 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f220:	84 c0                	test   %al,%al
    f222:	0f 85 f2 fe ff ff    	jne    f11a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    f228:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    f22d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f234:	48 89 c7             	mov    %rax,%rdi
    f237:	e8 5c 44 00 00       	call   13698 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    f23c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f243:	48 89 c7             	mov    %rax,%rdi
    f246:	e8 8d a6 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f24b:	89 d8                	mov    %ebx,%eax
    f24d:	e9 96 00 00 00       	jmp    f2e8 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    f252:	48 89 c3             	mov    %rax,%rbx
    f255:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f25c:	48 89 c7             	mov    %rax,%rdi
    f25f:	e8 0c 50 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f264:	eb 03                	jmp    f269 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    f266:	48 89 c3             	mov    %rax,%rbx
    f269:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f270:	48 89 c7             	mov    %rax,%rdi
    f273:	e8 b8 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    f278:	eb 45                	jmp    f2bf <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    f27a:	48 89 c3             	mov    %rax,%rbx
    f27d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    f284:	48 89 c7             	mov    %rax,%rdi
    f287:	e8 e4 4f ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f28c:	eb 03                	jmp    f291 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    f28e:	48 89 c3             	mov    %rax,%rbx
    f291:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    f295:	48 89 c7             	mov    %rax,%rdi
    f298:	e8 93 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
    f29d:	eb 20                	jmp    f2bf <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    f29f:	48 89 c3             	mov    %rax,%rbx
    f2a2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f2a6:	48 89 c7             	mov    %rax,%rdi
    f2a9:	e8 c2 4f ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f2ae:	eb 03                	jmp    f2b3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    f2b0:	48 89 c3             	mov    %rax,%rbx
    f2b3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f2b7:	48 89 c7             	mov    %rax,%rdi
    f2ba:	e8 71 52 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
}
    f2bf:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f2c6:	48 89 c7             	mov    %rax,%rdi
    f2c9:	e8 ca 43 00 00       	call   13698 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    f2ce:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f2d5:	48 89 c7             	mov    %rax,%rdi
    f2d8:	e8 fb a5 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f2dd:	48 89 d8             	mov    %rbx,%rax
    f2e0:	48 89 c7             	mov    %rax,%rdi
    f2e3:	e8 18 56 ff ff       	call   4900 <_Unwind_Resume@plt>
    f2e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f2ec:	c9                   	leave
    f2ed:	c3                   	ret

000000000000f2ee <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    f2ee:	55                   	push   %rbp
    f2ef:	48 89 e5             	mov    %rsp,%rbp
    f2f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    f2fa:	b8 01 00 00 00       	mov    $0x1,%eax
}
    f2ff:	5d                   	pop    %rbp
    f300:	c3                   	ret
    f301:	90                   	nop

000000000000f302 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    f302:	55                   	push   %rbp
    f303:	48 89 e5             	mov    %rsp,%rbp
    f306:	41 54                	push   %r12
    f308:	53                   	push   %rbx
    f309:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    f310:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    f317:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    f31e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f325:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f329:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f330:	48 8b 48 58          	mov    0x58(%rax),%rcx
    f334:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f338:	48 89 ce             	mov    %rcx,%rsi
    f33b:	48 89 c7             	mov    %rax,%rdi
    f33e:	e8 6a 9d ff ff       	call   90ad <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    f343:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f34a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f34e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f355:	48 8b 48 58          	mov    0x58(%rax),%rcx
    f359:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f360:	48 89 ce             	mov    %rcx,%rsi
    f363:	48 89 c7             	mov    %rax,%rdi
    f366:	e8 f0 9d ff ff       	call   915b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    f36b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f372:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f376:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f37d:	48 8b 48 58          	mov    0x58(%rax),%rcx
    f381:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f388:	48 89 ce             	mov    %rcx,%rsi
    f38b:	48 89 c7             	mov    %rax,%rdi
    f38e:	e8 3f 9f ff ff       	call   92d2 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    f393:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f39a:	48 89 c6             	mov    %rax,%rsi
    f39d:	b8 00 00 00 00       	mov    $0x0,%eax
    f3a2:	ba 0d 00 00 00       	mov    $0xd,%edx
    f3a7:	48 89 f7             	mov    %rsi,%rdi
    f3aa:	48 89 d1             	mov    %rdx,%rcx
    f3ad:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    f3b0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f3b7:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    f3bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f3c4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f3cb:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    f3cc:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f3d3:	48 8b 50 48          	mov    0x48(%rax),%rdx
    f3d7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f3de:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    f3e2:	8b 45 80             	mov    -0x80(%rbp),%eax
    f3e5:	83 c0 01             	add    $0x1,%eax
    f3e8:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    f3eb:	8b 45 84             	mov    -0x7c(%rbp),%eax
    f3ee:	85 c0                	test   %eax,%eax
    f3f0:	74 0e                	je     f400 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    f3f2:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    f3f5:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    f3f8:	73 06                	jae    f400 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    f3fa:	8b 45 84             	mov    -0x7c(%rbp),%eax
    f3fd:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    f400:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f407:	8b 55 ec             	mov    -0x14(%rbp),%edx
    f40a:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    f40d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f414:	48 89 c7             	mov    %rax,%rdi
    f417:	e8 70 4c 00 00       	call   1408c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    f41c:	84 c0                	test   %al,%al
    f41e:	74 3b                	je     f45b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    f420:	bf 10 00 00 00       	mov    $0x10,%edi
    f425:	e8 96 4d ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    f42a:	48 89 c3             	mov    %rax,%rbx
    f42d:	48 8d 05 60 13 01 00 	lea    0x11360(%rip),%rax        # 20794 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8c>
    f434:	48 89 c6             	mov    %rax,%rsi
    f437:	48 89 df             	mov    %rbx,%rdi
    f43a:	e8 f1 4c ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    f43f:	48 8b 05 62 1b 02 00 	mov    0x21b62(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f446:	48 89 c2             	mov    %rax,%rdx
    f449:	48 8d 05 f0 18 02 00 	lea    0x218f0(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f450:	48 89 c6             	mov    %rax,%rsi
    f453:	48 89 df             	mov    %rbx,%rdi
    f456:	e8 35 54 ff ff       	call   4890 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    f45b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f462:	be 00 00 00 00       	mov    $0x0,%esi
    f467:	48 89 c7             	mov    %rax,%rdi
    f46a:	e8 5f 4c 00 00       	call   140ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    f46f:	8b 10                	mov    (%rax),%edx
    f471:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f478:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    f47b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f482:	be 00 00 00 00       	mov    $0x0,%esi
    f487:	48 89 c7             	mov    %rax,%rdi
    f48a:	e8 3f 4c 00 00       	call   140ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    f48f:	8b 50 04             	mov    0x4(%rax),%edx
    f492:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f499:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    f49c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f4a3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f4a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f4ab:	48 89 c7             	mov    %rax,%rdi
    f4ae:	e8 3b 4c 00 00       	call   140ee <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    f4b3:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    f4ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f4be:	48 89 c7             	mov    %rax,%rdi
    f4c1:	e8 4e 4c 00 00       	call   14114 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    f4c6:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    f4cd:	eb 5b                	jmp    f52a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    f4cf:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f4d6:	48 89 c7             	mov    %rax,%rdi
    f4d9:	e8 ba 4c 00 00       	call   14198 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    f4de:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    f4e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4e6:	8b 00                	mov    (%rax),%eax
    f4e8:	83 f8 2b             	cmp    $0x2b,%eax
    f4eb:	75 2e                	jne    f51b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    f4ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4f1:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    f4f4:	85 c0                	test   %eax,%eax
    f4f6:	75 23                	jne    f51b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    f4f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4fc:	8b 10                	mov    (%rax),%edx
    f4fe:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f505:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    f508:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f50c:	8b 50 04             	mov    0x4(%rax),%edx
    f50f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f516:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    f519:	eb 2c                	jmp    f547 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    f51b:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f522:	48 89 c7             	mov    %rax,%rdi
    f525:	e8 4e 4c 00 00       	call   14178 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    f52a:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    f531:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    f538:	48 89 d6             	mov    %rdx,%rsi
    f53b:	48 89 c7             	mov    %rax,%rdi
    f53e:	e8 fa 4b 00 00       	call   1413d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f543:	84 c0                	test   %al,%al
    f545:	75 88                	jne    f4cf <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    f547:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f54e:	8b 50 24             	mov    0x24(%rax),%edx
    f551:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f558:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    f55b:	8b 45 88             	mov    -0x78(%rbp),%eax
    f55e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    f561:	8b 45 8c             	mov    -0x74(%rbp),%eax
    f564:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    f567:	8b 45 98             	mov    -0x68(%rbp),%eax
    f56a:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    f56d:	73 06                	jae    f575 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    f56f:	8b 45 98             	mov    -0x68(%rbp),%eax
    f572:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    f575:	8b 45 9c             	mov    -0x64(%rbp),%eax
    f578:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    f57b:	73 06                	jae    f583 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    f57d:	8b 45 9c             	mov    -0x64(%rbp),%eax
    f580:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    f583:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f58a:	8b 55 e8             	mov    -0x18(%rbp),%edx
    f58d:	89 50 2c             	mov    %edx,0x2c(%rax)
    f590:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f597:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    f59a:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    f59d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f5a4:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    f5ab:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    f5af:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    f5b3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f5ba:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    f5c1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f5c8:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  // auto  = VK_PRESENT_MODE_IMMEDIATE_KHR;
  for (const auto &presentMode : surfacePresentModes) {
    f5cf:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f5d6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f5da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5de:	48 89 c7             	mov    %rax,%rdi
    f5e1:	e8 c4 4b 00 00       	call   141aa <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    f5e6:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    f5ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5f1:	48 89 c7             	mov    %rax,%rdi
    f5f4:	e8 d7 4b 00 00       	call   141d0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    f5f9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    f600:	eb 52                	jmp    f654 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x352>
    f602:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    f609:	48 89 c7             	mov    %rax,%rdi
    f60c:	e8 43 4c 00 00       	call   14254 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    f611:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (presentMode == preferredPresentMode) {
    f615:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f619:	8b 10                	mov    (%rax),%edx
    f61b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f622:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    f628:	39 c2                	cmp    %eax,%edx
    f62a:	75 19                	jne    f645 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    f62c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    f633:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
    f639:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f640:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    f643:	eb 2c                	jmp    f671 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x36f>
  for (const auto &presentMode : surfacePresentModes) {
    f645:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    f64c:	48 89 c7             	mov    %rax,%rdi
    f64f:	e8 e0 4b 00 00       	call   14234 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    f654:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    f65b:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    f662:	48 89 d6             	mov    %rdx,%rsi
    f665:	48 89 c7             	mov    %rax,%rdi
    f668:	e8 8c 4b 00 00       	call   141f9 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f66d:	84 c0                	test   %al,%al
    f66f:	75 91                	jne    f602 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x300>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    f671:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f678:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    f67f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f686:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    f68d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f694:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    f69b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f6a2:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    f6a9:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    f6aa:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    f6ad:	83 e0 01             	and    $0x1,%eax
    f6b0:	85 c0                	test   %eax,%eax
    f6b2:	74 1e                	je     f6d2 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d0>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    f6b4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f6bb:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    f6c2:	8b 45 ac             	mov    -0x54(%rbp),%eax
    f6c5:	83 e0 01             	and    $0x1,%eax
    f6c8:	85 c0                	test   %eax,%eax
    f6ca:	0f 84 9b 00 00 00    	je     f76b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x469>
    f6d0:	eb 3b                	jmp    f70d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x40b>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    f6d2:	bf 10 00 00 00       	mov    $0x10,%edi
    f6d7:	e8 e4 4a ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    f6dc:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f6df:	48 8d 05 d2 10 01 00 	lea    0x110d2(%rip),%rax        # 207b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    f6e6:	48 89 c6             	mov    %rax,%rsi
    f6e9:	48 89 df             	mov    %rbx,%rdi
    f6ec:	e8 3f 4a ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    f6f1:	48 8b 05 b0 18 02 00 	mov    0x218b0(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f6f8:	48 89 c2             	mov    %rax,%rdx
    f6fb:	48 8d 05 3e 16 02 00 	lea    0x2163e(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f702:	48 89 c6             	mov    %rax,%rsi
    f705:	48 89 df             	mov    %rbx,%rdi
    f708:	e8 83 51 ff ff       	call   4890 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    f70d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f714:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    f71b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f722:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    f729:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f730:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f737:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    f738:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f73f:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    f746:	00 

  return swapchainCreateInfo;
    f747:	90                   	nop
}
    f748:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f74f:	48 89 c7             	mov    %rax,%rdi
    f752:	e8 1f ab ff ff       	call   a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    f757:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f75e:	48 89 c7             	mov    %rax,%rdi
    f761:	e8 ac a9 ff ff       	call   a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    f766:	e9 9c 00 00 00       	jmp    f807 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x505>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    f76b:	bf 10 00 00 00       	mov    $0x10,%edi
    f770:	e8 4b 4a ff ff       	call   41c0 <__cxa_allocate_exception@plt>
    f775:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f778:	48 8d 05 71 10 01 00 	lea    0x11071(%rip),%rax        # 207f0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe8>
    f77f:	48 89 c6             	mov    %rax,%rsi
    f782:	48 89 df             	mov    %rbx,%rdi
    f785:	e8 a6 49 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    f78a:	48 8b 05 17 18 02 00 	mov    0x21817(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f791:	48 89 c2             	mov    %rax,%rdx
    f794:	48 8d 05 a5 15 02 00 	lea    0x215a5(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f79b:	48 89 c6             	mov    %rax,%rsi
    f79e:	48 89 df             	mov    %rbx,%rdi
    f7a1:	e8 ea 50 ff ff       	call   4890 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    f7a6:	49 89 c4             	mov    %rax,%r12
    f7a9:	48 89 df             	mov    %rbx,%rdi
    f7ac:	e8 1f 4b ff ff       	call   42d0 <__cxa_free_exception@plt>
    f7b1:	4c 89 e3             	mov    %r12,%rbx
    f7b4:	eb 23                	jmp    f7d9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    f7b6:	49 89 c4             	mov    %rax,%r12
    f7b9:	48 89 df             	mov    %rbx,%rdi
    f7bc:	e8 0f 4b ff ff       	call   42d0 <__cxa_free_exception@plt>
    f7c1:	4c 89 e3             	mov    %r12,%rbx
    f7c4:	eb 13                	jmp    f7d9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    f7c6:	49 89 c4             	mov    %rax,%r12
    f7c9:	48 89 df             	mov    %rbx,%rdi
    f7cc:	e8 ff 4a ff ff       	call   42d0 <__cxa_free_exception@plt>
    f7d1:	4c 89 e3             	mov    %r12,%rbx
    f7d4:	eb 03                	jmp    f7d9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
}
    f7d6:	48 89 c3             	mov    %rax,%rbx
    f7d9:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f7e0:	48 89 c7             	mov    %rax,%rdi
    f7e3:	e8 8e aa ff ff       	call   a276 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    f7e8:	eb 03                	jmp    f7ed <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4eb>
    f7ea:	48 89 c3             	mov    %rax,%rbx
    f7ed:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f7f4:	48 89 c7             	mov    %rax,%rdi
    f7f7:	e8 16 a9 ff ff       	call   a112 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    f7fc:	48 89 d8             	mov    %rbx,%rax
    f7ff:	48 89 c7             	mov    %rax,%rdi
    f802:	e8 f9 50 ff ff       	call   4900 <_Unwind_Resume@plt>
    f807:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    f80e:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    f815:	5b                   	pop    %rbx
    f816:	41 5c                	pop    %r12
    f818:	5d                   	pop    %rbp
    f819:	c3                   	ret

000000000000f81a <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    f81a:	55                   	push   %rbp
    f81b:	48 89 e5             	mov    %rsp,%rbp
    f81e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    f822:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    f826:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f82a:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    f82e:	48 89 d6             	mov    %rdx,%rsi
    f831:	48 89 c7             	mov    %rax,%rdi
    f834:	e8 c9 fa ff ff       	call   f302 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    f839:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f83d:	48 8b 40 50          	mov    0x50(%rax),%rax
    f841:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    f845:	ba 00 00 00 00       	mov    $0x0,%edx
    f84a:	48 89 ce             	mov    %rcx,%rsi
    f84d:	48 89 c7             	mov    %rax,%rdi
    f850:	e8 28 78 ff ff       	call   707d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    f855:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    f859:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    f85d:	90                   	nop
    f85e:	c9                   	leave
    f85f:	c3                   	ret

000000000000f860 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    f860:	55                   	push   %rbp
    f861:	48 89 e5             	mov    %rsp,%rbp
    f864:	53                   	push   %rbx
    f865:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    f86c:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    f873:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f87a:	48 8b 50 70          	mov    0x70(%rax),%rdx
    f87e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f885:	48 8b 48 50          	mov    0x50(%rax),%rcx
    f889:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f88d:	48 89 ce             	mov    %rcx,%rsi
    f890:	48 89 c7             	mov    %rax,%rdi
    f893:	e8 b1 9b ff ff       	call   9449 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    f898:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f89f:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    f8a6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f8aa:	48 89 c6             	mov    %rax,%rsi
    f8ad:	48 89 d7             	mov    %rdx,%rdi
    f8b0:	e8 b1 49 00 00       	call   14266 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    f8b5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f8b9:	48 89 c7             	mov    %rax,%rdi
    f8bc:	e8 19 ab ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    f8c1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f8c8:	48 05 c0 00 00 00    	add    $0xc0,%rax
    f8ce:	48 89 c7             	mov    %rax,%rdi
    f8d1:	e8 c8 49 00 00       	call   1429e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    f8d6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    f8da:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f8e1:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    f8e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f8ec:	48 89 c6             	mov    %rax,%rsi
    f8ef:	48 89 d7             	mov    %rdx,%rdi
    f8f2:	e8 cb 49 00 00       	call   142c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    f8f7:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f8fe:	00 
    f8ff:	e9 f1 00 00 00       	jmp    f9f5 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    f904:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f908:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    f90f:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    f913:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f917:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    f91b:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    f91f:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    f926:	00 00 00 
    imageViewInfo.pNext = nullptr;
    f929:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    f930:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    f934:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f93b:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    f942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f946:	48 89 c6             	mov    %rax,%rsi
    f949:	48 89 d7             	mov    %rdx,%rdi
    f94c:	e8 f7 49 00 00       	call   14348 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    f951:	48 8b 00             	mov    (%rax),%rax
    f954:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    f958:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    f95f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f966:	8b 40 78             	mov    0x78(%rax),%eax
    f969:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    f96c:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    f973:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    f97a:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    f981:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    f988:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    f98f:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    f996:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    f99d:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    f9a4:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    f9ab:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f9b2:	48 8b 40 50          	mov    0x50(%rax),%rax
    f9b6:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    f9bd:	ba 00 00 00 00       	mov    $0x0,%edx
    f9c2:	48 89 ce             	mov    %rcx,%rsi
    f9c5:	48 89 c7             	mov    %rax,%rdi
    f9c8:	e8 50 77 ff ff       	call   711d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    f9cd:	48 89 c3             	mov    %rax,%rbx
    f9d0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f9d7:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    f9de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9e2:	48 89 c6             	mov    %rax,%rsi
    f9e5:	48 89 d7             	mov    %rdx,%rdi
    f9e8:	e8 7b 49 00 00       	call   14368 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    f9ed:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    f9f0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    f9f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9f9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f9fd:	0f 82 01 ff ff ff    	jb     f904 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    fa03:	90                   	nop
    fa04:	90                   	nop
    fa05:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fa09:	c9                   	leave
    fa0a:	c3                   	ret
    fa0b:	90                   	nop

000000000000fa0c <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    fa0c:	55                   	push   %rbp
    fa0d:	48 89 e5             	mov    %rsp,%rbp
    fa10:	41 55                	push   %r13
    fa12:	41 54                	push   %r12
    fa14:	53                   	push   %rbx
    fa15:	48 81 ec 78 05 00 00 	sub    $0x578,%rsp
    fa1c:	48 89 bd 78 fa ff ff 	mov    %rdi,-0x588(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    fa23:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    fa2a:	00 00 00 00 
    fa2e:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    fa35:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    fa39:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    fa40:	48 89 c7             	mov    %rax,%rdi
    fa43:	e8 c8 4e ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    fa48:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    fa4f:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    fa56:	48 8d 0d cb 0d 01 00 	lea    0x10dcb(%rip),%rcx        # 20828 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    fa5d:	48 89 ce             	mov    %rcx,%rsi
    fa60:	48 89 c7             	mov    %rax,%rdi
    fa63:	e8 e6 56 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fa68:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa6f:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa73:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    fa7a:	ba 00 00 00 00       	mov    $0x0,%edx
    fa7f:	48 89 ce             	mov    %rcx,%rsi
    fa82:	48 89 c7             	mov    %rax,%rdi
    fa85:	e8 03 78 ff ff       	call   728d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    fa8a:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    fa91:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    fa98:	48 89 c7             	mov    %rax,%rdi
    fa9b:	e8 d0 47 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    faa0:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    faa7:	48 89 c7             	mov    %rax,%rdi
    faaa:	e8 81 4a ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    faaf:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    fab6:	48 89 c7             	mov    %rax,%rdi
    fab9:	e8 52 4e ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
    fabe:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    fac5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    facc:	48 8d 0d 75 0d 01 00 	lea    0x10d75(%rip),%rcx        # 20848 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x140>
    fad3:	48 89 ce             	mov    %rcx,%rsi
    fad6:	48 89 c7             	mov    %rax,%rdi
    fad9:	e8 70 56 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fade:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fae5:	48 8b 40 50          	mov    0x50(%rax),%rax
    fae9:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    faf0:	ba 00 00 00 00       	mov    $0x0,%edx
    faf5:	48 89 ce             	mov    %rcx,%rsi
    faf8:	48 89 c7             	mov    %rax,%rdi
    fafb:	e8 8d 77 ff ff       	call   728d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    fb00:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    fb07:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    fb0e:	48 89 c7             	mov    %rax,%rdi
    fb11:	e8 5a 47 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fb16:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    fb1d:	48 89 c7             	mov    %rax,%rdi
    fb20:	e8 0b 4a ff ff       	call   4530 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    fb25:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb29:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    fb30:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    fb37:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    fb3e:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    fb45:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    fb48:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    fb4f:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    fb52:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    fb59:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    fb60:	48 8d 05 01 0d 01 00 	lea    0x10d01(%rip),%rax        # 20868 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    fb67:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    fb6e:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    fb75:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    fb79:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb7d:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    fb84:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    fb8b:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    fb92:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    fb99:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    fb9c:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    fba3:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    fba6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    fbad:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    fbb4:	48 8d 05 ad 0c 01 00 	lea    0x10cad(%rip),%rax        # 20868 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    fbbb:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    fbc2:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    fbc9:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    fbcd:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    fbd4:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    fbdb:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    fbe2:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    fbe9:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    fbf0:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    fbf7:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    fbfe:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    fc05:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    fc0c:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    fc13:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    fc1a:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    fc21:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    fc28:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    fc2f:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    fc36:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    fc3d:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    fc44:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    fc4b:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    fc52:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    fc59:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    fc60:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    fc67:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    fc6e:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  auto bindingDescription = vkh::Vertex2D_RGB::getBindingDescription();
    fc75:	e8 0e 47 00 00       	call   14388 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>
    fc7a:	48 89 85 e4 fd ff ff 	mov    %rax,-0x21c(%rbp)
    fc81:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
    fc87:	83 e0 00             	and    $0x0,%eax
    fc8a:	09 d0                	or     %edx,%eax
    fc8c:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  auto attributeDescriptions = vkh::Vertex2D_RGB::getAttributeDescriptions();
    fc92:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    fc99:	48 89 c7             	mov    %rax,%rdi
    fc9c:	e8 29 47 00 00       	call   143ca <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>

  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    fca1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fca5:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    fcac:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    fcb3:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  vertInputInfo.sType =
    fcba:	c7 85 90 fd ff ff 13 	movl   $0x13,-0x270(%rbp)
    fcc1:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 1;
    fcc4:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    fccb:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = &bindingDescription;
    fcce:	48 8d 85 e4 fd ff ff 	lea    -0x21c(%rbp),%rax
    fcd5:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  vertInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
    fcdc:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    fce3:	48 89 c7             	mov    %rax,%rdi
    fce6:	e8 bf 47 00 00       	call   144aa <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertInputInfo.vertexAttributeDescriptionCount =
    fceb:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%rbp)
  vertInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    fcf1:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    fcf8:	48 89 c7             	mov    %rax,%rdi
    fcfb:	e8 b4 39 00 00       	call   136b4 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
    fd00:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    fd07:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd0b:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    fd12:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
  inputAssemblyInfo.sType =
    fd19:	c7 85 70 fd ff ff 14 	movl   $0x14,-0x290(%rbp)
    fd20:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    fd23:	c7 85 84 fd ff ff 03 	movl   $0x3,-0x27c(%rbp)
    fd2a:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    fd2d:	c7 85 88 fd ff ff 00 	movl   $0x0,-0x278(%rbp)
    fd34:	00 00 00 

  /*  */
  VkViewport viewport{};
    fd37:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd3b:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    fd42:	66 0f d6 85 60 fd ff 	movq   %xmm0,-0x2a0(%rbp)
    fd49:	ff 
  viewport.x = 0.0f;
    fd4a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd4e:	f3 0f 11 85 50 fd ff 	movss  %xmm0,-0x2b0(%rbp)
    fd55:	ff 
  viewport.y = 0.0f;
    fd56:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd5a:	f3 0f 11 85 54 fd ff 	movss  %xmm0,-0x2ac(%rbp)
    fd61:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    fd62:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fd69:	8b 40 7c             	mov    0x7c(%rax),%eax
    fd6c:	89 c0                	mov    %eax,%eax
    fd6e:	48 85 c0             	test   %rax,%rax
    fd71:	78 0b                	js     fd7e <_ZN9VulkanApp22createGraphicsPipelineEv+0x372>
    fd73:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd77:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    fd7c:	eb 19                	jmp    fd97 <_ZN9VulkanApp22createGraphicsPipelineEv+0x38b>
    fd7e:	48 89 c2             	mov    %rax,%rdx
    fd81:	48 d1 ea             	shr    %rdx
    fd84:	83 e0 01             	and    $0x1,%eax
    fd87:	48 09 c2             	or     %rax,%rdx
    fd8a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd8e:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    fd93:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    fd97:	f3 0f 11 85 58 fd ff 	movss  %xmm0,-0x2a8(%rbp)
    fd9e:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    fd9f:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fda6:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    fdac:	89 c0                	mov    %eax,%eax
    fdae:	48 85 c0             	test   %rax,%rax
    fdb1:	78 0b                	js     fdbe <_ZN9VulkanApp22createGraphicsPipelineEv+0x3b2>
    fdb3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fdb7:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    fdbc:	eb 19                	jmp    fdd7 <_ZN9VulkanApp22createGraphicsPipelineEv+0x3cb>
    fdbe:	48 89 c2             	mov    %rax,%rdx
    fdc1:	48 d1 ea             	shr    %rdx
    fdc4:	83 e0 01             	and    $0x1,%eax
    fdc7:	48 09 c2             	or     %rax,%rdx
    fdca:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fdce:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    fdd3:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    fdd7:	f3 0f 11 85 5c fd ff 	movss  %xmm0,-0x2a4(%rbp)
    fdde:	ff 
  viewport.minDepth = 0.0f;
    fddf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fde3:	f3 0f 11 85 60 fd ff 	movss  %xmm0,-0x2a0(%rbp)
    fdea:	ff 
  viewport.maxDepth = 1.0f;
    fdeb:	f3 0f 10 05 95 0e 01 	movss  0x10e95(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    fdf2:	00 
    fdf3:	f3 0f 11 85 64 fd ff 	movss  %xmm0,-0x29c(%rbp)
    fdfa:	ff 

  VkRect2D scissor{};
    fdfb:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
    fe02:	00 00 00 00 
    fe06:	48 c7 85 48 fd ff ff 	movq   $0x0,-0x2b8(%rbp)
    fe0d:	00 00 00 00 
  scissor.offset = {0, 0};
    fe11:	c7 85 40 fd ff ff 00 	movl   $0x0,-0x2c0(%rbp)
    fe18:	00 00 00 
    fe1b:	c7 85 44 fd ff ff 00 	movl   $0x0,-0x2bc(%rbp)
    fe22:	00 00 00 
  scissor.extent = swapchain.extent;
    fe25:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fe2c:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    fe30:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    fe37:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fe3b:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    fe42:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    fe49:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  viewportStateInfo.sType =
    fe50:	c7 85 10 fd ff ff 16 	movl   $0x16,-0x2f0(%rbp)
    fe57:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    fe5a:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    fe61:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    fe64:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    fe6b:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  viewportStateInfo.scissorCount = 1;
    fe72:	c7 85 30 fd ff ff 01 	movl   $0x1,-0x2d0(%rbp)
    fe79:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    fe7c:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    fe83:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    fe8a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fe8e:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    fe95:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    fe9c:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    fea3:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
  rastStateInfo.sType =
    feaa:	c7 85 d0 fc ff ff 17 	movl   $0x17,-0x330(%rbp)
    feb1:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    feb4:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
    febb:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    febf:	c7 85 e4 fc ff ff 00 	movl   $0x0,-0x31c(%rbp)
    fec6:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    fec9:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    fed0:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    fed3:	c7 85 ec fc ff ff 00 	movl   $0x0,-0x314(%rbp)
    feda:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    fedd:	f3 0f 10 05 a3 0d 01 	movss  0x10da3(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    fee4:	00 
    fee5:	f3 0f 11 85 08 fd ff 	movss  %xmm0,-0x2f8(%rbp)
    feec:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    feed:	c7 85 f0 fc ff ff 02 	movl   $0x2,-0x310(%rbp)
    fef4:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    fef7:	c7 85 f4 fc ff ff 01 	movl   $0x1,-0x30c(%rbp)
    fefe:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    ff01:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    ff08:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    ff0b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff0f:	f3 0f 11 85 fc fc ff 	movss  %xmm0,-0x304(%rbp)
    ff16:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    ff17:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff1b:	f3 0f 11 85 00 fd ff 	movss  %xmm0,-0x300(%rbp)
    ff22:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    ff23:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff27:	f3 0f 11 85 04 fd ff 	movss  %xmm0,-0x2fc(%rbp)
    ff2e:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    ff2f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff33:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    ff3a:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    ff41:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  multisampleStateInfo.sType =
    ff48:	c7 85 a0 fc ff ff 18 	movl   $0x18,-0x360(%rbp)
    ff4f:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    ff52:	c7 85 b8 fc ff ff 00 	movl   $0x0,-0x348(%rbp)
    ff59:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    ff5c:	c7 85 b4 fc ff ff 01 	movl   $0x1,-0x34c(%rbp)
    ff63:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    ff66:	f3 0f 10 05 1a 0d 01 	movss  0x10d1a(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
    ff6d:	00 
    ff6e:	f3 0f 11 85 bc fc ff 	movss  %xmm0,-0x344(%rbp)
    ff75:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    ff76:	48 c7 85 c0 fc ff ff 	movq   $0x0,-0x340(%rbp)
    ff7d:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    ff81:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    ff88:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    ff8b:	c7 85 cc fc ff ff 00 	movl   $0x0,-0x334(%rbp)
    ff92:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    ff95:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff99:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    ffa0:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
  colorBlendAttachment.colorWriteMask =
    ffa7:	c7 85 9c fc ff ff 0f 	movl   $0xf,-0x364(%rbp)
    ffae:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    ffb1:	c7 85 80 fc ff ff 01 	movl   $0x1,-0x380(%rbp)
    ffb8:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    ffbb:	c7 85 84 fc ff ff 06 	movl   $0x6,-0x37c(%rbp)
    ffc2:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    ffc5:	c7 85 88 fc ff ff 07 	movl   $0x7,-0x378(%rbp)
    ffcc:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    ffcf:	c7 85 8c fc ff ff 00 	movl   $0x0,-0x374(%rbp)
    ffd6:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    ffd9:	c7 85 90 fc ff ff 01 	movl   $0x1,-0x370(%rbp)
    ffe0:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    ffe3:	c7 85 94 fc ff ff 00 	movl   $0x0,-0x36c(%rbp)
    ffea:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    ffed:	c7 85 98 fc ff ff 00 	movl   $0x0,-0x368(%rbp)
    fff4:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    fff7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fffb:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
   10002:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
   10009:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
   10010:	66 0f d6 85 70 fc ff 	movq   %xmm0,-0x390(%rbp)
   10017:	ff 
  colorBlendState.sType =
   10018:	c7 85 40 fc ff ff 1a 	movl   $0x1a,-0x3c0(%rbp)
   1001f:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
   10022:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
   10029:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
   1002c:	c7 85 58 fc ff ff 03 	movl   $0x3,-0x3a8(%rbp)
   10033:	00 00 00 
  colorBlendState.attachmentCount = 1;
   10036:	c7 85 5c fc ff ff 01 	movl   $0x1,-0x3a4(%rbp)
   1003d:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
   10040:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
   10047:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
   1004e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10052:	f3 0f 11 85 68 fc ff 	movss  %xmm0,-0x398(%rbp)
   10059:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
   1005a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1005e:	f3 0f 11 85 6c fc ff 	movss  %xmm0,-0x394(%rbp)
   10065:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
   10066:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1006a:	f3 0f 11 85 70 fc ff 	movss  %xmm0,-0x390(%rbp)
   10071:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
   10072:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10076:	f3 0f 11 85 74 fc ff 	movss  %xmm0,-0x38c(%rbp)
   1007d:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
   1007e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10082:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
   10089:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
   10090:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
   10097:	c7 85 10 fc ff ff 1e 	movl   $0x1e,-0x3f0(%rbp)
   1009e:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
   100a1:	c7 85 24 fc ff ff 00 	movl   $0x0,-0x3dc(%rbp)
   100a8:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
   100ab:	48 c7 85 28 fc ff ff 	movq   $0x0,-0x3d8(%rbp)
   100b2:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
   100b6:	c7 85 30 fc ff ff 00 	movl   $0x0,-0x3d0(%rbp)
   100bd:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
   100c0:	48 c7 85 38 fc ff ff 	movq   $0x0,-0x3c8(%rbp)
   100c7:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
   100cb:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   100d2:	48 8b 40 50          	mov    0x50(%rax),%rax
   100d6:	48 8d 8d 10 fc ff ff 	lea    -0x3f0(%rbp),%rcx
   100dd:	ba 00 00 00 00       	mov    $0x0,%edx
   100e2:	48 89 ce             	mov    %rcx,%rsi
   100e5:	48 89 c7             	mov    %rax,%rdi
   100e8:	e8 d8 73 ff ff       	call   74c5 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
   100ed:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
   100f4:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
   100fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100ff:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
   10106:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
   1010d:	66 0f 7e 85 00 fc ff 	movd   %xmm0,-0x400(%rbp)
   10114:	ff 
  colorAttachment.format = swapchain.format;
   10115:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   1011c:	8b 40 78             	mov    0x78(%rax),%eax
   1011f:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
   10125:	c7 85 e8 fb ff ff 01 	movl   $0x1,-0x418(%rbp)
   1012c:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
   1012f:	c7 85 ec fb ff ff 01 	movl   $0x1,-0x414(%rbp)
   10136:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
   10139:	c7 85 f0 fb ff ff 00 	movl   $0x0,-0x410(%rbp)
   10140:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
   10143:	c7 85 f4 fb ff ff 02 	movl   $0x2,-0x40c(%rbp)
   1014a:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
   1014d:	c7 85 f8 fb ff ff 01 	movl   $0x1,-0x408(%rbp)
   10154:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
   10157:	c7 85 fc fb ff ff 00 	movl   $0x0,-0x404(%rbp)
   1015e:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
   10161:	c7 85 00 fc ff ff ea 	movl   $0x3b9acdea,-0x400(%rbp)
   10168:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
   1016b:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
   10172:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
   10176:	c7 85 d8 fb ff ff 00 	movl   $0x0,-0x428(%rbp)
   1017d:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
   10180:	c7 85 dc fb ff ff 02 	movl   $0x2,-0x424(%rbp)
   10187:	00 00 00 

  VkSubpassDescription subpass{};
   1018a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1018e:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
   10195:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
   1019c:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
   101a3:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
   101aa:	66 0f d6 85 d0 fb ff 	movq   %xmm0,-0x430(%rbp)
   101b1:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
   101b2:	c7 85 94 fb ff ff 00 	movl   $0x0,-0x46c(%rbp)
   101b9:	00 00 00 
  subpass.colorAttachmentCount = 1;
   101bc:	c7 85 a8 fb ff ff 01 	movl   $0x1,-0x458(%rbp)
   101c3:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
   101c6:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
   101cd:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
   101d4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   101d8:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
   101df:	0f 11 85 7c fb ff ff 	movups %xmm0,-0x484(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
   101e6:	c7 85 70 fb ff ff ff 	movl   $0xffffffff,-0x490(%rbp)
   101ed:	ff ff ff 
  subPassDep.dstSubpass = 0;
   101f0:	c7 85 74 fb ff ff 00 	movl   $0x0,-0x48c(%rbp)
   101f7:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
   101fa:	c7 85 78 fb ff ff 00 	movl   $0x400,-0x488(%rbp)
   10201:	04 00 00 
  subPassDep.srcAccessMask = 0;
   10204:	c7 85 80 fb ff ff 00 	movl   $0x0,-0x480(%rbp)
   1020b:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
   1020e:	c7 85 7c fb ff ff 00 	movl   $0x400,-0x484(%rbp)
   10215:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
   10218:	c7 85 84 fb ff ff 00 	movl   $0x100,-0x47c(%rbp)
   1021f:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
   10222:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10226:	0f 29 85 30 fb ff ff 	movaps %xmm0,-0x4d0(%rbp)
   1022d:	0f 29 85 40 fb ff ff 	movaps %xmm0,-0x4c0(%rbp)
   10234:	0f 29 85 50 fb ff ff 	movaps %xmm0,-0x4b0(%rbp)
   1023b:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
   10242:	c7 85 30 fb ff ff 26 	movl   $0x26,-0x4d0(%rbp)
   10249:	00 00 00 
  renderPassInfo.pNext = nullptr;
   1024c:	48 c7 85 38 fb ff ff 	movq   $0x0,-0x4c8(%rbp)
   10253:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
   10257:	c7 85 44 fb ff ff 01 	movl   $0x1,-0x4bc(%rbp)
   1025e:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
   10261:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
   10268:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  renderPassInfo.subpassCount = 1;
   1026f:	c7 85 50 fb ff ff 01 	movl   $0x1,-0x4b0(%rbp)
   10276:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
   10279:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
   10280:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  renderPassInfo.dependencyCount = 1;
   10287:	c7 85 60 fb ff ff 01 	movl   $0x1,-0x4a0(%rbp)
   1028e:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
   10291:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
   10298:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
   1029f:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   102a6:	48 8b 40 50          	mov    0x50(%rax),%rax
   102aa:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
   102b1:	ba 00 00 00 00       	mov    $0x0,%edx
   102b6:	48 89 ce             	mov    %rcx,%rsi
   102b9:	48 89 c7             	mov    %rax,%rdi
   102bc:	e8 9c 72 ff ff       	call   755d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
   102c1:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
   102c8:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
   102cf:	48 8d 95 a0 fa ff ff 	lea    -0x560(%rbp),%rdx
   102d6:	b8 00 00 00 00       	mov    $0x0,%eax
   102db:	b9 12 00 00 00       	mov    $0x12,%ecx
   102e0:	48 89 d7             	mov    %rdx,%rdi
   102e3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
   102e6:	c7 85 a0 fa ff ff 1c 	movl   $0x1c,-0x560(%rbp)
   102ed:	00 00 00 
  pipelineInfo.pNext = nullptr;
   102f0:	48 c7 85 a8 fa ff ff 	movq   $0x0,-0x558(%rbp)
   102f7:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
   102fb:	c7 85 b4 fa ff ff 02 	movl   $0x2,-0x54c(%rbp)
   10302:	00 00 00 
  pipelineInfo.pStages = shaderStages;
   10305:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   1030c:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
   10313:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
   1031a:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
   10321:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
   10328:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
   1032f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10336:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
   1033d:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10344:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
   1034b:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
   10352:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
   10359:	48 c7 85 f0 fa ff ff 	movq   $0x0,-0x510(%rbp)
   10360:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
   10364:	48 8d 85 40 fc ff ff 	lea    -0x3c0(%rbp),%rax
   1036b:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pDynamicState = nullptr;
   10372:	48 c7 85 00 fb ff ff 	movq   $0x0,-0x500(%rbp)
   10379:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
   1037d:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10384:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
   1038b:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
   10392:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10399:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   103a0:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.subpass = 0;
   103a7:	c7 85 18 fb ff ff 00 	movl   $0x0,-0x4e8(%rbp)
   103ae:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
   103b1:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
   103b8:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
   103bc:	c7 85 28 fb ff ff ff 	movl   $0xffffffff,-0x4d8(%rbp)
   103c3:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
   103c6:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
   103cd:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
   103d4:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   103db:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   103e2:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
   103e9:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
   103f0:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   103f7:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
   103fe:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
   10405:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
   1040c:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   10413:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   1041a:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
   10421:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
   10428:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1042f:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   10436:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
   1043d:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
   10444:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1044b:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   10452:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
   10459:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
   10460:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   10467:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   1046e:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
   10475:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
   1047c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   10480:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   10484:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
   1048b:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
   10492:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   10496:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1049a:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
   104a1:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
   104a8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   104ac:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   104b0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   104b7:	49 89 c4             	mov    %rax,%r12
   104ba:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   104c0:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   104c4:	48 89 c7             	mov    %rax,%rdi
   104c7:	e8 ee 3f 00 00       	call   144ba <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
   104cc:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   104d0:	4c 89 e6             	mov    %r12,%rsi
   104d3:	4c 89 ef             	mov    %r13,%rdi
   104d6:	4c 89 e1             	mov    %r12,%rcx
   104d9:	4c 89 eb             	mov    %r13,%rbx
   104dc:	48 89 df             	mov    %rbx,%rdi
   104df:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
   104e6:	48 89 d1             	mov    %rdx,%rcx
   104e9:	48 89 fa             	mov    %rdi,%rdx
   104ec:	48 89 c7             	mov    %rax,%rdi
   104ef:	e8 fe 3f 00 00       	call   144f2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
   104f4:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   104f8:	48 89 c7             	mov    %rax,%rdi
   104fb:	e8 d6 3f 00 00       	call   144d6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
   10500:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10507:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
   1050e:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10515:	48 8b 70 50          	mov    0x50(%rax),%rsi
   10519:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1051d:	48 8d 8d 80 fa ff ff 	lea    -0x580(%rbp),%rcx
   10524:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1052a:	48 89 c7             	mov    %rax,%rdi
   1052d:	e8 a7 40 00 00       	call   145d9 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
   10532:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10536:	be 00 00 00 00       	mov    $0x0,%esi
   1053b:	48 89 c7             	mov    %rax,%rdi
   1053e:	e8 07 42 00 00       	call   1474a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
   10543:	48 8b 10             	mov    (%rax),%rdx
   10546:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   1054d:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
   10554:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10558:	48 89 c7             	mov    %rax,%rdi
   1055b:	e8 a6 41 00 00       	call   14706 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
   10560:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
   10567:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   1056e:	48 8b 40 50          	mov    0x50(%rax),%rax
   10572:	ba 00 00 00 00       	mov    $0x0,%edx
   10577:	48 89 ce             	mov    %rcx,%rsi
   1057a:	48 89 c7             	mov    %rax,%rdi
   1057d:	e8 dc 7c ff ff       	call   825e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
   10582:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
   10589:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
   10590:	48 8b 40 50          	mov    0x50(%rax),%rax
   10594:	ba 00 00 00 00       	mov    $0x0,%edx
   10599:	48 89 ce             	mov    %rcx,%rsi
   1059c:	48 89 c7             	mov    %rax,%rdi
   1059f:	e8 ba 7c ff ff       	call   825e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
   105a4:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
   105ab:	48 89 c7             	mov    %rax,%rdi
   105ae:	e8 c7 3f 00 00       	call   1457a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   105b3:	e9 99 00 00 00       	jmp    10651 <_ZN9VulkanApp22createGraphicsPipelineEv+0xc45>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
   105b8:	48 89 c3             	mov    %rax,%rbx
   105bb:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
   105c2:	48 89 c7             	mov    %rax,%rdi
   105c5:	e8 a6 3c ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   105ca:	eb 03                	jmp    105cf <_ZN9VulkanApp22createGraphicsPipelineEv+0xbc3>
   105cc:	48 89 c3             	mov    %rax,%rbx
   105cf:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
   105d6:	48 89 c7             	mov    %rax,%rdi
   105d9:	e8 52 3f ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
   105de:	48 89 d8             	mov    %rbx,%rax
   105e1:	48 89 c7             	mov    %rax,%rdi
   105e4:	e8 17 43 ff ff       	call   4900 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
   105e9:	48 89 c3             	mov    %rax,%rbx
   105ec:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   105f3:	48 89 c7             	mov    %rax,%rdi
   105f6:	e8 75 3c ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   105fb:	eb 03                	jmp    10600 <_ZN9VulkanApp22createGraphicsPipelineEv+0xbf4>
   105fd:	48 89 c3             	mov    %rax,%rbx
   10600:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
   10607:	48 89 c7             	mov    %rax,%rdi
   1060a:	e8 21 3f ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
   1060f:	48 89 d8             	mov    %rbx,%rax
   10612:	48 89 c7             	mov    %rax,%rdi
   10615:	e8 e6 42 ff ff       	call   4900 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
   1061a:	48 89 c3             	mov    %rax,%rbx
   1061d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10621:	48 89 c7             	mov    %rax,%rdi
   10624:	e8 ad 3e 00 00       	call   144d6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   10629:	48 89 d8             	mov    %rbx,%rax
   1062c:	48 89 c7             	mov    %rax,%rdi
   1062f:	e8 cc 42 ff ff       	call   4900 <_Unwind_Resume@plt>
}
   10634:	48 89 c3             	mov    %rax,%rbx
   10637:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
   1063e:	48 89 c7             	mov    %rax,%rdi
   10641:	e8 34 3f 00 00       	call   1457a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   10646:	48 89 d8             	mov    %rbx,%rax
   10649:	48 89 c7             	mov    %rax,%rdi
   1064c:	e8 af 42 ff ff       	call   4900 <_Unwind_Resume@plt>
   10651:	48 81 c4 78 05 00 00 	add    $0x578,%rsp
   10658:	5b                   	pop    %rbx
   10659:	41 5c                	pop    %r12
   1065b:	41 5d                	pop    %r13
   1065d:	5d                   	pop    %rbp
   1065e:	c3                   	ret
   1065f:	90                   	nop

0000000000010660 <_ZN9VulkanApp18createFramebuffersEv>:

void VulkanApp::createFramebuffers() {
   10660:	55                   	push   %rbp
   10661:	48 89 e5             	mov    %rsp,%rbp
   10664:	41 55                	push   %r13
   10666:	41 54                	push   %r12
   10668:	53                   	push   %rbx
   10669:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   10670:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
   10677:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1067e:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
   10685:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1068c:	48 05 a8 00 00 00    	add    $0xa8,%rax
   10692:	48 89 c7             	mov    %rax,%rdi
   10695:	e8 d0 40 00 00       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1069a:	48 89 c6             	mov    %rax,%rsi
   1069d:	48 89 df             	mov    %rbx,%rdi
   106a0:	e8 e9 40 00 00       	call   1478e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
   106a5:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   106ac:	00 
   106ad:	e9 3a 01 00 00       	jmp    107ec <_ZN9VulkanApp18createFramebuffersEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
   106b2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   106b9:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
   106c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   106c4:	48 89 c6             	mov    %rax,%rsi
   106c7:	48 89 d7             	mov    %rdx,%rdi
   106ca:	e8 99 3c 00 00       	call   14368 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
   106cf:	48 8b 00             	mov    (%rax),%rax
   106d2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   106d6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   106da:	49 89 c4             	mov    %rax,%r12
   106dd:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   106e3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   106e7:	48 89 c7             	mov    %rax,%rdi
   106ea:	e8 25 41 00 00       	call   14814 <_ZNSaIP13VkImageView_TEC1Ev>
   106ef:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
   106f3:	4c 89 e6             	mov    %r12,%rsi
   106f6:	4c 89 ef             	mov    %r13,%rdi
   106f9:	4c 89 e1             	mov    %r12,%rcx
   106fc:	4c 89 eb             	mov    %r13,%rbx
   106ff:	48 89 df             	mov    %rbx,%rdi
   10702:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10706:	48 89 d1             	mov    %rdx,%rcx
   10709:	48 89 fa             	mov    %rdi,%rdx
   1070c:	48 89 c7             	mov    %rax,%rdi
   1070f:	e8 38 41 00 00       	call   1484c <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10714:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   10718:	48 89 c7             	mov    %rax,%rdi
   1071b:	e8 10 41 00 00       	call   14830 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
   10720:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10724:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   1072b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
   1072f:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10733:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
   10737:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
   1073e:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
   10741:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10748:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   1074f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
   10753:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10757:	48 89 c7             	mov    %rax,%rdi
   1075a:	e8 0b 40 00 00       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1075f:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
   10762:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10766:	48 89 c7             	mov    %rax,%rdi
   10769:	e8 aa 41 00 00       	call   14918 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
   1076e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
   10772:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10779:	8b 40 7c             	mov    0x7c(%rax),%eax
   1077c:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
   1077f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10786:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   1078c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
   1078f:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
   10796:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1079d:	48 8b 40 50          	mov    0x50(%rax),%rax
   107a1:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
   107a8:	ba 00 00 00 00       	mov    $0x0,%edx
   107ad:	48 89 ce             	mov    %rcx,%rsi
   107b0:	48 89 c7             	mov    %rax,%rdi
   107b3:	e8 3d 6e ff ff       	call   75f5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
   107b8:	48 89 c3             	mov    %rax,%rbx
   107bb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107c2:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   107c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107cd:	48 89 c6             	mov    %rax,%rsi
   107d0:	48 89 d7             	mov    %rdx,%rdi
   107d3:	e8 64 41 00 00       	call   1493c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   107d8:	48 89 18             	mov    %rbx,(%rax)
  }
   107db:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   107df:	48 89 c7             	mov    %rax,%rdi
   107e2:	e8 ed 40 00 00       	call   148d4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
   107e7:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   107ec:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   107f3:	48 05 a8 00 00 00    	add    $0xa8,%rax
   107f9:	48 89 c7             	mov    %rax,%rdi
   107fc:	e8 69 3f 00 00       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10801:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   10805:	0f 92 c0             	setb   %al
   10808:	84 c0                	test   %al,%al
   1080a:	0f 85 a2 fe ff ff    	jne    106b2 <_ZN9VulkanApp18createFramebuffersEv+0x52>
}
   10810:	eb 34                	jmp    10846 <_ZN9VulkanApp18createFramebuffersEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
   10812:	48 89 c3             	mov    %rax,%rbx
   10815:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   10819:	48 89 c7             	mov    %rax,%rdi
   1081c:	e8 0f 40 00 00       	call   14830 <_ZNSaIP13VkImageView_TED1Ev>
   10821:	48 89 d8             	mov    %rbx,%rax
   10824:	48 89 c7             	mov    %rax,%rdi
   10827:	e8 d4 40 ff ff       	call   4900 <_Unwind_Resume@plt>
  }
   1082c:	48 89 c3             	mov    %rax,%rbx
   1082f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10833:	48 89 c7             	mov    %rax,%rdi
   10836:	e8 99 40 00 00       	call   148d4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   1083b:	48 89 d8             	mov    %rbx,%rax
   1083e:	48 89 c7             	mov    %rax,%rdi
   10841:	e8 ba 40 ff ff       	call   4900 <_Unwind_Resume@plt>
}
   10846:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1084d:	5b                   	pop    %rbx
   1084e:	41 5c                	pop    %r12
   10850:	41 5d                	pop    %r13
   10852:	5d                   	pop    %rbp
   10853:	c3                   	ret

0000000000010854 <_ZN9VulkanApp17recreateSwapchainEv>:

void VulkanApp::recreateSwapchain() {
   10854:	55                   	push   %rbp
   10855:	48 89 e5             	mov    %rsp,%rbp
   10858:	48 83 ec 20          	sub    $0x20,%rsp
   1085c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  /* Handle minimization */
  int width = 0, heigth = 0;
   10860:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   10867:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &width, &heigth);
   1086e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10872:	48 8b 00             	mov    (%rax),%rax
   10875:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   10879:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   1087d:	48 89 ce             	mov    %rcx,%rsi
   10880:	48 89 c7             	mov    %rax,%rdi
   10883:	e8 88 3f ff ff       	call   4810 <glfwGetFramebufferSize@plt>
  while (width == 0 || heigth == 0) {
   10888:	eb 1f                	jmp    108a9 <_ZN9VulkanApp17recreateSwapchainEv+0x55>
    glfwGetFramebufferSize(window, &width, &heigth);
   1088a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1088e:	48 8b 00             	mov    (%rax),%rax
   10891:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   10895:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   10899:	48 89 ce             	mov    %rcx,%rsi
   1089c:	48 89 c7             	mov    %rax,%rdi
   1089f:	e8 6c 3f ff ff       	call   4810 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
   108a4:	e8 97 39 ff ff       	call   4240 <glfwWaitEvents@plt>
  while (width == 0 || heigth == 0) {
   108a9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   108ac:	85 c0                	test   %eax,%eax
   108ae:	74 da                	je     1088a <_ZN9VulkanApp17recreateSwapchainEv+0x36>
   108b0:	8b 45 f8             	mov    -0x8(%rbp),%eax
   108b3:	85 c0                	test   %eax,%eax
   108b5:	74 d3                	je     1088a <_ZN9VulkanApp17recreateSwapchainEv+0x36>
  }

  /* Recreate the swapchain */
  vkDeviceWaitIdle(device);
   108b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108bb:	48 8b 40 50          	mov    0x50(%rax),%rax
   108bf:	48 89 c7             	mov    %rax,%rdi
   108c2:	e8 f9 37 ff ff       	call   40c0 <vkDeviceWaitIdle@plt>
  cleanupSwapchain();
   108c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108cb:	48 89 c7             	mov    %rax,%rdi
   108ce:	e8 33 00 00 00       	call   10906 <_ZN9VulkanApp16cleanupSwapchainEv>
  createSwapchain();
   108d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108d7:	48 89 c7             	mov    %rax,%rdi
   108da:	e8 3b ef ff ff       	call   f81a <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   108df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108e3:	48 89 c7             	mov    %rax,%rdi
   108e6:	e8 75 ef ff ff       	call   f860 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   108eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ef:	48 89 c7             	mov    %rax,%rdi
   108f2:	e8 15 f1 ff ff       	call   fa0c <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   108f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108fb:	48 89 c7             	mov    %rax,%rdi
   108fe:	e8 5d fd ff ff       	call   10660 <_ZN9VulkanApp18createFramebuffersEv>
}
   10903:	90                   	nop
   10904:	c9                   	leave
   10905:	c3                   	ret

0000000000010906 <_ZN9VulkanApp16cleanupSwapchainEv>:

void VulkanApp::cleanupSwapchain() {
   10906:	55                   	push   %rbp
   10907:	48 89 e5             	mov    %rsp,%rbp
   1090a:	48 83 ec 50          	sub    $0x50,%rsp
   1090e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  for (auto &framebuffer : framebuffers) {
   10912:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10916:	48 05 00 01 00 00    	add    $0x100,%rax
   1091c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10924:	48 89 c7             	mov    %rax,%rdi
   10927:	e8 30 40 00 00       	call   1495c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
   1092c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10934:	48 89 c7             	mov    %rax,%rdi
   10937:	e8 46 40 00 00       	call   14982 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
   1093c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10940:	eb 3b                	jmp    1097d <_ZN9VulkanApp16cleanupSwapchainEv+0x77>
   10942:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10946:	48 89 c7             	mov    %rax,%rdi
   10949:	e8 b8 40 00 00       	call   14a06 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
   1094e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
   10952:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10956:	48 8b 08             	mov    (%rax),%rcx
   10959:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1095d:	48 8b 40 50          	mov    0x50(%rax),%rax
   10961:	ba 00 00 00 00       	mov    $0x0,%edx
   10966:	48 89 ce             	mov    %rcx,%rsi
   10969:	48 89 c7             	mov    %rax,%rdi
   1096c:	e8 34 7a ff ff       	call   83a5 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
   10971:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10975:	48 89 c7             	mov    %rax,%rdi
   10978:	e8 69 40 00 00       	call   149e6 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
   1097d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10981:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10985:	48 89 d6             	mov    %rdx,%rsi
   10988:	48 89 c7             	mov    %rax,%rdi
   1098b:	e8 1b 40 00 00       	call   149ab <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10990:	84 c0                	test   %al,%al
   10992:	75 ae                	jne    10942 <_ZN9VulkanApp16cleanupSwapchainEv+0x3c>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
   10994:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10998:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
   1099f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109a3:	48 8b 40 50          	mov    0x50(%rax),%rax
   109a7:	ba 00 00 00 00       	mov    $0x0,%edx
   109ac:	48 89 ce             	mov    %rcx,%rsi
   109af:	48 89 c7             	mov    %rax,%rdi
   109b2:	e8 31 79 ff ff       	call   82e8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
   109b7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109bb:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
   109c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109c6:	48 8b 40 50          	mov    0x50(%rax),%rax
   109ca:	ba 00 00 00 00       	mov    $0x0,%edx
   109cf:	48 89 ce             	mov    %rcx,%rsi
   109d2:	48 89 c7             	mov    %rax,%rdi
   109d5:	e8 b2 78 ff ff       	call   828c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
   109da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109de:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
   109e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109e9:	48 8b 40 50          	mov    0x50(%rax),%rax
   109ed:	ba 00 00 00 00       	mov    $0x0,%edx
   109f2:	48 89 ce             	mov    %rcx,%rsi
   109f5:	48 89 c7             	mov    %rax,%rdi
   109f8:	e8 bd 78 ff ff       	call   82ba <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
   109fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a01:	48 05 a8 00 00 00    	add    $0xa8,%rax
   10a07:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10a0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a0f:	48 89 c7             	mov    %rax,%rdi
   10a12:	e8 01 40 00 00       	call   14a18 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
   10a17:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10a1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a1f:	48 89 c7             	mov    %rax,%rdi
   10a22:	e8 17 40 00 00       	call   14a3e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
   10a27:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10a2b:	eb 3b                	jmp    10a68 <_ZN9VulkanApp16cleanupSwapchainEv+0x162>
   10a2d:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10a31:	48 89 c7             	mov    %rax,%rdi
   10a34:	e8 89 40 00 00       	call   14ac2 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
   10a39:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
   10a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a41:	48 8b 08             	mov    (%rax),%rcx
   10a44:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a48:	48 8b 40 50          	mov    0x50(%rax),%rax
   10a4c:	ba 00 00 00 00       	mov    $0x0,%edx
   10a51:	48 89 ce             	mov    %rcx,%rsi
   10a54:	48 89 c7             	mov    %rax,%rdi
   10a57:	e8 d4 77 ff ff       	call   8230 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
   10a5c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10a60:	48 89 c7             	mov    %rax,%rdi
   10a63:	e8 3a 40 00 00       	call   14aa2 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
   10a68:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10a6c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10a70:	48 89 d6             	mov    %rdx,%rsi
   10a73:	48 89 c7             	mov    %rax,%rdi
   10a76:	e8 ec 3f 00 00       	call   14a67 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10a7b:	84 c0                	test   %al,%al
   10a7d:	75 ae                	jne    10a2d <_ZN9VulkanApp16cleanupSwapchainEv+0x127>
  }
  vkh::destroySwapchain(device, swapchain.self);
   10a7f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a83:	48 8b 48 70          	mov    0x70(%rax),%rcx
   10a87:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a8b:	48 8b 40 50          	mov    0x50(%rax),%rax
   10a8f:	ba 00 00 00 00       	mov    $0x0,%edx
   10a94:	48 89 ce             	mov    %rcx,%rsi
   10a97:	48 89 c7             	mov    %rax,%rdi
   10a9a:	e8 63 77 ff ff       	call   8202 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
}
   10a9f:	90                   	nop
   10aa0:	c9                   	leave
   10aa1:	c3                   	ret

0000000000010aa2 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>:

void VulkanApp::framebufferResizeCallback(GLFWwindow *windowInstance,
                                          [[maybe_unused]] int width,
                                          [[maybe_unused]] int height) {
   10aa2:	55                   	push   %rbp
   10aa3:	48 89 e5             	mov    %rsp,%rbp
   10aa6:	48 83 ec 20          	sub    $0x20,%rsp
   10aaa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10aae:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   10ab1:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app =
      reinterpret_cast<VulkanApp *>(glfwGetWindowUserPointer(windowInstance));
   10ab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab8:	48 89 c7             	mov    %rax,%rdi
   10abb:	e8 00 3c ff ff       	call   46c0 <glfwGetWindowUserPointer@plt>
   10ac0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->framebufferResized = true;
   10ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac8:	c6 80 18 01 00 00 01 	movb   $0x1,0x118(%rax)
}
   10acf:	90                   	nop
   10ad0:	c9                   	leave
   10ad1:	c3                   	ret

0000000000010ad2 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
   10ad2:	55                   	push   %rbp
   10ad3:	48 89 e5             	mov    %rsp,%rbp
   10ad6:	48 83 ec 30          	sub    $0x30,%rsp
   10ada:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
   10ade:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10ae2:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   10ae6:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
   10aeb:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
   10af2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10af9:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
   10afa:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
   10b01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b05:	8b 40 68             	mov    0x68(%rax),%eax
   10b08:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
   10b0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b0f:	48 8b 40 50          	mov    0x50(%rax),%rax
   10b13:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   10b17:	ba 00 00 00 00       	mov    $0x0,%edx
   10b1c:	48 89 ce             	mov    %rcx,%rsi
   10b1f:	48 89 c7             	mov    %rax,%rdi
   10b22:	e8 66 6b ff ff       	call   768d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
   10b27:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10b2b:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
   10b32:	90                   	nop
   10b33:	c9                   	leave
   10b34:	c3                   	ret
   10b35:	90                   	nop

0000000000010b36 <_ZN9VulkanApp20createCommandBuffersEv>:

void VulkanApp::createCommandBuffers() {
   10b36:	55                   	push   %rbp
   10b37:	48 89 e5             	mov    %rsp,%rbp
   10b3a:	48 83 ec 50          	sub    $0x50,%rsp
   10b3e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
   10b42:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10b46:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   10b4a:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   10b4e:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
   10b55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b59:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   10b60:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   10b64:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount =
      static_cast<uint32_t>(maxFramesInFlight);
   10b6b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b6f:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  cmdBufferAllocInfo.commandBufferCount =
   10b76:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffers = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
   10b79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b7d:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10b81:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10b85:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   10b89:	48 89 ce             	mov    %rcx,%rsi
   10b8c:	48 89 c7             	mov    %rax,%rdi
   10b8f:	e8 d8 58 ff ff       	call   646c <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   10b94:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b98:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   10b9f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10ba3:	48 89 c6             	mov    %rax,%rsi
   10ba6:	48 89 d7             	mov    %rdx,%rdi
   10ba9:	e8 26 3f 00 00       	call   14ad4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>
   10bae:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10bb2:	48 89 c7             	mov    %rax,%rdi
   10bb5:	e8 a8 5b ff ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
   10bba:	90                   	nop
   10bbb:	c9                   	leave
   10bbc:	c3                   	ret
   10bbd:	90                   	nop

0000000000010bbe <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
   10bbe:	55                   	push   %rbp
   10bbf:	48 89 e5             	mov    %rsp,%rbp
   10bc2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   10bc9:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   10bd0:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   10bd7:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
  /* 1. Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
   10bdd:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10be1:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   10be5:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   10be9:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
   10bf0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
   10bf7:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   10bfe:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
   10bff:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10c03:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10c0a:	48 89 d6             	mov    %rdx,%rsi
   10c0d:	48 89 c7             	mov    %rax,%rdi
   10c10:	e8 5a 59 ff ff       	call   656f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* 2. Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
   10c15:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c19:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   10c1e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c22:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   10c27:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c2b:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   10c30:	f3 0f 10 05 50 00 01 	movss  0x10050(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   10c37:	00 
   10c38:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
   10c3d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10c41:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10c45:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   10c49:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   10c4d:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
   10c51:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
   10c58:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10c5f:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   10c66:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
   10c6a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10c71:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   10c78:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   10c7e:	48 89 c6             	mov    %rax,%rsi
   10c81:	48 89 d7             	mov    %rdx,%rdi
   10c84:	e8 b3 3c 00 00       	call   1493c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   10c89:	48 8b 00             	mov    (%rax),%rax
   10c8c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
   10c90:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   10c97:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
   10c9e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10ca5:	48 8b 40 7c          	mov    0x7c(%rax),%rax
   10ca9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
   10cad:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
   10cb4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10cb8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
   10cbc:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   10cc0:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10cc7:	ba 00 00 00 00       	mov    $0x0,%edx
   10ccc:	48 89 ce             	mov    %rcx,%rsi
   10ccf:	48 89 c7             	mov    %rax,%rdi
   10cd2:	e8 39 3a ff ff       	call   4710 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* 3. Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
   10cd7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10cde:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
   10ce5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10cec:	be 00 00 00 00       	mov    $0x0,%esi
   10cf1:	48 89 c7             	mov    %rax,%rdi
   10cf4:	e8 c7 36 ff ff       	call   43c0 <vkCmdBindPipeline@plt>
                    graphicsPipeline.self);

  /* Bind the buffers */
  VkBuffer vertexBuffers[] = {vertexBuffer};
   10cf9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10d00:	48 8b 80 98 01 00 00 	mov    0x198(%rax),%rax
   10d07:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  VkDeviceSize offsets[] = {0};
   10d0b:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   10d12:	00 
  vkCmdBindVertexBuffers(cmdBuffer, 0, 1, vertexBuffers, offsets);
   10d13:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
   10d17:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   10d1b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d22:	49 89 c8             	mov    %rcx,%r8
   10d25:	48 89 d1             	mov    %rdx,%rcx
   10d28:	ba 01 00 00 00       	mov    $0x1,%edx
   10d2d:	be 00 00 00 00       	mov    $0x0,%esi
   10d32:	48 89 c7             	mov    %rax,%rdi
   10d35:	e8 06 3a ff ff       	call   4740 <vkCmdBindVertexBuffers@plt>

  /* Bind if using index buffers */
  vkCmdBindIndexBuffer(cmdBuffer, indexBuffer, 0, VK_INDEX_TYPE_UINT16);
   10d3a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10d41:	48 8b b0 a8 01 00 00 	mov    0x1a8(%rax),%rsi
   10d48:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d4f:	b9 00 00 00 00       	mov    $0x0,%ecx
   10d54:	ba 00 00 00 00       	mov    $0x0,%edx
   10d59:	48 89 c7             	mov    %rax,%rdi
   10d5c:	e8 cf 39 ff ff       	call   4730 <vkCmdBindIndexBuffer@plt>
  static const uint32_t instanceCount = 1;
  static const uint32_t firstIndex = 0;
  static const uint32_t vertexOffset = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDrawIndexed(cmdBuffer,
                   static_cast<uint32_t>(shader::triangle_indices.size()),
   10d61:	48 8d 05 f8 08 02 00 	lea    0x208f8(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   10d68:	48 89 c7             	mov    %rax,%rdi
   10d6b:	e8 9c 3d 00 00       	call   14b0c <_ZNKSt6vectorItSaItEE4sizeEv>
  vkCmdDrawIndexed(cmdBuffer,
   10d70:	89 c6                	mov    %eax,%esi
   10d72:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d79:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   10d7f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10d85:	b9 00 00 00 00       	mov    $0x0,%ecx
   10d8a:	ba 01 00 00 00       	mov    $0x1,%edx
   10d8f:	48 89 c7             	mov    %rax,%rdi
   10d92:	e8 b9 33 ff ff       	call   4150 <vkCmdDrawIndexed@plt>
                   instanceCount, firstIndex, vertexOffset, firstInstance);

  /* 4. End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
   10d97:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10d9e:	48 89 c7             	mov    %rax,%rdi
   10da1:	e8 aa 32 ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
   10da6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10dad:	48 89 c7             	mov    %rax,%rdi
   10db0:	e8 44 58 ff ff       	call   65f9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
   10db5:	90                   	nop
   10db6:	c9                   	leave
   10db7:	c3                   	ret

0000000000010db8 <_ZN9VulkanApp14findMemoryTypeEjj>:

uint32_t VulkanApp::findMemoryType(uint32_t typeFilter,
                                   VkMemoryPropertyFlags propFlags) {
   10db8:	55                   	push   %rbp
   10db9:	48 89 e5             	mov    %rsp,%rbp
   10dbc:	41 54                	push   %r12
   10dbe:	53                   	push   %rbx
   10dbf:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
   10dc6:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
   10dcd:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
   10dd3:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)
  VkPhysicalDeviceMemoryProperties memoryProperties;
  vkGetPhysicalDeviceMemoryProperties(physicalDevice, &memoryProperties);
   10dd9:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   10de0:	48 8b 40 58          	mov    0x58(%rax),%rax
   10de4:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
   10deb:	48 89 d6             	mov    %rdx,%rsi
   10dee:	48 89 c7             	mov    %rax,%rdi
   10df1:	e8 0a 3a ff ff       	call   4800 <vkGetPhysicalDeviceMemoryProperties@plt>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   10df6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   10dfd:	eb 39                	jmp    10e38 <_ZN9VulkanApp14findMemoryTypeEjj+0x80>
    if (typeFilter & (1 << i) &&
   10dff:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10e02:	ba 01 00 00 00       	mov    $0x1,%edx
   10e07:	89 c1                	mov    %eax,%ecx
   10e09:	d3 e2                	shl    %cl,%edx
   10e0b:	89 d0                	mov    %edx,%eax
   10e0d:	23 85 d4 fd ff ff    	and    -0x22c(%rbp),%eax
   10e13:	85 c0                	test   %eax,%eax
   10e15:	74 1d                	je     10e34 <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
        (memoryProperties.memoryTypes[i].propertyFlags & propFlags) ==
   10e17:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10e1a:	8b 84 c5 e4 fd ff ff 	mov    -0x21c(%rbp,%rax,8),%eax
   10e21:	23 85 d0 fd ff ff    	and    -0x230(%rbp),%eax
    if (typeFilter & (1 << i) &&
   10e27:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%rbp)
   10e2d:	75 05                	jne    10e34 <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
            propFlags) {
      return i;
   10e2f:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10e32:	eb 60                	jmp    10e94 <_ZN9VulkanApp14findMemoryTypeEjj+0xdc>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   10e34:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   10e38:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
   10e3e:	39 45 ec             	cmp    %eax,-0x14(%rbp)
   10e41:	72 bc                	jb     10dff <_ZN9VulkanApp14findMemoryTypeEjj+0x47>
    }
  }
  throw std::runtime_error("Failed to find suitable memory type.");
   10e43:	bf 10 00 00 00       	mov    $0x10,%edi
   10e48:	e8 73 33 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   10e4d:	48 89 c3             	mov    %rax,%rbx
   10e50:	48 8d 05 29 fa 00 00 	lea    0xfa29(%rip),%rax        # 20880 <_ZZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_TjE13firstInstance+0x4>
   10e57:	48 89 c6             	mov    %rax,%rsi
   10e5a:	48 89 df             	mov    %rbx,%rdi
   10e5d:	e8 ce 32 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10e62:	48 8b 05 3f 01 02 00 	mov    0x2013f(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10e69:	48 89 c2             	mov    %rax,%rdx
   10e6c:	48 8d 05 cd fe 01 00 	lea    0x1fecd(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10e73:	48 89 c6             	mov    %rax,%rsi
   10e76:	48 89 df             	mov    %rbx,%rdi
   10e79:	e8 12 3a ff ff       	call   4890 <__cxa_throw@plt>
   10e7e:	49 89 c4             	mov    %rax,%r12
   10e81:	48 89 df             	mov    %rbx,%rdi
   10e84:	e8 47 34 ff ff       	call   42d0 <__cxa_free_exception@plt>
   10e89:	4c 89 e0             	mov    %r12,%rax
   10e8c:	48 89 c7             	mov    %rax,%rdi
   10e8f:	e8 6c 3a ff ff       	call   4900 <_Unwind_Resume@plt>
}
   10e94:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
   10e9b:	5b                   	pop    %rbx
   10e9c:	41 5c                	pop    %r12
   10e9e:	5d                   	pop    %rbp
   10e9f:	c3                   	ret

0000000000010ea0 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>:

void VulkanApp::createBuffer(VkDeviceSize size, VkBufferUsageFlags usage,
                             VkMemoryPropertyFlags propertyFlags,
                             VkBuffer &buffer, VkDeviceMemory &bufferMemory) {
   10ea0:	55                   	push   %rbp
   10ea1:	48 89 e5             	mov    %rsp,%rbp
   10ea4:	41 54                	push   %r12
   10ea6:	53                   	push   %rbx
   10ea7:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   10eae:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   10eb5:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   10ebc:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
   10ec2:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
   10ec8:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
   10ecf:	4c 89 8d 48 ff ff ff 	mov    %r9,-0xb8(%rbp)
  [[maybe_unused]] static constexpr uint32_t vertexBufferCount = 1;
  VkBufferCreateInfo bufferInfo{};
   10ed6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10eda:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   10ede:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   10ee2:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   10ee6:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
   10eeb:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size = size;
   10ef2:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   10ef9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = usage;
   10efd:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   10f03:	89 45 d0             	mov    %eax,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
   10f06:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &buffer) != VK_SUCCESS) {
   10f0d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10f14:	48 8b 40 50          	mov    0x50(%rax),%rax
   10f18:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   10f1f:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   10f23:	48 89 d1             	mov    %rdx,%rcx
   10f26:	ba 00 00 00 00       	mov    $0x0,%edx
   10f2b:	48 89 c7             	mov    %rax,%rdi
   10f2e:	e8 2d 35 ff ff       	call   4460 <vkCreateBuffer@plt>
   10f33:	85 c0                	test   %eax,%eax
   10f35:	0f 95 c0             	setne  %al
   10f38:	84 c0                	test   %al,%al
   10f3a:	74 3b                	je     10f77 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0xd7>
    throw std::runtime_error("Failed creating vertex buffer.");
   10f3c:	bf 10 00 00 00       	mov    $0x10,%edi
   10f41:	e8 7a 32 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   10f46:	48 89 c3             	mov    %rax,%rbx
   10f49:	48 8d 05 60 f9 00 00 	lea    0xf960(%rip),%rax        # 208b0 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x8>
   10f50:	48 89 c6             	mov    %rax,%rsi
   10f53:	48 89 df             	mov    %rbx,%rdi
   10f56:	e8 d5 31 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10f5b:	48 8b 05 46 00 02 00 	mov    0x20046(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10f62:	48 89 c2             	mov    %rax,%rdx
   10f65:	48 8d 05 d4 fd 01 00 	lea    0x1fdd4(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10f6c:	48 89 c6             	mov    %rax,%rsi
   10f6f:	48 89 df             	mov    %rbx,%rdi
   10f72:	e8 19 39 ff ff       	call   4890 <__cxa_throw@plt>
  }

  VkMemoryRequirements memoryRequirements;
  vkGetBufferMemoryRequirements(device, buffer, &memoryRequirements);
   10f77:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   10f7e:	48 8b 08             	mov    (%rax),%rcx
   10f81:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10f88:	48 8b 40 50          	mov    0x50(%rax),%rax
   10f8c:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   10f90:	48 89 ce             	mov    %rcx,%rsi
   10f93:	48 89 c7             	mov    %rax,%rdi
   10f96:	e8 f5 30 ff ff       	call   4090 <vkGetBufferMemoryRequirements@plt>

  VkMemoryAllocateInfo allocInfo{};
   10f9b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10f9f:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   10fa6:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
   10faa:	c7 85 70 ff ff ff 05 	movl   $0x5,-0x90(%rbp)
   10fb1:	00 00 00 
  allocInfo.allocationSize = memoryRequirements.size;
   10fb4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10fb8:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  allocInfo.memoryTypeIndex =
      findMemoryType(memoryRequirements.memoryTypeBits, propertyFlags);
   10fbc:	8b 4d a0             	mov    -0x60(%rbp),%ecx
   10fbf:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   10fc5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10fcc:	89 ce                	mov    %ecx,%esi
   10fce:	48 89 c7             	mov    %rax,%rdi
   10fd1:	e8 e2 fd ff ff       	call   10db8 <_ZN9VulkanApp14findMemoryTypeEjj>
  allocInfo.memoryTypeIndex =
   10fd6:	89 45 88             	mov    %eax,-0x78(%rbp)
  if (vkAllocateMemory(device, &allocInfo, nullptr, &bufferMemory) !=
   10fd9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10fe0:	48 8b 40 50          	mov    0x50(%rax),%rax
   10fe4:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   10feb:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
   10ff2:	48 89 d1             	mov    %rdx,%rcx
   10ff5:	ba 00 00 00 00       	mov    $0x0,%edx
   10ffa:	48 89 c7             	mov    %rax,%rdi
   10ffd:	e8 6e 38 ff ff       	call   4870 <vkAllocateMemory@plt>
   11002:	85 c0                	test   %eax,%eax
   11004:	0f 95 c0             	setne  %al
   11007:	84 c0                	test   %al,%al
   11009:	74 3b                	je     11046 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x1a6>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   1100b:	bf 10 00 00 00       	mov    $0x10,%edi
   11010:	e8 ab 31 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   11015:	48 89 c3             	mov    %rax,%rbx
   11018:	48 8d 05 b1 f8 00 00 	lea    0xf8b1(%rip),%rax        # 208d0 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x28>
   1101f:	48 89 c6             	mov    %rax,%rsi
   11022:	48 89 df             	mov    %rbx,%rdi
   11025:	e8 06 31 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   1102a:	48 8b 05 77 ff 01 00 	mov    0x1ff77(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11031:	48 89 c2             	mov    %rax,%rdx
   11034:	48 8d 05 05 fd 01 00 	lea    0x1fd05(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1103b:	48 89 c6             	mov    %rax,%rsi
   1103e:	48 89 df             	mov    %rbx,%rdi
   11041:	e8 4a 38 ff ff       	call   4890 <__cxa_throw@plt>
  }
  vkBindBufferMemory(device, buffer, bufferMemory, 0);
   11046:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1104d:	48 8b 10             	mov    (%rax),%rdx
   11050:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11057:	48 8b 30             	mov    (%rax),%rsi
   1105a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11061:	48 8b 40 50          	mov    0x50(%rax),%rax
   11065:	b9 00 00 00 00       	mov    $0x0,%ecx
   1106a:	48 89 c7             	mov    %rax,%rdi
   1106d:	e8 3e 35 ff ff       	call   45b0 <vkBindBufferMemory@plt>
}
   11072:	eb 2c                	jmp    110a0 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x200>
    throw std::runtime_error("Failed creating vertex buffer.");
   11074:	49 89 c4             	mov    %rax,%r12
   11077:	48 89 df             	mov    %rbx,%rdi
   1107a:	e8 51 32 ff ff       	call   42d0 <__cxa_free_exception@plt>
   1107f:	4c 89 e0             	mov    %r12,%rax
   11082:	48 89 c7             	mov    %rax,%rdi
   11085:	e8 76 38 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   1108a:	49 89 c4             	mov    %rax,%r12
   1108d:	48 89 df             	mov    %rbx,%rdi
   11090:	e8 3b 32 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11095:	4c 89 e0             	mov    %r12,%rax
   11098:	48 89 c7             	mov    %rax,%rdi
   1109b:	e8 60 38 ff ff       	call   4900 <_Unwind_Resume@plt>
}
   110a0:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
   110a7:	5b                   	pop    %rbx
   110a8:	41 5c                	pop    %r12
   110aa:	5d                   	pop    %rbp
   110ab:	c3                   	ret

00000000000110ac <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>:

void VulkanApp::copyBuffer(VkBuffer src, VkBuffer dst, VkDeviceSize size) {
   110ac:	55                   	push   %rbp
   110ad:	48 89 e5             	mov    %rsp,%rbp
   110b0:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   110b7:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
   110be:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
   110c5:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   110cc:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
  VkCommandBufferAllocateInfo allocInfo{};
   110d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   110d7:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   110db:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   110df:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   110e6:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  allocInfo.commandPool = commandPool;
   110ed:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   110f4:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   110fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  allocInfo.commandBufferCount = 1;
   110ff:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)

  VkCommandBuffer commandBuffer =
      vkh::allocateCommandBuffer(device, &allocInfo);
   11106:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1110d:	48 8b 40 50          	mov    0x50(%rax),%rax
   11111:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   11115:	48 89 d6             	mov    %rdx,%rsi
   11118:	48 89 c7             	mov    %rax,%rdi
   1111b:	e8 5c 52 ff ff       	call   637c <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   11120:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

  VkCommandBufferBeginInfo beginInfo{};
   11124:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11128:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   1112c:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   11130:	c7 45 b0 2a 00 00 00 	movl   $0x2a,-0x50(%rbp)
  beginInfo.flags = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT;
   11137:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  vkh::beginCommandBuffer(commandBuffer, &beginInfo);
   1113e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11142:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   11146:	48 89 d6             	mov    %rdx,%rsi
   11149:	48 89 c7             	mov    %rax,%rdi
   1114c:	e8 1e 54 ff ff       	call   656f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  VkBufferCopy copyRegion{};
   11151:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11155:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   11159:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  copyRegion.srcOffset = 0;
   1115e:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   11165:	00 
  copyRegion.dstOffset = 0;
   11166:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   1116d:	00 
  copyRegion.size = size;
   1116e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11175:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  vkCmdCopyBuffer(commandBuffer, src, dst, 1, &copyRegion);
   11179:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1117d:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   11181:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   11188:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
   1118f:	49 89 c8             	mov    %rcx,%r8
   11192:	b9 01 00 00 00       	mov    $0x1,%ecx
   11197:	48 89 c7             	mov    %rax,%rdi
   1119a:	e8 c1 35 ff ff       	call   4760 <vkCmdCopyBuffer@plt>

  vkh::endCommandBuffer(commandBuffer);
   1119f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111a3:	48 89 c7             	mov    %rax,%rdi
   111a6:	e8 4e 54 ff ff       	call   65f9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>

  VkSubmitInfo submitInfo{};
   111ab:	66 0f ef c0          	pxor   %xmm0,%xmm0
   111af:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
   111b6:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
   111bd:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
   111c4:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   111cb:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   111d0:	c7 85 40 ff ff ff 04 	movl   $0x4,-0xc0(%rbp)
   111d7:	00 00 00 
  submitInfo.commandBufferCount = 1;
   111da:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%rbp)
   111e1:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffer;
   111e4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   111e8:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  /* Submit and wait on this transfer to complete before cleaning up
  the command buffer */
  vkQueueSubmit(queue, 1, &submitInfo, VK_NULL_HANDLE);
   111ef:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   111f6:	48 8b 40 60          	mov    0x60(%rax),%rax
   111fa:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   11201:	b9 00 00 00 00       	mov    $0x0,%ecx
   11206:	be 01 00 00 00       	mov    $0x1,%esi
   1120b:	48 89 c7             	mov    %rax,%rdi
   1120e:	e8 6d 34 ff ff       	call   4680 <vkQueueSubmit@plt>
  vkQueueWaitIdle(queue);
   11213:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1121a:	48 8b 40 60          	mov    0x60(%rax),%rax
   1121e:	48 89 c7             	mov    %rax,%rdi
   11221:	e8 ba 36 ff ff       	call   48e0 <vkQueueWaitIdle@plt>
  vkFreeCommandBuffers(device, commandPool, 1, &commandBuffer);
   11226:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1122d:	48 8b b0 40 01 00 00 	mov    0x140(%rax),%rsi
   11234:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1123b:	48 8b 40 50          	mov    0x50(%rax),%rax
   1123f:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   11243:	48 89 d1             	mov    %rdx,%rcx
   11246:	ba 01 00 00 00       	mov    $0x1,%edx
   1124b:	48 89 c7             	mov    %rax,%rdi
   1124e:	e8 8d 30 ff ff       	call   42e0 <vkFreeCommandBuffers@plt>
}
   11253:	90                   	nop
   11254:	c9                   	leave
   11255:	c3                   	ret

0000000000011256 <_ZN9VulkanApp18createVertexBufferEv>:

void VulkanApp::createVertexBuffer() {
   11256:	55                   	push   %rbp
   11257:	48 89 e5             	mov    %rsp,%rbp
   1125a:	48 83 ec 30          	sub    $0x30,%rsp
   1125e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize = sizeof(shader::triangle_index_data[0]) *
                            shader::triangle_index_data.size();
   11262:	48 8d 05 17 04 02 00 	lea    0x20417(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   11269:	48 89 c7             	mov    %rax,%rdi
   1126c:	e8 bd 38 00 00       	call   14b2e <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>
   11271:	48 89 c2             	mov    %rax,%rdx
   11274:	48 89 d0             	mov    %rdx,%rax
   11277:	48 c1 e0 02          	shl    $0x2,%rax
   1127b:	48 01 d0             	add    %rdx,%rax
   1127e:	48 c1 e0 02          	shl    $0x2,%rax
   11282:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  /* Create a host visible buffer as temporary buffer */
  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
   11286:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   1128a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1128e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   11292:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11296:	49 89 c9             	mov    %rcx,%r9
   11299:	49 89 d0             	mov    %rdx,%r8
   1129c:	b9 06 00 00 00       	mov    $0x6,%ecx
   112a1:	ba 01 00 00 00       	mov    $0x1,%edx
   112a6:	48 89 c7             	mov    %rax,%rdi
   112a9:	e8 f2 fb ff ff       	call   10ea0 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  /* Copy the vertices data to the staging buffer */
  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
   112ae:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   112b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112b6:	48 8b 40 50          	mov    0x50(%rax),%rax
   112ba:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   112be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   112c2:	49 89 c9             	mov    %rcx,%r9
   112c5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   112cb:	48 89 d1             	mov    %rdx,%rcx
   112ce:	ba 00 00 00 00       	mov    $0x0,%edx
   112d3:	48 89 c7             	mov    %rax,%rdi
   112d6:	e8 15 31 ff ff       	call   43f0 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle_index_data.data(),
   112db:	48 8d 05 9e 03 02 00 	lea    0x2039e(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   112e2:	48 89 c7             	mov    %rax,%rdi
   112e5:	e8 72 38 00 00       	call   14b5c <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>
   112ea:	48 89 c1             	mov    %rax,%rcx
   112ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   112f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   112f5:	48 89 ce             	mov    %rcx,%rsi
   112f8:	48 89 c7             	mov    %rax,%rdi
   112fb:	e8 50 30 ff ff       	call   4350 <memcpy@plt>
              static_cast<size_t>(bufferSize));
  vkUnmapMemory(device, stagingBufferMemory);
   11300:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11304:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11308:	48 8b 40 50          	mov    0x50(%rax),%rax
   1130c:	48 89 d6             	mov    %rdx,%rsi
   1130f:	48 89 c7             	mov    %rax,%rdi
   11312:	e8 29 30 ff ff       	call   4340 <vkUnmapMemory@plt>

  /* Create a device local buffer as actual vertex buffer */
  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, vertexBuffer, vertexBufferMemory);
   11317:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1131b:	48 8d 88 a0 01 00 00 	lea    0x1a0(%rax),%rcx
   11322:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11326:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
  createBuffer(
   1132d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   11331:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11335:	49 89 c9             	mov    %rcx,%r9
   11338:	49 89 d0             	mov    %rdx,%r8
   1133b:	b9 01 00 00 00       	mov    $0x1,%ecx
   11340:	ba 82 00 00 00       	mov    $0x82,%edx
   11345:	48 89 c7             	mov    %rax,%rdi
   11348:	e8 53 fb ff ff       	call   10ea0 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  /* Copy the data from the staging buffer to the device buffer */
  copyBuffer(stagingBuffer, vertexBuffer, bufferSize);
   1134d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11351:	48 8b 90 98 01 00 00 	mov    0x198(%rax),%rdx
   11358:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1135c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   11360:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11364:	48 89 c7             	mov    %rax,%rdi
   11367:	e8 40 fd ff ff       	call   110ac <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>

  /* Clean the staging buffer */
  vkDestroyBuffer(device, stagingBuffer, nullptr);
   1136c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11370:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11374:	48 8b 40 50          	mov    0x50(%rax),%rax
   11378:	ba 00 00 00 00       	mov    $0x0,%edx
   1137d:	48 89 ce             	mov    %rcx,%rsi
   11380:	48 89 c7             	mov    %rax,%rdi
   11383:	e8 48 2e ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
   11388:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1138c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11390:	48 8b 40 50          	mov    0x50(%rax),%rax
   11394:	ba 00 00 00 00       	mov    $0x0,%edx
   11399:	48 89 ce             	mov    %rcx,%rsi
   1139c:	48 89 c7             	mov    %rax,%rdi
   1139f:	e8 5c 30 ff ff       	call   4400 <vkFreeMemory@plt>
}
   113a4:	90                   	nop
   113a5:	c9                   	leave
   113a6:	c3                   	ret
   113a7:	90                   	nop

00000000000113a8 <_ZN9VulkanApp17createIndexBufferEv>:

void VulkanApp::createIndexBuffer() {
   113a8:	55                   	push   %rbp
   113a9:	48 89 e5             	mov    %rsp,%rbp
   113ac:	48 83 ec 30          	sub    $0x30,%rsp
   113b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize =
      sizeof(shader::triangle_indices[0]) * shader::triangle_indices.size();
   113b4:	48 8d 05 a5 02 02 00 	lea    0x202a5(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   113bb:	48 89 c7             	mov    %rax,%rdi
   113be:	e8 49 37 00 00       	call   14b0c <_ZNKSt6vectorItSaItEE4sizeEv>
   113c3:	48 01 c0             	add    %rax,%rax
   113c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  /* Create a host visible buffer as temporary buffer */
  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
   113ca:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   113ce:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   113d2:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   113d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113da:	49 89 c9             	mov    %rcx,%r9
   113dd:	49 89 d0             	mov    %rdx,%r8
   113e0:	b9 06 00 00 00       	mov    $0x6,%ecx
   113e5:	ba 01 00 00 00       	mov    $0x1,%edx
   113ea:	48 89 c7             	mov    %rax,%rdi
   113ed:	e8 ae fa ff ff       	call   10ea0 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  /* Copy the vertices data to the staging buffer */
  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
   113f2:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   113f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113fa:	48 8b 40 50          	mov    0x50(%rax),%rax
   113fe:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   11402:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11406:	49 89 c9             	mov    %rcx,%r9
   11409:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1140f:	48 89 d1             	mov    %rdx,%rcx
   11412:	ba 00 00 00 00       	mov    $0x0,%edx
   11417:	48 89 c7             	mov    %rax,%rdi
   1141a:	e8 d1 2f ff ff       	call   43f0 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle_indices.data(),
   1141f:	48 8d 05 3a 02 02 00 	lea    0x2023a(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   11426:	48 89 c7             	mov    %rax,%rdi
   11429:	e8 52 37 00 00       	call   14b80 <_ZNKSt6vectorItSaItEE4dataEv>
   1142e:	48 89 c1             	mov    %rax,%rcx
   11431:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11435:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11439:	48 89 ce             	mov    %rcx,%rsi
   1143c:	48 89 c7             	mov    %rax,%rdi
   1143f:	e8 0c 2f ff ff       	call   4350 <memcpy@plt>
              static_cast<size_t>(bufferSize));
  vkUnmapMemory(device, stagingBufferMemory);
   11444:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11448:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1144c:	48 8b 40 50          	mov    0x50(%rax),%rax
   11450:	48 89 d6             	mov    %rdx,%rsi
   11453:	48 89 c7             	mov    %rax,%rdi
   11456:	e8 e5 2e ff ff       	call   4340 <vkUnmapMemory@plt>

  /* Create a device local buffer as actual vertex buffer */
  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, indexBuffer, indexBufferMemory);
   1145b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1145f:	48 8d 88 b0 01 00 00 	lea    0x1b0(%rax),%rcx
   11466:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1146a:	48 8d 90 a8 01 00 00 	lea    0x1a8(%rax),%rdx
  createBuffer(
   11471:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   11475:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11479:	49 89 c9             	mov    %rcx,%r9
   1147c:	49 89 d0             	mov    %rdx,%r8
   1147f:	b9 01 00 00 00       	mov    $0x1,%ecx
   11484:	ba 42 00 00 00       	mov    $0x42,%edx
   11489:	48 89 c7             	mov    %rax,%rdi
   1148c:	e8 0f fa ff ff       	call   10ea0 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  /* Copy the data from the staging buffer to the device buffer */
  copyBuffer(stagingBuffer, indexBuffer, bufferSize);
   11491:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11495:	48 8b 90 a8 01 00 00 	mov    0x1a8(%rax),%rdx
   1149c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   114a0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   114a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114a8:	48 89 c7             	mov    %rax,%rdi
   114ab:	e8 fc fb ff ff       	call   110ac <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>

  /* Clean the staging buffer */
  vkDestroyBuffer(device, stagingBuffer, nullptr);
   114b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   114b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114b8:	48 8b 40 50          	mov    0x50(%rax),%rax
   114bc:	ba 00 00 00 00       	mov    $0x0,%edx
   114c1:	48 89 ce             	mov    %rcx,%rsi
   114c4:	48 89 c7             	mov    %rax,%rdi
   114c7:	e8 04 2d ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
   114cc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   114d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114d4:	48 8b 40 50          	mov    0x50(%rax),%rax
   114d8:	ba 00 00 00 00       	mov    $0x0,%edx
   114dd:	48 89 ce             	mov    %rcx,%rsi
   114e0:	48 89 c7             	mov    %rax,%rdi
   114e3:	e8 18 2f ff ff       	call   4400 <vkFreeMemory@plt>
}
   114e8:	90                   	nop
   114e9:	c9                   	leave
   114ea:	c3                   	ret
   114eb:	90                   	nop

00000000000114ec <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
   114ec:	55                   	push   %rbp
   114ed:	48 89 e5             	mov    %rsp,%rbp
   114f0:	53                   	push   %rbx
   114f1:	48 83 ec 58          	sub    $0x58,%rsp
   114f5:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
   114f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   114fd:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   11501:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
   11506:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
   1150d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11511:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   11515:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
   1151a:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
   11521:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  sync.imageAvailableSemaphore.resize(maxFramesInFlight);
   11528:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1152c:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   11533:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11537:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1153e:	48 89 c6             	mov    %rax,%rsi
   11541:	48 89 d7             	mov    %rdx,%rdi
   11544:	e8 5b 36 00 00       	call   14ba4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.renderFinisedSemaphore.resize(maxFramesInFlight);
   11549:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1154d:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   11554:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11558:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1155f:	48 89 c6             	mov    %rax,%rsi
   11562:	48 89 d7             	mov    %rdx,%rdi
   11565:	e8 3a 36 00 00       	call   14ba4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.inFlightFence.resize(maxFramesInFlight);
   1156a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1156e:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   11575:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11579:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   11580:	48 89 c6             	mov    %rax,%rsi
   11583:	48 89 d7             	mov    %rdx,%rdi
   11586:	e8 9f 36 00 00       	call   14c2a <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1158b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   11592:	00 
   11593:	e9 b9 00 00 00       	jmp    11651 <_ZN9VulkanApp28createSynchronizationObjectsEv+0x165>
    sync.imageAvailableSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   11598:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1159c:	48 8b 40 50          	mov    0x50(%rax),%rax
   115a0:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   115a4:	ba 00 00 00 00       	mov    $0x0,%edx
   115a9:	48 89 ce             	mov    %rcx,%rsi
   115ac:	48 89 c7             	mov    %rax,%rdi
   115af:	e8 79 61 ff ff       	call   772d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   115b4:	48 89 c3             	mov    %rax,%rbx
    sync.imageAvailableSemaphore[i] =
   115b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115bb:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   115c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115c6:	48 89 c6             	mov    %rax,%rsi
   115c9:	48 89 d7             	mov    %rdx,%rdi
   115cc:	e8 df 36 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   115d1:	48 89 18             	mov    %rbx,(%rax)
    sync.renderFinisedSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   115d4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115d8:	48 8b 40 50          	mov    0x50(%rax),%rax
   115dc:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   115e0:	ba 00 00 00 00       	mov    $0x0,%edx
   115e5:	48 89 ce             	mov    %rcx,%rsi
   115e8:	48 89 c7             	mov    %rax,%rdi
   115eb:	e8 3d 61 ff ff       	call   772d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   115f0:	48 89 c3             	mov    %rax,%rbx
    sync.renderFinisedSemaphore[i] =
   115f3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   115f7:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   115fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11602:	48 89 c6             	mov    %rax,%rsi
   11605:	48 89 d7             	mov    %rdx,%rdi
   11608:	e8 a3 36 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1160d:	48 89 18             	mov    %rbx,(%rax)
    sync.inFlightFence[i] = vkh::createFence(device, &fenceInfo);
   11610:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11614:	48 8b 40 50          	mov    0x50(%rax),%rax
   11618:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1161c:	ba 00 00 00 00       	mov    $0x0,%edx
   11621:	48 89 ce             	mov    %rcx,%rsi
   11624:	48 89 c7             	mov    %rax,%rdi
   11627:	e8 99 61 ff ff       	call   77c5 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
   1162c:	48 89 c3             	mov    %rax,%rbx
   1162f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11633:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   1163a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1163e:	48 89 c6             	mov    %rax,%rsi
   11641:	48 89 d7             	mov    %rdx,%rdi
   11644:	e8 87 36 00 00       	call   14cd0 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   11649:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1164c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   11651:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11655:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1165c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11660:	0f 82 32 ff ff ff    	jb     11598 <_ZN9VulkanApp28createSynchronizationObjectsEv+0xac>
  }
}
   11666:	90                   	nop
   11667:	90                   	nop
   11668:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1166c:	c9                   	leave
   1166d:	c3                   	ret

000000000001166e <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
   1166e:	55                   	push   %rbp
   1166f:	48 89 e5             	mov    %rsp,%rbp
   11672:	41 57                	push   %r15
   11674:	41 56                	push   %r14
   11676:	41 55                	push   %r13
   11678:	41 54                	push   %r12
   1167a:	53                   	push   %rbx
   1167b:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   11682:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* 1. Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence[sync.currentFrame], VK_TRUE,
   11689:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11690:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   11697:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1169e:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   116a5:	48 89 c6             	mov    %rax,%rsi
   116a8:	48 89 d7             	mov    %rdx,%rdi
   116ab:	e8 20 36 00 00       	call   14cd0 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   116b0:	48 89 c2             	mov    %rax,%rdx
   116b3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   116ba:	48 8b 40 50          	mov    0x50(%rax),%rax
   116be:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   116c5:	b9 01 00 00 00       	mov    $0x1,%ecx
   116ca:	be 01 00 00 00       	mov    $0x1,%esi
   116cf:	48 89 c7             	mov    %rax,%rdi
   116d2:	e8 59 2b ff ff       	call   4230 <vkWaitForFences@plt>

  /* 2. Acquire an image frome the swapchain */
  uint32_t imageIndex;
  VkResult result =
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
                            sync.imageAvailableSemaphore[sync.currentFrame],
   116d7:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   116de:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   116e5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   116ec:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   116f3:	48 89 c6             	mov    %rax,%rsi
   116f6:	48 89 d7             	mov    %rdx,%rdi
   116f9:	e8 b2 35 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
   116fe:	48 8b 10             	mov    (%rax),%rdx
   11701:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11708:	48 8b 70 70          	mov    0x70(%rax),%rsi
   1170c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11713:	48 8b 40 50          	mov    0x50(%rax),%rax
   11717:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
   1171b:	49 89 c9             	mov    %rcx,%r9
   1171e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   11724:	48 89 d1             	mov    %rdx,%rcx
   11727:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1172e:	48 89 c7             	mov    %rax,%rdi
   11731:	e8 3a 2a ff ff       	call   4170 <vkAcquireNextImageKHR@plt>
   11736:	89 45 cc             	mov    %eax,-0x34(%rbp)
                            VK_NULL_HANDLE, &imageIndex);
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR) {
   11739:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   11740:	74 09                	je     1174b <_ZN9VulkanApp6renderEv+0xdd>
   11742:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   11749:	75 14                	jne    1175f <_ZN9VulkanApp6renderEv+0xf1>
    recreateSwapchain();
   1174b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11752:	48 89 c7             	mov    %rax,%rdi
   11755:	e8 fa f0 ff ff       	call   10854 <_ZN9VulkanApp17recreateSwapchainEv>
    throw std::runtime_error("Failed to present swapchain image.");
  }

  /* 6. Set up the next frame */
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
}
   1175a:	e9 f6 05 00 00       	jmp    11d55 <_ZN9VulkanApp6renderEv+0x6e7>
  } else if (result != VK_SUCCESS) {
   1175f:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   11763:	74 3b                	je     117a0 <_ZN9VulkanApp6renderEv+0x132>
    throw std::runtime_error("Failed to acquire swapchain image.");
   11765:	bf 10 00 00 00       	mov    $0x10,%edi
   1176a:	e8 51 2a ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   1176f:	48 89 c3             	mov    %rax,%rbx
   11772:	48 8d 05 87 f1 00 00 	lea    0xf187(%rip),%rax        # 20900 <_ZZN9VulkanApp6renderEvE11submitCount+0x4>
   11779:	48 89 c6             	mov    %rax,%rsi
   1177c:	48 89 df             	mov    %rbx,%rdi
   1177f:	e8 ac 29 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   11784:	48 8b 05 1d f8 01 00 	mov    0x1f81d(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1178b:	48 89 c2             	mov    %rax,%rdx
   1178e:	48 8d 05 ab f5 01 00 	lea    0x1f5ab(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11795:	48 89 c6             	mov    %rax,%rsi
   11798:	48 89 df             	mov    %rbx,%rdi
   1179b:	e8 f0 30 ff ff       	call   4890 <__cxa_throw@plt>
  vkResetFences(device, 1, &sync.inFlightFence[sync.currentFrame]);
   117a0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   117a7:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   117ae:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   117b5:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   117bc:	48 89 c6             	mov    %rax,%rsi
   117bf:	48 89 d7             	mov    %rdx,%rdi
   117c2:	e8 09 35 00 00       	call   14cd0 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   117c7:	48 89 c2             	mov    %rax,%rdx
   117ca:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   117d1:	48 8b 40 50          	mov    0x50(%rax),%rax
   117d5:	be 01 00 00 00       	mov    $0x1,%esi
   117da:	48 89 c7             	mov    %rax,%rdi
   117dd:	e8 de 2f ff ff       	call   47c0 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[sync.currentFrame], 0);
   117e2:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   117e9:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   117f0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   117f7:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   117fe:	48 89 c6             	mov    %rax,%rsi
   11801:	48 89 d7             	mov    %rdx,%rdi
   11804:	e8 e7 34 00 00       	call   14cf0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   11809:	48 8b 00             	mov    (%rax),%rax
   1180c:	be 00 00 00 00       	mov    $0x0,%esi
   11811:	48 89 c7             	mov    %rax,%rdi
   11814:	e8 07 2e ff ff       	call   4620 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[sync.currentFrame], imageIndex);
   11819:	8b 5d a4             	mov    -0x5c(%rbp),%ebx
   1181c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11823:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   1182a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11831:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   11838:	48 89 c6             	mov    %rax,%rsi
   1183b:	48 89 d7             	mov    %rdx,%rdi
   1183e:	e8 ad 34 00 00       	call   14cf0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   11843:	48 8b 08             	mov    (%rax),%rcx
   11846:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1184d:	89 da                	mov    %ebx,%edx
   1184f:	48 89 ce             	mov    %rcx,%rsi
   11852:	48 89 c7             	mov    %rax,%rdi
   11855:	e8 64 f3 ff ff       	call   10bbe <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   1185a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11861:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   11868:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1186f:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   11876:	48 89 c6             	mov    %rax,%rsi
   11879:	48 89 d7             	mov    %rdx,%rdi
   1187c:	e8 2f 34 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   11881:	48 8b 00             	mov    (%rax),%rax
   11884:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   11888:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
   1188c:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   11893:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
   1189a:	01 00 00 00 
   1189e:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   118a2:	48 89 c7             	mov    %rax,%rdi
   118a5:	e8 66 34 00 00       	call   14d10 <_ZNSaIP13VkSemaphore_TEC1Ev>
   118aa:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
   118ae:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
   118b5:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
   118bc:	48 89 ce             	mov    %rcx,%rsi
   118bf:	48 89 df             	mov    %rbx,%rdi
   118c2:	48 89 df             	mov    %rbx,%rdi
   118c5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   118c9:	48 89 d1             	mov    %rdx,%rcx
   118cc:	48 89 fa             	mov    %rdi,%rdx
   118cf:	48 89 c7             	mov    %rax,%rdi
   118d2:	e8 71 34 00 00       	call   14d48 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   118d7:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   118db:	48 89 c7             	mov    %rax,%rdi
   118de:	e8 49 34 00 00       	call   14d2c <_ZNSaIP13VkSemaphore_TED1Ev>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   118e3:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
   118ea:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   118ee:	49 89 c6             	mov    %rax,%r14
   118f1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   118f7:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   118fb:	48 89 c7             	mov    %rax,%rdi
   118fe:	e8 11 35 00 00       	call   14e14 <_ZNSaIjEC1Ev>
   11903:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   11907:	4c 89 f6             	mov    %r14,%rsi
   1190a:	4c 89 ff             	mov    %r15,%rdi
   1190d:	4c 89 f1             	mov    %r14,%rcx
   11910:	4c 89 fb             	mov    %r15,%rbx
   11913:	48 89 df             	mov    %rbx,%rdi
   11916:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1191d:	48 89 d1             	mov    %rdx,%rcx
   11920:	48 89 fa             	mov    %rdi,%rdx
   11923:	48 89 c7             	mov    %rax,%rdi
   11926:	e8 21 35 00 00       	call   14e4c <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
   1192b:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1192f:	48 89 c7             	mov    %rax,%rdi
   11932:	e8 f9 34 00 00       	call   14e30 <_ZNSaIjED1Ev>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   11937:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1193e:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   11945:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1194c:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   11953:	48 89 c6             	mov    %rax,%rsi
   11956:	48 89 d7             	mov    %rdx,%rdi
   11959:	e8 52 33 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1195e:	48 8b 00             	mov    (%rax),%rax
   11961:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11965:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11969:	49 89 c4             	mov    %rax,%r12
   1196c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   11972:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   11976:	48 89 c7             	mov    %rax,%rdi
   11979:	e8 92 33 00 00       	call   14d10 <_ZNSaIP13VkSemaphore_TEC1Ev>
   1197e:	48 8d 55 cb          	lea    -0x35(%rbp),%rdx
   11982:	4c 89 e6             	mov    %r12,%rsi
   11985:	4c 89 ef             	mov    %r13,%rdi
   11988:	4c 89 e1             	mov    %r12,%rcx
   1198b:	4c 89 eb             	mov    %r13,%rbx
   1198e:	48 89 df             	mov    %rbx,%rdi
   11991:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11998:	48 89 d1             	mov    %rdx,%rcx
   1199b:	48 89 fa             	mov    %rdi,%rdx
   1199e:	48 89 c7             	mov    %rax,%rdi
   119a1:	e8 a2 33 00 00       	call   14d48 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   119a6:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   119aa:	48 89 c7             	mov    %rax,%rdi
   119ad:	e8 7a 33 00 00       	call   14d2c <_ZNSaIP13VkSemaphore_TED1Ev>
  VkSubmitInfo submitInfo{};
   119b2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   119b6:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
   119bd:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
   119c4:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
   119cb:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   119d2:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
   119d9:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   119da:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
   119e1:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
   119e4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   119e8:	48 89 c7             	mov    %rax,%rdi
   119eb:	e8 28 35 00 00       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   119f0:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
   119f6:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   119fa:	48 89 c7             	mov    %rax,%rdi
   119fd:	e8 3a 35 00 00       	call   14f3c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   11a02:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
   11a09:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11a10:	48 89 c7             	mov    %rax,%rdi
   11a13:	e8 48 35 00 00       	call   14f60 <_ZNSt6vectorIjSaIjEE4dataEv>
   11a18:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = 1;
   11a1f:	c7 85 18 ff ff ff 01 	movl   $0x1,-0xe8(%rbp)
   11a26:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffers[sync.currentFrame];
   11a29:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11a30:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   11a37:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11a3e:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   11a45:	48 89 c6             	mov    %rax,%rsi
   11a48:	48 89 d7             	mov    %rdx,%rdi
   11a4b:	e8 a0 32 00 00       	call   14cf0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   11a50:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
      static_cast<uint32_t>(signalSemaphores.size());
   11a57:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11a5e:	48 89 c7             	mov    %rax,%rdi
   11a61:	e8 b2 34 00 00       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
   11a66:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
   11a6c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11a73:	48 89 c7             	mov    %rax,%rdi
   11a76:	e8 c1 34 00 00       	call   14f3c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   11a7b:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   11a82:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11a89:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   11a90:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11a97:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   11a9e:	48 89 c6             	mov    %rax,%rsi
   11aa1:	48 89 d7             	mov    %rdx,%rdi
   11aa4:	e8 27 32 00 00       	call   14cd0 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   11aa9:	48 8b 08             	mov    (%rax),%rcx
   11aac:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11ab3:	48 8b 40 60          	mov    0x60(%rax),%rax
   11ab7:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   11abe:	be 01 00 00 00       	mov    $0x1,%esi
   11ac3:	48 89 c7             	mov    %rax,%rdi
   11ac6:	e8 b5 2b ff ff       	call   4680 <vkQueueSubmit@plt>
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   11acb:	85 c0                	test   %eax,%eax
   11acd:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   11ad0:	84 c0                	test   %al,%al
   11ad2:	74 3b                	je     11b0f <_ZN9VulkanApp6renderEv+0x4a1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   11ad4:	bf 10 00 00 00       	mov    $0x10,%edi
   11ad9:	e8 e2 26 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   11ade:	48 89 c3             	mov    %rax,%rbx
   11ae1:	48 8d 05 40 ee 00 00 	lea    0xee40(%rip),%rax        # 20928 <_ZZN9VulkanApp6renderEvE11submitCount+0x2c>
   11ae8:	48 89 c6             	mov    %rax,%rsi
   11aeb:	48 89 df             	mov    %rbx,%rdi
   11aee:	e8 3d 26 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   11af3:	48 8b 05 ae f4 01 00 	mov    0x1f4ae(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11afa:	48 89 c2             	mov    %rax,%rdx
   11afd:	48 8d 05 3c f2 01 00 	lea    0x1f23c(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11b04:	48 89 c6             	mov    %rax,%rsi
   11b07:	48 89 df             	mov    %rbx,%rdi
   11b0a:	e8 81 2d ff ff       	call   4890 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
   11b0f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11b13:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   11b1a:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
   11b21:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
   11b28:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
   11b2f:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
   11b36:	cd 9a 3b 
      static_cast<uint32_t>(signalSemaphores.size());
   11b39:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11b40:	48 89 c7             	mov    %rax,%rdi
   11b43:	e8 d0 33 00 00       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
   11b48:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
   11b4e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11b55:	48 89 c7             	mov    %rax,%rdi
   11b58:	e8 df 33 00 00       	call   14f3c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   11b5d:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
   11b64:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11b6b:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   11b71:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
   11b77:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11b7e:	48 83 c0 70          	add    $0x70,%rax
   11b82:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
   11b89:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   11b8d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
   11b94:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
   11b9b:	00 00 00 00 
  result = vkQueuePresentKHR(queue, &presentInfo);
   11b9f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11ba6:	48 8b 40 60          	mov    0x60(%rax),%rax
   11baa:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   11bb1:	48 89 d6             	mov    %rdx,%rsi
   11bb4:	48 89 c7             	mov    %rax,%rdi
   11bb7:	e8 34 2c ff ff       	call   47f0 <vkQueuePresentKHR@plt>
   11bbc:	89 45 cc             	mov    %eax,-0x34(%rbp)
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   11bbf:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   11bc6:	74 1b                	je     11be3 <_ZN9VulkanApp6renderEv+0x575>
   11bc8:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   11bcf:	74 12                	je     11be3 <_ZN9VulkanApp6renderEv+0x575>
      framebufferResized) {
   11bd1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11bd8:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   11bdf:	84 c0                	test   %al,%al
   11be1:	74 1f                	je     11c02 <_ZN9VulkanApp6renderEv+0x594>
    framebufferResized = false;
   11be3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11bea:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
    recreateSwapchain();
   11bf1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11bf8:	48 89 c7             	mov    %rax,%rdi
   11bfb:	e8 54 ec ff ff       	call   10854 <_ZN9VulkanApp17recreateSwapchainEv>
   11c00:	eb 41                	jmp    11c43 <_ZN9VulkanApp6renderEv+0x5d5>
  } else if (result != VK_SUCCESS) {
   11c02:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   11c06:	74 3b                	je     11c43 <_ZN9VulkanApp6renderEv+0x5d5>
    throw std::runtime_error("Failed to present swapchain image.");
   11c08:	bf 10 00 00 00       	mov    $0x10,%edi
   11c0d:	e8 ae 25 ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   11c12:	48 89 c3             	mov    %rax,%rbx
   11c15:	48 8d 05 34 ed 00 00 	lea    0xed34(%rip),%rax        # 20950 <_ZZN9VulkanApp6renderEvE11submitCount+0x54>
   11c1c:	48 89 c6             	mov    %rax,%rsi
   11c1f:	48 89 df             	mov    %rbx,%rdi
   11c22:	e8 09 25 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   11c27:	48 8b 05 7a f3 01 00 	mov    0x1f37a(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11c2e:	48 89 c2             	mov    %rax,%rdx
   11c31:	48 8d 05 08 f1 01 00 	lea    0x1f108(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11c38:	48 89 c6             	mov    %rax,%rsi
   11c3b:	48 89 df             	mov    %rbx,%rdi
   11c3e:	e8 4d 2c ff ff       	call   4890 <__cxa_throw@plt>
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
   11c43:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c4a:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   11c51:	48 8d 50 01          	lea    0x1(%rax),%rdx
   11c55:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c5c:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
   11c63:	48 89 d0             	mov    %rdx,%rax
   11c66:	ba 00 00 00 00       	mov    $0x0,%edx
   11c6b:	48 f7 f1             	div    %rcx
   11c6e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11c75:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
}
   11c7c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11c83:	48 89 c7             	mov    %rax,%rdi
   11c86:	e8 45 31 00 00       	call   14dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11c8b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11c92:	48 89 c7             	mov    %rax,%rdi
   11c95:	e8 3a 32 00 00       	call   14ed4 <_ZNSt6vectorIjSaIjEED1Ev>
   11c9a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11c9e:	48 89 c7             	mov    %rax,%rdi
   11ca1:	e8 2a 31 00 00       	call   14dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11ca6:	e9 aa 00 00 00       	jmp    11d55 <_ZN9VulkanApp6renderEv+0x6e7>
    throw std::runtime_error("Failed to acquire swapchain image.");
   11cab:	49 89 c4             	mov    %rax,%r12
   11cae:	48 89 df             	mov    %rbx,%rdi
   11cb1:	e8 1a 26 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11cb6:	4c 89 e0             	mov    %r12,%rax
   11cb9:	48 89 c7             	mov    %rax,%rdi
   11cbc:	e8 3f 2c ff ff       	call   4900 <_Unwind_Resume@plt>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   11cc1:	48 89 c3             	mov    %rax,%rbx
   11cc4:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   11cc8:	48 89 c7             	mov    %rax,%rdi
   11ccb:	e8 5c 30 00 00       	call   14d2c <_ZNSaIP13VkSemaphore_TED1Ev>
   11cd0:	48 89 d8             	mov    %rbx,%rax
   11cd3:	48 89 c7             	mov    %rax,%rdi
   11cd6:	e8 25 2c ff ff       	call   4900 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   11cdb:	48 89 c3             	mov    %rax,%rbx
   11cde:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11ce2:	48 89 c7             	mov    %rax,%rdi
   11ce5:	e8 46 31 00 00       	call   14e30 <_ZNSaIjED1Ev>
   11cea:	eb 52                	jmp    11d3e <_ZN9VulkanApp6renderEv+0x6d0>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   11cec:	48 89 c3             	mov    %rax,%rbx
   11cef:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   11cf3:	48 89 c7             	mov    %rax,%rdi
   11cf6:	e8 31 30 00 00       	call   14d2c <_ZNSaIP13VkSemaphore_TED1Ev>
   11cfb:	eb 32                	jmp    11d2f <_ZN9VulkanApp6renderEv+0x6c1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   11cfd:	49 89 c4             	mov    %rax,%r12
   11d00:	48 89 df             	mov    %rbx,%rdi
   11d03:	e8 c8 25 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11d08:	4c 89 e3             	mov    %r12,%rbx
   11d0b:	eb 13                	jmp    11d20 <_ZN9VulkanApp6renderEv+0x6b2>
    throw std::runtime_error("Failed to present swapchain image.");
   11d0d:	49 89 c4             	mov    %rax,%r12
   11d10:	48 89 df             	mov    %rbx,%rdi
   11d13:	e8 b8 25 ff ff       	call   42d0 <__cxa_free_exception@plt>
   11d18:	4c 89 e3             	mov    %r12,%rbx
   11d1b:	eb 03                	jmp    11d20 <_ZN9VulkanApp6renderEv+0x6b2>
}
   11d1d:	48 89 c3             	mov    %rax,%rbx
   11d20:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11d27:	48 89 c7             	mov    %rax,%rdi
   11d2a:	e8 a1 30 00 00       	call   14dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11d2f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   11d36:	48 89 c7             	mov    %rax,%rdi
   11d39:	e8 96 31 00 00       	call   14ed4 <_ZNSt6vectorIjSaIjEED1Ev>
   11d3e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11d42:	48 89 c7             	mov    %rax,%rdi
   11d45:	e8 86 30 00 00       	call   14dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   11d4a:	48 89 d8             	mov    %rbx,%rax
   11d4d:	48 89 c7             	mov    %rax,%rdi
   11d50:	e8 ab 2b ff ff       	call   4900 <_Unwind_Resume@plt>
   11d55:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   11d5c:	5b                   	pop    %rbx
   11d5d:	41 5c                	pop    %r12
   11d5f:	41 5d                	pop    %r13
   11d61:	41 5e                	pop    %r14
   11d63:	41 5f                	pop    %r15
   11d65:	5d                   	pop    %rbp
   11d66:	c3                   	ret
   11d67:	90                   	nop

0000000000011d68 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
   11d68:	55                   	push   %rbp
   11d69:	48 89 e5             	mov    %rsp,%rbp
   11d6c:	41 57                	push   %r15
   11d6e:	41 56                	push   %r14
   11d70:	41 55                	push   %r13
   11d72:	41 54                	push   %r12
   11d74:	53                   	push   %rbx
   11d75:	48 83 ec 38          	sub    $0x38,%rsp
   11d79:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11d7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11d81:	48 8d 58 10          	lea    0x10(%rax),%rbx
   11d85:	48 8d 05 e7 eb 00 00 	lea    0xebe7(%rip),%rax        # 20973 <_ZZN9VulkanApp6renderEvE11submitCount+0x77>
   11d8c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11d90:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11d94:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   11d98:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
   11d9f:	00 
   11da0:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11da4:	48 89 c7             	mov    %rax,%rdi
   11da7:	e8 ec 7b ff ff       	call   9998 <_ZNSaIPKcEC1Ev>
   11dac:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11db0:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   11db4:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   11db8:	49 89 f0             	mov    %rsi,%r8
   11dbb:	49 89 f9             	mov    %rdi,%r9
   11dbe:	48 89 fa             	mov    %rdi,%rdx
   11dc1:	48 89 c1             	mov    %rax,%rcx
   11dc4:	4c 89 c6             	mov    %r8,%rsi
   11dc7:	48 89 df             	mov    %rbx,%rdi
   11dca:	e8 8b 1b 00 00       	call   1395a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11dcf:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11dd3:	48 89 c7             	mov    %rax,%rdi
   11dd6:	e8 d9 7b ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11ddb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ddf:	48 8d 58 28          	lea    0x28(%rax),%rbx
   11de3:	4c 8d 35 f6 ee 01 00 	lea    0x1eef6(%rip),%r14        # 30ce0 <C.161.0>
   11dea:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   11df0:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11df4:	48 89 c7             	mov    %rax,%rdi
   11df7:	e8 9c 7b ff ff       	call   9998 <_ZNSaIPKcEC1Ev>
   11dfc:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11e00:	4d 89 f0             	mov    %r14,%r8
   11e03:	4d 89 f9             	mov    %r15,%r9
   11e06:	4c 89 f6             	mov    %r14,%rsi
   11e09:	4c 89 ff             	mov    %r15,%rdi
   11e0c:	48 89 fa             	mov    %rdi,%rdx
   11e0f:	48 89 c1             	mov    %rax,%rcx
   11e12:	4c 89 c6             	mov    %r8,%rsi
   11e15:	48 89 df             	mov    %rbx,%rdi
   11e18:	e8 3d 1b 00 00       	call   1395a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11e1d:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11e21:	48 89 c7             	mov    %rax,%rdi
   11e24:	e8 8b 7b ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11e29:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11e2d:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%rax)
   11e34:	00 00 00 
   11e37:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11e3b:	c7 80 8c 00 00 00 01 	movl   $0x1,0x8c(%rax)
   11e42:	00 00 00 
   11e45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11e49:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
   11e50:	4c 8d 25 99 ee 01 00 	lea    0x1ee99(%rip),%r12        # 30cf0 <C.162.1>
   11e57:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   11e5d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11e61:	48 89 c7             	mov    %rax,%rdi
   11e64:	e8 2f 7b ff ff       	call   9998 <_ZNSaIPKcEC1Ev>
   11e69:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11e6d:	4d 89 e0             	mov    %r12,%r8
   11e70:	4d 89 e9             	mov    %r13,%r9
   11e73:	4c 89 e6             	mov    %r12,%rsi
   11e76:	4c 89 ef             	mov    %r13,%rdi
   11e79:	48 89 fa             	mov    %rdi,%rdx
   11e7c:	48 89 c1             	mov    %rax,%rcx
   11e7f:	4c 89 c6             	mov    %r8,%rsi
   11e82:	48 89 df             	mov    %rbx,%rdi
   11e85:	e8 d0 1a 00 00       	call   1395a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11e8a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   11e8e:	48 89 c7             	mov    %rax,%rdi
   11e91:	e8 1e 7b ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11e96:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11e9a:	48 05 a8 00 00 00    	add    $0xa8,%rax
   11ea0:	48 89 c7             	mov    %rax,%rdi
   11ea3:	e8 6c 18 00 00       	call   13714 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
   11ea8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11eac:	48 05 c0 00 00 00    	add    $0xc0,%rax
   11eb2:	48 89 c7             	mov    %rax,%rdi
   11eb5:	e8 92 18 00 00       	call   1374c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
   11eba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ebe:	48 05 d8 00 00 00    	add    $0xd8,%rax
   11ec4:	48 89 c7             	mov    %rax,%rdi
   11ec7:	e8 9c 18 00 00       	call   13768 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
   11ecc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ed0:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
   11ed7:	00 00 00 
   11eda:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ede:	48 05 00 01 00 00    	add    $0x100,%rax
   11ee4:	48 89 c7             	mov    %rax,%rdi
   11ee7:	e8 ee 18 00 00       	call   137da <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
   11eec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ef0:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
   11ef7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11efb:	48 c7 80 20 01 00 00 	movq   $0x2,0x120(%rax)
   11f02:	02 00 00 00 
   11f06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f0a:	48 05 28 01 00 00    	add    $0x128,%rax
   11f10:	48 89 c7             	mov    %rax,%rdi
   11f13:	e8 fa 18 00 00       	call   13812 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   11f18:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f1c:	48 05 48 01 00 00    	add    $0x148,%rax
   11f22:	48 89 c7             	mov    %rax,%rdi
   11f25:	e8 ac 19 00 00       	call   138d6 <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
   11f2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f2e:	48 89 c7             	mov    %rax,%rdi
   11f31:	e8 86 c7 ff ff       	call   e6bc <_ZN9VulkanApp12createWindowEv>
  createInstance();
   11f36:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f3a:	48 89 c7             	mov    %rax,%rdi
   11f3d:	e8 e8 c7 ff ff       	call   e72a <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
   11f42:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f46:	48 89 c7             	mov    %rax,%rdi
   11f49:	e8 c2 c9 ff ff       	call   e910 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
   11f4e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f52:	48 89 c7             	mov    %rax,%rdi
   11f55:	e8 4a ca ff ff       	call   e9a4 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
   11f5a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f5e:	48 89 c7             	mov    %rax,%rdi
   11f61:	e8 96 cc ff ff       	call   ebfc <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
   11f66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f6a:	48 89 c7             	mov    %rax,%rdi
   11f6d:	e8 a8 d8 ff ff       	call   f81a <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   11f72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f76:	48 89 c7             	mov    %rax,%rdi
   11f79:	e8 e2 d8 ff ff       	call   f860 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   11f7e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f82:	48 89 c7             	mov    %rax,%rdi
   11f85:	e8 82 da ff ff       	call   fa0c <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   11f8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f8e:	48 89 c7             	mov    %rax,%rdi
   11f91:	e8 ca e6 ff ff       	call   10660 <_ZN9VulkanApp18createFramebuffersEv>
  createCommandPool();
   11f96:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f9a:	48 89 c7             	mov    %rax,%rdi
   11f9d:	e8 30 eb ff ff       	call   10ad2 <_ZN9VulkanApp17createCommandPoolEv>
  createVertexBuffer();
   11fa2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fa6:	48 89 c7             	mov    %rax,%rdi
   11fa9:	e8 a8 f2 ff ff       	call   11256 <_ZN9VulkanApp18createVertexBufferEv>
  createIndexBuffer();
   11fae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fb2:	48 89 c7             	mov    %rax,%rdi
   11fb5:	e8 ee f3 ff ff       	call   113a8 <_ZN9VulkanApp17createIndexBufferEv>
  createCommandBuffers();
   11fba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fbe:	48 89 c7             	mov    %rax,%rdi
   11fc1:	e8 70 eb ff ff       	call   10b36 <_ZN9VulkanApp20createCommandBuffersEv>
  createSynchronizationObjects();
   11fc6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fca:	48 89 c7             	mov    %rax,%rdi
   11fcd:	e8 1a f5 ff ff       	call   114ec <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
   11fd2:	e9 d9 00 00 00       	jmp    120b0 <_ZN9VulkanAppC1Ev+0x348>
VulkanApp::VulkanApp() {
   11fd7:	48 89 c3             	mov    %rax,%rbx
   11fda:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11fde:	48 89 c7             	mov    %rax,%rdi
   11fe1:	e8 ce 79 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   11fe6:	48 89 d8             	mov    %rbx,%rax
   11fe9:	48 89 c7             	mov    %rax,%rdi
   11fec:	e8 0f 29 ff ff       	call   4900 <_Unwind_Resume@plt>
   11ff1:	48 89 c3             	mov    %rax,%rbx
   11ff4:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   11ff8:	48 89 c7             	mov    %rax,%rdi
   11ffb:	e8 b4 79 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   12000:	e9 90 00 00 00       	jmp    12095 <_ZN9VulkanAppC1Ev+0x32d>
   12005:	48 89 c3             	mov    %rax,%rbx
   12008:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1200c:	48 89 c7             	mov    %rax,%rdi
   1200f:	e8 a0 79 ff ff       	call   99b4 <_ZNSaIPKcED1Ev>
   12014:	eb 6f                	jmp    12085 <_ZN9VulkanAppC1Ev+0x31d>
}
   12016:	48 89 c3             	mov    %rax,%rbx
   12019:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1201d:	48 05 48 01 00 00    	add    $0x148,%rax
   12023:	48 89 c7             	mov    %rax,%rdi
   12026:	e8 f3 18 00 00       	call   1391e <_ZN9VulkanApp11SyncWrapperD1Ev>
   1202b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1202f:	48 05 28 01 00 00    	add    $0x128,%rax
   12035:	48 89 c7             	mov    %rax,%rdi
   12038:	e8 25 47 ff ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   1203d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12041:	48 05 00 01 00 00    	add    $0x100,%rax
   12047:	48 89 c7             	mov    %rax,%rdi
   1204a:	e8 65 30 00 00       	call   150b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   1204f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12053:	48 05 c0 00 00 00    	add    $0xc0,%rax
   12059:	48 89 c7             	mov    %rax,%rdi
   1205c:	e8 79 83 ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   12061:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12065:	48 05 a8 00 00 00    	add    $0xa8,%rax
   1206b:	48 89 c7             	mov    %rax,%rdi
   1206e:	e8 61 28 00 00       	call   148d4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   12073:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12077:	48 05 90 00 00 00    	add    $0x90,%rax
   1207d:	48 89 c7             	mov    %rax,%rdi
   12080:	e8 5d 19 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
   12085:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12089:	48 83 c0 28          	add    $0x28,%rax
}
   1208d:	48 89 c7             	mov    %rax,%rdi
   12090:	e8 4d 19 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   12095:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12099:	48 83 c0 10          	add    $0x10,%rax
   1209d:	48 89 c7             	mov    %rax,%rdi
   120a0:	e8 3d 19 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   120a5:	48 89 d8             	mov    %rbx,%rax
   120a8:	48 89 c7             	mov    %rax,%rdi
   120ab:	e8 50 28 ff ff       	call   4900 <_Unwind_Resume@plt>
   120b0:	48 83 c4 38          	add    $0x38,%rsp
   120b4:	5b                   	pop    %rbx
   120b5:	41 5c                	pop    %r12
   120b7:	41 5d                	pop    %r13
   120b9:	41 5e                	pop    %r14
   120bb:	41 5f                	pop    %r15
   120bd:	5d                   	pop    %rbp
   120be:	c3                   	ret
   120bf:	90                   	nop

00000000000120c0 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
   120c0:	55                   	push   %rbp
   120c1:	48 89 e5             	mov    %rsp,%rbp
   120c4:	48 83 ec 20          	sub    $0x20,%rsp
   120c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanupSwapchain();
   120cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120d0:	48 89 c7             	mov    %rax,%rdi
   120d3:	e8 2e e8 ff ff       	call   10906 <_ZN9VulkanApp16cleanupSwapchainEv>
  vkDestroyBuffer(device, indexBuffer, nullptr);
   120d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120dc:	48 8b 88 a8 01 00 00 	mov    0x1a8(%rax),%rcx
   120e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120e7:	48 8b 40 50          	mov    0x50(%rax),%rax
   120eb:	ba 00 00 00 00       	mov    $0x0,%edx
   120f0:	48 89 ce             	mov    %rcx,%rsi
   120f3:	48 89 c7             	mov    %rax,%rdi
   120f6:	e8 d5 20 ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, indexBufferMemory, nullptr);
   120fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120ff:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   12106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1210a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1210e:	ba 00 00 00 00       	mov    $0x0,%edx
   12113:	48 89 ce             	mov    %rcx,%rsi
   12116:	48 89 c7             	mov    %rax,%rdi
   12119:	e8 e2 22 ff ff       	call   4400 <vkFreeMemory@plt>
  vkDestroyBuffer(device, vertexBuffer, nullptr);
   1211e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12122:	48 8b 88 98 01 00 00 	mov    0x198(%rax),%rcx
   12129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1212d:	48 8b 40 50          	mov    0x50(%rax),%rax
   12131:	ba 00 00 00 00       	mov    $0x0,%edx
   12136:	48 89 ce             	mov    %rcx,%rsi
   12139:	48 89 c7             	mov    %rax,%rdi
   1213c:	e8 8f 20 ff ff       	call   41d0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, vertexBufferMemory, nullptr);
   12141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12145:	48 8b 88 a0 01 00 00 	mov    0x1a0(%rax),%rcx
   1214c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12150:	48 8b 40 50          	mov    0x50(%rax),%rax
   12154:	ba 00 00 00 00       	mov    $0x0,%edx
   12159:	48 89 ce             	mov    %rcx,%rsi
   1215c:	48 89 c7             	mov    %rax,%rdi
   1215f:	e8 9c 22 ff ff       	call   4400 <vkFreeMemory@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   12164:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1216b:	00 
   1216c:	e9 a4 00 00 00       	jmp    12215 <_ZN9VulkanAppD1Ev+0x155>
    vkh::destroySemaphore(device, sync.imageAvailableSemaphore[i]);
   12171:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12175:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   1217c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12180:	48 89 c6             	mov    %rax,%rsi
   12183:	48 89 d7             	mov    %rdx,%rdi
   12186:	e8 25 2b 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1218b:	48 8b 08             	mov    (%rax),%rcx
   1218e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12192:	48 8b 40 50          	mov    0x50(%rax),%rax
   12196:	ba 00 00 00 00       	mov    $0x0,%edx
   1219b:	48 89 ce             	mov    %rcx,%rsi
   1219e:	48 89 c7             	mov    %rax,%rdi
   121a1:	e8 5b 62 ff ff       	call   8401 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroySemaphore(device, sync.renderFinisedSemaphore[i]);
   121a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121aa:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   121b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b5:	48 89 c6             	mov    %rax,%rsi
   121b8:	48 89 d7             	mov    %rdx,%rdi
   121bb:	e8 f0 2a 00 00       	call   14cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   121c0:	48 8b 08             	mov    (%rax),%rcx
   121c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121c7:	48 8b 40 50          	mov    0x50(%rax),%rax
   121cb:	ba 00 00 00 00       	mov    $0x0,%edx
   121d0:	48 89 ce             	mov    %rcx,%rsi
   121d3:	48 89 c7             	mov    %rax,%rdi
   121d6:	e8 26 62 ff ff       	call   8401 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroyFence(device, sync.inFlightFence[i]);
   121db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121df:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   121e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121ea:	48 89 c6             	mov    %rax,%rsi
   121ed:	48 89 d7             	mov    %rdx,%rdi
   121f0:	e8 db 2a 00 00       	call   14cd0 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   121f5:	48 8b 08             	mov    (%rax),%rcx
   121f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121fc:	48 8b 40 50          	mov    0x50(%rax),%rax
   12200:	ba 00 00 00 00       	mov    $0x0,%edx
   12205:	48 89 ce             	mov    %rcx,%rsi
   12208:	48 89 c7             	mov    %rax,%rdi
   1220b:	e8 1f 62 ff ff       	call   842f <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   12210:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   12215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12219:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12220:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   12224:	0f 82 47 ff ff ff    	jb     12171 <_ZN9VulkanAppD1Ev+0xb1>
  }
  vkh::destroyCommandPool(device, commandPool);
   1222a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1222e:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
   12235:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12239:	48 8b 40 50          	mov    0x50(%rax),%rax
   1223d:	ba 00 00 00 00       	mov    $0x0,%edx
   12242:	48 89 ce             	mov    %rcx,%rsi
   12245:	48 89 c7             	mov    %rax,%rdi
   12248:	e8 86 61 ff ff       	call   83d3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
   1224d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12251:	48 8b 40 50          	mov    0x50(%rax),%rax
   12255:	be 00 00 00 00       	mov    $0x0,%esi
   1225a:	48 89 c7             	mov    %rax,%rdi
   1225d:	e8 4c 5f ff ff       	call   81ae <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
   12262:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12266:	48 8b 48 40          	mov    0x40(%rax),%rcx
   1226a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1226e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12272:	ba 00 00 00 00       	mov    $0x0,%edx
   12277:	48 89 ce             	mov    %rcx,%rsi
   1227a:	48 89 c7             	mov    %rax,%rdi
   1227d:	e8 37 c0 ff ff       	call   e2b9 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
   12282:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12286:	48 8b 48 48          	mov    0x48(%rax),%rcx
   1228a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1228e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12292:	ba 00 00 00 00       	mov    $0x0,%edx
   12297:	48 89 ce             	mov    %rcx,%rsi
   1229a:	48 89 c7             	mov    %rax,%rdi
   1229d:	e8 32 5f ff ff       	call   81d4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
   122a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122a6:	48 8b 40 08          	mov    0x8(%rax),%rax
   122aa:	be 00 00 00 00       	mov    $0x0,%esi
   122af:	48 89 c7             	mov    %rax,%rdi
   122b2:	e8 d1 5e ff ff       	call   8188 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
   122b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122bb:	48 8b 00             	mov    (%rax),%rax
   122be:	48 89 c7             	mov    %rax,%rdi
   122c1:	e8 a7 5e ff ff       	call   816d <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
   122c6:	e8 f5 21 ff ff       	call   44c0 <glfwTerminate@plt>
}
   122cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122cf:	48 05 48 01 00 00    	add    $0x148,%rax
   122d5:	48 89 c7             	mov    %rax,%rdi
   122d8:	e8 41 16 00 00       	call   1391e <_ZN9VulkanApp11SyncWrapperD1Ev>
   122dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122e1:	48 05 28 01 00 00    	add    $0x128,%rax
   122e7:	48 89 c7             	mov    %rax,%rdi
   122ea:	e8 73 44 ff ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   122ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122f3:	48 05 00 01 00 00    	add    $0x100,%rax
   122f9:	48 89 c7             	mov    %rax,%rdi
   122fc:	e8 b3 2d 00 00       	call   150b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   12301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12305:	48 05 c0 00 00 00    	add    $0xc0,%rax
   1230b:	48 89 c7             	mov    %rax,%rdi
   1230e:	e8 c7 80 ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   12313:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12317:	48 05 a8 00 00 00    	add    $0xa8,%rax
   1231d:	48 89 c7             	mov    %rax,%rdi
   12320:	e8 af 25 00 00       	call   148d4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   12325:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12329:	48 05 90 00 00 00    	add    $0x90,%rax
   1232f:	48 89 c7             	mov    %rax,%rdi
   12332:	e8 ab 16 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
   12337:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1233b:	48 83 c0 28          	add    $0x28,%rax
}
   1233f:	48 89 c7             	mov    %rax,%rdi
   12342:	e8 9b 16 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   12347:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1234b:	48 83 c0 10          	add    $0x10,%rax
   1234f:	48 89 c7             	mov    %rax,%rdi
   12352:	e8 8b 16 00 00       	call   139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   12357:	90                   	nop
   12358:	c9                   	leave
   12359:	c3                   	ret

000000000001235a <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
   1235a:	55                   	push   %rbp
   1235b:	48 89 e5             	mov    %rsp,%rbp
   1235e:	48 83 ec 10          	sub    $0x10,%rsp
   12362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
   12366:	eb 11                	jmp    12379 <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
   12368:	e8 d3 20 ff ff       	call   4440 <glfwPollEvents@plt>
    render();
   1236d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12371:	48 89 c7             	mov    %rax,%rdi
   12374:	e8 f5 f2 ff ff       	call   1166e <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   12379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1237d:	48 8b 00             	mov    (%rax),%rax
   12380:	48 89 c7             	mov    %rax,%rdi
   12383:	e8 c8 25 ff ff       	call   4950 <glfwWindowShouldClose@plt>
   12388:	85 c0                	test   %eax,%eax
   1238a:	0f 94 c0             	sete   %al
   1238d:	84 c0                	test   %al,%al
   1238f:	75 d7                	jne    12368 <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   12391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12395:	48 8b 40 50          	mov    0x50(%rax),%rax
   12399:	48 89 c7             	mov    %rax,%rdi
   1239c:	e8 1f 1d ff ff       	call   40c0 <vkDeviceWaitIdle@plt>
}
   123a1:	90                   	nop
   123a2:	c9                   	leave
   123a3:	c3                   	ret

00000000000123a4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   123a4:	55                   	push   %rbp
   123a5:	48 89 e5             	mov    %rsp,%rbp
   123a8:	41 54                	push   %r12
   123aa:	53                   	push   %rbx
   123ab:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   123b2:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   123b9:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   123c0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   123c7:	48 89 c7             	mov    %rax,%rdi
   123ca:	e8 01 22 ff ff       	call   45d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   123cf:	be 10 00 00 00       	mov    $0x10,%esi
   123d4:	bf 08 00 00 00       	mov    $0x8,%edi
   123d9:	e8 7f 54 ff ff       	call   785d <_ZStorSt13_Ios_OpenmodeS_>
   123de:	89 c2                	mov    %eax,%edx
   123e0:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   123e7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   123ee:	48 89 ce             	mov    %rcx,%rsi
   123f1:	48 89 c7             	mov    %rax,%rdi
   123f4:	e8 e7 22 ff ff       	call   46e0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   123f9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12400:	48 89 c7             	mov    %rax,%rdi
   12403:	e8 a8 24 ff ff       	call   48b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   12408:	83 f0 01             	xor    $0x1,%eax
   1240b:	84 c0                	test   %al,%al
   1240d:	0f 84 97 00 00 00    	je     124aa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   12413:	bf 10 00 00 00       	mov    $0x10,%edi
   12418:	e8 a3 1d ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   1241d:	48 89 c3             	mov    %rax,%rbx
   12420:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   12427:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   1242e:	48 8d 0d 51 e5 00 00 	lea    0xe551(%rip),%rcx        # 20986 <_ZZN9VulkanApp6renderEvE11submitCount+0x8a>
   12435:	48 89 ce             	mov    %rcx,%rsi
   12438:	48 89 c7             	mov    %rax,%rdi
   1243b:	e8 74 54 ff ff       	call   78b4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   12440:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12447:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   1244e:	ba 0a 00 00 00       	mov    $0xa,%edx
   12453:	48 89 ce             	mov    %rcx,%rsi
   12456:	48 89 c7             	mov    %rax,%rdi
   12459:	e8 0e 2e 00 00       	call   1526c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   1245e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12465:	48 89 c6             	mov    %rax,%rsi
   12468:	48 89 df             	mov    %rbx,%rdi
   1246b:	e8 d0 23 ff ff       	call   4840 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   12470:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12477:	48 89 c7             	mov    %rax,%rdi
   1247a:	e8 f1 1d ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1247f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   12486:	48 89 c7             	mov    %rax,%rdi
   12489:	e8 e2 1d ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1248e:	48 8b 05 13 eb 01 00 	mov    0x1eb13(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   12495:	48 89 c2             	mov    %rax,%rdx
   12498:	48 8d 05 a1 e8 01 00 	lea    0x1e8a1(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1249f:	48 89 c6             	mov    %rax,%rsi
   124a2:	48 89 df             	mov    %rbx,%rdi
   124a5:	e8 e6 23 ff ff       	call   4890 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   124aa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   124b1:	48 83 c0 10          	add    $0x10,%rax
   124b5:	48 8d 15 da e4 00 00 	lea    0xe4da(%rip),%rdx        # 20996 <_ZZN9VulkanApp6renderEvE11submitCount+0x9a>
   124bc:	48 89 d6             	mov    %rdx,%rsi
   124bf:	48 89 c7             	mov    %rax,%rdi
   124c2:	e8 a9 1f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   124c7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   124ce:	48 83 c0 10          	add    $0x10,%rax
   124d2:	48 8d 15 d6 e4 00 00 	lea    0xe4d6(%rip),%rdx        # 209af <_ZZN9VulkanApp6renderEvE11submitCount+0xb3>
   124d9:	48 89 d6             	mov    %rdx,%rsi
   124dc:	48 89 c7             	mov    %rax,%rdi
   124df:	e8 8c 1f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   124e4:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   124eb:	be 00 00 00 00       	mov    $0x0,%esi
   124f0:	48 89 c7             	mov    %rax,%rdi
   124f3:	e8 fa 60 ff ff       	call   85f2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   124f8:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   124ff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12503:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12507:	48 89 c7             	mov    %rax,%rdi
   1250a:	e8 b9 19 00 00       	call   13ec8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   1250f:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   12516:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1251a:	48 89 c7             	mov    %rax,%rdi
   1251d:	e8 cc 19 00 00       	call   13eee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   12522:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   12529:	eb 64                	jmp    1258f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   1252b:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   12532:	48 89 c7             	mov    %rax,%rdi
   12535:	e8 3c 1a 00 00       	call   13f76 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   1253a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   12541:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12548:	48 83 c0 10          	add    $0x10,%rax
   1254c:	48 8d 15 6d e4 00 00 	lea    0xe46d(%rip),%rdx        # 209c0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   12553:	48 89 d6             	mov    %rdx,%rsi
   12556:	48 89 c7             	mov    %rax,%rdi
   12559:	e8 12 1f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1255e:	48 89 c2             	mov    %rax,%rdx
   12561:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12568:	48 89 c6             	mov    %rax,%rsi
   1256b:	48 89 d7             	mov    %rdx,%rdi
   1256e:	e8 fd 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12573:	be 0a 00 00 00       	mov    $0xa,%esi
   12578:	48 89 c7             	mov    %rax,%rdi
   1257b:	e8 20 20 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   12580:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   12587:	48 89 c7             	mov    %rax,%rdi
   1258a:	e8 c3 19 00 00       	call   13f52 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   1258f:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   12596:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   1259d:	48 89 d6             	mov    %rdx,%rsi
   125a0:	48 89 c7             	mov    %rax,%rdi
   125a3:	e8 6f 19 00 00       	call   13f17 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   125a8:	84 c0                	test   %al,%al
   125aa:	0f 85 7b ff ff ff    	jne    1252b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   125b0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   125b7:	48 83 c0 10          	add    $0x10,%rax
   125bb:	48 8d 15 01 e4 00 00 	lea    0xe401(%rip),%rdx        # 209c3 <_ZZN9VulkanApp6renderEvE11submitCount+0xc7>
   125c2:	48 89 d6             	mov    %rdx,%rsi
   125c5:	48 89 c7             	mov    %rax,%rdi
   125c8:	e8 a3 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   125cd:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   125d4:	48 83 c0 10          	add    $0x10,%rax
   125d8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   125dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   125e0:	48 89 c7             	mov    %rax,%rdi
   125e3:	e8 3e 14 00 00       	call   13a26 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   125e8:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   125ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   125f3:	48 89 c7             	mov    %rax,%rdi
   125f6:	e8 51 14 00 00       	call   13a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   125fb:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   12602:	eb 67                	jmp    1266b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   12604:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   1260b:	48 89 c7             	mov    %rax,%rdi
   1260e:	e8 bd 14 00 00       	call   13ad0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   12613:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   1261a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12621:	48 83 c0 10          	add    $0x10,%rax
   12625:	48 8d 15 94 e3 00 00 	lea    0xe394(%rip),%rdx        # 209c0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   1262c:	48 89 d6             	mov    %rdx,%rsi
   1262f:	48 89 c7             	mov    %rax,%rdi
   12632:	e8 39 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12637:	48 89 c2             	mov    %rax,%rdx
   1263a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   12641:	48 8b 00             	mov    (%rax),%rax
   12644:	48 89 c6             	mov    %rax,%rsi
   12647:	48 89 d7             	mov    %rdx,%rdi
   1264a:	e8 21 1e ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1264f:	be 0a 00 00 00       	mov    $0xa,%esi
   12654:	48 89 c7             	mov    %rax,%rdi
   12657:	e8 44 1f ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   1265c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   12663:	48 89 c7             	mov    %rax,%rdi
   12666:	e8 45 14 00 00       	call   13ab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   1266b:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   12672:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   12679:	48 89 d6             	mov    %rdx,%rsi
   1267c:	48 89 c7             	mov    %rax,%rdi
   1267f:	e8 f1 13 00 00       	call   13a75 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   12684:	84 c0                	test   %al,%al
   12686:	0f 85 78 ff ff ff    	jne    12604 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   1268c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12693:	48 83 c0 10          	add    $0x10,%rax
   12697:	be 0a 00 00 00       	mov    $0xa,%esi
   1269c:	48 89 c7             	mov    %rax,%rdi
   1269f:	e8 fc 1e ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   126a4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   126ab:	48 83 c0 10          	add    $0x10,%rax
   126af:	48 8d 15 1d e3 00 00 	lea    0xe31d(%rip),%rdx        # 209d3 <_ZZN9VulkanApp6renderEvE11submitCount+0xd7>
   126b6:	48 89 d6             	mov    %rdx,%rsi
   126b9:	48 89 c7             	mov    %rax,%rdi
   126bc:	e8 af 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   126c1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   126c8:	48 83 c0 10          	add    $0x10,%rax
   126cc:	48 8d 15 15 e3 00 00 	lea    0xe315(%rip),%rdx        # 209e8 <_ZZN9VulkanApp6renderEvE11submitCount+0xec>
   126d3:	48 89 d6             	mov    %rdx,%rsi
   126d6:	48 89 c7             	mov    %rax,%rdi
   126d9:	e8 92 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   126de:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   126e5:	48 89 c7             	mov    %rax,%rdi
   126e8:	e8 9f 62 ff ff       	call   898c <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   126ed:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   126f4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   126f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126fc:	48 89 c7             	mov    %rax,%rdi
   126ff:	e8 82 bd ff ff       	call   e486 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   12704:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   1270b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1270f:	48 89 c7             	mov    %rax,%rdi
   12712:	e8 95 bd ff ff       	call   e4ac <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   12717:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   1271e:	eb 5e                	jmp    1277e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   12720:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   12727:	48 89 c7             	mov    %rax,%rdi
   1272a:	e8 05 be ff ff       	call   e534 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   1272f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   12733:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1273a:	48 83 c0 10          	add    $0x10,%rax
   1273e:	48 8d 15 7b e2 00 00 	lea    0xe27b(%rip),%rdx        # 209c0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   12745:	48 89 d6             	mov    %rdx,%rsi
   12748:	48 89 c7             	mov    %rax,%rdi
   1274b:	e8 20 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12750:	48 89 c2             	mov    %rax,%rdx
   12753:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   12757:	48 89 c6             	mov    %rax,%rsi
   1275a:	48 89 d7             	mov    %rdx,%rdi
   1275d:	e8 0e 1d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12762:	be 0a 00 00 00       	mov    $0xa,%esi
   12767:	48 89 c7             	mov    %rax,%rdi
   1276a:	e8 31 1e ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   1276f:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   12776:	48 89 c7             	mov    %rax,%rdi
   12779:	e8 92 bd ff ff       	call   e510 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   1277e:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   12785:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   1278c:	48 89 d6             	mov    %rdx,%rsi
   1278f:	48 89 c7             	mov    %rax,%rdi
   12792:	e8 3e bd ff ff       	call   e4d5 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   12797:	84 c0                	test   %al,%al
   12799:	75 85                	jne    12720 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   1279b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   127a2:	48 83 c0 10          	add    $0x10,%rax
   127a6:	48 8d 15 4c e2 00 00 	lea    0xe24c(%rip),%rdx        # 209f9 <_ZZN9VulkanApp6renderEvE11submitCount+0xfd>
   127ad:	48 89 d6             	mov    %rdx,%rsi
   127b0:	48 89 c7             	mov    %rax,%rdi
   127b3:	e8 b8 1c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   127b8:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   127bf:	48 83 c0 28          	add    $0x28,%rax
   127c3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   127c7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   127cb:	48 89 c7             	mov    %rax,%rdi
   127ce:	e8 e3 2a 00 00       	call   152b6 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   127d3:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   127da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   127de:	48 89 c7             	mov    %rax,%rdi
   127e1:	e8 f6 2a 00 00       	call   152dc <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   127e6:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   127ed:	eb 61                	jmp    12850 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   127ef:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   127f6:	48 89 c7             	mov    %rax,%rdi
   127f9:	e8 62 2b 00 00       	call   15360 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   127fe:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   12802:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12809:	48 83 c0 10          	add    $0x10,%rax
   1280d:	48 8d 15 ac e1 00 00 	lea    0xe1ac(%rip),%rdx        # 209c0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   12814:	48 89 d6             	mov    %rdx,%rsi
   12817:	48 89 c7             	mov    %rax,%rdi
   1281a:	e8 51 1c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1281f:	48 89 c2             	mov    %rax,%rdx
   12822:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12826:	48 8b 00             	mov    (%rax),%rax
   12829:	48 89 c6             	mov    %rax,%rsi
   1282c:	48 89 d7             	mov    %rdx,%rdi
   1282f:	e8 3c 1c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12834:	be 0a 00 00 00       	mov    $0xa,%esi
   12839:	48 89 c7             	mov    %rax,%rdi
   1283c:	e8 5f 1d ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   12841:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   12848:	48 89 c7             	mov    %rax,%rdi
   1284b:	e8 f0 2a 00 00       	call   15340 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   12850:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   12857:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   1285e:	48 89 d6             	mov    %rdx,%rsi
   12861:	48 89 c7             	mov    %rax,%rdi
   12864:	e8 9c 2a 00 00       	call   15305 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   12869:	84 c0                	test   %al,%al
   1286b:	75 82                	jne    127ef <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   1286d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12874:	48 83 c0 10          	add    $0x10,%rax
   12878:	be 0a 00 00 00       	mov    $0xa,%esi
   1287d:	48 89 c7             	mov    %rax,%rdi
   12880:	e8 1b 1d ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   12885:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1288c:	48 83 c0 10          	add    $0x10,%rax
   12890:	48 8d 15 72 e1 00 00 	lea    0xe172(%rip),%rdx        # 20a09 <_ZZN9VulkanApp6renderEvE11submitCount+0x10d>
   12897:	48 89 d6             	mov    %rdx,%rsi
   1289a:	48 89 c7             	mov    %rax,%rdi
   1289d:	e8 ce 1b ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   128a2:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   128a9:	48 8b 50 08          	mov    0x8(%rax),%rdx
   128ad:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   128b4:	48 89 d6             	mov    %rdx,%rsi
   128b7:	48 89 c7             	mov    %rax,%rdi
   128ba:	e8 79 61 ff ff       	call   8a38 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   128bf:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   128c6:	48 8b 50 58          	mov    0x58(%rax),%rdx
   128ca:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   128d1:	48 89 d6             	mov    %rdx,%rsi
   128d4:	48 89 c7             	mov    %rax,%rdi
   128d7:	e8 cb 62 ff ff       	call   8ba7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   128dc:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   128e3:	00 
  size_t selectedDeviceIndex = 0;
   128e4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   128eb:	00 
  for (const auto &physDev : physicalDeviceList) {
   128ec:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   128f3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   128f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   128fb:	48 89 c7             	mov    %rax,%rdi
   128fe:	e8 f3 13 00 00       	call   13cf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   12903:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   1290a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1290e:	48 89 c7             	mov    %rax,%rdi
   12911:	e8 06 14 00 00       	call   13d1c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   12916:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   1291d:	e9 c7 06 00 00       	jmp    12fe9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   12922:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   12929:	48 89 c7             	mov    %rax,%rdi
   1292c:	e8 6f 14 00 00       	call   13da0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   12931:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   12935:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1293c:	48 89 c7             	mov    %rax,%rdi
   1293f:	e8 cc 1f ff ff       	call   4910 <_ZNSaIcEC1Ev@plt>
   12944:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   1294b:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12952:	48 8d 0d c6 e0 00 00 	lea    0xe0c6(%rip),%rcx        # 20a1f <_ZZN9VulkanApp6renderEvE11submitCount+0x123>
   12959:	48 89 ce             	mov    %rcx,%rsi
   1295c:	48 89 c7             	mov    %rax,%rdi
   1295f:	e8 ea 27 ff ff       	call   514e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   12964:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1296b:	48 89 c7             	mov    %rax,%rdi
   1296e:	e8 bd 1b ff ff       	call   4530 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   12973:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   1297a:	b8 00 00 00 00       	mov    $0x0,%eax
   1297f:	b9 0e 00 00 00       	mov    $0xe,%ecx
   12984:	48 89 d7             	mov    %rdx,%rdi
   12987:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   1298a:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   12991:	00 00 00 
    vk11Props.pNext = nullptr;
   12994:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   1299b:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   1299f:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   129a6:	b8 00 00 00 00       	mov    $0x0,%eax
   129ab:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   129b0:	48 89 d7             	mov    %rdx,%rdi
   129b3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   129b6:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   129bd:	00 00 00 
    vk12Props.pNext = &vk11Props;
   129c0:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   129c7:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   129ce:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   129d5:	b8 00 00 00 00       	mov    $0x0,%eax
   129da:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   129df:	48 89 d7             	mov    %rdx,%rdi
   129e2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   129e5:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   129ec:	00 00 00 
    vk13Props.pNext = &vk12Props;
   129ef:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   129f6:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   129fd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12a01:	48 8b 08             	mov    (%rax),%rcx
   12a04:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   12a0b:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   12a12:	48 89 ce             	mov    %rcx,%rsi
   12a15:	48 89 c7             	mov    %rax,%rdi
   12a18:	e8 b4 61 ff ff       	call   8bd1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   12a1d:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   12a23:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   12a29:	39 c2                	cmp    %eax,%edx
   12a2b:	75 08                	jne    12a35 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   12a2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a31:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   12a35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a39:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12a3d:	75 19                	jne    12a58 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   12a3f:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12a46:	48 8d 15 d3 df 00 00 	lea    0xdfd3(%rip),%rdx        # 20a20 <_ZZN9VulkanApp6renderEvE11submitCount+0x124>
   12a4d:	48 89 d6             	mov    %rdx,%rsi
   12a50:	48 89 c7             	mov    %rax,%rdi
   12a53:	e8 78 1c ff ff       	call   46d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   12a58:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12a5f:	48 83 c0 10          	add    $0x10,%rax
   12a63:	48 8d 15 c2 df 00 00 	lea    0xdfc2(%rip),%rdx        # 20a2c <_ZZN9VulkanApp6renderEvE11submitCount+0x130>
   12a6a:	48 89 d6             	mov    %rdx,%rsi
   12a6d:	48 89 c7             	mov    %rax,%rdi
   12a70:	e8 fb 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12a75:	48 89 c2             	mov    %rax,%rdx
   12a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a7c:	48 89 c6             	mov    %rax,%rsi
   12a7f:	48 89 d7             	mov    %rdx,%rdi
   12a82:	e8 29 16 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12a87:	48 89 c2             	mov    %rax,%rdx
   12a8a:	48 8d 05 9f df 00 00 	lea    0xdf9f(%rip),%rax        # 20a30 <_ZZN9VulkanApp6renderEvE11submitCount+0x134>
   12a91:	48 89 c6             	mov    %rax,%rsi
   12a94:	48 89 d7             	mov    %rdx,%rdi
   12a97:	e8 d4 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12a9c:	48 89 c2             	mov    %rax,%rdx
   12a9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12aa3:	48 89 c6             	mov    %rax,%rsi
   12aa6:	48 89 d7             	mov    %rdx,%rdi
   12aa9:	e8 02 16 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12aae:	48 89 c2             	mov    %rax,%rdx
   12ab1:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12ab8:	48 89 c6             	mov    %rax,%rsi
   12abb:	48 89 d7             	mov    %rdx,%rdi
   12abe:	e8 1d 19 ff ff       	call   43e0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   12ac3:	48 89 c2             	mov    %rax,%rdx
   12ac6:	48 8d 05 6c df 00 00 	lea    0xdf6c(%rip),%rax        # 20a39 <_ZZN9VulkanApp6renderEvE11submitCount+0x13d>
   12acd:	48 89 c6             	mov    %rax,%rsi
   12ad0:	48 89 d7             	mov    %rdx,%rdi
   12ad3:	e8 98 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   12ad8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12adf:	48 83 c0 10          	add    $0x10,%rax
   12ae3:	48 8d 15 52 df 00 00 	lea    0xdf52(%rip),%rdx        # 20a3c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   12aea:	48 89 d6             	mov    %rdx,%rsi
   12aed:	48 89 c7             	mov    %rax,%rdi
   12af0:	e8 7b 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12af5:	48 89 c2             	mov    %rax,%rdx
   12af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12afc:	48 89 c6             	mov    %rax,%rsi
   12aff:	48 89 d7             	mov    %rdx,%rdi
   12b02:	e8 a9 15 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12b07:	48 89 c2             	mov    %rax,%rdx
   12b0a:	48 8d 05 30 df 00 00 	lea    0xdf30(%rip),%rax        # 20a41 <_ZZN9VulkanApp6renderEvE11submitCount+0x145>
   12b11:	48 89 c6             	mov    %rax,%rsi
   12b14:	48 89 d7             	mov    %rdx,%rdi
   12b17:	e8 54 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   12b1c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12b23:	48 83 c0 10          	add    $0x10,%rax
   12b27:	48 8d 15 2a df 00 00 	lea    0xdf2a(%rip),%rdx        # 20a58 <_ZZN9VulkanApp6renderEvE11submitCount+0x15c>
   12b2e:	48 89 d6             	mov    %rdx,%rsi
   12b31:	48 89 c7             	mov    %rax,%rdi
   12b34:	e8 37 19 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12b39:	48 89 c2             	mov    %rax,%rdx
   12b3c:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   12b42:	89 c6                	mov    %eax,%esi
   12b44:	48 89 d7             	mov    %rdx,%rdi
   12b47:	e8 54 1b ff ff       	call   46a0 <_ZNSolsEj@plt>
   12b4c:	be 0a 00 00 00       	mov    $0xa,%esi
   12b51:	48 89 c7             	mov    %rax,%rdi
   12b54:	e8 47 1a ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   12b59:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12b60:	48 83 c0 10          	add    $0x10,%rax
   12b64:	48 8d 15 fc de 00 00 	lea    0xdefc(%rip),%rdx        # 20a67 <_ZZN9VulkanApp6renderEvE11submitCount+0x16b>
   12b6b:	48 89 d6             	mov    %rdx,%rsi
   12b6e:	48 89 c7             	mov    %rax,%rdi
   12b71:	e8 fa 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12b76:	48 89 c2             	mov    %rax,%rdx
   12b79:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   12b80:	48 83 c0 24          	add    $0x24,%rax
   12b84:	48 89 c6             	mov    %rax,%rsi
   12b87:	48 89 d7             	mov    %rdx,%rdi
   12b8a:	e8 e1 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12b8f:	be 0a 00 00 00       	mov    $0xa,%esi
   12b94:	48 89 c7             	mov    %rax,%rdi
   12b97:	e8 04 1a ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   12b9c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12ba3:	48 83 c0 10          	add    $0x10,%rax
   12ba7:	48 8d 15 ca de 00 00 	lea    0xdeca(%rip),%rdx        # 20a78 <_ZZN9VulkanApp6renderEvE11submitCount+0x17c>
   12bae:	48 89 d6             	mov    %rdx,%rsi
   12bb1:	48 89 c7             	mov    %rax,%rdi
   12bb4:	e8 b7 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   12bb9:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   12bbf:	83 f8 04             	cmp    $0x4,%eax
   12bc2:	0f 84 80 00 00 00    	je     12c48 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   12bc8:	83 f8 04             	cmp    $0x4,%eax
   12bcb:	0f 8f 96 00 00 00    	jg     12c67 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   12bd1:	83 f8 03             	cmp    $0x3,%eax
   12bd4:	74 53                	je     12c29 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   12bd6:	83 f8 03             	cmp    $0x3,%eax
   12bd9:	0f 8f 88 00 00 00    	jg     12c67 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   12bdf:	83 f8 01             	cmp    $0x1,%eax
   12be2:	74 07                	je     12beb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   12be4:	83 f8 02             	cmp    $0x2,%eax
   12be7:	74 21                	je     12c0a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   12be9:	eb 7c                	jmp    12c67 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   12beb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12bf2:	48 83 c0 10          	add    $0x10,%rax
   12bf6:	48 8d 15 8c de 00 00 	lea    0xde8c(%rip),%rdx        # 20a89 <_ZZN9VulkanApp6renderEvE11submitCount+0x18d>
   12bfd:	48 89 d6             	mov    %rdx,%rsi
   12c00:	48 89 c7             	mov    %rax,%rdi
   12c03:	e8 68 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c08:	eb 7b                	jmp    12c85 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   12c0a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c11:	48 83 c0 10          	add    $0x10,%rax
   12c15:	48 8d 15 7d de 00 00 	lea    0xde7d(%rip),%rdx        # 20a99 <_ZZN9VulkanApp6renderEvE11submitCount+0x19d>
   12c1c:	48 89 d6             	mov    %rdx,%rsi
   12c1f:	48 89 c7             	mov    %rax,%rdi
   12c22:	e8 49 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c27:	eb 5c                	jmp    12c85 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   12c29:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c30:	48 83 c0 10          	add    $0x10,%rax
   12c34:	48 8d 15 6c de 00 00 	lea    0xde6c(%rip),%rdx        # 20aa7 <_ZZN9VulkanApp6renderEvE11submitCount+0x1ab>
   12c3b:	48 89 d6             	mov    %rdx,%rsi
   12c3e:	48 89 c7             	mov    %rax,%rdi
   12c41:	e8 2a 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c46:	eb 3d                	jmp    12c85 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   12c48:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c4f:	48 83 c0 10          	add    $0x10,%rax
   12c53:	48 8d 15 5a de 00 00 	lea    0xde5a(%rip),%rdx        # 20ab4 <_ZZN9VulkanApp6renderEvE11submitCount+0x1b8>
   12c5a:	48 89 d6             	mov    %rdx,%rsi
   12c5d:	48 89 c7             	mov    %rax,%rdi
   12c60:	e8 0b 18 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c65:	eb 1e                	jmp    12c85 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   12c67:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c6e:	48 83 c0 10          	add    $0x10,%rax
   12c72:	48 8d 15 40 de 00 00 	lea    0xde40(%rip),%rdx        # 20ab9 <_ZZN9VulkanApp6renderEvE11submitCount+0x1bd>
   12c79:	48 89 d6             	mov    %rdx,%rsi
   12c7c:	48 89 c7             	mov    %rax,%rdi
   12c7f:	e8 ec 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   12c84:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   12c85:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12c8c:	48 83 c0 10          	add    $0x10,%rax
   12c90:	48 8d 15 29 de 00 00 	lea    0xde29(%rip),%rdx        # 20ac0 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c4>
   12c97:	48 89 d6             	mov    %rdx,%rsi
   12c9a:	48 89 c7             	mov    %rax,%rdi
   12c9d:	e8 ce 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12ca2:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   12ca8:	89 d6                	mov    %edx,%esi
   12caa:	48 89 c7             	mov    %rax,%rdi
   12cad:	e8 0e 1c ff ff       	call   48c0 <_ZNSolsEi@plt>
   12cb2:	be 0a 00 00 00       	mov    $0xa,%esi
   12cb7:	48 89 c7             	mov    %rax,%rdi
   12cba:	e8 e1 18 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   12cbf:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12cc6:	48 83 c0 10          	add    $0x10,%rax
   12cca:	48 8d 15 fe dd 00 00 	lea    0xddfe(%rip),%rdx        # 20acf <_ZZN9VulkanApp6renderEvE11submitCount+0x1d3>
   12cd1:	48 89 d6             	mov    %rdx,%rsi
   12cd4:	48 89 c7             	mov    %rax,%rdi
   12cd7:	e8 94 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12cdc:	48 89 c2             	mov    %rax,%rdx
   12cdf:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   12ce6:	48 83 c0 14          	add    $0x14,%rax
   12cea:	48 89 c6             	mov    %rax,%rsi
   12ced:	48 89 d7             	mov    %rdx,%rdi
   12cf0:	e8 7b 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12cf5:	be 0a 00 00 00       	mov    $0xa,%esi
   12cfa:	48 89 c7             	mov    %rax,%rdi
   12cfd:	e8 9e 18 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   12d02:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12d09:	48 83 c0 10          	add    $0x10,%rax
   12d0d:	48 8d 15 cc dd 00 00 	lea    0xddcc(%rip),%rdx        # 20ae0 <_ZZN9VulkanApp6renderEvE11submitCount+0x1e4>
   12d14:	48 89 d6             	mov    %rdx,%rsi
   12d17:	48 89 c7             	mov    %rax,%rdi
   12d1a:	e8 51 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d1f:	48 89 c2             	mov    %rax,%rdx
   12d22:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   12d29:	48 05 14 01 00 00    	add    $0x114,%rax
   12d2f:	48 89 c6             	mov    %rax,%rsi
   12d32:	48 89 d7             	mov    %rdx,%rdi
   12d35:	e8 36 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d3a:	be 0a 00 00 00       	mov    $0xa,%esi
   12d3f:	48 89 c7             	mov    %rax,%rdi
   12d42:	e8 59 18 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   12d47:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12d4e:	48 83 c0 10          	add    $0x10,%rax
   12d52:	48 8d 15 9f dd 00 00 	lea    0xdd9f(%rip),%rdx        # 20af8 <_ZZN9VulkanApp6renderEvE11submitCount+0x1fc>
   12d59:	48 89 d6             	mov    %rdx,%rsi
   12d5c:	48 89 c7             	mov    %rax,%rdi
   12d5f:	e8 0c 17 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12d64:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   12d67:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   12d6e:	48 89 c6             	mov    %rax,%rsi
   12d71:	48 89 d7             	mov    %rdx,%rdi
   12d74:	e8 37 13 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12d79:	be 0a 00 00 00       	mov    $0xa,%esi
   12d7e:	48 89 c7             	mov    %rax,%rdi
   12d81:	e8 1a 18 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   12d86:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12d8d:	48 83 c0 10          	add    $0x10,%rax
   12d91:	48 8d 15 a4 dc 00 00 	lea    0xdca4(%rip),%rdx        # 20a3c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   12d98:	48 89 d6             	mov    %rdx,%rsi
   12d9b:	48 89 c7             	mov    %rax,%rdi
   12d9e:	e8 cd 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12da3:	48 89 c2             	mov    %rax,%rdx
   12da6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12daa:	48 89 c6             	mov    %rax,%rsi
   12dad:	48 89 d7             	mov    %rdx,%rdi
   12db0:	e8 fb 12 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12db5:	48 89 c2             	mov    %rax,%rdx
   12db8:	48 8d 05 61 dd 00 00 	lea    0xdd61(%rip),%rax        # 20b20 <_ZZN9VulkanApp6renderEvE11submitCount+0x224>
   12dbf:	48 89 c6             	mov    %rax,%rsi
   12dc2:	48 89 d7             	mov    %rdx,%rdi
   12dc5:	e8 a6 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   12dca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   12dce:	48 8b 08             	mov    (%rax),%rcx
   12dd1:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   12dd8:	ba 00 00 00 00       	mov    $0x0,%edx
   12ddd:	48 89 ce             	mov    %rcx,%rsi
   12de0:	48 89 c7             	mov    %rax,%rdi
   12de3:	e8 7b 59 ff ff       	call   8763 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   12de8:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   12def:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   12df3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12df7:	48 89 c7             	mov    %rax,%rdi
   12dfa:	e8 c9 10 00 00       	call   13ec8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   12dff:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   12e06:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e0a:	48 89 c7             	mov    %rax,%rdi
   12e0d:	e8 dc 10 00 00       	call   13eee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   12e12:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   12e19:	eb 5e                	jmp    12e79 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   12e1b:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   12e22:	48 89 c7             	mov    %rax,%rdi
   12e25:	e8 4c 11 00 00       	call   13f76 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   12e2a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   12e2e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12e35:	48 83 c0 10          	add    $0x10,%rax
   12e39:	48 8d 15 01 dd 00 00 	lea    0xdd01(%rip),%rdx        # 20b41 <_ZZN9VulkanApp6renderEvE11submitCount+0x245>
   12e40:	48 89 d6             	mov    %rdx,%rsi
   12e43:	48 89 c7             	mov    %rax,%rdi
   12e46:	e8 25 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12e4b:	48 89 c2             	mov    %rax,%rdx
   12e4e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12e52:	48 89 c6             	mov    %rax,%rsi
   12e55:	48 89 d7             	mov    %rdx,%rdi
   12e58:	e8 13 16 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12e5d:	be 0a 00 00 00       	mov    $0xa,%esi
   12e62:	48 89 c7             	mov    %rax,%rdi
   12e65:	e8 36 17 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   12e6a:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   12e71:	48 89 c7             	mov    %rax,%rdi
   12e74:	e8 d9 10 00 00       	call   13f52 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   12e79:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   12e80:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   12e87:	48 89 d6             	mov    %rdx,%rsi
   12e8a:	48 89 c7             	mov    %rax,%rdi
   12e8d:	e8 85 10 00 00       	call   13f17 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   12e92:	84 c0                	test   %al,%al
   12e94:	75 85                	jne    12e1b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   12e96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e9a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12e9e:	0f 85 fb 00 00 00    	jne    12f9f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   12ea4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12eab:	48 83 c0 10          	add    $0x10,%rax
   12eaf:	48 8d 15 86 db 00 00 	lea    0xdb86(%rip),%rdx        # 20a3c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   12eb6:	48 89 d6             	mov    %rdx,%rsi
   12eb9:	48 89 c7             	mov    %rax,%rdi
   12ebc:	e8 af 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12ec1:	48 89 c2             	mov    %rax,%rdx
   12ec4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ec8:	48 89 c6             	mov    %rax,%rsi
   12ecb:	48 89 d7             	mov    %rdx,%rdi
   12ece:	e8 dd 11 ff ff       	call   40b0 <_ZNSolsEm@plt>
   12ed3:	48 89 c2             	mov    %rax,%rdx
   12ed6:	48 8d 05 6b dc 00 00 	lea    0xdc6b(%rip),%rax        # 20b48 <_ZZN9VulkanApp6renderEvE11submitCount+0x24c>
   12edd:	48 89 c6             	mov    %rax,%rsi
   12ee0:	48 89 d7             	mov    %rdx,%rdi
   12ee3:	e8 88 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   12ee8:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   12eef:	48 05 90 00 00 00    	add    $0x90,%rax
   12ef5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   12ef9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12efd:	48 89 c7             	mov    %rax,%rdi
   12f00:	e8 21 0b 00 00       	call   13a26 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   12f05:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   12f0c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12f10:	48 89 c7             	mov    %rax,%rdi
   12f13:	e8 34 0b 00 00       	call   13a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   12f18:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   12f1f:	eb 61                	jmp    12f82 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   12f21:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12f28:	48 89 c7             	mov    %rax,%rdi
   12f2b:	e8 a0 0b 00 00       	call   13ad0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   12f30:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   12f34:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12f3b:	48 83 c0 10          	add    $0x10,%rax
   12f3f:	48 8d 15 fb db 00 00 	lea    0xdbfb(%rip),%rdx        # 20b41 <_ZZN9VulkanApp6renderEvE11submitCount+0x245>
   12f46:	48 89 d6             	mov    %rdx,%rsi
   12f49:	48 89 c7             	mov    %rax,%rdi
   12f4c:	e8 1f 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12f51:	48 89 c2             	mov    %rax,%rdx
   12f54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f58:	48 8b 00             	mov    (%rax),%rax
   12f5b:	48 89 c6             	mov    %rax,%rsi
   12f5e:	48 89 d7             	mov    %rdx,%rdi
   12f61:	e8 0a 15 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   12f66:	be 0a 00 00 00       	mov    $0xa,%esi
   12f6b:	48 89 c7             	mov    %rax,%rdi
   12f6e:	e8 2d 16 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   12f73:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12f7a:	48 89 c7             	mov    %rax,%rdi
   12f7d:	e8 2e 0b 00 00       	call   13ab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   12f82:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   12f89:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12f90:	48 89 d6             	mov    %rdx,%rsi
   12f93:	48 89 c7             	mov    %rax,%rdi
   12f96:	e8 da 0a 00 00       	call   13a75 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   12f9b:	84 c0                	test   %al,%al
   12f9d:	75 82                	jne    12f21 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   12f9f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12fa6:	48 83 c0 10          	add    $0x10,%rax
   12faa:	be 0a 00 00 00       	mov    $0xa,%esi
   12faf:	48 89 c7             	mov    %rax,%rdi
   12fb2:	e8 e9 15 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   12fb7:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   12fbc:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   12fc3:	48 89 c7             	mov    %rax,%rdi
   12fc6:	e8 0d 69 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   12fcb:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12fd2:	48 89 c7             	mov    %rax,%rdi
   12fd5:	e8 96 12 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   12fda:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   12fe1:	48 89 c7             	mov    %rax,%rdi
   12fe4:	e8 97 0d 00 00       	call   13d80 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   12fe9:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   12ff0:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   12ff7:	48 89 d6             	mov    %rdx,%rsi
   12ffa:	48 89 c7             	mov    %rax,%rdi
   12ffd:	e8 43 0d 00 00       	call   13d45 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   13002:	84 c0                	test   %al,%al
   13004:	0f 85 18 f9 ff ff    	jne    12922 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   1300a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   13011:	48 83 c0 10          	add    $0x10,%rax
   13015:	be 0a 00 00 00       	mov    $0xa,%esi
   1301a:	48 89 c7             	mov    %rax,%rdi
   1301d:	e8 7e 15 ff ff       	call   45a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   13022:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   13029:	48 89 c7             	mov    %rax,%rdi
   1302c:	e8 31 6b ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   13031:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   13038:	48 89 c7             	mov    %rax,%rdi
   1303b:	e8 2a 67 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   13040:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   13047:	48 89 c7             	mov    %rax,%rdi
   1304a:	e8 89 68 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   1304f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   13056:	48 89 c7             	mov    %rax,%rdi
   13059:	e8 42 10 ff ff       	call   40a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   1305e:	e9 cd 00 00 00       	jmp    13130 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   13063:	49 89 c4             	mov    %rax,%r12
   13066:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1306d:	48 89 c7             	mov    %rax,%rdi
   13070:	e8 fb 11 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   13075:	eb 03                	jmp    1307a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   13077:	49 89 c4             	mov    %rax,%r12
   1307a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13081:	48 89 c7             	mov    %rax,%rdi
   13084:	e8 e7 11 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   13089:	eb 03                	jmp    1308e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   1308b:	49 89 c4             	mov    %rax,%r12
   1308e:	48 89 df             	mov    %rbx,%rdi
   13091:	e8 3a 12 ff ff       	call   42d0 <__cxa_free_exception@plt>
   13096:	4c 89 e3             	mov    %r12,%rbx
   13099:	eb 7b                	jmp    13116 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   1309b:	48 89 c3             	mov    %rax,%rbx
   1309e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   130a5:	48 89 c7             	mov    %rax,%rdi
   130a8:	e8 83 14 ff ff       	call   4530 <_ZNSaIcED1Ev@plt>
   130ad:	eb 2b                	jmp    130da <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   130af:	48 89 c3             	mov    %rax,%rbx
   130b2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   130b9:	48 89 c7             	mov    %rax,%rdi
   130bc:	e8 17 68 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   130c1:	eb 03                	jmp    130c6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   130c3:	48 89 c3             	mov    %rax,%rbx
   130c6:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   130cd:	48 89 c7             	mov    %rax,%rdi
   130d0:	e8 9b 11 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   130d5:	eb 03                	jmp    130da <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   130d7:	48 89 c3             	mov    %rax,%rbx
   130da:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   130e1:	48 89 c7             	mov    %rax,%rdi
   130e4:	e8 79 6a ff ff       	call   9b62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   130e9:	eb 03                	jmp    130ee <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   130eb:	48 89 c3             	mov    %rax,%rbx
   130ee:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   130f5:	48 89 c7             	mov    %rax,%rdi
   130f8:	e8 6d 66 ff ff       	call   976a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   130fd:	eb 03                	jmp    13102 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   130ff:	48 89 c3             	mov    %rax,%rbx
   13102:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   13109:	48 89 c7             	mov    %rax,%rdi
   1310c:	e8 c7 67 ff ff       	call   98d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   13111:	eb 03                	jmp    13116 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   13113:	48 89 c3             	mov    %rax,%rbx
   13116:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1311d:	48 89 c7             	mov    %rax,%rdi
   13120:	e8 7b 0f ff ff       	call   40a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   13125:	48 89 d8             	mov    %rbx,%rax
   13128:	48 89 c7             	mov    %rax,%rdi
   1312b:	e8 d0 17 ff ff       	call   4900 <_Unwind_Resume@plt>
   13130:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   13137:	5b                   	pop    %rbx
   13138:	41 5c                	pop    %r12
   1313a:	5d                   	pop    %rbp
   1313b:	c3                   	ret

000000000001313c <_Z41__static_initialization_and_destruction_0ii>:
   1313c:	55                   	push   %rbp
   1313d:	48 89 e5             	mov    %rsp,%rbp
   13140:	41 57                	push   %r15
   13142:	41 56                	push   %r14
   13144:	41 55                	push   %r13
   13146:	41 54                	push   %r12
   13148:	53                   	push   %rbx
   13149:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   13150:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
   13156:	89 b5 58 ff ff ff    	mov    %esi,-0xa8(%rbp)
   1315c:	83 bd 5c ff ff ff 01 	cmpl   $0x1,-0xa4(%rbp)
   13163:	0f 85 92 02 00 00    	jne    133fb <_Z41__static_initialization_and_destruction_0ii+0x2bf>
   13169:	81 bd 58 ff ff ff ff 	cmpl   $0xffff,-0xa8(%rbp)
   13170:	ff 00 00 
   13173:	0f 85 82 02 00 00    	jne    133fb <_Z41__static_initialization_and_destruction_0ii+0x2bf>
   13179:	48 8d 05 d0 e4 01 00 	lea    0x1e4d0(%rip),%rax        # 31650 <_ZStL8__ioinit>
   13180:	48 89 c7             	mov    %rax,%rdi
   13183:	e8 18 16 ff ff       	call   47a0 <_ZNSt8ios_base4InitC1Ev@plt>
   13188:	48 8d 05 29 e3 01 00 	lea    0x1e329(%rip),%rax        # 314b8 <__dso_handle>
   1318f:	48 89 c2             	mov    %rax,%rdx
   13192:	48 8d 05 b7 e4 01 00 	lea    0x1e4b7(%rip),%rax        # 31650 <_ZStL8__ioinit>
   13199:	48 89 c6             	mov    %rax,%rsi
   1319c:	48 8b 05 25 de 01 00 	mov    0x1de25(%rip),%rax        # 30fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   131a3:	48 89 c7             	mov    %rax,%rdi
   131a6:	e8 25 12 ff ff       	call   43d0 <__cxa_atexit@plt>
const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
   131ab:	66 c7 85 62 ff ff ff 	movw   $0x0,-0x9e(%rbp)
   131b2:	00 00 
   131b4:	66 c7 85 64 ff ff ff 	movw   $0x1,-0x9c(%rbp)
   131bb:	01 00 
   131bd:	66 c7 85 66 ff ff ff 	movw   $0x2,-0x9a(%rbp)
   131c4:	02 00 
   131c6:	66 c7 85 68 ff ff ff 	movw   $0x2,-0x98(%rbp)
   131cd:	02 00 
   131cf:	66 c7 85 6a ff ff ff 	movw   $0x3,-0x96(%rbp)
   131d6:	03 00 
   131d8:	66 c7 85 6c ff ff ff 	movw   $0x0,-0x94(%rbp)
   131df:	00 00 
   131e1:	48 8d 85 62 ff ff ff 	lea    -0x9e(%rbp),%rax
   131e8:	49 89 c6             	mov    %rax,%r14
   131eb:	41 bf 06 00 00 00    	mov    $0x6,%r15d
   131f1:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   131f8:	48 89 c7             	mov    %rax,%rdi
   131fb:	e8 ce 1d ff ff       	call   4fce <_ZNSaItEC1Ev>
   13200:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   13207:	4c 89 f6             	mov    %r14,%rsi
   1320a:	4c 89 ff             	mov    %r15,%rdi
   1320d:	4c 89 f1             	mov    %r14,%rcx
   13210:	4c 89 fb             	mov    %r15,%rbx
   13213:	48 89 da             	mov    %rbx,%rdx
   13216:	48 89 c1             	mov    %rax,%rcx
   13219:	48 8d 05 40 e4 01 00 	lea    0x1e440(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   13220:	48 89 c7             	mov    %rax,%rdi
   13223:	e8 de 1d ff ff       	call   5006 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
   13228:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1322f:	48 89 c7             	mov    %rax,%rdi
   13232:	e8 b3 1d ff ff       	call   4fea <_ZNSaItED1Ev>
   13237:	48 8d 05 7a e2 01 00 	lea    0x1e27a(%rip),%rax        # 314b8 <__dso_handle>
   1323e:	48 89 c2             	mov    %rax,%rdx
   13241:	48 8d 05 18 e4 01 00 	lea    0x1e418(%rip),%rax        # 31660 <_ZN6shaderL16triangle_indicesE>
   13248:	48 89 c6             	mov    %rax,%rsi
   1324b:	48 8d 05 e4 2f ff ff 	lea    -0xd01c(%rip),%rax        # 6236 <_ZNSt6vectorItSaItEED1Ev>
   13252:	48 89 c7             	mov    %rax,%rdi
   13255:	e8 76 11 ff ff       	call   43d0 <__cxa_atexit@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
   1325a:	f3 0f 10 05 2a da 00 	movss  0xda2a(%rip),%xmm0        # 20c8c <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   13261:	00 
   13262:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
   13269:	ff 
   1326a:	f3 0f 10 05 1a da 00 	movss  0xda1a(%rip),%xmm0        # 20c8c <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   13271:	00 
   13272:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
   13279:	ff 
   1327a:	f3 0f 10 05 06 da 00 	movss  0xda06(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   13281:	00 
   13282:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
   13289:	ff 
   1328a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1328e:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
   13295:	ff 
   13296:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1329a:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
   1329f:	f3 0f 10 05 e9 d9 00 	movss  0xd9e9(%rip),%xmm0        # 20c90 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   132a6:	00 
   132a7:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
   132ac:	f3 0f 10 05 d8 d9 00 	movss  0xd9d8(%rip),%xmm0        # 20c8c <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   132b3:	00 
   132b4:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
   132b9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   132bd:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
   132c2:	f3 0f 10 05 be d9 00 	movss  0xd9be(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   132c9:	00 
   132ca:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
   132cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
   132d3:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
   132d8:	f3 0f 10 05 b0 d9 00 	movss  0xd9b0(%rip),%xmm0        # 20c90 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   132df:	00 
   132e0:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
   132e5:	f3 0f 10 05 a3 d9 00 	movss  0xd9a3(%rip),%xmm0        # 20c90 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   132ec:	00 
   132ed:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
   132f2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   132f6:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
   132fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   132ff:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
   13304:	f3 0f 10 05 7c d9 00 	movss  0xd97c(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   1330b:	00 
   1330c:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
   13311:	f3 0f 10 05 73 d9 00 	movss  0xd973(%rip),%xmm0        # 20c8c <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   13318:	00 
   13319:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
   1331e:	f3 0f 10 05 6a d9 00 	movss  0xd96a(%rip),%xmm0        # 20c90 <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   13325:	00 
   13326:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
   1332b:	f3 0f 10 05 55 d9 00 	movss  0xd955(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   13332:	00 
   13333:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
   13338:	f3 0f 10 05 48 d9 00 	movss  0xd948(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   1333f:	00 
   13340:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
   13345:	f3 0f 10 05 3b d9 00 	movss  0xd93b(%rip),%xmm0        # 20c88 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   1334c:	00 
   1334d:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
   13352:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   13359:	49 89 c4             	mov    %rax,%r12
   1335c:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   13362:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13366:	48 89 c7             	mov    %rax,%rdi
   13369:	e8 20 1d ff ff       	call   508e <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
   1336e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13372:	4c 89 e6             	mov    %r12,%rsi
   13375:	4c 89 ef             	mov    %r13,%rdi
   13378:	4c 89 e1             	mov    %r12,%rcx
   1337b:	4c 89 eb             	mov    %r13,%rbx
   1337e:	48 89 da             	mov    %rbx,%rdx
   13381:	48 89 c1             	mov    %rax,%rcx
   13384:	48 8d 05 f5 e2 01 00 	lea    0x1e2f5(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   1338b:	48 89 c7             	mov    %rax,%rdi
   1338e:	e8 33 1d ff ff       	call   50c6 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
   13393:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13397:	48 89 c7             	mov    %rax,%rdi
   1339a:	e8 0b 1d ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
   1339f:	48 8d 05 12 e1 01 00 	lea    0x1e112(%rip),%rax        # 314b8 <__dso_handle>
   133a6:	48 89 c2             	mov    %rax,%rdx
   133a9:	48 8d 05 d0 e2 01 00 	lea    0x1e2d0(%rip),%rax        # 31680 <_ZN6shaderL19triangle_index_dataE>
   133b0:	48 89 c6             	mov    %rax,%rsi
   133b3:	48 8d 05 c0 2e ff ff 	lea    -0xd140(%rip),%rax        # 627a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
   133ba:	48 89 c7             	mov    %rax,%rdi
   133bd:	e8 0e 10 ff ff       	call   43d0 <__cxa_atexit@plt>
   133c2:	eb 37                	jmp    133fb <_Z41__static_initialization_and_destruction_0ii+0x2bf>
const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
   133c4:	48 89 c3             	mov    %rax,%rbx
   133c7:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   133ce:	48 89 c7             	mov    %rax,%rdi
   133d1:	e8 14 1c ff ff       	call   4fea <_ZNSaItED1Ev>
   133d6:	48 89 d8             	mov    %rbx,%rax
   133d9:	48 89 c7             	mov    %rax,%rdi
   133dc:	e8 1f 15 ff ff       	call   4900 <_Unwind_Resume@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
   133e1:	48 89 c3             	mov    %rax,%rbx
   133e4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   133e8:	48 89 c7             	mov    %rax,%rdi
   133eb:	e8 ba 1c ff ff       	call   50aa <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
   133f0:	48 89 d8             	mov    %rbx,%rax
   133f3:	48 89 c7             	mov    %rax,%rdi
   133f6:	e8 05 15 ff ff       	call   4900 <_Unwind_Resume@plt>
   133fb:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   13402:	5b                   	pop    %rbx
   13403:	41 5c                	pop    %r12
   13405:	41 5d                	pop    %r13
   13407:	41 5e                	pop    %r14
   13409:	41 5f                	pop    %r15
   1340b:	5d                   	pop    %rbp
   1340c:	c3                   	ret

000000000001340d <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   1340d:	55                   	push   %rbp
   1340e:	48 89 e5             	mov    %rsp,%rbp
   13411:	be ff ff 00 00       	mov    $0xffff,%esi
   13416:	bf 01 00 00 00       	mov    $0x1,%edi
   1341b:	e8 1c fd ff ff       	call   1313c <_Z41__static_initialization_and_destruction_0ii>
   13420:	5d                   	pop    %rbp
   13421:	c3                   	ret

0000000000013422 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   13422:	55                   	push   %rbp
   13423:	48 89 e5             	mov    %rsp,%rbp
   13426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1342a:	48 8d 15 df d8 01 00 	lea    0x1d8df(%rip),%rdx        # 30d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   13431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13435:	48 89 10             	mov    %rdx,(%rax)
   13438:	90                   	nop
   13439:	5d                   	pop    %rbp
   1343a:	c3                   	ret

000000000001343b <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   1343b:	55                   	push   %rbp
   1343c:	48 89 e5             	mov    %rsp,%rbp
   1343f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13443:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13447:	90                   	nop
   13448:	5d                   	pop    %rbp
   13449:	c3                   	ret

000000000001344a <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   1344a:	55                   	push   %rbp
   1344b:	48 89 e5             	mov    %rsp,%rbp
   1344e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   13452:	48 8d 05 b7 d2 00 00 	lea    0xd2b7(%rip),%rax        # 20710 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   13459:	5d                   	pop    %rbp
   1345a:	c3                   	ret
   1345b:	90                   	nop

000000000001345c <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   1345c:	55                   	push   %rbp
   1345d:	48 89 e5             	mov    %rsp,%rbp
   13460:	48 83 ec 10          	sub    $0x10,%rsp
   13464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1346c:	48 89 c7             	mov    %rax,%rdi
   1346f:	e8 ae ff ff ff       	call   13422 <_ZNSt9exceptionC1Ev>
   13474:	48 8d 15 45 d8 01 00 	lea    0x1d845(%rip),%rdx        # 30cc0 <_ZTVSt19bad_optional_access+0x10>
   1347b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1347f:	48 89 10             	mov    %rdx,(%rax)
   13482:	90                   	nop
   13483:	c9                   	leave
   13484:	c3                   	ret

0000000000013485 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   13485:	55                   	push   %rbp
   13486:	48 89 e5             	mov    %rsp,%rbp
   13489:	53                   	push   %rbx
   1348a:	48 83 ec 08          	sub    $0x8,%rsp
   1348e:	bf 08 00 00 00       	mov    $0x8,%edi
   13493:	e8 28 0d ff ff       	call   41c0 <__cxa_allocate_exception@plt>
   13498:	48 89 c3             	mov    %rax,%rbx
   1349b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   134a2:	48 89 df             	mov    %rbx,%rdi
   134a5:	e8 b2 ff ff ff       	call   1345c <_ZNSt19bad_optional_accessC1Ev>
   134aa:	48 8d 05 a3 8b 00 00 	lea    0x8ba3(%rip),%rax        # 1c054 <_ZNSt19bad_optional_accessD1Ev>
   134b1:	48 89 c2             	mov    %rax,%rdx
   134b4:	48 8d 05 9d d8 01 00 	lea    0x1d89d(%rip),%rax        # 30d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   134bb:	48 89 c6             	mov    %rax,%rsi
   134be:	48 89 df             	mov    %rbx,%rdi
   134c1:	e8 ca 13 ff ff       	call   4890 <__cxa_throw@plt>

00000000000134c6 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   134c6:	55                   	push   %rbp
   134c7:	48 89 e5             	mov    %rsp,%rbp
   134ca:	48 83 ec 10          	sub    $0x10,%rsp
   134ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   134d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   134dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134e0:	48 89 c7             	mov    %rax,%rdi
   134e3:	e8 04 00 00 00       	call   134ec <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   134e8:	90                   	nop
   134e9:	c9                   	leave
   134ea:	c3                   	ret
   134eb:	90                   	nop

00000000000134ec <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   134ec:	55                   	push   %rbp
   134ed:	48 89 e5             	mov    %rsp,%rbp
   134f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   134f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134f8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   134ff:	00 
      _M_header._M_left = &_M_header;
   13500:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13508:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   1350c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13514:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   13518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1351c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   13523:	00 
    }
   13524:	90                   	nop
   13525:	5d                   	pop    %rbp
   13526:	c3                   	ret
   13527:	90                   	nop

0000000000013528 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   13528:	55                   	push   %rbp
   13529:	48 89 e5             	mov    %rsp,%rbp
   1352c:	48 83 ec 10          	sub    $0x10,%rsp
   13530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13538:	48 89 c7             	mov    %rax,%rdi
   1353b:	e8 60 00 00 00       	call   135a0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   13540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13544:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   13548:	90                   	nop
   13549:	c9                   	leave
   1354a:	c3                   	ret
   1354b:	90                   	nop

000000000001354c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   1354c:	55                   	push   %rbp
   1354d:	48 89 e5             	mov    %rsp,%rbp
   13550:	48 83 ec 10          	sub    $0x10,%rsp
   13554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1355c:	48 89 c7             	mov    %rax,%rdi
   1355f:	e8 c4 ff ff ff       	call   13528 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   13564:	90                   	nop
   13565:	c9                   	leave
   13566:	c3                   	ret
   13567:	90                   	nop

0000000000013568 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   13568:	55                   	push   %rbp
   13569:	48 89 e5             	mov    %rsp,%rbp
   1356c:	48 83 ec 10          	sub    $0x10,%rsp
   13570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13578:	48 89 c7             	mov    %rax,%rdi
   1357b:	e8 cc ff ff ff       	call   1354c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   13580:	90                   	nop
   13581:	c9                   	leave
   13582:	c3                   	ret
   13583:	90                   	nop

0000000000013584 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   13584:	55                   	push   %rbp
   13585:	48 89 e5             	mov    %rsp,%rbp
   13588:	48 83 ec 10          	sub    $0x10,%rsp
   1358c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13594:	48 89 c7             	mov    %rax,%rdi
   13597:	e8 cc ff ff ff       	call   13568 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   1359c:	90                   	nop
   1359d:	c9                   	leave
   1359e:	c3                   	ret
   1359f:	90                   	nop

00000000000135a0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   135a0:	55                   	push   %rbp
   135a1:	48 89 e5             	mov    %rsp,%rbp
   135a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135a8:	90                   	nop
   135a9:	5d                   	pop    %rbp
   135aa:	c3                   	ret
   135ab:	90                   	nop

00000000000135ac <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   135ac:	55                   	push   %rbp
   135ad:	48 89 e5             	mov    %rsp,%rbp
   135b0:	48 83 ec 10          	sub    $0x10,%rsp
   135b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   135bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135c4:	48 89 d6             	mov    %rdx,%rsi
   135c7:	48 89 c7             	mov    %rax,%rdi
   135ca:	e8 fd 07 00 00       	call   13dcc <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   135cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135d3:	c9                   	leave
   135d4:	c3                   	ret
   135d5:	90                   	nop

00000000000135d6 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   135d6:	55                   	push   %rbp
   135d7:	48 89 e5             	mov    %rsp,%rbp
   135da:	48 83 ec 10          	sub    $0x10,%rsp
   135de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   135e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135ee:	48 89 d6             	mov    %rdx,%rsi
   135f1:	48 89 c7             	mov    %rax,%rdi
   135f4:	e8 b3 ff ff ff       	call   135ac <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   135f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135fd:	c9                   	leave
   135fe:	c3                   	ret
   135ff:	90                   	nop

0000000000013600 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   13600:	55                   	push   %rbp
   13601:	48 89 e5             	mov    %rsp,%rbp
   13604:	48 83 ec 10          	sub    $0x10,%rsp
   13608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   1360c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13610:	48 89 c7             	mov    %rax,%rdi
   13613:	e8 1a 00 00 00       	call   13632 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   13618:	84 c0                	test   %al,%al
   1361a:	74 0e                	je     1362a <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   1361c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13620:	48 89 c7             	mov    %rax,%rdi
   13623:	e8 ce 07 00 00       	call   13df6 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   13628:	eb 05                	jmp    1362f <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   1362a:	e8 56 fe ff ff       	call   13485 <_ZSt27__throw_bad_optional_accessv>
      }
   1362f:	c9                   	leave
   13630:	c3                   	ret
   13631:	90                   	nop

0000000000013632 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   13632:	55                   	push   %rbp
   13633:	48 89 e5             	mov    %rsp,%rbp
   13636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   1363a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1363e:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   13642:	5d                   	pop    %rbp
   13643:	c3                   	ret

0000000000013644 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   13644:	55                   	push   %rbp
   13645:	48 89 e5             	mov    %rsp,%rbp
   13648:	48 83 ec 10          	sub    $0x10,%rsp
   1364c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13654:	48 89 c7             	mov    %rax,%rdi
   13657:	e8 16 08 00 00       	call   13e72 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   1365c:	90                   	nop
   1365d:	c9                   	leave
   1365e:	c3                   	ret
   1365f:	90                   	nop

0000000000013660 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   13660:	55                   	push   %rbp
   13661:	48 89 e5             	mov    %rsp,%rbp
   13664:	48 83 ec 10          	sub    $0x10,%rsp
   13668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1366c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13670:	48 89 c7             	mov    %rax,%rdi
   13673:	e8 c2 07 00 00       	call   13e3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   13678:	90                   	nop
   13679:	c9                   	leave
   1367a:	c3                   	ret
   1367b:	90                   	nop

000000000001367c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   1367c:	55                   	push   %rbp
   1367d:	48 89 e5             	mov    %rsp,%rbp
   13680:	48 83 ec 10          	sub    $0x10,%rsp
   13684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1368c:	48 89 c7             	mov    %rax,%rdi
   1368f:	e8 cc ff ff ff       	call   13660 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   13694:	90                   	nop
   13695:	c9                   	leave
   13696:	c3                   	ret
   13697:	90                   	nop

0000000000013698 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   13698:	55                   	push   %rbp
   13699:	48 89 e5             	mov    %rsp,%rbp
   1369c:	48 83 ec 10          	sub    $0x10,%rsp
   136a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136a8:	48 89 c7             	mov    %rax,%rdi
   136ab:	e8 de 07 00 00       	call   13e8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   136b0:	90                   	nop
   136b1:	c9                   	leave
   136b2:	c3                   	ret
   136b3:	90                   	nop

00000000000136b4 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
   136b4:	55                   	push   %rbp
   136b5:	48 89 e5             	mov    %rsp,%rbp
   136b8:	48 83 ec 10          	sub    $0x10,%rsp
   136bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
   136c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136c4:	48 89 c7             	mov    %rax,%rdi
   136c7:	e8 02 00 00 00       	call   136ce <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
   136cc:	c9                   	leave
   136cd:	c3                   	ret

00000000000136ce <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
   136ce:	55                   	push   %rbp
   136cf:	48 89 e5             	mov    %rsp,%rbp
   136d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
   136d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136da:	5d                   	pop    %rbp
   136db:	c3                   	ret

00000000000136dc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   136dc:	55                   	push   %rbp
   136dd:	48 89 e5             	mov    %rsp,%rbp
   136e0:	48 83 ec 10          	sub    $0x10,%rsp
   136e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136ec:	48 89 c7             	mov    %rax,%rdi
   136ef:	e8 3c 11 00 00       	call   14830 <_ZNSaIP13VkImageView_TED1Ev>
   136f4:	90                   	nop
   136f5:	c9                   	leave
   136f6:	c3                   	ret
   136f7:	90                   	nop

00000000000136f8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   136f8:	55                   	push   %rbp
   136f9:	48 89 e5             	mov    %rsp,%rbp
   136fc:	48 83 ec 10          	sub    $0x10,%rsp
   13700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13708:	48 89 c7             	mov    %rax,%rdi
   1370b:	e8 74 18 00 00       	call   14f84 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   13710:	90                   	nop
   13711:	c9                   	leave
   13712:	c3                   	ret
   13713:	90                   	nop

0000000000013714 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   13714:	55                   	push   %rbp
   13715:	48 89 e5             	mov    %rsp,%rbp
   13718:	48 83 ec 10          	sub    $0x10,%rsp
   1371c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13724:	48 89 c7             	mov    %rax,%rdi
   13727:	e8 cc ff ff ff       	call   136f8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   1372c:	90                   	nop
   1372d:	c9                   	leave
   1372e:	c3                   	ret
   1372f:	90                   	nop

0000000000013730 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   13730:	55                   	push   %rbp
   13731:	48 89 e5             	mov    %rsp,%rbp
   13734:	48 83 ec 10          	sub    $0x10,%rsp
   13738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1373c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13740:	48 89 c7             	mov    %rax,%rdi
   13743:	e8 b2 18 00 00       	call   14ffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   13748:	90                   	nop
   13749:	c9                   	leave
   1374a:	c3                   	ret
   1374b:	90                   	nop

000000000001374c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   1374c:	55                   	push   %rbp
   1374d:	48 89 e5             	mov    %rsp,%rbp
   13750:	48 83 ec 10          	sub    $0x10,%rsp
   13754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1375c:	48 89 c7             	mov    %rax,%rdi
   1375f:	e8 cc ff ff ff       	call   13730 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   13764:	90                   	nop
   13765:	c9                   	leave
   13766:	c3                   	ret
   13767:	90                   	nop

0000000000013768 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:

  VkShaderModule vertex;
  VkShaderModule fragment;
};

struct GraphicsPipelineWrapper {
   13768:	55                   	push   %rbp
   13769:	48 89 e5             	mov    %rsp,%rbp
   1376c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13774:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1377b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1377f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13786:	00 
   13787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1378b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13792:	00 
   13793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13797:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1379e:	00 
   1379f:	90                   	nop
   137a0:	5d                   	pop    %rbp
   137a1:	c3                   	ret

00000000000137a2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   137a2:	55                   	push   %rbp
   137a3:	48 89 e5             	mov    %rsp,%rbp
   137a6:	48 83 ec 10          	sub    $0x10,%rsp
   137aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137b2:	48 89 c7             	mov    %rax,%rdi
   137b5:	e8 90 18 00 00       	call   1504a <_ZNSaIP15VkFramebuffer_TED1Ev>
   137ba:	90                   	nop
   137bb:	c9                   	leave
   137bc:	c3                   	ret
   137bd:	90                   	nop

00000000000137be <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   137be:	55                   	push   %rbp
   137bf:	48 89 e5             	mov    %rsp,%rbp
   137c2:	48 83 ec 10          	sub    $0x10,%rsp
   137c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137ce:	48 89 c7             	mov    %rax,%rdi
   137d1:	e8 4c 18 00 00       	call   15022 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   137d6:	90                   	nop
   137d7:	c9                   	leave
   137d8:	c3                   	ret
   137d9:	90                   	nop

00000000000137da <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   137da:	55                   	push   %rbp
   137db:	48 89 e5             	mov    %rsp,%rbp
   137de:	48 83 ec 10          	sub    $0x10,%rsp
   137e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137ea:	48 89 c7             	mov    %rax,%rdi
   137ed:	e8 cc ff ff ff       	call   137be <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   137f2:	90                   	nop
   137f3:	c9                   	leave
   137f4:	c3                   	ret
   137f5:	90                   	nop

00000000000137f6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   137f6:	55                   	push   %rbp
   137f7:	48 89 e5             	mov    %rsp,%rbp
   137fa:	48 83 ec 10          	sub    $0x10,%rsp
   137fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13806:	48 89 c7             	mov    %rax,%rdi
   13809:	e8 ea 18 00 00       	call   150f8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
   1380e:	90                   	nop
   1380f:	c9                   	leave
   13810:	c3                   	ret
   13811:	90                   	nop

0000000000013812 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   13812:	55                   	push   %rbp
   13813:	48 89 e5             	mov    %rsp,%rbp
   13816:	48 83 ec 10          	sub    $0x10,%rsp
   1381a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1381e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13822:	48 89 c7             	mov    %rax,%rdi
   13825:	e8 cc ff ff ff       	call   137f6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   1382a:	90                   	nop
   1382b:	c9                   	leave
   1382c:	c3                   	ret
   1382d:	90                   	nop

000000000001382e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1382e:	55                   	push   %rbp
   1382f:	48 89 e5             	mov    %rsp,%rbp
   13832:	48 83 ec 10          	sub    $0x10,%rsp
   13836:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1383a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1383e:	48 89 c7             	mov    %rax,%rdi
   13841:	e8 e6 14 00 00       	call   14d2c <_ZNSaIP13VkSemaphore_TED1Ev>
   13846:	90                   	nop
   13847:	c9                   	leave
   13848:	c3                   	ret
   13849:	90                   	nop

000000000001384a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1384a:	55                   	push   %rbp
   1384b:	48 89 e5             	mov    %rsp,%rbp
   1384e:	48 83 ec 10          	sub    $0x10,%rsp
   13852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1385a:	48 89 c7             	mov    %rax,%rdi
   1385d:	e8 be 18 00 00       	call   15120 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
   13862:	90                   	nop
   13863:	c9                   	leave
   13864:	c3                   	ret
   13865:	90                   	nop

0000000000013866 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
   13866:	55                   	push   %rbp
   13867:	48 89 e5             	mov    %rsp,%rbp
   1386a:	48 83 ec 10          	sub    $0x10,%rsp
   1386e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13876:	48 89 c7             	mov    %rax,%rdi
   13879:	e8 cc ff ff ff       	call   1384a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
   1387e:	90                   	nop
   1387f:	c9                   	leave
   13880:	c3                   	ret
   13881:	90                   	nop

0000000000013882 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13882:	55                   	push   %rbp
   13883:	48 89 e5             	mov    %rsp,%rbp
   13886:	48 83 ec 10          	sub    $0x10,%rsp
   1388a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1388e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13892:	48 89 c7             	mov    %rax,%rdi
   13895:	e8 24 19 00 00       	call   151be <_ZNSaIP9VkFence_TED1Ev>
   1389a:	90                   	nop
   1389b:	c9                   	leave
   1389c:	c3                   	ret
   1389d:	90                   	nop

000000000001389e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1389e:	55                   	push   %rbp
   1389f:	48 89 e5             	mov    %rsp,%rbp
   138a2:	48 83 ec 10          	sub    $0x10,%rsp
   138a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ae:	48 89 c7             	mov    %rax,%rdi
   138b1:	e8 e0 18 00 00       	call   15196 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
   138b6:	90                   	nop
   138b7:	c9                   	leave
   138b8:	c3                   	ret
   138b9:	90                   	nop

00000000000138ba <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
   138ba:	55                   	push   %rbp
   138bb:	48 89 e5             	mov    %rsp,%rbp
   138be:	48 83 ec 10          	sub    $0x10,%rsp
   138c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ca:	48 89 c7             	mov    %rax,%rdi
   138cd:	e8 cc ff ff ff       	call   1389e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
   138d2:	90                   	nop
   138d3:	c9                   	leave
   138d4:	c3                   	ret
   138d5:	90                   	nop

00000000000138d6 <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffers();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 11: Synchronization and cache control */
  struct SyncWrapper {
   138d6:	55                   	push   %rbp
   138d7:	48 89 e5             	mov    %rsp,%rbp
   138da:	48 83 ec 10          	sub    $0x10,%rsp
   138de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138e6:	48 89 c7             	mov    %rax,%rdi
   138e9:	e8 78 ff ff ff       	call   13866 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   138ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138f2:	48 83 c0 18          	add    $0x18,%rax
   138f6:	48 89 c7             	mov    %rax,%rdi
   138f9:	e8 68 ff ff ff       	call   13866 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   138fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13902:	48 83 c0 30          	add    $0x30,%rax
   13906:	48 89 c7             	mov    %rax,%rdi
   13909:	e8 ac ff ff ff       	call   138ba <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
   1390e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13912:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   13919:	00 
   1391a:	90                   	nop
   1391b:	c9                   	leave
   1391c:	c3                   	ret
   1391d:	90                   	nop

000000000001391e <_ZN9VulkanApp11SyncWrapperD1Ev>:
   1391e:	55                   	push   %rbp
   1391f:	48 89 e5             	mov    %rsp,%rbp
   13922:	48 83 ec 10          	sub    $0x10,%rsp
   13926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1392a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1392e:	48 83 c0 30          	add    $0x30,%rax
   13932:	48 89 c7             	mov    %rax,%rdi
   13935:	e8 ee 18 00 00       	call   15228 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
   1393a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1393e:	48 83 c0 18          	add    $0x18,%rax
   13942:	48 89 c7             	mov    %rax,%rdi
   13945:	e8 86 14 00 00       	call   14dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   1394a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1394e:	48 89 c7             	mov    %rax,%rdi
   13951:	e8 7a 14 00 00       	call   14dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   13956:	90                   	nop
   13957:	c9                   	leave
   13958:	c3                   	ret
   13959:	90                   	nop

000000000001395a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   1395a:	55                   	push   %rbp
   1395b:	48 89 e5             	mov    %rsp,%rbp
   1395e:	53                   	push   %rbx
   1395f:	48 83 ec 38          	sub    $0x38,%rsp
   13963:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13967:	48 89 f0             	mov    %rsi,%rax
   1396a:	48 89 d6             	mov    %rdx,%rsi
   1396d:	48 89 f2             	mov    %rsi,%rdx
   13970:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13974:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13978:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1397c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13980:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13984:	48 89 d6             	mov    %rdx,%rsi
   13987:	48 89 c7             	mov    %rax,%rdi
   1398a:	e8 f1 19 00 00       	call   15380 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   1398f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13993:	48 89 c7             	mov    %rax,%rdi
   13996:	e8 1d 1a 00 00       	call   153b8 <_ZNKSt16initializer_listIPKcE3endEv>
   1399b:	48 89 c3             	mov    %rax,%rbx
   1399e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   139a2:	48 89 c7             	mov    %rax,%rdi
   139a5:	e8 fc 19 00 00       	call   153a6 <_ZNKSt16initializer_listIPKcE5beginEv>
   139aa:	48 89 c1             	mov    %rax,%rcx
   139ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   139b1:	48 89 da             	mov    %rbx,%rdx
   139b4:	48 89 ce             	mov    %rcx,%rsi
   139b7:	48 89 c7             	mov    %rax,%rdi
   139ba:	e8 5f 1a 00 00       	call   1541e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   139bf:	eb 1a                	jmp    139db <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   139c1:	48 89 c3             	mov    %rax,%rbx
   139c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   139c8:	48 89 c7             	mov    %rax,%rdi
   139cb:	e8 96 60 ff ff       	call   9a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   139d0:	48 89 d8             	mov    %rbx,%rax
   139d3:	48 89 c7             	mov    %rax,%rdi
   139d6:	e8 25 0f ff ff       	call   4900 <_Unwind_Resume@plt>
   139db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   139df:	c9                   	leave
   139e0:	c3                   	ret
   139e1:	90                   	nop

00000000000139e2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   139e2:	55                   	push   %rbp
   139e3:	48 89 e5             	mov    %rsp,%rbp
   139e6:	48 83 ec 10          	sub    $0x10,%rsp
   139ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   139ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139f2:	48 89 c7             	mov    %rax,%rdi
   139f5:	e8 24 6f ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   139fa:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   139fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a01:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a09:	48 8b 00             	mov    (%rax),%rax
   13a0c:	48 89 ce             	mov    %rcx,%rsi
   13a0f:	48 89 c7             	mov    %rax,%rdi
   13a12:	e8 b6 1a 00 00       	call   154cd <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   13a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a1b:	48 89 c7             	mov    %rax,%rdi
   13a1e:	e8 43 60 ff ff       	call   9a66 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   13a23:	90                   	nop
   13a24:	c9                   	leave
   13a25:	c3                   	ret

0000000000013a26 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13a26:	55                   	push   %rbp
   13a27:	48 89 e5             	mov    %rsp,%rbp
   13a2a:	48 83 ec 20          	sub    $0x20,%rsp
   13a2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13a32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a36:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a3a:	48 89 d6             	mov    %rdx,%rsi
   13a3d:	48 89 c7             	mov    %rax,%rdi
   13a40:	e8 b3 1a 00 00       	call   154f8 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a49:	c9                   	leave
   13a4a:	c3                   	ret
   13a4b:	90                   	nop

0000000000013a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13a4c:	55                   	push   %rbp
   13a4d:	48 89 e5             	mov    %rsp,%rbp
   13a50:	48 83 ec 20          	sub    $0x20,%rsp
   13a54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13a58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a5c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13a60:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a64:	48 89 d6             	mov    %rdx,%rsi
   13a67:	48 89 c7             	mov    %rax,%rdi
   13a6a:	e8 89 1a 00 00       	call   154f8 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a73:	c9                   	leave
   13a74:	c3                   	ret

0000000000013a75 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13a75:	55                   	push   %rbp
   13a76:	48 89 e5             	mov    %rsp,%rbp
   13a79:	53                   	push   %rbx
   13a7a:	48 83 ec 18          	sub    $0x18,%rsp
   13a7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13a82:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13a86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a8a:	48 89 c7             	mov    %rax,%rdi
   13a8d:	e8 84 1a 00 00       	call   15516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13a92:	48 8b 18             	mov    (%rax),%rbx
   13a95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13a99:	48 89 c7             	mov    %rax,%rdi
   13a9c:	e8 75 1a 00 00       	call   15516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13aa1:	48 8b 00             	mov    (%rax),%rax
   13aa4:	48 39 c3             	cmp    %rax,%rbx
   13aa7:	0f 95 c0             	setne  %al
   13aaa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13aae:	c9                   	leave
   13aaf:	c3                   	ret

0000000000013ab0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13ab0:	55                   	push   %rbp
   13ab1:	48 89 e5             	mov    %rsp,%rbp
   13ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13abc:	48 8b 00             	mov    (%rax),%rax
   13abf:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ac7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13aca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13ace:	5d                   	pop    %rbp
   13acf:	c3                   	ret

0000000000013ad0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13ad0:	55                   	push   %rbp
   13ad1:	48 89 e5             	mov    %rsp,%rbp
   13ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13adc:	48 8b 00             	mov    (%rax),%rax
   13adf:	5d                   	pop    %rbp
   13ae0:	c3                   	ret
   13ae1:	90                   	nop

0000000000013ae2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   13ae2:	55                   	push   %rbp
   13ae3:	48 89 e5             	mov    %rsp,%rbp
   13ae6:	53                   	push   %rbx
   13ae7:	48 83 ec 18          	sub    $0x18,%rsp
   13aeb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13aef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   13af3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13af7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13afb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13aff:	48 8b 40 10          	mov    0x10(%rax),%rax
   13b03:	48 39 c2             	cmp    %rax,%rdx
   13b06:	74 3c                	je     13b44 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   13b08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b0c:	48 89 c7             	mov    %rax,%rdi
   13b0f:	e8 10 1a 00 00       	call   15524 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   13b14:	48 89 c2             	mov    %rax,%rdx
   13b17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b1b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13b1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b23:	48 89 ce             	mov    %rcx,%rsi
   13b26:	48 89 c7             	mov    %rax,%rdi
   13b29:	e8 04 1a 00 00       	call   15532 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   13b2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b32:	48 8b 40 08          	mov    0x8(%rax),%rax
   13b36:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13b3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b3e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13b42:	eb 30                	jmp    13b74 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   13b44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b48:	48 89 c7             	mov    %rax,%rdi
   13b4b:	e8 d4 19 00 00       	call   15524 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   13b50:	48 89 c3             	mov    %rax,%rbx
   13b53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b57:	48 89 c7             	mov    %rax,%rdi
   13b5a:	e8 ed fe ff ff       	call   13a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   13b5f:	48 89 c1             	mov    %rax,%rcx
   13b62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b66:	48 89 da             	mov    %rbx,%rdx
   13b69:	48 89 ce             	mov    %rcx,%rsi
   13b6c:	48 89 c7             	mov    %rax,%rdi
   13b6f:	e8 f8 19 00 00       	call   1556c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   13b74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b78:	48 89 c7             	mov    %rax,%rdi
   13b7b:	e8 7e 1b 00 00       	call   156fe <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   13b80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13b84:	c9                   	leave
   13b85:	c3                   	ret

0000000000013b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13b86:	55                   	push   %rbp
   13b87:	48 89 e5             	mov    %rsp,%rbp
   13b8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b92:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b9a:	48 8b 00             	mov    (%rax),%rax
   13b9d:	48 29 c2             	sub    %rax,%rdx
   13ba0:	48 89 d0             	mov    %rdx,%rax
   13ba3:	48 c1 f8 03          	sar    $0x3,%rax
   13ba7:	5d                   	pop    %rbp
   13ba8:	c3                   	ret
   13ba9:	90                   	nop

0000000000013baa <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   13baa:	55                   	push   %rbp
   13bab:	48 89 e5             	mov    %rsp,%rbp
   13bae:	48 83 ec 10          	sub    $0x10,%rsp
   13bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13bb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bba:	48 8b 10             	mov    (%rax),%rdx
   13bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bc1:	48 89 d6             	mov    %rdx,%rsi
   13bc4:	48 89 c7             	mov    %rax,%rdi
   13bc7:	e8 72 1b 00 00       	call   1573e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   13bcc:	c9                   	leave
   13bcd:	c3                   	ret

0000000000013bce <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   13bce:	55                   	push   %rbp
   13bcf:	48 89 e5             	mov    %rsp,%rbp
   13bd2:	48 83 ec 10          	sub    $0x10,%rsp
   13bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bde:	48 8b 10             	mov    (%rax),%rdx
   13be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13be5:	48 89 d6             	mov    %rdx,%rsi
   13be8:	48 89 c7             	mov    %rax,%rdi
   13beb:	e8 4e 1b 00 00       	call   1573e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   13bf0:	c9                   	leave
   13bf1:	c3                   	ret

0000000000013bf2 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13bf2:	55                   	push   %rbp
   13bf3:	48 89 e5             	mov    %rsp,%rbp
   13bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bfe:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c06:	48 8b 00             	mov    (%rax),%rax
   13c09:	48 29 c2             	sub    %rax,%rdx
   13c0c:	48 c1 fa 02          	sar    $0x2,%rdx
   13c10:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   13c17:	db b6 6d 
   13c1a:	48 0f af c2          	imul   %rdx,%rax
   13c1e:	5d                   	pop    %rbp
   13c1f:	c3                   	ret

0000000000013c20 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   13c20:	55                   	push   %rbp
   13c21:	48 89 e5             	mov    %rsp,%rbp
   13c24:	48 83 ec 10          	sub    $0x10,%rsp
   13c28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   13c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c30:	48 89 c7             	mov    %rax,%rdi
   13c33:	e8 42 72 ff ff       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   13c38:	c9                   	leave
   13c39:	c3                   	ret

0000000000013c3a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   13c3a:	55                   	push   %rbp
   13c3b:	48 89 e5             	mov    %rsp,%rbp
   13c3e:	48 83 ec 10          	sub    $0x10,%rsp
   13c42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   13c46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c4a:	48 89 c7             	mov    %rax,%rdi
   13c4d:	e8 28 72 ff ff       	call   ae7a <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   13c52:	84 c0                	test   %al,%al
   13c54:	74 0e                	je     13c64 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   13c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c5a:	48 89 c7             	mov    %rax,%rdi
   13c5d:	e8 2a 72 ff ff       	call   ae8c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   13c62:	eb 05                	jmp    13c69 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   13c64:	e8 1c f8 ff ff       	call   13485 <_ZSt27__throw_bad_optional_accessv>
      }
   13c69:	c9                   	leave
   13c6a:	c3                   	ret
   13c6b:	90                   	nop

0000000000013c6c <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   13c6c:	55                   	push   %rbp
   13c6d:	48 89 e5             	mov    %rsp,%rbp
   13c70:	48 83 ec 20          	sub    $0x20,%rsp
   13c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13c7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   13c80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c84:	48 89 c7             	mov    %rax,%rdi
   13c87:	e8 c4 1a 00 00       	call   15750 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   13c8c:	8b 10                	mov    (%rax),%edx
   13c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c92:	89 10                	mov    %edx,(%rax)
   13c94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c98:	48 89 c7             	mov    %rax,%rdi
   13c9b:	e8 be 1a 00 00       	call   1575e <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   13ca0:	48 89 c1             	mov    %rax,%rcx
   13ca3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   13ca7:	48 8b 01             	mov    (%rcx),%rax
   13caa:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13cae:	48 89 46 04          	mov    %rax,0x4(%rsi)
   13cb2:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   13cb6:	48 8b 41 10          	mov    0x10(%rcx),%rax
   13cba:	48 89 46 14          	mov    %rax,0x14(%rsi)
   13cbe:	90                   	nop
   13cbf:	c9                   	leave
   13cc0:	c3                   	ret
   13cc1:	90                   	nop

0000000000013cc2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   13cc2:	55                   	push   %rbp
   13cc3:	48 89 e5             	mov    %rsp,%rbp
   13cc6:	53                   	push   %rbx
   13cc7:	48 83 ec 18          	sub    $0x18,%rsp
   13ccb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ccf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   13cd3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13cd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13cdb:	48 89 c7             	mov    %rax,%rdi
   13cde:	e8 89 1a 00 00       	call   1576c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13ce3:	48 89 c6             	mov    %rax,%rsi
   13ce6:	48 89 df             	mov    %rbx,%rdi
   13ce9:	e8 b2 1a 00 00       	call   157a0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   13cee:	90                   	nop
   13cef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13cf3:	c9                   	leave
   13cf4:	c3                   	ret
   13cf5:	90                   	nop

0000000000013cf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13cf6:	55                   	push   %rbp
   13cf7:	48 89 e5             	mov    %rsp,%rbp
   13cfa:	48 83 ec 20          	sub    $0x20,%rsp
   13cfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13d02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13d06:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13d0a:	48 89 d6             	mov    %rdx,%rsi
   13d0d:	48 89 c7             	mov    %rax,%rdi
   13d10:	e8 bf 1a 00 00       	call   157d4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d19:	c9                   	leave
   13d1a:	c3                   	ret
   13d1b:	90                   	nop

0000000000013d1c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13d1c:	55                   	push   %rbp
   13d1d:	48 89 e5             	mov    %rsp,%rbp
   13d20:	48 83 ec 20          	sub    $0x20,%rsp
   13d24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d2c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13d30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13d34:	48 89 d6             	mov    %rdx,%rsi
   13d37:	48 89 c7             	mov    %rax,%rdi
   13d3a:	e8 95 1a 00 00       	call   157d4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d43:	c9                   	leave
   13d44:	c3                   	ret

0000000000013d45 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13d45:	55                   	push   %rbp
   13d46:	48 89 e5             	mov    %rsp,%rbp
   13d49:	53                   	push   %rbx
   13d4a:	48 83 ec 18          	sub    $0x18,%rsp
   13d4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d52:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13d56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d5a:	48 89 c7             	mov    %rax,%rdi
   13d5d:	e8 90 1a 00 00       	call   157f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13d62:	48 8b 18             	mov    (%rax),%rbx
   13d65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13d69:	48 89 c7             	mov    %rax,%rdi
   13d6c:	e8 81 1a 00 00       	call   157f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13d71:	48 8b 00             	mov    (%rax),%rax
   13d74:	48 39 c3             	cmp    %rax,%rbx
   13d77:	0f 95 c0             	setne  %al
   13d7a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d7e:	c9                   	leave
   13d7f:	c3                   	ret

0000000000013d80 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13d80:	55                   	push   %rbp
   13d81:	48 89 e5             	mov    %rsp,%rbp
   13d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d8c:	48 8b 00             	mov    (%rax),%rax
   13d8f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d97:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13d9e:	5d                   	pop    %rbp
   13d9f:	c3                   	ret

0000000000013da0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13da0:	55                   	push   %rbp
   13da1:	48 89 e5             	mov    %rsp,%rbp
   13da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dac:	48 8b 00             	mov    (%rax),%rax
   13daf:	5d                   	pop    %rbp
   13db0:	c3                   	ret
   13db1:	90                   	nop

0000000000013db2 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   13db2:	55                   	push   %rbp
   13db3:	48 89 e5             	mov    %rsp,%rbp
   13db6:	48 83 ec 10          	sub    $0x10,%rsp
   13dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   13dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dc2:	48 89 c7             	mov    %rax,%rdi
   13dc5:	e8 68 f8 ff ff       	call   13632 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   13dca:	c9                   	leave
   13dcb:	c3                   	ret

0000000000013dcc <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   13dcc:	55                   	push   %rbp
   13dcd:	48 89 e5             	mov    %rsp,%rbp
   13dd0:	48 83 ec 10          	sub    $0x10,%rsp
   13dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13dd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   13ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13de0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13de4:	48 89 d6             	mov    %rdx,%rsi
   13de7:	48 89 c7             	mov    %rax,%rdi
   13dea:	e8 11 1a 00 00       	call   15800 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   13def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13df3:	c9                   	leave
   13df4:	c3                   	ret
   13df5:	90                   	nop

0000000000013df6 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   13df6:	55                   	push   %rbp
   13df7:	48 89 e5             	mov    %rsp,%rbp
   13dfa:	48 83 ec 10          	sub    $0x10,%rsp
   13dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   13e02:	e8 06 11 ff ff       	call   4f0d <_ZSt23__is_constant_evaluatedv>
   13e07:	84 c0                	test   %al,%al
   13e09:	74 1a                	je     13e25 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   13e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e0f:	48 89 c7             	mov    %rax,%rdi
   13e12:	e8 1b f8 ff ff       	call   13632 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   13e17:	83 f0 01             	xor    $0x1,%eax
   13e1a:	84 c0                	test   %al,%al
   13e1c:	74 07                	je     13e25 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   13e1e:	b8 01 00 00 00       	mov    $0x1,%eax
   13e23:	eb 05                	jmp    13e2a <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   13e25:	b8 00 00 00 00       	mov    $0x0,%eax
   13e2a:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   13e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e30:	48 89 c7             	mov    %rax,%rdi
   13e33:	e8 5a 1a 00 00       	call   15892 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   13e38:	c9                   	leave
   13e39:	c3                   	ret

0000000000013e3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   13e3a:	55                   	push   %rbp
   13e3b:	48 89 e5             	mov    %rsp,%rbp
   13e3e:	48 83 ec 10          	sub    $0x10,%rsp
   13e42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   13e46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e4a:	48 89 c7             	mov    %rax,%rdi
   13e4d:	e8 4e 1a 00 00       	call   158a0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   13e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e56:	48 89 c7             	mov    %rax,%rdi
   13e59:	e8 5e 1a 00 00       	call   158bc <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   13e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e62:	48 83 c0 08          	add    $0x8,%rax
   13e66:	48 89 c7             	mov    %rax,%rdi
   13e69:	e8 58 f6 ff ff       	call   134c6 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   13e6e:	90                   	nop
   13e6f:	c9                   	leave
   13e70:	c3                   	ret
   13e71:	90                   	nop

0000000000013e72 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13e72:	55                   	push   %rbp
   13e73:	48 89 e5             	mov    %rsp,%rbp
   13e76:	48 83 ec 10          	sub    $0x10,%rsp
   13e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e82:	48 89 c7             	mov    %rax,%rdi
   13e85:	e8 3e 1a 00 00       	call   158c8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   13e8a:	90                   	nop
   13e8b:	c9                   	leave
   13e8c:	c3                   	ret
   13e8d:	90                   	nop

0000000000013e8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   13e8e:	55                   	push   %rbp
   13e8f:	48 89 e5             	mov    %rsp,%rbp
   13e92:	48 83 ec 10          	sub    $0x10,%rsp
   13e96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   13e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e9e:	48 89 c7             	mov    %rax,%rdi
   13ea1:	e8 94 1a 00 00       	call   1593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   13ea6:	48 89 c2             	mov    %rax,%rdx
   13ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ead:	48 89 d6             	mov    %rdx,%rsi
   13eb0:	48 89 c7             	mov    %rax,%rdi
   13eb3:	e8 1c 1a 00 00       	call   158d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   13eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ebc:	48 89 c7             	mov    %rax,%rdi
   13ebf:	e8 80 f7 ff ff       	call   13644 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   13ec4:	90                   	nop
   13ec5:	c9                   	leave
   13ec6:	c3                   	ret
   13ec7:	90                   	nop

0000000000013ec8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13ec8:	55                   	push   %rbp
   13ec9:	48 89 e5             	mov    %rsp,%rbp
   13ecc:	48 83 ec 20          	sub    $0x20,%rsp
   13ed0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13ed4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13ed8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13edc:	48 89 d6             	mov    %rdx,%rsi
   13edf:	48 89 c7             	mov    %rax,%rdi
   13ee2:	e8 6d 1a 00 00       	call   15954 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   13ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eeb:	c9                   	leave
   13eec:	c3                   	ret
   13eed:	90                   	nop

0000000000013eee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13eee:	55                   	push   %rbp
   13eef:	48 89 e5             	mov    %rsp,%rbp
   13ef2:	48 83 ec 20          	sub    $0x20,%rsp
   13ef6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13efa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13efe:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13f02:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13f06:	48 89 d6             	mov    %rdx,%rsi
   13f09:	48 89 c7             	mov    %rax,%rdi
   13f0c:	e8 43 1a 00 00       	call   15954 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   13f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f15:	c9                   	leave
   13f16:	c3                   	ret

0000000000013f17 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13f17:	55                   	push   %rbp
   13f18:	48 89 e5             	mov    %rsp,%rbp
   13f1b:	53                   	push   %rbx
   13f1c:	48 83 ec 18          	sub    $0x18,%rsp
   13f20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13f24:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13f28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f2c:	48 89 c7             	mov    %rax,%rdi
   13f2f:	e8 3e 1a 00 00       	call   15972 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   13f34:	48 8b 18             	mov    (%rax),%rbx
   13f37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13f3b:	48 89 c7             	mov    %rax,%rdi
   13f3e:	e8 2f 1a 00 00       	call   15972 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   13f43:	48 8b 00             	mov    (%rax),%rax
   13f46:	48 39 c3             	cmp    %rax,%rbx
   13f49:	0f 95 c0             	setne  %al
   13f4c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13f50:	c9                   	leave
   13f51:	c3                   	ret

0000000000013f52 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13f52:	55                   	push   %rbp
   13f53:	48 89 e5             	mov    %rsp,%rbp
   13f56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13f5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f5e:	48 8b 00             	mov    (%rax),%rax
   13f61:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   13f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f6c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13f6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13f73:	5d                   	pop    %rbp
   13f74:	c3                   	ret
   13f75:	90                   	nop

0000000000013f76 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13f76:	55                   	push   %rbp
   13f77:	48 89 e5             	mov    %rsp,%rbp
   13f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f82:	48 8b 00             	mov    (%rax),%rax
   13f85:	5d                   	pop    %rbp
   13f86:	c3                   	ret
   13f87:	90                   	nop

0000000000013f88 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   13f88:	55                   	push   %rbp
   13f89:	48 89 e5             	mov    %rsp,%rbp
   13f8c:	53                   	push   %rbx
   13f8d:	48 83 ec 48          	sub    $0x48,%rsp
   13f91:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   13f95:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   13f99:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   13f9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13fa1:	48 89 d6             	mov    %rdx,%rsi
   13fa4:	48 89 c7             	mov    %rax,%rdi
   13fa7:	e8 d4 19 00 00       	call   15980 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   13fac:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   13fb0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13fb4:	48 89 c7             	mov    %rax,%rdi
   13fb7:	e8 ea 19 00 00       	call   159a6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   13fbc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13fc0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13fc4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   13fc8:	48 89 d6             	mov    %rdx,%rsi
   13fcb:	48 89 c7             	mov    %rax,%rdi
   13fce:	e8 ed 19 00 00       	call   159c0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   13fd3:	84 c0                	test   %al,%al
   13fd5:	75 32                	jne    14009 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   13fd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13fdb:	48 89 c7             	mov    %rax,%rdi
   13fde:	e8 ff 19 00 00       	call   159e2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   13fe3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   13fe7:	48 89 c7             	mov    %rax,%rdi
   13fea:	e8 0f 1a 00 00       	call   159fe <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   13fef:	48 89 c2             	mov    %rax,%rdx
   13ff2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   13ff6:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   13ffa:	48 89 ce             	mov    %rcx,%rsi
   13ffd:	48 89 c7             	mov    %rax,%rdi
   14000:	e8 17 1a 00 00       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14005:	84 c0                	test   %al,%al
   14007:	74 07                	je     14010 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   14009:	b8 01 00 00 00       	mov    $0x1,%eax
   1400e:	eb 05                	jmp    14015 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   14010:	b8 00 00 00 00       	mov    $0x0,%eax
   14015:	84 c0                	test   %al,%al
   14017:	74 5d                	je     14076 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   14019:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   1401d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14021:	48 89 c7             	mov    %rax,%rdi
   14024:	e8 48 13 00 00       	call   15371 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   14029:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1402c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14030:	48 89 d6             	mov    %rdx,%rsi
   14033:	48 89 c7             	mov    %rax,%rdi
   14036:	e8 0a 1a 00 00       	call   15a45 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   1403b:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   1403f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   14043:	48 89 d6             	mov    %rdx,%rsi
   14046:	48 89 c7             	mov    %rax,%rdi
   14049:	e8 2c 1a 00 00       	call   15a7a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   1404e:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   14052:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   14056:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1405a:	49 89 c8             	mov    %rcx,%r8
   1405d:	48 89 d1             	mov    %rdx,%rcx
   14060:	48 8d 15 71 c0 00 00 	lea    0xc071(%rip),%rdx        # 200d8 <_ZSt19piecewise_construct>
   14067:	48 89 c6             	mov    %rax,%rsi
   1406a:	48 89 df             	mov    %rbx,%rdi
   1406d:	e8 26 1a 00 00       	call   15a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   14072:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   14076:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1407a:	48 89 c7             	mov    %rax,%rdi
   1407d:	e8 7c 19 00 00       	call   159fe <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   14082:	48 83 c0 20          	add    $0x20,%rax
      }
   14086:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1408a:	c9                   	leave
   1408b:	c3                   	ret

000000000001408c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   1408c:	55                   	push   %rbp
   1408d:	48 89 e5             	mov    %rsp,%rbp
   14090:	48 83 ec 20          	sub    $0x20,%rsp
   14094:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   14098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1409c:	48 89 c7             	mov    %rax,%rdi
   1409f:	e8 16 1b 00 00       	call   15bba <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   140a4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   140a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140ac:	48 89 c7             	mov    %rax,%rdi
   140af:	e8 e0 1a 00 00       	call   15b94 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   140b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   140b8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   140bc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   140c0:	48 89 d6             	mov    %rdx,%rsi
   140c3:	48 89 c7             	mov    %rax,%rdi
   140c6:	e8 18 1b 00 00       	call   15be3 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   140cb:	c9                   	leave
   140cc:	c3                   	ret
   140cd:	90                   	nop

00000000000140ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   140ce:	55                   	push   %rbp
   140cf:	48 89 e5             	mov    %rsp,%rbp
   140d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   140da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140de:	48 8b 00             	mov    (%rax),%rax
   140e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   140e5:	48 c1 e2 03          	shl    $0x3,%rdx
   140e9:	48 01 d0             	add    %rdx,%rax
      }
   140ec:	5d                   	pop    %rbp
   140ed:	c3                   	ret

00000000000140ee <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   140ee:	55                   	push   %rbp
   140ef:	48 89 e5             	mov    %rsp,%rbp
   140f2:	48 83 ec 20          	sub    $0x20,%rsp
   140f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   140fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   140fe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14102:	48 89 d6             	mov    %rdx,%rsi
   14105:	48 89 c7             	mov    %rax,%rdi
   14108:	e8 11 1b 00 00       	call   15c1e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1410d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14111:	c9                   	leave
   14112:	c3                   	ret
   14113:	90                   	nop

0000000000014114 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14114:	55                   	push   %rbp
   14115:	48 89 e5             	mov    %rsp,%rbp
   14118:	48 83 ec 20          	sub    $0x20,%rsp
   1411c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   14120:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14124:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14128:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1412c:	48 89 d6             	mov    %rdx,%rsi
   1412f:	48 89 c7             	mov    %rax,%rdi
   14132:	e8 e7 1a 00 00       	call   15c1e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   14137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1413b:	c9                   	leave
   1413c:	c3                   	ret

000000000001413d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1413d:	55                   	push   %rbp
   1413e:	48 89 e5             	mov    %rsp,%rbp
   14141:	53                   	push   %rbx
   14142:	48 83 ec 18          	sub    $0x18,%rsp
   14146:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1414a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1414e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14152:	48 89 c7             	mov    %rax,%rdi
   14155:	e8 e2 1a 00 00       	call   15c3c <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1415a:	48 8b 18             	mov    (%rax),%rbx
   1415d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14161:	48 89 c7             	mov    %rax,%rdi
   14164:	e8 d3 1a 00 00       	call   15c3c <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   14169:	48 8b 00             	mov    (%rax),%rax
   1416c:	48 39 c3             	cmp    %rax,%rbx
   1416f:	0f 95 c0             	setne  %al
   14172:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14176:	c9                   	leave
   14177:	c3                   	ret

0000000000014178 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14178:	55                   	push   %rbp
   14179:	48 89 e5             	mov    %rsp,%rbp
   1417c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   14180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14184:	48 8b 00             	mov    (%rax),%rax
   14187:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1418b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1418f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   14192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14196:	5d                   	pop    %rbp
   14197:	c3                   	ret

0000000000014198 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   14198:	55                   	push   %rbp
   14199:	48 89 e5             	mov    %rsp,%rbp
   1419c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   141a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141a4:	48 8b 00             	mov    (%rax),%rax
   141a7:	5d                   	pop    %rbp
   141a8:	c3                   	ret
   141a9:	90                   	nop

00000000000141aa <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   141aa:	55                   	push   %rbp
   141ab:	48 89 e5             	mov    %rsp,%rbp
   141ae:	48 83 ec 20          	sub    $0x20,%rsp
   141b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   141b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   141ba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   141be:	48 89 d6             	mov    %rdx,%rsi
   141c1:	48 89 c7             	mov    %rax,%rdi
   141c4:	e8 81 1a 00 00       	call   15c4a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   141c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141cd:	c9                   	leave
   141ce:	c3                   	ret
   141cf:	90                   	nop

00000000000141d0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   141d0:	55                   	push   %rbp
   141d1:	48 89 e5             	mov    %rsp,%rbp
   141d4:	48 83 ec 20          	sub    $0x20,%rsp
   141d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   141dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141e0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   141e4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   141e8:	48 89 d6             	mov    %rdx,%rsi
   141eb:	48 89 c7             	mov    %rax,%rdi
   141ee:	e8 57 1a 00 00       	call   15c4a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   141f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f7:	c9                   	leave
   141f8:	c3                   	ret

00000000000141f9 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   141f9:	55                   	push   %rbp
   141fa:	48 89 e5             	mov    %rsp,%rbp
   141fd:	53                   	push   %rbx
   141fe:	48 83 ec 18          	sub    $0x18,%rsp
   14202:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14206:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1420a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1420e:	48 89 c7             	mov    %rax,%rdi
   14211:	e8 52 1a 00 00       	call   15c68 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   14216:	48 8b 18             	mov    (%rax),%rbx
   14219:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1421d:	48 89 c7             	mov    %rax,%rdi
   14220:	e8 43 1a 00 00       	call   15c68 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   14225:	48 8b 00             	mov    (%rax),%rax
   14228:	48 39 c3             	cmp    %rax,%rbx
   1422b:	0f 95 c0             	setne  %al
   1422e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14232:	c9                   	leave
   14233:	c3                   	ret

0000000000014234 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14234:	55                   	push   %rbp
   14235:	48 89 e5             	mov    %rsp,%rbp
   14238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1423c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14240:	48 8b 00             	mov    (%rax),%rax
   14243:	48 8d 50 04          	lea    0x4(%rax),%rdx
   14247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1424b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1424e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14252:	5d                   	pop    %rbp
   14253:	c3                   	ret

0000000000014254 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   14254:	55                   	push   %rbp
   14255:	48 89 e5             	mov    %rsp,%rbp
   14258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1425c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14260:	48 8b 00             	mov    (%rax),%rax
   14263:	5d                   	pop    %rbp
   14264:	c3                   	ret
   14265:	90                   	nop

0000000000014266 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   14266:	55                   	push   %rbp
   14267:	48 89 e5             	mov    %rsp,%rbp
   1426a:	48 83 ec 20          	sub    $0x20,%rsp
   1426e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14272:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   14276:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   1427a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1427e:	48 89 c7             	mov    %rax,%rdi
   14281:	e8 f0 19 00 00       	call   15c76 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   14286:	48 89 c2             	mov    %rax,%rdx
   14289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1428d:	48 89 d6             	mov    %rdx,%rsi
   14290:	48 89 c7             	mov    %rax,%rdi
   14293:	e8 ec 19 00 00       	call   15c84 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   14298:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1429c:	c9                   	leave
   1429d:	c3                   	ret

000000000001429e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1429e:	55                   	push   %rbp
   1429f:	48 89 e5             	mov    %rsp,%rbp
   142a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   142a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142aa:	48 8b 50 08          	mov    0x8(%rax),%rdx
   142ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142b2:	48 8b 00             	mov    (%rax),%rax
   142b5:	48 29 c2             	sub    %rax,%rdx
   142b8:	48 89 d0             	mov    %rdx,%rax
   142bb:	48 c1 f8 03          	sar    $0x3,%rax
   142bf:	5d                   	pop    %rbp
   142c0:	c3                   	ret
   142c1:	90                   	nop

00000000000142c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   142c2:	55                   	push   %rbp
   142c3:	48 89 e5             	mov    %rsp,%rbp
   142c6:	48 83 ec 10          	sub    $0x10,%rsp
   142ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   142d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142d6:	48 89 c7             	mov    %rax,%rdi
   142d9:	e8 8c 04 00 00       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   142de:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   142e2:	0f 92 c0             	setb   %al
   142e5:	84 c0                	test   %al,%al
   142e7:	74 24                	je     1430d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   142e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142ed:	48 89 c7             	mov    %rax,%rdi
   142f0:	e8 75 04 00 00       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   142f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142f9:	48 29 c2             	sub    %rax,%rdx
   142fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14300:	48 89 d6             	mov    %rdx,%rsi
   14303:	48 89 c7             	mov    %rax,%rdi
   14306:	e8 1b 1a 00 00       	call   15d26 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   1430b:	eb 38                	jmp    14345 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1430d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14311:	48 89 c7             	mov    %rax,%rdi
   14314:	e8 51 04 00 00       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14319:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1431d:	0f 92 c0             	setb   %al
   14320:	84 c0                	test   %al,%al
   14322:	74 21                	je     14345 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   14324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14328:	48 8b 00             	mov    (%rax),%rax
   1432b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1432f:	48 c1 e2 03          	shl    $0x3,%rdx
   14333:	48 01 c2             	add    %rax,%rdx
   14336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1433a:	48 89 d6             	mov    %rdx,%rsi
   1433d:	48 89 c7             	mov    %rax,%rdi
   14340:	e8 eb 1b 00 00       	call   15f30 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14345:	90                   	nop
   14346:	c9                   	leave
   14347:	c3                   	ret

0000000000014348 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14348:	55                   	push   %rbp
   14349:	48 89 e5             	mov    %rsp,%rbp
   1434c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14350:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14358:	48 8b 00             	mov    (%rax),%rax
   1435b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1435f:	48 c1 e2 03          	shl    $0x3,%rdx
   14363:	48 01 d0             	add    %rdx,%rax
      }
   14366:	5d                   	pop    %rbp
   14367:	c3                   	ret

0000000000014368 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14368:	55                   	push   %rbp
   14369:	48 89 e5             	mov    %rsp,%rbp
   1436c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14370:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14378:	48 8b 00             	mov    (%rax),%rax
   1437b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1437f:	48 c1 e2 03          	shl    $0x3,%rdx
   14383:	48 01 d0             	add    %rdx,%rax
      }
   14386:	5d                   	pop    %rbp
   14387:	c3                   	ret

0000000000014388 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>:
  PosVecType position;
  ColorVecType color;

  static constexpr size_t attributeCount = 2;

  static VkVertexInputBindingDescription getBindingDescription() {
   14388:	55                   	push   %rbp
   14389:	48 89 e5             	mov    %rsp,%rbp
    VkVertexInputBindingDescription bindingDescription{};
   1438c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   14393:	00 
   14394:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bindingDescription.binding = 0;
   1439b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    bindingDescription.stride = sizeof(Vertex);
   143a2:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
    bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   143a9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    return bindingDescription;
   143b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143b4:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   143b8:	8b 45 f0             	mov    -0x10(%rbp),%eax
   143bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
   143be:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   143c2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   143c5:	48 89 ca             	mov    %rcx,%rdx
  }
   143c8:	5d                   	pop    %rbp
   143c9:	c3                   	ret

00000000000143ca <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>:

  static std::array<VkVertexInputAttributeDescription, attributeCount>
  getAttributeDescriptions() {
   143ca:	55                   	push   %rbp
   143cb:	48 89 e5             	mov    %rsp,%rbp
   143ce:	48 83 ec 10          	sub    $0x10,%rsp
   143d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    std::array<VkVertexInputAttributeDescription, attributeCount>
        attributeDescriptions{};
   143d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143da:	66 0f ef c0          	pxor   %xmm0,%xmm0
   143de:	0f 11 00             	movups %xmm0,(%rax)
   143e1:	0f 11 40 10          	movups %xmm0,0x10(%rax)

    attributeDescriptions[0].binding = 0;
   143e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143e9:	be 00 00 00 00       	mov    $0x0,%esi
   143ee:	48 89 c7             	mov    %rax,%rdi
   143f1:	e8 9a 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   143f6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[0].location = 0;
   143fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14401:	be 00 00 00 00       	mov    $0x0,%esi
   14406:	48 89 c7             	mov    %rax,%rdi
   14409:	e8 82 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1440e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   14414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14418:	be 00 00 00 00       	mov    $0x0,%esi
   1441d:	48 89 c7             	mov    %rax,%rdi
   14420:	e8 6b 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   14425:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    attributeDescriptions[0].offset = offsetof(Vertex, position);
   1442c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14430:	be 00 00 00 00       	mov    $0x0,%esi
   14435:	48 89 c7             	mov    %rax,%rdi
   14438:	e8 53 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1443d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

    attributeDescriptions[1].binding = 0;
   14444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14448:	be 01 00 00 00       	mov    $0x1,%esi
   1444d:	48 89 c7             	mov    %rax,%rdi
   14450:	e8 3b 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   14455:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[1].location = 1;
   1445c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14460:	be 01 00 00 00       	mov    $0x1,%esi
   14465:	48 89 c7             	mov    %rax,%rdi
   14468:	e8 23 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1446d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   14473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14477:	be 01 00 00 00       	mov    $0x1,%esi
   1447c:	48 89 c7             	mov    %rax,%rdi
   1447f:	e8 0c 1b 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   14484:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
    attributeDescriptions[1].offset = offsetof(Vertex, color);
   1448b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1448f:	be 01 00 00 00       	mov    $0x1,%esi
   14494:	48 89 c7             	mov    %rax,%rdi
   14497:	e8 f4 1a 00 00       	call   15f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1449c:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

    return attributeDescriptions;
   144a3:	90                   	nop
  }
   144a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144a8:	c9                   	leave
   144a9:	c3                   	ret

00000000000144aa <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
   144aa:	55                   	push   %rbp
   144ab:	48 89 e5             	mov    %rsp,%rbp
   144ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144b2:	b8 02 00 00 00       	mov    $0x2,%eax
   144b7:	5d                   	pop    %rbp
   144b8:	c3                   	ret
   144b9:	90                   	nop

00000000000144ba <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   144ba:	55                   	push   %rbp
   144bb:	48 89 e5             	mov    %rsp,%rbp
   144be:	48 83 ec 10          	sub    $0x10,%rsp
   144c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ca:	48 89 c7             	mov    %rax,%rdi
   144cd:	e8 e4 1a 00 00       	call   15fb6 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   144d2:	90                   	nop
   144d3:	c9                   	leave
   144d4:	c3                   	ret
   144d5:	90                   	nop

00000000000144d6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   144d6:	55                   	push   %rbp
   144d7:	48 89 e5             	mov    %rsp,%rbp
   144da:	48 83 ec 10          	sub    $0x10,%rsp
   144de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144e6:	48 89 c7             	mov    %rax,%rdi
   144e9:	e8 d4 1a 00 00       	call   15fc2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   144ee:	90                   	nop
   144ef:	c9                   	leave
   144f0:	c3                   	ret
   144f1:	90                   	nop

00000000000144f2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   144f2:	55                   	push   %rbp
   144f3:	48 89 e5             	mov    %rsp,%rbp
   144f6:	53                   	push   %rbx
   144f7:	48 83 ec 38          	sub    $0x38,%rsp
   144fb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   144ff:	48 89 f0             	mov    %rsi,%rax
   14502:	48 89 d6             	mov    %rdx,%rsi
   14505:	48 89 f2             	mov    %rsi,%rdx
   14508:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1450c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14510:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   14514:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14518:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1451c:	48 89 d6             	mov    %rdx,%rsi
   1451f:	48 89 c7             	mov    %rax,%rdi
   14522:	e8 c3 1a 00 00       	call   15fea <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   14527:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1452b:	48 89 c7             	mov    %rax,%rdi
   1452e:	e8 47 1b 00 00       	call   1607a <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   14533:	48 89 c3             	mov    %rax,%rbx
   14536:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1453a:	48 89 c7             	mov    %rax,%rdi
   1453d:	e8 26 1b 00 00       	call   16068 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   14542:	48 89 c1             	mov    %rax,%rcx
   14545:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14549:	48 89 da             	mov    %rbx,%rdx
   1454c:	48 89 ce             	mov    %rcx,%rsi
   1454f:	48 89 c7             	mov    %rax,%rdi
   14552:	e8 97 1b 00 00       	call   160ee <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   14557:	eb 1a                	jmp    14573 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   14559:	48 89 c3             	mov    %rax,%rbx
   1455c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14560:	48 89 c7             	mov    %rax,%rdi
   14563:	e8 a8 1a 00 00       	call   16010 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   14568:	48 89 d8             	mov    %rbx,%rax
   1456b:	48 89 c7             	mov    %rax,%rdi
   1456e:	e8 8d 03 ff ff       	call   4900 <_Unwind_Resume@plt>
   14573:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14577:	c9                   	leave
   14578:	c3                   	ret
   14579:	90                   	nop

000000000001457a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1457a:	55                   	push   %rbp
   1457b:	48 89 e5             	mov    %rsp,%rbp
   1457e:	48 83 ec 10          	sub    $0x10,%rsp
   14582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1458a:	48 89 c7             	mov    %rax,%rdi
   1458d:	e8 16 1c 00 00       	call   161a8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   14592:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14599:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1459d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145a1:	48 8b 00             	mov    (%rax),%rax
   145a4:	48 89 ce             	mov    %rcx,%rsi
   145a7:	48 89 c7             	mov    %rax,%rdi
   145aa:	e8 07 1c 00 00       	call   161b6 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   145af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b3:	48 89 c7             	mov    %rax,%rdi
   145b6:	e8 55 1a 00 00       	call   16010 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   145bb:	90                   	nop
   145bc:	c9                   	leave
   145bd:	c3                   	ret

00000000000145be <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   145be:	55                   	push   %rbp
   145bf:	48 89 e5             	mov    %rsp,%rbp
   145c2:	48 83 ec 10          	sub    $0x10,%rsp
   145c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145ce:	48 89 c7             	mov    %rax,%rdi
   145d1:	e8 54 1c 00 00       	call   1622a <_ZNSaIP12VkPipeline_TED1Ev>
   145d6:	90                   	nop
   145d7:	c9                   	leave
   145d8:	c3                   	ret

00000000000145d9 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   145d9:	55                   	push   %rbp
   145da:	48 89 e5             	mov    %rsp,%rbp
   145dd:	41 54                	push   %r12
   145df:	53                   	push   %rbx
   145e0:	48 83 ec 40          	sub    $0x40,%rsp
   145e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   145e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   145ec:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   145f0:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   145f4:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   145f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   145fc:	48 89 c7             	mov    %rax,%rdi
   145ff:	e8 dc 1b 00 00       	call   161e0 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   14604:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   14607:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   1460a:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   1460e:	48 89 c7             	mov    %rax,%rdi
   14611:	e8 f8 1b 00 00       	call   1620e <_ZNSaIP12VkPipeline_TEC1Ev>
   14616:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   1461a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1461e:	48 89 de             	mov    %rbx,%rsi
   14621:	48 89 c7             	mov    %rax,%rdi
   14624:	e8 1d 1c 00 00       	call   16246 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   14629:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   1462d:	48 89 c7             	mov    %rax,%rdi
   14630:	e8 f5 1b 00 00       	call   1622a <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   14635:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14639:	48 89 c7             	mov    %rax,%rdi
   1463c:	e8 9f 1c 00 00       	call   162e0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   14641:	48 89 c3             	mov    %rax,%rbx
   14644:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14648:	48 89 c7             	mov    %rax,%rdi
   1464b:	e8 6c 1c 00 00       	call   162bc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   14650:	48 89 c1             	mov    %rax,%rcx
   14653:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   14657:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1465a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1465e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14662:	49 89 d9             	mov    %rbx,%r9
   14665:	49 89 f8             	mov    %rdi,%r8
   14668:	48 89 c7             	mov    %rax,%rdi
   1466b:	e8 40 fb fe ff       	call   41b0 <vkCreateGraphicsPipelines@plt>
   14670:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   14673:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   14677:	74 7f                	je     146f8 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   14679:	bf 10 00 00 00       	mov    $0x10,%edi
   1467e:	e8 3d fb fe ff       	call   41c0 <__cxa_allocate_exception@plt>
   14683:	48 89 c3             	mov    %rax,%rbx
   14686:	48 8d 05 0d c5 00 00 	lea    0xc50d(%rip),%rax        # 20b9a <_ZZN9VulkanApp6renderEvE11submitCount+0x29e>
   1468d:	48 89 c6             	mov    %rax,%rsi
   14690:	48 89 df             	mov    %rbx,%rdi
   14693:	e8 98 fa fe ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   14698:	48 8b 05 09 c9 01 00 	mov    0x1c909(%rip),%rax        # 30fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1469f:	48 89 c2             	mov    %rax,%rdx
   146a2:	48 8d 05 97 c6 01 00 	lea    0x1c697(%rip),%rax        # 30d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   146a9:	48 89 c6             	mov    %rax,%rsi
   146ac:	48 89 df             	mov    %rbx,%rdi
   146af:	e8 dc 01 ff ff       	call   4890 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   146b4:	48 89 c3             	mov    %rax,%rbx
   146b7:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   146bb:	48 89 c7             	mov    %rax,%rdi
   146be:	e8 67 1b 00 00       	call   1622a <_ZNSaIP12VkPipeline_TED1Ev>
   146c3:	48 89 d8             	mov    %rbx,%rax
   146c6:	48 89 c7             	mov    %rax,%rdi
   146c9:	e8 32 02 ff ff       	call   4900 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   146ce:	49 89 c4             	mov    %rax,%r12
   146d1:	48 89 df             	mov    %rbx,%rdi
   146d4:	e8 f7 fb fe ff       	call   42d0 <__cxa_free_exception@plt>
   146d9:	4c 89 e3             	mov    %r12,%rbx
   146dc:	eb 03                	jmp    146e1 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   146de:	48 89 c3             	mov    %rax,%rbx
   146e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146e5:	48 89 c7             	mov    %rax,%rdi
   146e8:	e8 19 00 00 00       	call   14706 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   146ed:	48 89 d8             	mov    %rbx,%rax
   146f0:	48 89 c7             	mov    %rax,%rdi
   146f3:	e8 08 02 ff ff       	call   4900 <_Unwind_Resume@plt>
  return pipelines;
   146f8:	90                   	nop
}
   146f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146fd:	48 83 c4 40          	add    $0x40,%rsp
   14701:	5b                   	pop    %rbx
   14702:	41 5c                	pop    %r12
   14704:	5d                   	pop    %rbp
   14705:	c3                   	ret

0000000000014706 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   14706:	55                   	push   %rbp
   14707:	48 89 e5             	mov    %rsp,%rbp
   1470a:	48 83 ec 10          	sub    $0x10,%rsp
   1470e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14716:	48 89 c7             	mov    %rax,%rdi
   14719:	e8 34 1c 00 00       	call   16352 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1471e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14725:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1472d:	48 8b 00             	mov    (%rax),%rax
   14730:	48 89 ce             	mov    %rcx,%rsi
   14733:	48 89 c7             	mov    %rax,%rdi
   14736:	e8 25 1c 00 00       	call   16360 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   1473b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1473f:	48 89 c7             	mov    %rax,%rdi
   14742:	e8 bd 1b 00 00       	call   16304 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   14747:	90                   	nop
   14748:	c9                   	leave
   14749:	c3                   	ret

000000000001474a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1474a:	55                   	push   %rbp
   1474b:	48 89 e5             	mov    %rsp,%rbp
   1474e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14752:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1475a:	48 8b 00             	mov    (%rax),%rax
   1475d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14761:	48 c1 e2 03          	shl    $0x3,%rdx
   14765:	48 01 d0             	add    %rdx,%rax
      }
   14768:	5d                   	pop    %rbp
   14769:	c3                   	ret

000000000001476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1476a:	55                   	push   %rbp
   1476b:	48 89 e5             	mov    %rsp,%rbp
   1476e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14776:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1477a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1477e:	48 8b 00             	mov    (%rax),%rax
   14781:	48 29 c2             	sub    %rax,%rdx
   14784:	48 89 d0             	mov    %rdx,%rax
   14787:	48 c1 f8 03          	sar    $0x3,%rax
   1478b:	5d                   	pop    %rbp
   1478c:	c3                   	ret
   1478d:	90                   	nop

000000000001478e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   1478e:	55                   	push   %rbp
   1478f:	48 89 e5             	mov    %rsp,%rbp
   14792:	48 83 ec 10          	sub    $0x10,%rsp
   14796:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1479a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   1479e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147a2:	48 89 c7             	mov    %rax,%rdi
   147a5:	e8 e0 1b 00 00       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   147aa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   147ae:	0f 92 c0             	setb   %al
   147b1:	84 c0                	test   %al,%al
   147b3:	74 24                	je     147d9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   147b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147b9:	48 89 c7             	mov    %rax,%rdi
   147bc:	e8 c9 1b 00 00       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   147c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   147c5:	48 29 c2             	sub    %rax,%rdx
   147c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147cc:	48 89 d6             	mov    %rdx,%rsi
   147cf:	48 89 c7             	mov    %rax,%rdi
   147d2:	e8 d7 1b 00 00       	call   163ae <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   147d7:	eb 38                	jmp    14811 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   147d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147dd:	48 89 c7             	mov    %rax,%rdi
   147e0:	e8 a5 1b 00 00       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   147e5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   147e9:	0f 92 c0             	setb   %al
   147ec:	84 c0                	test   %al,%al
   147ee:	74 21                	je     14811 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   147f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147f4:	48 8b 00             	mov    (%rax),%rax
   147f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   147fb:	48 c1 e2 03          	shl    $0x3,%rdx
   147ff:	48 01 c2             	add    %rax,%rdx
   14802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14806:	48 89 d6             	mov    %rdx,%rsi
   14809:	48 89 c7             	mov    %rax,%rdi
   1480c:	e8 a7 1d 00 00       	call   165b8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14811:	90                   	nop
   14812:	c9                   	leave
   14813:	c3                   	ret

0000000000014814 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14814:	55                   	push   %rbp
   14815:	48 89 e5             	mov    %rsp,%rbp
   14818:	48 83 ec 10          	sub    $0x10,%rsp
   1481c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14824:	48 89 c7             	mov    %rax,%rdi
   14827:	e8 ec 1d 00 00       	call   16618 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   1482c:	90                   	nop
   1482d:	c9                   	leave
   1482e:	c3                   	ret
   1482f:	90                   	nop

0000000000014830 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14830:	55                   	push   %rbp
   14831:	48 89 e5             	mov    %rsp,%rbp
   14834:	48 83 ec 10          	sub    $0x10,%rsp
   14838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1483c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14840:	48 89 c7             	mov    %rax,%rdi
   14843:	e8 dc 1d 00 00       	call   16624 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   14848:	90                   	nop
   14849:	c9                   	leave
   1484a:	c3                   	ret
   1484b:	90                   	nop

000000000001484c <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   1484c:	55                   	push   %rbp
   1484d:	48 89 e5             	mov    %rsp,%rbp
   14850:	53                   	push   %rbx
   14851:	48 83 ec 38          	sub    $0x38,%rsp
   14855:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14859:	48 89 f0             	mov    %rsi,%rax
   1485c:	48 89 d6             	mov    %rdx,%rsi
   1485f:	48 89 f2             	mov    %rsi,%rdx
   14862:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14866:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1486a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1486e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14872:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14876:	48 89 d6             	mov    %rdx,%rsi
   14879:	48 89 c7             	mov    %rax,%rdi
   1487c:	e8 af 1d 00 00       	call   16630 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   14881:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14885:	48 89 c7             	mov    %rax,%rdi
   14888:	e8 db 1d 00 00       	call   16668 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   1488d:	48 89 c3             	mov    %rax,%rbx
   14890:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14894:	48 89 c7             	mov    %rax,%rdi
   14897:	e8 ba 1d 00 00       	call   16656 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   1489c:	48 89 c1             	mov    %rax,%rcx
   1489f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   148a3:	48 89 da             	mov    %rbx,%rdx
   148a6:	48 89 ce             	mov    %rcx,%rsi
   148a9:	48 89 c7             	mov    %rax,%rdi
   148ac:	e8 1d 1e 00 00       	call   166ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   148b1:	eb 1a                	jmp    148cd <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   148b3:	48 89 c3             	mov    %rax,%rbx
   148b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   148ba:	48 89 c7             	mov    %rax,%rdi
   148bd:	e8 ea 06 00 00       	call   14fac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   148c2:	48 89 d8             	mov    %rbx,%rax
   148c5:	48 89 c7             	mov    %rax,%rdi
   148c8:	e8 33 00 ff ff       	call   4900 <_Unwind_Resume@plt>
   148cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   148d1:	c9                   	leave
   148d2:	c3                   	ret
   148d3:	90                   	nop

00000000000148d4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   148d4:	55                   	push   %rbp
   148d5:	48 89 e5             	mov    %rsp,%rbp
   148d8:	48 83 ec 10          	sub    $0x10,%rsp
   148dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   148e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148e4:	48 89 c7             	mov    %rax,%rdi
   148e7:	e8 92 1e 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   148ec:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   148ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148f3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   148f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148fb:	48 8b 00             	mov    (%rax),%rax
   148fe:	48 89 ce             	mov    %rcx,%rsi
   14901:	48 89 c7             	mov    %rax,%rdi
   14904:	e8 83 1e 00 00       	call   1678c <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   14909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1490d:	48 89 c7             	mov    %rax,%rdi
   14910:	e8 97 06 00 00       	call   14fac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   14915:	90                   	nop
   14916:	c9                   	leave
   14917:	c3                   	ret

0000000000014918 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14918:	55                   	push   %rbp
   14919:	48 89 e5             	mov    %rsp,%rbp
   1491c:	48 83 ec 10          	sub    $0x10,%rsp
   14920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14928:	48 8b 10             	mov    (%rax),%rdx
   1492b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1492f:	48 89 d6             	mov    %rdx,%rsi
   14932:	48 89 c7             	mov    %rax,%rdi
   14935:	e8 7c 1e 00 00       	call   167b6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1493a:	c9                   	leave
   1493b:	c3                   	ret

000000000001493c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1493c:	55                   	push   %rbp
   1493d:	48 89 e5             	mov    %rsp,%rbp
   14940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14944:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1494c:	48 8b 00             	mov    (%rax),%rax
   1494f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14953:	48 c1 e2 03          	shl    $0x3,%rdx
   14957:	48 01 d0             	add    %rdx,%rax
      }
   1495a:	5d                   	pop    %rbp
   1495b:	c3                   	ret

000000000001495c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1495c:	55                   	push   %rbp
   1495d:	48 89 e5             	mov    %rsp,%rbp
   14960:	48 83 ec 20          	sub    $0x20,%rsp
   14964:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   14968:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1496c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14970:	48 89 d6             	mov    %rdx,%rsi
   14973:	48 89 c7             	mov    %rax,%rdi
   14976:	e8 4d 1e 00 00       	call   167c8 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1497b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1497f:	c9                   	leave
   14980:	c3                   	ret
   14981:	90                   	nop

0000000000014982 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14982:	55                   	push   %rbp
   14983:	48 89 e5             	mov    %rsp,%rbp
   14986:	48 83 ec 20          	sub    $0x20,%rsp
   1498a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1498e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14992:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14996:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1499a:	48 89 d6             	mov    %rdx,%rsi
   1499d:	48 89 c7             	mov    %rax,%rdi
   149a0:	e8 23 1e 00 00       	call   167c8 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   149a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149a9:	c9                   	leave
   149aa:	c3                   	ret

00000000000149ab <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   149ab:	55                   	push   %rbp
   149ac:	48 89 e5             	mov    %rsp,%rbp
   149af:	53                   	push   %rbx
   149b0:	48 83 ec 18          	sub    $0x18,%rsp
   149b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   149b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   149bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149c0:	48 89 c7             	mov    %rax,%rdi
   149c3:	e8 1e 1e 00 00       	call   167e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   149c8:	48 8b 18             	mov    (%rax),%rbx
   149cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   149cf:	48 89 c7             	mov    %rax,%rdi
   149d2:	e8 0f 1e 00 00       	call   167e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   149d7:	48 8b 00             	mov    (%rax),%rax
   149da:	48 39 c3             	cmp    %rax,%rbx
   149dd:	0f 95 c0             	setne  %al
   149e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   149e4:	c9                   	leave
   149e5:	c3                   	ret

00000000000149e6 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   149e6:	55                   	push   %rbp
   149e7:	48 89 e5             	mov    %rsp,%rbp
   149ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   149ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149f2:	48 8b 00             	mov    (%rax),%rax
   149f5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   149f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149fd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   14a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14a04:	5d                   	pop    %rbp
   14a05:	c3                   	ret

0000000000014a06 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   14a06:	55                   	push   %rbp
   14a07:	48 89 e5             	mov    %rsp,%rbp
   14a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   14a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a12:	48 8b 00             	mov    (%rax),%rax
   14a15:	5d                   	pop    %rbp
   14a16:	c3                   	ret
   14a17:	90                   	nop

0000000000014a18 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14a18:	55                   	push   %rbp
   14a19:	48 89 e5             	mov    %rsp,%rbp
   14a1c:	48 83 ec 20          	sub    $0x20,%rsp
   14a20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   14a24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14a28:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14a2c:	48 89 d6             	mov    %rdx,%rsi
   14a2f:	48 89 c7             	mov    %rax,%rdi
   14a32:	e8 bd 1d 00 00       	call   167f4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   14a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a3b:	c9                   	leave
   14a3c:	c3                   	ret
   14a3d:	90                   	nop

0000000000014a3e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14a3e:	55                   	push   %rbp
   14a3f:	48 89 e5             	mov    %rsp,%rbp
   14a42:	48 83 ec 20          	sub    $0x20,%rsp
   14a46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   14a4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a4e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14a52:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14a56:	48 89 d6             	mov    %rdx,%rsi
   14a59:	48 89 c7             	mov    %rax,%rdi
   14a5c:	e8 93 1d 00 00       	call   167f4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   14a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a65:	c9                   	leave
   14a66:	c3                   	ret

0000000000014a67 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   14a67:	55                   	push   %rbp
   14a68:	48 89 e5             	mov    %rsp,%rbp
   14a6b:	53                   	push   %rbx
   14a6c:	48 83 ec 18          	sub    $0x18,%rsp
   14a70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14a74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   14a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a7c:	48 89 c7             	mov    %rax,%rdi
   14a7f:	e8 8e 1d 00 00       	call   16812 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14a84:	48 8b 18             	mov    (%rax),%rbx
   14a87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a8b:	48 89 c7             	mov    %rax,%rdi
   14a8e:	e8 7f 1d 00 00       	call   16812 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14a93:	48 8b 00             	mov    (%rax),%rax
   14a96:	48 39 c3             	cmp    %rax,%rbx
   14a99:	0f 95 c0             	setne  %al
   14a9c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14aa0:	c9                   	leave
   14aa1:	c3                   	ret

0000000000014aa2 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14aa2:	55                   	push   %rbp
   14aa3:	48 89 e5             	mov    %rsp,%rbp
   14aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   14aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aae:	48 8b 00             	mov    (%rax),%rax
   14ab1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ab9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   14abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14ac0:	5d                   	pop    %rbp
   14ac1:	c3                   	ret

0000000000014ac2 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   14ac2:	55                   	push   %rbp
   14ac3:	48 89 e5             	mov    %rsp,%rbp
   14ac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   14aca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ace:	48 8b 00             	mov    (%rax),%rax
   14ad1:	5d                   	pop    %rbp
   14ad2:	c3                   	ret
   14ad3:	90                   	nop

0000000000014ad4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   14ad4:	55                   	push   %rbp
   14ad5:	48 89 e5             	mov    %rsp,%rbp
   14ad8:	48 83 ec 20          	sub    $0x20,%rsp
   14adc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ae0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   14ae4:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   14ae8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14aec:	48 89 c7             	mov    %rax,%rdi
   14aef:	e8 2c 1d 00 00       	call   16820 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   14af4:	48 89 c2             	mov    %rax,%rdx
   14af7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14afb:	48 89 d6             	mov    %rdx,%rsi
   14afe:	48 89 c7             	mov    %rax,%rdi
   14b01:	e8 28 1d 00 00       	call   1682e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   14b06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   14b0a:	c9                   	leave
   14b0b:	c3                   	ret

0000000000014b0c <_ZNKSt6vectorItSaItEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14b0c:	55                   	push   %rbp
   14b0d:	48 89 e5             	mov    %rsp,%rbp
   14b10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b18:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b20:	48 8b 00             	mov    (%rax),%rax
   14b23:	48 29 c2             	sub    %rax,%rdx
   14b26:	48 89 d0             	mov    %rdx,%rax
   14b29:	48 d1 f8             	sar    %rax
   14b2c:	5d                   	pop    %rbp
   14b2d:	c3                   	ret

0000000000014b2e <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14b2e:	55                   	push   %rbp
   14b2f:	48 89 e5             	mov    %rsp,%rbp
   14b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b3a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b42:	48 8b 00             	mov    (%rax),%rax
   14b45:	48 29 c2             	sub    %rax,%rdx
   14b48:	48 c1 fa 02          	sar    $0x2,%rdx
   14b4c:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   14b53:	cc cc cc 
   14b56:	48 0f af c2          	imul   %rdx,%rax
   14b5a:	5d                   	pop    %rbp
   14b5b:	c3                   	ret

0000000000014b5c <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   14b5c:	55                   	push   %rbp
   14b5d:	48 89 e5             	mov    %rsp,%rbp
   14b60:	48 83 ec 10          	sub    $0x10,%rsp
   14b64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b6c:	48 8b 10             	mov    (%rax),%rdx
   14b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b73:	48 89 d6             	mov    %rdx,%rsi
   14b76:	48 89 c7             	mov    %rax,%rdi
   14b79:	e8 52 1d 00 00       	call   168d0 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>
   14b7e:	c9                   	leave
   14b7f:	c3                   	ret

0000000000014b80 <_ZNKSt6vectorItSaItEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   14b80:	55                   	push   %rbp
   14b81:	48 89 e5             	mov    %rsp,%rbp
   14b84:	48 83 ec 10          	sub    $0x10,%rsp
   14b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b90:	48 8b 10             	mov    (%rax),%rdx
   14b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b97:	48 89 d6             	mov    %rdx,%rsi
   14b9a:	48 89 c7             	mov    %rax,%rdi
   14b9d:	e8 40 1d 00 00       	call   168e2 <_ZNKSt6vectorItSaItEE11_M_data_ptrItEEPT_S4_>
   14ba2:	c9                   	leave
   14ba3:	c3                   	ret

0000000000014ba4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   14ba4:	55                   	push   %rbp
   14ba5:	48 89 e5             	mov    %rsp,%rbp
   14ba8:	48 83 ec 10          	sub    $0x10,%rsp
   14bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   14bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bb8:	48 89 c7             	mov    %rax,%rdi
   14bbb:	e8 58 03 00 00       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   14bc0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14bc4:	0f 92 c0             	setb   %al
   14bc7:	84 c0                	test   %al,%al
   14bc9:	74 24                	je     14bef <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   14bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bcf:	48 89 c7             	mov    %rax,%rdi
   14bd2:	e8 41 03 00 00       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   14bd7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14bdb:	48 29 c2             	sub    %rax,%rdx
   14bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14be2:	48 89 d6             	mov    %rdx,%rsi
   14be5:	48 89 c7             	mov    %rax,%rdi
   14be8:	e8 07 1d 00 00       	call   168f4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
   14bed:	eb 38                	jmp    14c27 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   14bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bf3:	48 89 c7             	mov    %rax,%rdi
   14bf6:	e8 1d 03 00 00       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   14bfb:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14bff:	0f 92 c0             	setb   %al
   14c02:	84 c0                	test   %al,%al
   14c04:	74 21                	je     14c27 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   14c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c0a:	48 8b 00             	mov    (%rax),%rax
   14c0d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14c11:	48 c1 e2 03          	shl    $0x3,%rdx
   14c15:	48 01 c2             	add    %rax,%rdx
   14c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c1c:	48 89 d6             	mov    %rdx,%rsi
   14c1f:	48 89 c7             	mov    %rax,%rdi
   14c22:	e8 d7 1e 00 00       	call   16afe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14c27:	90                   	nop
   14c28:	c9                   	leave
   14c29:	c3                   	ret

0000000000014c2a <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   14c2a:	55                   	push   %rbp
   14c2b:	48 89 e5             	mov    %rsp,%rbp
   14c2e:	48 83 ec 10          	sub    $0x10,%rsp
   14c32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   14c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c3e:	48 89 c7             	mov    %rax,%rdi
   14c41:	e8 18 1f 00 00       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   14c46:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14c4a:	0f 92 c0             	setb   %al
   14c4d:	84 c0                	test   %al,%al
   14c4f:	74 24                	je     14c75 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   14c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c55:	48 89 c7             	mov    %rax,%rdi
   14c58:	e8 01 1f 00 00       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   14c5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14c61:	48 29 c2             	sub    %rax,%rdx
   14c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c68:	48 89 d6             	mov    %rdx,%rsi
   14c6b:	48 89 c7             	mov    %rax,%rdi
   14c6e:	e8 0f 1f 00 00       	call   16b82 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
   14c73:	eb 38                	jmp    14cad <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   14c75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c79:	48 89 c7             	mov    %rax,%rdi
   14c7c:	e8 dd 1e 00 00       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   14c81:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14c85:	0f 92 c0             	setb   %al
   14c88:	84 c0                	test   %al,%al
   14c8a:	74 21                	je     14cad <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   14c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c90:	48 8b 00             	mov    (%rax),%rax
   14c93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14c97:	48 c1 e2 03          	shl    $0x3,%rdx
   14c9b:	48 01 c2             	add    %rax,%rdx
   14c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ca2:	48 89 d6             	mov    %rdx,%rsi
   14ca5:	48 89 c7             	mov    %rax,%rdi
   14ca8:	e8 df 20 00 00       	call   16d8c <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   14cad:	90                   	nop
   14cae:	c9                   	leave
   14caf:	c3                   	ret

0000000000014cb0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14cb0:	55                   	push   %rbp
   14cb1:	48 89 e5             	mov    %rsp,%rbp
   14cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cc0:	48 8b 00             	mov    (%rax),%rax
   14cc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14cc7:	48 c1 e2 03          	shl    $0x3,%rdx
   14ccb:	48 01 d0             	add    %rdx,%rax
      }
   14cce:	5d                   	pop    %rbp
   14ccf:	c3                   	ret

0000000000014cd0 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14cd0:	55                   	push   %rbp
   14cd1:	48 89 e5             	mov    %rsp,%rbp
   14cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ce0:	48 8b 00             	mov    (%rax),%rax
   14ce3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14ce7:	48 c1 e2 03          	shl    $0x3,%rdx
   14ceb:	48 01 d0             	add    %rdx,%rax
      }
   14cee:	5d                   	pop    %rbp
   14cef:	c3                   	ret

0000000000014cf0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   14cf0:	55                   	push   %rbp
   14cf1:	48 89 e5             	mov    %rsp,%rbp
   14cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   14cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d00:	48 8b 00             	mov    (%rax),%rax
   14d03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d07:	48 c1 e2 03          	shl    $0x3,%rdx
   14d0b:	48 01 d0             	add    %rdx,%rax
      }
   14d0e:	5d                   	pop    %rbp
   14d0f:	c3                   	ret

0000000000014d10 <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14d10:	55                   	push   %rbp
   14d11:	48 89 e5             	mov    %rsp,%rbp
   14d14:	48 83 ec 10          	sub    $0x10,%rsp
   14d18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d20:	48 89 c7             	mov    %rax,%rdi
   14d23:	e8 c4 20 00 00       	call   16dec <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   14d28:	90                   	nop
   14d29:	c9                   	leave
   14d2a:	c3                   	ret
   14d2b:	90                   	nop

0000000000014d2c <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14d2c:	55                   	push   %rbp
   14d2d:	48 89 e5             	mov    %rsp,%rbp
   14d30:	48 83 ec 10          	sub    $0x10,%rsp
   14d34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d3c:	48 89 c7             	mov    %rax,%rdi
   14d3f:	e8 b4 20 00 00       	call   16df8 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   14d44:	90                   	nop
   14d45:	c9                   	leave
   14d46:	c3                   	ret
   14d47:	90                   	nop

0000000000014d48 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   14d48:	55                   	push   %rbp
   14d49:	48 89 e5             	mov    %rsp,%rbp
   14d4c:	53                   	push   %rbx
   14d4d:	48 83 ec 38          	sub    $0x38,%rsp
   14d51:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14d55:	48 89 f0             	mov    %rsi,%rax
   14d58:	48 89 d6             	mov    %rdx,%rsi
   14d5b:	48 89 f2             	mov    %rsi,%rdx
   14d5e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14d62:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14d66:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   14d6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d6e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14d72:	48 89 d6             	mov    %rdx,%rsi
   14d75:	48 89 c7             	mov    %rax,%rdi
   14d78:	e8 87 20 00 00       	call   16e04 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   14d7d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14d81:	48 89 c7             	mov    %rax,%rdi
   14d84:	e8 b3 20 00 00       	call   16e3c <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   14d89:	48 89 c3             	mov    %rax,%rbx
   14d8c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14d90:	48 89 c7             	mov    %rax,%rdi
   14d93:	e8 92 20 00 00       	call   16e2a <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   14d98:	48 89 c1             	mov    %rax,%rcx
   14d9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d9f:	48 89 da             	mov    %rbx,%rdx
   14da2:	48 89 ce             	mov    %rcx,%rsi
   14da5:	48 89 c7             	mov    %rax,%rdi
   14da8:	e8 f5 20 00 00       	call   16ea2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   14dad:	eb 1a                	jmp    14dc9 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   14daf:	48 89 c3             	mov    %rax,%rbx
   14db2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14db6:	48 89 c7             	mov    %rax,%rdi
   14db9:	e8 8a 03 00 00       	call   15148 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   14dbe:	48 89 d8             	mov    %rbx,%rax
   14dc1:	48 89 c7             	mov    %rax,%rdi
   14dc4:	e8 37 fb fe ff       	call   4900 <_Unwind_Resume@plt>
   14dc9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14dcd:	c9                   	leave
   14dce:	c3                   	ret
   14dcf:	90                   	nop

0000000000014dd0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   14dd0:	55                   	push   %rbp
   14dd1:	48 89 e5             	mov    %rsp,%rbp
   14dd4:	48 83 ec 10          	sub    $0x10,%rsp
   14dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14de0:	48 89 c7             	mov    %rax,%rdi
   14de3:	e8 6a 21 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14de8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14deb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14def:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14df7:	48 8b 00             	mov    (%rax),%rax
   14dfa:	48 89 ce             	mov    %rcx,%rsi
   14dfd:	48 89 c7             	mov    %rax,%rdi
   14e00:	e8 5b 21 00 00       	call   16f60 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   14e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e09:	48 89 c7             	mov    %rax,%rdi
   14e0c:	e8 37 03 00 00       	call   15148 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   14e11:	90                   	nop
   14e12:	c9                   	leave
   14e13:	c3                   	ret

0000000000014e14 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14e14:	55                   	push   %rbp
   14e15:	48 89 e5             	mov    %rsp,%rbp
   14e18:	48 83 ec 10          	sub    $0x10,%rsp
   14e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e24:	48 89 c7             	mov    %rax,%rdi
   14e27:	e8 5e 21 00 00       	call   16f8a <_ZNSt15__new_allocatorIjEC1Ev>
   14e2c:	90                   	nop
   14e2d:	c9                   	leave
   14e2e:	c3                   	ret
   14e2f:	90                   	nop

0000000000014e30 <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   14e30:	55                   	push   %rbp
   14e31:	48 89 e5             	mov    %rsp,%rbp
   14e34:	48 83 ec 10          	sub    $0x10,%rsp
   14e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e40:	48 89 c7             	mov    %rax,%rdi
   14e43:	e8 4e 21 00 00       	call   16f96 <_ZNSt15__new_allocatorIjED1Ev>
   14e48:	90                   	nop
   14e49:	c9                   	leave
   14e4a:	c3                   	ret
   14e4b:	90                   	nop

0000000000014e4c <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   14e4c:	55                   	push   %rbp
   14e4d:	48 89 e5             	mov    %rsp,%rbp
   14e50:	53                   	push   %rbx
   14e51:	48 83 ec 38          	sub    $0x38,%rsp
   14e55:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14e59:	48 89 f0             	mov    %rsi,%rax
   14e5c:	48 89 d6             	mov    %rdx,%rsi
   14e5f:	48 89 f2             	mov    %rsi,%rdx
   14e62:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14e66:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14e6a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   14e6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e72:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14e76:	48 89 d6             	mov    %rdx,%rsi
   14e79:	48 89 c7             	mov    %rax,%rdi
   14e7c:	e8 3d 21 00 00       	call   16fbe <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   14e81:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14e85:	48 89 c7             	mov    %rax,%rdi
   14e88:	e8 b7 21 00 00       	call   17044 <_ZNKSt16initializer_listIjE3endEv>
   14e8d:	48 89 c3             	mov    %rax,%rbx
   14e90:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14e94:	48 89 c7             	mov    %rax,%rdi
   14e97:	e8 96 21 00 00       	call   17032 <_ZNKSt16initializer_listIjE5beginEv>
   14e9c:	48 89 c1             	mov    %rax,%rcx
   14e9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ea3:	48 89 da             	mov    %rbx,%rdx
   14ea6:	48 89 ce             	mov    %rcx,%rsi
   14ea9:	48 89 c7             	mov    %rax,%rdi
   14eac:	e8 f9 21 00 00       	call   170aa <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   14eb1:	eb 1a                	jmp    14ecd <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   14eb3:	48 89 c3             	mov    %rax,%rbx
   14eb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14eba:	48 89 c7             	mov    %rax,%rdi
   14ebd:	e8 22 21 00 00       	call   16fe4 <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   14ec2:	48 89 d8             	mov    %rbx,%rax
   14ec5:	48 89 c7             	mov    %rax,%rdi
   14ec8:	e8 33 fa fe ff       	call   4900 <_Unwind_Resume@plt>
   14ecd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14ed1:	c9                   	leave
   14ed2:	c3                   	ret
   14ed3:	90                   	nop

0000000000014ed4 <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   14ed4:	55                   	push   %rbp
   14ed5:	48 89 e5             	mov    %rsp,%rbp
   14ed8:	48 83 ec 10          	sub    $0x10,%rsp
   14edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ee4:	48 89 c7             	mov    %rax,%rdi
   14ee7:	e8 6e 22 00 00       	call   1715a <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   14eec:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   14eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ef3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14ef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14efb:	48 8b 00             	mov    (%rax),%rax
   14efe:	48 89 ce             	mov    %rcx,%rsi
   14f01:	48 89 c7             	mov    %rax,%rdi
   14f04:	e8 5f 22 00 00       	call   17168 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   14f09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f0d:	48 89 c7             	mov    %rax,%rdi
   14f10:	e8 cf 20 00 00       	call   16fe4 <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   14f15:	90                   	nop
   14f16:	c9                   	leave
   14f17:	c3                   	ret

0000000000014f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14f18:	55                   	push   %rbp
   14f19:	48 89 e5             	mov    %rsp,%rbp
   14f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f24:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f2c:	48 8b 00             	mov    (%rax),%rax
   14f2f:	48 29 c2             	sub    %rax,%rdx
   14f32:	48 89 d0             	mov    %rdx,%rax
   14f35:	48 c1 f8 03          	sar    $0x3,%rax
   14f39:	5d                   	pop    %rbp
   14f3a:	c3                   	ret
   14f3b:	90                   	nop

0000000000014f3c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14f3c:	55                   	push   %rbp
   14f3d:	48 89 e5             	mov    %rsp,%rbp
   14f40:	48 83 ec 10          	sub    $0x10,%rsp
   14f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f4c:	48 8b 10             	mov    (%rax),%rdx
   14f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f53:	48 89 d6             	mov    %rdx,%rsi
   14f56:	48 89 c7             	mov    %rax,%rdi
   14f59:	e8 34 22 00 00       	call   17192 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   14f5e:	c9                   	leave
   14f5f:	c3                   	ret

0000000000014f60 <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14f60:	55                   	push   %rbp
   14f61:	48 89 e5             	mov    %rsp,%rbp
   14f64:	48 83 ec 10          	sub    $0x10,%rsp
   14f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   14f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f70:	48 8b 10             	mov    (%rax),%rdx
   14f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f77:	48 89 d6             	mov    %rdx,%rsi
   14f7a:	48 89 c7             	mov    %rax,%rdi
   14f7d:	e8 22 22 00 00       	call   171a4 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   14f82:	c9                   	leave
   14f83:	c3                   	ret

0000000000014f84 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   14f84:	55                   	push   %rbp
   14f85:	48 89 e5             	mov    %rsp,%rbp
   14f88:	48 83 ec 10          	sub    $0x10,%rsp
   14f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   14f90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f94:	48 89 c7             	mov    %rax,%rdi
   14f97:	e8 78 f8 ff ff       	call   14814 <_ZNSaIP13VkImageView_TEC1Ev>
   14f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fa0:	48 89 c7             	mov    %rax,%rdi
   14fa3:	e8 0e 22 00 00       	call   171b6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   14fa8:	90                   	nop
   14fa9:	c9                   	leave
   14faa:	c3                   	ret
   14fab:	90                   	nop

0000000000014fac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14fac:	55                   	push   %rbp
   14fad:	48 89 e5             	mov    %rsp,%rbp
   14fb0:	48 83 ec 10          	sub    $0x10,%rsp
   14fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   14fb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fbc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fc4:	48 8b 00             	mov    (%rax),%rax
   14fc7:	48 29 c2             	sub    %rax,%rdx
   14fca:	48 89 d0             	mov    %rdx,%rax
   14fcd:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   14fd1:	48 89 c2             	mov    %rax,%rdx
   14fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd8:	48 8b 08             	mov    (%rax),%rcx
   14fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fdf:	48 89 ce             	mov    %rcx,%rsi
   14fe2:	48 89 c7             	mov    %rax,%rdi
   14fe5:	e8 fa 21 00 00       	call   171e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   14fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fee:	48 89 c7             	mov    %rax,%rdi
   14ff1:	e8 e6 e6 ff ff       	call   136dc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   14ff6:	90                   	nop
   14ff7:	c9                   	leave
   14ff8:	c3                   	ret
   14ff9:	90                   	nop

0000000000014ffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   14ffa:	55                   	push   %rbp
   14ffb:	48 89 e5             	mov    %rsp,%rbp
   14ffe:	48 83 ec 10          	sub    $0x10,%rsp
   15002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   15006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1500a:	48 89 c7             	mov    %rax,%rdi
   1500d:	e8 1a 53 ff ff       	call   a32c <_ZNSaIP9VkImage_TEC1Ev>
   15012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15016:	48 89 c7             	mov    %rax,%rdi
   15019:	e8 aa 78 ff ff       	call   c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1501e:	90                   	nop
   1501f:	c9                   	leave
   15020:	c3                   	ret
   15021:	90                   	nop

0000000000015022 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   15022:	55                   	push   %rbp
   15023:	48 89 e5             	mov    %rsp,%rbp
   15026:	48 83 ec 10          	sub    $0x10,%rsp
   1502a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1502e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15032:	48 89 c7             	mov    %rax,%rdi
   15035:	e8 e0 21 00 00       	call   1721a <_ZNSaIP15VkFramebuffer_TEC1Ev>
   1503a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1503e:	48 89 c7             	mov    %rax,%rdi
   15041:	e8 f0 21 00 00       	call   17236 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   15046:	90                   	nop
   15047:	c9                   	leave
   15048:	c3                   	ret
   15049:	90                   	nop

000000000001504a <_ZNSaIP15VkFramebuffer_TED1Ev>:
   1504a:	55                   	push   %rbp
   1504b:	48 89 e5             	mov    %rsp,%rbp
   1504e:	48 83 ec 10          	sub    $0x10,%rsp
   15052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1505a:	48 89 c7             	mov    %rax,%rdi
   1505d:	e8 02 22 00 00       	call   17264 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   15062:	90                   	nop
   15063:	c9                   	leave
   15064:	c3                   	ret
   15065:	90                   	nop

0000000000015066 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   15066:	55                   	push   %rbp
   15067:	48 89 e5             	mov    %rsp,%rbp
   1506a:	48 83 ec 10          	sub    $0x10,%rsp
   1506e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   15072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15076:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1507a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1507e:	48 8b 00             	mov    (%rax),%rax
   15081:	48 29 c2             	sub    %rax,%rdx
   15084:	48 89 d0             	mov    %rdx,%rax
   15087:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1508b:	48 89 c2             	mov    %rax,%rdx
   1508e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15092:	48 8b 08             	mov    (%rax),%rcx
   15095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15099:	48 89 ce             	mov    %rcx,%rsi
   1509c:	48 89 c7             	mov    %rax,%rdi
   1509f:	e8 cc 21 00 00       	call   17270 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   150a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150a8:	48 89 c7             	mov    %rax,%rdi
   150ab:	e8 f2 e6 ff ff       	call   137a2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   150b0:	90                   	nop
   150b1:	c9                   	leave
   150b2:	c3                   	ret
   150b3:	90                   	nop

00000000000150b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   150b4:	55                   	push   %rbp
   150b5:	48 89 e5             	mov    %rsp,%rbp
   150b8:	48 83 ec 10          	sub    $0x10,%rsp
   150bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   150c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c4:	48 89 c7             	mov    %rax,%rdi
   150c7:	e8 da 21 00 00       	call   172a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   150cc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   150cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   150d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150db:	48 8b 00             	mov    (%rax),%rax
   150de:	48 89 ce             	mov    %rcx,%rsi
   150e1:	48 89 c7             	mov    %rax,%rdi
   150e4:	e8 cb 21 00 00       	call   172b4 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   150e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ed:	48 89 c7             	mov    %rax,%rdi
   150f0:	e8 71 ff ff ff       	call   15066 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   150f5:	90                   	nop
   150f6:	c9                   	leave
   150f7:	c3                   	ret

00000000000150f8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   150f8:	55                   	push   %rbp
   150f9:	48 89 e5             	mov    %rsp,%rbp
   150fc:	48 83 ec 10          	sub    $0x10,%rsp
   15100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   15104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15108:	48 89 c7             	mov    %rax,%rdi
   1510b:	e8 a4 15 ff ff       	call   66b4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   15110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15114:	48 89 c7             	mov    %rax,%rdi
   15117:	e8 2a 1a ff ff       	call   6b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1511c:	90                   	nop
   1511d:	c9                   	leave
   1511e:	c3                   	ret
   1511f:	90                   	nop

0000000000015120 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   15120:	55                   	push   %rbp
   15121:	48 89 e5             	mov    %rsp,%rbp
   15124:	48 83 ec 10          	sub    $0x10,%rsp
   15128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1512c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15130:	48 89 c7             	mov    %rax,%rdi
   15133:	e8 d8 fb ff ff       	call   14d10 <_ZNSaIP13VkSemaphore_TEC1Ev>
   15138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1513c:	48 89 c7             	mov    %rax,%rdi
   1513f:	e8 9a 21 00 00       	call   172de <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   15144:	90                   	nop
   15145:	c9                   	leave
   15146:	c3                   	ret
   15147:	90                   	nop

0000000000015148 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   15148:	55                   	push   %rbp
   15149:	48 89 e5             	mov    %rsp,%rbp
   1514c:	48 83 ec 10          	sub    $0x10,%rsp
   15150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   15154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15158:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1515c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15160:	48 8b 00             	mov    (%rax),%rax
   15163:	48 29 c2             	sub    %rax,%rdx
   15166:	48 89 d0             	mov    %rdx,%rax
   15169:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1516d:	48 89 c2             	mov    %rax,%rdx
   15170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15174:	48 8b 08             	mov    (%rax),%rcx
   15177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1517b:	48 89 ce             	mov    %rcx,%rsi
   1517e:	48 89 c7             	mov    %rax,%rdi
   15181:	e8 86 21 00 00       	call   1730c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   15186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1518a:	48 89 c7             	mov    %rax,%rdi
   1518d:	e8 9c e6 ff ff       	call   1382e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   15192:	90                   	nop
   15193:	c9                   	leave
   15194:	c3                   	ret
   15195:	90                   	nop

0000000000015196 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   15196:	55                   	push   %rbp
   15197:	48 89 e5             	mov    %rsp,%rbp
   1519a:	48 83 ec 10          	sub    $0x10,%rsp
   1519e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   151a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151a6:	48 89 c7             	mov    %rax,%rdi
   151a9:	e8 94 21 00 00       	call   17342 <_ZNSaIP9VkFence_TEC1Ev>
   151ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151b2:	48 89 c7             	mov    %rax,%rdi
   151b5:	e8 a4 21 00 00       	call   1735e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   151ba:	90                   	nop
   151bb:	c9                   	leave
   151bc:	c3                   	ret
   151bd:	90                   	nop

00000000000151be <_ZNSaIP9VkFence_TED1Ev>:
   151be:	55                   	push   %rbp
   151bf:	48 89 e5             	mov    %rsp,%rbp
   151c2:	48 83 ec 10          	sub    $0x10,%rsp
   151c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ce:	48 89 c7             	mov    %rax,%rdi
   151d1:	e8 b6 21 00 00       	call   1738c <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
   151d6:	90                   	nop
   151d7:	c9                   	leave
   151d8:	c3                   	ret
   151d9:	90                   	nop

00000000000151da <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   151da:	55                   	push   %rbp
   151db:	48 89 e5             	mov    %rsp,%rbp
   151de:	48 83 ec 10          	sub    $0x10,%rsp
   151e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   151e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
   151ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151f2:	48 8b 00             	mov    (%rax),%rax
   151f5:	48 29 c2             	sub    %rax,%rdx
   151f8:	48 89 d0             	mov    %rdx,%rax
   151fb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   151ff:	48 89 c2             	mov    %rax,%rdx
   15202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15206:	48 8b 08             	mov    (%rax),%rcx
   15209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1520d:	48 89 ce             	mov    %rcx,%rsi
   15210:	48 89 c7             	mov    %rax,%rdi
   15213:	e8 80 21 00 00       	call   17398 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   15218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1521c:	48 89 c7             	mov    %rax,%rdi
   1521f:	e8 5e e6 ff ff       	call   13882 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
   15224:	90                   	nop
   15225:	c9                   	leave
   15226:	c3                   	ret
   15227:	90                   	nop

0000000000015228 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   15228:	55                   	push   %rbp
   15229:	48 89 e5             	mov    %rsp,%rbp
   1522c:	48 83 ec 10          	sub    $0x10,%rsp
   15230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   15234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15238:	48 89 c7             	mov    %rax,%rdi
   1523b:	e8 8e 21 00 00       	call   173ce <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15240:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   15243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15247:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1524b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1524f:	48 8b 00             	mov    (%rax),%rax
   15252:	48 89 ce             	mov    %rcx,%rsi
   15255:	48 89 c7             	mov    %rax,%rdi
   15258:	e8 7f 21 00 00       	call   173dc <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
   1525d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15261:	48 89 c7             	mov    %rax,%rdi
   15264:	e8 71 ff ff ff       	call   151da <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
   15269:	90                   	nop
   1526a:	c9                   	leave
   1526b:	c3                   	ret

000000000001526c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   1526c:	55                   	push   %rbp
   1526d:	48 89 e5             	mov    %rsp,%rbp
   15270:	48 83 ec 20          	sub    $0x20,%rsp
   15274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15278:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1527c:	89 d0                	mov    %edx,%eax
   1527e:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   15281:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   15285:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15289:	be 01 00 00 00       	mov    $0x1,%esi
   1528e:	48 89 c7             	mov    %rax,%rdi
   15291:	e8 8a f2 fe ff       	call   4520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   15296:	48 89 c7             	mov    %rax,%rdi
   15299:	e8 d3 00 00 00       	call   15371 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1529e:	48 89 c2             	mov    %rax,%rdx
   152a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152a5:	48 89 d6             	mov    %rdx,%rsi
   152a8:	48 89 c7             	mov    %rax,%rdi
   152ab:	e8 b0 ef fe ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   152b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152b4:	c9                   	leave
   152b5:	c3                   	ret

00000000000152b6 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   152b6:	55                   	push   %rbp
   152b7:	48 89 e5             	mov    %rsp,%rbp
   152ba:	48 83 ec 20          	sub    $0x20,%rsp
   152be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   152c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   152c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   152ca:	48 89 d6             	mov    %rdx,%rsi
   152cd:	48 89 c7             	mov    %rax,%rdi
   152d0:	e8 31 21 00 00       	call   17406 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   152d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152d9:	c9                   	leave
   152da:	c3                   	ret
   152db:	90                   	nop

00000000000152dc <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   152dc:	55                   	push   %rbp
   152dd:	48 89 e5             	mov    %rsp,%rbp
   152e0:	48 83 ec 20          	sub    $0x20,%rsp
   152e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   152e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152ec:	48 8d 50 08          	lea    0x8(%rax),%rdx
   152f0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   152f4:	48 89 d6             	mov    %rdx,%rsi
   152f7:	48 89 c7             	mov    %rax,%rdi
   152fa:	e8 07 21 00 00       	call   17406 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   152ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15303:	c9                   	leave
   15304:	c3                   	ret

0000000000015305 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   15305:	55                   	push   %rbp
   15306:	48 89 e5             	mov    %rsp,%rbp
   15309:	53                   	push   %rbx
   1530a:	48 83 ec 18          	sub    $0x18,%rsp
   1530e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15312:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   15316:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1531a:	48 89 c7             	mov    %rax,%rdi
   1531d:	e8 02 21 00 00       	call   17424 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15322:	48 8b 18             	mov    (%rax),%rbx
   15325:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15329:	48 89 c7             	mov    %rax,%rdi
   1532c:	e8 f3 20 00 00       	call   17424 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15331:	48 8b 00             	mov    (%rax),%rax
   15334:	48 39 c3             	cmp    %rax,%rbx
   15337:	0f 95 c0             	setne  %al
   1533a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1533e:	c9                   	leave
   1533f:	c3                   	ret

0000000000015340 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   15340:	55                   	push   %rbp
   15341:	48 89 e5             	mov    %rsp,%rbp
   15344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   15348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1534c:	48 8b 00             	mov    (%rax),%rax
   1534f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15357:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1535a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1535e:	5d                   	pop    %rbp
   1535f:	c3                   	ret

0000000000015360 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   15360:	55                   	push   %rbp
   15361:	48 89 e5             	mov    %rsp,%rbp
   15364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   15368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1536c:	48 8b 00             	mov    (%rax),%rax
   1536f:	5d                   	pop    %rbp
   15370:	c3                   	ret

0000000000015371 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   15371:	55                   	push   %rbp
   15372:	48 89 e5             	mov    %rsp,%rbp
   15375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1537d:	5d                   	pop    %rbp
   1537e:	c3                   	ret
   1537f:	90                   	nop

0000000000015380 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15380:	55                   	push   %rbp
   15381:	48 89 e5             	mov    %rsp,%rbp
   15384:	48 83 ec 10          	sub    $0x10,%rsp
   15388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1538c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   15390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15394:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15398:	48 89 d6             	mov    %rdx,%rsi
   1539b:	48 89 c7             	mov    %rax,%rdi
   1539e:	e8 05 64 ff ff       	call   b7a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   153a3:	90                   	nop
   153a4:	c9                   	leave
   153a5:	c3                   	ret

00000000000153a6 <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
   153a6:	55                   	push   %rbp
   153a7:	48 89 e5             	mov    %rsp,%rbp
   153aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153b2:	48 8b 00             	mov    (%rax),%rax
   153b5:	5d                   	pop    %rbp
   153b6:	c3                   	ret
   153b7:	90                   	nop

00000000000153b8 <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
   153b8:	55                   	push   %rbp
   153b9:	48 89 e5             	mov    %rsp,%rbp
   153bc:	53                   	push   %rbx
   153bd:	48 83 ec 18          	sub    $0x18,%rsp
   153c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153c9:	48 89 c7             	mov    %rax,%rdi
   153cc:	e8 d5 ff ff ff       	call   153a6 <_ZNKSt16initializer_listIPKcE5beginEv>
   153d1:	48 89 c3             	mov    %rax,%rbx
   153d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153d8:	48 89 c7             	mov    %rax,%rdi
   153db:	e8 52 20 00 00       	call   17432 <_ZNKSt16initializer_listIPKcE4sizeEv>
   153e0:	48 c1 e0 03          	shl    $0x3,%rax
   153e4:	48 01 d8             	add    %rbx,%rax
   153e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   153eb:	c9                   	leave
   153ec:	c3                   	ret

00000000000153ed <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   153ed:	55                   	push   %rbp
   153ee:	48 89 e5             	mov    %rsp,%rbp
   153f1:	48 83 ec 10          	sub    $0x10,%rsp
   153f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   153fd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15401:	48 89 c7             	mov    %rax,%rdi
   15404:	e8 3b 20 00 00       	call   17444 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   15409:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1540d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15411:	48 89 d6             	mov    %rdx,%rsi
   15414:	48 89 c7             	mov    %rax,%rdi
   15417:	e8 33 20 00 00       	call   1744f <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   1541c:	c9                   	leave
   1541d:	c3                   	ret

000000000001541e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1541e:	55                   	push   %rbp
   1541f:	48 89 e5             	mov    %rsp,%rbp
   15422:	53                   	push   %rbx
   15423:	48 83 ec 38          	sub    $0x38,%rsp
   15427:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1542b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1542f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   15433:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15437:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1543b:	48 89 d6             	mov    %rdx,%rsi
   1543e:	48 89 c7             	mov    %rax,%rdi
   15441:	e8 a7 ff ff ff       	call   153ed <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   15446:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1544a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1544e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15452:	48 89 c7             	mov    %rax,%rdi
   15455:	e8 c4 54 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1545a:	48 89 c2             	mov    %rax,%rdx
   1545d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15461:	48 89 d6             	mov    %rdx,%rsi
   15464:	48 89 c7             	mov    %rax,%rdi
   15467:	e8 b3 53 ff ff       	call   a81f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   1546c:	48 89 c6             	mov    %rax,%rsi
   1546f:	48 89 df             	mov    %rbx,%rdi
   15472:	e8 bd 6e ff ff       	call   c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   15477:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1547b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1547e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15482:	48 8b 00             	mov    (%rax),%rax
   15485:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15489:	48 c1 e2 03          	shl    $0x3,%rdx
   1548d:	48 01 c2             	add    %rax,%rdx
   15490:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15494:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   15498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1549c:	48 89 c7             	mov    %rax,%rdi
   1549f:	e8 7a 54 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   154a4:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   154a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   154ab:	48 8b 10             	mov    (%rax),%rdx
   154ae:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   154b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   154b6:	48 89 c7             	mov    %rax,%rdi
   154b9:	e8 ab 1f 00 00       	call   17469 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   154be:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   154c2:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   154c6:	90                   	nop
   154c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   154cb:	c9                   	leave
   154cc:	c3                   	ret

00000000000154cd <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   154cd:	55                   	push   %rbp
   154ce:	48 89 e5             	mov    %rsp,%rbp
   154d1:	48 83 ec 20          	sub    $0x20,%rsp
   154d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   154dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   154e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   154e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154e9:	48 89 d6             	mov    %rdx,%rsi
   154ec:	48 89 c7             	mov    %rax,%rdi
   154ef:	e8 a6 1f 00 00       	call   1749a <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   154f4:	90                   	nop
   154f5:	c9                   	leave
   154f6:	c3                   	ret
   154f7:	90                   	nop

00000000000154f8 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   154f8:	55                   	push   %rbp
   154f9:	48 89 e5             	mov    %rsp,%rbp
   154fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15500:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15504:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15508:	48 8b 10             	mov    (%rax),%rdx
   1550b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1550f:	48 89 10             	mov    %rdx,(%rax)
   15512:	90                   	nop
   15513:	5d                   	pop    %rbp
   15514:	c3                   	ret
   15515:	90                   	nop

0000000000015516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15516:	55                   	push   %rbp
   15517:	48 89 e5             	mov    %rsp,%rbp
   1551a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1551e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15522:	5d                   	pop    %rbp
   15523:	c3                   	ret

0000000000015524 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15524:	55                   	push   %rbp
   15525:	48 89 e5             	mov    %rsp,%rbp
   15528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1552c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15530:	5d                   	pop    %rbp
   15531:	c3                   	ret

0000000000015532 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   15532:	55                   	push   %rbp
   15533:	48 89 e5             	mov    %rsp,%rbp
   15536:	48 83 ec 20          	sub    $0x20,%rsp
   1553a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1553e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15542:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   15546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1554a:	48 89 c7             	mov    %rax,%rdi
   1554d:	e8 d2 ff ff ff       	call   15524 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   15552:	48 89 c2             	mov    %rax,%rdx
   15555:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1555d:	48 89 ce             	mov    %rcx,%rsi
   15560:	48 89 c7             	mov    %rax,%rdi
   15563:	e8 58 1f 00 00       	call   174c0 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   15568:	90                   	nop
   15569:	c9                   	leave
   1556a:	c3                   	ret
   1556b:	90                   	nop

000000000001556c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   1556c:	55                   	push   %rbp
   1556d:	48 89 e5             	mov    %rsp,%rbp
   15570:	53                   	push   %rbx
   15571:	48 83 ec 68          	sub    $0x68,%rsp
   15575:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   15579:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1557d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   15581:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15585:	48 8d 15 2a b6 00 00 	lea    0xb62a(%rip),%rdx        # 20bb6 <_ZZN9VulkanApp6renderEvE11submitCount+0x2ba>
   1558c:	be 01 00 00 00       	mov    $0x1,%esi
   15591:	48 89 c7             	mov    %rax,%rdi
   15594:	e8 69 1f 00 00       	call   17502 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   15599:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1559d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155a1:	48 8b 00             	mov    (%rax),%rax
   155a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   155a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155ac:	48 8b 40 08          	mov    0x8(%rax),%rax
   155b0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   155b4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155b8:	48 89 c7             	mov    %rax,%rdi
   155bb:	e8 66 e4 ff ff       	call   13a26 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   155c0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   155c4:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   155c8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   155cc:	48 89 d6             	mov    %rdx,%rsi
   155cf:	48 89 c7             	mov    %rax,%rdi
   155d2:	e8 f3 1f 00 00       	call   175ca <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   155d7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   155db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   155df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   155e3:	48 89 d6             	mov    %rdx,%rsi
   155e6:	48 89 c7             	mov    %rax,%rdi
   155e9:	e8 46 6d ff ff       	call   c334 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   155ee:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   155f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   155f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   155fa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   155fe:	48 89 c7             	mov    %rax,%rdi
   15601:	e8 1e ff ff ff       	call   15524 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   15606:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   15609:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1560d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   15614:	00 
	  _Alloc_traits::construct(this->_M_impl,
   15615:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15619:	48 01 c1             	add    %rax,%rcx
   1561c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15620:	48 89 ce             	mov    %rcx,%rsi
   15623:	48 89 c7             	mov    %rax,%rdi
   15626:	e8 07 ff ff ff       	call   15532 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   1562b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   15632:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   15633:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15637:	48 89 c7             	mov    %rax,%rdi
   1563a:	e8 df 52 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1563f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   15642:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   15646:	48 89 c7             	mov    %rax,%rdi
   15649:	e8 c8 fe ff ff       	call   15516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1564e:	48 8b 30             	mov    (%rax),%rsi
   15651:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15655:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15659:	48 89 d9             	mov    %rbx,%rcx
   1565c:	48 89 c7             	mov    %rax,%rdi
   1565f:	e8 a8 1f 00 00       	call   1760c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   15664:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   15668:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   1566d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15671:	48 89 c7             	mov    %rax,%rdi
   15674:	e8 a5 52 ff ff       	call   a91e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   15679:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1567c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   15680:	48 89 c7             	mov    %rax,%rdi
   15683:	e8 8e fe ff ff       	call   15516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15688:	48 8b 00             	mov    (%rax),%rax
   1568b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1568f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   15693:	48 89 d9             	mov    %rbx,%rcx
   15696:	48 89 c7             	mov    %rax,%rdi
   15699:	e8 6e 1f 00 00       	call   1760c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1569e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   156a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   156a6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   156aa:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   156ae:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   156b2:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   156b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   156ba:	48 89 ce             	mov    %rcx,%rsi
   156bd:	48 89 c7             	mov    %rax,%rdi
   156c0:	e8 8d 52 ff ff       	call   a952 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   156c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   156c9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   156cd:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   156d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   156d4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   156d8:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   156dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156e0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   156e7:	00 
   156e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   156ec:	48 01 c2             	add    %rax,%rdx
   156ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   156f3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   156f7:	90                   	nop
   156f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   156fc:	c9                   	leave
   156fd:	c3                   	ret

00000000000156fe <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   156fe:	55                   	push   %rbp
   156ff:	48 89 e5             	mov    %rsp,%rbp
   15702:	48 83 ec 20          	sub    $0x20,%rsp
   15706:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   1570a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1570e:	48 89 c7             	mov    %rax,%rdi
   15711:	e8 36 e3 ff ff       	call   13a4c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   15716:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1571a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1571e:	be 01 00 00 00       	mov    $0x1,%esi
   15723:	48 89 c7             	mov    %rax,%rdi
   15726:	e8 13 1f 00 00       	call   1763e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   1572b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1572f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   15733:	48 89 c7             	mov    %rax,%rdi
   15736:	e8 95 e3 ff ff       	call   13ad0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   1573b:	c9                   	leave
   1573c:	c3                   	ret
   1573d:	90                   	nop

000000000001573e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1573e:	55                   	push   %rbp
   1573f:	48 89 e5             	mov    %rsp,%rbp
   15742:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15746:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1574a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1574e:	5d                   	pop    %rbp
   1574f:	c3                   	ret

0000000000015750 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15750:	55                   	push   %rbp
   15751:	48 89 e5             	mov    %rsp,%rbp
   15754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1575c:	5d                   	pop    %rbp
   1575d:	c3                   	ret

000000000001575e <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1575e:	55                   	push   %rbp
   1575f:	48 89 e5             	mov    %rsp,%rbp
   15762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1576a:	5d                   	pop    %rbp
   1576b:	c3                   	ret

000000000001576c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1576c:	55                   	push   %rbp
   1576d:	48 89 e5             	mov    %rsp,%rbp
   15770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15778:	5d                   	pop    %rbp
   15779:	c3                   	ret

000000000001577a <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   1577a:	55                   	push   %rbp
   1577b:	48 89 e5             	mov    %rsp,%rbp
   1577e:	48 83 ec 20          	sub    $0x20,%rsp
   15782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15786:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   1578a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1578e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15792:	48 89 d6             	mov    %rdx,%rsi
   15795:	48 89 c7             	mov    %rax,%rdi
   15798:	e8 e3 1e 00 00       	call   17680 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   1579d:	90                   	nop
   1579e:	c9                   	leave
   1579f:	c3                   	ret

00000000000157a0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   157a0:	55                   	push   %rbp
   157a1:	48 89 e5             	mov    %rsp,%rbp
   157a4:	53                   	push   %rbx
   157a5:	48 83 ec 18          	sub    $0x18,%rsp
   157a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   157ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   157b1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   157b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   157b9:	48 89 c7             	mov    %rax,%rdi
   157bc:	e8 ab ff ff ff       	call   1576c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   157c1:	48 89 c6             	mov    %rax,%rsi
   157c4:	48 89 df             	mov    %rbx,%rdi
   157c7:	e8 ae ff ff ff       	call   1577a <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   157cc:	90                   	nop
   157cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   157d1:	c9                   	leave
   157d2:	c3                   	ret
   157d3:	90                   	nop

00000000000157d4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   157d4:	55                   	push   %rbp
   157d5:	48 89 e5             	mov    %rsp,%rbp
   157d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   157e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157e4:	48 8b 10             	mov    (%rax),%rdx
   157e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157eb:	48 89 10             	mov    %rdx,(%rax)
   157ee:	90                   	nop
   157ef:	5d                   	pop    %rbp
   157f0:	c3                   	ret
   157f1:	90                   	nop

00000000000157f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   157f2:	55                   	push   %rbp
   157f3:	48 89 e5             	mov    %rsp,%rbp
   157f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   157fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157fe:	5d                   	pop    %rbp
   157ff:	c3                   	ret

0000000000015800 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   15800:	55                   	push   %rbp
   15801:	48 89 e5             	mov    %rsp,%rbp
   15804:	53                   	push   %rbx
   15805:	48 83 ec 18          	sub    $0x18,%rsp
   15809:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1580d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   15811:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15815:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   15819:	84 c0                	test   %al,%al
   1581b:	74 35                	je     15852 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   1581d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15821:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   15825:	84 c0                	test   %al,%al
   15827:	74 29                	je     15852 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   15829:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1582d:	48 89 c7             	mov    %rax,%rdi
   15830:	e8 87 1e 00 00       	call   176bc <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   15835:	48 89 c3             	mov    %rax,%rbx
   15838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1583c:	48 89 c7             	mov    %rax,%rdi
   1583f:	e8 4e 00 00 00       	call   15892 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   15844:	48 89 de             	mov    %rbx,%rsi
   15847:	48 89 c7             	mov    %rax,%rdi
   1584a:	e8 7b 1e 00 00       	call   176ca <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   1584f:	90                   	nop
      }
   15850:	eb 38                	jmp    1588a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   15852:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15856:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1585a:	84 c0                	test   %al,%al
   1585c:	74 20                	je     1587e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   1585e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15862:	48 89 c7             	mov    %rax,%rdi
   15865:	e8 52 1e 00 00       	call   176bc <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1586a:	48 89 c2             	mov    %rax,%rdx
   1586d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15871:	48 89 d6             	mov    %rdx,%rsi
   15874:	48 89 c7             	mov    %rax,%rdi
   15877:	e8 8c 1e 00 00       	call   17708 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   1587c:	eb 0c                	jmp    1588a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   1587e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15882:	48 89 c7             	mov    %rax,%rdi
   15885:	e8 c4 1e 00 00       	call   1774e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   1588a:	90                   	nop
   1588b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1588f:	c9                   	leave
   15890:	c3                   	ret
   15891:	90                   	nop

0000000000015892 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   15892:	55                   	push   %rbp
   15893:	48 89 e5             	mov    %rsp,%rbp
   15896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1589a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1589e:	5d                   	pop    %rbp
   1589f:	c3                   	ret

00000000000158a0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   158a0:	55                   	push   %rbp
   158a1:	48 89 e5             	mov    %rsp,%rbp
   158a4:	48 83 ec 10          	sub    $0x10,%rsp
   158a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158b0:	48 89 c7             	mov    %rax,%rdi
   158b3:	e8 be 1e 00 00       	call   17776 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   158b8:	90                   	nop
   158b9:	c9                   	leave
   158ba:	c3                   	ret
   158bb:	90                   	nop

00000000000158bc <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   158bc:	55                   	push   %rbp
   158bd:	48 89 e5             	mov    %rsp,%rbp
   158c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   158c4:	90                   	nop
   158c5:	5d                   	pop    %rbp
   158c6:	c3                   	ret
   158c7:	90                   	nop

00000000000158c8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   158c8:	55                   	push   %rbp
   158c9:	48 89 e5             	mov    %rsp,%rbp
   158cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158d0:	90                   	nop
   158d1:	5d                   	pop    %rbp
   158d2:	c3                   	ret
   158d3:	90                   	nop

00000000000158d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   158d4:	55                   	push   %rbp
   158d5:	48 89 e5             	mov    %rsp,%rbp
   158d8:	48 83 ec 20          	sub    $0x20,%rsp
   158dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   158e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   158e4:	eb 49                	jmp    1592f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   158e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   158ea:	48 89 c7             	mov    %rax,%rdi
   158ed:	e8 8f 1e 00 00       	call   17781 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   158f2:	48 89 c2             	mov    %rax,%rdx
   158f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158f9:	48 89 d6             	mov    %rdx,%rsi
   158fc:	48 89 c7             	mov    %rax,%rdi
   158ff:	e8 d0 ff ff ff       	call   158d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   15904:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15908:	48 89 c7             	mov    %rax,%rdi
   1590b:	e8 83 1e 00 00       	call   17793 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   15910:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   15914:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15918:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1591c:	48 89 d6             	mov    %rdx,%rsi
   1591f:	48 89 c7             	mov    %rax,%rdi
   15922:	e8 7f 1e 00 00       	call   177a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   15927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1592b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   1592f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15934:	75 b0                	jne    158e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   15936:	90                   	nop
   15937:	90                   	nop
   15938:	c9                   	leave
   15939:	c3                   	ret

000000000001593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   1593a:	55                   	push   %rbp
   1593b:	48 89 e5             	mov    %rsp,%rbp
   1593e:	48 83 ec 10          	sub    $0x10,%rsp
   15942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   15946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1594a:	48 89 c7             	mov    %rax,%rdi
   1594d:	e8 8e 1e 00 00       	call   177e0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   15952:	c9                   	leave
   15953:	c3                   	ret

0000000000015954 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15954:	55                   	push   %rbp
   15955:	48 89 e5             	mov    %rsp,%rbp
   15958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1595c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15960:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15964:	48 8b 10             	mov    (%rax),%rdx
   15967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1596b:	48 89 10             	mov    %rdx,(%rax)
   1596e:	90                   	nop
   1596f:	5d                   	pop    %rbp
   15970:	c3                   	ret
   15971:	90                   	nop

0000000000015972 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15972:	55                   	push   %rbp
   15973:	48 89 e5             	mov    %rsp,%rbp
   15976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1597a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1597e:	5d                   	pop    %rbp
   1597f:	c3                   	ret

0000000000015980 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   15980:	55                   	push   %rbp
   15981:	48 89 e5             	mov    %rsp,%rbp
   15984:	48 83 ec 10          	sub    $0x10,%rsp
   15988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1598c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   15990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15994:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15998:	48 89 d6             	mov    %rdx,%rsi
   1599b:	48 89 c7             	mov    %rax,%rdi
   1599e:	e8 4f 1e 00 00       	call   177f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   159a3:	c9                   	leave
   159a4:	c3                   	ret
   159a5:	90                   	nop

00000000000159a6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   159a6:	55                   	push   %rbp
   159a7:	48 89 e5             	mov    %rsp,%rbp
   159aa:	48 83 ec 10          	sub    $0x10,%rsp
   159ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   159b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b6:	48 89 c7             	mov    %rax,%rdi
   159b9:	e8 80 1e 00 00       	call   1783e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   159be:	c9                   	leave
   159bf:	c3                   	ret

00000000000159c0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   159c0:	55                   	push   %rbp
   159c1:	48 89 e5             	mov    %rsp,%rbp
   159c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   159cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159d0:	48 8b 10             	mov    (%rax),%rdx
   159d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   159d7:	48 8b 00             	mov    (%rax),%rax
   159da:	48 39 c2             	cmp    %rax,%rdx
   159dd:	0f 94 c0             	sete   %al
   159e0:	5d                   	pop    %rbp
   159e1:	c3                   	ret

00000000000159e2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   159e2:	55                   	push   %rbp
   159e3:	48 89 e5             	mov    %rsp,%rbp
   159e6:	48 83 ec 10          	sub    $0x10,%rsp
   159ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   159ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159f2:	48 89 c7             	mov    %rax,%rdi
   159f5:	e8 6e 1e 00 00       	call   17868 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   159fa:	90                   	nop
   159fb:	c9                   	leave
   159fc:	c3                   	ret
   159fd:	90                   	nop

00000000000159fe <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   159fe:	55                   	push   %rbp
   159ff:	48 89 e5             	mov    %rsp,%rbp
   15a02:	48 83 ec 10          	sub    $0x10,%rsp
   15a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   15a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a0e:	48 8b 00             	mov    (%rax),%rax
   15a11:	48 89 c7             	mov    %rax,%rdi
   15a14:	e8 5b 1e 00 00       	call   17874 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   15a19:	c9                   	leave
   15a1a:	c3                   	ret
   15a1b:	90                   	nop

0000000000015a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   15a1c:	55                   	push   %rbp
   15a1d:	48 89 e5             	mov    %rsp,%rbp
   15a20:	48 83 ec 20          	sub    $0x20,%rsp
   15a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15a2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   15a30:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15a34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a38:	48 89 d6             	mov    %rdx,%rsi
   15a3b:	48 89 c7             	mov    %rax,%rdi
   15a3e:	e8 4f 1e 00 00       	call   17892 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   15a43:	c9                   	leave
   15a44:	c3                   	ret

0000000000015a45 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   15a45:	55                   	push   %rbp
   15a46:	48 89 e5             	mov    %rsp,%rbp
   15a49:	48 83 ec 10          	sub    $0x10,%rsp
   15a4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a51:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   15a55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a59:	48 89 c7             	mov    %rax,%rdi
   15a5c:	e8 59 1e 00 00       	call   178ba <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   15a61:	48 89 c2             	mov    %rax,%rdx
   15a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a68:	48 89 d6             	mov    %rdx,%rsi
   15a6b:	48 89 c7             	mov    %rax,%rdi
   15a6e:	e8 55 1e 00 00       	call   178c8 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   15a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a77:	c9                   	leave
   15a78:	c3                   	ret
   15a79:	90                   	nop

0000000000015a7a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   15a7a:	55                   	push   %rbp
   15a7b:	48 89 e5             	mov    %rsp,%rbp
   15a7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   15a86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a8a:	48 8b 10             	mov    (%rax),%rdx
   15a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a91:	48 89 10             	mov    %rdx,(%rax)
   15a94:	90                   	nop
   15a95:	5d                   	pop    %rbp
   15a96:	c3                   	ret
   15a97:	90                   	nop

0000000000015a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15a98:	55                   	push   %rbp
   15a99:	48 89 e5             	mov    %rsp,%rbp
   15a9c:	41 54                	push   %r12
   15a9e:	53                   	push   %rbx
   15a9f:	48 83 ec 60          	sub    $0x60,%rsp
   15aa3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   15aa7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   15aab:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   15aaf:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   15ab3:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   15ab7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15abb:	48 89 c7             	mov    %rax,%rdi
   15abe:	e8 54 1e 00 00       	call   17917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15ac3:	49 89 c4             	mov    %rax,%r12
   15ac6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15aca:	48 89 c7             	mov    %rax,%rdi
   15acd:	e8 37 1e 00 00       	call   17909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15ad2:	48 89 c3             	mov    %rax,%rbx
   15ad5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15ad9:	48 89 c7             	mov    %rax,%rdi
   15adc:	e8 1a 1e 00 00       	call   178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15ae1:	48 89 c2             	mov    %rax,%rdx
   15ae4:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   15ae8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15aec:	4d 89 e0             	mov    %r12,%r8
   15aef:	48 89 d9             	mov    %rbx,%rcx
   15af2:	48 89 c7             	mov    %rax,%rdi
   15af5:	e8 2c 1e 00 00       	call   17926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   15afa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15afe:	48 89 c7             	mov    %rax,%rdi
   15b01:	e8 20 23 00 00       	call   17e26 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   15b06:	48 89 c2             	mov    %rax,%rdx
   15b09:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   15b0d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15b11:	48 89 ce             	mov    %rcx,%rsi
   15b14:	48 89 c7             	mov    %rax,%rdi
   15b17:	e8 bc 1e 00 00       	call   179d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   15b1c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   15b20:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   15b24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b28:	48 85 c0             	test   %rax,%rax
   15b2b:	74 1c                	je     15b49 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   15b2d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15b31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15b35:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b39:	48 89 ce             	mov    %rcx,%rsi
   15b3c:	48 89 c7             	mov    %rax,%rdi
   15b3f:	e8 00 23 00 00       	call   17e44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   15b44:	48 89 c3             	mov    %rax,%rbx
   15b47:	eb 17                	jmp    15b60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   15b49:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15b4d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   15b51:	48 89 d6             	mov    %rdx,%rsi
   15b54:	48 89 c7             	mov    %rax,%rdi
   15b57:	e8 3e 23 00 00       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15b5c:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   15b60:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b64:	48 89 c7             	mov    %rax,%rdi
   15b67:	e8 36 1e 00 00       	call   179a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   15b6c:	48 89 d8             	mov    %rbx,%rax
   15b6f:	eb 1a                	jmp    15b8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   15b71:	48 89 c3             	mov    %rax,%rbx
   15b74:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b78:	48 89 c7             	mov    %rax,%rdi
   15b7b:	e8 22 1e 00 00       	call   179a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   15b80:	48 89 d8             	mov    %rbx,%rax
   15b83:	48 89 c7             	mov    %rax,%rdi
   15b86:	e8 75 ed fe ff       	call   4900 <_Unwind_Resume@plt>
   15b8b:	48 83 c4 60          	add    $0x60,%rsp
   15b8f:	5b                   	pop    %rbx
   15b90:	41 5c                	pop    %r12
   15b92:	5d                   	pop    %rbp
   15b93:	c3                   	ret

0000000000015b94 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   15b94:	55                   	push   %rbp
   15b95:	48 89 e5             	mov    %rsp,%rbp
   15b98:	48 83 ec 20          	sub    $0x20,%rsp
   15b9c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   15ba0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ba4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15ba8:	48 89 d6             	mov    %rdx,%rsi
   15bab:	48 89 c7             	mov    %rax,%rdi
   15bae:	e8 01 23 00 00       	call   17eb4 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   15bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bb7:	c9                   	leave
   15bb8:	c3                   	ret
   15bb9:	90                   	nop

0000000000015bba <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   15bba:	55                   	push   %rbp
   15bbb:	48 89 e5             	mov    %rsp,%rbp
   15bbe:	48 83 ec 20          	sub    $0x20,%rsp
   15bc2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   15bc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bca:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15bce:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15bd2:	48 89 d6             	mov    %rdx,%rsi
   15bd5:	48 89 c7             	mov    %rax,%rdi
   15bd8:	e8 d7 22 00 00       	call   17eb4 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   15bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15be1:	c9                   	leave
   15be2:	c3                   	ret

0000000000015be3 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   15be3:	55                   	push   %rbp
   15be4:	48 89 e5             	mov    %rsp,%rbp
   15be7:	53                   	push   %rbx
   15be8:	48 83 ec 18          	sub    $0x18,%rsp
   15bec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15bf0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   15bf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bf8:	48 89 c7             	mov    %rax,%rdi
   15bfb:	e8 d2 22 00 00       	call   17ed2 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   15c00:	48 8b 18             	mov    (%rax),%rbx
   15c03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15c07:	48 89 c7             	mov    %rax,%rdi
   15c0a:	e8 c3 22 00 00       	call   17ed2 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   15c0f:	48 8b 00             	mov    (%rax),%rax
   15c12:	48 39 c3             	cmp    %rax,%rbx
   15c15:	0f 94 c0             	sete   %al
   15c18:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15c1c:	c9                   	leave
   15c1d:	c3                   	ret

0000000000015c1e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15c1e:	55                   	push   %rbp
   15c1f:	48 89 e5             	mov    %rsp,%rbp
   15c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15c2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c2e:	48 8b 10             	mov    (%rax),%rdx
   15c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c35:	48 89 10             	mov    %rdx,(%rax)
   15c38:	90                   	nop
   15c39:	5d                   	pop    %rbp
   15c3a:	c3                   	ret
   15c3b:	90                   	nop

0000000000015c3c <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15c3c:	55                   	push   %rbp
   15c3d:	48 89 e5             	mov    %rsp,%rbp
   15c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c48:	5d                   	pop    %rbp
   15c49:	c3                   	ret

0000000000015c4a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15c4a:	55                   	push   %rbp
   15c4b:	48 89 e5             	mov    %rsp,%rbp
   15c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15c56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c5a:	48 8b 10             	mov    (%rax),%rdx
   15c5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c61:	48 89 10             	mov    %rdx,(%rax)
   15c64:	90                   	nop
   15c65:	5d                   	pop    %rbp
   15c66:	c3                   	ret
   15c67:	90                   	nop

0000000000015c68 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15c68:	55                   	push   %rbp
   15c69:	48 89 e5             	mov    %rsp,%rbp
   15c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c74:	5d                   	pop    %rbp
   15c75:	c3                   	ret

0000000000015c76 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   15c76:	55                   	push   %rbp
   15c77:	48 89 e5             	mov    %rsp,%rbp
   15c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c82:	5d                   	pop    %rbp
   15c83:	c3                   	ret

0000000000015c84 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   15c84:	55                   	push   %rbp
   15c85:	48 89 e5             	mov    %rsp,%rbp
   15c88:	53                   	push   %rbx
   15c89:	48 83 ec 38          	sub    $0x38,%rsp
   15c8d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15c91:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   15c95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15c99:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15c9d:	48 89 d6             	mov    %rdx,%rsi
   15ca0:	48 89 c7             	mov    %rax,%rdi
   15ca3:	e8 38 22 00 00       	call   17ee0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   15ca8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   15cac:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15cb0:	48 89 d6             	mov    %rdx,%rsi
   15cb3:	48 89 c7             	mov    %rax,%rdi
   15cb6:	e8 59 22 00 00       	call   17f14 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   15cbb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15cbf:	48 89 c7             	mov    %rax,%rdi
   15cc2:	e8 81 46 ff ff       	call   a348 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   15cc7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15ccb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15ccf:	48 89 d6             	mov    %rdx,%rsi
   15cd2:	48 89 c7             	mov    %rax,%rdi
   15cd5:	e8 60 22 00 00       	call   17f3a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   15cda:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15cde:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15ce2:	48 89 d6             	mov    %rdx,%rsi
   15ce5:	48 89 c7             	mov    %rax,%rdi
   15ce8:	e8 4d 22 00 00       	call   17f3a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   15ced:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15cf1:	48 89 c7             	mov    %rax,%rdi
   15cf4:	e8 03 57 ff ff       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15cf9:	48 89 c3             	mov    %rax,%rbx
   15cfc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d00:	48 89 c7             	mov    %rax,%rdi
   15d03:	e8 f4 56 ff ff       	call   b3fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15d08:	48 89 de             	mov    %rbx,%rsi
   15d0b:	48 89 c7             	mov    %rax,%rdi
   15d0e:	e8 7f 22 00 00       	call   17f92 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   15d13:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15d17:	48 89 c7             	mov    %rax,%rdi
   15d1a:	e8 bb 46 ff ff       	call   a3da <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   15d1f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15d23:	c9                   	leave
   15d24:	c3                   	ret
   15d25:	90                   	nop

0000000000015d26 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   15d26:	55                   	push   %rbp
   15d27:	48 89 e5             	mov    %rsp,%rbp
   15d2a:	53                   	push   %rbx
   15d2b:	48 83 ec 38          	sub    $0x38,%rsp
   15d2f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15d33:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   15d37:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15d3c:	0f 84 e7 01 00 00    	je     15f29 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   15d42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d46:	48 89 c7             	mov    %rax,%rdi
   15d49:	e8 1c ea ff ff       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   15d4e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15d52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d56:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   15d5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d5e:	48 8b 40 08          	mov    0x8(%rax),%rax
   15d62:	48 29 c2             	sub    %rax,%rdx
   15d65:	48 89 d0             	mov    %rdx,%rax
   15d68:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15d6c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   15d70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d74:	48 89 c7             	mov    %rax,%rdi
   15d77:	e8 36 22 00 00       	call   17fb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15d7c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15d80:	72 16                	jb     15d98 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   15d82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d86:	48 89 c7             	mov    %rax,%rdi
   15d89:	e8 24 22 00 00       	call   17fb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15d8e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15d92:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15d96:	73 07                	jae    15d9f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   15d98:	b8 01 00 00 00       	mov    $0x1,%eax
   15d9d:	eb 05                	jmp    15da4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   15d9f:	b8 00 00 00 00       	mov    $0x0,%eax
   15da4:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   15da6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15daa:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15dae:	72 33                	jb     15de3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   15db0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15db4:	48 89 c7             	mov    %rax,%rdi
   15db7:	e8 c2 09 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15dbc:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15dbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15dc3:	48 8b 40 08          	mov    0x8(%rax),%rax
   15dc7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15dcb:	48 89 ce             	mov    %rcx,%rsi
   15dce:	48 89 c7             	mov    %rax,%rdi
   15dd1:	e8 fe 21 00 00       	call   17fd4 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   15dd6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15dda:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   15dde:	e9 46 01 00 00       	jmp    15f29 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15de3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15de7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15deb:	48 8d 15 de ad 00 00 	lea    0xadde(%rip),%rdx        # 20bd0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   15df2:	48 89 ce             	mov    %rcx,%rsi
   15df5:	48 89 c7             	mov    %rax,%rdi
   15df8:	e8 01 22 00 00       	call   17ffe <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   15dfd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   15e01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15e09:	48 89 d6             	mov    %rdx,%rsi
   15e0c:	48 89 c7             	mov    %rax,%rdi
   15e0f:	e8 b2 22 00 00       	call   180c6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   15e14:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   15e18:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e1c:	48 89 c7             	mov    %rax,%rdi
   15e1f:	e8 5a 09 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15e24:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   15e27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e2b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   15e32:	00 
   15e33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e37:	48 01 c1             	add    %rax,%rcx
   15e3a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15e3e:	48 89 c6             	mov    %rax,%rsi
   15e41:	48 89 cf             	mov    %rcx,%rdi
   15e44:	e8 8b 21 00 00       	call   17fd4 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   15e49:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e4d:	48 89 c7             	mov    %rax,%rdi
   15e50:	e8 29 09 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15e55:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   15e58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e5c:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15e60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e64:	48 8b 00             	mov    (%rax),%rax
   15e67:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15e6b:	48 89 c7             	mov    %rax,%rdi
   15e6e:	e8 86 22 00 00       	call   180f9 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   15e73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   15e77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e7b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   15e7f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e83:	48 8b 12             	mov    (%rdx),%rdx
   15e86:	48 29 d1             	sub    %rdx,%rcx
   15e89:	48 c1 f9 03          	sar    $0x3,%rcx
   15e8d:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15e90:	48 89 d6             	mov    %rdx,%rsi
   15e93:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e97:	48 8b 0a             	mov    (%rdx),%rcx
   15e9a:	48 89 f2             	mov    %rsi,%rdx
   15e9d:	48 89 ce             	mov    %rcx,%rsi
   15ea0:	48 89 c7             	mov    %rax,%rdi
   15ea3:	e8 3c 13 00 00       	call   171e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   15ea8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15eac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15eb0:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15eb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15eb7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15ebb:	48 01 d0             	add    %rdx,%rax
   15ebe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ec5:	00 
   15ec6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15eca:	48 01 c2             	add    %rax,%rdx
   15ecd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15ed1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15ed5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ed9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ee0:	00 
   15ee1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15ee5:	48 01 c2             	add    %rax,%rdx
   15ee8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15eec:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15ef0:	eb 37                	jmp    15f29 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15ef2:	48 89 c7             	mov    %rax,%rdi
   15ef5:	e8 66 e2 fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   15efa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15efe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15f02:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   15f06:	48 89 ce             	mov    %rcx,%rsi
   15f09:	48 89 c7             	mov    %rax,%rdi
   15f0c:	e8 d3 12 00 00       	call   171e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15f11:	e8 5a e8 fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   15f16:	48 89 c3             	mov    %rax,%rbx
   15f19:	e8 42 e9 fe ff       	call   4860 <__cxa_end_catch@plt>
   15f1e:	48 89 d8             	mov    %rbx,%rax
   15f21:	48 89 c7             	mov    %rax,%rdi
   15f24:	e8 d7 e9 fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   15f29:	90                   	nop
   15f2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15f2e:	c9                   	leave
   15f2f:	c3                   	ret

0000000000015f30 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   15f30:	55                   	push   %rbp
   15f31:	48 89 e5             	mov    %rsp,%rbp
   15f34:	48 83 ec 20          	sub    $0x20,%rsp
   15f38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15f3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   15f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f44:	48 8b 40 08          	mov    0x8(%rax),%rax
   15f48:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   15f4c:	48 c1 f8 03          	sar    $0x3,%rax
   15f50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15f54:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15f59:	74 32                	je     15f8d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   15f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f5f:	48 89 c7             	mov    %rax,%rdi
   15f62:	e8 17 08 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15f67:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   15f6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f6e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15f72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15f76:	48 89 ce             	mov    %rcx,%rsi
   15f79:	48 89 c7             	mov    %rax,%rdi
   15f7c:	e8 0b 08 00 00       	call   1678c <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   15f81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f85:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15f89:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15f8d:	90                   	nop
   15f8e:	c9                   	leave
   15f8f:	c3                   	ret

0000000000015f90 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   15f90:	55                   	push   %rbp
   15f91:	48 89 e5             	mov    %rsp,%rbp
   15f94:	48 83 ec 10          	sub    $0x10,%rsp
   15f98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   15fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fa4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15fa8:	48 89 d6             	mov    %rdx,%rsi
   15fab:	48 89 c7             	mov    %rax,%rdi
   15fae:	e8 78 21 00 00       	call   1812b <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   15fb3:	c9                   	leave
   15fb4:	c3                   	ret
   15fb5:	90                   	nop

0000000000015fb6 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15fb6:	55                   	push   %rbp
   15fb7:	48 89 e5             	mov    %rsp,%rbp
   15fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fbe:	90                   	nop
   15fbf:	5d                   	pop    %rbp
   15fc0:	c3                   	ret
   15fc1:	90                   	nop

0000000000015fc2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15fc2:	55                   	push   %rbp
   15fc3:	48 89 e5             	mov    %rsp,%rbp
   15fc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fca:	90                   	nop
   15fcb:	5d                   	pop    %rbp
   15fcc:	c3                   	ret
   15fcd:	90                   	nop

0000000000015fce <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   15fce:	55                   	push   %rbp
   15fcf:	48 89 e5             	mov    %rsp,%rbp
   15fd2:	48 83 ec 10          	sub    $0x10,%rsp
   15fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fde:	48 89 c7             	mov    %rax,%rdi
   15fe1:	e8 f0 e4 ff ff       	call   144d6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   15fe6:	90                   	nop
   15fe7:	c9                   	leave
   15fe8:	c3                   	ret
   15fe9:	90                   	nop

0000000000015fea <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15fea:	55                   	push   %rbp
   15feb:	48 89 e5             	mov    %rsp,%rbp
   15fee:	48 83 ec 10          	sub    $0x10,%rsp
   15ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ff6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   15ffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ffe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16002:	48 89 d6             	mov    %rdx,%rsi
   16005:	48 89 c7             	mov    %rax,%rdi
   16008:	e8 3f 21 00 00       	call   1814c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   1600d:	90                   	nop
   1600e:	c9                   	leave
   1600f:	c3                   	ret

0000000000016010 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   16010:	55                   	push   %rbp
   16011:	48 89 e5             	mov    %rsp,%rbp
   16014:	48 83 ec 10          	sub    $0x10,%rsp
   16018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1601c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16020:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16028:	48 8b 00             	mov    (%rax),%rax
   1602b:	48 29 c2             	sub    %rax,%rdx
   1602e:	48 c1 fa 04          	sar    $0x4,%rdx
   16032:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   16039:	e3 38 8e 
   1603c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   16040:	48 89 c2             	mov    %rax,%rdx
   16043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16047:	48 8b 08             	mov    (%rax),%rcx
   1604a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1604e:	48 89 ce             	mov    %rcx,%rsi
   16051:	48 89 c7             	mov    %rax,%rdi
   16054:	e8 25 21 00 00       	call   1817e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   16059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1605d:	48 89 c7             	mov    %rax,%rdi
   16060:	e8 69 ff ff ff       	call   15fce <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   16065:	90                   	nop
   16066:	c9                   	leave
   16067:	c3                   	ret

0000000000016068 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   16068:	55                   	push   %rbp
   16069:	48 89 e5             	mov    %rsp,%rbp
   1606c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16074:	48 8b 00             	mov    (%rax),%rax
   16077:	5d                   	pop    %rbp
   16078:	c3                   	ret
   16079:	90                   	nop

000000000001607a <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   1607a:	55                   	push   %rbp
   1607b:	48 89 e5             	mov    %rsp,%rbp
   1607e:	53                   	push   %rbx
   1607f:	48 83 ec 18          	sub    $0x18,%rsp
   16083:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16087:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1608b:	48 89 c7             	mov    %rax,%rdi
   1608e:	e8 d5 ff ff ff       	call   16068 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   16093:	48 89 c3             	mov    %rax,%rbx
   16096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1609a:	48 89 c7             	mov    %rax,%rdi
   1609d:	e8 12 21 00 00       	call   181b4 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   160a2:	48 89 c2             	mov    %rax,%rdx
   160a5:	48 89 d0             	mov    %rdx,%rax
   160a8:	48 c1 e0 03          	shl    $0x3,%rax
   160ac:	48 01 d0             	add    %rdx,%rax
   160af:	48 c1 e0 04          	shl    $0x4,%rax
   160b3:	48 01 d8             	add    %rbx,%rax
   160b6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   160ba:	c9                   	leave
   160bb:	c3                   	ret

00000000000160bc <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   160bc:	55                   	push   %rbp
   160bd:	48 89 e5             	mov    %rsp,%rbp
   160c0:	48 83 ec 10          	sub    $0x10,%rsp
   160c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   160c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   160cc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   160d0:	48 89 c7             	mov    %rax,%rdi
   160d3:	e8 ee 20 00 00       	call   181c6 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   160d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   160e0:	48 89 d6             	mov    %rdx,%rsi
   160e3:	48 89 c7             	mov    %rax,%rdi
   160e6:	e8 e6 20 00 00       	call   181d1 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   160eb:	c9                   	leave
   160ec:	c3                   	ret
   160ed:	90                   	nop

00000000000160ee <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   160ee:	55                   	push   %rbp
   160ef:	48 89 e5             	mov    %rsp,%rbp
   160f2:	53                   	push   %rbx
   160f3:	48 83 ec 38          	sub    $0x38,%rsp
   160f7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   160fb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   160ff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   16103:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16107:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1610b:	48 89 d6             	mov    %rdx,%rsi
   1610e:	48 89 c7             	mov    %rax,%rdi
   16111:	e8 a6 ff ff ff       	call   160bc <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   16116:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1611a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1611e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16122:	48 89 c7             	mov    %rax,%rdi
   16125:	e8 7e 00 00 00       	call   161a8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   1612a:	48 89 c2             	mov    %rax,%rdx
   1612d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16131:	48 89 d6             	mov    %rdx,%rsi
   16134:	48 89 c7             	mov    %rax,%rdi
   16137:	e8 c0 20 00 00       	call   181fc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   1613c:	48 89 c6             	mov    %rax,%rsi
   1613f:	48 89 df             	mov    %rbx,%rdi
   16142:	e8 15 21 00 00       	call   1825c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   16147:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1614b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1614e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16152:	48 8b 08             	mov    (%rax),%rcx
   16155:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16159:	48 89 d0             	mov    %rdx,%rax
   1615c:	48 c1 e0 03          	shl    $0x3,%rax
   16160:	48 01 d0             	add    %rdx,%rax
   16163:	48 c1 e0 04          	shl    $0x4,%rax
   16167:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1616b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1616f:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   16173:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16177:	48 89 c7             	mov    %rax,%rdi
   1617a:	e8 29 00 00 00       	call   161a8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   1617f:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   16182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16186:	48 8b 10             	mov    (%rax),%rdx
   16189:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1618d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16191:	48 89 c7             	mov    %rax,%rdi
   16194:	e8 f6 20 00 00       	call   1828f <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   16199:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1619d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   161a1:	90                   	nop
   161a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   161a6:	c9                   	leave
   161a7:	c3                   	ret

00000000000161a8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   161a8:	55                   	push   %rbp
   161a9:	48 89 e5             	mov    %rsp,%rbp
   161ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   161b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161b4:	5d                   	pop    %rbp
   161b5:	c3                   	ret

00000000000161b6 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   161b6:	55                   	push   %rbp
   161b7:	48 89 e5             	mov    %rsp,%rbp
   161ba:	48 83 ec 20          	sub    $0x20,%rsp
   161be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   161ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   161ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161d2:	48 89 d6             	mov    %rdx,%rsi
   161d5:	48 89 c7             	mov    %rax,%rdi
   161d8:	e8 e3 20 00 00       	call   182c0 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   161dd:	90                   	nop
   161de:	c9                   	leave
   161df:	c3                   	ret

00000000000161e0 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   161e0:	55                   	push   %rbp
   161e1:	48 89 e5             	mov    %rsp,%rbp
   161e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   161e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161ec:	48 8b 50 08          	mov    0x8(%rax),%rdx
   161f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161f4:	48 8b 00             	mov    (%rax),%rax
   161f7:	48 29 c2             	sub    %rax,%rdx
   161fa:	48 c1 fa 04          	sar    $0x4,%rdx
   161fe:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   16205:	e3 38 8e 
   16208:	48 0f af c2          	imul   %rdx,%rax
   1620c:	5d                   	pop    %rbp
   1620d:	c3                   	ret

000000000001620e <_ZNSaIP12VkPipeline_TEC1Ev>:
   1620e:	55                   	push   %rbp
   1620f:	48 89 e5             	mov    %rsp,%rbp
   16212:	48 83 ec 10          	sub    $0x10,%rsp
   16216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1621a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1621e:	48 89 c7             	mov    %rax,%rdi
   16221:	e8 c0 20 00 00       	call   182e6 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   16226:	90                   	nop
   16227:	c9                   	leave
   16228:	c3                   	ret
   16229:	90                   	nop

000000000001622a <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1622a:	55                   	push   %rbp
   1622b:	48 89 e5             	mov    %rsp,%rbp
   1622e:	48 83 ec 10          	sub    $0x10,%rsp
   16232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1623a:	48 89 c7             	mov    %rax,%rdi
   1623d:	e8 b0 20 00 00       	call   182f2 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   16242:	90                   	nop
   16243:	c9                   	leave
   16244:	c3                   	ret
   16245:	90                   	nop

0000000000016246 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   16246:	55                   	push   %rbp
   16247:	48 89 e5             	mov    %rsp,%rbp
   1624a:	53                   	push   %rbx
   1624b:	48 83 ec 28          	sub    $0x28,%rsp
   1624f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16253:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16257:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   1625b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1625f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16263:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16267:	48 89 d6             	mov    %rdx,%rsi
   1626a:	48 89 c7             	mov    %rax,%rdi
   1626d:	e8 8b 20 00 00       	call   182fd <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   16272:	48 89 c1             	mov    %rax,%rcx
   16275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16279:	48 89 c2             	mov    %rax,%rdx
   1627c:	48 89 ce             	mov    %rcx,%rsi
   1627f:	48 89 df             	mov    %rbx,%rdi
   16282:	e8 d7 20 00 00       	call   1835e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   16287:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1628b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1628f:	48 89 d6             	mov    %rdx,%rsi
   16292:	48 89 c7             	mov    %rax,%rdi
   16295:	e8 22 21 00 00       	call   183bc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   1629a:	eb 1a                	jmp    162b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   1629c:	48 89 c3             	mov    %rax,%rbx
   1629f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162a3:	48 89 c7             	mov    %rax,%rdi
   162a6:	e8 59 00 00 00       	call   16304 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   162ab:	48 89 d8             	mov    %rbx,%rax
   162ae:	48 89 c7             	mov    %rax,%rdi
   162b1:	e8 4a e6 fe ff       	call   4900 <_Unwind_Resume@plt>
   162b6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   162ba:	c9                   	leave
   162bb:	c3                   	ret

00000000000162bc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   162bc:	55                   	push   %rbp
   162bd:	48 89 e5             	mov    %rsp,%rbp
   162c0:	48 83 ec 10          	sub    $0x10,%rsp
   162c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   162c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162cc:	48 8b 10             	mov    (%rax),%rdx
   162cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162d3:	48 89 d6             	mov    %rdx,%rsi
   162d6:	48 89 c7             	mov    %rax,%rdi
   162d9:	e8 1e 21 00 00       	call   183fc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   162de:	c9                   	leave
   162df:	c3                   	ret

00000000000162e0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   162e0:	55                   	push   %rbp
   162e1:	48 89 e5             	mov    %rsp,%rbp
   162e4:	48 83 ec 10          	sub    $0x10,%rsp
   162e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   162ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162f0:	48 8b 10             	mov    (%rax),%rdx
   162f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162f7:	48 89 d6             	mov    %rdx,%rsi
   162fa:	48 89 c7             	mov    %rax,%rdi
   162fd:	e8 0c 21 00 00       	call   1840e <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   16302:	c9                   	leave
   16303:	c3                   	ret

0000000000016304 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   16304:	55                   	push   %rbp
   16305:	48 89 e5             	mov    %rsp,%rbp
   16308:	48 83 ec 10          	sub    $0x10,%rsp
   1630c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   16310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16314:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1631c:	48 8b 00             	mov    (%rax),%rax
   1631f:	48 29 c2             	sub    %rax,%rdx
   16322:	48 89 d0             	mov    %rdx,%rax
   16325:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   16329:	48 89 c2             	mov    %rax,%rdx
   1632c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16330:	48 8b 08             	mov    (%rax),%rcx
   16333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16337:	48 89 ce             	mov    %rcx,%rsi
   1633a:	48 89 c7             	mov    %rax,%rdi
   1633d:	e8 04 21 00 00       	call   18446 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   16342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16346:	48 89 c7             	mov    %rax,%rdi
   16349:	e8 70 e2 ff ff       	call   145be <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1634e:	90                   	nop
   1634f:	c9                   	leave
   16350:	c3                   	ret
   16351:	90                   	nop

0000000000016352 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   16352:	55                   	push   %rbp
   16353:	48 89 e5             	mov    %rsp,%rbp
   16356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1635a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1635e:	5d                   	pop    %rbp
   1635f:	c3                   	ret

0000000000016360 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   16360:	55                   	push   %rbp
   16361:	48 89 e5             	mov    %rsp,%rbp
   16364:	48 83 ec 20          	sub    $0x20,%rsp
   16368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1636c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16370:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   16374:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1637c:	48 89 d6             	mov    %rdx,%rsi
   1637f:	48 89 c7             	mov    %rax,%rdi
   16382:	e8 f4 20 00 00       	call   1847b <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   16387:	90                   	nop
   16388:	c9                   	leave
   16389:	c3                   	ret

000000000001638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1638a:	55                   	push   %rbp
   1638b:	48 89 e5             	mov    %rsp,%rbp
   1638e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16396:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1639a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1639e:	48 8b 00             	mov    (%rax),%rax
   163a1:	48 29 c2             	sub    %rax,%rdx
   163a4:	48 89 d0             	mov    %rdx,%rax
   163a7:	48 c1 f8 03          	sar    $0x3,%rax
   163ab:	5d                   	pop    %rbp
   163ac:	c3                   	ret
   163ad:	90                   	nop

00000000000163ae <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   163ae:	55                   	push   %rbp
   163af:	48 89 e5             	mov    %rsp,%rbp
   163b2:	53                   	push   %rbx
   163b3:	48 83 ec 38          	sub    $0x38,%rsp
   163b7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   163bb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   163bf:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   163c4:	0f 84 e7 01 00 00    	je     165b1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   163ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   163ce:	48 89 c7             	mov    %rax,%rdi
   163d1:	e8 b4 ff ff ff       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   163d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   163da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   163de:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   163e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   163e6:	48 8b 40 08          	mov    0x8(%rax),%rax
   163ea:	48 29 c2             	sub    %rax,%rdx
   163ed:	48 89 d0             	mov    %rdx,%rax
   163f0:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   163f4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   163f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   163fc:	48 89 c7             	mov    %rax,%rdi
   163ff:	e8 9e 20 00 00       	call   184a2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   16404:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16408:	72 16                	jb     16420 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   1640a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1640e:	48 89 c7             	mov    %rax,%rdi
   16411:	e8 8c 20 00 00       	call   184a2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   16416:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1641a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1641e:	73 07                	jae    16427 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   16420:	b8 01 00 00 00       	mov    $0x1,%eax
   16425:	eb 05                	jmp    1642c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   16427:	b8 00 00 00 00       	mov    $0x0,%eax
   1642c:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1642e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16432:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   16436:	72 33                	jb     1646b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   16438:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1643c:	48 89 c7             	mov    %rax,%rdi
   1643f:	e8 62 0e 00 00       	call   172a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16444:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   16447:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1644b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1644f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16453:	48 89 ce             	mov    %rcx,%rsi
   16456:	48 89 c7             	mov    %rax,%rdi
   16459:	e8 66 20 00 00       	call   184c4 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1645e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16462:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   16466:	e9 46 01 00 00       	jmp    165b1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1646b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1646f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16473:	48 8d 15 56 a7 00 00 	lea    0xa756(%rip),%rdx        # 20bd0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   1647a:	48 89 ce             	mov    %rcx,%rsi
   1647d:	48 89 c7             	mov    %rax,%rdi
   16480:	e8 69 20 00 00       	call   184ee <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   16485:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   16489:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1648d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16491:	48 89 d6             	mov    %rdx,%rsi
   16494:	48 89 c7             	mov    %rax,%rdi
   16497:	e8 1a 21 00 00       	call   185b6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   1649c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   164a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164a4:	48 89 c7             	mov    %rax,%rdi
   164a7:	e8 fa 0d 00 00       	call   172a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   164ac:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   164af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164b3:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   164ba:	00 
   164bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   164bf:	48 01 c1             	add    %rax,%rcx
   164c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   164c6:	48 89 c6             	mov    %rax,%rsi
   164c9:	48 89 cf             	mov    %rcx,%rdi
   164cc:	e8 f3 1f 00 00       	call   184c4 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   164d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164d5:	48 89 c7             	mov    %rax,%rdi
   164d8:	e8 c9 0d 00 00       	call   172a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   164dd:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   164e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164e4:	48 8b 70 08          	mov    0x8(%rax),%rsi
   164e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164ec:	48 8b 00             	mov    (%rax),%rax
   164ef:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   164f3:	48 89 c7             	mov    %rax,%rdi
   164f6:	e8 ee 20 00 00       	call   185e9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   164fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   164ff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16503:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   16507:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1650b:	48 8b 12             	mov    (%rdx),%rdx
   1650e:	48 29 d1             	sub    %rdx,%rcx
   16511:	48 c1 f9 03          	sar    $0x3,%rcx
   16515:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   16518:	48 89 d6             	mov    %rdx,%rsi
   1651b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1651f:	48 8b 0a             	mov    (%rdx),%rcx
   16522:	48 89 f2             	mov    %rsi,%rdx
   16525:	48 89 ce             	mov    %rcx,%rsi
   16528:	48 89 c7             	mov    %rax,%rdi
   1652b:	e8 40 0d 00 00       	call   17270 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   16530:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16534:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16538:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1653b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1653f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16543:	48 01 d0             	add    %rdx,%rax
   16546:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1654d:	00 
   1654e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16552:	48 01 c2             	add    %rax,%rdx
   16555:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16559:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1655d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16561:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16568:	00 
   16569:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1656d:	48 01 c2             	add    %rax,%rdx
   16570:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16574:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   16578:	eb 37                	jmp    165b1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1657a:	48 89 c7             	mov    %rax,%rdi
   1657d:	e8 de db fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   16582:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16586:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1658a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1658e:	48 89 ce             	mov    %rcx,%rsi
   16591:	48 89 c7             	mov    %rax,%rdi
   16594:	e8 d7 0c 00 00       	call   17270 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   16599:	e8 d2 e1 fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   1659e:	48 89 c3             	mov    %rax,%rbx
   165a1:	e8 ba e2 fe ff       	call   4860 <__cxa_end_catch@plt>
   165a6:	48 89 d8             	mov    %rbx,%rax
   165a9:	48 89 c7             	mov    %rax,%rdi
   165ac:	e8 4f e3 fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   165b1:	90                   	nop
   165b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   165b6:	c9                   	leave
   165b7:	c3                   	ret

00000000000165b8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   165b8:	55                   	push   %rbp
   165b9:	48 89 e5             	mov    %rsp,%rbp
   165bc:	48 83 ec 20          	sub    $0x20,%rsp
   165c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   165c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   165c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165cc:	48 8b 40 08          	mov    0x8(%rax),%rax
   165d0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   165d4:	48 c1 f8 03          	sar    $0x3,%rax
   165d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   165dc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   165e1:	74 32                	je     16615 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   165e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165e7:	48 89 c7             	mov    %rax,%rdi
   165ea:	e8 b7 0c 00 00       	call   172a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   165ef:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   165f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165f6:	48 8b 48 08          	mov    0x8(%rax),%rcx
   165fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   165fe:	48 89 ce             	mov    %rcx,%rsi
   16601:	48 89 c7             	mov    %rax,%rdi
   16604:	e8 ab 0c 00 00       	call   172b4 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   16609:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1660d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16611:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   16615:	90                   	nop
   16616:	c9                   	leave
   16617:	c3                   	ret

0000000000016618 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16618:	55                   	push   %rbp
   16619:	48 89 e5             	mov    %rsp,%rbp
   1661c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16620:	90                   	nop
   16621:	5d                   	pop    %rbp
   16622:	c3                   	ret
   16623:	90                   	nop

0000000000016624 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16624:	55                   	push   %rbp
   16625:	48 89 e5             	mov    %rsp,%rbp
   16628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1662c:	90                   	nop
   1662d:	5d                   	pop    %rbp
   1662e:	c3                   	ret
   1662f:	90                   	nop

0000000000016630 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16630:	55                   	push   %rbp
   16631:	48 89 e5             	mov    %rsp,%rbp
   16634:	48 83 ec 10          	sub    $0x10,%rsp
   16638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1663c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   16640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16644:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16648:	48 89 d6             	mov    %rdx,%rsi
   1664b:	48 89 c7             	mov    %rax,%rdi
   1664e:	e8 c9 1f 00 00       	call   1861c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   16653:	90                   	nop
   16654:	c9                   	leave
   16655:	c3                   	ret

0000000000016656 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   16656:	55                   	push   %rbp
   16657:	48 89 e5             	mov    %rsp,%rbp
   1665a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1665e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16662:	48 8b 00             	mov    (%rax),%rax
   16665:	5d                   	pop    %rbp
   16666:	c3                   	ret
   16667:	90                   	nop

0000000000016668 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   16668:	55                   	push   %rbp
   16669:	48 89 e5             	mov    %rsp,%rbp
   1666c:	53                   	push   %rbx
   1666d:	48 83 ec 18          	sub    $0x18,%rsp
   16671:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16675:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16679:	48 89 c7             	mov    %rax,%rdi
   1667c:	e8 d5 ff ff ff       	call   16656 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   16681:	48 89 c3             	mov    %rax,%rbx
   16684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16688:	48 89 c7             	mov    %rax,%rdi
   1668b:	e8 be 1f 00 00       	call   1864e <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   16690:	48 c1 e0 03          	shl    $0x3,%rax
   16694:	48 01 d8             	add    %rbx,%rax
   16697:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1669b:	c9                   	leave
   1669c:	c3                   	ret

000000000001669d <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   1669d:	55                   	push   %rbp
   1669e:	48 89 e5             	mov    %rsp,%rbp
   166a1:	48 83 ec 10          	sub    $0x10,%rsp
   166a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   166ad:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   166b1:	48 89 c7             	mov    %rax,%rdi
   166b4:	e8 a7 1f 00 00       	call   18660 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   166b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166bd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   166c1:	48 89 d6             	mov    %rdx,%rsi
   166c4:	48 89 c7             	mov    %rax,%rdi
   166c7:	e8 9f 1f 00 00       	call   1866b <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   166cc:	c9                   	leave
   166cd:	c3                   	ret

00000000000166ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   166ce:	55                   	push   %rbp
   166cf:	48 89 e5             	mov    %rsp,%rbp
   166d2:	53                   	push   %rbx
   166d3:	48 83 ec 38          	sub    $0x38,%rsp
   166d7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   166db:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   166df:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   166e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   166e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   166eb:	48 89 d6             	mov    %rdx,%rsi
   166ee:	48 89 c7             	mov    %rax,%rdi
   166f1:	e8 a7 ff ff ff       	call   1669d <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   166f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   166fa:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   166fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16702:	48 89 c7             	mov    %rax,%rdi
   16705:	e8 74 00 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1670a:	48 89 c2             	mov    %rax,%rdx
   1670d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16711:	48 89 d6             	mov    %rdx,%rsi
   16714:	48 89 c7             	mov    %rax,%rdi
   16717:	e8 69 1f 00 00       	call   18685 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   1671c:	48 89 c6             	mov    %rax,%rsi
   1671f:	48 89 df             	mov    %rbx,%rdi
   16722:	e8 9f 19 00 00       	call   180c6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   16727:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1672b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1672e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16732:	48 8b 00             	mov    (%rax),%rax
   16735:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16739:	48 c1 e2 03          	shl    $0x3,%rdx
   1673d:	48 01 c2             	add    %rax,%rdx
   16740:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16744:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   16748:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1674c:	48 89 c7             	mov    %rax,%rdi
   1674f:	e8 2a 00 00 00       	call   1677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16754:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   16757:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1675b:	48 8b 10             	mov    (%rax),%rdx
   1675e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   16762:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16766:	48 89 c7             	mov    %rax,%rdi
   16769:	e8 77 1f 00 00       	call   186e5 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   1676e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16772:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   16776:	90                   	nop
   16777:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1677b:	c9                   	leave
   1677c:	c3                   	ret
   1677d:	90                   	nop

000000000001677e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1677e:	55                   	push   %rbp
   1677f:	48 89 e5             	mov    %rsp,%rbp
   16782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1678a:	5d                   	pop    %rbp
   1678b:	c3                   	ret

000000000001678c <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1678c:	55                   	push   %rbp
   1678d:	48 89 e5             	mov    %rsp,%rbp
   16790:	48 83 ec 20          	sub    $0x20,%rsp
   16794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16798:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1679c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   167a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   167a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167a8:	48 89 d6             	mov    %rdx,%rsi
   167ab:	48 89 c7             	mov    %rax,%rdi
   167ae:	e8 63 1f 00 00       	call   18716 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   167b3:	90                   	nop
   167b4:	c9                   	leave
   167b5:	c3                   	ret

00000000000167b6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   167b6:	55                   	push   %rbp
   167b7:	48 89 e5             	mov    %rsp,%rbp
   167ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   167c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   167c6:	5d                   	pop    %rbp
   167c7:	c3                   	ret

00000000000167c8 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   167c8:	55                   	push   %rbp
   167c9:	48 89 e5             	mov    %rsp,%rbp
   167cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   167d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   167d8:	48 8b 10             	mov    (%rax),%rdx
   167db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167df:	48 89 10             	mov    %rdx,(%rax)
   167e2:	90                   	nop
   167e3:	5d                   	pop    %rbp
   167e4:	c3                   	ret
   167e5:	90                   	nop

00000000000167e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   167e6:	55                   	push   %rbp
   167e7:	48 89 e5             	mov    %rsp,%rbp
   167ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   167ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167f2:	5d                   	pop    %rbp
   167f3:	c3                   	ret

00000000000167f4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   167f4:	55                   	push   %rbp
   167f5:	48 89 e5             	mov    %rsp,%rbp
   167f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   16800:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16804:	48 8b 10             	mov    (%rax),%rdx
   16807:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1680b:	48 89 10             	mov    %rdx,(%rax)
   1680e:	90                   	nop
   1680f:	5d                   	pop    %rbp
   16810:	c3                   	ret
   16811:	90                   	nop

0000000000016812 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   16812:	55                   	push   %rbp
   16813:	48 89 e5             	mov    %rsp,%rbp
   16816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1681a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1681e:	5d                   	pop    %rbp
   1681f:	c3                   	ret

0000000000016820 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   16820:	55                   	push   %rbp
   16821:	48 89 e5             	mov    %rsp,%rbp
   16824:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   16828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1682c:	5d                   	pop    %rbp
   1682d:	c3                   	ret

000000000001682e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   1682e:	55                   	push   %rbp
   1682f:	48 89 e5             	mov    %rsp,%rbp
   16832:	53                   	push   %rbx
   16833:	48 83 ec 38          	sub    $0x38,%rsp
   16837:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1683b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   1683f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16843:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16847:	48 89 d6             	mov    %rdx,%rsi
   1684a:	48 89 c7             	mov    %rax,%rdi
   1684d:	e8 ea 1e 00 00       	call   1873c <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>
   16852:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   16856:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1685a:	48 89 d6             	mov    %rdx,%rsi
   1685d:	48 89 c7             	mov    %rax,%rdi
   16860:	e8 0b 1f 00 00       	call   18770 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   16865:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16869:	48 89 c7             	mov    %rax,%rdi
   1686c:	e8 5f fe fe ff       	call   66d0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   16871:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16875:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   16879:	48 89 d6             	mov    %rdx,%rsi
   1687c:	48 89 c7             	mov    %rax,%rdi
   1687f:	e8 12 1f 00 00       	call   18796 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   16884:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   16888:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1688c:	48 89 d6             	mov    %rdx,%rsi
   1688f:	48 89 c7             	mov    %rax,%rdi
   16892:	e8 ff 1e 00 00       	call   18796 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   16897:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1689b:	48 89 c7             	mov    %rax,%rdi
   1689e:	e8 8b 00 ff ff       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   168a3:	48 89 c3             	mov    %rax,%rbx
   168a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   168aa:	48 89 c7             	mov    %rax,%rdi
   168ad:	e8 7c 00 ff ff       	call   692e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   168b2:	48 89 de             	mov    %rbx,%rsi
   168b5:	48 89 c7             	mov    %rax,%rdi
   168b8:	e8 31 1f 00 00       	call   187ee <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>
      }
   168bd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   168c1:	48 89 c7             	mov    %rax,%rdi
   168c4:	e8 99 fe fe ff       	call   6762 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   168c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   168cd:	c9                   	leave
   168ce:	c3                   	ret
   168cf:	90                   	nop

00000000000168d0 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   168d0:	55                   	push   %rbp
   168d1:	48 89 e5             	mov    %rsp,%rbp
   168d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   168dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168e0:	5d                   	pop    %rbp
   168e1:	c3                   	ret

00000000000168e2 <_ZNKSt6vectorItSaItEE11_M_data_ptrItEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   168e2:	55                   	push   %rbp
   168e3:	48 89 e5             	mov    %rsp,%rbp
   168e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   168ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168f2:	5d                   	pop    %rbp
   168f3:	c3                   	ret

00000000000168f4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   168f4:	55                   	push   %rbp
   168f5:	48 89 e5             	mov    %rsp,%rbp
   168f8:	53                   	push   %rbx
   168f9:	48 83 ec 38          	sub    $0x38,%rsp
   168fd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16901:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   16905:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1690a:	0f 84 e7 01 00 00    	je     16af7 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   16910:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16914:	48 89 c7             	mov    %rax,%rdi
   16917:	e8 fc e5 ff ff       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1691c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16920:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16924:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   16928:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1692c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16930:	48 29 c2             	sub    %rax,%rdx
   16933:	48 89 d0             	mov    %rdx,%rax
   16936:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1693a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1693e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16942:	48 89 c7             	mov    %rax,%rdi
   16945:	e8 c4 1e 00 00       	call   1880e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1694a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1694e:	72 16                	jb     16966 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   16950:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16954:	48 89 c7             	mov    %rax,%rdi
   16957:	e8 b2 1e 00 00       	call   1880e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1695c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16960:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16964:	73 07                	jae    1696d <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   16966:	b8 01 00 00 00       	mov    $0x1,%eax
   1696b:	eb 05                	jmp    16972 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   1696d:	b8 00 00 00 00       	mov    $0x0,%eax
   16972:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   16974:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16978:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1697c:	72 33                	jb     169b1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1697e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16982:	48 89 c7             	mov    %rax,%rdi
   16985:	e8 c8 05 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1698a:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1698d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16991:	48 8b 40 08          	mov    0x8(%rax),%rax
   16995:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16999:	48 89 ce             	mov    %rcx,%rsi
   1699c:	48 89 c7             	mov    %rax,%rdi
   1699f:	e8 8c 1e 00 00       	call   18830 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   169a4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   169a8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   169ac:	e9 46 01 00 00       	jmp    16af7 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   169b1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   169b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169b9:	48 8d 15 10 a2 00 00 	lea    0xa210(%rip),%rdx        # 20bd0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   169c0:	48 89 ce             	mov    %rcx,%rsi
   169c3:	48 89 c7             	mov    %rax,%rdi
   169c6:	e8 8f 1e 00 00       	call   1885a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   169cb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   169cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   169d7:	48 89 d6             	mov    %rdx,%rsi
   169da:	48 89 c7             	mov    %rax,%rdi
   169dd:	e8 40 1f 00 00       	call   18922 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   169e2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   169e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   169ea:	48 89 c7             	mov    %rax,%rdi
   169ed:	e8 60 05 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   169f2:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   169f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169f9:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   16a00:	00 
   16a01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a05:	48 01 c1             	add    %rax,%rcx
   16a08:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16a0c:	48 89 c6             	mov    %rax,%rsi
   16a0f:	48 89 cf             	mov    %rcx,%rdi
   16a12:	e8 19 1e 00 00       	call   18830 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   16a17:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a1b:	48 89 c7             	mov    %rax,%rdi
   16a1e:	e8 2f 05 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16a23:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   16a26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a2a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16a2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a32:	48 8b 00             	mov    (%rax),%rax
   16a35:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16a39:	48 89 c7             	mov    %rax,%rdi
   16a3c:	e8 14 1f 00 00       	call   18955 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   16a41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   16a45:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16a49:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   16a4d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16a51:	48 8b 12             	mov    (%rdx),%rdx
   16a54:	48 29 d1             	sub    %rdx,%rcx
   16a57:	48 c1 f9 03          	sar    $0x3,%rcx
   16a5b:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   16a5e:	48 89 d6             	mov    %rdx,%rsi
   16a61:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16a65:	48 8b 0a             	mov    (%rdx),%rcx
   16a68:	48 89 f2             	mov    %rsi,%rdx
   16a6b:	48 89 ce             	mov    %rcx,%rsi
   16a6e:	48 89 c7             	mov    %rax,%rdi
   16a71:	e8 96 08 00 00       	call   1730c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   16a76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a7a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16a7e:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   16a81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16a85:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16a89:	48 01 d0             	add    %rdx,%rax
   16a8c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16a93:	00 
   16a94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16a98:	48 01 c2             	add    %rax,%rdx
   16a9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a9f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   16aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16aa7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16aae:	00 
   16aaf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16ab3:	48 01 c2             	add    %rax,%rdx
   16ab6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16aba:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   16abe:	eb 37                	jmp    16af7 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   16ac0:	48 89 c7             	mov    %rax,%rdi
   16ac3:	e8 98 d6 fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   16ac8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16acc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16ad0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   16ad4:	48 89 ce             	mov    %rcx,%rsi
   16ad7:	48 89 c7             	mov    %rax,%rdi
   16ada:	e8 2d 08 00 00       	call   1730c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   16adf:	e8 8c dc fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   16ae4:	48 89 c3             	mov    %rax,%rbx
   16ae7:	e8 74 dd fe ff       	call   4860 <__cxa_end_catch@plt>
   16aec:	48 89 d8             	mov    %rbx,%rax
   16aef:	48 89 c7             	mov    %rax,%rdi
   16af2:	e8 09 de fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   16af7:	90                   	nop
   16af8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16afc:	c9                   	leave
   16afd:	c3                   	ret

0000000000016afe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   16afe:	55                   	push   %rbp
   16aff:	48 89 e5             	mov    %rsp,%rbp
   16b02:	48 83 ec 20          	sub    $0x20,%rsp
   16b06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   16b0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b12:	48 8b 40 08          	mov    0x8(%rax),%rax
   16b16:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   16b1a:	48 c1 f8 03          	sar    $0x3,%rax
   16b1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16b22:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16b27:	74 32                	je     16b5b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   16b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b2d:	48 89 c7             	mov    %rax,%rdi
   16b30:	e8 1d 04 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16b35:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   16b38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b3c:	48 8b 48 08          	mov    0x8(%rax),%rcx
   16b40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b44:	48 89 ce             	mov    %rcx,%rsi
   16b47:	48 89 c7             	mov    %rax,%rdi
   16b4a:	e8 11 04 00 00       	call   16f60 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   16b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16b57:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   16b5b:	90                   	nop
   16b5c:	c9                   	leave
   16b5d:	c3                   	ret

0000000000016b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16b5e:	55                   	push   %rbp
   16b5f:	48 89 e5             	mov    %rsp,%rbp
   16b62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b6a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b72:	48 8b 00             	mov    (%rax),%rax
   16b75:	48 29 c2             	sub    %rax,%rdx
   16b78:	48 89 d0             	mov    %rdx,%rax
   16b7b:	48 c1 f8 03          	sar    $0x3,%rax
   16b7f:	5d                   	pop    %rbp
   16b80:	c3                   	ret
   16b81:	90                   	nop

0000000000016b82 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   16b82:	55                   	push   %rbp
   16b83:	48 89 e5             	mov    %rsp,%rbp
   16b86:	53                   	push   %rbx
   16b87:	48 83 ec 38          	sub    $0x38,%rsp
   16b8b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   16b8f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   16b93:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   16b98:	0f 84 e7 01 00 00    	je     16d85 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   16b9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ba2:	48 89 c7             	mov    %rax,%rdi
   16ba5:	e8 b4 ff ff ff       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   16baa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16bae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16bb2:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   16bb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16bba:	48 8b 40 08          	mov    0x8(%rax),%rax
   16bbe:	48 29 c2             	sub    %rax,%rdx
   16bc1:	48 89 d0             	mov    %rdx,%rax
   16bc4:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   16bc8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   16bcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16bd0:	48 89 c7             	mov    %rax,%rdi
   16bd3:	e8 b0 1d 00 00       	call   18988 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   16bd8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16bdc:	72 16                	jb     16bf4 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   16bde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16be2:	48 89 c7             	mov    %rax,%rdi
   16be5:	e8 9e 1d 00 00       	call   18988 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   16bea:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16bee:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16bf2:	73 07                	jae    16bfb <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   16bf4:	b8 01 00 00 00       	mov    $0x1,%eax
   16bf9:	eb 05                	jmp    16c00 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   16bfb:	b8 00 00 00 00       	mov    $0x0,%eax
   16c00:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   16c02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c06:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   16c0a:	72 33                	jb     16c3f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   16c0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c10:	48 89 c7             	mov    %rax,%rdi
   16c13:	e8 b6 07 00 00       	call   173ce <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16c18:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   16c1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c1f:	48 8b 40 08          	mov    0x8(%rax),%rax
   16c23:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16c27:	48 89 ce             	mov    %rcx,%rsi
   16c2a:	48 89 c7             	mov    %rax,%rdi
   16c2d:	e8 78 1d 00 00       	call   189aa <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   16c32:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16c36:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   16c3a:	e9 46 01 00 00       	jmp    16d85 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   16c3f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16c43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c47:	48 8d 15 82 9f 00 00 	lea    0x9f82(%rip),%rdx        # 20bd0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d4>
   16c4e:	48 89 ce             	mov    %rcx,%rsi
   16c51:	48 89 c7             	mov    %rax,%rdi
   16c54:	e8 7b 1d 00 00       	call   189d4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   16c59:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   16c5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c61:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16c65:	48 89 d6             	mov    %rdx,%rsi
   16c68:	48 89 c7             	mov    %rax,%rdi
   16c6b:	e8 2c 1e 00 00       	call   18a9c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   16c70:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   16c74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c78:	48 89 c7             	mov    %rax,%rdi
   16c7b:	e8 4e 07 00 00       	call   173ce <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16c80:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   16c83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c87:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   16c8e:	00 
   16c8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16c93:	48 01 c1             	add    %rax,%rcx
   16c96:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16c9a:	48 89 c6             	mov    %rax,%rsi
   16c9d:	48 89 cf             	mov    %rcx,%rdi
   16ca0:	e8 05 1d 00 00       	call   189aa <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   16ca5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16ca9:	48 89 c7             	mov    %rax,%rdi
   16cac:	e8 1d 07 00 00       	call   173ce <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16cb1:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   16cb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16cb8:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16cbc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16cc0:	48 8b 00             	mov    (%rax),%rax
   16cc3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16cc7:	48 89 c7             	mov    %rax,%rdi
   16cca:	e8 00 1e 00 00       	call   18acf <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   16ccf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   16cd3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16cd7:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   16cdb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16cdf:	48 8b 12             	mov    (%rdx),%rdx
   16ce2:	48 29 d1             	sub    %rdx,%rcx
   16ce5:	48 c1 f9 03          	sar    $0x3,%rcx
   16ce9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   16cec:	48 89 d6             	mov    %rdx,%rsi
   16cef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16cf3:	48 8b 0a             	mov    (%rdx),%rcx
   16cf6:	48 89 f2             	mov    %rsi,%rdx
   16cf9:	48 89 ce             	mov    %rcx,%rsi
   16cfc:	48 89 c7             	mov    %rax,%rdi
   16cff:	e8 94 06 00 00       	call   17398 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   16d04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16d0c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   16d0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16d13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16d17:	48 01 d0             	add    %rdx,%rax
   16d1a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16d21:	00 
   16d22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16d26:	48 01 c2             	add    %rax,%rdx
   16d29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d2d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   16d31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16d35:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16d3c:	00 
   16d3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16d41:	48 01 c2             	add    %rax,%rdx
   16d44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d48:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   16d4c:	eb 37                	jmp    16d85 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   16d4e:	48 89 c7             	mov    %rax,%rdi
   16d51:	e8 0a d4 fe ff       	call   4160 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   16d56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d5a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16d5e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   16d62:	48 89 ce             	mov    %rcx,%rsi
   16d65:	48 89 c7             	mov    %rax,%rdi
   16d68:	e8 2b 06 00 00       	call   17398 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   16d6d:	e8 fe d9 fe ff       	call   4770 <__cxa_rethrow@plt>
		  __catch(...)
   16d72:	48 89 c3             	mov    %rax,%rbx
   16d75:	e8 e6 da fe ff       	call   4860 <__cxa_end_catch@plt>
   16d7a:	48 89 d8             	mov    %rbx,%rax
   16d7d:	48 89 c7             	mov    %rax,%rdi
   16d80:	e8 7b db fe ff       	call   4900 <_Unwind_Resume@plt>
    }
   16d85:	90                   	nop
   16d86:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16d8a:	c9                   	leave
   16d8b:	c3                   	ret

0000000000016d8c <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   16d8c:	55                   	push   %rbp
   16d8d:	48 89 e5             	mov    %rsp,%rbp
   16d90:	48 83 ec 20          	sub    $0x20,%rsp
   16d94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16d98:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   16d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16da0:	48 8b 40 08          	mov    0x8(%rax),%rax
   16da4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   16da8:	48 c1 f8 03          	sar    $0x3,%rax
   16dac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16db0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16db5:	74 32                	je     16de9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   16db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dbb:	48 89 c7             	mov    %rax,%rdi
   16dbe:	e8 0b 06 00 00       	call   173ce <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16dc3:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   16dc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dca:	48 8b 48 08          	mov    0x8(%rax),%rcx
   16dce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16dd2:	48 89 ce             	mov    %rcx,%rsi
   16dd5:	48 89 c7             	mov    %rax,%rdi
   16dd8:	e8 ff 05 00 00       	call   173dc <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   16ddd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16de1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16de5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   16de9:	90                   	nop
   16dea:	c9                   	leave
   16deb:	c3                   	ret

0000000000016dec <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16dec:	55                   	push   %rbp
   16ded:	48 89 e5             	mov    %rsp,%rbp
   16df0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16df4:	90                   	nop
   16df5:	5d                   	pop    %rbp
   16df6:	c3                   	ret
   16df7:	90                   	nop

0000000000016df8 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16df8:	55                   	push   %rbp
   16df9:	48 89 e5             	mov    %rsp,%rbp
   16dfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e00:	90                   	nop
   16e01:	5d                   	pop    %rbp
   16e02:	c3                   	ret
   16e03:	90                   	nop

0000000000016e04 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16e04:	55                   	push   %rbp
   16e05:	48 89 e5             	mov    %rsp,%rbp
   16e08:	48 83 ec 10          	sub    $0x10,%rsp
   16e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   16e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16e1c:	48 89 d6             	mov    %rdx,%rsi
   16e1f:	48 89 c7             	mov    %rax,%rdi
   16e22:	e8 db 1c 00 00       	call   18b02 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   16e27:	90                   	nop
   16e28:	c9                   	leave
   16e29:	c3                   	ret

0000000000016e2a <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   16e2a:	55                   	push   %rbp
   16e2b:	48 89 e5             	mov    %rsp,%rbp
   16e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e36:	48 8b 00             	mov    (%rax),%rax
   16e39:	5d                   	pop    %rbp
   16e3a:	c3                   	ret
   16e3b:	90                   	nop

0000000000016e3c <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   16e3c:	55                   	push   %rbp
   16e3d:	48 89 e5             	mov    %rsp,%rbp
   16e40:	53                   	push   %rbx
   16e41:	48 83 ec 18          	sub    $0x18,%rsp
   16e45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16e49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e4d:	48 89 c7             	mov    %rax,%rdi
   16e50:	e8 d5 ff ff ff       	call   16e2a <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   16e55:	48 89 c3             	mov    %rax,%rbx
   16e58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e5c:	48 89 c7             	mov    %rax,%rdi
   16e5f:	e8 d0 1c 00 00       	call   18b34 <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   16e64:	48 c1 e0 03          	shl    $0x3,%rax
   16e68:	48 01 d8             	add    %rbx,%rax
   16e6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16e6f:	c9                   	leave
   16e70:	c3                   	ret

0000000000016e71 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   16e71:	55                   	push   %rbp
   16e72:	48 89 e5             	mov    %rsp,%rbp
   16e75:	48 83 ec 10          	sub    $0x10,%rsp
   16e79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   16e81:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16e85:	48 89 c7             	mov    %rax,%rdi
   16e88:	e8 b9 1c 00 00       	call   18b46 <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   16e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16e95:	48 89 d6             	mov    %rdx,%rsi
   16e98:	48 89 c7             	mov    %rax,%rdi
   16e9b:	e8 b1 1c 00 00       	call   18b51 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   16ea0:	c9                   	leave
   16ea1:	c3                   	ret

0000000000016ea2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   16ea2:	55                   	push   %rbp
   16ea3:	48 89 e5             	mov    %rsp,%rbp
   16ea6:	53                   	push   %rbx
   16ea7:	48 83 ec 38          	sub    $0x38,%rsp
   16eab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16eaf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16eb3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   16eb7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16ebb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16ebf:	48 89 d6             	mov    %rdx,%rsi
   16ec2:	48 89 c7             	mov    %rax,%rdi
   16ec5:	e8 a7 ff ff ff       	call   16e71 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   16eca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   16ece:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   16ed2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ed6:	48 89 c7             	mov    %rax,%rdi
   16ed9:	e8 74 00 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16ede:	48 89 c2             	mov    %rax,%rdx
   16ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ee5:	48 89 d6             	mov    %rdx,%rsi
   16ee8:	48 89 c7             	mov    %rax,%rdi
   16eeb:	e8 7b 1c 00 00       	call   18b6b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   16ef0:	48 89 c6             	mov    %rax,%rsi
   16ef3:	48 89 df             	mov    %rbx,%rdi
   16ef6:	e8 27 1a 00 00       	call   18922 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   16efb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16eff:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   16f02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f06:	48 8b 00             	mov    (%rax),%rax
   16f09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16f0d:	48 c1 e2 03          	shl    $0x3,%rdx
   16f11:	48 01 c2             	add    %rax,%rdx
   16f14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f18:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   16f1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f20:	48 89 c7             	mov    %rax,%rdi
   16f23:	e8 2a 00 00 00       	call   16f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16f28:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   16f2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f2f:	48 8b 10             	mov    (%rax),%rdx
   16f32:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   16f36:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f3a:	48 89 c7             	mov    %rax,%rdi
   16f3d:	e8 89 1c 00 00       	call   18bcb <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   16f42:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16f46:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   16f4a:	90                   	nop
   16f4b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16f4f:	c9                   	leave
   16f50:	c3                   	ret
   16f51:	90                   	nop

0000000000016f52 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   16f52:	55                   	push   %rbp
   16f53:	48 89 e5             	mov    %rsp,%rbp
   16f56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16f5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f5e:	5d                   	pop    %rbp
   16f5f:	c3                   	ret

0000000000016f60 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   16f60:	55                   	push   %rbp
   16f61:	48 89 e5             	mov    %rsp,%rbp
   16f64:	48 83 ec 20          	sub    $0x20,%rsp
   16f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f70:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   16f74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f7c:	48 89 d6             	mov    %rdx,%rsi
   16f7f:	48 89 c7             	mov    %rax,%rdi
   16f82:	e8 75 1c 00 00       	call   18bfc <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   16f87:	90                   	nop
   16f88:	c9                   	leave
   16f89:	c3                   	ret

0000000000016f8a <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16f8a:	55                   	push   %rbp
   16f8b:	48 89 e5             	mov    %rsp,%rbp
   16f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f92:	90                   	nop
   16f93:	5d                   	pop    %rbp
   16f94:	c3                   	ret
   16f95:	90                   	nop

0000000000016f96 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16f96:	55                   	push   %rbp
   16f97:	48 89 e5             	mov    %rsp,%rbp
   16f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f9e:	90                   	nop
   16f9f:	5d                   	pop    %rbp
   16fa0:	c3                   	ret
   16fa1:	90                   	nop

0000000000016fa2 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   16fa2:	55                   	push   %rbp
   16fa3:	48 89 e5             	mov    %rsp,%rbp
   16fa6:	48 83 ec 10          	sub    $0x10,%rsp
   16faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fb2:	48 89 c7             	mov    %rax,%rdi
   16fb5:	e8 76 de ff ff       	call   14e30 <_ZNSaIjED1Ev>
   16fba:	90                   	nop
   16fbb:	c9                   	leave
   16fbc:	c3                   	ret
   16fbd:	90                   	nop

0000000000016fbe <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16fbe:	55                   	push   %rbp
   16fbf:	48 89 e5             	mov    %rsp,%rbp
   16fc2:	48 83 ec 10          	sub    $0x10,%rsp
   16fc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   16fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16fd6:	48 89 d6             	mov    %rdx,%rsi
   16fd9:	48 89 c7             	mov    %rax,%rdi
   16fdc:	e8 41 1c 00 00       	call   18c22 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   16fe1:	90                   	nop
   16fe2:	c9                   	leave
   16fe3:	c3                   	ret

0000000000016fe4 <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   16fe4:	55                   	push   %rbp
   16fe5:	48 89 e5             	mov    %rsp,%rbp
   16fe8:	48 83 ec 10          	sub    $0x10,%rsp
   16fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   16ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ff4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ffc:	48 8b 00             	mov    (%rax),%rax
   16fff:	48 29 c2             	sub    %rax,%rdx
   17002:	48 89 d0             	mov    %rdx,%rax
   17005:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   17009:	48 89 c2             	mov    %rax,%rdx
   1700c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17010:	48 8b 08             	mov    (%rax),%rcx
   17013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17017:	48 89 ce             	mov    %rcx,%rsi
   1701a:	48 89 c7             	mov    %rax,%rdi
   1701d:	e8 32 1c 00 00       	call   18c54 <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   17022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17026:	48 89 c7             	mov    %rax,%rdi
   17029:	e8 74 ff ff ff       	call   16fa2 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   1702e:	90                   	nop
   1702f:	c9                   	leave
   17030:	c3                   	ret
   17031:	90                   	nop

0000000000017032 <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   17032:	55                   	push   %rbp
   17033:	48 89 e5             	mov    %rsp,%rbp
   17036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1703a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1703e:	48 8b 00             	mov    (%rax),%rax
   17041:	5d                   	pop    %rbp
   17042:	c3                   	ret
   17043:	90                   	nop

0000000000017044 <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   17044:	55                   	push   %rbp
   17045:	48 89 e5             	mov    %rsp,%rbp
   17048:	53                   	push   %rbx
   17049:	48 83 ec 18          	sub    $0x18,%rsp
   1704d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17055:	48 89 c7             	mov    %rax,%rdi
   17058:	e8 d5 ff ff ff       	call   17032 <_ZNKSt16initializer_listIjE5beginEv>
   1705d:	48 89 c3             	mov    %rax,%rbx
   17060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17064:	48 89 c7             	mov    %rax,%rdi
   17067:	e8 1e 1c 00 00       	call   18c8a <_ZNKSt16initializer_listIjE4sizeEv>
   1706c:	48 c1 e0 02          	shl    $0x2,%rax
   17070:	48 01 d8             	add    %rbx,%rax
   17073:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17077:	c9                   	leave
   17078:	c3                   	ret

0000000000017079 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   17079:	55                   	push   %rbp
   1707a:	48 89 e5             	mov    %rsp,%rbp
   1707d:	48 83 ec 10          	sub    $0x10,%rsp
   17081:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17085:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   17089:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1708d:	48 89 c7             	mov    %rax,%rdi
   17090:	e8 07 1c 00 00       	call   18c9c <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   17095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17099:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1709d:	48 89 d6             	mov    %rdx,%rsi
   170a0:	48 89 c7             	mov    %rax,%rdi
   170a3:	e8 ff 1b 00 00       	call   18ca7 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   170a8:	c9                   	leave
   170a9:	c3                   	ret

00000000000170aa <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   170aa:	55                   	push   %rbp
   170ab:	48 89 e5             	mov    %rsp,%rbp
   170ae:	53                   	push   %rbx
   170af:	48 83 ec 38          	sub    $0x38,%rsp
   170b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   170b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   170bb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   170bf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   170c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   170c7:	48 89 d6             	mov    %rdx,%rsi
   170ca:	48 89 c7             	mov    %rax,%rdi
   170cd:	e8 a7 ff ff ff       	call   17079 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   170d2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   170d6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   170da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   170de:	48 89 c7             	mov    %rax,%rdi
   170e1:	e8 74 00 00 00       	call   1715a <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   170e6:	48 89 c2             	mov    %rax,%rdx
   170e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170ed:	48 89 d6             	mov    %rdx,%rsi
   170f0:	48 89 c7             	mov    %rax,%rdi
   170f3:	e8 c9 1b 00 00       	call   18cc1 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   170f8:	48 89 c6             	mov    %rax,%rsi
   170fb:	48 89 df             	mov    %rbx,%rdi
   170fe:	e8 1f 1c 00 00       	call   18d22 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   17103:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17107:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1710a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1710e:	48 8b 00             	mov    (%rax),%rax
   17111:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17115:	48 c1 e2 02          	shl    $0x2,%rdx
   17119:	48 01 c2             	add    %rax,%rdx
   1711c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17120:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   17124:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17128:	48 89 c7             	mov    %rax,%rdi
   1712b:	e8 2a 00 00 00       	call   1715a <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   17130:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   17133:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17137:	48 8b 10             	mov    (%rax),%rdx
   1713a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1713e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17142:	48 89 c7             	mov    %rax,%rdi
   17145:	e8 0b 1c 00 00       	call   18d55 <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   1714a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1714e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   17152:	90                   	nop
   17153:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17157:	c9                   	leave
   17158:	c3                   	ret
   17159:	90                   	nop

000000000001715a <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1715a:	55                   	push   %rbp
   1715b:	48 89 e5             	mov    %rsp,%rbp
   1715e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17166:	5d                   	pop    %rbp
   17167:	c3                   	ret

0000000000017168 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   17168:	55                   	push   %rbp
   17169:	48 89 e5             	mov    %rsp,%rbp
   1716c:	48 83 ec 20          	sub    $0x20,%rsp
   17170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17174:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17178:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1717c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17184:	48 89 d6             	mov    %rdx,%rsi
   17187:	48 89 c7             	mov    %rax,%rdi
   1718a:	e8 f7 1b 00 00       	call   18d86 <_ZSt8_DestroyIPjEvT_S1_>
    }
   1718f:	90                   	nop
   17190:	c9                   	leave
   17191:	c3                   	ret

0000000000017192 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   17192:	55                   	push   %rbp
   17193:	48 89 e5             	mov    %rsp,%rbp
   17196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1719a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1719e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   171a2:	5d                   	pop    %rbp
   171a3:	c3                   	ret

00000000000171a4 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   171a4:	55                   	push   %rbp
   171a5:	48 89 e5             	mov    %rsp,%rbp
   171a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   171b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   171b4:	5d                   	pop    %rbp
   171b5:	c3                   	ret

00000000000171b6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   171b6:	55                   	push   %rbp
   171b7:	48 89 e5             	mov    %rsp,%rbp
   171ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   171be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171c2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   171c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171cd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   171d4:	00 
   171d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171d9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   171e0:	00 
	{ }
   171e1:	90                   	nop
   171e2:	5d                   	pop    %rbp
   171e3:	c3                   	ret

00000000000171e4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   171e4:	55                   	push   %rbp
   171e5:	48 89 e5             	mov    %rsp,%rbp
   171e8:	48 83 ec 20          	sub    $0x20,%rsp
   171ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   171f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   171f8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   171fd:	74 17                	je     17216 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   171ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17203:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17207:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1720b:	48 89 ce             	mov    %rcx,%rsi
   1720e:	48 89 c7             	mov    %rax,%rdi
   17211:	e8 96 1b 00 00       	call   18dac <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   17216:	90                   	nop
   17217:	c9                   	leave
   17218:	c3                   	ret
   17219:	90                   	nop

000000000001721a <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1721a:	55                   	push   %rbp
   1721b:	48 89 e5             	mov    %rsp,%rbp
   1721e:	48 83 ec 10          	sub    $0x10,%rsp
   17222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1722a:	48 89 c7             	mov    %rax,%rdi
   1722d:	e8 a8 1b 00 00       	call   18dda <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   17232:	90                   	nop
   17233:	c9                   	leave
   17234:	c3                   	ret
   17235:	90                   	nop

0000000000017236 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   17236:	55                   	push   %rbp
   17237:	48 89 e5             	mov    %rsp,%rbp
   1723a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1723e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17242:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1724d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17254:	00 
   17255:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17259:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17260:	00 
	{ }
   17261:	90                   	nop
   17262:	5d                   	pop    %rbp
   17263:	c3                   	ret

0000000000017264 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   17264:	55                   	push   %rbp
   17265:	48 89 e5             	mov    %rsp,%rbp
   17268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1726c:	90                   	nop
   1726d:	5d                   	pop    %rbp
   1726e:	c3                   	ret
   1726f:	90                   	nop

0000000000017270 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   17270:	55                   	push   %rbp
   17271:	48 89 e5             	mov    %rsp,%rbp
   17274:	48 83 ec 20          	sub    $0x20,%rsp
   17278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1727c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17280:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17284:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17289:	74 17                	je     172a2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1728b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1728f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17293:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17297:	48 89 ce             	mov    %rcx,%rsi
   1729a:	48 89 c7             	mov    %rax,%rdi
   1729d:	e8 43 1b 00 00       	call   18de5 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   172a2:	90                   	nop
   172a3:	c9                   	leave
   172a4:	c3                   	ret
   172a5:	90                   	nop

00000000000172a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   172a6:	55                   	push   %rbp
   172a7:	48 89 e5             	mov    %rsp,%rbp
   172aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   172ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172b2:	5d                   	pop    %rbp
   172b3:	c3                   	ret

00000000000172b4 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   172b4:	55                   	push   %rbp
   172b5:	48 89 e5             	mov    %rsp,%rbp
   172b8:	48 83 ec 20          	sub    $0x20,%rsp
   172bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   172c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   172c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   172cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172d0:	48 89 d6             	mov    %rdx,%rsi
   172d3:	48 89 c7             	mov    %rax,%rdi
   172d6:	e8 38 1b 00 00       	call   18e13 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   172db:	90                   	nop
   172dc:	c9                   	leave
   172dd:	c3                   	ret

00000000000172de <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   172de:	55                   	push   %rbp
   172df:	48 89 e5             	mov    %rsp,%rbp
   172e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   172e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   172f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172f5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   172fc:	00 
   172fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17301:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17308:	00 
	{ }
   17309:	90                   	nop
   1730a:	5d                   	pop    %rbp
   1730b:	c3                   	ret

000000000001730c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1730c:	55                   	push   %rbp
   1730d:	48 89 e5             	mov    %rsp,%rbp
   17310:	48 83 ec 20          	sub    $0x20,%rsp
   17314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1731c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17320:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17325:	74 17                	je     1733e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1732b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1732f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17333:	48 89 ce             	mov    %rcx,%rsi
   17336:	48 89 c7             	mov    %rax,%rdi
   17339:	e8 fb 1a 00 00       	call   18e39 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   1733e:	90                   	nop
   1733f:	c9                   	leave
   17340:	c3                   	ret
   17341:	90                   	nop

0000000000017342 <_ZNSaIP9VkFence_TEC1Ev>:
   17342:	55                   	push   %rbp
   17343:	48 89 e5             	mov    %rsp,%rbp
   17346:	48 83 ec 10          	sub    $0x10,%rsp
   1734a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1734e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17352:	48 89 c7             	mov    %rax,%rdi
   17355:	e8 0e 1b 00 00       	call   18e68 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
   1735a:	90                   	nop
   1735b:	c9                   	leave
   1735c:	c3                   	ret
   1735d:	90                   	nop

000000000001735e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1735e:	55                   	push   %rbp
   1735f:	48 89 e5             	mov    %rsp,%rbp
   17362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   17366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1736a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17375:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1737c:	00 
   1737d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17381:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17388:	00 
	{ }
   17389:	90                   	nop
   1738a:	5d                   	pop    %rbp
   1738b:	c3                   	ret

000000000001738c <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
   1738c:	55                   	push   %rbp
   1738d:	48 89 e5             	mov    %rsp,%rbp
   17390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17394:	90                   	nop
   17395:	5d                   	pop    %rbp
   17396:	c3                   	ret
   17397:	90                   	nop

0000000000017398 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   17398:	55                   	push   %rbp
   17399:	48 89 e5             	mov    %rsp,%rbp
   1739c:	48 83 ec 20          	sub    $0x20,%rsp
   173a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   173a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   173ac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   173b1:	74 17                	je     173ca <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   173b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173b7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   173bb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   173bf:	48 89 ce             	mov    %rcx,%rsi
   173c2:	48 89 c7             	mov    %rax,%rdi
   173c5:	e8 a9 1a 00 00       	call   18e73 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
   173ca:	90                   	nop
   173cb:	c9                   	leave
   173cc:	c3                   	ret
   173cd:	90                   	nop

00000000000173ce <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   173ce:	55                   	push   %rbp
   173cf:	48 89 e5             	mov    %rsp,%rbp
   173d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   173d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173da:	5d                   	pop    %rbp
   173db:	c3                   	ret

00000000000173dc <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   173dc:	55                   	push   %rbp
   173dd:	48 89 e5             	mov    %rsp,%rbp
   173e0:	48 83 ec 20          	sub    $0x20,%rsp
   173e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   173ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   173f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   173f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173f8:	48 89 d6             	mov    %rdx,%rsi
   173fb:	48 89 c7             	mov    %rax,%rdi
   173fe:	e8 9e 1a 00 00       	call   18ea1 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
   17403:	90                   	nop
   17404:	c9                   	leave
   17405:	c3                   	ret

0000000000017406 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   17406:	55                   	push   %rbp
   17407:	48 89 e5             	mov    %rsp,%rbp
   1740a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1740e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   17412:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17416:	48 8b 10             	mov    (%rax),%rdx
   17419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1741d:	48 89 10             	mov    %rdx,(%rax)
   17420:	90                   	nop
   17421:	5d                   	pop    %rbp
   17422:	c3                   	ret
   17423:	90                   	nop

0000000000017424 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   17424:	55                   	push   %rbp
   17425:	48 89 e5             	mov    %rsp,%rbp
   17428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1742c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17430:	5d                   	pop    %rbp
   17431:	c3                   	ret

0000000000017432 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   17432:	55                   	push   %rbp
   17433:	48 89 e5             	mov    %rsp,%rbp
   17436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1743a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1743e:	48 8b 40 08          	mov    0x8(%rax),%rax
   17442:	5d                   	pop    %rbp
   17443:	c3                   	ret

0000000000017444 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   17444:	55                   	push   %rbp
   17445:	48 89 e5             	mov    %rsp,%rbp
   17448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1744c:	90                   	nop
   1744d:	5d                   	pop    %rbp
   1744e:	c3                   	ret

000000000001744f <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1744f:	55                   	push   %rbp
   17450:	48 89 e5             	mov    %rsp,%rbp
   17453:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17457:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1745b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1745f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17463:	48 c1 f8 03          	sar    $0x3,%rax
    }
   17467:	5d                   	pop    %rbp
   17468:	c3                   	ret

0000000000017469 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   17469:	55                   	push   %rbp
   1746a:	48 89 e5             	mov    %rsp,%rbp
   1746d:	48 83 ec 20          	sub    $0x20,%rsp
   17471:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17475:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17479:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1747d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   17481:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17485:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1748d:	48 89 ce             	mov    %rcx,%rsi
   17490:	48 89 c7             	mov    %rax,%rdi
   17493:	e8 2f 1a 00 00       	call   18ec7 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   17498:	c9                   	leave
   17499:	c3                   	ret

000000000001749a <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1749a:	55                   	push   %rbp
   1749b:	48 89 e5             	mov    %rsp,%rbp
   1749e:	48 83 ec 10          	sub    $0x10,%rsp
   174a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   174aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   174ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174b2:	48 89 d6             	mov    %rdx,%rsi
   174b5:	48 89 c7             	mov    %rax,%rdi
   174b8:	e8 3f 1a 00 00       	call   18efc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   174bd:	90                   	nop
   174be:	c9                   	leave
   174bf:	c3                   	ret

00000000000174c0 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   174c0:	55                   	push   %rbp
   174c1:	48 89 e5             	mov    %rsp,%rbp
   174c4:	53                   	push   %rbx
   174c5:	48 83 ec 28          	sub    $0x28,%rsp
   174c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   174cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   174d1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   174d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   174d9:	48 89 c6             	mov    %rax,%rsi
   174dc:	bf 08 00 00 00       	mov    $0x8,%edi
   174e1:	e8 92 f1 fe ff       	call   6678 <_ZnwmPv>
   174e6:	48 89 c3             	mov    %rax,%rbx
   174e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174ed:	48 89 c7             	mov    %rax,%rdi
   174f0:	e8 2f e0 ff ff       	call   15524 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   174f5:	48 8b 00             	mov    (%rax),%rax
   174f8:	48 89 03             	mov    %rax,(%rbx)
   174fb:	90                   	nop
   174fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17500:	c9                   	leave
   17501:	c3                   	ret

0000000000017502 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   17502:	55                   	push   %rbp
   17503:	48 89 e5             	mov    %rsp,%rbp
   17506:	53                   	push   %rbx
   17507:	48 83 ec 38          	sub    $0x38,%rsp
   1750b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1750f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17513:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   17517:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1751b:	48 89 c7             	mov    %rax,%rdi
   1751e:	e8 e9 19 00 00       	call   18f0c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   17523:	48 89 c3             	mov    %rax,%rbx
   17526:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1752a:	48 89 c7             	mov    %rax,%rdi
   1752d:	e8 54 c6 ff ff       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   17532:	48 29 c3             	sub    %rax,%rbx
   17535:	48 89 da             	mov    %rbx,%rdx
   17538:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1753c:	48 39 c2             	cmp    %rax,%rdx
   1753f:	0f 92 c0             	setb   %al
   17542:	84 c0                	test   %al,%al
   17544:	74 0c                	je     17552 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   17546:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1754a:	48 89 c7             	mov    %rax,%rdi
   1754d:	e8 9e cc fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   17552:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17556:	48 89 c7             	mov    %rax,%rdi
   17559:	e8 28 c6 ff ff       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1755e:	48 89 c3             	mov    %rax,%rbx
   17561:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17565:	48 89 c7             	mov    %rax,%rdi
   17568:	e8 19 c6 ff ff       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1756d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17571:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   17575:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17579:	48 89 d6             	mov    %rdx,%rsi
   1757c:	48 89 c7             	mov    %rax,%rdi
   1757f:	e8 aa 19 00 00       	call   18f2e <_ZSt3maxImERKT_S2_S2_>
   17584:	48 8b 00             	mov    (%rax),%rax
   17587:	48 01 d8             	add    %rbx,%rax
   1758a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1758e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17592:	48 89 c7             	mov    %rax,%rdi
   17595:	e8 ec c5 ff ff       	call   13b86 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1759a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1759e:	72 12                	jb     175b2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   175a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175a4:	48 89 c7             	mov    %rax,%rdi
   175a7:	e8 60 19 00 00       	call   18f0c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   175ac:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   175b0:	73 0e                	jae    175c0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   175b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175b6:	48 89 c7             	mov    %rax,%rdi
   175b9:	e8 4e 19 00 00       	call   18f0c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   175be:	eb 04                	jmp    175c4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   175c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   175c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   175c8:	c9                   	leave
   175c9:	c3                   	ret

00000000000175ca <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   175ca:	55                   	push   %rbp
   175cb:	48 89 e5             	mov    %rsp,%rbp
   175ce:	53                   	push   %rbx
   175cf:	48 83 ec 18          	sub    $0x18,%rsp
   175d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   175d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   175db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   175df:	48 89 c7             	mov    %rax,%rdi
   175e2:	e8 2f df ff ff       	call   15516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   175e7:	48 8b 18             	mov    (%rax),%rbx
   175ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   175ee:	48 89 c7             	mov    %rax,%rdi
   175f1:	e8 20 df ff ff       	call   15516 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   175f6:	48 8b 00             	mov    (%rax),%rax
   175f9:	48 89 da             	mov    %rbx,%rdx
   175fc:	48 29 c2             	sub    %rax,%rdx
   175ff:	48 89 d0             	mov    %rdx,%rax
   17602:	48 c1 f8 03          	sar    $0x3,%rax
   17606:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1760a:	c9                   	leave
   1760b:	c3                   	ret

000000000001760c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1760c:	55                   	push   %rbp
   1760d:	48 89 e5             	mov    %rsp,%rbp
   17610:	48 83 ec 20          	sub    $0x20,%rsp
   17614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17618:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1761c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17620:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   17624:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17628:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1762c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17634:	48 89 c7             	mov    %rax,%rdi
   17637:	e8 1d 19 00 00       	call   18f59 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1763c:	c9                   	leave
   1763d:	c3                   	ret

000000000001763e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   1763e:	55                   	push   %rbp
   1763f:	48 89 e5             	mov    %rsp,%rbp
   17642:	48 83 ec 20          	sub    $0x20,%rsp
   17646:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1764a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   1764e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17652:	48 8b 00             	mov    (%rax),%rax
   17655:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17659:	48 c1 e2 03          	shl    $0x3,%rdx
   1765d:	48 f7 da             	neg    %rdx
   17660:	48 01 d0             	add    %rdx,%rax
   17663:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17667:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1766b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1766f:	48 89 d6             	mov    %rdx,%rsi
   17672:	48 89 c7             	mov    %rax,%rdi
   17675:	e8 7e de ff ff       	call   154f8 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1767a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1767e:	c9                   	leave
   1767f:	c3                   	ret

0000000000017680 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   17680:	55                   	push   %rbp
   17681:	48 89 e5             	mov    %rsp,%rbp
   17684:	53                   	push   %rbx
   17685:	48 83 ec 28          	sub    $0x28,%rsp
   17689:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1768d:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   17691:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   17695:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17699:	48 89 c7             	mov    %rax,%rdi
   1769c:	e8 cb e0 ff ff       	call   1576c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   176a1:	48 89 c6             	mov    %rax,%rsi
   176a4:	48 89 df             	mov    %rbx,%rdi
   176a7:	e8 10 19 00 00       	call   18fbc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   176ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   176b0:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   176b4:	90                   	nop
   176b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   176b9:	c9                   	leave
   176ba:	c3                   	ret
   176bb:	90                   	nop

00000000000176bc <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   176bc:	55                   	push   %rbp
   176bd:	48 89 e5             	mov    %rsp,%rbp
   176c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   176c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176c8:	5d                   	pop    %rbp
   176c9:	c3                   	ret

00000000000176ca <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   176ca:	55                   	push   %rbp
   176cb:	48 89 e5             	mov    %rsp,%rbp
   176ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   176d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   176da:	8b 10                	mov    (%rax),%edx
   176dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176e0:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   176e2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   176e6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   176ea:	48 8b 46 04          	mov    0x4(%rsi),%rax
   176ee:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   176f2:	48 89 41 04          	mov    %rax,0x4(%rcx)
   176f6:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   176fa:	48 8b 46 14          	mov    0x14(%rsi),%rax
   176fe:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   17702:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   17706:	5d                   	pop    %rbp
   17707:	c3                   	ret

0000000000017708 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   17708:	55                   	push   %rbp
   17709:	48 89 e5             	mov    %rsp,%rbp
   1770c:	53                   	push   %rbx
   1770d:	48 83 ec 18          	sub    $0x18,%rsp
   17711:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17715:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   17719:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1771d:	48 89 c7             	mov    %rax,%rdi
   17720:	e8 e9 18 00 00       	call   1900e <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   17725:	48 89 c3             	mov    %rax,%rbx
   17728:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1772c:	48 89 c7             	mov    %rax,%rdi
   1772f:	e8 cc 18 00 00       	call   19000 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   17734:	48 89 de             	mov    %rbx,%rsi
   17737:	48 89 c7             	mov    %rax,%rdi
   1773a:	e8 dd 18 00 00       	call   1901c <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   1773f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17743:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   17747:	90                   	nop
   17748:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1774c:	c9                   	leave
   1774d:	c3                   	ret

000000000001774e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   1774e:	55                   	push   %rbp
   1774f:	48 89 e5             	mov    %rsp,%rbp
   17752:	48 83 ec 10          	sub    $0x10,%rsp
   17756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   1775a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1775e:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   17762:	84 c0                	test   %al,%al
   17764:	74 0c                	je     17772 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   17766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1776a:	48 89 c7             	mov    %rax,%rdi
   1776d:	e8 04 19 00 00       	call   19076 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   17772:	90                   	nop
   17773:	c9                   	leave
   17774:	c3                   	ret
   17775:	90                   	nop

0000000000017776 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   17776:	55                   	push   %rbp
   17777:	48 89 e5             	mov    %rsp,%rbp
   1777a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1777e:	90                   	nop
   1777f:	5d                   	pop    %rbp
   17780:	c3                   	ret

0000000000017781 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   17781:	55                   	push   %rbp
   17782:	48 89 e5             	mov    %rsp,%rbp
   17785:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   17789:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1778d:	48 8b 40 18          	mov    0x18(%rax),%rax
   17791:	5d                   	pop    %rbp
   17792:	c3                   	ret

0000000000017793 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   17793:	55                   	push   %rbp
   17794:	48 89 e5             	mov    %rsp,%rbp
   17797:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1779b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1779f:	48 8b 40 10          	mov    0x10(%rax),%rax
   177a3:	5d                   	pop    %rbp
   177a4:	c3                   	ret
   177a5:	90                   	nop

00000000000177a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   177a6:	55                   	push   %rbp
   177a7:	48 89 e5             	mov    %rsp,%rbp
   177aa:	48 83 ec 10          	sub    $0x10,%rsp
   177ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   177b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   177ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177be:	48 89 d6             	mov    %rdx,%rsi
   177c1:	48 89 c7             	mov    %rax,%rdi
   177c4:	e8 c1 18 00 00       	call   1908a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   177c9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   177cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177d1:	48 89 d6             	mov    %rdx,%rsi
   177d4:	48 89 c7             	mov    %rax,%rdi
   177d7:	e8 ec 18 00 00       	call   190c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   177dc:	90                   	nop
   177dd:	c9                   	leave
   177de:	c3                   	ret
   177df:	90                   	nop

00000000000177e0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   177e0:	55                   	push   %rbp
   177e1:	48 89 e5             	mov    %rsp,%rbp
   177e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   177e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177ec:	48 8b 40 10          	mov    0x10(%rax),%rax
   177f0:	5d                   	pop    %rbp
   177f1:	c3                   	ret

00000000000177f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   177f2:	55                   	push   %rbp
   177f3:	48 89 e5             	mov    %rsp,%rbp
   177f6:	53                   	push   %rbx
   177f7:	48 83 ec 18          	sub    $0x18,%rsp
   177fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   177ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   17803:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17807:	48 89 c7             	mov    %rax,%rdi
   1780a:	e8 ef 18 00 00       	call   190fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1780f:	48 89 c3             	mov    %rax,%rbx
   17812:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17816:	48 89 c7             	mov    %rax,%rdi
   17819:	e8 1c e1 ff ff       	call   1593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1781e:	48 89 c6             	mov    %rax,%rsi
   17821:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17825:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17829:	48 89 d1             	mov    %rdx,%rcx
   1782c:	48 89 da             	mov    %rbx,%rdx
   1782f:	48 89 c7             	mov    %rax,%rdi
   17832:	e8 d9 18 00 00       	call   19110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   17837:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1783b:	c9                   	leave
   1783c:	c3                   	ret
   1783d:	90                   	nop

000000000001783e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1783e:	55                   	push   %rbp
   1783f:	48 89 e5             	mov    %rsp,%rbp
   17842:	48 83 ec 20          	sub    $0x20,%rsp
   17846:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   1784a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1784e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17852:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17856:	48 89 d6             	mov    %rdx,%rsi
   17859:	48 89 c7             	mov    %rax,%rdi
   1785c:	e8 39 06 00 00       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   17861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17865:	c9                   	leave
   17866:	c3                   	ret
   17867:	90                   	nop

0000000000017868 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   17868:	55                   	push   %rbp
   17869:	48 89 e5             	mov    %rsp,%rbp
   1786c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   17870:	90                   	nop
   17871:	5d                   	pop    %rbp
   17872:	c3                   	ret
   17873:	90                   	nop

0000000000017874 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   17874:	55                   	push   %rbp
   17875:	48 89 e5             	mov    %rsp,%rbp
   17878:	48 83 ec 10          	sub    $0x10,%rsp
   1787c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   17880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17884:	48 83 c0 20          	add    $0x20,%rax
   17888:	48 89 c7             	mov    %rax,%rdi
   1788b:	e8 16 19 00 00       	call   191a6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   17890:	c9                   	leave
   17891:	c3                   	ret

0000000000017892 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   17892:	55                   	push   %rbp
   17893:	48 89 e5             	mov    %rsp,%rbp
   17896:	48 83 ec 10          	sub    $0x10,%rsp
   1789a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1789e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   178a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   178a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178aa:	48 89 d6             	mov    %rdx,%rsi
   178ad:	48 89 c7             	mov    %rax,%rdi
   178b0:	e8 7b c7 fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   178b5:	c1 e8 1f             	shr    $0x1f,%eax
   178b8:	c9                   	leave
   178b9:	c3                   	ret

00000000000178ba <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   178ba:	55                   	push   %rbp
   178bb:	48 89 e5             	mov    %rsp,%rbp
   178be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   178c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178c6:	5d                   	pop    %rbp
   178c7:	c3                   	ret

00000000000178c8 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   178c8:	55                   	push   %rbp
   178c9:	48 89 e5             	mov    %rsp,%rbp
   178cc:	53                   	push   %rbx
   178cd:	48 83 ec 18          	sub    $0x18,%rsp
   178d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   178d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   178d9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   178dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   178e1:	48 89 c7             	mov    %rax,%rdi
   178e4:	e8 d1 ff ff ff       	call   178ba <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   178e9:	48 89 c6             	mov    %rax,%rsi
   178ec:	48 89 df             	mov    %rbx,%rdi
   178ef:	e8 cc 18 00 00       	call   191c0 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   178f4:	90                   	nop
   178f5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   178f9:	c9                   	leave
   178fa:	c3                   	ret

00000000000178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   178fb:	55                   	push   %rbp
   178fc:	48 89 e5             	mov    %rsp,%rbp
   178ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17907:	5d                   	pop    %rbp
   17908:	c3                   	ret

0000000000017909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17909:	55                   	push   %rbp
   1790a:	48 89 e5             	mov    %rsp,%rbp
   1790d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17915:	5d                   	pop    %rbp
   17916:	c3                   	ret

0000000000017917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17917:	55                   	push   %rbp
   17918:	48 89 e5             	mov    %rsp,%rbp
   1791b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1791f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17923:	5d                   	pop    %rbp
   17924:	c3                   	ret
   17925:	90                   	nop

0000000000017926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   17926:	55                   	push   %rbp
   17927:	48 89 e5             	mov    %rsp,%rbp
   1792a:	41 54                	push   %r12
   1792c:	53                   	push   %rbx
   1792d:	48 83 ec 30          	sub    $0x30,%rsp
   17931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17935:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17939:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1793d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   17941:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   17945:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17949:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1794d:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   17950:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17954:	48 89 c7             	mov    %rax,%rdi
   17957:	e8 bb ff ff ff       	call   17917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1795c:	49 89 c4             	mov    %rax,%r12
   1795f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17963:	48 89 c7             	mov    %rax,%rdi
   17966:	e8 9e ff ff ff       	call   17909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1796b:	48 89 c3             	mov    %rax,%rbx
   1796e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17972:	48 89 c7             	mov    %rax,%rdi
   17975:	e8 81 ff ff ff       	call   178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1797a:	48 89 c6             	mov    %rax,%rsi
   1797d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17981:	4c 89 e1             	mov    %r12,%rcx
   17984:	48 89 da             	mov    %rbx,%rdx
   17987:	48 89 c7             	mov    %rax,%rdi
   1798a:	e8 65 18 00 00       	call   191f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   1798f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17993:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   17997:	90                   	nop
   17998:	48 83 c4 30          	add    $0x30,%rsp
   1799c:	5b                   	pop    %rbx
   1799d:	41 5c                	pop    %r12
   1799f:	5d                   	pop    %rbp
   179a0:	c3                   	ret
   179a1:	90                   	nop

00000000000179a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   179a2:	55                   	push   %rbp
   179a3:	48 89 e5             	mov    %rsp,%rbp
   179a6:	48 83 ec 10          	sub    $0x10,%rsp
   179aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   179ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179b2:	48 8b 40 08          	mov    0x8(%rax),%rax
   179b6:	48 85 c0             	test   %rax,%rax
   179b9:	74 1a                	je     179d5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   179bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179bf:	48 8b 00             	mov    (%rax),%rax
   179c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   179c6:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   179ca:	48 89 d6             	mov    %rdx,%rsi
   179cd:	48 89 c7             	mov    %rax,%rdi
   179d0:	e8 d1 fd ff ff       	call   177a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   179d5:	90                   	nop
   179d6:	c9                   	leave
   179d7:	c3                   	ret

00000000000179d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   179d8:	55                   	push   %rbp
   179d9:	48 89 e5             	mov    %rsp,%rbp
   179dc:	53                   	push   %rbx
   179dd:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   179e4:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   179eb:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   179f2:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   179f9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   17a00:	48 89 c7             	mov    %rax,%rdi
   17a03:	e8 68 18 00 00       	call   19270 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   17a08:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   17a0f:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   17a16:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17a1d:	48 89 c7             	mov    %rax,%rdi
   17a20:	e8 d9 16 00 00       	call   190fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   17a25:	48 39 c3             	cmp    %rax,%rbx
   17a28:	0f 94 c0             	sete   %al
   17a2b:	84 c0                	test   %al,%al
   17a2d:	0f 84 c8 00 00 00    	je     17afb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   17a33:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17a3a:	48 89 c7             	mov    %rax,%rdi
   17a3d:	e8 56 18 00 00       	call   19298 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   17a42:	48 85 c0             	test   %rax,%rax
   17a45:	74 44                	je     17a8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   17a47:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17a4e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17a55:	48 89 c7             	mov    %rax,%rdi
   17a58:	e8 4d 18 00 00       	call   192aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17a5d:	48 8b 00             	mov    (%rax),%rax
   17a60:	48 89 c7             	mov    %rax,%rdi
   17a63:	e8 54 18 00 00       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17a68:	48 89 c1             	mov    %rax,%rcx
   17a6b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17a72:	48 89 c2             	mov    %rax,%rdx
   17a75:	48 89 ce             	mov    %rcx,%rsi
   17a78:	48 89 df             	mov    %rbx,%rdi
   17a7b:	e8 9c df ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17a80:	84 c0                	test   %al,%al
   17a82:	74 07                	je     17a8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   17a84:	b8 01 00 00 00       	mov    $0x1,%eax
   17a89:	eb 05                	jmp    17a90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   17a8b:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   17a90:	84 c0                	test   %al,%al
   17a92:	74 49                	je     17add <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   17a94:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17a9b:	48 89 c7             	mov    %rax,%rdi
   17a9e:	e8 07 18 00 00       	call   192aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17aa3:	48 89 c2             	mov    %rax,%rdx
   17aa6:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   17aad:	00 00 00 00 
   17ab1:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   17ab8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   17abf:	48 89 ce             	mov    %rcx,%rsi
   17ac2:	48 89 c7             	mov    %rax,%rdi
   17ac5:	e8 0c 18 00 00       	call   192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17aca:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   17ad1:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   17ad8:	e9 43 03 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   17add:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   17ae4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17aeb:	48 89 d6             	mov    %rdx,%rsi
   17aee:	48 89 c7             	mov    %rax,%rdi
   17af1:	e8 10 18 00 00       	call   19306 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   17af6:	e9 25 03 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   17afb:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17b02:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17b09:	48 89 c7             	mov    %rax,%rdi
   17b0c:	e8 ab 17 00 00       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17b11:	48 89 c2             	mov    %rax,%rdx
   17b14:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17b1b:	48 89 c6             	mov    %rax,%rsi
   17b1e:	48 89 df             	mov    %rbx,%rdi
   17b21:	e8 f6 de ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17b26:	84 c0                	test   %al,%al
   17b28:	0f 84 66 01 00 00    	je     17c94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   17b2e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17b35:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   17b3c:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   17b43:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17b4a:	48 89 c7             	mov    %rax,%rdi
   17b4d:	e8 2a 19 00 00       	call   1947c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   17b52:	48 8b 00             	mov    (%rax),%rax
   17b55:	48 39 c3             	cmp    %rax,%rbx
   17b58:	0f 94 c0             	sete   %al
   17b5b:	84 c0                	test   %al,%al
   17b5d:	74 4c                	je     17bab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   17b5f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17b66:	48 89 c7             	mov    %rax,%rdi
   17b69:	e8 0e 19 00 00       	call   1947c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   17b6e:	48 89 c3             	mov    %rax,%rbx
   17b71:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17b78:	48 89 c7             	mov    %rax,%rdi
   17b7b:	e8 fc 18 00 00       	call   1947c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   17b80:	48 89 c1             	mov    %rax,%rcx
   17b83:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   17b8a:	48 89 da             	mov    %rbx,%rdx
   17b8d:	48 89 ce             	mov    %rcx,%rsi
   17b90:	48 89 c7             	mov    %rax,%rdi
   17b93:	e8 f6 18 00 00       	call   1948e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   17b98:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   17b9f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   17ba6:	e9 75 02 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   17bab:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17bb2:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   17bb9:	48 89 c7             	mov    %rax,%rdi
   17bbc:	e8 11 19 00 00       	call   194d2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   17bc1:	48 8b 00             	mov    (%rax),%rax
   17bc4:	48 89 c7             	mov    %rax,%rdi
   17bc7:	e8 f0 16 00 00       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17bcc:	48 89 c1             	mov    %rax,%rcx
   17bcf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17bd6:	48 89 c2             	mov    %rax,%rdx
   17bd9:	48 89 ce             	mov    %rcx,%rsi
   17bdc:	48 89 df             	mov    %rbx,%rdi
   17bdf:	e8 38 de ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17be4:	84 c0                	test   %al,%al
   17be6:	0f 84 8a 00 00 00    	je     17c76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   17bec:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   17bf3:	48 89 c7             	mov    %rax,%rdi
   17bf6:	e8 86 fb ff ff       	call   17781 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17bfb:	48 85 c0             	test   %rax,%rax
   17bfe:	0f 94 c0             	sete   %al
   17c01:	84 c0                	test   %al,%al
   17c03:	74 3e                	je     17c43 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   17c05:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   17c0c:	00 00 00 00 
   17c10:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   17c17:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   17c1e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   17c25:	48 89 ce             	mov    %rcx,%rsi
   17c28:	48 89 c7             	mov    %rax,%rdi
   17c2b:	e8 a6 16 00 00       	call   192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17c30:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   17c37:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   17c3e:	e9 dd 01 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   17c43:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   17c4a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   17c51:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   17c58:	48 89 ce             	mov    %rcx,%rsi
   17c5b:	48 89 c7             	mov    %rax,%rdi
   17c5e:	e8 2b 18 00 00       	call   1948e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   17c63:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   17c6a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   17c71:	e9 aa 01 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   17c76:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   17c7d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17c84:	48 89 d6             	mov    %rdx,%rsi
   17c87:	48 89 c7             	mov    %rax,%rdi
   17c8a:	e8 77 16 00 00       	call   19306 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   17c8f:	e9 8c 01 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   17c94:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17c9b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17ca2:	48 89 c7             	mov    %rax,%rdi
   17ca5:	e8 12 16 00 00       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17caa:	48 89 c1             	mov    %rax,%rcx
   17cad:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17cb4:	48 89 c2             	mov    %rax,%rdx
   17cb7:	48 89 ce             	mov    %rcx,%rsi
   17cba:	48 89 df             	mov    %rbx,%rdi
   17cbd:	e8 5a dd ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17cc2:	84 c0                	test   %al,%al
   17cc4:	0f 84 2c 01 00 00    	je     17df6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   17cca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17cd1:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   17cd8:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   17cdf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17ce6:	48 89 c7             	mov    %rax,%rdi
   17ce9:	e8 bc 15 00 00       	call   192aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17cee:	48 8b 00             	mov    (%rax),%rax
   17cf1:	48 39 c3             	cmp    %rax,%rbx
   17cf4:	0f 94 c0             	sete   %al
   17cf7:	84 c0                	test   %al,%al
   17cf9:	74 3a                	je     17d35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   17cfb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17d02:	48 89 c7             	mov    %rax,%rdi
   17d05:	e8 a0 15 00 00       	call   192aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   17d0a:	48 89 c2             	mov    %rax,%rdx
   17d0d:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   17d14:	00 
   17d15:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   17d19:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   17d1d:	48 89 ce             	mov    %rcx,%rsi
   17d20:	48 89 c7             	mov    %rax,%rdi
   17d23:	e8 ae 15 00 00       	call   192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17d28:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   17d2c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   17d30:	e9 eb 00 00 00       	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   17d35:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   17d3c:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   17d43:	48 89 c7             	mov    %rax,%rdi
   17d46:	e8 af 17 00 00       	call   194fa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   17d4b:	48 8b 00             	mov    (%rax),%rax
   17d4e:	48 89 c7             	mov    %rax,%rdi
   17d51:	e8 66 15 00 00       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   17d56:	48 89 c2             	mov    %rax,%rdx
   17d59:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   17d60:	48 89 c6             	mov    %rax,%rsi
   17d63:	48 89 df             	mov    %rbx,%rdi
   17d66:	e8 b1 dc ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17d6b:	84 c0                	test   %al,%al
   17d6d:	74 6c                	je     17ddb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   17d6f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   17d76:	48 89 c7             	mov    %rax,%rdi
   17d79:	e8 03 fa ff ff       	call   17781 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17d7e:	48 85 c0             	test   %rax,%rax
   17d81:	0f 94 c0             	sete   %al
   17d84:	84 c0                	test   %al,%al
   17d86:	74 2c                	je     17db4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   17d88:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   17d8f:	00 
   17d90:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   17d97:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   17d9b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   17d9f:	48 89 ce             	mov    %rcx,%rsi
   17da2:	48 89 c7             	mov    %rax,%rdi
   17da5:	e8 2c 15 00 00       	call   192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17daa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17dae:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   17db2:	eb 6c                	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   17db4:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   17dbb:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   17dc2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   17dc6:	48 89 ce             	mov    %rcx,%rsi
   17dc9:	48 89 c7             	mov    %rax,%rdi
   17dcc:	e8 bd 16 00 00       	call   1948e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   17dd1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17dd5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   17dd9:	eb 45                	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   17ddb:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   17de2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   17de9:	48 89 d6             	mov    %rdx,%rsi
   17dec:	48 89 c7             	mov    %rax,%rdi
   17def:	e8 12 15 00 00       	call   19306 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   17df4:	eb 2a                	jmp    17e20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   17df6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   17dfd:	00 
   17dfe:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   17e02:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   17e09:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17e0d:	48 89 ce             	mov    %rcx,%rsi
   17e10:	48 89 c7             	mov    %rax,%rdi
   17e13:	e8 be 14 00 00       	call   192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17e18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17e1c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   17e20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17e24:	c9                   	leave
   17e25:	c3                   	ret

0000000000017e26 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   17e26:	55                   	push   %rbp
   17e27:	48 89 e5             	mov    %rsp,%rbp
   17e2a:	48 83 ec 10          	sub    $0x10,%rsp
   17e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   17e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e36:	48 8b 40 08          	mov    0x8(%rax),%rax
   17e3a:	48 89 c7             	mov    %rax,%rdi
   17e3d:	e8 e0 16 00 00       	call   19522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   17e42:	c9                   	leave
   17e43:	c3                   	ret

0000000000017e44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   17e44:	55                   	push   %rbp
   17e45:	48 89 e5             	mov    %rsp,%rbp
   17e48:	48 83 ec 30          	sub    $0x30,%rsp
   17e4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17e50:	48 89 d1             	mov    %rdx,%rcx
   17e53:	48 89 f0             	mov    %rsi,%rax
   17e56:	48 89 fa             	mov    %rdi,%rdx
   17e59:	48 89 ca             	mov    %rcx,%rdx
   17e5c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   17e60:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   17e64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e68:	48 8b 00             	mov    (%rax),%rax
   17e6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e6f:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   17e73:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17e77:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   17e7b:	48 89 c7             	mov    %rax,%rdi
   17e7e:	e8 cb 16 00 00       	call   1954e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   17e83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   17e87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e8b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17e92:	00 
	  return __it;
   17e93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   17e97:	c9                   	leave
   17e98:	c3                   	ret
   17e99:	90                   	nop

0000000000017e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   17e9a:	55                   	push   %rbp
   17e9b:	48 89 e5             	mov    %rsp,%rbp
   17e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ea2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   17ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17eaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17eae:	48 89 10             	mov    %rdx,(%rax)
   17eb1:	90                   	nop
   17eb2:	5d                   	pop    %rbp
   17eb3:	c3                   	ret

0000000000017eb4 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   17eb4:	55                   	push   %rbp
   17eb5:	48 89 e5             	mov    %rsp,%rbp
   17eb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ebc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   17ec0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ec4:	48 8b 10             	mov    (%rax),%rdx
   17ec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ecb:	48 89 10             	mov    %rdx,(%rax)
   17ece:	90                   	nop
   17ecf:	5d                   	pop    %rbp
   17ed0:	c3                   	ret
   17ed1:	90                   	nop

0000000000017ed2 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   17ed2:	55                   	push   %rbp
   17ed3:	48 89 e5             	mov    %rsp,%rbp
   17ed6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   17eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ede:	5d                   	pop    %rbp
   17edf:	c3                   	ret

0000000000017ee0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   17ee0:	55                   	push   %rbp
   17ee1:	48 89 e5             	mov    %rsp,%rbp
   17ee4:	48 83 ec 10          	sub    $0x10,%rsp
   17ee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17eec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   17ef0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ef4:	48 89 c7             	mov    %rax,%rdi
   17ef7:	e8 16 17 00 00       	call   19612 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17efc:	48 89 c2             	mov    %rax,%rdx
   17eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f03:	48 89 d6             	mov    %rdx,%rsi
   17f06:	48 89 c7             	mov    %rax,%rdi
   17f09:	e8 38 35 ff ff       	call   b446 <_ZNSaIP9VkImage_TEC1ERKS1_>
   17f0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f12:	c9                   	leave
   17f13:	c3                   	ret

0000000000017f14 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   17f14:	55                   	push   %rbp
   17f15:	48 89 e5             	mov    %rsp,%rbp
   17f18:	48 83 ec 10          	sub    $0x10,%rsp
   17f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   17f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f2c:	48 89 d6             	mov    %rdx,%rsi
   17f2f:	48 89 c7             	mov    %rax,%rdi
   17f32:	e8 e9 16 00 00       	call   19620 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   17f37:	90                   	nop
   17f38:	c9                   	leave
   17f39:	c3                   	ret

0000000000017f3a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   17f3a:	55                   	push   %rbp
   17f3b:	48 89 e5             	mov    %rsp,%rbp
   17f3e:	48 83 ec 30          	sub    $0x30,%rsp
   17f42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17f46:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   17f4a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17f4e:	48 89 c7             	mov    %rax,%rdi
   17f51:	e8 72 49 ff ff       	call   c8c8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   17f56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17f5a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17f5e:	48 89 d6             	mov    %rdx,%rsi
   17f61:	48 89 c7             	mov    %rax,%rdi
   17f64:	e8 dd 16 00 00       	call   19646 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   17f69:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17f6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17f71:	48 89 d6             	mov    %rdx,%rsi
   17f74:	48 89 c7             	mov    %rax,%rdi
   17f77:	e8 ca 16 00 00       	call   19646 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   17f7c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   17f80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17f84:	48 89 d6             	mov    %rdx,%rsi
   17f87:	48 89 c7             	mov    %rax,%rdi
   17f8a:	e8 b7 16 00 00       	call   19646 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   17f8f:	90                   	nop
   17f90:	c9                   	leave
   17f91:	c3                   	ret

0000000000017f92 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   17f92:	55                   	push   %rbp
   17f93:	48 89 e5             	mov    %rsp,%rbp
   17f96:	48 83 ec 10          	sub    $0x10,%rsp
   17f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   17fa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17fa6:	48 89 c7             	mov    %rax,%rdi
   17fa9:	e8 d5 16 00 00       	call   19683 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   17fae:	90                   	nop
   17faf:	c9                   	leave
   17fb0:	c3                   	ret
   17fb1:	90                   	nop

0000000000017fb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   17fb2:	55                   	push   %rbp
   17fb3:	48 89 e5             	mov    %rsp,%rbp
   17fb6:	48 83 ec 10          	sub    $0x10,%rsp
   17fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   17fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fc2:	48 89 c7             	mov    %rax,%rdi
   17fc5:	e8 0a 17 00 00       	call   196d4 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17fca:	48 89 c7             	mov    %rax,%rdi
   17fcd:	e8 bf 16 00 00       	call   19691 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   17fd2:	c9                   	leave
   17fd3:	c3                   	ret

0000000000017fd4 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   17fd4:	55                   	push   %rbp
   17fd5:	48 89 e5             	mov    %rsp,%rbp
   17fd8:	48 83 ec 20          	sub    $0x20,%rsp
   17fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17fe4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   17fe8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ff0:	48 89 d6             	mov    %rdx,%rsi
   17ff3:	48 89 c7             	mov    %rax,%rdi
   17ff6:	e8 e7 16 00 00       	call   196e2 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   17ffb:	c9                   	leave
   17ffc:	c3                   	ret
   17ffd:	90                   	nop

0000000000017ffe <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   17ffe:	55                   	push   %rbp
   17fff:	48 89 e5             	mov    %rsp,%rbp
   18002:	53                   	push   %rbx
   18003:	48 83 ec 38          	sub    $0x38,%rsp
   18007:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1800b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1800f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   18013:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18017:	48 89 c7             	mov    %rax,%rdi
   1801a:	e8 93 ff ff ff       	call   17fb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1801f:	48 89 c3             	mov    %rax,%rbx
   18022:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18026:	48 89 c7             	mov    %rax,%rdi
   18029:	e8 3c c7 ff ff       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1802e:	48 29 c3             	sub    %rax,%rbx
   18031:	48 89 da             	mov    %rbx,%rdx
   18034:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18038:	48 39 c2             	cmp    %rax,%rdx
   1803b:	0f 92 c0             	setb   %al
   1803e:	84 c0                	test   %al,%al
   18040:	74 0c                	je     1804e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   18042:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18046:	48 89 c7             	mov    %rax,%rdi
   18049:	e8 a2 c1 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1804e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18052:	48 89 c7             	mov    %rax,%rdi
   18055:	e8 10 c7 ff ff       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1805a:	48 89 c3             	mov    %rax,%rbx
   1805d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18061:	48 89 c7             	mov    %rax,%rdi
   18064:	e8 01 c7 ff ff       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   18069:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1806d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   18071:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18075:	48 89 d6             	mov    %rdx,%rsi
   18078:	48 89 c7             	mov    %rax,%rdi
   1807b:	e8 ae 0e 00 00       	call   18f2e <_ZSt3maxImERKT_S2_S2_>
   18080:	48 8b 00             	mov    (%rax),%rax
   18083:	48 01 d8             	add    %rbx,%rax
   18086:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1808a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1808e:	48 89 c7             	mov    %rax,%rdi
   18091:	e8 d4 c6 ff ff       	call   1476a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   18096:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1809a:	72 12                	jb     180ae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1809c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180a0:	48 89 c7             	mov    %rax,%rdi
   180a3:	e8 0a ff ff ff       	call   17fb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   180a8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   180ac:	73 0e                	jae    180bc <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   180ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180b2:	48 89 c7             	mov    %rax,%rdi
   180b5:	e8 f8 fe ff ff       	call   17fb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   180ba:	eb 04                	jmp    180c0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   180bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   180c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   180c4:	c9                   	leave
   180c5:	c3                   	ret

00000000000180c6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   180c6:	55                   	push   %rbp
   180c7:	48 89 e5             	mov    %rsp,%rbp
   180ca:	48 83 ec 10          	sub    $0x10,%rsp
   180ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   180d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   180d6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   180db:	74 15                	je     180f2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   180dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   180e5:	48 89 d6             	mov    %rdx,%rsi
   180e8:	48 89 c7             	mov    %rax,%rdi
   180eb:	e8 1b 16 00 00       	call   1970b <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   180f0:	eb 05                	jmp    180f7 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   180f2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   180f7:	c9                   	leave
   180f8:	c3                   	ret

00000000000180f9 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   180f9:	55                   	push   %rbp
   180fa:	48 89 e5             	mov    %rsp,%rbp
   180fd:	48 83 ec 20          	sub    $0x20,%rsp
   18101:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18105:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18109:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1810d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   18111:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18115:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18119:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1811d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18121:	48 89 c7             	mov    %rax,%rdi
   18124:	e8 0c 16 00 00       	call   19735 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   18129:	c9                   	leave
   1812a:	c3                   	ret

000000000001812b <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   1812b:	55                   	push   %rbp
   1812c:	48 89 e5             	mov    %rsp,%rbp
   1812f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18133:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   18137:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1813b:	48 c1 e0 04          	shl    $0x4,%rax
   1813f:	48 89 c2             	mov    %rax,%rdx
   18142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18146:	48 01 d0             	add    %rdx,%rax
   18149:	5d                   	pop    %rbp
   1814a:	c3                   	ret
   1814b:	90                   	nop

000000000001814c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1814c:	55                   	push   %rbp
   1814d:	48 89 e5             	mov    %rsp,%rbp
   18150:	48 83 ec 10          	sub    $0x10,%rsp
   18154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18158:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1815c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18164:	48 89 d6             	mov    %rdx,%rsi
   18167:	48 89 c7             	mov    %rax,%rdi
   1816a:	e8 29 16 00 00       	call   19798 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   1816f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18173:	48 89 c7             	mov    %rax,%rdi
   18176:	e8 43 16 00 00       	call   197be <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   1817b:	90                   	nop
   1817c:	c9                   	leave
   1817d:	c3                   	ret

000000000001817e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   1817e:	55                   	push   %rbp
   1817f:	48 89 e5             	mov    %rsp,%rbp
   18182:	48 83 ec 20          	sub    $0x20,%rsp
   18186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1818a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1818e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   18192:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18197:	74 17                	je     181b0 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   18199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1819d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   181a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   181a5:	48 89 ce             	mov    %rcx,%rsi
   181a8:	48 89 c7             	mov    %rax,%rdi
   181ab:	e8 3c 16 00 00       	call   197ec <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   181b0:	90                   	nop
   181b1:	c9                   	leave
   181b2:	c3                   	ret
   181b3:	90                   	nop

00000000000181b4 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   181b4:	55                   	push   %rbp
   181b5:	48 89 e5             	mov    %rsp,%rbp
   181b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   181bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181c0:	48 8b 40 08          	mov    0x8(%rax),%rax
   181c4:	5d                   	pop    %rbp
   181c5:	c3                   	ret

00000000000181c6 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   181c6:	55                   	push   %rbp
   181c7:	48 89 e5             	mov    %rsp,%rbp
   181ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   181ce:	90                   	nop
   181cf:	5d                   	pop    %rbp
   181d0:	c3                   	ret

00000000000181d1 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   181d1:	55                   	push   %rbp
   181d2:	48 89 e5             	mov    %rsp,%rbp
   181d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   181d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   181dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   181e1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   181e5:	48 c1 f8 04          	sar    $0x4,%rax
   181e9:	48 89 c2             	mov    %rax,%rdx
   181ec:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   181f3:	e3 38 8e 
   181f6:	48 0f af c2          	imul   %rdx,%rax
    }
   181fa:	5d                   	pop    %rbp
   181fb:	c3                   	ret

00000000000181fc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   181fc:	55                   	push   %rbp
   181fd:	48 89 e5             	mov    %rsp,%rbp
   18200:	53                   	push   %rbx
   18201:	48 83 ec 28          	sub    $0x28,%rsp
   18205:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18209:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1820d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18211:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18215:	48 89 d6             	mov    %rdx,%rsi
   18218:	48 89 c7             	mov    %rax,%rdi
   1821b:	e8 78 15 00 00       	call   19798 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   18220:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18224:	48 89 c7             	mov    %rax,%rdi
   18227:	e8 ee 15 00 00       	call   1981a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   1822c:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18230:	0f 92 c3             	setb   %bl
   18233:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18237:	48 89 c7             	mov    %rax,%rdi
   1823a:	e8 97 c2 ff ff       	call   144d6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   1823f:	84 db                	test   %bl,%bl
   18241:	74 0f                	je     18252 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   18243:	48 8d 05 a6 89 00 00 	lea    0x89a6(%rip),%rax        # 20bf0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   1824a:	48 89 c7             	mov    %rax,%rdi
   1824d:	e8 9e bf fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18252:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18256:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1825a:	c9                   	leave
   1825b:	c3                   	ret

000000000001825c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1825c:	55                   	push   %rbp
   1825d:	48 89 e5             	mov    %rsp,%rbp
   18260:	48 83 ec 10          	sub    $0x10,%rsp
   18264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1826c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18271:	74 15                	je     18288 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   18273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18277:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1827b:	48 89 d6             	mov    %rdx,%rsi
   1827e:	48 89 c7             	mov    %rax,%rdi
   18281:	e8 d6 15 00 00       	call   1985c <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   18286:	eb 05                	jmp    1828d <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   18288:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1828d:	c9                   	leave
   1828e:	c3                   	ret

000000000001828f <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1828f:	55                   	push   %rbp
   18290:	48 89 e5             	mov    %rsp,%rbp
   18293:	48 83 ec 20          	sub    $0x20,%rsp
   18297:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1829b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1829f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   182a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   182a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   182ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   182af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182b3:	48 89 ce             	mov    %rcx,%rsi
   182b6:	48 89 c7             	mov    %rax,%rdi
   182b9:	e8 c8 15 00 00       	call   19886 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   182be:	c9                   	leave
   182bf:	c3                   	ret

00000000000182c0 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   182c0:	55                   	push   %rbp
   182c1:	48 89 e5             	mov    %rsp,%rbp
   182c4:	48 83 ec 10          	sub    $0x10,%rsp
   182c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   182d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   182d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182d8:	48 89 d6             	mov    %rdx,%rsi
   182db:	48 89 c7             	mov    %rax,%rdi
   182de:	e8 d8 15 00 00       	call   198bb <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   182e3:	90                   	nop
   182e4:	c9                   	leave
   182e5:	c3                   	ret

00000000000182e6 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   182e6:	55                   	push   %rbp
   182e7:	48 89 e5             	mov    %rsp,%rbp
   182ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182ee:	90                   	nop
   182ef:	5d                   	pop    %rbp
   182f0:	c3                   	ret
   182f1:	90                   	nop

00000000000182f2 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   182f2:	55                   	push   %rbp
   182f3:	48 89 e5             	mov    %rsp,%rbp
   182f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182fa:	90                   	nop
   182fb:	5d                   	pop    %rbp
   182fc:	c3                   	ret

00000000000182fd <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   182fd:	55                   	push   %rbp
   182fe:	48 89 e5             	mov    %rsp,%rbp
   18301:	53                   	push   %rbx
   18302:	48 83 ec 28          	sub    $0x28,%rsp
   18306:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1830a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1830e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18312:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18316:	48 89 d6             	mov    %rdx,%rsi
   18319:	48 89 c7             	mov    %rax,%rdi
   1831c:	e8 ff 00 00 00       	call   18420 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   18321:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18325:	48 89 c7             	mov    %rax,%rdi
   18328:	e8 9d 15 00 00       	call   198ca <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   1832d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18331:	0f 92 c3             	setb   %bl
   18334:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18338:	48 89 c7             	mov    %rax,%rdi
   1833b:	e8 ea de ff ff       	call   1622a <_ZNSaIP12VkPipeline_TED1Ev>
   18340:	84 db                	test   %bl,%bl
   18342:	74 0f                	je     18353 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   18344:	48 8d 05 a5 88 00 00 	lea    0x88a5(%rip),%rax        # 20bf0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   1834b:	48 89 c7             	mov    %rax,%rdi
   1834e:	e8 9d be fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18357:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1835b:	c9                   	leave
   1835c:	c3                   	ret
   1835d:	90                   	nop

000000000001835e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1835e:	55                   	push   %rbp
   1835f:	48 89 e5             	mov    %rsp,%rbp
   18362:	53                   	push   %rbx
   18363:	48 83 ec 28          	sub    $0x28,%rsp
   18367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1836b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1836f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   18373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18377:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1837b:	48 89 d6             	mov    %rdx,%rsi
   1837e:	48 89 c7             	mov    %rax,%rdi
   18381:	e8 86 15 00 00       	call   1990c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   18386:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1838a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1838e:	48 89 d6             	mov    %rdx,%rsi
   18391:	48 89 c7             	mov    %rax,%rdi
   18394:	e8 a5 15 00 00       	call   1993e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   18399:	eb 1a                	jmp    183b5 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   1839b:	48 89 c3             	mov    %rax,%rbx
   1839e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183a2:	48 89 c7             	mov    %rax,%rdi
   183a5:	e8 14 c2 ff ff       	call   145be <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   183aa:	48 89 d8             	mov    %rbx,%rax
   183ad:	48 89 c7             	mov    %rax,%rdi
   183b0:	e8 4b c5 fe ff       	call   4900 <_Unwind_Resume@plt>
   183b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   183b9:	c9                   	leave
   183ba:	c3                   	ret
   183bb:	90                   	nop

00000000000183bc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   183bc:	55                   	push   %rbp
   183bd:	48 89 e5             	mov    %rsp,%rbp
   183c0:	48 83 ec 10          	sub    $0x10,%rsp
   183c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   183c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   183cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183d0:	48 89 c7             	mov    %rax,%rdi
   183d3:	e8 7a df ff ff       	call   16352 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   183d8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   183db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183df:	48 8b 00             	mov    (%rax),%rax
   183e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   183e6:	48 89 ce             	mov    %rcx,%rsi
   183e9:	48 89 c7             	mov    %rax,%rdi
   183ec:	e8 a3 15 00 00       	call   19994 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   183f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   183f5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   183f9:	90                   	nop
   183fa:	c9                   	leave
   183fb:	c3                   	ret

00000000000183fc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   183fc:	55                   	push   %rbp
   183fd:	48 89 e5             	mov    %rsp,%rbp
   18400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18404:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   18408:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1840c:	5d                   	pop    %rbp
   1840d:	c3                   	ret

000000000001840e <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1840e:	55                   	push   %rbp
   1840f:	48 89 e5             	mov    %rsp,%rbp
   18412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1841a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1841e:	5d                   	pop    %rbp
   1841f:	c3                   	ret

0000000000018420 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18420:	55                   	push   %rbp
   18421:	48 89 e5             	mov    %rsp,%rbp
   18424:	48 83 ec 10          	sub    $0x10,%rsp
   18428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1842c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18430:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18438:	48 89 d6             	mov    %rdx,%rsi
   1843b:	48 89 c7             	mov    %rax,%rdi
   1843e:	e8 7b 15 00 00       	call   199be <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   18443:	90                   	nop
   18444:	c9                   	leave
   18445:	c3                   	ret

0000000000018446 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   18446:	55                   	push   %rbp
   18447:	48 89 e5             	mov    %rsp,%rbp
   1844a:	48 83 ec 20          	sub    $0x20,%rsp
   1844e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18456:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1845a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1845f:	74 17                	je     18478 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   18461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18465:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18469:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1846d:	48 89 ce             	mov    %rcx,%rsi
   18470:	48 89 c7             	mov    %rax,%rdi
   18473:	e8 55 15 00 00       	call   199cd <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   18478:	90                   	nop
   18479:	c9                   	leave
   1847a:	c3                   	ret

000000000001847b <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1847b:	55                   	push   %rbp
   1847c:	48 89 e5             	mov    %rsp,%rbp
   1847f:	48 83 ec 10          	sub    $0x10,%rsp
   18483:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18487:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1848b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1848f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18493:	48 89 d6             	mov    %rdx,%rsi
   18496:	48 89 c7             	mov    %rax,%rdi
   18499:	e8 5d 15 00 00       	call   199fb <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   1849e:	90                   	nop
   1849f:	c9                   	leave
   184a0:	c3                   	ret
   184a1:	90                   	nop

00000000000184a2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   184a2:	55                   	push   %rbp
   184a3:	48 89 e5             	mov    %rsp,%rbp
   184a6:	48 83 ec 10          	sub    $0x10,%rsp
   184aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   184ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184b2:	48 89 c7             	mov    %rax,%rdi
   184b5:	e8 92 15 00 00       	call   19a4c <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   184ba:	48 89 c7             	mov    %rax,%rdi
   184bd:	e8 48 15 00 00       	call   19a0a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   184c2:	c9                   	leave
   184c3:	c3                   	ret

00000000000184c4 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   184c4:	55                   	push   %rbp
   184c5:	48 89 e5             	mov    %rsp,%rbp
   184c8:	48 83 ec 20          	sub    $0x20,%rsp
   184cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   184d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   184d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   184d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   184dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184e0:	48 89 d6             	mov    %rdx,%rsi
   184e3:	48 89 c7             	mov    %rax,%rdi
   184e6:	e8 6f 15 00 00       	call   19a5a <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   184eb:	c9                   	leave
   184ec:	c3                   	ret
   184ed:	90                   	nop

00000000000184ee <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   184ee:	55                   	push   %rbp
   184ef:	48 89 e5             	mov    %rsp,%rbp
   184f2:	53                   	push   %rbx
   184f3:	48 83 ec 38          	sub    $0x38,%rsp
   184f7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   184fb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   184ff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   18503:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18507:	48 89 c7             	mov    %rax,%rdi
   1850a:	e8 93 ff ff ff       	call   184a2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1850f:	48 89 c3             	mov    %rax,%rbx
   18512:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18516:	48 89 c7             	mov    %rax,%rdi
   18519:	e8 6c de ff ff       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1851e:	48 29 c3             	sub    %rax,%rbx
   18521:	48 89 da             	mov    %rbx,%rdx
   18524:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18528:	48 39 c2             	cmp    %rax,%rdx
   1852b:	0f 92 c0             	setb   %al
   1852e:	84 c0                	test   %al,%al
   18530:	74 0c                	je     1853e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   18532:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18536:	48 89 c7             	mov    %rax,%rdi
   18539:	e8 b2 bc fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1853e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18542:	48 89 c7             	mov    %rax,%rdi
   18545:	e8 40 de ff ff       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1854a:	48 89 c3             	mov    %rax,%rbx
   1854d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18551:	48 89 c7             	mov    %rax,%rdi
   18554:	e8 31 de ff ff       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   18559:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1855d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   18561:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18565:	48 89 d6             	mov    %rdx,%rsi
   18568:	48 89 c7             	mov    %rax,%rdi
   1856b:	e8 be 09 00 00       	call   18f2e <_ZSt3maxImERKT_S2_S2_>
   18570:	48 8b 00             	mov    (%rax),%rax
   18573:	48 01 d8             	add    %rbx,%rax
   18576:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1857a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1857e:	48 89 c7             	mov    %rax,%rdi
   18581:	e8 04 de ff ff       	call   1638a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   18586:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1858a:	72 12                	jb     1859e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1858c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18590:	48 89 c7             	mov    %rax,%rdi
   18593:	e8 0a ff ff ff       	call   184a2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   18598:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1859c:	73 0e                	jae    185ac <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1859e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185a2:	48 89 c7             	mov    %rax,%rdi
   185a5:	e8 f8 fe ff ff       	call   184a2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   185aa:	eb 04                	jmp    185b0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   185ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   185b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   185b4:	c9                   	leave
   185b5:	c3                   	ret

00000000000185b6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   185b6:	55                   	push   %rbp
   185b7:	48 89 e5             	mov    %rsp,%rbp
   185ba:	48 83 ec 10          	sub    $0x10,%rsp
   185be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   185c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   185cb:	74 15                	je     185e2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   185cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   185d5:	48 89 d6             	mov    %rdx,%rsi
   185d8:	48 89 c7             	mov    %rax,%rdi
   185db:	e8 a3 14 00 00       	call   19a83 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   185e0:	eb 05                	jmp    185e7 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   185e2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   185e7:	c9                   	leave
   185e8:	c3                   	ret

00000000000185e9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   185e9:	55                   	push   %rbp
   185ea:	48 89 e5             	mov    %rsp,%rbp
   185ed:	48 83 ec 20          	sub    $0x20,%rsp
   185f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   185fd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   18601:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18605:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18609:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1860d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18611:	48 89 c7             	mov    %rax,%rdi
   18614:	e8 94 14 00 00       	call   19aad <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   18619:	c9                   	leave
   1861a:	c3                   	ret
   1861b:	90                   	nop

000000000001861c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1861c:	55                   	push   %rbp
   1861d:	48 89 e5             	mov    %rsp,%rbp
   18620:	48 83 ec 10          	sub    $0x10,%rsp
   18624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1862c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18634:	48 89 d6             	mov    %rdx,%rsi
   18637:	48 89 c7             	mov    %rax,%rdi
   1863a:	e8 d1 14 00 00       	call   19b10 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1863f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18643:	48 89 c7             	mov    %rax,%rdi
   18646:	e8 6b eb ff ff       	call   171b6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1864b:	90                   	nop
   1864c:	c9                   	leave
   1864d:	c3                   	ret

000000000001864e <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   1864e:	55                   	push   %rbp
   1864f:	48 89 e5             	mov    %rsp,%rbp
   18652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1865a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1865e:	5d                   	pop    %rbp
   1865f:	c3                   	ret

0000000000018660 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   18660:	55                   	push   %rbp
   18661:	48 89 e5             	mov    %rsp,%rbp
   18664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18668:	90                   	nop
   18669:	5d                   	pop    %rbp
   1866a:	c3                   	ret

000000000001866b <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1866b:	55                   	push   %rbp
   1866c:	48 89 e5             	mov    %rsp,%rbp
   1866f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18673:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   18677:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1867b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1867f:	48 c1 f8 03          	sar    $0x3,%rax
    }
   18683:	5d                   	pop    %rbp
   18684:	c3                   	ret

0000000000018685 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18685:	55                   	push   %rbp
   18686:	48 89 e5             	mov    %rsp,%rbp
   18689:	53                   	push   %rbx
   1868a:	48 83 ec 28          	sub    $0x28,%rsp
   1868e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18692:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18696:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1869a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1869e:	48 89 d6             	mov    %rdx,%rsi
   186a1:	48 89 c7             	mov    %rax,%rdi
   186a4:	e8 67 14 00 00       	call   19b10 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   186a9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   186ad:	48 89 c7             	mov    %rax,%rdi
   186b0:	e8 dc 0f 00 00       	call   19691 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   186b5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   186b9:	0f 92 c3             	setb   %bl
   186bc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   186c0:	48 89 c7             	mov    %rax,%rdi
   186c3:	e8 68 c1 ff ff       	call   14830 <_ZNSaIP13VkImageView_TED1Ev>
   186c8:	84 db                	test   %bl,%bl
   186ca:	74 0f                	je     186db <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   186cc:	48 8d 05 1d 85 00 00 	lea    0x851d(%rip),%rax        # 20bf0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   186d3:	48 89 c7             	mov    %rax,%rdi
   186d6:	e8 15 bb fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   186db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   186df:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   186e3:	c9                   	leave
   186e4:	c3                   	ret

00000000000186e5 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   186e5:	55                   	push   %rbp
   186e6:	48 89 e5             	mov    %rsp,%rbp
   186e9:	48 83 ec 20          	sub    $0x20,%rsp
   186ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   186f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   186f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   186fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18701:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18709:	48 89 ce             	mov    %rcx,%rsi
   1870c:	48 89 c7             	mov    %rax,%rdi
   1870f:	e8 22 14 00 00       	call   19b36 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   18714:	c9                   	leave
   18715:	c3                   	ret

0000000000018716 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18716:	55                   	push   %rbp
   18717:	48 89 e5             	mov    %rsp,%rbp
   1871a:	48 83 ec 10          	sub    $0x10,%rsp
   1871e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18726:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1872a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1872e:	48 89 d6             	mov    %rdx,%rsi
   18731:	48 89 c7             	mov    %rax,%rdi
   18734:	e8 32 14 00 00       	call   19b6b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   18739:	90                   	nop
   1873a:	c9                   	leave
   1873b:	c3                   	ret

000000000001873c <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   1873c:	55                   	push   %rbp
   1873d:	48 89 e5             	mov    %rsp,%rbp
   18740:	48 83 ec 10          	sub    $0x10,%rsp
   18744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   1874c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18750:	48 89 c7             	mov    %rax,%rdi
   18753:	e8 22 14 00 00       	call   19b7a <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18758:	48 89 c2             	mov    %rax,%rdx
   1875b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1875f:	48 89 d6             	mov    %rdx,%rsi
   18762:	48 89 c7             	mov    %rax,%rdi
   18765:	e8 0e e2 fe ff       	call   6978 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   1876a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1876e:	c9                   	leave
   1876f:	c3                   	ret

0000000000018770 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   18770:	55                   	push   %rbp
   18771:	48 89 e5             	mov    %rsp,%rbp
   18774:	48 83 ec 10          	sub    $0x10,%rsp
   18778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1877c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   18780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18784:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18788:	48 89 d6             	mov    %rdx,%rsi
   1878b:	48 89 c7             	mov    %rax,%rdi
   1878e:	e8 f5 13 00 00       	call   19b88 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   18793:	90                   	nop
   18794:	c9                   	leave
   18795:	c3                   	ret

0000000000018796 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   18796:	55                   	push   %rbp
   18797:	48 89 e5             	mov    %rsp,%rbp
   1879a:	48 83 ec 30          	sub    $0x30,%rsp
   1879e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   187a2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   187a6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   187aa:	48 89 c7             	mov    %rax,%rdi
   187ad:	e8 94 e3 fe ff       	call   6b46 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   187b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   187b6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   187ba:	48 89 d6             	mov    %rdx,%rsi
   187bd:	48 89 c7             	mov    %rax,%rdi
   187c0:	e8 e9 13 00 00       	call   19bae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   187c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   187c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   187cd:	48 89 d6             	mov    %rdx,%rsi
   187d0:	48 89 c7             	mov    %rax,%rdi
   187d3:	e8 d6 13 00 00       	call   19bae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   187d8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   187dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   187e0:	48 89 d6             	mov    %rdx,%rsi
   187e3:	48 89 c7             	mov    %rax,%rdi
   187e6:	e8 c3 13 00 00       	call   19bae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   187eb:	90                   	nop
   187ec:	c9                   	leave
   187ed:	c3                   	ret

00000000000187ee <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   187ee:	55                   	push   %rbp
   187ef:	48 89 e5             	mov    %rsp,%rbp
   187f2:	48 83 ec 10          	sub    $0x10,%rsp
   187f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   187fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18802:	48 89 c7             	mov    %rax,%rdi
   18805:	e8 e1 13 00 00       	call   19beb <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   1880a:	90                   	nop
   1880b:	c9                   	leave
   1880c:	c3                   	ret
   1880d:	90                   	nop

000000000001880e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1880e:	55                   	push   %rbp
   1880f:	48 89 e5             	mov    %rsp,%rbp
   18812:	48 83 ec 10          	sub    $0x10,%rsp
   18816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1881a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1881e:	48 89 c7             	mov    %rax,%rdi
   18821:	e8 16 14 00 00       	call   19c3c <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18826:	48 89 c7             	mov    %rax,%rdi
   18829:	e8 cb 13 00 00       	call   19bf9 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   1882e:	c9                   	leave
   1882f:	c3                   	ret

0000000000018830 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   18830:	55                   	push   %rbp
   18831:	48 89 e5             	mov    %rsp,%rbp
   18834:	48 83 ec 20          	sub    $0x20,%rsp
   18838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1883c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18840:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   18844:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1884c:	48 89 d6             	mov    %rdx,%rsi
   1884f:	48 89 c7             	mov    %rax,%rdi
   18852:	e8 f3 13 00 00       	call   19c4a <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   18857:	c9                   	leave
   18858:	c3                   	ret
   18859:	90                   	nop

000000000001885a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1885a:	55                   	push   %rbp
   1885b:	48 89 e5             	mov    %rsp,%rbp
   1885e:	53                   	push   %rbx
   1885f:	48 83 ec 38          	sub    $0x38,%rsp
   18863:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18867:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1886b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1886f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18873:	48 89 c7             	mov    %rax,%rdi
   18876:	e8 93 ff ff ff       	call   1880e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1887b:	48 89 c3             	mov    %rax,%rbx
   1887e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18882:	48 89 c7             	mov    %rax,%rdi
   18885:	e8 8e c6 ff ff       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1888a:	48 29 c3             	sub    %rax,%rbx
   1888d:	48 89 da             	mov    %rbx,%rdx
   18890:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18894:	48 39 c2             	cmp    %rax,%rdx
   18897:	0f 92 c0             	setb   %al
   1889a:	84 c0                	test   %al,%al
   1889c:	74 0c                	je     188aa <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1889e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   188a2:	48 89 c7             	mov    %rax,%rdi
   188a5:	e8 46 b9 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   188aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   188ae:	48 89 c7             	mov    %rax,%rdi
   188b1:	e8 62 c6 ff ff       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   188b6:	48 89 c3             	mov    %rax,%rbx
   188b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   188bd:	48 89 c7             	mov    %rax,%rdi
   188c0:	e8 53 c6 ff ff       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   188c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   188c9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   188cd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   188d1:	48 89 d6             	mov    %rdx,%rsi
   188d4:	48 89 c7             	mov    %rax,%rdi
   188d7:	e8 52 06 00 00       	call   18f2e <_ZSt3maxImERKT_S2_S2_>
   188dc:	48 8b 00             	mov    (%rax),%rax
   188df:	48 01 d8             	add    %rbx,%rax
   188e2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   188e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   188ea:	48 89 c7             	mov    %rax,%rdi
   188ed:	e8 26 c6 ff ff       	call   14f18 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   188f2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   188f6:	72 12                	jb     1890a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   188f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   188fc:	48 89 c7             	mov    %rax,%rdi
   188ff:	e8 0a ff ff ff       	call   1880e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   18904:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   18908:	73 0e                	jae    18918 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1890a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1890e:	48 89 c7             	mov    %rax,%rdi
   18911:	e8 f8 fe ff ff       	call   1880e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   18916:	eb 04                	jmp    1891c <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   18918:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1891c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18920:	c9                   	leave
   18921:	c3                   	ret

0000000000018922 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   18922:	55                   	push   %rbp
   18923:	48 89 e5             	mov    %rsp,%rbp
   18926:	48 83 ec 10          	sub    $0x10,%rsp
   1892a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1892e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18932:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18937:	74 15                	je     1894e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   18939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1893d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18941:	48 89 d6             	mov    %rdx,%rsi
   18944:	48 89 c7             	mov    %rax,%rdi
   18947:	e8 27 13 00 00       	call   19c73 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   1894c:	eb 05                	jmp    18953 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   1894e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   18953:	c9                   	leave
   18954:	c3                   	ret

0000000000018955 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   18955:	55                   	push   %rbp
   18956:	48 89 e5             	mov    %rsp,%rbp
   18959:	48 83 ec 20          	sub    $0x20,%rsp
   1895d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18961:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18965:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18969:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1896d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18971:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18975:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1897d:	48 89 c7             	mov    %rax,%rdi
   18980:	e8 18 13 00 00       	call   19c9d <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   18985:	c9                   	leave
   18986:	c3                   	ret
   18987:	90                   	nop

0000000000018988 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   18988:	55                   	push   %rbp
   18989:	48 89 e5             	mov    %rsp,%rbp
   1898c:	48 83 ec 10          	sub    $0x10,%rsp
   18990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   18994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18998:	48 89 c7             	mov    %rax,%rdi
   1899b:	e8 a2 13 00 00       	call   19d42 <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   189a0:	48 89 c7             	mov    %rax,%rdi
   189a3:	e8 58 13 00 00       	call   19d00 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   189a8:	c9                   	leave
   189a9:	c3                   	ret

00000000000189aa <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   189aa:	55                   	push   %rbp
   189ab:	48 89 e5             	mov    %rsp,%rbp
   189ae:	48 83 ec 20          	sub    $0x20,%rsp
   189b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   189ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   189be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   189c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189c6:	48 89 d6             	mov    %rdx,%rsi
   189c9:	48 89 c7             	mov    %rax,%rdi
   189cc:	e8 7f 13 00 00       	call   19d50 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   189d1:	c9                   	leave
   189d2:	c3                   	ret
   189d3:	90                   	nop

00000000000189d4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   189d4:	55                   	push   %rbp
   189d5:	48 89 e5             	mov    %rsp,%rbp
   189d8:	53                   	push   %rbx
   189d9:	48 83 ec 38          	sub    $0x38,%rsp
   189dd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   189e1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   189e5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   189e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   189ed:	48 89 c7             	mov    %rax,%rdi
   189f0:	e8 93 ff ff ff       	call   18988 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   189f5:	48 89 c3             	mov    %rax,%rbx
   189f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   189fc:	48 89 c7             	mov    %rax,%rdi
   189ff:	e8 5a e1 ff ff       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18a04:	48 29 c3             	sub    %rax,%rbx
   18a07:	48 89 da             	mov    %rbx,%rdx
   18a0a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18a0e:	48 39 c2             	cmp    %rax,%rdx
   18a11:	0f 92 c0             	setb   %al
   18a14:	84 c0                	test   %al,%al
   18a16:	74 0c                	je     18a24 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   18a18:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18a1c:	48 89 c7             	mov    %rax,%rdi
   18a1f:	e8 cc b7 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   18a24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a28:	48 89 c7             	mov    %rax,%rdi
   18a2b:	e8 2e e1 ff ff       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18a30:	48 89 c3             	mov    %rax,%rbx
   18a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a37:	48 89 c7             	mov    %rax,%rdi
   18a3a:	e8 1f e1 ff ff       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18a3f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18a43:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   18a47:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   18a4b:	48 89 d6             	mov    %rdx,%rsi
   18a4e:	48 89 c7             	mov    %rax,%rdi
   18a51:	e8 d8 04 00 00       	call   18f2e <_ZSt3maxImERKT_S2_S2_>
   18a56:	48 8b 00             	mov    (%rax),%rax
   18a59:	48 01 d8             	add    %rbx,%rax
   18a5c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   18a60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a64:	48 89 c7             	mov    %rax,%rdi
   18a67:	e8 f2 e0 ff ff       	call   16b5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   18a6c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   18a70:	72 12                	jb     18a84 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   18a72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a76:	48 89 c7             	mov    %rax,%rdi
   18a79:	e8 0a ff ff ff       	call   18988 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   18a7e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   18a82:	73 0e                	jae    18a92 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   18a84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a88:	48 89 c7             	mov    %rax,%rdi
   18a8b:	e8 f8 fe ff ff       	call   18988 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   18a90:	eb 04                	jmp    18a96 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   18a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   18a96:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18a9a:	c9                   	leave
   18a9b:	c3                   	ret

0000000000018a9c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   18a9c:	55                   	push   %rbp
   18a9d:	48 89 e5             	mov    %rsp,%rbp
   18aa0:	48 83 ec 10          	sub    $0x10,%rsp
   18aa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18aa8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18aac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18ab1:	74 15                	je     18ac8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   18ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ab7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18abb:	48 89 d6             	mov    %rdx,%rsi
   18abe:	48 89 c7             	mov    %rax,%rdi
   18ac1:	e8 b3 12 00 00       	call   19d79 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   18ac6:	eb 05                	jmp    18acd <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   18ac8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   18acd:	c9                   	leave
   18ace:	c3                   	ret

0000000000018acf <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   18acf:	55                   	push   %rbp
   18ad0:	48 89 e5             	mov    %rsp,%rbp
   18ad3:	48 83 ec 20          	sub    $0x20,%rsp
   18ad7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18adb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18adf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18ae3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   18ae7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18aeb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18aef:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   18af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18af7:	48 89 c7             	mov    %rax,%rdi
   18afa:	e8 a4 12 00 00       	call   19da3 <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   18aff:	c9                   	leave
   18b00:	c3                   	ret
   18b01:	90                   	nop

0000000000018b02 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   18b02:	55                   	push   %rbp
   18b03:	48 89 e5             	mov    %rsp,%rbp
   18b06:	48 83 ec 10          	sub    $0x10,%rsp
   18b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   18b12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b1a:	48 89 d6             	mov    %rdx,%rsi
   18b1d:	48 89 c7             	mov    %rax,%rdi
   18b20:	e8 e1 12 00 00       	call   19e06 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   18b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b29:	48 89 c7             	mov    %rax,%rdi
   18b2c:	e8 ad e7 ff ff       	call   172de <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18b31:	90                   	nop
   18b32:	c9                   	leave
   18b33:	c3                   	ret

0000000000018b34 <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   18b34:	55                   	push   %rbp
   18b35:	48 89 e5             	mov    %rsp,%rbp
   18b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b40:	48 8b 40 08          	mov    0x8(%rax),%rax
   18b44:	5d                   	pop    %rbp
   18b45:	c3                   	ret

0000000000018b46 <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   18b46:	55                   	push   %rbp
   18b47:	48 89 e5             	mov    %rsp,%rbp
   18b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18b4e:	90                   	nop
   18b4f:	5d                   	pop    %rbp
   18b50:	c3                   	ret

0000000000018b51 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   18b51:	55                   	push   %rbp
   18b52:	48 89 e5             	mov    %rsp,%rbp
   18b55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   18b5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18b61:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   18b65:	48 c1 f8 03          	sar    $0x3,%rax
    }
   18b69:	5d                   	pop    %rbp
   18b6a:	c3                   	ret

0000000000018b6b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18b6b:	55                   	push   %rbp
   18b6c:	48 89 e5             	mov    %rsp,%rbp
   18b6f:	53                   	push   %rbx
   18b70:	48 83 ec 28          	sub    $0x28,%rsp
   18b74:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18b78:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18b7c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18b80:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18b84:	48 89 d6             	mov    %rdx,%rsi
   18b87:	48 89 c7             	mov    %rax,%rdi
   18b8a:	e8 77 12 00 00       	call   19e06 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   18b8f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18b93:	48 89 c7             	mov    %rax,%rdi
   18b96:	e8 5e 10 00 00       	call   19bf9 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   18b9b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18b9f:	0f 92 c3             	setb   %bl
   18ba2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18ba6:	48 89 c7             	mov    %rax,%rdi
   18ba9:	e8 7e c1 ff ff       	call   14d2c <_ZNSaIP13VkSemaphore_TED1Ev>
   18bae:	84 db                	test   %bl,%bl
   18bb0:	74 0f                	je     18bc1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   18bb2:	48 8d 05 37 80 00 00 	lea    0x8037(%rip),%rax        # 20bf0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   18bb9:	48 89 c7             	mov    %rax,%rdi
   18bbc:	e8 2f b6 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18bc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18bc5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18bc9:	c9                   	leave
   18bca:	c3                   	ret

0000000000018bcb <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   18bcb:	55                   	push   %rbp
   18bcc:	48 89 e5             	mov    %rsp,%rbp
   18bcf:	48 83 ec 20          	sub    $0x20,%rsp
   18bd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18bd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18bdb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18bdf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   18be3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18be7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bef:	48 89 ce             	mov    %rcx,%rsi
   18bf2:	48 89 c7             	mov    %rax,%rdi
   18bf5:	e8 32 12 00 00       	call   19e2c <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   18bfa:	c9                   	leave
   18bfb:	c3                   	ret

0000000000018bfc <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18bfc:	55                   	push   %rbp
   18bfd:	48 89 e5             	mov    %rsp,%rbp
   18c00:	48 83 ec 10          	sub    $0x10,%rsp
   18c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18c0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c14:	48 89 d6             	mov    %rdx,%rsi
   18c17:	48 89 c7             	mov    %rax,%rdi
   18c1a:	e8 42 12 00 00       	call   19e61 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   18c1f:	90                   	nop
   18c20:	c9                   	leave
   18c21:	c3                   	ret

0000000000018c22 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   18c22:	55                   	push   %rbp
   18c23:	48 89 e5             	mov    %rsp,%rbp
   18c26:	48 83 ec 10          	sub    $0x10,%rsp
   18c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   18c32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c3a:	48 89 d6             	mov    %rdx,%rsi
   18c3d:	48 89 c7             	mov    %rax,%rdi
   18c40:	e8 2b 12 00 00       	call   19e70 <_ZNSaIjEC1ERKS_>
   18c45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c49:	48 89 c7             	mov    %rax,%rdi
   18c4c:	e8 45 12 00 00       	call   19e96 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   18c51:	90                   	nop
   18c52:	c9                   	leave
   18c53:	c3                   	ret

0000000000018c54 <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   18c54:	55                   	push   %rbp
   18c55:	48 89 e5             	mov    %rsp,%rbp
   18c58:	48 83 ec 20          	sub    $0x20,%rsp
   18c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   18c68:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18c6d:	74 17                	je     18c86 <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   18c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18c77:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18c7b:	48 89 ce             	mov    %rcx,%rsi
   18c7e:	48 89 c7             	mov    %rax,%rdi
   18c81:	e8 3e 12 00 00       	call   19ec4 <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   18c86:	90                   	nop
   18c87:	c9                   	leave
   18c88:	c3                   	ret
   18c89:	90                   	nop

0000000000018c8a <_ZNKSt16initializer_listIjE4sizeEv>:
   18c8a:	55                   	push   %rbp
   18c8b:	48 89 e5             	mov    %rsp,%rbp
   18c8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c96:	48 8b 40 08          	mov    0x8(%rax),%rax
   18c9a:	5d                   	pop    %rbp
   18c9b:	c3                   	ret

0000000000018c9c <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   18c9c:	55                   	push   %rbp
   18c9d:	48 89 e5             	mov    %rsp,%rbp
   18ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18ca4:	90                   	nop
   18ca5:	5d                   	pop    %rbp
   18ca6:	c3                   	ret

0000000000018ca7 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   18ca7:	55                   	push   %rbp
   18ca8:	48 89 e5             	mov    %rsp,%rbp
   18cab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18caf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   18cb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18cb7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   18cbb:	48 c1 f8 02          	sar    $0x2,%rax
    }
   18cbf:	5d                   	pop    %rbp
   18cc0:	c3                   	ret

0000000000018cc1 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   18cc1:	55                   	push   %rbp
   18cc2:	48 89 e5             	mov    %rsp,%rbp
   18cc5:	53                   	push   %rbx
   18cc6:	48 83 ec 28          	sub    $0x28,%rsp
   18cca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18cce:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   18cd2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   18cd6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18cda:	48 89 d6             	mov    %rdx,%rsi
   18cdd:	48 89 c7             	mov    %rax,%rdi
   18ce0:	e8 8b 11 00 00       	call   19e70 <_ZNSaIjEC1ERKS_>
   18ce5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18ce9:	48 89 c7             	mov    %rax,%rdi
   18cec:	e8 01 12 00 00       	call   19ef2 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   18cf1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   18cf5:	0f 92 c3             	setb   %bl
   18cf8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   18cfc:	48 89 c7             	mov    %rax,%rdi
   18cff:	e8 2c c1 ff ff       	call   14e30 <_ZNSaIjED1Ev>
   18d04:	84 db                	test   %bl,%bl
   18d06:	74 0f                	je     18d17 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   18d08:	48 8d 05 e1 7e 00 00 	lea    0x7ee1(%rip),%rax        # 20bf0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f4>
   18d0f:	48 89 c7             	mov    %rax,%rdi
   18d12:	e8 d9 b4 fe ff       	call   41f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   18d17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   18d1b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18d1f:	c9                   	leave
   18d20:	c3                   	ret
   18d21:	90                   	nop

0000000000018d22 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   18d22:	55                   	push   %rbp
   18d23:	48 89 e5             	mov    %rsp,%rbp
   18d26:	48 83 ec 10          	sub    $0x10,%rsp
   18d2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   18d32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18d37:	74 15                	je     18d4e <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   18d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d3d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d41:	48 89 d6             	mov    %rdx,%rsi
   18d44:	48 89 c7             	mov    %rax,%rdi
   18d47:	e8 e8 11 00 00       	call   19f34 <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   18d4c:	eb 05                	jmp    18d53 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   18d4e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   18d53:	c9                   	leave
   18d54:	c3                   	ret

0000000000018d55 <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   18d55:	55                   	push   %rbp
   18d56:	48 89 e5             	mov    %rsp,%rbp
   18d59:	48 83 ec 20          	sub    $0x20,%rsp
   18d5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18d65:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18d69:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   18d6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18d71:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d79:	48 89 ce             	mov    %rcx,%rsi
   18d7c:	48 89 c7             	mov    %rax,%rdi
   18d7f:	e8 da 11 00 00       	call   19f5e <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   18d84:	c9                   	leave
   18d85:	c3                   	ret

0000000000018d86 <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18d86:	55                   	push   %rbp
   18d87:	48 89 e5             	mov    %rsp,%rbp
   18d8a:	48 83 ec 10          	sub    $0x10,%rsp
   18d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18d96:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d9e:	48 89 d6             	mov    %rdx,%rsi
   18da1:	48 89 c7             	mov    %rax,%rdi
   18da4:	e8 ea 11 00 00       	call   19f93 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   18da9:	90                   	nop
   18daa:	c9                   	leave
   18dab:	c3                   	ret

0000000000018dac <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18dac:	55                   	push   %rbp
   18dad:	48 89 e5             	mov    %rsp,%rbp
   18db0:	48 83 ec 20          	sub    $0x20,%rsp
   18db4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18db8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18dbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18dc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18dc4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18dcc:	48 89 ce             	mov    %rcx,%rsi
   18dcf:	48 89 c7             	mov    %rax,%rdi
   18dd2:	e8 cb 11 00 00       	call   19fa2 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   18dd7:	90                   	nop
   18dd8:	c9                   	leave
   18dd9:	c3                   	ret

0000000000018dda <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   18dda:	55                   	push   %rbp
   18ddb:	48 89 e5             	mov    %rsp,%rbp
   18dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18de2:	90                   	nop
   18de3:	5d                   	pop    %rbp
   18de4:	c3                   	ret

0000000000018de5 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18de5:	55                   	push   %rbp
   18de6:	48 89 e5             	mov    %rsp,%rbp
   18de9:	48 83 ec 20          	sub    $0x20,%rsp
   18ded:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18df1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18df5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18df9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18dfd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e05:	48 89 ce             	mov    %rcx,%rsi
   18e08:	48 89 c7             	mov    %rax,%rdi
   18e0b:	e8 c4 11 00 00       	call   19fd4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   18e10:	90                   	nop
   18e11:	c9                   	leave
   18e12:	c3                   	ret

0000000000018e13 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18e13:	55                   	push   %rbp
   18e14:	48 89 e5             	mov    %rsp,%rbp
   18e17:	48 83 ec 10          	sub    $0x10,%rsp
   18e1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18e23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e2b:	48 89 d6             	mov    %rdx,%rsi
   18e2e:	48 89 c7             	mov    %rax,%rdi
   18e31:	e8 cf 11 00 00       	call   1a005 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   18e36:	90                   	nop
   18e37:	c9                   	leave
   18e38:	c3                   	ret

0000000000018e39 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18e39:	55                   	push   %rbp
   18e3a:	48 89 e5             	mov    %rsp,%rbp
   18e3d:	48 83 ec 20          	sub    $0x20,%rsp
   18e41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18e49:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18e4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e51:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e59:	48 89 ce             	mov    %rcx,%rsi
   18e5c:	48 89 c7             	mov    %rax,%rdi
   18e5f:	e8 b0 11 00 00       	call   1a014 <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   18e64:	90                   	nop
   18e65:	c9                   	leave
   18e66:	c3                   	ret
   18e67:	90                   	nop

0000000000018e68 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
   18e68:	55                   	push   %rbp
   18e69:	48 89 e5             	mov    %rsp,%rbp
   18e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e70:	90                   	nop
   18e71:	5d                   	pop    %rbp
   18e72:	c3                   	ret

0000000000018e73 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18e73:	55                   	push   %rbp
   18e74:	48 89 e5             	mov    %rsp,%rbp
   18e77:	48 83 ec 20          	sub    $0x20,%rsp
   18e7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18e83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18e87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e8b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e93:	48 89 ce             	mov    %rcx,%rsi
   18e96:	48 89 c7             	mov    %rax,%rdi
   18e99:	e8 a8 11 00 00       	call   1a046 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   18e9e:	90                   	nop
   18e9f:	c9                   	leave
   18ea0:	c3                   	ret

0000000000018ea1 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   18ea1:	55                   	push   %rbp
   18ea2:	48 89 e5             	mov    %rsp,%rbp
   18ea5:	48 83 ec 10          	sub    $0x10,%rsp
   18ea9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ead:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   18eb1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18eb9:	48 89 d6             	mov    %rdx,%rsi
   18ebc:	48 89 c7             	mov    %rax,%rdi
   18ebf:	e8 b3 11 00 00       	call   1a077 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   18ec4:	90                   	nop
   18ec5:	c9                   	leave
   18ec6:	c3                   	ret

0000000000018ec7 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18ec7:	55                   	push   %rbp
   18ec8:	48 89 e5             	mov    %rsp,%rbp
   18ecb:	48 83 ec 30          	sub    $0x30,%rsp
   18ecf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18ed3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18ed7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18edb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18edf:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18ee3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18ee7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18eeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18eef:	48 89 ce             	mov    %rcx,%rsi
   18ef2:	48 89 c7             	mov    %rax,%rdi
   18ef5:	e8 8c 11 00 00       	call   1a086 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   18efa:	c9                   	leave
   18efb:	c3                   	ret

0000000000018efc <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   18efc:	55                   	push   %rbp
   18efd:	48 89 e5             	mov    %rsp,%rbp
   18f00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18f08:	90                   	nop
   18f09:	5d                   	pop    %rbp
   18f0a:	c3                   	ret
   18f0b:	90                   	nop

0000000000018f0c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   18f0c:	55                   	push   %rbp
   18f0d:	48 89 e5             	mov    %rsp,%rbp
   18f10:	48 83 ec 10          	sub    $0x10,%rsp
   18f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   18f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f1c:	48 89 c7             	mov    %rax,%rdi
   18f1f:	e8 90 11 00 00       	call   1a0b4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   18f24:	48 89 c7             	mov    %rax,%rdi
   18f27:	e8 39 28 ff ff       	call   b765 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   18f2c:	c9                   	leave
   18f2d:	c3                   	ret

0000000000018f2e <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   18f2e:	55                   	push   %rbp
   18f2f:	48 89 e5             	mov    %rsp,%rbp
   18f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   18f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f3e:	48 8b 10             	mov    (%rax),%rdx
   18f41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18f45:	48 8b 00             	mov    (%rax),%rax
   18f48:	48 39 c2             	cmp    %rax,%rdx
   18f4b:	73 06                	jae    18f53 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   18f4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18f51:	eb 04                	jmp    18f57 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   18f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   18f57:	5d                   	pop    %rbp
   18f58:	c3                   	ret

0000000000018f59 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18f59:	55                   	push   %rbp
   18f5a:	48 89 e5             	mov    %rsp,%rbp
   18f5d:	41 54                	push   %r12
   18f5f:	53                   	push   %rbx
   18f60:	48 83 ec 20          	sub    $0x20,%rsp
   18f64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18f68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18f6c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18f70:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   18f74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f78:	48 89 c7             	mov    %rax,%rdi
   18f7b:	e8 42 11 00 00       	call   1a0c2 <_ZSt12__niter_baseIPPKcET_S3_>
   18f80:	49 89 c4             	mov    %rax,%r12
   18f83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18f87:	48 89 c7             	mov    %rax,%rdi
   18f8a:	e8 33 11 00 00       	call   1a0c2 <_ZSt12__niter_baseIPPKcET_S3_>
   18f8f:	48 89 c3             	mov    %rax,%rbx
   18f92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f96:	48 89 c7             	mov    %rax,%rdi
   18f99:	e8 24 11 00 00       	call   1a0c2 <_ZSt12__niter_baseIPPKcET_S3_>
   18f9e:	48 89 c7             	mov    %rax,%rdi
   18fa1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18fa5:	48 89 c1             	mov    %rax,%rcx
   18fa8:	4c 89 e2             	mov    %r12,%rdx
   18fab:	48 89 de             	mov    %rbx,%rsi
   18fae:	e8 1d 11 00 00       	call   1a0d0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   18fb3:	48 83 c4 20          	add    $0x20,%rsp
   18fb7:	5b                   	pop    %rbx
   18fb8:	41 5c                	pop    %r12
   18fba:	5d                   	pop    %rbp
   18fbb:	c3                   	ret

0000000000018fbc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   18fbc:	55                   	push   %rbp
   18fbd:	48 89 e5             	mov    %rsp,%rbp
   18fc0:	48 83 ec 10          	sub    $0x10,%rsp
   18fc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   18fcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18fd0:	48 89 c7             	mov    %rax,%rdi
   18fd3:	e8 94 c7 ff ff       	call   1576c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   18fd8:	48 89 c1             	mov    %rax,%rcx
   18fdb:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   18fdf:	48 8b 01             	mov    (%rcx),%rax
   18fe2:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   18fe6:	48 89 06             	mov    %rax,(%rsi)
   18fe9:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   18fed:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   18ff1:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   18ff5:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   18ff9:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   18ffd:	90                   	nop
   18ffe:	c9                   	leave
   18fff:	c3                   	ret

0000000000019000 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19000:	55                   	push   %rbp
   19001:	48 89 e5             	mov    %rsp,%rbp
   19004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1900c:	5d                   	pop    %rbp
   1900d:	c3                   	ret

000000000001900e <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1900e:	55                   	push   %rbp
   1900f:	48 89 e5             	mov    %rsp,%rbp
   19012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1901a:	5d                   	pop    %rbp
   1901b:	c3                   	ret

000000000001901c <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1901c:	55                   	push   %rbp
   1901d:	48 89 e5             	mov    %rsp,%rbp
   19020:	53                   	push   %rbx
   19021:	48 83 ec 18          	sub    $0x18,%rsp
   19025:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19029:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1902d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19031:	48 89 c6             	mov    %rax,%rsi
   19034:	bf 1c 00 00 00       	mov    $0x1c,%edi
   19039:	e8 3a d6 fe ff       	call   6678 <_ZnwmPv>
   1903e:	48 89 c3             	mov    %rax,%rbx
   19041:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19045:	48 89 c7             	mov    %rax,%rdi
   19048:	e8 c1 ff ff ff       	call   1900e <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   1904d:	48 89 c1             	mov    %rax,%rcx
   19050:	48 8b 01             	mov    (%rcx),%rax
   19053:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   19057:	48 89 03             	mov    %rax,(%rbx)
   1905a:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1905e:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   19062:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   19066:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   1906a:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   1906e:	90                   	nop
   1906f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19073:	c9                   	leave
   19074:	c3                   	ret
   19075:	90                   	nop

0000000000019076 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   19076:	55                   	push   %rbp
   19077:	48 89 e5             	mov    %rsp,%rbp
   1907a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   1907e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19082:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   19086:	90                   	nop
   19087:	5d                   	pop    %rbp
   19088:	c3                   	ret
   19089:	90                   	nop

000000000001908a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1908a:	55                   	push   %rbp
   1908b:	48 89 e5             	mov    %rsp,%rbp
   1908e:	53                   	push   %rbx
   1908f:	48 83 ec 18          	sub    $0x18,%rsp
   19093:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19097:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   1909b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1909f:	48 89 c7             	mov    %rax,%rdi
   190a2:	e8 cd e7 ff ff       	call   17874 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   190a7:	48 89 c3             	mov    %rax,%rbx
   190aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190ae:	48 89 c7             	mov    %rax,%rdi
   190b1:	e8 7e 10 00 00       	call   1a134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   190b6:	48 89 de             	mov    %rbx,%rsi
   190b9:	48 89 c7             	mov    %rax,%rdi
   190bc:	e8 81 10 00 00       	call   1a142 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   190c1:	90                   	nop
   190c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   190c6:	c9                   	leave
   190c7:	c3                   	ret

00000000000190c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   190c8:	55                   	push   %rbp
   190c9:	48 89 e5             	mov    %rsp,%rbp
   190cc:	48 83 ec 10          	sub    $0x10,%rsp
   190d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   190d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   190d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190dc:	48 89 c7             	mov    %rax,%rdi
   190df:	e8 50 10 00 00       	call   1a134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   190e4:	48 89 c1             	mov    %rax,%rcx
   190e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   190eb:	ba 01 00 00 00       	mov    $0x1,%edx
   190f0:	48 89 c6             	mov    %rax,%rsi
   190f3:	48 89 cf             	mov    %rcx,%rdi
   190f6:	e8 6d 10 00 00       	call   1a168 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   190fb:	90                   	nop
   190fc:	c9                   	leave
   190fd:	c3                   	ret

00000000000190fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   190fe:	55                   	push   %rbp
   190ff:	48 89 e5             	mov    %rsp,%rbp
   19102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   19106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1910a:	48 83 c0 08          	add    $0x8,%rax
   1910e:	5d                   	pop    %rbp
   1910f:	c3                   	ret

0000000000019110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   19110:	55                   	push   %rbp
   19111:	48 89 e5             	mov    %rsp,%rbp
   19114:	53                   	push   %rbx
   19115:	48 83 ec 38          	sub    $0x38,%rsp
   19119:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1911d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19121:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   19125:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   19129:	eb 56                	jmp    19181 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1912b:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1912f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19133:	48 89 c7             	mov    %rax,%rdi
   19136:	e8 e7 03 00 00       	call   19522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1913b:	48 89 c1             	mov    %rax,%rcx
   1913e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19142:	48 89 c2             	mov    %rax,%rdx
   19145:	48 89 ce             	mov    %rcx,%rsi
   19148:	48 89 df             	mov    %rbx,%rdi
   1914b:	e8 cc c8 ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   19150:	83 f0 01             	xor    $0x1,%eax
   19153:	84 c0                	test   %al,%al
   19155:	74 1a                	je     19171 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   19157:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1915b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1915f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19163:	48 89 c7             	mov    %rax,%rdi
   19166:	e8 28 e6 ff ff       	call   17793 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1916b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1916f:	eb 10                	jmp    19181 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   19171:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19175:	48 89 c7             	mov    %rax,%rdi
   19178:	e8 04 e6 ff ff       	call   17781 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1917d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   19181:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   19186:	75 a3                	jne    1912b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   19188:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1918c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   19190:	48 89 d6             	mov    %rdx,%rsi
   19193:	48 89 c7             	mov    %rax,%rdi
   19196:	e8 ff ec ff ff       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1919b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1919f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   191a3:	c9                   	leave
   191a4:	c3                   	ret
   191a5:	90                   	nop

00000000000191a6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   191a6:	55                   	push   %rbp
   191a7:	48 89 e5             	mov    %rsp,%rbp
   191aa:	48 83 ec 10          	sub    $0x10,%rsp
   191ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   191b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191b6:	48 89 c7             	mov    %rax,%rdi
   191b9:	e8 d8 0f 00 00       	call   1a196 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   191be:	c9                   	leave
   191bf:	c3                   	ret

00000000000191c0 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   191c0:	55                   	push   %rbp
   191c1:	48 89 e5             	mov    %rsp,%rbp
   191c4:	53                   	push   %rbx
   191c5:	48 83 ec 18          	sub    $0x18,%rsp
   191c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   191cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   191d1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   191d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   191d9:	48 89 c7             	mov    %rax,%rdi
   191dc:	e8 d9 e6 ff ff       	call   178ba <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   191e1:	48 89 c6             	mov    %rax,%rsi
   191e4:	48 89 df             	mov    %rbx,%rdi
   191e7:	e8 b8 0f 00 00       	call   1a1a4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   191ec:	90                   	nop
   191ed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   191f1:	c9                   	leave
   191f2:	c3                   	ret
   191f3:	90                   	nop

00000000000191f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   191f4:	55                   	push   %rbp
   191f5:	48 89 e5             	mov    %rsp,%rbp
   191f8:	41 54                	push   %r12
   191fa:	53                   	push   %rbx
   191fb:	48 83 ec 30          	sub    $0x30,%rsp
   191ff:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19203:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19207:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1920b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   1920f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19213:	48 89 c7             	mov    %rax,%rdi
   19216:	e8 af 0f 00 00       	call   1a1ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   1921b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   1921f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19223:	48 89 c7             	mov    %rax,%rdi
   19226:	e8 ec e6 ff ff       	call   17917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1922b:	49 89 c4             	mov    %rax,%r12
   1922e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19232:	48 89 c7             	mov    %rax,%rdi
   19235:	e8 cf e6 ff ff       	call   17909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1923a:	48 89 c3             	mov    %rax,%rbx
   1923d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19241:	48 89 c7             	mov    %rax,%rdi
   19244:	e8 b2 e6 ff ff       	call   178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   19249:	48 89 c2             	mov    %rax,%rdx
   1924c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   19250:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19254:	4d 89 e0             	mov    %r12,%r8
   19257:	48 89 d9             	mov    %rbx,%rcx
   1925a:	48 89 c7             	mov    %rax,%rdi
   1925d:	e8 90 0f 00 00       	call   1a1f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   19262:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   19266:	48 83 c4 30          	add    $0x30,%rsp
   1926a:	5b                   	pop    %rbx
   1926b:	41 5c                	pop    %r12
   1926d:	5d                   	pop    %rbp
   1926e:	c3                   	ret
   1926f:	90                   	nop

0000000000019270 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   19270:	55                   	push   %rbp
   19271:	48 89 e5             	mov    %rsp,%rbp
   19274:	48 83 ec 20          	sub    $0x20,%rsp
   19278:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   1927c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19280:	48 8b 10             	mov    (%rax),%rdx
   19283:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19287:	48 89 d6             	mov    %rdx,%rsi
   1928a:	48 89 c7             	mov    %rax,%rdi
   1928d:	e8 08 ec ff ff       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   19292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19296:	c9                   	leave
   19297:	c3                   	ret

0000000000019298 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   19298:	55                   	push   %rbp
   19299:	48 89 e5             	mov    %rsp,%rbp
   1929c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   192a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192a4:	48 8b 40 28          	mov    0x28(%rax),%rax
   192a8:	5d                   	pop    %rbp
   192a9:	c3                   	ret

00000000000192aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   192aa:	55                   	push   %rbp
   192ab:	48 89 e5             	mov    %rsp,%rbp
   192ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   192b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192b6:	48 83 c0 20          	add    $0x20,%rax
   192ba:	5d                   	pop    %rbp
   192bb:	c3                   	ret

00000000000192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   192bc:	55                   	push   %rbp
   192bd:	48 89 e5             	mov    %rsp,%rbp
   192c0:	48 83 ec 10          	sub    $0x10,%rsp
   192c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   192c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192cc:	48 89 c7             	mov    %rax,%rdi
   192cf:	e8 4e 02 00 00       	call   19522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   192d4:	c9                   	leave
   192d5:	c3                   	ret

00000000000192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   192d6:	55                   	push   %rbp
   192d7:	48 89 e5             	mov    %rsp,%rbp
   192da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   192e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   192e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192ea:	48 8b 10             	mov    (%rax),%rdx
   192ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192f1:	48 89 10             	mov    %rdx,(%rax)
   192f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   192f8:	48 8b 10             	mov    (%rax),%rdx
   192fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19303:	90                   	nop
   19304:	5d                   	pop    %rbp
   19305:	c3                   	ret

0000000000019306 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   19306:	55                   	push   %rbp
   19307:	48 89 e5             	mov    %rsp,%rbp
   1930a:	53                   	push   %rbx
   1930b:	48 83 ec 78          	sub    $0x78,%rsp
   1930f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   19313:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   19317:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1931b:	48 89 c7             	mov    %rax,%rdi
   1931e:	e8 17 c6 ff ff       	call   1593a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   19323:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   19327:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1932b:	48 89 c7             	mov    %rax,%rdi
   1932e:	e8 cb fd ff ff       	call   190fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   19333:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   19337:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   1933b:	eb 51                	jmp    1938e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   1933d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19341:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   19345:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   19349:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1934d:	48 89 c7             	mov    %rax,%rdi
   19350:	e8 cd 01 00 00       	call   19522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   19355:	48 89 c2             	mov    %rax,%rdx
   19358:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1935c:	48 89 c6             	mov    %rax,%rsi
   1935f:	48 89 df             	mov    %rbx,%rdi
   19362:	e8 b5 c6 ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   19367:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1936a:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1936e:	74 0e                	je     1937e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   19370:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19374:	48 89 c7             	mov    %rax,%rdi
   19377:	e8 17 e4 ff ff       	call   17793 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1937c:	eb 0c                	jmp    1938a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   1937e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19382:	48 89 c7             	mov    %rax,%rdi
   19385:	e8 f7 e3 ff ff       	call   17781 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1938a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   1938e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19392:	48 85 c0             	test   %rax,%rax
   19395:	75 a6                	jne    1933d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   19397:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1939b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1939f:	48 89 d6             	mov    %rdx,%rsi
   193a2:	48 89 c7             	mov    %rax,%rdi
   193a5:	e8 f0 ea ff ff       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   193aa:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   193ae:	74 54                	je     19404 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   193b0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   193b4:	48 89 c7             	mov    %rax,%rdi
   193b7:	e8 08 0f 00 00       	call   1a2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   193bc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   193c0:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   193c4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   193c8:	48 89 d6             	mov    %rdx,%rsi
   193cb:	48 89 c7             	mov    %rax,%rdi
   193ce:	e8 ed c5 ff ff       	call   159c0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   193d3:	84 c0                	test   %al,%al
   193d5:	74 21                	je     193f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   193d7:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   193db:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   193df:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   193e3:	48 89 ce             	mov    %rcx,%rsi
   193e6:	48 89 c7             	mov    %rax,%rdi
   193e9:	e8 00 0f 00 00       	call   1a2ee <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   193ee:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   193f2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   193f6:	eb 7d                	jmp    19475 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   193f8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   193fc:	48 89 c7             	mov    %rax,%rdi
   193ff:	e8 ce 00 00 00       	call   194d2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   19404:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   19408:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1940c:	48 89 c7             	mov    %rax,%rdi
   1940f:	e8 a8 fe ff ff       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   19414:	48 89 c1             	mov    %rax,%rcx
   19417:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1941b:	48 89 c2             	mov    %rax,%rdx
   1941e:	48 89 ce             	mov    %rcx,%rsi
   19421:	48 89 df             	mov    %rbx,%rdi
   19424:	e8 f3 c5 ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   19429:	84 c0                	test   %al,%al
   1942b:	74 21                	je     1944e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   1942d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   19431:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   19435:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   19439:	48 89 ce             	mov    %rcx,%rsi
   1943c:	48 89 c7             	mov    %rax,%rdi
   1943f:	e8 aa 0e 00 00       	call   1a2ee <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   19444:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19448:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1944c:	eb 27                	jmp    19475 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   1944e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   19455:	00 
   19456:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1945a:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   1945e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19462:	48 89 ce             	mov    %rcx,%rsi
   19465:	48 89 c7             	mov    %rax,%rdi
   19468:	e8 69 fe ff ff       	call   192d6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1946d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19471:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   19475:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19479:	c9                   	leave
   1947a:	c3                   	ret
   1947b:	90                   	nop

000000000001947c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   1947c:	55                   	push   %rbp
   1947d:	48 89 e5             	mov    %rsp,%rbp
   19480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   19484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19488:	48 83 c0 18          	add    $0x18,%rax
   1948c:	5d                   	pop    %rbp
   1948d:	c3                   	ret

000000000001948e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1948e:	55                   	push   %rbp
   1948f:	48 89 e5             	mov    %rsp,%rbp
   19492:	48 83 ec 20          	sub    $0x20,%rsp
   19496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1949a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1949e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   194a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   194a6:	48 89 c7             	mov    %rax,%rdi
   194a9:	e8 84 0e 00 00       	call   1a332 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   194ae:	48 8b 10             	mov    (%rax),%rdx
   194b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194b5:	48 89 10             	mov    %rdx,(%rax)
   194b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   194bc:	48 89 c7             	mov    %rax,%rdi
   194bf:	e8 6e 0e 00 00       	call   1a332 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   194c4:	48 8b 10             	mov    (%rax),%rdx
   194c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   194cf:	90                   	nop
   194d0:	c9                   	leave
   194d1:	c3                   	ret

00000000000194d2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   194d2:	55                   	push   %rbp
   194d3:	48 89 e5             	mov    %rsp,%rbp
   194d6:	48 83 ec 10          	sub    $0x10,%rsp
   194da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   194de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194e2:	48 8b 00             	mov    (%rax),%rax
   194e5:	48 89 c7             	mov    %rax,%rdi
   194e8:	e8 f3 af fe ff       	call   44e0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   194ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   194f1:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   194f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   194f8:	c9                   	leave
   194f9:	c3                   	ret

00000000000194fa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   194fa:	55                   	push   %rbp
   194fb:	48 89 e5             	mov    %rsp,%rbp
   194fe:	48 83 ec 10          	sub    $0x10,%rsp
   19502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   19506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1950a:	48 8b 00             	mov    (%rax),%rax
   1950d:	48 89 c7             	mov    %rax,%rdi
   19510:	e8 8b ad fe ff       	call   42a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   19515:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19519:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1951c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   19520:	c9                   	leave
   19521:	c3                   	ret

0000000000019522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   19522:	55                   	push   %rbp
   19523:	48 89 e5             	mov    %rsp,%rbp
   19526:	48 83 ec 20          	sub    $0x20,%rsp
   1952a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   1952e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19532:	48 89 c7             	mov    %rax,%rdi
   19535:	e8 06 0e 00 00       	call   1a340 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1953a:	48 89 c2             	mov    %rax,%rdx
   1953d:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   19541:	48 89 d6             	mov    %rdx,%rsi
   19544:	48 89 c7             	mov    %rax,%rdi
   19547:	e8 12 0e 00 00       	call   1a35e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   1954c:	c9                   	leave
   1954d:	c3                   	ret

000000000001954e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1954e:	55                   	push   %rbp
   1954f:	48 89 e5             	mov    %rsp,%rbp
   19552:	41 54                	push   %r12
   19554:	53                   	push   %rbx
   19555:	48 83 ec 30          	sub    $0x30,%rsp
   19559:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1955d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19561:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   19565:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   19569:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1956e:	75 43                	jne    195b3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   19570:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19574:	48 89 c7             	mov    %rax,%rdi
   19577:	e8 82 fb ff ff       	call   190fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1957c:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   19580:	74 31                	je     195b3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   19582:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   19586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1958a:	48 89 c7             	mov    %rax,%rdi
   1958d:	e8 2a fd ff ff       	call   192bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   19592:	49 89 c4             	mov    %rax,%r12
   19595:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19599:	48 89 c7             	mov    %rax,%rdi
   1959c:	e8 81 ff ff ff       	call   19522 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   195a1:	4c 89 e2             	mov    %r12,%rdx
   195a4:	48 89 c6             	mov    %rax,%rsi
   195a7:	48 89 df             	mov    %rbx,%rdi
   195aa:	e8 6d c4 ff ff       	call   15a1c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   195af:	84 c0                	test   %al,%al
   195b1:	74 07                	je     195ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   195b3:	b8 01 00 00 00       	mov    $0x1,%eax
   195b8:	eb 05                	jmp    195bf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   195ba:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   195bf:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   195c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   195c6:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   195ca:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   195ce:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   195d2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   195d6:	89 c7                	mov    %eax,%edi
   195d8:	e8 83 aa fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   195dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   195e1:	48 8b 40 28          	mov    0x28(%rax),%rax
   195e5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   195e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   195ed:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   195f1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   195f5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   195f9:	48 89 d6             	mov    %rdx,%rsi
   195fc:	48 89 c7             	mov    %rax,%rdi
   195ff:	e8 96 e8 ff ff       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   19604:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   19608:	48 83 c4 30          	add    $0x30,%rsp
   1960c:	5b                   	pop    %rbx
   1960d:	41 5c                	pop    %r12
   1960f:	5d                   	pop    %rbp
   19610:	c3                   	ret
   19611:	90                   	nop

0000000000019612 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19612:	55                   	push   %rbp
   19613:	48 89 e5             	mov    %rsp,%rbp
   19616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1961a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1961e:	5d                   	pop    %rbp
   1961f:	c3                   	ret

0000000000019620 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   19620:	55                   	push   %rbp
   19621:	48 89 e5             	mov    %rsp,%rbp
   19624:	48 83 ec 10          	sub    $0x10,%rsp
   19628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1962c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   19630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19634:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19638:	48 89 d6             	mov    %rdx,%rsi
   1963b:	48 89 c7             	mov    %rax,%rdi
   1963e:	e8 b7 29 ff ff       	call   bffa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   19643:	90                   	nop
   19644:	c9                   	leave
   19645:	c3                   	ret

0000000000019646 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   19646:	55                   	push   %rbp
   19647:	48 89 e5             	mov    %rsp,%rbp
   1964a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1964e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   19652:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19656:	48 8b 10             	mov    (%rax),%rdx
   19659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1965d:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   19660:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19664:	48 8b 50 08          	mov    0x8(%rax),%rdx
   19668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1966c:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   19670:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19674:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1967c:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   19680:	90                   	nop
   19681:	5d                   	pop    %rbp
   19682:	c3                   	ret

0000000000019683 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   19683:	55                   	push   %rbp
   19684:	48 89 e5             	mov    %rsp,%rbp
   19687:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1968b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1968f:	5d                   	pop    %rbp
   19690:	c3                   	ret

0000000000019691 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19691:	55                   	push   %rbp
   19692:	48 89 e5             	mov    %rsp,%rbp
   19695:	48 83 ec 20          	sub    $0x20,%rsp
   19699:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1969d:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   196a4:	ff ff 0f 
   196a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   196ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   196af:	48 89 c7             	mov    %rax,%rdi
   196b2:	e8 b9 0c 00 00       	call   1a370 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   196b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   196bb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   196bf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   196c3:	48 89 d6             	mov    %rdx,%rsi
   196c6:	48 89 c7             	mov    %rax,%rdi
   196c9:	e8 ef c5 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   196ce:	48 8b 00             	mov    (%rax),%rax
      }
   196d1:	c9                   	leave
   196d2:	c3                   	ret
   196d3:	90                   	nop

00000000000196d4 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   196d4:	55                   	push   %rbp
   196d5:	48 89 e5             	mov    %rsp,%rbp
   196d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   196dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196e0:	5d                   	pop    %rbp
   196e1:	c3                   	ret

00000000000196e2 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   196e2:	55                   	push   %rbp
   196e3:	48 89 e5             	mov    %rsp,%rbp
   196e6:	48 83 ec 20          	sub    $0x20,%rsp
   196ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   196ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   196f2:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   196f6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   196fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   196fe:	48 89 d6             	mov    %rdx,%rsi
   19701:	48 89 c7             	mov    %rax,%rdi
   19704:	e8 81 0c 00 00       	call   1a38a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   19709:	c9                   	leave
   1970a:	c3                   	ret

000000000001970b <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1970b:	55                   	push   %rbp
   1970c:	48 89 e5             	mov    %rsp,%rbp
   1970f:	48 83 ec 10          	sub    $0x10,%rsp
   19713:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19717:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1971b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1971f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19723:	ba 00 00 00 00       	mov    $0x0,%edx
   19728:	48 89 ce             	mov    %rcx,%rsi
   1972b:	48 89 c7             	mov    %rax,%rdi
   1972e:	e8 b5 0c 00 00       	call   1a3e8 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   19733:	c9                   	leave
   19734:	c3                   	ret

0000000000019735 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19735:	55                   	push   %rbp
   19736:	48 89 e5             	mov    %rsp,%rbp
   19739:	41 54                	push   %r12
   1973b:	53                   	push   %rbx
   1973c:	48 83 ec 20          	sub    $0x20,%rsp
   19740:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19744:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19748:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1974c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19750:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19754:	48 89 c7             	mov    %rax,%rdi
   19757:	e8 ed 0c 00 00       	call   1a449 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1975c:	49 89 c4             	mov    %rax,%r12
   1975f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19763:	48 89 c7             	mov    %rax,%rdi
   19766:	e8 de 0c 00 00       	call   1a449 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1976b:	48 89 c3             	mov    %rax,%rbx
   1976e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19772:	48 89 c7             	mov    %rax,%rdi
   19775:	e8 cf 0c 00 00       	call   1a449 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1977a:	48 89 c7             	mov    %rax,%rdi
   1977d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19781:	48 89 c1             	mov    %rax,%rcx
   19784:	4c 89 e2             	mov    %r12,%rdx
   19787:	48 89 de             	mov    %rbx,%rsi
   1978a:	e8 c8 0c 00 00       	call   1a457 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1978f:	48 83 c4 20          	add    $0x20,%rsp
   19793:	5b                   	pop    %rbx
   19794:	41 5c                	pop    %r12
   19796:	5d                   	pop    %rbp
   19797:	c3                   	ret

0000000000019798 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19798:	55                   	push   %rbp
   19799:	48 89 e5             	mov    %rsp,%rbp
   1979c:	48 83 ec 10          	sub    $0x10,%rsp
   197a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   197a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   197ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197b0:	48 89 d6             	mov    %rdx,%rsi
   197b3:	48 89 c7             	mov    %rax,%rdi
   197b6:	e8 ff 0c 00 00       	call   1a4ba <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   197bb:	90                   	nop
   197bc:	c9                   	leave
   197bd:	c3                   	ret

00000000000197be <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   197be:	55                   	push   %rbp
   197bf:	48 89 e5             	mov    %rsp,%rbp
   197c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   197c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   197d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   197dc:	00 
   197dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   197e8:	00 
	{ }
   197e9:	90                   	nop
   197ea:	5d                   	pop    %rbp
   197eb:	c3                   	ret

00000000000197ec <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   197ec:	55                   	push   %rbp
   197ed:	48 89 e5             	mov    %rsp,%rbp
   197f0:	48 83 ec 20          	sub    $0x20,%rsp
   197f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   197fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   19800:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19804:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1980c:	48 89 ce             	mov    %rcx,%rsi
   1980f:	48 89 c7             	mov    %rax,%rdi
   19812:	e8 b3 0c 00 00       	call   1a4ca <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   19817:	90                   	nop
   19818:	c9                   	leave
   19819:	c3                   	ret

000000000001981a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1981a:	55                   	push   %rbp
   1981b:	48 89 e5             	mov    %rsp,%rbp
   1981e:	48 83 ec 20          	sub    $0x20,%rsp
   19822:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19826:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   1982d:	8e e3 00 
   19830:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19834:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19838:	48 89 c7             	mov    %rax,%rdi
   1983b:	e8 c4 0c 00 00       	call   1a504 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   19840:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19844:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19848:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1984c:	48 89 d6             	mov    %rdx,%rsi
   1984f:	48 89 c7             	mov    %rax,%rdi
   19852:	e8 66 c4 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19857:	48 8b 00             	mov    (%rax),%rax
      }
   1985a:	c9                   	leave
   1985b:	c3                   	ret

000000000001985c <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1985c:	55                   	push   %rbp
   1985d:	48 89 e5             	mov    %rsp,%rbp
   19860:	48 83 ec 10          	sub    $0x10,%rsp
   19864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1986c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19874:	ba 00 00 00 00       	mov    $0x0,%edx
   19879:	48 89 ce             	mov    %rcx,%rsi
   1987c:	48 89 c7             	mov    %rax,%rdi
   1987f:	e8 9a 0c 00 00       	call   1a51e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   19884:	c9                   	leave
   19885:	c3                   	ret

0000000000019886 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19886:	55                   	push   %rbp
   19887:	48 89 e5             	mov    %rsp,%rbp
   1988a:	48 83 ec 30          	sub    $0x30,%rsp
   1988e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19892:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19896:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1989a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1989e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   198a2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   198a6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   198aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198ae:	48 89 ce             	mov    %rcx,%rsi
   198b1:	48 89 c7             	mov    %rax,%rdi
   198b4:	e8 d0 0c 00 00       	call   1a589 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   198b9:	c9                   	leave
   198ba:	c3                   	ret

00000000000198bb <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   198bb:	55                   	push   %rbp
   198bc:	48 89 e5             	mov    %rsp,%rbp
   198bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   198c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   198c7:	90                   	nop
   198c8:	5d                   	pop    %rbp
   198c9:	c3                   	ret

00000000000198ca <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   198ca:	55                   	push   %rbp
   198cb:	48 89 e5             	mov    %rsp,%rbp
   198ce:	48 83 ec 20          	sub    $0x20,%rsp
   198d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   198d6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   198dd:	ff ff 0f 
   198e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   198e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198e8:	48 89 c7             	mov    %rax,%rdi
   198eb:	e8 c6 0c 00 00       	call   1a5b6 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   198f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   198f4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   198f8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   198fc:	48 89 d6             	mov    %rdx,%rsi
   198ff:	48 89 c7             	mov    %rax,%rdi
   19902:	e8 b6 c3 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19907:	48 8b 00             	mov    (%rax),%rax
      }
   1990a:	c9                   	leave
   1990b:	c3                   	ret

000000000001990c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1990c:	55                   	push   %rbp
   1990d:	48 89 e5             	mov    %rsp,%rbp
   19910:	48 83 ec 10          	sub    $0x10,%rsp
   19914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1991c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19924:	48 89 d6             	mov    %rdx,%rsi
   19927:	48 89 c7             	mov    %rax,%rdi
   1992a:	e8 f1 ea ff ff       	call   18420 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   1992f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19933:	48 89 c7             	mov    %rax,%rdi
   19936:	e8 95 0c 00 00       	call   1a5d0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1993b:	90                   	nop
   1993c:	c9                   	leave
   1993d:	c3                   	ret

000000000001993e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   1993e:	55                   	push   %rbp
   1993f:	48 89 e5             	mov    %rsp,%rbp
   19942:	48 83 ec 10          	sub    $0x10,%rsp
   19946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1994a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   1994e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19956:	48 89 d6             	mov    %rdx,%rsi
   19959:	48 89 c7             	mov    %rax,%rdi
   1995c:	e8 9d 0c 00 00       	call   1a5fe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   19961:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19965:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   19968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1996c:	48 8b 10             	mov    (%rax),%rdx
   1996f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19973:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   19977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1997b:	48 8b 00             	mov    (%rax),%rax
   1997e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19982:	48 c1 e2 03          	shl    $0x3,%rdx
   19986:	48 01 c2             	add    %rax,%rdx
   19989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1998d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   19991:	90                   	nop
   19992:	c9                   	leave
   19993:	c3                   	ret

0000000000019994 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   19994:	55                   	push   %rbp
   19995:	48 89 e5             	mov    %rsp,%rbp
   19998:	48 83 ec 20          	sub    $0x20,%rsp
   1999c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   199a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   199a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   199ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199b0:	48 89 d6             	mov    %rdx,%rsi
   199b3:	48 89 c7             	mov    %rax,%rdi
   199b6:	e8 76 0c 00 00       	call   1a631 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   199bb:	c9                   	leave
   199bc:	c3                   	ret
   199bd:	90                   	nop

00000000000199be <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   199be:	55                   	push   %rbp
   199bf:	48 89 e5             	mov    %rsp,%rbp
   199c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   199ca:	90                   	nop
   199cb:	5d                   	pop    %rbp
   199cc:	c3                   	ret

00000000000199cd <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   199cd:	55                   	push   %rbp
   199ce:	48 89 e5             	mov    %rsp,%rbp
   199d1:	48 83 ec 20          	sub    $0x20,%rsp
   199d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   199dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   199e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   199e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   199e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199ed:	48 89 ce             	mov    %rcx,%rsi
   199f0:	48 89 c7             	mov    %rax,%rdi
   199f3:	e8 62 0c 00 00       	call   1a65a <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   199f8:	90                   	nop
   199f9:	c9                   	leave
   199fa:	c3                   	ret

00000000000199fb <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   199fb:	55                   	push   %rbp
   199fc:	48 89 e5             	mov    %rsp,%rbp
   199ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a07:	90                   	nop
   19a08:	5d                   	pop    %rbp
   19a09:	c3                   	ret

0000000000019a0a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19a0a:	55                   	push   %rbp
   19a0b:	48 89 e5             	mov    %rsp,%rbp
   19a0e:	48 83 ec 20          	sub    $0x20,%rsp
   19a12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19a16:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19a1d:	ff ff 0f 
   19a20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19a24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a28:	48 89 c7             	mov    %rax,%rdi
   19a2b:	e8 5b 0c 00 00       	call   1a68b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   19a30:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19a34:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19a38:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19a3c:	48 89 d6             	mov    %rdx,%rsi
   19a3f:	48 89 c7             	mov    %rax,%rdi
   19a42:	e8 76 c2 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19a47:	48 8b 00             	mov    (%rax),%rax
      }
   19a4a:	c9                   	leave
   19a4b:	c3                   	ret

0000000000019a4c <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19a4c:	55                   	push   %rbp
   19a4d:	48 89 e5             	mov    %rsp,%rbp
   19a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a58:	5d                   	pop    %rbp
   19a59:	c3                   	ret

0000000000019a5a <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19a5a:	55                   	push   %rbp
   19a5b:	48 89 e5             	mov    %rsp,%rbp
   19a5e:	48 83 ec 20          	sub    $0x20,%rsp
   19a62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19a66:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19a6a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   19a6e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19a72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a76:	48 89 d6             	mov    %rdx,%rsi
   19a79:	48 89 c7             	mov    %rax,%rdi
   19a7c:	e8 24 0c 00 00       	call   1a6a5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   19a81:	c9                   	leave
   19a82:	c3                   	ret

0000000000019a83 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19a83:	55                   	push   %rbp
   19a84:	48 89 e5             	mov    %rsp,%rbp
   19a87:	48 83 ec 10          	sub    $0x10,%rsp
   19a8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19a93:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a9b:	ba 00 00 00 00       	mov    $0x0,%edx
   19aa0:	48 89 ce             	mov    %rcx,%rsi
   19aa3:	48 89 c7             	mov    %rax,%rdi
   19aa6:	e8 57 0c 00 00       	call   1a702 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   19aab:	c9                   	leave
   19aac:	c3                   	ret

0000000000019aad <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19aad:	55                   	push   %rbp
   19aae:	48 89 e5             	mov    %rsp,%rbp
   19ab1:	41 54                	push   %r12
   19ab3:	53                   	push   %rbx
   19ab4:	48 83 ec 20          	sub    $0x20,%rsp
   19ab8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19abc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19ac0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19ac4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19ac8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19acc:	48 89 c7             	mov    %rax,%rdi
   19acf:	e8 8f 0c 00 00       	call   1a763 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   19ad4:	49 89 c4             	mov    %rax,%r12
   19ad7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19adb:	48 89 c7             	mov    %rax,%rdi
   19ade:	e8 80 0c 00 00       	call   1a763 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   19ae3:	48 89 c3             	mov    %rax,%rbx
   19ae6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19aea:	48 89 c7             	mov    %rax,%rdi
   19aed:	e8 71 0c 00 00       	call   1a763 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   19af2:	48 89 c7             	mov    %rax,%rdi
   19af5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19af9:	48 89 c1             	mov    %rax,%rcx
   19afc:	4c 89 e2             	mov    %r12,%rdx
   19aff:	48 89 de             	mov    %rbx,%rsi
   19b02:	e8 6a 0c 00 00       	call   1a771 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   19b07:	48 83 c4 20          	add    $0x20,%rsp
   19b0b:	5b                   	pop    %rbx
   19b0c:	41 5c                	pop    %r12
   19b0e:	5d                   	pop    %rbp
   19b0f:	c3                   	ret

0000000000019b10 <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19b10:	55                   	push   %rbp
   19b11:	48 89 e5             	mov    %rsp,%rbp
   19b14:	48 83 ec 10          	sub    $0x10,%rsp
   19b18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   19b20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b28:	48 89 d6             	mov    %rdx,%rsi
   19b2b:	48 89 c7             	mov    %rax,%rdi
   19b2e:	e8 a1 0c 00 00       	call   1a7d4 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   19b33:	90                   	nop
   19b34:	c9                   	leave
   19b35:	c3                   	ret

0000000000019b36 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19b36:	55                   	push   %rbp
   19b37:	48 89 e5             	mov    %rsp,%rbp
   19b3a:	48 83 ec 30          	sub    $0x30,%rsp
   19b3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19b42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19b46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19b4a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19b4e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19b52:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19b56:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19b5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b5e:	48 89 ce             	mov    %rcx,%rsi
   19b61:	48 89 c7             	mov    %rax,%rdi
   19b64:	e8 7a 0c 00 00       	call   1a7e3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   19b69:	c9                   	leave
   19b6a:	c3                   	ret

0000000000019b6b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   19b6b:	55                   	push   %rbp
   19b6c:	48 89 e5             	mov    %rsp,%rbp
   19b6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19b77:	90                   	nop
   19b78:	5d                   	pop    %rbp
   19b79:	c3                   	ret

0000000000019b7a <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19b7a:	55                   	push   %rbp
   19b7b:	48 89 e5             	mov    %rsp,%rbp
   19b7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b86:	5d                   	pop    %rbp
   19b87:	c3                   	ret

0000000000019b88 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   19b88:	55                   	push   %rbp
   19b89:	48 89 e5             	mov    %rsp,%rbp
   19b8c:	48 83 ec 10          	sub    $0x10,%rsp
   19b90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   19b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19ba0:	48 89 d6             	mov    %rdx,%rsi
   19ba3:	48 89 c7             	mov    %rax,%rdi
   19ba6:	e8 6b ce fe ff       	call   6a16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
   19bab:	90                   	nop
   19bac:	c9                   	leave
   19bad:	c3                   	ret

0000000000019bae <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   19bae:	55                   	push   %rbp
   19baf:	48 89 e5             	mov    %rsp,%rbp
   19bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   19bba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19bbe:	48 8b 10             	mov    (%rax),%rdx
   19bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bc5:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   19bc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19bcc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   19bd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bd4:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   19bd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19bdc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19be4:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   19be8:	90                   	nop
   19be9:	5d                   	pop    %rbp
   19bea:	c3                   	ret

0000000000019beb <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   19beb:	55                   	push   %rbp
   19bec:	48 89 e5             	mov    %rsp,%rbp
   19bef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   19bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bf7:	5d                   	pop    %rbp
   19bf8:	c3                   	ret

0000000000019bf9 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19bf9:	55                   	push   %rbp
   19bfa:	48 89 e5             	mov    %rsp,%rbp
   19bfd:	48 83 ec 20          	sub    $0x20,%rsp
   19c01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19c05:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19c0c:	ff ff 0f 
   19c0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c17:	48 89 c7             	mov    %rax,%rdi
   19c1a:	e8 f1 0b 00 00       	call   1a810 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   19c1f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19c23:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19c27:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19c2b:	48 89 d6             	mov    %rdx,%rsi
   19c2e:	48 89 c7             	mov    %rax,%rdi
   19c31:	e8 87 c0 fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19c36:	48 8b 00             	mov    (%rax),%rax
      }
   19c39:	c9                   	leave
   19c3a:	c3                   	ret
   19c3b:	90                   	nop

0000000000019c3c <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19c3c:	55                   	push   %rbp
   19c3d:	48 89 e5             	mov    %rsp,%rbp
   19c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c48:	5d                   	pop    %rbp
   19c49:	c3                   	ret

0000000000019c4a <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19c4a:	55                   	push   %rbp
   19c4b:	48 89 e5             	mov    %rsp,%rbp
   19c4e:	48 83 ec 20          	sub    $0x20,%rsp
   19c52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19c56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19c5a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   19c5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19c62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c66:	48 89 d6             	mov    %rdx,%rsi
   19c69:	48 89 c7             	mov    %rax,%rdi
   19c6c:	e8 b9 0b 00 00       	call   1a82a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   19c71:	c9                   	leave
   19c72:	c3                   	ret

0000000000019c73 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19c73:	55                   	push   %rbp
   19c74:	48 89 e5             	mov    %rsp,%rbp
   19c77:	48 83 ec 10          	sub    $0x10,%rsp
   19c7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19c83:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c8b:	ba 00 00 00 00       	mov    $0x0,%edx
   19c90:	48 89 ce             	mov    %rcx,%rsi
   19c93:	48 89 c7             	mov    %rax,%rdi
   19c96:	e8 ed 0b 00 00       	call   1a888 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   19c9b:	c9                   	leave
   19c9c:	c3                   	ret

0000000000019c9d <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19c9d:	55                   	push   %rbp
   19c9e:	48 89 e5             	mov    %rsp,%rbp
   19ca1:	41 54                	push   %r12
   19ca3:	53                   	push   %rbx
   19ca4:	48 83 ec 20          	sub    $0x20,%rsp
   19ca8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19cac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19cb0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19cb4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19cb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19cbc:	48 89 c7             	mov    %rax,%rdi
   19cbf:	e8 25 0c 00 00       	call   1a8e9 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   19cc4:	49 89 c4             	mov    %rax,%r12
   19cc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ccb:	48 89 c7             	mov    %rax,%rdi
   19cce:	e8 16 0c 00 00       	call   1a8e9 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   19cd3:	48 89 c3             	mov    %rax,%rbx
   19cd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19cda:	48 89 c7             	mov    %rax,%rdi
   19cdd:	e8 07 0c 00 00       	call   1a8e9 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   19ce2:	48 89 c7             	mov    %rax,%rdi
   19ce5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19ce9:	48 89 c1             	mov    %rax,%rcx
   19cec:	4c 89 e2             	mov    %r12,%rdx
   19cef:	48 89 de             	mov    %rbx,%rsi
   19cf2:	e8 00 0c 00 00       	call   1a8f7 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   19cf7:	48 83 c4 20          	add    $0x20,%rsp
   19cfb:	5b                   	pop    %rbx
   19cfc:	41 5c                	pop    %r12
   19cfe:	5d                   	pop    %rbp
   19cff:	c3                   	ret

0000000000019d00 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19d00:	55                   	push   %rbp
   19d01:	48 89 e5             	mov    %rsp,%rbp
   19d04:	48 83 ec 20          	sub    $0x20,%rsp
   19d08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19d0c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19d13:	ff ff 0f 
   19d16:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19d1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d1e:	48 89 c7             	mov    %rax,%rdi
   19d21:	e8 34 0c 00 00       	call   1a95a <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   19d26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19d2a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19d2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19d32:	48 89 d6             	mov    %rdx,%rsi
   19d35:	48 89 c7             	mov    %rax,%rdi
   19d38:	e8 80 bf fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19d3d:	48 8b 00             	mov    (%rax),%rax
      }
   19d40:	c9                   	leave
   19d41:	c3                   	ret

0000000000019d42 <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   19d42:	55                   	push   %rbp
   19d43:	48 89 e5             	mov    %rsp,%rbp
   19d46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19d4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d4e:	5d                   	pop    %rbp
   19d4f:	c3                   	ret

0000000000019d50 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   19d50:	55                   	push   %rbp
   19d51:	48 89 e5             	mov    %rsp,%rbp
   19d54:	48 83 ec 20          	sub    $0x20,%rsp
   19d58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19d5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   19d60:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   19d64:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19d68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d6c:	48 89 d6             	mov    %rdx,%rsi
   19d6f:	48 89 c7             	mov    %rax,%rdi
   19d72:	e8 fd 0b 00 00       	call   1a974 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   19d77:	c9                   	leave
   19d78:	c3                   	ret

0000000000019d79 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19d79:	55                   	push   %rbp
   19d7a:	48 89 e5             	mov    %rsp,%rbp
   19d7d:	48 83 ec 10          	sub    $0x10,%rsp
   19d81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d85:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19d89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d91:	ba 00 00 00 00       	mov    $0x0,%edx
   19d96:	48 89 ce             	mov    %rcx,%rsi
   19d99:	48 89 c7             	mov    %rax,%rdi
   19d9c:	e8 31 0c 00 00       	call   1a9d2 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   19da1:	c9                   	leave
   19da2:	c3                   	ret

0000000000019da3 <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   19da3:	55                   	push   %rbp
   19da4:	48 89 e5             	mov    %rsp,%rbp
   19da7:	41 54                	push   %r12
   19da9:	53                   	push   %rbx
   19daa:	48 83 ec 20          	sub    $0x20,%rsp
   19dae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19db2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19db6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19dba:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   19dbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19dc2:	48 89 c7             	mov    %rax,%rdi
   19dc5:	e8 69 0c 00 00       	call   1aa33 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   19dca:	49 89 c4             	mov    %rax,%r12
   19dcd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19dd1:	48 89 c7             	mov    %rax,%rdi
   19dd4:	e8 5a 0c 00 00       	call   1aa33 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   19dd9:	48 89 c3             	mov    %rax,%rbx
   19ddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19de0:	48 89 c7             	mov    %rax,%rdi
   19de3:	e8 4b 0c 00 00       	call   1aa33 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   19de8:	48 89 c7             	mov    %rax,%rdi
   19deb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19def:	48 89 c1             	mov    %rax,%rcx
   19df2:	4c 89 e2             	mov    %r12,%rdx
   19df5:	48 89 de             	mov    %rbx,%rsi
   19df8:	e8 44 0c 00 00       	call   1aa41 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   19dfd:	48 83 c4 20          	add    $0x20,%rsp
   19e01:	5b                   	pop    %rbx
   19e02:	41 5c                	pop    %r12
   19e04:	5d                   	pop    %rbp
   19e05:	c3                   	ret

0000000000019e06 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19e06:	55                   	push   %rbp
   19e07:	48 89 e5             	mov    %rsp,%rbp
   19e0a:	48 83 ec 10          	sub    $0x10,%rsp
   19e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   19e16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e1e:	48 89 d6             	mov    %rdx,%rsi
   19e21:	48 89 c7             	mov    %rax,%rdi
   19e24:	e8 7b 0c 00 00       	call   1aaa4 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   19e29:	90                   	nop
   19e2a:	c9                   	leave
   19e2b:	c3                   	ret

0000000000019e2c <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19e2c:	55                   	push   %rbp
   19e2d:	48 89 e5             	mov    %rsp,%rbp
   19e30:	48 83 ec 30          	sub    $0x30,%rsp
   19e34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e38:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19e3c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19e40:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19e44:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19e48:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19e4c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19e50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e54:	48 89 ce             	mov    %rcx,%rsi
   19e57:	48 89 c7             	mov    %rax,%rdi
   19e5a:	e8 54 0c 00 00       	call   1aab3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   19e5f:	c9                   	leave
   19e60:	c3                   	ret

0000000000019e61 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   19e61:	55                   	push   %rbp
   19e62:	48 89 e5             	mov    %rsp,%rbp
   19e65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19e6d:	90                   	nop
   19e6e:	5d                   	pop    %rbp
   19e6f:	c3                   	ret

0000000000019e70 <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   19e70:	55                   	push   %rbp
   19e71:	48 89 e5             	mov    %rsp,%rbp
   19e74:	48 83 ec 10          	sub    $0x10,%rsp
   19e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   19e80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e88:	48 89 d6             	mov    %rdx,%rsi
   19e8b:	48 89 c7             	mov    %rax,%rdi
   19e8e:	e8 4d 0c 00 00       	call   1aae0 <_ZNSt15__new_allocatorIjEC1ERKS0_>
   19e93:	90                   	nop
   19e94:	c9                   	leave
   19e95:	c3                   	ret

0000000000019e96 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   19e96:	55                   	push   %rbp
   19e97:	48 89 e5             	mov    %rsp,%rbp
   19e9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   19e9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ea2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   19ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ead:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   19eb4:	00 
   19eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19eb9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   19ec0:	00 
	{ }
   19ec1:	90                   	nop
   19ec2:	5d                   	pop    %rbp
   19ec3:	c3                   	ret

0000000000019ec4 <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   19ec4:	55                   	push   %rbp
   19ec5:	48 89 e5             	mov    %rsp,%rbp
   19ec8:	48 83 ec 20          	sub    $0x20,%rsp
   19ecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ed0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ed4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   19ed8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19edc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ee4:	48 89 ce             	mov    %rcx,%rsi
   19ee7:	48 89 c7             	mov    %rax,%rdi
   19eea:	e8 01 0c 00 00       	call   1aaf0 <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   19eef:	90                   	nop
   19ef0:	c9                   	leave
   19ef1:	c3                   	ret

0000000000019ef2 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   19ef2:	55                   	push   %rbp
   19ef3:	48 89 e5             	mov    %rsp,%rbp
   19ef6:	48 83 ec 20          	sub    $0x20,%rsp
   19efa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   19efe:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   19f05:	ff ff 1f 
   19f08:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   19f0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f10:	48 89 c7             	mov    %rax,%rdi
   19f13:	e8 09 0c 00 00       	call   1ab21 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   19f18:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   19f1c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   19f20:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19f24:	48 89 d6             	mov    %rdx,%rsi
   19f27:	48 89 c7             	mov    %rax,%rdi
   19f2a:	e8 8e bd fe ff       	call   5cbd <_ZSt3minImERKT_S2_S2_>
   19f2f:	48 8b 00             	mov    (%rax),%rax
      }
   19f32:	c9                   	leave
   19f33:	c3                   	ret

0000000000019f34 <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   19f34:	55                   	push   %rbp
   19f35:	48 89 e5             	mov    %rsp,%rbp
   19f38:	48 83 ec 10          	sub    $0x10,%rsp
   19f3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19f40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19f44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f4c:	ba 00 00 00 00       	mov    $0x0,%edx
   19f51:	48 89 ce             	mov    %rcx,%rsi
   19f54:	48 89 c7             	mov    %rax,%rdi
   19f57:	e8 e0 0b 00 00       	call   1ab3c <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   19f5c:	c9                   	leave
   19f5d:	c3                   	ret

0000000000019f5e <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   19f5e:	55                   	push   %rbp
   19f5f:	48 89 e5             	mov    %rsp,%rbp
   19f62:	48 83 ec 30          	sub    $0x30,%rsp
   19f66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19f6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19f6e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19f72:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19f76:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19f7a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19f7e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19f82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f86:	48 89 ce             	mov    %rcx,%rsi
   19f89:	48 89 c7             	mov    %rax,%rdi
   19f8c:	e8 0c 0c 00 00       	call   1ab9d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   19f91:	c9                   	leave
   19f92:	c3                   	ret

0000000000019f93 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
   19f93:	55                   	push   %rbp
   19f94:	48 89 e5             	mov    %rsp,%rbp
   19f97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19f9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19f9f:	90                   	nop
   19fa0:	5d                   	pop    %rbp
   19fa1:	c3                   	ret

0000000000019fa2 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19fa2:	55                   	push   %rbp
   19fa3:	48 89 e5             	mov    %rsp,%rbp
   19fa6:	48 83 ec 20          	sub    $0x20,%rsp
   19faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19fae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19fb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19fb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19fba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19fc1:	00 
   19fc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19fc6:	48 89 d6             	mov    %rdx,%rsi
   19fc9:	48 89 c7             	mov    %rax,%rdi
   19fcc:	e8 cf a4 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   19fd1:	c9                   	leave
   19fd2:	c3                   	ret
   19fd3:	90                   	nop

0000000000019fd4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19fd4:	55                   	push   %rbp
   19fd5:	48 89 e5             	mov    %rsp,%rbp
   19fd8:	48 83 ec 20          	sub    $0x20,%rsp
   19fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19fe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19fe4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19fe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19fec:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19ff3:	00 
   19ff4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19ff8:	48 89 d6             	mov    %rdx,%rsi
   19ffb:	48 89 c7             	mov    %rax,%rdi
   19ffe:	e8 9d a4 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a003:	c9                   	leave
   1a004:	c3                   	ret

000000000001a005 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   1a005:	55                   	push   %rbp
   1a006:	48 89 e5             	mov    %rsp,%rbp
   1a009:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a00d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a011:	90                   	nop
   1a012:	5d                   	pop    %rbp
   1a013:	c3                   	ret

000000000001a014 <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a014:	55                   	push   %rbp
   1a015:	48 89 e5             	mov    %rsp,%rbp
   1a018:	48 83 ec 20          	sub    $0x20,%rsp
   1a01c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a020:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a024:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a028:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a02c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a033:	00 
   1a034:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a038:	48 89 d6             	mov    %rdx,%rsi
   1a03b:	48 89 c7             	mov    %rax,%rdi
   1a03e:	e8 5d a4 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a043:	c9                   	leave
   1a044:	c3                   	ret
   1a045:	90                   	nop

000000000001a046 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a046:	55                   	push   %rbp
   1a047:	48 89 e5             	mov    %rsp,%rbp
   1a04a:	48 83 ec 20          	sub    $0x20,%rsp
   1a04e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a052:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a056:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a05a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a05e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a065:	00 
   1a066:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a06a:	48 89 d6             	mov    %rdx,%rsi
   1a06d:	48 89 c7             	mov    %rax,%rdi
   1a070:	e8 2b a4 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a075:	c9                   	leave
   1a076:	c3                   	ret

000000000001a077 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   1a077:	55                   	push   %rbp
   1a078:	48 89 e5             	mov    %rsp,%rbp
   1a07b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a07f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a083:	90                   	nop
   1a084:	5d                   	pop    %rbp
   1a085:	c3                   	ret

000000000001a086 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1a086:	55                   	push   %rbp
   1a087:	48 89 e5             	mov    %rsp,%rbp
   1a08a:	48 83 ec 20          	sub    $0x20,%rsp
   1a08e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a092:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a096:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1a09a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a09e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0a6:	48 89 ce             	mov    %rcx,%rsi
   1a0a9:	48 89 c7             	mov    %rax,%rdi
   1a0ac:	e8 19 0b 00 00       	call   1abca <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   1a0b1:	c9                   	leave
   1a0b2:	c3                   	ret
   1a0b3:	90                   	nop

000000000001a0b4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1a0b4:	55                   	push   %rbp
   1a0b5:	48 89 e5             	mov    %rsp,%rbp
   1a0b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1a0bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0c0:	5d                   	pop    %rbp
   1a0c1:	c3                   	ret

000000000001a0c2 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   1a0c2:	55                   	push   %rbp
   1a0c3:	48 89 e5             	mov    %rsp,%rbp
   1a0c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a0ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0ce:	5d                   	pop    %rbp
   1a0cf:	c3                   	ret

000000000001a0d0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a0d0:	55                   	push   %rbp
   1a0d1:	48 89 e5             	mov    %rsp,%rbp
   1a0d4:	48 83 ec 30          	sub    $0x30,%rsp
   1a0d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a0dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a0e0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a0e4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a0e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a0ec:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a0f0:	48 c1 f8 03          	sar    $0x3,%rax
   1a0f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a0f8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a0fd:	7e 1f                	jle    1a11e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a0ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a103:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a10a:	00 
   1a10b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a10f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a113:	48 89 ce             	mov    %rcx,%rsi
   1a116:	48 89 c7             	mov    %rax,%rdi
   1a119:	e8 32 a7 fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a11e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a122:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a129:	00 
   1a12a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a12e:	48 01 d0             	add    %rdx,%rax
    }
   1a131:	c9                   	leave
   1a132:	c3                   	ret
   1a133:	90                   	nop

000000000001a134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1a134:	55                   	push   %rbp
   1a135:	48 89 e5             	mov    %rsp,%rbp
   1a138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1a13c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a140:	5d                   	pop    %rbp
   1a141:	c3                   	ret

000000000001a142 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1a142:	55                   	push   %rbp
   1a143:	48 89 e5             	mov    %rsp,%rbp
   1a146:	48 83 ec 10          	sub    $0x10,%rsp
   1a14a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a14e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1a152:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a15a:	48 89 d6             	mov    %rdx,%rsi
   1a15d:	48 89 c7             	mov    %rax,%rdi
   1a160:	e8 cd 0a 00 00       	call   1ac32 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   1a165:	90                   	nop
   1a166:	c9                   	leave
   1a167:	c3                   	ret

000000000001a168 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1a168:	55                   	push   %rbp
   1a169:	48 89 e5             	mov    %rsp,%rbp
   1a16c:	48 83 ec 20          	sub    $0x20,%rsp
   1a170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a174:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a178:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1a17c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a180:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a188:	48 89 ce             	mov    %rcx,%rsi
   1a18b:	48 89 c7             	mov    %rax,%rdi
   1a18e:	e8 bf 0a 00 00       	call   1ac52 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   1a193:	90                   	nop
   1a194:	c9                   	leave
   1a195:	c3                   	ret

000000000001a196 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   1a196:	55                   	push   %rbp
   1a197:	48 89 e5             	mov    %rsp,%rbp
   1a19a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1a19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1a2:	5d                   	pop    %rbp
   1a1a3:	c3                   	ret

000000000001a1a4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   1a1a4:	55                   	push   %rbp
   1a1a5:	48 89 e5             	mov    %rsp,%rbp
   1a1a8:	48 83 ec 10          	sub    $0x10,%rsp
   1a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a1b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   1a1b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a1b8:	48 89 c7             	mov    %rax,%rdi
   1a1bb:	e8 fa d6 ff ff       	call   178ba <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1a1c0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a1c4:	48 89 02             	mov    %rax,(%rdx)
   1a1c7:	90                   	nop
   1a1c8:	c9                   	leave
   1a1c9:	c3                   	ret

000000000001a1ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   1a1ca:	55                   	push   %rbp
   1a1cb:	48 89 e5             	mov    %rsp,%rbp
   1a1ce:	48 83 ec 10          	sub    $0x10,%rsp
   1a1d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   1a1d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1da:	48 89 c7             	mov    %rax,%rdi
   1a1dd:	e8 52 ff ff ff       	call   1a134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1a1e2:	be 01 00 00 00       	mov    $0x1,%esi
   1a1e7:	48 89 c7             	mov    %rax,%rdi
   1a1ea:	e8 9d 0a 00 00       	call   1ac8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1a1ef:	c9                   	leave
   1a1f0:	c3                   	ret
   1a1f1:	90                   	nop

000000000001a1f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   1a1f2:	55                   	push   %rbp
   1a1f3:	48 89 e5             	mov    %rsp,%rbp
   1a1f6:	41 56                	push   %r14
   1a1f8:	41 55                	push   %r13
   1a1fa:	41 54                	push   %r12
   1a1fc:	53                   	push   %rbx
   1a1fd:	48 83 ec 30          	sub    $0x30,%rsp
   1a201:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a205:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1a209:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1a20d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1a211:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   1a215:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a219:	48 89 c6             	mov    %rax,%rsi
   1a21c:	bf 48 00 00 00       	mov    $0x48,%edi
   1a221:	e8 52 c4 fe ff       	call   6678 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   1a226:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a22a:	48 89 c7             	mov    %rax,%rdi
   1a22d:	e8 e5 d6 ff ff       	call   17917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1a232:	49 89 c6             	mov    %rax,%r14
   1a235:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a239:	48 89 c7             	mov    %rax,%rdi
   1a23c:	e8 c8 d6 ff ff       	call   17909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1a241:	49 89 c5             	mov    %rax,%r13
   1a244:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a248:	48 89 c7             	mov    %rax,%rdi
   1a24b:	e8 ab d6 ff ff       	call   178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1a250:	49 89 c4             	mov    %rax,%r12
   1a253:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a257:	48 89 c7             	mov    %rax,%rdi
   1a25a:	e8 15 d6 ff ff       	call   17874 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1a25f:	48 89 c3             	mov    %rax,%rbx
   1a262:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a266:	48 89 c7             	mov    %rax,%rdi
   1a269:	e8 c6 fe ff ff       	call   1a134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1a26e:	4d 89 f0             	mov    %r14,%r8
   1a271:	4c 89 e9             	mov    %r13,%rcx
   1a274:	4c 89 e2             	mov    %r12,%rdx
   1a277:	48 89 de             	mov    %rbx,%rsi
   1a27a:	48 89 c7             	mov    %rax,%rdi
   1a27d:	e8 34 0a 00 00       	call   1acb6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   1a282:	eb 33                	jmp    1a2b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   1a284:	48 89 c7             	mov    %rax,%rdi
   1a287:	e8 d4 9e fe ff       	call   4160 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   1a28c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a290:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a294:	48 89 d6             	mov    %rdx,%rsi
   1a297:	48 89 c7             	mov    %rax,%rdi
   1a29a:	e8 29 ee ff ff       	call   190c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   1a29f:	e8 cc a4 fe ff       	call   4770 <__cxa_rethrow@plt>
	  __catch(...)
   1a2a4:	48 89 c3             	mov    %rax,%rbx
   1a2a7:	e8 b4 a5 fe ff       	call   4860 <__cxa_end_catch@plt>
   1a2ac:	48 89 d8             	mov    %rbx,%rax
   1a2af:	48 89 c7             	mov    %rax,%rdi
   1a2b2:	e8 49 a6 fe ff       	call   4900 <_Unwind_Resume@plt>
	}
   1a2b7:	48 83 c4 30          	add    $0x30,%rsp
   1a2bb:	5b                   	pop    %rbx
   1a2bc:	41 5c                	pop    %r12
   1a2be:	41 5d                	pop    %r13
   1a2c0:	41 5e                	pop    %r14
   1a2c2:	5d                   	pop    %rbp
   1a2c3:	c3                   	ret

000000000001a2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1a2c4:	55                   	push   %rbp
   1a2c5:	48 89 e5             	mov    %rsp,%rbp
   1a2c8:	48 83 ec 20          	sub    $0x20,%rsp
   1a2cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   1a2d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a2d4:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1a2d8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a2dc:	48 89 d6             	mov    %rdx,%rsi
   1a2df:	48 89 c7             	mov    %rax,%rdi
   1a2e2:	e8 b3 db ff ff       	call   17e9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1a2e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2eb:	c9                   	leave
   1a2ec:	c3                   	ret
   1a2ed:	90                   	nop

000000000001a2ee <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1a2ee:	55                   	push   %rbp
   1a2ef:	48 89 e5             	mov    %rsp,%rbp
   1a2f2:	48 83 ec 20          	sub    $0x20,%rsp
   1a2f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a2fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a2fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1a302:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a306:	48 89 c7             	mov    %rax,%rdi
   1a309:	e8 14 0a 00 00       	call   1ad22 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1a30e:	48 8b 10             	mov    (%rax),%rdx
   1a311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a315:	48 89 10             	mov    %rdx,(%rax)
   1a318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a31c:	48 89 c7             	mov    %rax,%rdi
   1a31f:	e8 0e 00 00 00       	call   1a332 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1a324:	48 8b 10             	mov    (%rax),%rdx
   1a327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a32b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1a32f:	90                   	nop
   1a330:	c9                   	leave
   1a331:	c3                   	ret

000000000001a332 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1a332:	55                   	push   %rbp
   1a333:	48 89 e5             	mov    %rsp,%rbp
   1a336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1a33a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a33e:	5d                   	pop    %rbp
   1a33f:	c3                   	ret

000000000001a340 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   1a340:	55                   	push   %rbp
   1a341:	48 89 e5             	mov    %rsp,%rbp
   1a344:	48 83 ec 10          	sub    $0x10,%rsp
   1a348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1a34c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a350:	48 83 c0 20          	add    $0x20,%rax
   1a354:	48 89 c7             	mov    %rax,%rdi
   1a357:	e8 d4 09 00 00       	call   1ad30 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1a35c:	c9                   	leave
   1a35d:	c3                   	ret

000000000001a35e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   1a35e:	55                   	push   %rbp
   1a35f:	48 89 e5             	mov    %rsp,%rbp
   1a362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   1a36a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a36e:	5d                   	pop    %rbp
   1a36f:	c3                   	ret

000000000001a370 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a370:	55                   	push   %rbp
   1a371:	48 89 e5             	mov    %rsp,%rbp
   1a374:	48 83 ec 10          	sub    $0x10,%rsp
   1a378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a37c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a380:	48 89 c7             	mov    %rax,%rdi
   1a383:	e8 c2 09 00 00       	call   1ad4a <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   1a388:	c9                   	leave
   1a389:	c3                   	ret

000000000001a38a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a38a:	55                   	push   %rbp
   1a38b:	48 89 e5             	mov    %rsp,%rbp
   1a38e:	48 83 ec 20          	sub    $0x20,%rsp
   1a392:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a396:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a39a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a39f:	74 40                	je     1a3e1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a3a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3a5:	48 89 c7             	mov    %rax,%rdi
   1a3a8:	e8 b7 09 00 00       	call   1ad64 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   1a3ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a3b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3b5:	48 89 c7             	mov    %rax,%rdi
   1a3b8:	e8 b5 09 00 00       	call   1ad72 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   1a3bd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a3c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a3c6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a3ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a3ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3d2:	48 89 ce             	mov    %rcx,%rsi
   1a3d5:	48 89 c7             	mov    %rax,%rdi
   1a3d8:	e8 bc 09 00 00       	call   1ad99 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1a3dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a3e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a3e5:	c9                   	leave
   1a3e6:	c3                   	ret
   1a3e7:	90                   	nop

000000000001a3e8 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a3e8:	55                   	push   %rbp
   1a3e9:	48 89 e5             	mov    %rsp,%rbp
   1a3ec:	48 83 ec 20          	sub    $0x20,%rsp
   1a3f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a3f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a3f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a400:	48 89 c7             	mov    %rax,%rdi
   1a403:	e8 d6 09 00 00       	call   1adde <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1a408:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a40c:	0f 92 c0             	setb   %al
   1a40f:	0f b6 c0             	movzbl %al,%eax
   1a412:	48 85 c0             	test   %rax,%rax
   1a415:	0f 95 c0             	setne  %al
   1a418:	84 c0                	test   %al,%al
   1a41a:	74 1a                	je     1a436 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a41c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a423:	ff ff 1f 
   1a426:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a42a:	73 05                	jae    1a431 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a42c:	e8 df 9e fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a431:	e8 da 9c fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a436:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a43a:	48 c1 e0 03          	shl    $0x3,%rax
   1a43e:	48 89 c7             	mov    %rax,%rdi
   1a441:	e8 3a a0 fe ff       	call   4480 <_Znwm@plt>
   1a446:	90                   	nop
      }
   1a447:	c9                   	leave
   1a448:	c3                   	ret

000000000001a449 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   1a449:	55                   	push   %rbp
   1a44a:	48 89 e5             	mov    %rsp,%rbp
   1a44d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a455:	5d                   	pop    %rbp
   1a456:	c3                   	ret

000000000001a457 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a457:	55                   	push   %rbp
   1a458:	48 89 e5             	mov    %rsp,%rbp
   1a45b:	48 83 ec 30          	sub    $0x30,%rsp
   1a45f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a463:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a467:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a46b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a46f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a473:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a477:	48 c1 f8 03          	sar    $0x3,%rax
   1a47b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a47f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a484:	7e 1f                	jle    1a4a5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a48a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a491:	00 
   1a492:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a496:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a49a:	48 89 ce             	mov    %rcx,%rsi
   1a49d:	48 89 c7             	mov    %rax,%rdi
   1a4a0:	e8 ab a3 fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a4a9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a4b0:	00 
   1a4b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a4b5:	48 01 d0             	add    %rdx,%rax
    }
   1a4b8:	c9                   	leave
   1a4b9:	c3                   	ret

000000000001a4ba <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1a4ba:	55                   	push   %rbp
   1a4bb:	48 89 e5             	mov    %rsp,%rbp
   1a4be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a4c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a4c6:	90                   	nop
   1a4c7:	5d                   	pop    %rbp
   1a4c8:	c3                   	ret
   1a4c9:	90                   	nop

000000000001a4ca <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a4ca:	55                   	push   %rbp
   1a4cb:	48 89 e5             	mov    %rsp,%rbp
   1a4ce:	48 83 ec 20          	sub    $0x20,%rsp
   1a4d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a4d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a4da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a4de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a4e2:	48 89 d0             	mov    %rdx,%rax
   1a4e5:	48 c1 e0 03          	shl    $0x3,%rax
   1a4e9:	48 01 d0             	add    %rdx,%rax
   1a4ec:	48 c1 e0 04          	shl    $0x4,%rax
   1a4f0:	48 89 c2             	mov    %rax,%rdx
   1a4f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a4f7:	48 89 d6             	mov    %rdx,%rsi
   1a4fa:	48 89 c7             	mov    %rax,%rdi
   1a4fd:	e8 9e 9f fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a502:	c9                   	leave
   1a503:	c3                   	ret

000000000001a504 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a504:	55                   	push   %rbp
   1a505:	48 89 e5             	mov    %rsp,%rbp
   1a508:	48 83 ec 10          	sub    $0x10,%rsp
   1a50c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a514:	48 89 c7             	mov    %rax,%rdi
   1a517:	e8 d6 08 00 00       	call   1adf2 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   1a51c:	c9                   	leave
   1a51d:	c3                   	ret

000000000001a51e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a51e:	55                   	push   %rbp
   1a51f:	48 89 e5             	mov    %rsp,%rbp
   1a522:	48 83 ec 20          	sub    $0x20,%rsp
   1a526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a52a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a52e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a536:	48 89 c7             	mov    %rax,%rdi
   1a539:	e8 ce 08 00 00       	call   1ae0c <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   1a53e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a542:	0f 92 c0             	setb   %al
   1a545:	0f b6 c0             	movzbl %al,%eax
   1a548:	48 85 c0             	test   %rax,%rax
   1a54b:	0f 95 c0             	setne  %al
   1a54e:	84 c0                	test   %al,%al
   1a550:	74 1a                	je     1a56c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a552:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1a559:	1c c7 01 
   1a55c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a560:	73 05                	jae    1a567 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a562:	e8 a9 9d fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a567:	e8 a4 9b fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a56c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a570:	48 89 d0             	mov    %rdx,%rax
   1a573:	48 c1 e0 03          	shl    $0x3,%rax
   1a577:	48 01 d0             	add    %rdx,%rax
   1a57a:	48 c1 e0 04          	shl    $0x4,%rax
   1a57e:	48 89 c7             	mov    %rax,%rdi
   1a581:	e8 fa 9e fe ff       	call   4480 <_Znwm@plt>
   1a586:	90                   	nop
      }
   1a587:	c9                   	leave
   1a588:	c3                   	ret

000000000001a589 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1a589:	55                   	push   %rbp
   1a58a:	48 89 e5             	mov    %rsp,%rbp
   1a58d:	48 83 ec 20          	sub    $0x20,%rsp
   1a591:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a595:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a599:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1a59d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a5a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a5a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5a9:	48 89 ce             	mov    %rcx,%rsi
   1a5ac:	48 89 c7             	mov    %rax,%rdi
   1a5af:	e8 6c 08 00 00       	call   1ae20 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   1a5b4:	c9                   	leave
   1a5b5:	c3                   	ret

000000000001a5b6 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a5b6:	55                   	push   %rbp
   1a5b7:	48 89 e5             	mov    %rsp,%rbp
   1a5ba:	48 83 ec 10          	sub    $0x10,%rsp
   1a5be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5c6:	48 89 c7             	mov    %rax,%rdi
   1a5c9:	e8 9e 08 00 00       	call   1ae6c <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   1a5ce:	c9                   	leave
   1a5cf:	c3                   	ret

000000000001a5d0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1a5d0:	55                   	push   %rbp
   1a5d1:	48 89 e5             	mov    %rsp,%rbp
   1a5d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1a5d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5dc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a5e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5e7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1a5ee:	00 
   1a5ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5f3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1a5fa:	00 
	{ }
   1a5fb:	90                   	nop
   1a5fc:	5d                   	pop    %rbp
   1a5fd:	c3                   	ret

000000000001a5fe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1a5fe:	55                   	push   %rbp
   1a5ff:	48 89 e5             	mov    %rsp,%rbp
   1a602:	48 83 ec 10          	sub    $0x10,%rsp
   1a606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a60a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1a60e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a613:	74 15                	je     1a62a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   1a615:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a619:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a61d:	48 89 d6             	mov    %rdx,%rsi
   1a620:	48 89 c7             	mov    %rax,%rdi
   1a623:	e8 5e 08 00 00       	call   1ae86 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   1a628:	eb 05                	jmp    1a62f <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   1a62a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1a62f:	c9                   	leave
   1a630:	c3                   	ret

000000000001a631 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1a631:	55                   	push   %rbp
   1a632:	48 89 e5             	mov    %rsp,%rbp
   1a635:	48 83 ec 20          	sub    $0x20,%rsp
   1a639:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a63d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1a641:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1a645:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a649:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a64d:	48 89 d6             	mov    %rdx,%rsi
   1a650:	48 89 c7             	mov    %rax,%rdi
   1a653:	e8 58 08 00 00       	call   1aeb0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   1a658:	c9                   	leave
   1a659:	c3                   	ret

000000000001a65a <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1a65a:	55                   	push   %rbp
   1a65b:	48 89 e5             	mov    %rsp,%rbp
   1a65e:	48 83 ec 20          	sub    $0x20,%rsp
   1a662:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a666:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a66a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1a66e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a672:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a679:	00 
   1a67a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a67e:	48 89 d6             	mov    %rdx,%rsi
   1a681:	48 89 c7             	mov    %rax,%rdi
   1a684:	e8 17 9e fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1a689:	c9                   	leave
   1a68a:	c3                   	ret

000000000001a68b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a68b:	55                   	push   %rbp
   1a68c:	48 89 e5             	mov    %rsp,%rbp
   1a68f:	48 83 ec 10          	sub    $0x10,%rsp
   1a693:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a69b:	48 89 c7             	mov    %rax,%rdi
   1a69e:	e8 6b 08 00 00       	call   1af0e <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   1a6a3:	c9                   	leave
   1a6a4:	c3                   	ret

000000000001a6a5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a6a5:	55                   	push   %rbp
   1a6a6:	48 89 e5             	mov    %rsp,%rbp
   1a6a9:	48 83 ec 20          	sub    $0x20,%rsp
   1a6ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a6b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a6b5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a6ba:	74 40                	je     1a6fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a6bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a6c0:	48 89 c7             	mov    %rax,%rdi
   1a6c3:	e8 60 08 00 00       	call   1af28 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   1a6c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a6cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6d0:	48 89 c7             	mov    %rax,%rdi
   1a6d3:	e8 5e 08 00 00       	call   1af36 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   1a6d8:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a6dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a6e1:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a6e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a6e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a6ed:	48 89 ce             	mov    %rcx,%rsi
   1a6f0:	48 89 c7             	mov    %rax,%rdi
   1a6f3:	e8 65 08 00 00       	call   1af5d <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   1a6f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a6fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a700:	c9                   	leave
   1a701:	c3                   	ret

000000000001a702 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a702:	55                   	push   %rbp
   1a703:	48 89 e5             	mov    %rsp,%rbp
   1a706:	48 83 ec 20          	sub    $0x20,%rsp
   1a70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a70e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a712:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a71a:	48 89 c7             	mov    %rax,%rdi
   1a71d:	e8 80 08 00 00       	call   1afa2 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1a722:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a726:	0f 92 c0             	setb   %al
   1a729:	0f b6 c0             	movzbl %al,%eax
   1a72c:	48 85 c0             	test   %rax,%rax
   1a72f:	0f 95 c0             	setne  %al
   1a732:	84 c0                	test   %al,%al
   1a734:	74 1a                	je     1a750 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a736:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a73d:	ff ff 1f 
   1a740:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a744:	73 05                	jae    1a74b <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a746:	e8 c5 9b fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a74b:	e8 c0 99 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a750:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a754:	48 c1 e0 03          	shl    $0x3,%rax
   1a758:	48 89 c7             	mov    %rax,%rdi
   1a75b:	e8 20 9d fe ff       	call   4480 <_Znwm@plt>
   1a760:	90                   	nop
      }
   1a761:	c9                   	leave
   1a762:	c3                   	ret

000000000001a763 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   1a763:	55                   	push   %rbp
   1a764:	48 89 e5             	mov    %rsp,%rbp
   1a767:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a76b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a76f:	5d                   	pop    %rbp
   1a770:	c3                   	ret

000000000001a771 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a771:	55                   	push   %rbp
   1a772:	48 89 e5             	mov    %rsp,%rbp
   1a775:	48 83 ec 30          	sub    $0x30,%rsp
   1a779:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a77d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a781:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a785:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a789:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a78d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a791:	48 c1 f8 03          	sar    $0x3,%rax
   1a795:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a799:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a79e:	7e 1f                	jle    1a7bf <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a7a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7a4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a7ab:	00 
   1a7ac:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a7b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a7b4:	48 89 ce             	mov    %rcx,%rsi
   1a7b7:	48 89 c7             	mov    %rax,%rdi
   1a7ba:	e8 91 a0 fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a7bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7c3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a7ca:	00 
   1a7cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a7cf:	48 01 d0             	add    %rdx,%rax
    }
   1a7d2:	c9                   	leave
   1a7d3:	c3                   	ret

000000000001a7d4 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1a7d4:	55                   	push   %rbp
   1a7d5:	48 89 e5             	mov    %rsp,%rbp
   1a7d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a7dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a7e0:	90                   	nop
   1a7e1:	5d                   	pop    %rbp
   1a7e2:	c3                   	ret

000000000001a7e3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1a7e3:	55                   	push   %rbp
   1a7e4:	48 89 e5             	mov    %rsp,%rbp
   1a7e7:	48 83 ec 20          	sub    $0x20,%rsp
   1a7eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a7ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a7f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1a7f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a7fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a7ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a803:	48 89 ce             	mov    %rcx,%rsi
   1a806:	48 89 c7             	mov    %rax,%rdi
   1a809:	e8 a8 07 00 00       	call   1afb6 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   1a80e:	c9                   	leave
   1a80f:	c3                   	ret

000000000001a810 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a810:	55                   	push   %rbp
   1a811:	48 89 e5             	mov    %rsp,%rbp
   1a814:	48 83 ec 10          	sub    $0x10,%rsp
   1a818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a81c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a820:	48 89 c7             	mov    %rax,%rdi
   1a823:	e8 da 07 00 00       	call   1b002 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   1a828:	c9                   	leave
   1a829:	c3                   	ret

000000000001a82a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a82a:	55                   	push   %rbp
   1a82b:	48 89 e5             	mov    %rsp,%rbp
   1a82e:	48 83 ec 20          	sub    $0x20,%rsp
   1a832:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a836:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a83a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a83f:	74 40                	je     1a881 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a841:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a845:	48 89 c7             	mov    %rax,%rdi
   1a848:	e8 cf 07 00 00       	call   1b01c <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   1a84d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a855:	48 89 c7             	mov    %rax,%rdi
   1a858:	e8 cd 07 00 00       	call   1b02a <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   1a85d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a862:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a866:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a86a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a86e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a872:	48 89 ce             	mov    %rcx,%rsi
   1a875:	48 89 c7             	mov    %rax,%rdi
   1a878:	e8 d4 07 00 00       	call   1b051 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   1a87d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a881:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a885:	c9                   	leave
   1a886:	c3                   	ret
   1a887:	90                   	nop

000000000001a888 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a888:	55                   	push   %rbp
   1a889:	48 89 e5             	mov    %rsp,%rbp
   1a88c:	48 83 ec 20          	sub    $0x20,%rsp
   1a890:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a894:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a898:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a8a0:	48 89 c7             	mov    %rax,%rdi
   1a8a3:	e8 ee 07 00 00       	call   1b096 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   1a8a8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a8ac:	0f 92 c0             	setb   %al
   1a8af:	0f b6 c0             	movzbl %al,%eax
   1a8b2:	48 85 c0             	test   %rax,%rax
   1a8b5:	0f 95 c0             	setne  %al
   1a8b8:	84 c0                	test   %al,%al
   1a8ba:	74 1a                	je     1a8d6 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a8bc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a8c3:	ff ff 1f 
   1a8c6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a8ca:	73 05                	jae    1a8d1 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a8cc:	e8 3f 9a fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a8d1:	e8 3a 98 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a8d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a8da:	48 c1 e0 03          	shl    $0x3,%rax
   1a8de:	48 89 c7             	mov    %rax,%rdi
   1a8e1:	e8 9a 9b fe ff       	call   4480 <_Znwm@plt>
   1a8e6:	90                   	nop
      }
   1a8e7:	c9                   	leave
   1a8e8:	c3                   	ret

000000000001a8e9 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   1a8e9:	55                   	push   %rbp
   1a8ea:	48 89 e5             	mov    %rsp,%rbp
   1a8ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a8f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a8f5:	5d                   	pop    %rbp
   1a8f6:	c3                   	ret

000000000001a8f7 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1a8f7:	55                   	push   %rbp
   1a8f8:	48 89 e5             	mov    %rsp,%rbp
   1a8fb:	48 83 ec 30          	sub    $0x30,%rsp
   1a8ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a903:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a907:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1a90b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1a90f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a913:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a917:	48 c1 f8 03          	sar    $0x3,%rax
   1a91b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1a91f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a924:	7e 1f                	jle    1a945 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1a926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a92a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a931:	00 
   1a932:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1a936:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a93a:	48 89 ce             	mov    %rcx,%rsi
   1a93d:	48 89 c7             	mov    %rax,%rdi
   1a940:	e8 0b 9f fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1a945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a949:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a950:	00 
   1a951:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a955:	48 01 d0             	add    %rdx,%rax
    }
   1a958:	c9                   	leave
   1a959:	c3                   	ret

000000000001a95a <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1a95a:	55                   	push   %rbp
   1a95b:	48 89 e5             	mov    %rsp,%rbp
   1a95e:	48 83 ec 10          	sub    $0x10,%rsp
   1a962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1a966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a96a:	48 89 c7             	mov    %rax,%rdi
   1a96d:	e8 38 07 00 00       	call   1b0aa <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   1a972:	c9                   	leave
   1a973:	c3                   	ret

000000000001a974 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1a974:	55                   	push   %rbp
   1a975:	48 89 e5             	mov    %rsp,%rbp
   1a978:	48 83 ec 20          	sub    $0x20,%rsp
   1a97c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a980:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1a984:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a989:	74 40                	je     1a9cb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1a98b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a98f:	48 89 c7             	mov    %rax,%rdi
   1a992:	e8 2d 07 00 00       	call   1b0c4 <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   1a997:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1a99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a99f:	48 89 c7             	mov    %rax,%rdi
   1a9a2:	e8 2b 07 00 00       	call   1b0d2 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   1a9a7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1a9ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a9b0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1a9b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a9b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a9bc:	48 89 ce             	mov    %rcx,%rsi
   1a9bf:	48 89 c7             	mov    %rax,%rdi
   1a9c2:	e8 32 07 00 00       	call   1b0f9 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   1a9c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1a9cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1a9cf:	c9                   	leave
   1a9d0:	c3                   	ret
   1a9d1:	90                   	nop

000000000001a9d2 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a9d2:	55                   	push   %rbp
   1a9d3:	48 89 e5             	mov    %rsp,%rbp
   1a9d6:	48 83 ec 20          	sub    $0x20,%rsp
   1a9da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a9de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a9e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9ea:	48 89 c7             	mov    %rax,%rdi
   1a9ed:	e8 4c 07 00 00       	call   1b13e <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   1a9f2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a9f6:	0f 92 c0             	setb   %al
   1a9f9:	0f b6 c0             	movzbl %al,%eax
   1a9fc:	48 85 c0             	test   %rax,%rax
   1a9ff:	0f 95 c0             	setne  %al
   1aa02:	84 c0                	test   %al,%al
   1aa04:	74 1a                	je     1aa20 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1aa06:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1aa0d:	ff ff 1f 
   1aa10:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1aa14:	73 05                	jae    1aa1b <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1aa16:	e8 f5 98 fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1aa1b:	e8 f0 96 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1aa20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aa24:	48 c1 e0 03          	shl    $0x3,%rax
   1aa28:	48 89 c7             	mov    %rax,%rdi
   1aa2b:	e8 50 9a fe ff       	call   4480 <_Znwm@plt>
   1aa30:	90                   	nop
      }
   1aa31:	c9                   	leave
   1aa32:	c3                   	ret

000000000001aa33 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   1aa33:	55                   	push   %rbp
   1aa34:	48 89 e5             	mov    %rsp,%rbp
   1aa37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1aa3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa3f:	5d                   	pop    %rbp
   1aa40:	c3                   	ret

000000000001aa41 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1aa41:	55                   	push   %rbp
   1aa42:	48 89 e5             	mov    %rsp,%rbp
   1aa45:	48 83 ec 30          	sub    $0x30,%rsp
   1aa49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aa4d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aa51:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1aa55:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1aa59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aa5d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1aa61:	48 c1 f8 03          	sar    $0x3,%rax
   1aa65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1aa69:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1aa6e:	7e 1f                	jle    1aa8f <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1aa70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa74:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aa7b:	00 
   1aa7c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1aa80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aa84:	48 89 ce             	mov    %rcx,%rsi
   1aa87:	48 89 c7             	mov    %rax,%rdi
   1aa8a:	e8 c1 9d fe ff       	call   4850 <memmove@plt>
      return __result + __count;
   1aa8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa93:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aa9a:	00 
   1aa9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aa9f:	48 01 d0             	add    %rdx,%rax
    }
   1aaa2:	c9                   	leave
   1aaa3:	c3                   	ret

000000000001aaa4 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1aaa4:	55                   	push   %rbp
   1aaa5:	48 89 e5             	mov    %rsp,%rbp
   1aaa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aaac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aab0:	90                   	nop
   1aab1:	5d                   	pop    %rbp
   1aab2:	c3                   	ret

000000000001aab3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1aab3:	55                   	push   %rbp
   1aab4:	48 89 e5             	mov    %rsp,%rbp
   1aab7:	48 83 ec 20          	sub    $0x20,%rsp
   1aabb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aabf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aac3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1aac7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aacb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aacf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aad3:	48 89 ce             	mov    %rcx,%rsi
   1aad6:	48 89 c7             	mov    %rax,%rdi
   1aad9:	e8 74 06 00 00       	call   1b152 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   1aade:	c9                   	leave
   1aadf:	c3                   	ret

000000000001aae0 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
   1aae0:	55                   	push   %rbp
   1aae1:	48 89 e5             	mov    %rsp,%rbp
   1aae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aae8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aaec:	90                   	nop
   1aaed:	5d                   	pop    %rbp
   1aaee:	c3                   	ret
   1aaef:	90                   	nop

000000000001aaf0 <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1aaf0:	55                   	push   %rbp
   1aaf1:	48 89 e5             	mov    %rsp,%rbp
   1aaf4:	48 83 ec 20          	sub    $0x20,%rsp
   1aaf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aafc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ab04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ab08:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1ab0f:	00 
   1ab10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab14:	48 89 d6             	mov    %rdx,%rsi
   1ab17:	48 89 c7             	mov    %rax,%rdi
   1ab1a:	e8 81 99 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1ab1f:	c9                   	leave
   1ab20:	c3                   	ret

000000000001ab21 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1ab21:	55                   	push   %rbp
   1ab22:	48 89 e5             	mov    %rsp,%rbp
   1ab25:	48 83 ec 10          	sub    $0x10,%rsp
   1ab29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1ab2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab31:	48 89 c7             	mov    %rax,%rdi
   1ab34:	e8 65 06 00 00       	call   1b19e <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   1ab39:	c9                   	leave
   1ab3a:	c3                   	ret
   1ab3b:	90                   	nop

000000000001ab3c <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1ab3c:	55                   	push   %rbp
   1ab3d:	48 89 e5             	mov    %rsp,%rbp
   1ab40:	48 83 ec 20          	sub    $0x20,%rsp
   1ab44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1ab50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab54:	48 89 c7             	mov    %rax,%rdi
   1ab57:	e8 5c 06 00 00       	call   1b1b8 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   1ab5c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1ab60:	0f 92 c0             	setb   %al
   1ab63:	0f b6 c0             	movzbl %al,%eax
   1ab66:	48 85 c0             	test   %rax,%rax
   1ab69:	0f 95 c0             	setne  %al
   1ab6c:	84 c0                	test   %al,%al
   1ab6e:	74 1a                	je     1ab8a <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1ab70:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   1ab77:	ff ff 3f 
   1ab7a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1ab7e:	73 05                	jae    1ab85 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1ab80:	e8 8b 97 fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1ab85:	e8 86 95 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1ab8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab8e:	48 c1 e0 02          	shl    $0x2,%rax
   1ab92:	48 89 c7             	mov    %rax,%rdi
   1ab95:	e8 e6 98 fe ff       	call   4480 <_Znwm@plt>
   1ab9a:	90                   	nop
      }
   1ab9b:	c9                   	leave
   1ab9c:	c3                   	ret

000000000001ab9d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1ab9d:	55                   	push   %rbp
   1ab9e:	48 89 e5             	mov    %rsp,%rbp
   1aba1:	48 83 ec 20          	sub    $0x20,%rsp
   1aba5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aba9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1abad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1abb1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1abb5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1abb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1abbd:	48 89 ce             	mov    %rcx,%rsi
   1abc0:	48 89 c7             	mov    %rax,%rdi
   1abc3:	e8 04 06 00 00       	call   1b1cc <_ZSt4copyIPKjPjET0_T_S4_S3_>
   1abc8:	c9                   	leave
   1abc9:	c3                   	ret

000000000001abca <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1abca:	55                   	push   %rbp
   1abcb:	48 89 e5             	mov    %rsp,%rbp
   1abce:	53                   	push   %rbx
   1abcf:	48 83 ec 28          	sub    $0x28,%rsp
   1abd3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1abd7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1abdb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1abdf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1abe3:	48 89 c7             	mov    %rax,%rdi
   1abe6:	e8 2c 06 00 00       	call   1b217 <_ZSt12__miter_baseIPKPKcET_S4_>
   1abeb:	48 89 c3             	mov    %rax,%rbx
   1abee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1abf2:	48 89 c7             	mov    %rax,%rdi
   1abf5:	e8 1d 06 00 00       	call   1b217 <_ZSt12__miter_baseIPKPKcET_S4_>
   1abfa:	48 89 c1             	mov    %rax,%rcx
   1abfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac01:	48 89 c2             	mov    %rax,%rdx
   1ac04:	48 89 de             	mov    %rbx,%rsi
   1ac07:	48 89 cf             	mov    %rcx,%rdi
   1ac0a:	e8 16 06 00 00       	call   1b225 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   1ac0f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ac13:	c9                   	leave
   1ac14:	c3                   	ret
   1ac15:	90                   	nop

000000000001ac16 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   1ac16:	55                   	push   %rbp
   1ac17:	48 89 e5             	mov    %rsp,%rbp
   1ac1a:	48 83 ec 10          	sub    $0x10,%rsp
   1ac1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac26:	48 89 c7             	mov    %rax,%rdi
   1ac29:	e8 42 96 fe ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1ac2e:	90                   	nop
   1ac2f:	c9                   	leave
   1ac30:	c3                   	ret
   1ac31:	90                   	nop

000000000001ac32 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   1ac32:	55                   	push   %rbp
   1ac33:	48 89 e5             	mov    %rsp,%rbp
   1ac36:	48 83 ec 10          	sub    $0x10,%rsp
   1ac3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   1ac42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ac46:	48 89 c7             	mov    %rax,%rdi
   1ac49:	e8 c8 ff ff ff       	call   1ac16 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   1ac4e:	90                   	nop
   1ac4f:	c9                   	leave
   1ac50:	c3                   	ret
   1ac51:	90                   	nop

000000000001ac52 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1ac52:	55                   	push   %rbp
   1ac53:	48 89 e5             	mov    %rsp,%rbp
   1ac56:	48 83 ec 20          	sub    $0x20,%rsp
   1ac5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ac62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ac66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ac6a:	48 89 d0             	mov    %rdx,%rax
   1ac6d:	48 c1 e0 03          	shl    $0x3,%rax
   1ac71:	48 01 d0             	add    %rdx,%rax
   1ac74:	48 c1 e0 03          	shl    $0x3,%rax
   1ac78:	48 89 c2             	mov    %rax,%rdx
   1ac7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ac7f:	48 89 d6             	mov    %rdx,%rsi
   1ac82:	48 89 c7             	mov    %rax,%rdi
   1ac85:	e8 16 98 fe ff       	call   44a0 <_ZdlPvm@plt>
      }
   1ac8a:	c9                   	leave
   1ac8b:	c3                   	ret

000000000001ac8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   1ac8c:	55                   	push   %rbp
   1ac8d:	48 89 e5             	mov    %rsp,%rbp
   1ac90:	48 83 ec 10          	sub    $0x10,%rsp
   1ac94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1ac9c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aca4:	ba 00 00 00 00       	mov    $0x0,%edx
   1aca9:	48 89 ce             	mov    %rcx,%rsi
   1acac:	48 89 c7             	mov    %rax,%rdi
   1acaf:	e8 dc 05 00 00       	call   1b290 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   1acb4:	c9                   	leave
   1acb5:	c3                   	ret

000000000001acb6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1acb6:	55                   	push   %rbp
   1acb7:	48 89 e5             	mov    %rsp,%rbp
   1acba:	41 54                	push   %r12
   1acbc:	53                   	push   %rbx
   1acbd:	48 83 ec 30          	sub    $0x30,%rsp
   1acc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1acc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1acc9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1accd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1acd1:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1acd5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1acd9:	48 89 c7             	mov    %rax,%rdi
   1acdc:	e8 36 cc ff ff       	call   17917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1ace1:	49 89 c4             	mov    %rax,%r12
   1ace4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ace8:	48 89 c7             	mov    %rax,%rdi
   1aceb:	e8 19 cc ff ff       	call   17909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1acf0:	48 89 c3             	mov    %rax,%rbx
   1acf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1acf7:	48 89 c7             	mov    %rax,%rdi
   1acfa:	e8 fc cb ff ff       	call   178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1acff:	48 89 c2             	mov    %rax,%rdx
   1ad02:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1ad06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad0a:	4d 89 e0             	mov    %r12,%r8
   1ad0d:	48 89 d9             	mov    %rbx,%rcx
   1ad10:	48 89 c7             	mov    %rax,%rdi
   1ad13:	e8 0a 06 00 00       	call   1b322 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   1ad18:	90                   	nop
   1ad19:	48 83 c4 30          	add    $0x30,%rsp
   1ad1d:	5b                   	pop    %rbx
   1ad1e:	41 5c                	pop    %r12
   1ad20:	5d                   	pop    %rbp
   1ad21:	c3                   	ret

000000000001ad22 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ad22:	55                   	push   %rbp
   1ad23:	48 89 e5             	mov    %rsp,%rbp
   1ad26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ad2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad2e:	5d                   	pop    %rbp
   1ad2f:	c3                   	ret

000000000001ad30 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   1ad30:	55                   	push   %rbp
   1ad31:	48 89 e5             	mov    %rsp,%rbp
   1ad34:	48 83 ec 10          	sub    $0x10,%rsp
   1ad38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   1ad3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad40:	48 89 c7             	mov    %rax,%rdi
   1ad43:	e8 8a 06 00 00       	call   1b3d2 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1ad48:	c9                   	leave
   1ad49:	c3                   	ret

000000000001ad4a <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1ad4a:	55                   	push   %rbp
   1ad4b:	48 89 e5             	mov    %rsp,%rbp
   1ad4e:	48 83 ec 10          	sub    $0x10,%rsp
   1ad52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1ad56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad5a:	48 89 c7             	mov    %rax,%rdi
   1ad5d:	e8 7c 00 00 00       	call   1adde <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1ad62:	c9                   	leave
   1ad63:	c3                   	ret

000000000001ad64 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1ad64:	55                   	push   %rbp
   1ad65:	48 89 e5             	mov    %rsp,%rbp
   1ad68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1ad6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad70:	5d                   	pop    %rbp
   1ad71:	c3                   	ret

000000000001ad72 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1ad72:	55                   	push   %rbp
   1ad73:	48 89 e5             	mov    %rsp,%rbp
   1ad76:	48 83 ec 10          	sub    $0x10,%rsp
   1ad7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1ad7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad82:	48 89 c6             	mov    %rax,%rsi
   1ad85:	bf 08 00 00 00       	mov    $0x8,%edi
   1ad8a:	e8 e9 b8 fe ff       	call   6678 <_ZnwmPv>
   1ad8f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1ad96:	90                   	nop
   1ad97:	c9                   	leave
   1ad98:	c3                   	ret

000000000001ad99 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1ad99:	55                   	push   %rbp
   1ad9a:	48 89 e5             	mov    %rsp,%rbp
   1ad9d:	48 83 ec 20          	sub    $0x20,%rsp
   1ada1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ada5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ada9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1adad:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1adb1:	48 89 c7             	mov    %rax,%rdi
   1adb4:	e8 27 06 00 00       	call   1b3e0 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1adb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1adbd:	48 89 c7             	mov    %rax,%rdi
   1adc0:	e8 c5 b8 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1adc5:	48 89 c1             	mov    %rax,%rcx
   1adc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1adcc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1add0:	48 89 ce             	mov    %rcx,%rsi
   1add3:	48 89 c7             	mov    %rax,%rdi
   1add6:	e8 10 06 00 00       	call   1b3eb <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1addb:	c9                   	leave
   1addc:	c3                   	ret
   1addd:	90                   	nop

000000000001adde <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1adde:	55                   	push   %rbp
   1addf:	48 89 e5             	mov    %rsp,%rbp
   1ade2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1ade6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1aded:	ff ff 0f 
      }
   1adf0:	5d                   	pop    %rbp
   1adf1:	c3                   	ret

000000000001adf2 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1adf2:	55                   	push   %rbp
   1adf3:	48 89 e5             	mov    %rsp,%rbp
   1adf6:	48 83 ec 10          	sub    $0x10,%rsp
   1adfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1adfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae02:	48 89 c7             	mov    %rax,%rdi
   1ae05:	e8 02 00 00 00       	call   1ae0c <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   1ae0a:	c9                   	leave
   1ae0b:	c3                   	ret

000000000001ae0c <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1ae0c:	55                   	push   %rbp
   1ae0d:	48 89 e5             	mov    %rsp,%rbp
   1ae10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1ae14:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   1ae1b:	8e e3 00 
      }
   1ae1e:	5d                   	pop    %rbp
   1ae1f:	c3                   	ret

000000000001ae20 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   1ae20:	55                   	push   %rbp
   1ae21:	48 89 e5             	mov    %rsp,%rbp
   1ae24:	53                   	push   %rbx
   1ae25:	48 83 ec 28          	sub    $0x28,%rsp
   1ae29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ae2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ae31:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1ae35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae39:	48 89 c7             	mov    %rax,%rdi
   1ae3c:	e8 07 06 00 00       	call   1b448 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1ae41:	48 89 c3             	mov    %rax,%rbx
   1ae44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae48:	48 89 c7             	mov    %rax,%rdi
   1ae4b:	e8 f8 05 00 00       	call   1b448 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1ae50:	48 89 c1             	mov    %rax,%rcx
   1ae53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ae57:	48 89 c2             	mov    %rax,%rdx
   1ae5a:	48 89 de             	mov    %rbx,%rsi
   1ae5d:	48 89 cf             	mov    %rcx,%rdi
   1ae60:	e8 f1 05 00 00       	call   1b456 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   1ae65:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ae69:	c9                   	leave
   1ae6a:	c3                   	ret
   1ae6b:	90                   	nop

000000000001ae6c <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1ae6c:	55                   	push   %rbp
   1ae6d:	48 89 e5             	mov    %rsp,%rbp
   1ae70:	48 83 ec 10          	sub    $0x10,%rsp
   1ae74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1ae78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae7c:	48 89 c7             	mov    %rax,%rdi
   1ae7f:	e8 3c 06 00 00       	call   1b4c0 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1ae84:	c9                   	leave
   1ae85:	c3                   	ret

000000000001ae86 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1ae86:	55                   	push   %rbp
   1ae87:	48 89 e5             	mov    %rsp,%rbp
   1ae8a:	48 83 ec 10          	sub    $0x10,%rsp
   1ae8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ae92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1ae96:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ae9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae9e:	ba 00 00 00 00       	mov    $0x0,%edx
   1aea3:	48 89 ce             	mov    %rcx,%rsi
   1aea6:	48 89 c7             	mov    %rax,%rdi
   1aea9:	e8 26 06 00 00       	call   1b4d4 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   1aeae:	c9                   	leave
   1aeaf:	c3                   	ret

000000000001aeb0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1aeb0:	55                   	push   %rbp
   1aeb1:	48 89 e5             	mov    %rsp,%rbp
   1aeb4:	48 83 ec 20          	sub    $0x20,%rsp
   1aeb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aebc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1aec0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1aec5:	74 40                	je     1af07 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1aec7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aecb:	48 89 c7             	mov    %rax,%rdi
   1aece:	e8 62 06 00 00       	call   1b535 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   1aed3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1aed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aedb:	48 89 c7             	mov    %rax,%rdi
   1aede:	e8 60 06 00 00       	call   1b543 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   1aee3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1aee8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aeec:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1aef0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aef4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aef8:	48 89 ce             	mov    %rcx,%rsi
   1aefb:	48 89 c7             	mov    %rax,%rdi
   1aefe:	e8 67 06 00 00       	call   1b56a <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   1af03:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1af07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1af0b:	c9                   	leave
   1af0c:	c3                   	ret
   1af0d:	90                   	nop

000000000001af0e <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1af0e:	55                   	push   %rbp
   1af0f:	48 89 e5             	mov    %rsp,%rbp
   1af12:	48 83 ec 10          	sub    $0x10,%rsp
   1af16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1af1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af1e:	48 89 c7             	mov    %rax,%rdi
   1af21:	e8 7c 00 00 00       	call   1afa2 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1af26:	c9                   	leave
   1af27:	c3                   	ret

000000000001af28 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1af28:	55                   	push   %rbp
   1af29:	48 89 e5             	mov    %rsp,%rbp
   1af2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1af30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af34:	5d                   	pop    %rbp
   1af35:	c3                   	ret

000000000001af36 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1af36:	55                   	push   %rbp
   1af37:	48 89 e5             	mov    %rsp,%rbp
   1af3a:	48 83 ec 10          	sub    $0x10,%rsp
   1af3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1af42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af46:	48 89 c6             	mov    %rax,%rsi
   1af49:	bf 08 00 00 00       	mov    $0x8,%edi
   1af4e:	e8 25 b7 fe ff       	call   6678 <_ZnwmPv>
   1af53:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1af5a:	90                   	nop
   1af5b:	c9                   	leave
   1af5c:	c3                   	ret

000000000001af5d <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1af5d:	55                   	push   %rbp
   1af5e:	48 89 e5             	mov    %rsp,%rbp
   1af61:	48 83 ec 20          	sub    $0x20,%rsp
   1af65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1af69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1af6d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1af71:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1af75:	48 89 c7             	mov    %rax,%rdi
   1af78:	e8 31 06 00 00       	call   1b5ae <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1af7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1af81:	48 89 c7             	mov    %rax,%rdi
   1af84:	e8 01 b7 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1af89:	48 89 c1             	mov    %rax,%rcx
   1af8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1af94:	48 89 ce             	mov    %rcx,%rsi
   1af97:	48 89 c7             	mov    %rax,%rdi
   1af9a:	e8 1a 06 00 00       	call   1b5b9 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1af9f:	c9                   	leave
   1afa0:	c3                   	ret
   1afa1:	90                   	nop

000000000001afa2 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1afa2:	55                   	push   %rbp
   1afa3:	48 89 e5             	mov    %rsp,%rbp
   1afa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1afaa:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1afb1:	ff ff 0f 
      }
   1afb4:	5d                   	pop    %rbp
   1afb5:	c3                   	ret

000000000001afb6 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1afb6:	55                   	push   %rbp
   1afb7:	48 89 e5             	mov    %rsp,%rbp
   1afba:	53                   	push   %rbx
   1afbb:	48 83 ec 28          	sub    $0x28,%rsp
   1afbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1afc3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1afc7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1afcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1afcf:	48 89 c7             	mov    %rax,%rdi
   1afd2:	e8 3f 06 00 00       	call   1b616 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   1afd7:	48 89 c3             	mov    %rax,%rbx
   1afda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afde:	48 89 c7             	mov    %rax,%rdi
   1afe1:	e8 30 06 00 00       	call   1b616 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   1afe6:	48 89 c1             	mov    %rax,%rcx
   1afe9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1afed:	48 89 c2             	mov    %rax,%rdx
   1aff0:	48 89 de             	mov    %rbx,%rsi
   1aff3:	48 89 cf             	mov    %rcx,%rdi
   1aff6:	e8 29 06 00 00       	call   1b624 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   1affb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1afff:	c9                   	leave
   1b000:	c3                   	ret
   1b001:	90                   	nop

000000000001b002 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1b002:	55                   	push   %rbp
   1b003:	48 89 e5             	mov    %rsp,%rbp
   1b006:	48 83 ec 10          	sub    $0x10,%rsp
   1b00a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1b00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b012:	48 89 c7             	mov    %rax,%rdi
   1b015:	e8 7c 00 00 00       	call   1b096 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   1b01a:	c9                   	leave
   1b01b:	c3                   	ret

000000000001b01c <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1b01c:	55                   	push   %rbp
   1b01d:	48 89 e5             	mov    %rsp,%rbp
   1b020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1b024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b028:	5d                   	pop    %rbp
   1b029:	c3                   	ret

000000000001b02a <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1b02a:	55                   	push   %rbp
   1b02b:	48 89 e5             	mov    %rsp,%rbp
   1b02e:	48 83 ec 10          	sub    $0x10,%rsp
   1b032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1b036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b03a:	48 89 c6             	mov    %rax,%rsi
   1b03d:	bf 08 00 00 00       	mov    $0x8,%edi
   1b042:	e8 31 b6 fe ff       	call   6678 <_ZnwmPv>
   1b047:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1b04e:	90                   	nop
   1b04f:	c9                   	leave
   1b050:	c3                   	ret

000000000001b051 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1b051:	55                   	push   %rbp
   1b052:	48 89 e5             	mov    %rsp,%rbp
   1b055:	48 83 ec 20          	sub    $0x20,%rsp
   1b059:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b05d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b061:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1b065:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b069:	48 89 c7             	mov    %rax,%rdi
   1b06c:	e8 1d 06 00 00       	call   1b68e <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1b071:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b075:	48 89 c7             	mov    %rax,%rdi
   1b078:	e8 0d b6 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1b07d:	48 89 c1             	mov    %rax,%rcx
   1b080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b084:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b088:	48 89 ce             	mov    %rcx,%rsi
   1b08b:	48 89 c7             	mov    %rax,%rdi
   1b08e:	e8 06 06 00 00       	call   1b699 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b093:	c9                   	leave
   1b094:	c3                   	ret
   1b095:	90                   	nop

000000000001b096 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b096:	55                   	push   %rbp
   1b097:	48 89 e5             	mov    %rsp,%rbp
   1b09a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b09e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b0a5:	ff ff 0f 
      }
   1b0a8:	5d                   	pop    %rbp
   1b0a9:	c3                   	ret

000000000001b0aa <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1b0aa:	55                   	push   %rbp
   1b0ab:	48 89 e5             	mov    %rsp,%rbp
   1b0ae:	48 83 ec 10          	sub    $0x10,%rsp
   1b0b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1b0b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0ba:	48 89 c7             	mov    %rax,%rdi
   1b0bd:	e8 7c 00 00 00       	call   1b13e <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   1b0c2:	c9                   	leave
   1b0c3:	c3                   	ret

000000000001b0c4 <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1b0c4:	55                   	push   %rbp
   1b0c5:	48 89 e5             	mov    %rsp,%rbp
   1b0c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1b0cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0d0:	5d                   	pop    %rbp
   1b0d1:	c3                   	ret

000000000001b0d2 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1b0d2:	55                   	push   %rbp
   1b0d3:	48 89 e5             	mov    %rsp,%rbp
   1b0d6:	48 83 ec 10          	sub    $0x10,%rsp
   1b0da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1b0de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0e2:	48 89 c6             	mov    %rax,%rsi
   1b0e5:	bf 08 00 00 00       	mov    $0x8,%edi
   1b0ea:	e8 89 b5 fe ff       	call   6678 <_ZnwmPv>
   1b0ef:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1b0f6:	90                   	nop
   1b0f7:	c9                   	leave
   1b0f8:	c3                   	ret

000000000001b0f9 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1b0f9:	55                   	push   %rbp
   1b0fa:	48 89 e5             	mov    %rsp,%rbp
   1b0fd:	48 83 ec 20          	sub    $0x20,%rsp
   1b101:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b105:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b109:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1b10d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b111:	48 89 c7             	mov    %rax,%rdi
   1b114:	e8 dd 05 00 00       	call   1b6f6 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1b119:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b11d:	48 89 c7             	mov    %rax,%rdi
   1b120:	e8 65 b5 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1b125:	48 89 c1             	mov    %rax,%rcx
   1b128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b12c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b130:	48 89 ce             	mov    %rcx,%rsi
   1b133:	48 89 c7             	mov    %rax,%rdi
   1b136:	e8 c6 05 00 00       	call   1b701 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b13b:	c9                   	leave
   1b13c:	c3                   	ret
   1b13d:	90                   	nop

000000000001b13e <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b13e:	55                   	push   %rbp
   1b13f:	48 89 e5             	mov    %rsp,%rbp
   1b142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b146:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b14d:	ff ff 0f 
      }
   1b150:	5d                   	pop    %rbp
   1b151:	c3                   	ret

000000000001b152 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1b152:	55                   	push   %rbp
   1b153:	48 89 e5             	mov    %rsp,%rbp
   1b156:	53                   	push   %rbx
   1b157:	48 83 ec 28          	sub    $0x28,%rsp
   1b15b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b15f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b163:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1b167:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b16b:	48 89 c7             	mov    %rax,%rdi
   1b16e:	e8 eb 05 00 00       	call   1b75e <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   1b173:	48 89 c3             	mov    %rax,%rbx
   1b176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b17a:	48 89 c7             	mov    %rax,%rdi
   1b17d:	e8 dc 05 00 00       	call   1b75e <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   1b182:	48 89 c1             	mov    %rax,%rcx
   1b185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b189:	48 89 c2             	mov    %rax,%rdx
   1b18c:	48 89 de             	mov    %rbx,%rsi
   1b18f:	48 89 cf             	mov    %rcx,%rdi
   1b192:	e8 d5 05 00 00       	call   1b76c <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   1b197:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b19b:	c9                   	leave
   1b19c:	c3                   	ret
   1b19d:	90                   	nop

000000000001b19e <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1b19e:	55                   	push   %rbp
   1b19f:	48 89 e5             	mov    %rsp,%rbp
   1b1a2:	48 83 ec 10          	sub    $0x10,%rsp
   1b1a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1b1aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b1ae:	48 89 c7             	mov    %rax,%rdi
   1b1b1:	e8 02 00 00 00       	call   1b1b8 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   1b1b6:	c9                   	leave
   1b1b7:	c3                   	ret

000000000001b1b8 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b1b8:	55                   	push   %rbp
   1b1b9:	48 89 e5             	mov    %rsp,%rbp
   1b1bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b1c0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1b1c7:	ff ff 1f 
      }
   1b1ca:	5d                   	pop    %rbp
   1b1cb:	c3                   	ret

000000000001b1cc <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   1b1cc:	55                   	push   %rbp
   1b1cd:	48 89 e5             	mov    %rsp,%rbp
   1b1d0:	53                   	push   %rbx
   1b1d1:	48 83 ec 28          	sub    $0x28,%rsp
   1b1d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b1d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b1dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1b1e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b1e5:	48 89 c7             	mov    %rax,%rdi
   1b1e8:	e8 e9 05 00 00       	call   1b7d6 <_ZSt12__miter_baseIPKjET_S2_>
   1b1ed:	48 89 c3             	mov    %rax,%rbx
   1b1f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b1f4:	48 89 c7             	mov    %rax,%rdi
   1b1f7:	e8 da 05 00 00       	call   1b7d6 <_ZSt12__miter_baseIPKjET_S2_>
   1b1fc:	48 89 c1             	mov    %rax,%rcx
   1b1ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b203:	48 89 c2             	mov    %rax,%rdx
   1b206:	48 89 de             	mov    %rbx,%rsi
   1b209:	48 89 cf             	mov    %rcx,%rdi
   1b20c:	e8 d3 05 00 00       	call   1b7e4 <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   1b211:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b215:	c9                   	leave
   1b216:	c3                   	ret

000000000001b217 <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
   1b217:	55                   	push   %rbp
   1b218:	48 89 e5             	mov    %rsp,%rbp
   1b21b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b223:	5d                   	pop    %rbp
   1b224:	c3                   	ret

000000000001b225 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b225:	55                   	push   %rbp
   1b226:	48 89 e5             	mov    %rsp,%rbp
   1b229:	41 54                	push   %r12
   1b22b:	53                   	push   %rbx
   1b22c:	48 83 ec 20          	sub    $0x20,%rsp
   1b230:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b234:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b238:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b23c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b240:	48 89 c7             	mov    %rax,%rdi
   1b243:	e8 7a ee ff ff       	call   1a0c2 <_ZSt12__niter_baseIPPKcET_S3_>
   1b248:	49 89 c4             	mov    %rax,%r12
   1b24b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b24f:	48 89 c7             	mov    %rax,%rdi
   1b252:	e8 f7 05 00 00       	call   1b84e <_ZSt12__niter_baseIPKPKcET_S4_>
   1b257:	48 89 c3             	mov    %rax,%rbx
   1b25a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b25e:	48 89 c7             	mov    %rax,%rdi
   1b261:	e8 e8 05 00 00       	call   1b84e <_ZSt12__niter_baseIPKPKcET_S4_>
   1b266:	4c 89 e2             	mov    %r12,%rdx
   1b269:	48 89 de             	mov    %rbx,%rsi
   1b26c:	48 89 c7             	mov    %rax,%rdi
   1b26f:	e8 e8 05 00 00       	call   1b85c <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1b274:	48 89 c2             	mov    %rax,%rdx
   1b277:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b27b:	48 89 d6             	mov    %rdx,%rsi
   1b27e:	48 89 c7             	mov    %rax,%rdi
   1b281:	e8 03 06 00 00       	call   1b889 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1b286:	48 83 c4 20          	add    $0x20,%rsp
   1b28a:	5b                   	pop    %rbx
   1b28b:	41 5c                	pop    %r12
   1b28d:	5d                   	pop    %rbp
   1b28e:	c3                   	ret
   1b28f:	90                   	nop

000000000001b290 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1b290:	55                   	push   %rbp
   1b291:	48 89 e5             	mov    %rsp,%rbp
   1b294:	48 83 ec 20          	sub    $0x20,%rsp
   1b298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b29c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b2a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1b2a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b2a8:	48 89 c7             	mov    %rax,%rdi
   1b2ab:	e8 ec 05 00 00       	call   1b89c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   1b2b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b2b4:	0f 92 c0             	setb   %al
   1b2b7:	0f b6 c0             	movzbl %al,%eax
   1b2ba:	48 85 c0             	test   %rax,%rax
   1b2bd:	0f 95 c0             	setne  %al
   1b2c0:	84 c0                	test   %al,%al
   1b2c2:	74 1a                	je     1b2de <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1b2c4:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   1b2cb:	38 8e 03 
   1b2ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b2d2:	73 05                	jae    1b2d9 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1b2d4:	e8 37 90 fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1b2d9:	e8 32 8e fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1b2de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b2e2:	48 89 d0             	mov    %rdx,%rax
   1b2e5:	48 c1 e0 03          	shl    $0x3,%rax
   1b2e9:	48 01 d0             	add    %rdx,%rax
   1b2ec:	48 c1 e0 03          	shl    $0x3,%rax
   1b2f0:	48 89 c7             	mov    %rax,%rdi
   1b2f3:	e8 88 91 fe ff       	call   4480 <_Znwm@plt>
   1b2f8:	90                   	nop
      }
   1b2f9:	c9                   	leave
   1b2fa:	c3                   	ret
   1b2fb:	90                   	nop

000000000001b2fc <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1b2fc:	55                   	push   %rbp
   1b2fd:	48 89 e5             	mov    %rsp,%rbp
   1b300:	48 83 ec 10          	sub    $0x10,%rsp
   1b304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b310:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b314:	48 89 d6             	mov    %rdx,%rsi
   1b317:	48 89 c7             	mov    %rax,%rdi
   1b31a:	e8 91 05 00 00       	call   1b8b0 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1b31f:	90                   	nop
   1b320:	c9                   	leave
   1b321:	c3                   	ret

000000000001b322 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1b322:	55                   	push   %rbp
   1b323:	48 89 e5             	mov    %rsp,%rbp
   1b326:	41 56                	push   %r14
   1b328:	41 55                	push   %r13
   1b32a:	41 54                	push   %r12
   1b32c:	53                   	push   %rbx
   1b32d:	48 83 ec 40          	sub    $0x40,%rsp
   1b331:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1b335:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1b339:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1b33d:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1b341:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1b345:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   1b349:	48 89 de             	mov    %rbx,%rsi
   1b34c:	bf 28 00 00 00       	mov    $0x28,%edi
   1b351:	e8 22 b3 fe ff       	call   6678 <_ZnwmPv>
   1b356:	49 89 c4             	mov    %rax,%r12
   1b359:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1b35f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1b363:	48 89 c7             	mov    %rax,%rdi
   1b366:	e8 ac c5 ff ff       	call   17917 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1b36b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1b36f:	48 89 c7             	mov    %rax,%rdi
   1b372:	e8 92 c5 ff ff       	call   17909 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1b377:	48 89 c2             	mov    %rax,%rdx
   1b37a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b37e:	48 89 d6             	mov    %rdx,%rsi
   1b381:	48 89 c7             	mov    %rax,%rdi
   1b384:	e8 73 ff ff ff       	call   1b2fc <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1b389:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1b38d:	48 89 c7             	mov    %rax,%rdi
   1b390:	e8 66 c5 ff ff       	call   178fb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1b395:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b399:	48 89 c6             	mov    %rax,%rsi
   1b39c:	4c 89 e7             	mov    %r12,%rdi
   1b39f:	e8 2a 05 00 00       	call   1b8ce <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1b3a4:	eb 1e                	jmp    1b3c4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   1b3a6:	49 89 c5             	mov    %rax,%r13
   1b3a9:	45 84 f6             	test   %r14b,%r14b
   1b3ac:	74 0b                	je     1b3b9 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   1b3ae:	48 89 de             	mov    %rbx,%rsi
   1b3b1:	4c 89 e7             	mov    %r12,%rdi
   1b3b4:	e8 82 80 ff ff       	call   1343b <_ZdlPvS_>
   1b3b9:	4c 89 e8             	mov    %r13,%rax
   1b3bc:	48 89 c7             	mov    %rax,%rdi
   1b3bf:	e8 3c 95 fe ff       	call   4900 <_Unwind_Resume@plt>
   1b3c4:	48 83 c4 40          	add    $0x40,%rsp
   1b3c8:	5b                   	pop    %rbx
   1b3c9:	41 5c                	pop    %r12
   1b3cb:	41 5d                	pop    %r13
   1b3cd:	41 5e                	pop    %r14
   1b3cf:	5d                   	pop    %rbp
   1b3d0:	c3                   	ret
   1b3d1:	90                   	nop

000000000001b3d2 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1b3d2:	55                   	push   %rbp
   1b3d3:	48 89 e5             	mov    %rsp,%rbp
   1b3d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1b3da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b3de:	5d                   	pop    %rbp
   1b3df:	c3                   	ret

000000000001b3e0 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b3e0:	55                   	push   %rbp
   1b3e1:	48 89 e5             	mov    %rsp,%rbp
   1b3e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b3e8:	90                   	nop
   1b3e9:	5d                   	pop    %rbp
   1b3ea:	c3                   	ret

000000000001b3eb <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b3eb:	55                   	push   %rbp
   1b3ec:	48 89 e5             	mov    %rsp,%rbp
   1b3ef:	48 83 ec 20          	sub    $0x20,%rsp
   1b3f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b3f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b3fb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b3ff:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b404:	75 06                	jne    1b40c <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b40a:	eb 3a                	jmp    1b446 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b40c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b410:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b417:	00 
   1b418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b41c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b420:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b428:	48 89 ce             	mov    %rcx,%rsi
   1b42b:	48 89 c7             	mov    %rax,%rdi
   1b42e:	e8 c5 04 00 00       	call   1b8f8 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b433:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b437:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b43e:	00 
   1b43f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b443:	48 01 d0             	add    %rdx,%rax
    }
   1b446:	c9                   	leave
   1b447:	c3                   	ret

000000000001b448 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   1b448:	55                   	push   %rbp
   1b449:	48 89 e5             	mov    %rsp,%rbp
   1b44c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b454:	5d                   	pop    %rbp
   1b455:	c3                   	ret

000000000001b456 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b456:	55                   	push   %rbp
   1b457:	48 89 e5             	mov    %rsp,%rbp
   1b45a:	41 54                	push   %r12
   1b45c:	53                   	push   %rbx
   1b45d:	48 83 ec 20          	sub    $0x20,%rsp
   1b461:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b465:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b469:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b46d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b471:	48 89 c7             	mov    %rax,%rdi
   1b474:	e8 bb 04 00 00       	call   1b934 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   1b479:	49 89 c4             	mov    %rax,%r12
   1b47c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b480:	48 89 c7             	mov    %rax,%rdi
   1b483:	e8 9e 04 00 00       	call   1b926 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1b488:	48 89 c3             	mov    %rax,%rbx
   1b48b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b48f:	48 89 c7             	mov    %rax,%rdi
   1b492:	e8 8f 04 00 00       	call   1b926 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1b497:	4c 89 e2             	mov    %r12,%rdx
   1b49a:	48 89 de             	mov    %rbx,%rsi
   1b49d:	48 89 c7             	mov    %rax,%rdi
   1b4a0:	e8 9d 04 00 00       	call   1b942 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1b4a5:	48 89 c2             	mov    %rax,%rdx
   1b4a8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b4ac:	48 89 d6             	mov    %rdx,%rsi
   1b4af:	48 89 c7             	mov    %rax,%rdi
   1b4b2:	e8 b8 04 00 00       	call   1b96f <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   1b4b7:	48 83 c4 20          	add    $0x20,%rsp
   1b4bb:	5b                   	pop    %rbx
   1b4bc:	41 5c                	pop    %r12
   1b4be:	5d                   	pop    %rbp
   1b4bf:	c3                   	ret

000000000001b4c0 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b4c0:	55                   	push   %rbp
   1b4c1:	48 89 e5             	mov    %rsp,%rbp
   1b4c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b4c8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b4cf:	ff ff 0f 
      }
   1b4d2:	5d                   	pop    %rbp
   1b4d3:	c3                   	ret

000000000001b4d4 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1b4d4:	55                   	push   %rbp
   1b4d5:	48 89 e5             	mov    %rsp,%rbp
   1b4d8:	48 83 ec 20          	sub    $0x20,%rsp
   1b4dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b4e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b4e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1b4e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4ec:	48 89 c7             	mov    %rax,%rdi
   1b4ef:	e8 cc ff ff ff       	call   1b4c0 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1b4f4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b4f8:	0f 92 c0             	setb   %al
   1b4fb:	0f b6 c0             	movzbl %al,%eax
   1b4fe:	48 85 c0             	test   %rax,%rax
   1b501:	0f 95 c0             	setne  %al
   1b504:	84 c0                	test   %al,%al
   1b506:	74 1a                	je     1b522 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1b508:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1b50f:	ff ff 1f 
   1b512:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1b516:	73 05                	jae    1b51d <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1b518:	e8 f3 8d fe ff       	call   4310 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1b51d:	e8 ee 8b fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1b522:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b526:	48 c1 e0 03          	shl    $0x3,%rax
   1b52a:	48 89 c7             	mov    %rax,%rdi
   1b52d:	e8 4e 8f fe ff       	call   4480 <_Znwm@plt>
   1b532:	90                   	nop
      }
   1b533:	c9                   	leave
   1b534:	c3                   	ret

000000000001b535 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1b535:	55                   	push   %rbp
   1b536:	48 89 e5             	mov    %rsp,%rbp
   1b539:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1b53d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b541:	5d                   	pop    %rbp
   1b542:	c3                   	ret

000000000001b543 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1b543:	55                   	push   %rbp
   1b544:	48 89 e5             	mov    %rsp,%rbp
   1b547:	48 83 ec 10          	sub    $0x10,%rsp
   1b54b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1b54f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b553:	48 89 c6             	mov    %rax,%rsi
   1b556:	bf 08 00 00 00       	mov    $0x8,%edi
   1b55b:	e8 18 b1 fe ff       	call   6678 <_ZnwmPv>
   1b560:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1b567:	90                   	nop
   1b568:	c9                   	leave
   1b569:	c3                   	ret

000000000001b56a <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1b56a:	55                   	push   %rbp
   1b56b:	48 89 e5             	mov    %rsp,%rbp
   1b56e:	48 83 ec 20          	sub    $0x20,%rsp
   1b572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b576:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b57a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1b57e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b582:	48 89 c7             	mov    %rax,%rdi
   1b585:	e8 f7 03 00 00       	call   1b981 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1b58a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b58e:	48 89 c7             	mov    %rax,%rdi
   1b591:	e8 f4 b0 fe ff       	call   668a <_ZSt17__size_to_integerm>
   1b596:	48 89 c1             	mov    %rax,%rcx
   1b599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b59d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b5a1:	48 89 ce             	mov    %rcx,%rsi
   1b5a4:	48 89 c7             	mov    %rax,%rdi
   1b5a7:	e8 e0 03 00 00       	call   1b98c <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1b5ac:	c9                   	leave
   1b5ad:	c3                   	ret

000000000001b5ae <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b5ae:	55                   	push   %rbp
   1b5af:	48 89 e5             	mov    %rsp,%rbp
   1b5b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b5b6:	90                   	nop
   1b5b7:	5d                   	pop    %rbp
   1b5b8:	c3                   	ret

000000000001b5b9 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b5b9:	55                   	push   %rbp
   1b5ba:	48 89 e5             	mov    %rsp,%rbp
   1b5bd:	48 83 ec 20          	sub    $0x20,%rsp
   1b5c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b5c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b5c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b5cd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b5d2:	75 06                	jne    1b5da <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5d8:	eb 3a                	jmp    1b614 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b5da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b5de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b5e5:	00 
   1b5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5ea:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b5ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5f6:	48 89 ce             	mov    %rcx,%rsi
   1b5f9:	48 89 c7             	mov    %rax,%rdi
   1b5fc:	e8 e8 03 00 00       	call   1b9e9 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b601:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b605:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b60c:	00 
   1b60d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b611:	48 01 d0             	add    %rdx,%rax
    }
   1b614:	c9                   	leave
   1b615:	c3                   	ret

000000000001b616 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   1b616:	55                   	push   %rbp
   1b617:	48 89 e5             	mov    %rsp,%rbp
   1b61a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b61e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b622:	5d                   	pop    %rbp
   1b623:	c3                   	ret

000000000001b624 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b624:	55                   	push   %rbp
   1b625:	48 89 e5             	mov    %rsp,%rbp
   1b628:	41 54                	push   %r12
   1b62a:	53                   	push   %rbx
   1b62b:	48 83 ec 20          	sub    $0x20,%rsp
   1b62f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b633:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b637:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b63b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b63f:	48 89 c7             	mov    %rax,%rdi
   1b642:	e8 02 ee ff ff       	call   1a449 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1b647:	49 89 c4             	mov    %rax,%r12
   1b64a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b64e:	48 89 c7             	mov    %rax,%rdi
   1b651:	e8 c1 03 00 00       	call   1ba17 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1b656:	48 89 c3             	mov    %rax,%rbx
   1b659:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b65d:	48 89 c7             	mov    %rax,%rdi
   1b660:	e8 b2 03 00 00       	call   1ba17 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1b665:	4c 89 e2             	mov    %r12,%rdx
   1b668:	48 89 de             	mov    %rbx,%rsi
   1b66b:	48 89 c7             	mov    %rax,%rdi
   1b66e:	e8 b2 03 00 00       	call   1ba25 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1b673:	48 89 c2             	mov    %rax,%rdx
   1b676:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b67a:	48 89 d6             	mov    %rdx,%rsi
   1b67d:	48 89 c7             	mov    %rax,%rdi
   1b680:	e8 cd 03 00 00       	call   1ba52 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   1b685:	48 83 c4 20          	add    $0x20,%rsp
   1b689:	5b                   	pop    %rbx
   1b68a:	41 5c                	pop    %r12
   1b68c:	5d                   	pop    %rbp
   1b68d:	c3                   	ret

000000000001b68e <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b68e:	55                   	push   %rbp
   1b68f:	48 89 e5             	mov    %rsp,%rbp
   1b692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b696:	90                   	nop
   1b697:	5d                   	pop    %rbp
   1b698:	c3                   	ret

000000000001b699 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b699:	55                   	push   %rbp
   1b69a:	48 89 e5             	mov    %rsp,%rbp
   1b69d:	48 83 ec 20          	sub    $0x20,%rsp
   1b6a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b6a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b6a9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b6ad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b6b2:	75 06                	jne    1b6ba <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b6b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6b8:	eb 3a                	jmp    1b6f4 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b6ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b6be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b6c5:	00 
   1b6c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6ca:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b6ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b6d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6d6:	48 89 ce             	mov    %rcx,%rsi
   1b6d9:	48 89 c7             	mov    %rax,%rdi
   1b6dc:	e8 83 03 00 00       	call   1ba64 <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b6e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b6e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b6ec:	00 
   1b6ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6f1:	48 01 d0             	add    %rdx,%rax
    }
   1b6f4:	c9                   	leave
   1b6f5:	c3                   	ret

000000000001b6f6 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b6f6:	55                   	push   %rbp
   1b6f7:	48 89 e5             	mov    %rsp,%rbp
   1b6fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b6fe:	90                   	nop
   1b6ff:	5d                   	pop    %rbp
   1b700:	c3                   	ret

000000000001b701 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b701:	55                   	push   %rbp
   1b702:	48 89 e5             	mov    %rsp,%rbp
   1b705:	48 83 ec 20          	sub    $0x20,%rsp
   1b709:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b70d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b711:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b715:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b71a:	75 06                	jne    1b722 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b71c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b720:	eb 3a                	jmp    1b75c <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b722:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b726:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b72d:	00 
   1b72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b732:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b736:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b73a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b73e:	48 89 ce             	mov    %rcx,%rsi
   1b741:	48 89 c7             	mov    %rax,%rdi
   1b744:	e8 49 03 00 00       	call   1ba92 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b749:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b74d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b754:	00 
   1b755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b759:	48 01 d0             	add    %rdx,%rax
    }
   1b75c:	c9                   	leave
   1b75d:	c3                   	ret

000000000001b75e <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   1b75e:	55                   	push   %rbp
   1b75f:	48 89 e5             	mov    %rsp,%rbp
   1b762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b76a:	5d                   	pop    %rbp
   1b76b:	c3                   	ret

000000000001b76c <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b76c:	55                   	push   %rbp
   1b76d:	48 89 e5             	mov    %rsp,%rbp
   1b770:	41 54                	push   %r12
   1b772:	53                   	push   %rbx
   1b773:	48 83 ec 20          	sub    $0x20,%rsp
   1b777:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b77b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b77f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b783:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b787:	48 89 c7             	mov    %rax,%rdi
   1b78a:	e8 5a f1 ff ff       	call   1a8e9 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1b78f:	49 89 c4             	mov    %rax,%r12
   1b792:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b796:	48 89 c7             	mov    %rax,%rdi
   1b799:	e8 22 03 00 00       	call   1bac0 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1b79e:	48 89 c3             	mov    %rax,%rbx
   1b7a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b7a5:	48 89 c7             	mov    %rax,%rdi
   1b7a8:	e8 13 03 00 00       	call   1bac0 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1b7ad:	4c 89 e2             	mov    %r12,%rdx
   1b7b0:	48 89 de             	mov    %rbx,%rsi
   1b7b3:	48 89 c7             	mov    %rax,%rdi
   1b7b6:	e8 13 03 00 00       	call   1bace <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1b7bb:	48 89 c2             	mov    %rax,%rdx
   1b7be:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b7c2:	48 89 d6             	mov    %rdx,%rsi
   1b7c5:	48 89 c7             	mov    %rax,%rdi
   1b7c8:	e8 2e 03 00 00       	call   1bafb <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   1b7cd:	48 83 c4 20          	add    $0x20,%rsp
   1b7d1:	5b                   	pop    %rbx
   1b7d2:	41 5c                	pop    %r12
   1b7d4:	5d                   	pop    %rbp
   1b7d5:	c3                   	ret

000000000001b7d6 <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   1b7d6:	55                   	push   %rbp
   1b7d7:	48 89 e5             	mov    %rsp,%rbp
   1b7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b7de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7e2:	5d                   	pop    %rbp
   1b7e3:	c3                   	ret

000000000001b7e4 <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1b7e4:	55                   	push   %rbp
   1b7e5:	48 89 e5             	mov    %rsp,%rbp
   1b7e8:	41 54                	push   %r12
   1b7ea:	53                   	push   %rbx
   1b7eb:	48 83 ec 20          	sub    $0x20,%rsp
   1b7ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b7f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b7f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1b7fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b7ff:	48 89 c7             	mov    %rax,%rdi
   1b802:	e8 14 03 00 00       	call   1bb1b <_ZSt12__niter_baseIPjET_S1_>
   1b807:	49 89 c4             	mov    %rax,%r12
   1b80a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b80e:	48 89 c7             	mov    %rax,%rdi
   1b811:	e8 f7 02 00 00       	call   1bb0d <_ZSt12__niter_baseIPKjET_S2_>
   1b816:	48 89 c3             	mov    %rax,%rbx
   1b819:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b81d:	48 89 c7             	mov    %rax,%rdi
   1b820:	e8 e8 02 00 00       	call   1bb0d <_ZSt12__niter_baseIPKjET_S2_>
   1b825:	4c 89 e2             	mov    %r12,%rdx
   1b828:	48 89 de             	mov    %rbx,%rsi
   1b82b:	48 89 c7             	mov    %rax,%rdi
   1b82e:	e8 f6 02 00 00       	call   1bb29 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   1b833:	48 89 c2             	mov    %rax,%rdx
   1b836:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1b83a:	48 89 d6             	mov    %rdx,%rsi
   1b83d:	48 89 c7             	mov    %rax,%rdi
   1b840:	e8 11 03 00 00       	call   1bb56 <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   1b845:	48 83 c4 20          	add    $0x20,%rsp
   1b849:	5b                   	pop    %rbx
   1b84a:	41 5c                	pop    %r12
   1b84c:	5d                   	pop    %rbp
   1b84d:	c3                   	ret

000000000001b84e <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1b84e:	55                   	push   %rbp
   1b84f:	48 89 e5             	mov    %rsp,%rbp
   1b852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b85a:	5d                   	pop    %rbp
   1b85b:	c3                   	ret

000000000001b85c <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1b85c:	55                   	push   %rbp
   1b85d:	48 89 e5             	mov    %rsp,%rbp
   1b860:	48 83 ec 20          	sub    $0x20,%rsp
   1b864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b86c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1b870:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b874:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b87c:	48 89 ce             	mov    %rcx,%rsi
   1b87f:	48 89 c7             	mov    %rax,%rdi
   1b882:	e8 e1 02 00 00       	call   1bb68 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1b887:	c9                   	leave
   1b888:	c3                   	ret

000000000001b889 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1b889:	55                   	push   %rbp
   1b88a:	48 89 e5             	mov    %rsp,%rbp
   1b88d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b891:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1b895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b899:	5d                   	pop    %rbp
   1b89a:	c3                   	ret
   1b89b:	90                   	nop

000000000001b89c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1b89c:	55                   	push   %rbp
   1b89d:	48 89 e5             	mov    %rsp,%rbp
   1b8a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1b8a4:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1b8ab:	1c c7 01 
      }
   1b8ae:	5d                   	pop    %rbp
   1b8af:	c3                   	ret

000000000001b8b0 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   1b8b0:	55                   	push   %rbp
   1b8b1:	48 89 e5             	mov    %rsp,%rbp
   1b8b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b8b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1b8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b8c4:	48 8b 12             	mov    (%rdx),%rdx
   1b8c7:	48 89 10             	mov    %rdx,(%rax)
      { }
   1b8ca:	90                   	nop
   1b8cb:	5d                   	pop    %rbp
   1b8cc:	c3                   	ret
   1b8cd:	90                   	nop

000000000001b8ce <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1b8ce:	55                   	push   %rbp
   1b8cf:	48 89 e5             	mov    %rsp,%rbp
   1b8d2:	48 83 ec 20          	sub    $0x20,%rsp
   1b8d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b8da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1b8de:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1b8e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b8e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8ea:	48 89 ce             	mov    %rcx,%rsi
   1b8ed:	48 89 c7             	mov    %rax,%rdi
   1b8f0:	e8 a1 02 00 00       	call   1bb96 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1b8f5:	90                   	nop
   1b8f6:	c9                   	leave
   1b8f7:	c3                   	ret

000000000001b8f8 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1b8f8:	55                   	push   %rbp
   1b8f9:	48 89 e5             	mov    %rsp,%rbp
   1b8fc:	48 83 ec 20          	sub    $0x20,%rsp
   1b900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b904:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b908:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1b90c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b910:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b918:	48 89 ce             	mov    %rcx,%rsi
   1b91b:	48 89 c7             	mov    %rax,%rdi
   1b91e:	e8 bd 02 00 00       	call   1bbe0 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1b923:	90                   	nop
   1b924:	c9                   	leave
   1b925:	c3                   	ret

000000000001b926 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   1b926:	55                   	push   %rbp
   1b927:	48 89 e5             	mov    %rsp,%rbp
   1b92a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b92e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b932:	5d                   	pop    %rbp
   1b933:	c3                   	ret

000000000001b934 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   1b934:	55                   	push   %rbp
   1b935:	48 89 e5             	mov    %rsp,%rbp
   1b938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1b93c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b940:	5d                   	pop    %rbp
   1b941:	c3                   	ret

000000000001b942 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1b942:	55                   	push   %rbp
   1b943:	48 89 e5             	mov    %rsp,%rbp
   1b946:	48 83 ec 20          	sub    $0x20,%rsp
   1b94a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b94e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b952:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1b956:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b95a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b95e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b962:	48 89 ce             	mov    %rcx,%rsi
   1b965:	48 89 c7             	mov    %rax,%rdi
   1b968:	e8 ae 02 00 00       	call   1bc1b <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1b96d:	c9                   	leave
   1b96e:	c3                   	ret

000000000001b96f <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1b96f:	55                   	push   %rbp
   1b970:	48 89 e5             	mov    %rsp,%rbp
   1b973:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b977:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1b97b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b97f:	5d                   	pop    %rbp
   1b980:	c3                   	ret

000000000001b981 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1b981:	55                   	push   %rbp
   1b982:	48 89 e5             	mov    %rsp,%rbp
   1b985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1b989:	90                   	nop
   1b98a:	5d                   	pop    %rbp
   1b98b:	c3                   	ret

000000000001b98c <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1b98c:	55                   	push   %rbp
   1b98d:	48 89 e5             	mov    %rsp,%rbp
   1b990:	48 83 ec 20          	sub    $0x20,%rsp
   1b994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b998:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b99c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1b9a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b9a5:	75 06                	jne    1b9ad <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1b9a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9ab:	eb 3a                	jmp    1b9e7 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1b9ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b9b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b9b8:	00 
   1b9b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9bd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1b9c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9c9:	48 89 ce             	mov    %rcx,%rsi
   1b9cc:	48 89 c7             	mov    %rax,%rdi
   1b9cf:	e8 74 02 00 00       	call   1bc48 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1b9d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b9d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b9df:	00 
   1b9e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9e4:	48 01 d0             	add    %rdx,%rax
    }
   1b9e7:	c9                   	leave
   1b9e8:	c3                   	ret

000000000001b9e9 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1b9e9:	55                   	push   %rbp
   1b9ea:	48 89 e5             	mov    %rsp,%rbp
   1b9ed:	48 83 ec 20          	sub    $0x20,%rsp
   1b9f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b9f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b9f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1b9fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ba01:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ba05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba09:	48 89 ce             	mov    %rcx,%rsi
   1ba0c:	48 89 c7             	mov    %rax,%rdi
   1ba0f:	e8 62 02 00 00       	call   1bc76 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1ba14:	90                   	nop
   1ba15:	c9                   	leave
   1ba16:	c3                   	ret

000000000001ba17 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   1ba17:	55                   	push   %rbp
   1ba18:	48 89 e5             	mov    %rsp,%rbp
   1ba1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1ba1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba23:	5d                   	pop    %rbp
   1ba24:	c3                   	ret

000000000001ba25 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1ba25:	55                   	push   %rbp
   1ba26:	48 89 e5             	mov    %rsp,%rbp
   1ba29:	48 83 ec 20          	sub    $0x20,%rsp
   1ba2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ba35:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1ba39:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ba3d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ba41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba45:	48 89 ce             	mov    %rcx,%rsi
   1ba48:	48 89 c7             	mov    %rax,%rdi
   1ba4b:	e8 61 02 00 00       	call   1bcb1 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1ba50:	c9                   	leave
   1ba51:	c3                   	ret

000000000001ba52 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1ba52:	55                   	push   %rbp
   1ba53:	48 89 e5             	mov    %rsp,%rbp
   1ba56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1ba5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ba62:	5d                   	pop    %rbp
   1ba63:	c3                   	ret

000000000001ba64 <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1ba64:	55                   	push   %rbp
   1ba65:	48 89 e5             	mov    %rsp,%rbp
   1ba68:	48 83 ec 20          	sub    $0x20,%rsp
   1ba6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ba74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1ba78:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ba7c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ba80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba84:	48 89 ce             	mov    %rcx,%rsi
   1ba87:	48 89 c7             	mov    %rax,%rdi
   1ba8a:	e8 4f 02 00 00       	call   1bcde <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1ba8f:	90                   	nop
   1ba90:	c9                   	leave
   1ba91:	c3                   	ret

000000000001ba92 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1ba92:	55                   	push   %rbp
   1ba93:	48 89 e5             	mov    %rsp,%rbp
   1ba96:	48 83 ec 20          	sub    $0x20,%rsp
   1ba9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1baa2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1baa6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1baaa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1baae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bab2:	48 89 ce             	mov    %rcx,%rsi
   1bab5:	48 89 c7             	mov    %rax,%rdi
   1bab8:	e8 5c 02 00 00       	call   1bd19 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1babd:	90                   	nop
   1babe:	c9                   	leave
   1babf:	c3                   	ret

000000000001bac0 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   1bac0:	55                   	push   %rbp
   1bac1:	48 89 e5             	mov    %rsp,%rbp
   1bac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1bac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bacc:	5d                   	pop    %rbp
   1bacd:	c3                   	ret

000000000001bace <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1bace:	55                   	push   %rbp
   1bacf:	48 89 e5             	mov    %rsp,%rbp
   1bad2:	48 83 ec 20          	sub    $0x20,%rsp
   1bad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bade:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1bae2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bae6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1baea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1baee:	48 89 ce             	mov    %rcx,%rsi
   1baf1:	48 89 c7             	mov    %rax,%rdi
   1baf4:	e8 5b 02 00 00       	call   1bd54 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1baf9:	c9                   	leave
   1bafa:	c3                   	ret

000000000001bafb <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1bafb:	55                   	push   %rbp
   1bafc:	48 89 e5             	mov    %rsp,%rbp
   1baff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1bb07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bb0b:	5d                   	pop    %rbp
   1bb0c:	c3                   	ret

000000000001bb0d <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   1bb0d:	55                   	push   %rbp
   1bb0e:	48 89 e5             	mov    %rsp,%rbp
   1bb11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1bb15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb19:	5d                   	pop    %rbp
   1bb1a:	c3                   	ret

000000000001bb1b <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   1bb1b:	55                   	push   %rbp
   1bb1c:	48 89 e5             	mov    %rsp,%rbp
   1bb1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1bb23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb27:	5d                   	pop    %rbp
   1bb28:	c3                   	ret

000000000001bb29 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1bb29:	55                   	push   %rbp
   1bb2a:	48 89 e5             	mov    %rsp,%rbp
   1bb2d:	48 83 ec 20          	sub    $0x20,%rsp
   1bb31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bb39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1bb3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bb41:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bb45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb49:	48 89 ce             	mov    %rcx,%rsi
   1bb4c:	48 89 c7             	mov    %rax,%rdi
   1bb4f:	e8 2d 02 00 00       	call   1bd81 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   1bb54:	c9                   	leave
   1bb55:	c3                   	ret

000000000001bb56 <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1bb56:	55                   	push   %rbp
   1bb57:	48 89 e5             	mov    %rsp,%rbp
   1bb5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1bb62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bb66:	5d                   	pop    %rbp
   1bb67:	c3                   	ret

000000000001bb68 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bb68:	55                   	push   %rbp
   1bb69:	48 89 e5             	mov    %rsp,%rbp
   1bb6c:	48 83 ec 20          	sub    $0x20,%rsp
   1bb70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bb78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bb7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bb80:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bb84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb88:	48 89 ce             	mov    %rcx,%rsi
   1bb8b:	48 89 c7             	mov    %rax,%rdi
   1bb8e:	e8 1b 02 00 00       	call   1bdae <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1bb93:	c9                   	leave
   1bb94:	c3                   	ret
   1bb95:	90                   	nop

000000000001bb96 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1bb96:	55                   	push   %rbp
   1bb97:	48 89 e5             	mov    %rsp,%rbp
   1bb9a:	53                   	push   %rbx
   1bb9b:	48 83 ec 28          	sub    $0x28,%rsp
   1bb9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bba3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bba7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1bbab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1bbaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bbb3:	48 89 c7             	mov    %rax,%rdi
   1bbb6:	e8 52 02 00 00       	call   1be0d <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1bbbb:	48 89 c7             	mov    %rax,%rdi
   1bbbe:	e8 64 02 00 00       	call   1be27 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1bbc3:	48 89 c6             	mov    %rax,%rsi
   1bbc6:	48 89 df             	mov    %rbx,%rdi
   1bbc9:	e8 92 86 fe ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1bbce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bbd2:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   1bbd9:	90                   	nop
   1bbda:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1bbde:	c9                   	leave
   1bbdf:	c3                   	ret

000000000001bbe0 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bbe0:	55                   	push   %rbp
   1bbe1:	48 89 e5             	mov    %rsp,%rbp
   1bbe4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bbe8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bbec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bbf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bbf4:	48 8b 00             	mov    (%rax),%rax
   1bbf7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bbfb:	eb 10                	jmp    1bc0d <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bbfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bc05:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bc08:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bc0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc11:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bc15:	75 e6                	jne    1bbfd <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bc17:	90                   	nop
   1bc18:	90                   	nop
   1bc19:	5d                   	pop    %rbp
   1bc1a:	c3                   	ret

000000000001bc1b <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bc1b:	55                   	push   %rbp
   1bc1c:	48 89 e5             	mov    %rsp,%rbp
   1bc1f:	48 83 ec 20          	sub    $0x20,%rsp
   1bc23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bc27:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bc2b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bc2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bc33:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bc37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bc3b:	48 89 ce             	mov    %rcx,%rsi
   1bc3e:	48 89 c7             	mov    %rax,%rdi
   1bc41:	e8 ef 01 00 00       	call   1be35 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   1bc46:	c9                   	leave
   1bc47:	c3                   	ret

000000000001bc48 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1bc48:	55                   	push   %rbp
   1bc49:	48 89 e5             	mov    %rsp,%rbp
   1bc4c:	48 83 ec 20          	sub    $0x20,%rsp
   1bc50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bc54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bc58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1bc5c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bc60:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bc64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bc68:	48 89 ce             	mov    %rcx,%rsi
   1bc6b:	48 89 c7             	mov    %rax,%rdi
   1bc6e:	e8 44 02 00 00       	call   1beb7 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1bc73:	90                   	nop
   1bc74:	c9                   	leave
   1bc75:	c3                   	ret

000000000001bc76 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bc76:	55                   	push   %rbp
   1bc77:	48 89 e5             	mov    %rsp,%rbp
   1bc7a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bc7e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bc82:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bc86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc8a:	48 8b 00             	mov    (%rax),%rax
   1bc8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bc91:	eb 10                	jmp    1bca3 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bc93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc97:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bc9b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bc9e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bca7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bcab:	75 e6                	jne    1bc93 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bcad:	90                   	nop
   1bcae:	90                   	nop
   1bcaf:	5d                   	pop    %rbp
   1bcb0:	c3                   	ret

000000000001bcb1 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bcb1:	55                   	push   %rbp
   1bcb2:	48 89 e5             	mov    %rsp,%rbp
   1bcb5:	48 83 ec 20          	sub    $0x20,%rsp
   1bcb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bcbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bcc1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bcc5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bcc9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bcd1:	48 89 ce             	mov    %rcx,%rsi
   1bcd4:	48 89 c7             	mov    %rax,%rdi
   1bcd7:	e8 16 02 00 00       	call   1bef2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   1bcdc:	c9                   	leave
   1bcdd:	c3                   	ret

000000000001bcde <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bcde:	55                   	push   %rbp
   1bcdf:	48 89 e5             	mov    %rsp,%rbp
   1bce2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bce6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bcea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bcee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bcf2:	48 8b 00             	mov    (%rax),%rax
   1bcf5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bcf9:	eb 10                	jmp    1bd0b <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bcfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bcff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bd03:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bd06:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bd0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bd0f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bd13:	75 e6                	jne    1bcfb <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bd15:	90                   	nop
   1bd16:	90                   	nop
   1bd17:	5d                   	pop    %rbp
   1bd18:	c3                   	ret

000000000001bd19 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1bd19:	55                   	push   %rbp
   1bd1a:	48 89 e5             	mov    %rsp,%rbp
   1bd1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bd21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bd25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bd29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bd2d:	48 8b 00             	mov    (%rax),%rax
   1bd30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bd34:	eb 10                	jmp    1bd46 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bd36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bd3a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bd3e:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bd41:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bd46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bd4a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1bd4e:	75 e6                	jne    1bd36 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1bd50:	90                   	nop
   1bd51:	90                   	nop
   1bd52:	5d                   	pop    %rbp
   1bd53:	c3                   	ret

000000000001bd54 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bd54:	55                   	push   %rbp
   1bd55:	48 89 e5             	mov    %rsp,%rbp
   1bd58:	48 83 ec 20          	sub    $0x20,%rsp
   1bd5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bd60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bd64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bd68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bd6c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bd70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd74:	48 89 ce             	mov    %rcx,%rsi
   1bd77:	48 89 c7             	mov    %rax,%rdi
   1bd7a:	e8 d2 01 00 00       	call   1bf51 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   1bd7f:	c9                   	leave
   1bd80:	c3                   	ret

000000000001bd81 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1bd81:	55                   	push   %rbp
   1bd82:	48 89 e5             	mov    %rsp,%rbp
   1bd85:	48 83 ec 20          	sub    $0x20,%rsp
   1bd89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bd8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bd91:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1bd95:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bd99:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bd9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bda1:	48 89 ce             	mov    %rcx,%rsi
   1bda4:	48 89 c7             	mov    %rax,%rdi
   1bda7:	e8 04 02 00 00       	call   1bfb0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   1bdac:	c9                   	leave
   1bdad:	c3                   	ret

000000000001bdae <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1bdae:	55                   	push   %rbp
   1bdaf:	48 89 e5             	mov    %rsp,%rbp
   1bdb2:	48 83 ec 30          	sub    $0x30,%rsp
   1bdb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bdba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bdbe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1bdc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bdc6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1bdca:	48 c1 f8 03          	sar    $0x3,%rax
   1bdce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bdd2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bdd7:	74 1f                	je     1bdf8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bdd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bddd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bde4:	00 
   1bde5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bde9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bded:	48 89 ce             	mov    %rcx,%rsi
   1bdf0:	48 89 c7             	mov    %rax,%rdi
   1bdf3:	e8 58 8a fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1bdf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bdfc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1be03:	00 
   1be04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1be08:	48 01 d0             	add    %rdx,%rax
	}
   1be0b:	c9                   	leave
   1be0c:	c3                   	ret

000000000001be0d <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   1be0d:	55                   	push   %rbp
   1be0e:	48 89 e5             	mov    %rsp,%rbp
   1be11:	48 83 ec 10          	sub    $0x10,%rsp
   1be15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1be19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be1d:	48 89 c7             	mov    %rax,%rdi
   1be20:	e8 ea 01 00 00       	call   1c00f <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1be25:	c9                   	leave
   1be26:	c3                   	ret

000000000001be27 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1be27:	55                   	push   %rbp
   1be28:	48 89 e5             	mov    %rsp,%rbp
   1be2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1be2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be33:	5d                   	pop    %rbp
   1be34:	c3                   	ret

000000000001be35 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1be35:	55                   	push   %rbp
   1be36:	48 89 e5             	mov    %rsp,%rbp
   1be39:	48 83 ec 30          	sub    $0x30,%rsp
   1be3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1be41:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1be45:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1be49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1be4d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1be51:	48 c1 f8 04          	sar    $0x4,%rax
   1be55:	48 89 c2             	mov    %rax,%rdx
   1be58:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1be5f:	e3 38 8e 
   1be62:	48 0f af c2          	imul   %rdx,%rax
   1be66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1be6a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1be6f:	74 28                	je     1be99 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1be71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1be75:	48 89 d0             	mov    %rdx,%rax
   1be78:	48 c1 e0 03          	shl    $0x3,%rax
   1be7c:	48 01 d0             	add    %rdx,%rax
   1be7f:	48 c1 e0 04          	shl    $0x4,%rax
   1be83:	48 89 c2             	mov    %rax,%rdx
   1be86:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1be8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1be8e:	48 89 ce             	mov    %rcx,%rsi
   1be91:	48 89 c7             	mov    %rax,%rdi
   1be94:	e8 b7 89 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1be99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1be9d:	48 89 d0             	mov    %rdx,%rax
   1bea0:	48 c1 e0 03          	shl    $0x3,%rax
   1bea4:	48 01 d0             	add    %rdx,%rax
   1bea7:	48 c1 e0 04          	shl    $0x4,%rax
   1beab:	48 89 c2             	mov    %rax,%rdx
   1beae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1beb2:	48 01 d0             	add    %rdx,%rax
	}
   1beb5:	c9                   	leave
   1beb6:	c3                   	ret

000000000001beb7 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1beb7:	55                   	push   %rbp
   1beb8:	48 89 e5             	mov    %rsp,%rbp
   1bebb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bebf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bec3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1bec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1becb:	48 8b 00             	mov    (%rax),%rax
   1bece:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1bed2:	eb 10                	jmp    1bee4 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1bed4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bed8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bedc:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1bedf:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1bee4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bee8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1beec:	75 e6                	jne    1bed4 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1beee:	90                   	nop
   1beef:	90                   	nop
   1bef0:	5d                   	pop    %rbp
   1bef1:	c3                   	ret

000000000001bef2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1bef2:	55                   	push   %rbp
   1bef3:	48 89 e5             	mov    %rsp,%rbp
   1bef6:	48 83 ec 30          	sub    $0x30,%rsp
   1befa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1befe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bf02:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1bf06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bf0a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1bf0e:	48 c1 f8 03          	sar    $0x3,%rax
   1bf12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bf16:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bf1b:	74 1f                	je     1bf3c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bf1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf21:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bf28:	00 
   1bf29:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bf2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf31:	48 89 ce             	mov    %rcx,%rsi
   1bf34:	48 89 c7             	mov    %rax,%rdi
   1bf37:	e8 14 89 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1bf3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf40:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bf47:	00 
   1bf48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf4c:	48 01 d0             	add    %rdx,%rax
	}
   1bf4f:	c9                   	leave
   1bf50:	c3                   	ret

000000000001bf51 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1bf51:	55                   	push   %rbp
   1bf52:	48 89 e5             	mov    %rsp,%rbp
   1bf55:	48 83 ec 30          	sub    $0x30,%rsp
   1bf59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bf5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bf61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1bf65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bf69:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1bf6d:	48 c1 f8 03          	sar    $0x3,%rax
   1bf71:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bf75:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bf7a:	74 1f                	je     1bf9b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bf7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf80:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bf87:	00 
   1bf88:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bf8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bf90:	48 89 ce             	mov    %rcx,%rsi
   1bf93:	48 89 c7             	mov    %rax,%rdi
   1bf96:	e8 b5 88 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1bf9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf9f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1bfa6:	00 
   1bfa7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfab:	48 01 d0             	add    %rdx,%rax
	}
   1bfae:	c9                   	leave
   1bfaf:	c3                   	ret

000000000001bfb0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1bfb0:	55                   	push   %rbp
   1bfb1:	48 89 e5             	mov    %rsp,%rbp
   1bfb4:	48 83 ec 30          	sub    $0x30,%rsp
   1bfb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bfbc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1bfc0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1bfc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bfc8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1bfcc:	48 c1 f8 02          	sar    $0x2,%rax
   1bfd0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1bfd4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1bfd9:	74 1f                	je     1bffa <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1bfdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bfdf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1bfe6:	00 
   1bfe7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1bfeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bfef:	48 89 ce             	mov    %rcx,%rsi
   1bff2:	48 89 c7             	mov    %rax,%rdi
   1bff5:	e8 56 88 fe ff       	call   4850 <memmove@plt>
	  return __result + _Num;
   1bffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bffe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1c005:	00 
   1c006:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c00a:	48 01 d0             	add    %rdx,%rax
	}
   1c00d:	c9                   	leave
   1c00e:	c3                   	ret

000000000001c00f <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1c00f:	55                   	push   %rbp
   1c010:	48 89 e5             	mov    %rsp,%rbp
   1c013:	48 83 ec 10          	sub    $0x10,%rsp
   1c017:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1c01b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c01f:	48 89 c7             	mov    %rax,%rdi
   1c022:	e8 02 00 00 00       	call   1c029 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1c027:	c9                   	leave
   1c028:	c3                   	ret

000000000001c029 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1c029:	55                   	push   %rbp
   1c02a:	48 89 e5             	mov    %rsp,%rbp
   1c02d:	48 83 ec 10          	sub    $0x10,%rsp
   1c031:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c039:	48 89 c7             	mov    %rax,%rdi
   1c03c:	e8 02 00 00 00       	call   1c043 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   1c041:	c9                   	leave
   1c042:	c3                   	ret

000000000001c043 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   1c043:	55                   	push   %rbp
   1c044:	48 89 e5             	mov    %rsp,%rbp
   1c047:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c04f:	48 8b 00             	mov    (%rax),%rax
   1c052:	5d                   	pop    %rbp
   1c053:	c3                   	ret

000000000001c054 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   1c054:	55                   	push   %rbp
   1c055:	48 89 e5             	mov    %rsp,%rbp
   1c058:	48 83 ec 10          	sub    $0x10,%rsp
   1c05c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c060:	48 8d 15 59 4c 01 00 	lea    0x14c59(%rip),%rdx        # 30cc0 <_ZTVSt19bad_optional_access+0x10>
   1c067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c06b:	48 89 10             	mov    %rdx,(%rax)
   1c06e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c072:	48 89 c7             	mov    %rax,%rdi
   1c075:	e8 c6 88 fe ff       	call   4940 <_ZNSt9exceptionD2Ev@plt>
   1c07a:	90                   	nop
   1c07b:	c9                   	leave
   1c07c:	c3                   	ret
   1c07d:	90                   	nop

000000000001c07e <_ZNSt19bad_optional_accessD0Ev>:
   1c07e:	55                   	push   %rbp
   1c07f:	48 89 e5             	mov    %rsp,%rbp
   1c082:	48 83 ec 10          	sub    $0x10,%rsp
   1c086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c08a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c08e:	48 89 c7             	mov    %rax,%rdi
   1c091:	e8 be ff ff ff       	call   1c054 <_ZNSt19bad_optional_accessD1Ev>
   1c096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c09a:	be 08 00 00 00       	mov    $0x8,%esi
   1c09f:	48 89 c7             	mov    %rax,%rdi
   1c0a2:	e8 f9 83 fe ff       	call   44a0 <_ZdlPvm@plt>
   1c0a7:	c9                   	leave
   1c0a8:	c3                   	ret

Disassembly of section .fini:

000000000001c0ac <_fini>:
   1c0ac:	48 83 ec 08          	sub    $0x8,%rsp
   1c0b0:	48 83 c4 08          	add    $0x8,%rsp
   1c0b4:	c3                   	ret
