
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad bf 02 00 	mov    0x2bfad(%rip),%rax        # 2ffb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca bf 02 00    	push   0x2bfca(%rip)        # 2fff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc bf 02 00    	jmp    *0x2bfcc(%rip)        # 2fff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca bf 02 00    	jmp    *0x2bfca(%rip)        # 30000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 bf 02 00    	jmp    *0x2bfc2(%rip)        # 30008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba bf 02 00    	jmp    *0x2bfba(%rip)        # 30010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 bf 02 00    	jmp    *0x2bfb2(%rip)        # 30018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa bf 02 00    	jmp    *0x2bfaa(%rip)        # 30020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 bf 02 00    	jmp    *0x2bfa2(%rip)        # 30028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <vkGetBufferMemoryRequirements@plt>:
    4090:	ff 25 9a bf 02 00    	jmp    *0x2bf9a(%rip)        # 30030 <vkGetBufferMemoryRequirements@Base>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    40a0:	ff 25 92 bf 02 00    	jmp    *0x2bf92(%rip)        # 30038 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSolsEm@plt>:
    40b0:	ff 25 8a bf 02 00    	jmp    *0x2bf8a(%rip)        # 30040 <_ZNSolsEm@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDeviceWaitIdle@plt>:
    40c0:	ff 25 82 bf 02 00    	jmp    *0x2bf82(%rip)        # 30048 <vkDeviceWaitIdle@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40d0:	ff 25 7a bf 02 00    	jmp    *0x2bf7a(%rip)        # 30050 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySwapchainKHR@plt>:
    40e0:	ff 25 72 bf 02 00    	jmp    *0x2bf72(%rip)        # 30058 <vkDestroySwapchainKHR@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <vkDestroySemaphore@plt>:
    40f0:	ff 25 6a bf 02 00    	jmp    *0x2bf6a(%rip)        # 30060 <vkDestroySemaphore@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <glfwDestroyWindow@plt>:
    4100:	ff 25 62 bf 02 00    	jmp    *0x2bf62(%rip)        # 30068 <glfwDestroyWindow@Base>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZSt17__throw_bad_allocv@plt>:
    4110:	ff 25 5a bf 02 00    	jmp    *0x2bf5a(%rip)        # 30070 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4120:	ff 25 52 bf 02 00    	jmp    *0x2bf52(%rip)        # 30078 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <_ZNSt13runtime_errorC1EPKc@plt>:
    4130:	ff 25 4a bf 02 00    	jmp    *0x2bf4a(%rip)        # 30080 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <vkGetPhysicalDeviceProperties@plt>:
    4140:	ff 25 42 bf 02 00    	jmp    *0x2bf42(%rip)        # 30088 <vkGetPhysicalDeviceProperties@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <__cxa_begin_catch@plt>:
    4150:	ff 25 3a bf 02 00    	jmp    *0x2bf3a(%rip)        # 30090 <__cxa_begin_catch@CXXABI_1.3>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkAcquireNextImageKHR@plt>:
    4160:	ff 25 32 bf 02 00    	jmp    *0x2bf32(%rip)        # 30098 <vkAcquireNextImageKHR@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <vkCreateCommandPool@plt>:
    4170:	ff 25 2a bf 02 00    	jmp    *0x2bf2a(%rip)        # 300a0 <vkCreateCommandPool@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <strlen@plt>:
    4180:	ff 25 22 bf 02 00    	jmp    *0x2bf22(%rip)        # 300a8 <strlen@GLIBC_2.2.5>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <memcmp@plt>:
    4190:	ff 25 1a bf 02 00    	jmp    *0x2bf1a(%rip)        # 300b0 <memcmp@GLIBC_2.2.5>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <vkCreateGraphicsPipelines@plt>:
    41a0:	ff 25 12 bf 02 00    	jmp    *0x2bf12(%rip)        # 300b8 <vkCreateGraphicsPipelines@Base>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <__cxa_allocate_exception@plt>:
    41b0:	ff 25 0a bf 02 00    	jmp    *0x2bf0a(%rip)        # 300c0 <__cxa_allocate_exception@CXXABI_1.3>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkDestroyBuffer@plt>:
    41c0:	ff 25 02 bf 02 00    	jmp    *0x2bf02(%rip)        # 300c8 <vkDestroyBuffer@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <glfwSetWindowUserPointer@plt>:
    41d0:	ff 25 fa be 02 00    	jmp    *0x2befa(%rip)        # 300d0 <glfwSetWindowUserPointer@Base>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZSt20__throw_length_errorPKc@plt>:
    41e0:	ff 25 f2 be 02 00    	jmp    *0x2bef2(%rip)        # 300d8 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkEnumeratePhysicalDevices@plt>:
    41f0:	ff 25 ea be 02 00    	jmp    *0x2beea(%rip)        # 300e0 <vkEnumeratePhysicalDevices@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <memset@plt>:
    4200:	ff 25 e2 be 02 00    	jmp    *0x2bee2(%rip)        # 300e8 <memset@GLIBC_2.2.5>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZNSaIcEC1ERKS_@plt>:
    4210:	ff 25 da be 02 00    	jmp    *0x2beda(%rip)        # 300f0 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <vkWaitForFences@plt>:
    4220:	ff 25 d2 be 02 00    	jmp    *0x2bed2(%rip)        # 300f8 <vkWaitForFences@Base>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <glfwWaitEvents@plt>:
    4230:	ff 25 ca be 02 00    	jmp    *0x2beca(%rip)        # 30100 <glfwWaitEvents@Base>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <vkGetSwapchainImagesKHR@plt>:
    4240:	ff 25 c2 be 02 00    	jmp    *0x2bec2(%rip)        # 30108 <vkGetSwapchainImagesKHR@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    4250:	ff 25 ba be 02 00    	jmp    *0x2beba(%rip)        # 30110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4260:	ff 25 b2 be 02 00    	jmp    *0x2beb2(%rip)        # 30118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <vkCreateRenderPass@plt>:
    4270:	ff 25 aa be 02 00    	jmp    *0x2beaa(%rip)        # 30120 <vkCreateRenderPass@Base>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4280:	ff 25 a2 be 02 00    	jmp    *0x2bea2(%rip)        # 30128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4290:	ff 25 9a be 02 00    	jmp    *0x2be9a(%rip)        # 30130 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    42a0:	ff 25 92 be 02 00    	jmp    *0x2be92(%rip)        # 30138 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <_ZSt19__throw_logic_errorPKc@plt>:
    42b0:	ff 25 8a be 02 00    	jmp    *0x2be8a(%rip)        # 30140 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <__cxa_free_exception@plt>:
    42c0:	ff 25 82 be 02 00    	jmp    *0x2be82(%rip)        # 30148 <__cxa_free_exception@CXXABI_1.3>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42d0:	ff 25 7a be 02 00    	jmp    *0x2be7a(%rip)        # 30150 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <glfwGetRequiredInstanceExtensions@plt>:
    42e0:	ff 25 72 be 02 00    	jmp    *0x2be72(%rip)        # 30158 <glfwGetRequiredInstanceExtensions@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    42f0:	ff 25 6a be 02 00    	jmp    *0x2be6a(%rip)        # 30160 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <vkCreateShaderModule@plt>:
    4300:	ff 25 62 be 02 00    	jmp    *0x2be62(%rip)        # 30168 <vkCreateShaderModule@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4310:	ff 25 5a be 02 00    	jmp    *0x2be5a(%rip)        # 30170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkUnmapMemory@plt>:
    4320:	ff 25 52 be 02 00    	jmp    *0x2be52(%rip)        # 30178 <vkUnmapMemory@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <memcpy@plt>:
    4330:	ff 25 4a be 02 00    	jmp    *0x2be4a(%rip)        # 30180 <memcpy@GLIBC_2.14>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkDestroyDevice@plt>:
    4340:	ff 25 42 be 02 00    	jmp    *0x2be42(%rip)        # 30188 <vkDestroyDevice@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <vkCreatePipelineLayout@plt>:
    4350:	ff 25 3a be 02 00    	jmp    *0x2be3a(%rip)        # 30190 <vkCreatePipelineLayout@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkEnumerateInstanceExtensionProperties@plt>:
    4360:	ff 25 32 be 02 00    	jmp    *0x2be32(%rip)        # 30198 <vkEnumerateInstanceExtensionProperties@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4370:	ff 25 2a be 02 00    	jmp    *0x2be2a(%rip)        # 301a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <glfwWindowHint@plt>:
    4380:	ff 25 22 be 02 00    	jmp    *0x2be22(%rip)        # 301a8 <glfwWindowHint@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4390:	ff 25 1a be 02 00    	jmp    *0x2be1a(%rip)        # 301b0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkCmdBindPipeline@plt>:
    43a0:	ff 25 12 be 02 00    	jmp    *0x2be12(%rip)        # 301b8 <vkCmdBindPipeline@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <__cxa_atexit@plt>:
    43b0:	ff 25 0a be 02 00    	jmp    *0x2be0a(%rip)        # 301c0 <__cxa_atexit@GLIBC_2.2.5>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    43c0:	ff 25 02 be 02 00    	jmp    *0x2be02(%rip)        # 301c8 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <vkMapMemory@plt>:
    43d0:	ff 25 fa bd 02 00    	jmp    *0x2bdfa(%rip)        # 301d0 <vkMapMemory@Base>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <vkFreeMemory@plt>:
    43e0:	ff 25 f2 bd 02 00    	jmp    *0x2bdf2(%rip)        # 301d8 <vkFreeMemory@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkAllocateCommandBuffers@plt>:
    43f0:	ff 25 ea bd 02 00    	jmp    *0x2bdea(%rip)        # 301e0 <vkAllocateCommandBuffers@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkGetPhysicalDeviceProperties2@plt>:
    4400:	ff 25 e2 bd 02 00    	jmp    *0x2bde2(%rip)        # 301e8 <vkGetPhysicalDeviceProperties2@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <vkGetInstanceProcAddr@plt>:
    4410:	ff 25 da bd 02 00    	jmp    *0x2bdda(%rip)        # 301f0 <vkGetInstanceProcAddr@Base>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <glfwPollEvents@plt>:
    4420:	ff 25 d2 bd 02 00    	jmp    *0x2bdd2(%rip)        # 301f8 <glfwPollEvents@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkDestroyRenderPass@plt>:
    4430:	ff 25 ca bd 02 00    	jmp    *0x2bdca(%rip)        # 30200 <vkDestroyRenderPass@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <vkCreateBuffer@plt>:
    4440:	ff 25 c2 bd 02 00    	jmp    *0x2bdc2(%rip)        # 30208 <vkCreateBuffer@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4450:	ff 25 ba bd 02 00    	jmp    *0x2bdba(%rip)        # 30210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <_Znwm@plt>:
    4460:	ff 25 b2 bd 02 00    	jmp    *0x2bdb2(%rip)        # 30218 <_Znwm@GLIBCXX_3.4>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <vkBeginCommandBuffer@plt>:
    4470:	ff 25 aa bd 02 00    	jmp    *0x2bdaa(%rip)        # 30220 <vkBeginCommandBuffer@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZdlPvm@plt>:
    4480:	ff 25 a2 bd 02 00    	jmp    *0x2bda2(%rip)        # 30228 <_ZdlPvm@CXXABI_1.3.9>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkDestroyInstance@plt>:
    4490:	ff 25 9a bd 02 00    	jmp    *0x2bd9a(%rip)        # 30230 <vkDestroyInstance@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <glfwTerminate@plt>:
    44a0:	ff 25 92 bd 02 00    	jmp    *0x2bd92(%rip)        # 30238 <glfwTerminate@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkCreateImageView@plt>:
    44b0:	ff 25 8a bd 02 00    	jmp    *0x2bd8a(%rip)        # 30240 <vkCreateImageView@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    44c0:	ff 25 82 bd 02 00    	jmp    *0x2bd82(%rip)        # 30248 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNSolsEPFRSoS_E@plt>:
    44d0:	ff 25 7a bd 02 00    	jmp    *0x2bd7a(%rip)        # 30250 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    44e0:	ff 25 72 bd 02 00    	jmp    *0x2bd72(%rip)        # 30258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    44f0:	ff 25 6a bd 02 00    	jmp    *0x2bd6a(%rip)        # 30260 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4500:	ff 25 62 bd 02 00    	jmp    *0x2bd62(%rip)        # 30268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <_ZNSaIcED1Ev@plt>:
    4510:	ff 25 5a bd 02 00    	jmp    *0x2bd5a(%rip)        # 30270 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkDestroyFence@plt>:
    4520:	ff 25 52 bd 02 00    	jmp    *0x2bd52(%rip)        # 30278 <vkDestroyFence@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <vkDestroyPipeline@plt>:
    4530:	ff 25 4a bd 02 00    	jmp    *0x2bd4a(%rip)        # 30280 <vkDestroyPipeline@Base>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4540:	ff 25 42 bd 02 00    	jmp    *0x2bd42(%rip)        # 30288 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4550:	ff 25 3a bd 02 00    	jmp    *0x2bd3a(%rip)        # 30290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkEnumerateInstanceLayerProperties@plt>:
    4560:	ff 25 32 bd 02 00    	jmp    *0x2bd32(%rip)        # 30298 <vkEnumerateInstanceLayerProperties@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <glfwInit@plt>:
    4570:	ff 25 2a bd 02 00    	jmp    *0x2bd2a(%rip)        # 302a0 <glfwInit@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4580:	ff 25 22 bd 02 00    	jmp    *0x2bd22(%rip)        # 302a8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkBindBufferMemory@plt>:
    4590:	ff 25 1a bd 02 00    	jmp    *0x2bd1a(%rip)        # 302b0 <vkBindBufferMemory@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <vkCreateSwapchainKHR@plt>:
    45a0:	ff 25 12 bd 02 00    	jmp    *0x2bd12(%rip)        # 302b8 <vkCreateSwapchainKHR@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    45b0:	ff 25 0a bd 02 00    	jmp    *0x2bd0a(%rip)        # 302c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkDestroyShaderModule@plt>:
    45c0:	ff 25 02 bd 02 00    	jmp    *0x2bd02(%rip)        # 302c8 <vkDestroyShaderModule@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <vkCreateInstance@plt>:
    45d0:	ff 25 fa bc 02 00    	jmp    *0x2bcfa(%rip)        # 302d0 <vkCreateInstance@Base>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    45e0:	ff 25 f2 bc 02 00    	jmp    *0x2bcf2(%rip)        # 302d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkCreateFence@plt>:
    45f0:	ff 25 ea bc 02 00    	jmp    *0x2bcea(%rip)        # 302e0 <vkCreateFence@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <vkResetCommandBuffer@plt>:
    4600:	ff 25 e2 bc 02 00    	jmp    *0x2bce2(%rip)        # 302e8 <vkResetCommandBuffer@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkDestroyPipelineLayout@plt>:
    4610:	ff 25 da bc 02 00    	jmp    *0x2bcda(%rip)        # 302f0 <vkDestroyPipelineLayout@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSi4readEPcl@plt>:
    4620:	ff 25 d2 bc 02 00    	jmp    *0x2bcd2(%rip)        # 302f8 <_ZNSi4readEPcl@GLIBCXX_3.4>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4630:	ff 25 ca bc 02 00    	jmp    *0x2bcca(%rip)        # 30300 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4640:	ff 25 c2 bc 02 00    	jmp    *0x2bcc2(%rip)        # 30308 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4650:	ff 25 ba bc 02 00    	jmp    *0x2bcba(%rip)        # 30310 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <vkQueueSubmit@plt>:
    4660:	ff 25 b2 bc 02 00    	jmp    *0x2bcb2(%rip)        # 30318 <vkQueueSubmit@Base>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <vkGetDeviceQueue@plt>:
    4670:	ff 25 aa bc 02 00    	jmp    *0x2bcaa(%rip)        # 30320 <vkGetDeviceQueue@Base>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <_ZNSolsEj@plt>:
    4680:	ff 25 a2 bc 02 00    	jmp    *0x2bca2(%rip)        # 30328 <_ZNSolsEj@GLIBCXX_3.4>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <vkCreateFramebuffer@plt>:
    4690:	ff 25 9a bc 02 00    	jmp    *0x2bc9a(%rip)        # 30330 <vkCreateFramebuffer@Base>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <glfwGetWindowUserPointer@plt>:
    46a0:	ff 25 92 bc 02 00    	jmp    *0x2bc92(%rip)        # 30338 <glfwGetWindowUserPointer@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    46b0:	ff 25 8a bc 02 00    	jmp    *0x2bc8a(%rip)        # 30340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    46c0:	ff 25 82 bc 02 00    	jmp    *0x2bc82(%rip)        # 30348 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <vkEnumerateDeviceExtensionProperties@plt>:
    46d0:	ff 25 7a bc 02 00    	jmp    *0x2bc7a(%rip)        # 30350 <vkEnumerateDeviceExtensionProperties@Base>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkCreateSemaphore@plt>:
    46e0:	ff 25 72 bc 02 00    	jmp    *0x2bc72(%rip)        # 30358 <vkCreateSemaphore@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <vkCmdBeginRenderPass@plt>:
    46f0:	ff 25 6a bc 02 00    	jmp    *0x2bc6a(%rip)        # 30360 <vkCmdBeginRenderPass@Base>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <vkDestroyCommandPool@plt>:
    4700:	ff 25 62 bc 02 00    	jmp    *0x2bc62(%rip)        # 30368 <vkDestroyCommandPool@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkCmdBindVertexBuffers@plt>:
    4710:	ff 25 5a bc 02 00    	jmp    *0x2bc5a(%rip)        # 30370 <vkCmdBindVertexBuffers@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <_ZNSaIcEC2ERKS_@plt>:
    4720:	ff 25 52 bc 02 00    	jmp    *0x2bc52(%rip)        # 30378 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <__cxa_rethrow@plt>:
    4730:	ff 25 4a bc 02 00    	jmp    *0x2bc4a(%rip)        # 30380 <__cxa_rethrow@CXXABI_1.3>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <vkCreateDevice@plt>:
    4740:	ff 25 42 bc 02 00    	jmp    *0x2bc42(%rip)        # 30388 <vkCreateDevice@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <glfwSetFramebufferSizeCallback@plt>:
    4750:	ff 25 3a bc 02 00    	jmp    *0x2bc3a(%rip)        # 30390 <glfwSetFramebufferSizeCallback@Base>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt8ios_base4InitC1Ev@plt>:
    4760:	ff 25 32 bc 02 00    	jmp    *0x2bc32(%rip)        # 30398 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <glfwCreateWindowSurface@plt>:
    4770:	ff 25 2a bc 02 00    	jmp    *0x2bc2a(%rip)        # 303a0 <glfwCreateWindowSurface@Base>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <vkResetFences@plt>:
    4780:	ff 25 22 bc 02 00    	jmp    *0x2bc22(%rip)        # 303a8 <vkResetFences@Base>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <glfwCreateWindow@plt>:
    4790:	ff 25 1a bc 02 00    	jmp    *0x2bc1a(%rip)        # 303b0 <glfwCreateWindow@Base>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    47a0:	ff 25 12 bc 02 00    	jmp    *0x2bc12(%rip)        # 303b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <vkQueuePresentKHR@plt>:
    47b0:	ff 25 0a bc 02 00    	jmp    *0x2bc0a(%rip)        # 303c0 <vkQueuePresentKHR@Base>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <vkGetPhysicalDeviceMemoryProperties@plt>:
    47c0:	ff 25 02 bc 02 00    	jmp    *0x2bc02(%rip)        # 303c8 <vkGetPhysicalDeviceMemoryProperties@Base>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <glfwGetFramebufferSize@plt>:
    47d0:	ff 25 fa bb 02 00    	jmp    *0x2bbfa(%rip)        # 303d0 <glfwGetFramebufferSize@Base>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    47e0:	ff 25 f2 bb 02 00    	jmp    *0x2bbf2(%rip)        # 303d8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    47f0:	ff 25 ea bb 02 00    	jmp    *0x2bbea(%rip)        # 303e0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4800:	ff 25 e2 bb 02 00    	jmp    *0x2bbe2(%rip)        # 303e8 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <memmove@plt>:
    4810:	ff 25 da bb 02 00    	jmp    *0x2bbda(%rip)        # 303f0 <memmove@GLIBC_2.2.5>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <__cxa_end_catch@plt>:
    4820:	ff 25 d2 bb 02 00    	jmp    *0x2bbd2(%rip)        # 303f8 <__cxa_end_catch@CXXABI_1.3>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <vkAllocateMemory@plt>:
    4830:	ff 25 ca bb 02 00    	jmp    *0x2bbca(%rip)        # 30400 <vkAllocateMemory@Base>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <vkDestroyFramebuffer@plt>:
    4840:	ff 25 c2 bb 02 00    	jmp    *0x2bbc2(%rip)        # 30408 <vkDestroyFramebuffer@Base>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <__cxa_throw@plt>:
    4850:	ff 25 ba bb 02 00    	jmp    *0x2bbba(%rip)        # 30410 <__cxa_throw@CXXABI_1.3>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    4860:	ff 25 b2 bb 02 00    	jmp    *0x2bbb2(%rip)        # 30418 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4870:	ff 25 aa bb 02 00    	jmp    *0x2bbaa(%rip)        # 30420 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <_ZNSolsEi@plt>:
    4880:	ff 25 a2 bb 02 00    	jmp    *0x2bba2(%rip)        # 30428 <_ZNSolsEi@GLIBCXX_3.4>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <_ZNSi5tellgEv@plt>:
    4890:	ff 25 9a bb 02 00    	jmp    *0x2bb9a(%rip)        # 30430 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048a0 <vkDestroySurfaceKHR@plt>:
    48a0:	ff 25 92 bb 02 00    	jmp    *0x2bb92(%rip)        # 30438 <vkDestroySurfaceKHR@Base>
    48a6:	68 87 00 00 00       	push   $0x87
    48ab:	e9 70 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048b0 <_Unwind_Resume@plt>:
    48b0:	ff 25 8a bb 02 00    	jmp    *0x2bb8a(%rip)        # 30440 <_Unwind_Resume@GCC_3.0>
    48b6:	68 88 00 00 00       	push   $0x88
    48bb:	e9 60 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048c0 <_ZNSaIcEC1Ev@plt>:
    48c0:	ff 25 82 bb 02 00    	jmp    *0x2bb82(%rip)        # 30448 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    48c6:	68 89 00 00 00       	push   $0x89
    48cb:	e9 50 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048d0 <vkDestroyImageView@plt>:
    48d0:	ff 25 7a bb 02 00    	jmp    *0x2bb7a(%rip)        # 30450 <vkDestroyImageView@Base>
    48d6:	68 8a 00 00 00       	push   $0x8a
    48db:	e9 40 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    48e0:	ff 25 72 bb 02 00    	jmp    *0x2bb72(%rip)        # 30458 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    48e6:	68 8b 00 00 00       	push   $0x8b
    48eb:	e9 30 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048f0 <_ZNSt9exceptionD2Ev@plt>:
    48f0:	ff 25 6a bb 02 00    	jmp    *0x2bb6a(%rip)        # 30460 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    48f6:	68 8c 00 00 00       	push   $0x8c
    48fb:	e9 20 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004900 <glfwWindowShouldClose@plt>:
    4900:	ff 25 62 bb 02 00    	jmp    *0x2bb62(%rip)        # 30468 <glfwWindowShouldClose@Base>
    4906:	68 8d 00 00 00       	push   $0x8d
    490b:	e9 10 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004910 <vkEndCommandBuffer@plt>:
    4910:	ff 25 5a bb 02 00    	jmp    *0x2bb5a(%rip)        # 30470 <vkEndCommandBuffer@Base>
    4916:	68 8e 00 00 00       	push   $0x8e
    491b:	e9 00 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004920 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4920:	ff 25 52 bb 02 00    	jmp    *0x2bb52(%rip)        # 30478 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4926:	68 8f 00 00 00       	push   $0x8f
    492b:	e9 f0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004930 <vkCmdDraw@plt>:
    4930:	ff 25 4a bb 02 00    	jmp    *0x2bb4a(%rip)        # 30480 <vkCmdDraw@Base>
    4936:	68 90 00 00 00       	push   $0x90
    493b:	e9 e0 f6 ff ff       	jmp    4020 <_init+0x20>

0000000000004940 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4940:	ff 25 42 bb 02 00    	jmp    *0x2bb42(%rip)        # 30488 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4946:	68 91 00 00 00       	push   $0x91
    494b:	e9 d0 f6 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004950 <__cxa_finalize@plt>:
    4950:	ff 25 3a b6 02 00    	jmp    *0x2b63a(%rip)        # 2ff90 <__cxa_finalize@GLIBC_2.2.5>
    4956:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004960 <_start>:
    4960:	31 ed                	xor    %ebp,%ebp
    4962:	49 89 d1             	mov    %rdx,%r9
    4965:	5e                   	pop    %rsi
    4966:	48 89 e2             	mov    %rsp,%rdx
    4969:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    496d:	50                   	push   %rax
    496e:	54                   	push   %rsp
    496f:	45 31 c0             	xor    %r8d,%r8d
    4972:	31 c9                	xor    %ecx,%ecx
    4974:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4b24 <main>
    497b:	ff 15 1f b6 02 00    	call   *0x2b61f(%rip)        # 2ffa0 <__libc_start_main@GLIBC_2.34>
    4981:	f4                   	hlt
    4982:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4989:	00 00 00 
    498c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004990 <deregister_tm_clones>:
    4990:	48 8d 3d 19 bb 02 00 	lea    0x2bb19(%rip),%rdi        # 304b0 <__TMC_END__>
    4997:	48 8d 05 12 bb 02 00 	lea    0x2bb12(%rip),%rax        # 304b0 <__TMC_END__>
    499e:	48 39 f8             	cmp    %rdi,%rax
    49a1:	74 15                	je     49b8 <deregister_tm_clones+0x28>
    49a3:	48 8b 05 06 b6 02 00 	mov    0x2b606(%rip),%rax        # 2ffb0 <_ITM_deregisterTMCloneTable@Base>
    49aa:	48 85 c0             	test   %rax,%rax
    49ad:	74 09                	je     49b8 <deregister_tm_clones+0x28>
    49af:	ff e0                	jmp    *%rax
    49b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    49b8:	c3                   	ret
    49b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000049c0 <register_tm_clones>:
    49c0:	48 8d 3d e9 ba 02 00 	lea    0x2bae9(%rip),%rdi        # 304b0 <__TMC_END__>
    49c7:	48 8d 35 e2 ba 02 00 	lea    0x2bae2(%rip),%rsi        # 304b0 <__TMC_END__>
    49ce:	48 29 fe             	sub    %rdi,%rsi
    49d1:	48 89 f0             	mov    %rsi,%rax
    49d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    49d8:	48 c1 f8 03          	sar    $0x3,%rax
    49dc:	48 01 c6             	add    %rax,%rsi
    49df:	48 d1 fe             	sar    %rsi
    49e2:	74 14                	je     49f8 <register_tm_clones+0x38>
    49e4:	48 8b 05 d5 b5 02 00 	mov    0x2b5d5(%rip),%rax        # 2ffc0 <_ITM_registerTMCloneTable@Base>
    49eb:	48 85 c0             	test   %rax,%rax
    49ee:	74 08                	je     49f8 <register_tm_clones+0x38>
    49f0:	ff e0                	jmp    *%rax
    49f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    49f8:	c3                   	ret
    49f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a00 <__do_global_dtors_aux>:
    4a00:	f3 0f 1e fa          	endbr64
    4a04:	80 3d c5 bb 02 00 00 	cmpb   $0x0,0x2bbc5(%rip)        # 305d0 <completed.0>
    4a0b:	75 2b                	jne    4a38 <__do_global_dtors_aux+0x38>
    4a0d:	55                   	push   %rbp
    4a0e:	48 83 3d 7a b5 02 00 	cmpq   $0x0,0x2b57a(%rip)        # 2ff90 <__cxa_finalize@GLIBC_2.2.5>
    4a15:	00 
    4a16:	48 89 e5             	mov    %rsp,%rbp
    4a19:	74 0c                	je     4a27 <__do_global_dtors_aux+0x27>
    4a1b:	48 8b 3d 76 ba 02 00 	mov    0x2ba76(%rip),%rdi        # 30498 <__dso_handle>
    4a22:	e8 29 ff ff ff       	call   4950 <__cxa_finalize@plt>
    4a27:	e8 64 ff ff ff       	call   4990 <deregister_tm_clones>
    4a2c:	c6 05 9d bb 02 00 01 	movb   $0x1,0x2bb9d(%rip)        # 305d0 <completed.0>
    4a33:	5d                   	pop    %rbp
    4a34:	c3                   	ret
    4a35:	0f 1f 00             	nopl   (%rax)
    4a38:	c3                   	ret
    4a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a40 <frame_dummy>:
    4a40:	f3 0f 1e fa          	endbr64
    4a44:	e9 77 ff ff ff       	jmp    49c0 <register_tm_clones>

0000000000004a49 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

// #include <typeinfo>

int protected_main() {
    4a49:	55                   	push   %rbp
    4a4a:	48 89 e5             	mov    %rsp,%rbp
    4a4d:	53                   	push   %rbx
    4a4e:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
  VulkanApp app;
    4a55:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    4a5c:	48 89 c7             	mov    %rax,%rdi
    4a5f:	e8 c2 c4 00 00       	call   10f26 <_ZN9VulkanAppC1Ev>
  app.run();
    4a64:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    4a6b:	48 89 c7             	mov    %rax,%rdi
    4a6e:	e8 53 ca 00 00       	call   114c6 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4a73:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4a77:	48 89 c7             	mov    %rax,%rdi
    4a7a:	e8 41 fe ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    4a7f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4a83:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a87:	48 8d 0d aa 7b 01 00 	lea    0x17baa(%rip),%rcx        # 1c638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    4a8e:	48 89 ce             	mov    %rcx,%rsi
    4a91:	48 89 c7             	mov    %rax,%rdi
    4a94:	e8 7b 04 00 00       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4a99:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4a9d:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    4aa4:	48 89 d6             	mov    %rdx,%rsi
    4aa7:	48 89 c7             	mov    %rax,%rdi
    4aaa:	e8 61 ca 00 00       	call   11510 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    4aaf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ab3:	48 89 c7             	mov    %rax,%rdi
    4ab6:	e8 a5 f7 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4abb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4abf:	48 89 c7             	mov    %rax,%rdi
    4ac2:	e8 49 fa ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4ac7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4acc:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    4ad3:	48 89 c7             	mov    %rax,%rdi
    4ad6:	e8 97 c7 00 00       	call   11272 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    4adb:	89 d8                	mov    %ebx,%eax
    4add:	eb 3f                	jmp    4b1e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    4adf:	48 89 c3             	mov    %rax,%rbx
    4ae2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ae6:	48 89 c7             	mov    %rax,%rdi
    4ae9:	e8 72 f7 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4aee:	eb 03                	jmp    4af3 <_Z14protected_mainv+0xaa>
    4af0:	48 89 c3             	mov    %rax,%rbx
    4af3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4af7:	48 89 c7             	mov    %rax,%rdi
    4afa:	e8 11 fa ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    4aff:	eb 03                	jmp    4b04 <_Z14protected_mainv+0xbb>
}
    4b01:	48 89 c3             	mov    %rax,%rbx
    4b04:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    4b0b:	48 89 c7             	mov    %rax,%rdi
    4b0e:	e8 5f c7 00 00       	call   11272 <_ZN9VulkanAppD1Ev>
    4b13:	48 89 d8             	mov    %rbx,%rax
    4b16:	48 89 c7             	mov    %rax,%rdi
    4b19:	e8 92 fd ff ff       	call   48b0 <_Unwind_Resume@plt>
    4b1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b22:	c9                   	leave
    4b23:	c3                   	ret

0000000000004b24 <main>:

int main() {
    4b24:	55                   	push   %rbp
    4b25:	48 89 e5             	mov    %rsp,%rbp
    4b28:	53                   	push   %rbx
    4b29:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    4b2d:	e8 17 ff ff ff       	call   4a49 <_Z14protected_mainv>
    4b32:	e9 aa 00 00 00       	jmp    4be1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4b37:	b8 01 00 00 00       	mov    $0x1,%eax
    4b3c:	e9 a0 00 00 00       	jmp    4be1 <main+0xbd>
  } catch (const std::exception &e) {
    4b41:	48 83 fa 01          	cmp    $0x1,%rdx
    4b45:	75 49                	jne    4b90 <main+0x6c>
    4b47:	48 89 c7             	mov    %rax,%rdi
    4b4a:	e8 01 f6 ff ff       	call   4150 <__cxa_begin_catch@plt>
    4b4f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4b53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b57:	48 8b 00             	mov    (%rax),%rax
    4b5a:	48 83 c0 10          	add    $0x10,%rax
    4b5e:	48 8b 10             	mov    (%rax),%rdx
    4b61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b65:	48 89 c7             	mov    %rax,%rdi
    4b68:	ff d2                	call   *%rdx
    4b6a:	48 89 c6             	mov    %rax,%rsi
    4b6d:	48 8d 05 4c b9 02 00 	lea    0x2b94c(%rip),%rax        # 304c0 <_ZSt4cerr@GLIBCXX_3.4>
    4b74:	48 89 c7             	mov    %rax,%rdi
    4b77:	e8 d4 f8 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4b7c:	be 0a 00 00 00       	mov    $0xa,%esi
    4b81:	48 89 c7             	mov    %rax,%rdi
    4b84:	e8 f7 f9 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4b89:	e8 92 fc ff ff       	call   4820 <__cxa_end_catch@plt>
    4b8e:	eb a7                	jmp    4b37 <main+0x13>
    4b90:	48 89 c7             	mov    %rax,%rdi
    4b93:	e8 b8 f5 ff ff       	call   4150 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4b98:	48 8d 05 a2 7a 01 00 	lea    0x17aa2(%rip),%rax        # 1c641 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x11>
    4b9f:	48 89 c6             	mov    %rax,%rsi
    4ba2:	48 8d 05 17 b9 02 00 	lea    0x2b917(%rip),%rax        # 304c0 <_ZSt4cerr@GLIBCXX_3.4>
    4ba9:	48 89 c7             	mov    %rax,%rdi
    4bac:	e8 9f f8 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4bb1:	e8 6a fc ff ff       	call   4820 <__cxa_end_catch@plt>
    4bb6:	e9 7c ff ff ff       	jmp    4b37 <main+0x13>
  } catch (...) {
    4bbb:	48 89 c3             	mov    %rax,%rbx
    4bbe:	e8 5d fc ff ff       	call   4820 <__cxa_end_catch@plt>
    4bc3:	48 89 d8             	mov    %rbx,%rax
    4bc6:	48 89 c7             	mov    %rax,%rdi
    4bc9:	e8 e2 fc ff ff       	call   48b0 <_Unwind_Resume@plt>
  }
    4bce:	48 89 c3             	mov    %rax,%rbx
    4bd1:	e8 4a fc ff ff       	call   4820 <__cxa_end_catch@plt>
    4bd6:	48 89 d8             	mov    %rbx,%rax
    4bd9:	48 89 c7             	mov    %rax,%rdi
    4bdc:	e8 cf fc ff ff       	call   48b0 <_Unwind_Resume@plt>
    4be1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4be5:	c9                   	leave
    4be6:	c3                   	ret

0000000000004be7 <_Z41__static_initialization_and_destruction_0ii>:
    4be7:	55                   	push   %rbp
    4be8:	48 89 e5             	mov    %rsp,%rbp
    4beb:	41 55                	push   %r13
    4bed:	41 54                	push   %r12
    4bef:	53                   	push   %rbx
    4bf0:	48 83 ec 58          	sub    $0x58,%rsp
    4bf4:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    4bf7:	89 75 98             	mov    %esi,-0x68(%rbp)
    4bfa:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
    4bfe:	0f 85 6f 01 00 00    	jne    4d73 <_Z41__static_initialization_and_destruction_0ii+0x18c>
    4c04:	81 7d 98 ff ff 00 00 	cmpl   $0xffff,-0x68(%rbp)
    4c0b:	0f 85 62 01 00 00    	jne    4d73 <_Z41__static_initialization_and_destruction_0ii+0x18c>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4c11:	48 8d 05 c8 b9 02 00 	lea    0x2b9c8(%rip),%rax        # 305e0 <_ZStL8__ioinit>
    4c18:	48 89 c7             	mov    %rax,%rdi
    4c1b:	e8 40 fb ff ff       	call   4760 <_ZNSt8ios_base4InitC1Ev@plt>
    4c20:	48 8d 05 71 b8 02 00 	lea    0x2b871(%rip),%rax        # 30498 <__dso_handle>
    4c27:	48 89 c2             	mov    %rax,%rdx
    4c2a:	48 8d 05 af b9 02 00 	lea    0x2b9af(%rip),%rax        # 305e0 <_ZStL8__ioinit>
    4c31:	48 89 c6             	mov    %rax,%rsi
    4c34:	48 8b 05 8d b3 02 00 	mov    0x2b38d(%rip),%rax        # 2ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4c3b:	48 89 c7             	mov    %rax,%rdi
    4c3e:	e8 6d f7 ff ff       	call   43b0 <__cxa_atexit@plt>
namespace shader {

const std::vector<vkh::Vertex2D_RGB> triangle{
    {{0.0f, -0.5f}, {1.0f, 0.0f, 0.0f}},
    {{0.5f, 0.5f}, {0.0f, 1.0f, 0.0f}},
    {{-0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}}};
    4c43:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c47:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    4c4c:	f3 0f 10 05 70 7a 01 	movss  0x17a70(%rip),%xmm0        # 1c6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4c53:	00 
    4c54:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    4c59:	f3 0f 10 05 67 7a 01 	movss  0x17a67(%rip),%xmm0        # 1c6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4c60:	00 
    4c61:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    4c66:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c6a:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    4c6f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c73:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    4c78:	f3 0f 10 05 4c 7a 01 	movss  0x17a4c(%rip),%xmm0        # 1c6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4c7f:	00 
    4c80:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    4c85:	f3 0f 10 05 3f 7a 01 	movss  0x17a3f(%rip),%xmm0        # 1c6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4c8c:	00 
    4c8d:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    4c92:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c96:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    4c9b:	f3 0f 10 05 25 7a 01 	movss  0x17a25(%rip),%xmm0        # 1c6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4ca2:	00 
    4ca3:	f3 0f 11 45 c0       	movss  %xmm0,-0x40(%rbp)
    4ca8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4cac:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
    4cb1:	f3 0f 10 05 0b 7a 01 	movss  0x17a0b(%rip),%xmm0        # 1c6c4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    4cb8:	00 
    4cb9:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
    4cbe:	f3 0f 10 05 06 7a 01 	movss  0x17a06(%rip),%xmm0        # 1c6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9c>
    4cc5:	00 
    4cc6:	f3 0f 11 45 cc       	movss  %xmm0,-0x34(%rbp)
    4ccb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4ccf:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    4cd4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4cd8:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    4cdd:	f3 0f 10 05 e3 79 01 	movss  0x179e3(%rip),%xmm0        # 1c6c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x98>
    4ce4:	00 
    4ce5:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    4cea:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4cee:	49 89 c4             	mov    %rax,%r12
    4cf1:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    4cf7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4cfb:	48 89 c7             	mov    %rax,%rdi
    4cfe:	e8 51 01 00 00       	call   4e54 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
    4d03:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4d07:	4c 89 e6             	mov    %r12,%rsi
    4d0a:	4c 89 ef             	mov    %r13,%rdi
    4d0d:	4c 89 e1             	mov    %r12,%rcx
    4d10:	4c 89 eb             	mov    %r13,%rbx
    4d13:	48 89 da             	mov    %rbx,%rdx
    4d16:	48 89 c1             	mov    %rax,%rcx
    4d19:	48 8d 05 d0 b8 02 00 	lea    0x2b8d0(%rip),%rax        # 305f0 <_ZN6shaderL8triangleE>
    4d20:	48 89 c7             	mov    %rax,%rdi
    4d23:	e8 64 01 00 00       	call   4e8c <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
    4d28:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4d2c:	48 89 c7             	mov    %rax,%rdi
    4d2f:	e8 3c 01 00 00       	call   4e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle{
    4d34:	48 8d 05 5d b7 02 00 	lea    0x2b75d(%rip),%rax        # 30498 <__dso_handle>
    4d3b:	48 89 c2             	mov    %rax,%rdx
    4d3e:	48 8d 05 ab b8 02 00 	lea    0x2b8ab(%rip),%rax        # 305f0 <_ZN6shaderL8triangleE>
    4d45:	48 89 c6             	mov    %rax,%rsi
    4d48:	48 8d 05 a1 0b 00 00 	lea    0xba1(%rip),%rax        # 58f0 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    4d4f:	48 89 c7             	mov    %rax,%rdi
    4d52:	e8 59 f6 ff ff       	call   43b0 <__cxa_atexit@plt>
    4d57:	eb 1a                	jmp    4d73 <_Z41__static_initialization_and_destruction_0ii+0x18c>
    {{-0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}}};
    4d59:	48 89 c3             	mov    %rax,%rbx
    4d5c:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4d60:	48 89 c7             	mov    %rax,%rdi
    4d63:	e8 08 01 00 00       	call   4e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    4d68:	48 89 d8             	mov    %rbx,%rax
    4d6b:	48 89 c7             	mov    %rax,%rdi
    4d6e:	e8 3d fb ff ff       	call   48b0 <_Unwind_Resume@plt>
    4d73:	48 83 c4 58          	add    $0x58,%rsp
    4d77:	5b                   	pop    %rbx
    4d78:	41 5c                	pop    %r12
    4d7a:	41 5d                	pop    %r13
    4d7c:	5d                   	pop    %rbp
    4d7d:	c3                   	ret

0000000000004d7e <_GLOBAL__sub_I__Z14protected_mainv>:
    4d7e:	55                   	push   %rbp
    4d7f:	48 89 e5             	mov    %rsp,%rbp
    4d82:	be ff ff 00 00       	mov    $0xffff,%esi
    4d87:	bf 01 00 00 00       	mov    $0x1,%edi
    4d8c:	e8 56 fe ff ff       	call   4be7 <_Z41__static_initialization_and_destruction_0ii>
    4d91:	5d                   	pop    %rbp
    4d92:	c3                   	ret

0000000000004d93 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4d93:	55                   	push   %rbp
    4d94:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4d97:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4d9c:	5d                   	pop    %rbp
    4d9d:	c3                   	ret

0000000000004d9e <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4d9e:	55                   	push   %rbp
    4d9f:	48 89 e5             	mov    %rsp,%rbp
    4da2:	48 83 ec 10          	sub    $0x10,%rsp
    4da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4daa:	e8 e4 ff ff ff       	call   4d93 <_ZSt23__is_constant_evaluatedv>
    4daf:	84 c0                	test   %al,%al
    4db1:	74 0e                	je     4dc1 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db7:	48 89 c7             	mov    %rax,%rdi
    4dba:	e8 11 00 00 00       	call   4dd0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4dbf:	eb 0d                	jmp    4dce <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dc5:	48 89 c7             	mov    %rax,%rdi
    4dc8:	e8 b3 f3 ff ff       	call   4180 <strlen@plt>
    4dcd:	90                   	nop
      }
    4dce:	c9                   	leave
    4dcf:	c3                   	ret

0000000000004dd0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4dd0:	55                   	push   %rbp
    4dd1:	48 89 e5             	mov    %rsp,%rbp
    4dd4:	48 83 ec 20          	sub    $0x20,%rsp
    4dd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4ddc:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4de3:	00 
      while (!eq(__p[__i], char_type()))
    4de4:	eb 05                	jmp    4deb <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4de6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4deb:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4def:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df7:	48 01 c2             	add    %rax,%rdx
    4dfa:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4dfe:	48 89 c6             	mov    %rax,%rsi
    4e01:	48 89 d7             	mov    %rdx,%rdi
    4e04:	e8 0d 00 00 00       	call   4e16 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4e09:	83 f0 01             	xor    $0x1,%eax
    4e0c:	84 c0                	test   %al,%al
    4e0e:	75 d6                	jne    4de6 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4e14:	c9                   	leave
    4e15:	c3                   	ret

0000000000004e16 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4e16:	55                   	push   %rbp
    4e17:	48 89 e5             	mov    %rsp,%rbp
    4e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e26:	0f b6 10             	movzbl (%rax),%edx
    4e29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e2d:	0f b6 00             	movzbl (%rax),%eax
    4e30:	38 c2                	cmp    %al,%dl
    4e32:	0f 94 c0             	sete   %al
    4e35:	5d                   	pop    %rbp
    4e36:	c3                   	ret
    4e37:	90                   	nop

0000000000004e38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4e38:	55                   	push   %rbp
    4e39:	48 89 e5             	mov    %rsp,%rbp
    4e3c:	48 83 ec 10          	sub    $0x10,%rsp
    4e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e48:	48 89 c7             	mov    %rax,%rdi
    4e4b:	e8 20 f2 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4e50:	90                   	nop
    4e51:	c9                   	leave
    4e52:	c3                   	ret
    4e53:	90                   	nop

0000000000004e54 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e54:	55                   	push   %rbp
    4e55:	48 89 e5             	mov    %rsp,%rbp
    4e58:	48 83 ec 10          	sub    $0x10,%rsp
    4e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e64:	48 89 c7             	mov    %rax,%rdi
    4e67:	e8 74 02 00 00       	call   50e0 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>
    4e6c:	90                   	nop
    4e6d:	c9                   	leave
    4e6e:	c3                   	ret
    4e6f:	90                   	nop

0000000000004e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4e70:	55                   	push   %rbp
    4e71:	48 89 e5             	mov    %rsp,%rbp
    4e74:	48 83 ec 10          	sub    $0x10,%rsp
    4e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e80:	48 89 c7             	mov    %rax,%rdi
    4e83:	e8 64 02 00 00       	call   50ec <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>
    4e88:	90                   	nop
    4e89:	c9                   	leave
    4e8a:	c3                   	ret
    4e8b:	90                   	nop

0000000000004e8c <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    4e8c:	55                   	push   %rbp
    4e8d:	48 89 e5             	mov    %rsp,%rbp
    4e90:	53                   	push   %rbx
    4e91:	48 83 ec 38          	sub    $0x38,%rsp
    4e95:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e99:	48 89 f0             	mov    %rsi,%rax
    4e9c:	48 89 d6             	mov    %rdx,%rsi
    4e9f:	48 89 f2             	mov    %rsi,%rdx
    4ea2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4ea6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    4eaa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    4eae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4eb2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4eb6:	48 89 d6             	mov    %rdx,%rsi
    4eb9:	48 89 c7             	mov    %rax,%rdi
    4ebc:	e8 53 02 00 00       	call   5114 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    4ec1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ec5:	48 89 c7             	mov    %rax,%rdi
    4ec8:	e8 d7 02 00 00       	call   51a4 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>
    4ecd:	48 89 c3             	mov    %rax,%rbx
    4ed0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ed4:	48 89 c7             	mov    %rax,%rdi
    4ed7:	e8 b6 02 00 00       	call   5192 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    4edc:	48 89 c1             	mov    %rax,%rcx
    4edf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ee3:	48 89 da             	mov    %rbx,%rdx
    4ee6:	48 89 ce             	mov    %rcx,%rsi
    4ee9:	48 89 c7             	mov    %rax,%rdi
    4eec:	e8 27 03 00 00       	call   5218 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    4ef1:	eb 1a                	jmp    4f0d <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_+0x81>
    4ef3:	48 89 c3             	mov    %rax,%rbx
    4ef6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4efa:	48 89 c7             	mov    %rax,%rdi
    4efd:	e8 38 02 00 00       	call   513a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    4f02:	48 89 d8             	mov    %rbx,%rax
    4f05:	48 89 c7             	mov    %rax,%rdi
    4f08:	e8 a3 f9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    4f0d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f11:	c9                   	leave
    4f12:	c3                   	ret
    4f13:	90                   	nop

0000000000004f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4f14:	55                   	push   %rbp
    4f15:	48 89 e5             	mov    %rsp,%rbp
    4f18:	53                   	push   %rbx
    4f19:	48 83 ec 38          	sub    $0x38,%rsp
    4f1d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4f21:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4f25:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4f29:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4f2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f31:	48 89 c7             	mov    %rax,%rdi
    4f34:	e8 d7 f3 ff ff       	call   4310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4f39:	48 89 c1             	mov    %rax,%rcx
    4f3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4f40:	48 89 c2             	mov    %rax,%rdx
    4f43:	48 89 ce             	mov    %rcx,%rsi
    4f46:	48 89 df             	mov    %rbx,%rdi
    4f49:	e8 92 f5 ff ff       	call   44e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4f4e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4f53:	75 0f                	jne    4f64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4f55:	48 8d 05 fc 76 01 00 	lea    0x176fc(%rip),%rax        # 1c658 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    4f5c:	48 89 c7             	mov    %rax,%rdi
    4f5f:	e8 4c f3 ff ff       	call   42b0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4f64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4f68:	48 89 c7             	mov    %rax,%rdi
    4f6b:	e8 2e fe ff ff       	call   4d9e <_ZNSt11char_traitsIcE6lengthEPKc>
    4f70:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4f74:	48 01 d0             	add    %rdx,%rax
    4f77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4f7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f7f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4f83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f87:	48 89 ce             	mov    %rcx,%rsi
    4f8a:	48 89 c7             	mov    %rax,%rdi
    4f8d:	e8 66 00 00 00       	call   4ff8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4f92:	eb 1a                	jmp    4fae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4f94:	48 89 c3             	mov    %rax,%rbx
    4f97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f9b:	48 89 c7             	mov    %rax,%rdi
    4f9e:	e8 95 fe ff ff       	call   4e38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4fa3:	48 89 d8             	mov    %rbx,%rax
    4fa6:	48 89 c7             	mov    %rax,%rdi
    4fa9:	e8 02 f9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    4fae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4fb2:	c9                   	leave
    4fb3:	c3                   	ret

0000000000004fb4 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4fb4:	55                   	push   %rbp
    4fb5:	48 89 e5             	mov    %rsp,%rbp
    4fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fc8:	48 89 10             	mov    %rdx,(%rax)
    4fcb:	90                   	nop
    4fcc:	5d                   	pop    %rbp
    4fcd:	c3                   	ret

0000000000004fce <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4fce:	55                   	push   %rbp
    4fcf:	48 89 e5             	mov    %rsp,%rbp
    4fd2:	48 83 ec 10          	sub    $0x10,%rsp
    4fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fde:	48 8b 00             	mov    (%rax),%rax
    4fe1:	48 85 c0             	test   %rax,%rax
    4fe4:	74 0f                	je     4ff5 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fea:	48 8b 00             	mov    (%rax),%rax
    4fed:	48 89 c7             	mov    %rax,%rdi
    4ff0:	e8 eb f5 ff ff       	call   45e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4ff5:	90                   	nop
    4ff6:	c9                   	leave
    4ff7:	c3                   	ret

0000000000004ff8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4ff8:	55                   	push   %rbp
    4ff9:	48 89 e5             	mov    %rsp,%rbp
    4ffc:	48 83 ec 40          	sub    $0x40,%rsp
    5000:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5004:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5008:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    500c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5010:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5014:	48 89 d6             	mov    %rdx,%rsi
    5017:	48 89 c7             	mov    %rax,%rdi
    501a:	e8 b3 02 00 00       	call   52d2 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    501f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    5023:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5027:	48 83 f8 0f          	cmp    $0xf,%rax
    502b:	76 3f                	jbe    506c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    502d:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    5031:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5035:	ba 00 00 00 00       	mov    $0x0,%edx
    503a:	48 89 ce             	mov    %rcx,%rsi
    503d:	48 89 c7             	mov    %rax,%rdi
    5040:	e8 9b f8 ff ff       	call   48e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5045:	48 89 c2             	mov    %rax,%rdx
    5048:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    504c:	48 89 d6             	mov    %rdx,%rsi
    504f:	48 89 c7             	mov    %rax,%rdi
    5052:	e8 19 f3 ff ff       	call   4370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    5057:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    505b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    505f:	48 89 d6             	mov    %rdx,%rsi
    5062:	48 89 c7             	mov    %rax,%rdi
    5065:	e8 d6 f8 ff ff       	call   4940 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    506a:	eb 15                	jmp    5081 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    506c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5070:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    5074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5078:	48 89 c7             	mov    %rax,%rdi
    507b:	e8 90 f2 ff ff       	call   4310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    5080:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    5081:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5085:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5089:	48 89 d6             	mov    %rdx,%rsi
    508c:	48 89 c7             	mov    %rax,%rdi
    508f:	e8 20 ff ff ff       	call   4fb4 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    5094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5098:	48 89 c7             	mov    %rax,%rdi
    509b:	e8 a0 f4 ff ff       	call   4540 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    50a0:	48 89 c1             	mov    %rax,%rcx
    50a3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    50a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    50ab:	48 89 c6             	mov    %rax,%rsi
    50ae:	48 89 cf             	mov    %rcx,%rdi
    50b1:	e8 9a f4 ff ff       	call   4550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    50b6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    50bd:	00 

	_M_set_length(__dnew);
    50be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    50c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50c6:	48 89 d6             	mov    %rdx,%rsi
    50c9:	48 89 c7             	mov    %rax,%rdi
    50cc:	e8 af f1 ff ff       	call   4280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    50d1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    50d5:	48 89 c7             	mov    %rax,%rdi
    50d8:	e8 f1 fe ff ff       	call   4fce <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    50dd:	c9                   	leave
    50de:	c3                   	ret
    50df:	90                   	nop

00000000000050e0 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    50e0:	55                   	push   %rbp
    50e1:	48 89 e5             	mov    %rsp,%rbp
    50e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e8:	90                   	nop
    50e9:	5d                   	pop    %rbp
    50ea:	c3                   	ret
    50eb:	90                   	nop

00000000000050ec <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    50ec:	55                   	push   %rbp
    50ed:	48 89 e5             	mov    %rsp,%rbp
    50f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50f4:	90                   	nop
    50f5:	5d                   	pop    %rbp
    50f6:	c3                   	ret
    50f7:	90                   	nop

00000000000050f8 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    50f8:	55                   	push   %rbp
    50f9:	48 89 e5             	mov    %rsp,%rbp
    50fc:	48 83 ec 10          	sub    $0x10,%rsp
    5100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5108:	48 89 c7             	mov    %rax,%rdi
    510b:	e8 60 fd ff ff       	call   4e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    5110:	90                   	nop
    5111:	c9                   	leave
    5112:	c3                   	ret
    5113:	90                   	nop

0000000000005114 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    5114:	55                   	push   %rbp
    5115:	48 89 e5             	mov    %rsp,%rbp
    5118:	48 83 ec 10          	sub    $0x10,%rsp
    511c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5120:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    5124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5128:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    512c:	48 89 d6             	mov    %rdx,%rsi
    512f:	48 89 c7             	mov    %rax,%rdi
    5132:	e8 cd 01 00 00       	call   5304 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>
    5137:	90                   	nop
    5138:	c9                   	leave
    5139:	c3                   	ret

000000000000513a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    513a:	55                   	push   %rbp
    513b:	48 89 e5             	mov    %rsp,%rbp
    513e:	48 83 ec 10          	sub    $0x10,%rsp
    5142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    514a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    514e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5152:	48 8b 00             	mov    (%rax),%rax
    5155:	48 29 c2             	sub    %rax,%rdx
    5158:	48 c1 fa 02          	sar    $0x2,%rdx
    515c:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5163:	cc cc cc 
    5166:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    516a:	48 89 c2             	mov    %rax,%rdx
    516d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5171:	48 8b 08             	mov    (%rax),%rcx
    5174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5178:	48 89 ce             	mov    %rcx,%rsi
    517b:	48 89 c7             	mov    %rax,%rdi
    517e:	e8 b3 01 00 00       	call   5336 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>
      }
    5183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5187:	48 89 c7             	mov    %rax,%rdi
    518a:	e8 69 ff ff ff       	call   50f8 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>
    518f:	90                   	nop
    5190:	c9                   	leave
    5191:	c3                   	ret

0000000000005192 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    5192:	55                   	push   %rbp
    5193:	48 89 e5             	mov    %rsp,%rbp
    5196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    519a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    519e:	48 8b 00             	mov    (%rax),%rax
    51a1:	5d                   	pop    %rbp
    51a2:	c3                   	ret
    51a3:	90                   	nop

00000000000051a4 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    51a4:	55                   	push   %rbp
    51a5:	48 89 e5             	mov    %rsp,%rbp
    51a8:	53                   	push   %rbx
    51a9:	48 83 ec 18          	sub    $0x18,%rsp
    51ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51b5:	48 89 c7             	mov    %rax,%rdi
    51b8:	e8 d5 ff ff ff       	call   5192 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    51bd:	48 89 c3             	mov    %rax,%rbx
    51c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51c4:	48 89 c7             	mov    %rax,%rdi
    51c7:	e8 a0 01 00 00       	call   536c <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>
    51cc:	48 89 c2             	mov    %rax,%rdx
    51cf:	48 89 d0             	mov    %rdx,%rax
    51d2:	48 c1 e0 02          	shl    $0x2,%rax
    51d6:	48 01 d0             	add    %rdx,%rax
    51d9:	48 c1 e0 02          	shl    $0x2,%rax
    51dd:	48 01 d8             	add    %rbx,%rax
    51e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51e4:	c9                   	leave
    51e5:	c3                   	ret

00000000000051e6 <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    51e6:	55                   	push   %rbp
    51e7:	48 89 e5             	mov    %rsp,%rbp
    51ea:	48 83 ec 10          	sub    $0x10,%rsp
    51ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    51f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    51fa:	48 89 c7             	mov    %rax,%rdi
    51fd:	e8 7c 01 00 00       	call   537e <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>
      return std::__distance(__first, __last,
    5202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5206:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    520a:	48 89 d6             	mov    %rdx,%rsi
    520d:	48 89 c7             	mov    %rax,%rdi
    5210:	e8 74 01 00 00       	call   5389 <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>
    }
    5215:	c9                   	leave
    5216:	c3                   	ret
    5217:	90                   	nop

0000000000005218 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5218:	55                   	push   %rbp
    5219:	48 89 e5             	mov    %rsp,%rbp
    521c:	53                   	push   %rbx
    521d:	48 83 ec 38          	sub    $0x38,%rsp
    5221:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5225:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5229:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    522d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5231:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5235:	48 89 d6             	mov    %rdx,%rsi
    5238:	48 89 c7             	mov    %rax,%rdi
    523b:	e8 a6 ff ff ff       	call   51e6 <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>
    5240:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5244:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5248:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    524c:	48 89 c7             	mov    %rax,%rdi
    524f:	e8 c0 01 00 00       	call   5414 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    5254:	48 89 c2             	mov    %rax,%rdx
    5257:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    525b:	48 89 d6             	mov    %rdx,%rsi
    525e:	48 89 c7             	mov    %rax,%rdi
    5261:	e8 4e 01 00 00       	call   53b4 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>
    5266:	48 89 c6             	mov    %rax,%rsi
    5269:	48 89 df             	mov    %rbx,%rdi
    526c:	e8 b1 01 00 00       	call   5422 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>
    5271:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5275:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5278:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    527c:	48 8b 08             	mov    (%rax),%rcx
    527f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5283:	48 89 d0             	mov    %rdx,%rax
    5286:	48 c1 e0 02          	shl    $0x2,%rax
    528a:	48 01 d0             	add    %rdx,%rax
    528d:	48 c1 e0 02          	shl    $0x2,%rax
    5291:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    5295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5299:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    529d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52a1:	48 89 c7             	mov    %rax,%rdi
    52a4:	e8 6b 01 00 00       	call   5414 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    52a9:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    52ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52b0:	48 8b 10             	mov    (%rax),%rdx
    52b3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    52b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    52bb:	48 89 c7             	mov    %rax,%rdi
    52be:	e8 92 01 00 00       	call   5455 <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>
	  this->_M_impl._M_finish =
    52c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    52c7:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    52cb:	90                   	nop
    52cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52d0:	c9                   	leave
    52d1:	c3                   	ret

00000000000052d2 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    52d2:	55                   	push   %rbp
    52d3:	48 89 e5             	mov    %rsp,%rbp
    52d6:	48 83 ec 10          	sub    $0x10,%rsp
    52da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    52e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    52e6:	48 89 c7             	mov    %rax,%rdi
    52e9:	e8 98 01 00 00       	call   5486 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    52ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52f6:	48 89 d6             	mov    %rdx,%rsi
    52f9:	48 89 c7             	mov    %rax,%rdi
    52fc:	e8 90 01 00 00       	call   5491 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5301:	c9                   	leave
    5302:	c3                   	ret
    5303:	90                   	nop

0000000000005304 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5304:	55                   	push   %rbp
    5305:	48 89 e5             	mov    %rsp,%rbp
    5308:	48 83 ec 10          	sub    $0x10,%rsp
    530c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5314:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531c:	48 89 d6             	mov    %rdx,%rsi
    531f:	48 89 c7             	mov    %rax,%rdi
    5322:	e8 81 01 00 00       	call   54a8 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    5327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532b:	48 89 c7             	mov    %rax,%rdi
    532e:	e8 9b 01 00 00       	call   54ce <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>
	{ }
    5333:	90                   	nop
    5334:	c9                   	leave
    5335:	c3                   	ret

0000000000005336 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>:
      _M_deallocate(pointer __p, size_t __n)
    5336:	55                   	push   %rbp
    5337:	48 89 e5             	mov    %rsp,%rbp
    533a:	48 83 ec 20          	sub    $0x20,%rsp
    533e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5342:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5346:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    534a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    534f:	74 17                	je     5368 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5355:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5359:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    535d:	48 89 ce             	mov    %rcx,%rsi
    5360:	48 89 c7             	mov    %rax,%rdi
    5363:	e8 94 01 00 00       	call   54fc <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>
      }
    5368:	90                   	nop
    5369:	c9                   	leave
    536a:	c3                   	ret
    536b:	90                   	nop

000000000000536c <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>:
      size() const noexcept { return _M_len; }
    536c:	55                   	push   %rbp
    536d:	48 89 e5             	mov    %rsp,%rbp
    5370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5378:	48 8b 40 08          	mov    0x8(%rax),%rax
    537c:	5d                   	pop    %rbp
    537d:	c3                   	ret

000000000000537e <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    537e:	55                   	push   %rbp
    537f:	48 89 e5             	mov    %rsp,%rbp
    5382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5386:	90                   	nop
    5387:	5d                   	pop    %rbp
    5388:	c3                   	ret

0000000000005389 <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    5389:	55                   	push   %rbp
    538a:	48 89 e5             	mov    %rsp,%rbp
    538d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5391:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    5395:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5399:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    539d:	48 c1 f8 02          	sar    $0x2,%rax
    53a1:	48 89 c2             	mov    %rax,%rdx
    53a4:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    53ab:	cc cc cc 
    53ae:	48 0f af c2          	imul   %rdx,%rax
    }
    53b2:	5d                   	pop    %rbp
    53b3:	c3                   	ret

00000000000053b4 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    53b4:	55                   	push   %rbp
    53b5:	48 89 e5             	mov    %rsp,%rbp
    53b8:	53                   	push   %rbx
    53b9:	48 83 ec 28          	sub    $0x28,%rsp
    53bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    53c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    53c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    53c9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    53cd:	48 89 d6             	mov    %rdx,%rsi
    53d0:	48 89 c7             	mov    %rax,%rdi
    53d3:	e8 d0 00 00 00       	call   54a8 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    53d8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    53dc:	48 89 c7             	mov    %rax,%rdi
    53df:	e8 46 01 00 00       	call   552a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>
    53e4:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    53e8:	0f 92 c3             	setb   %bl
    53eb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    53ef:	48 89 c7             	mov    %rax,%rdi
    53f2:	e8 79 fa ff ff       	call   4e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    53f7:	84 db                	test   %bl,%bl
    53f9:	74 0f                	je     540a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_+0x56>
	  __throw_length_error(
    53fb:	48 8d 05 8e 72 01 00 	lea    0x1728e(%rip),%rax        # 1c690 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x60>
    5402:	48 89 c7             	mov    %rax,%rdi
    5405:	e8 d6 ed ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    540a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    540e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5412:	c9                   	leave
    5413:	c3                   	ret

0000000000005414 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5414:	55                   	push   %rbp
    5415:	48 89 e5             	mov    %rsp,%rbp
    5418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    541c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5420:	5d                   	pop    %rbp
    5421:	c3                   	ret

0000000000005422 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5422:	55                   	push   %rbp
    5423:	48 89 e5             	mov    %rsp,%rbp
    5426:	48 83 ec 10          	sub    $0x10,%rsp
    542a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    542e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5432:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5437:	74 15                	je     544e <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x2c>
    5439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    543d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5441:	48 89 d6             	mov    %rdx,%rsi
    5444:	48 89 c7             	mov    %rax,%rdi
    5447:	e8 20 01 00 00       	call   556c <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>
    544c:	eb 05                	jmp    5453 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x31>
    544e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5453:	c9                   	leave
    5454:	c3                   	ret

0000000000005455 <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    5455:	55                   	push   %rbp
    5456:	48 89 e5             	mov    %rsp,%rbp
    5459:	48 83 ec 20          	sub    $0x20,%rsp
    545d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5461:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5465:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5469:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    546d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5471:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5479:	48 89 ce             	mov    %rcx,%rsi
    547c:	48 89 c7             	mov    %rax,%rdi
    547f:	e8 12 01 00 00       	call   5596 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    }
    5484:	c9                   	leave
    5485:	c3                   	ret

0000000000005486 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    5486:	55                   	push   %rbp
    5487:	48 89 e5             	mov    %rsp,%rbp
    548a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    548e:	90                   	nop
    548f:	5d                   	pop    %rbp
    5490:	c3                   	ret

0000000000005491 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    5491:	55                   	push   %rbp
    5492:	48 89 e5             	mov    %rsp,%rbp
    5495:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5499:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    549d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54a1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    54a5:	5d                   	pop    %rbp
    54a6:	c3                   	ret
    54a7:	90                   	nop

00000000000054a8 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    54a8:	55                   	push   %rbp
    54a9:	48 89 e5             	mov    %rsp,%rbp
    54ac:	48 83 ec 10          	sub    $0x10,%rsp
    54b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    54b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    54bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54c0:	48 89 d6             	mov    %rdx,%rsi
    54c3:	48 89 c7             	mov    %rax,%rdi
    54c6:	e8 01 01 00 00       	call   55cc <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>
    54cb:	90                   	nop
    54cc:	c9                   	leave
    54cd:	c3                   	ret

00000000000054ce <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    54ce:	55                   	push   %rbp
    54cf:	48 89 e5             	mov    %rsp,%rbp
    54d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    54d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54da:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    54e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54e5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    54ec:	00 
    54ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    54f8:	00 
	{ }
    54f9:	90                   	nop
    54fa:	5d                   	pop    %rbp
    54fb:	c3                   	ret

00000000000054fc <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    54fc:	55                   	push   %rbp
    54fd:	48 89 e5             	mov    %rsp,%rbp
    5500:	48 83 ec 20          	sub    $0x20,%rsp
    5504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    550c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5510:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5514:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    551c:	48 89 ce             	mov    %rcx,%rsi
    551f:	48 89 c7             	mov    %rax,%rdi
    5522:	e8 b5 00 00 00       	call   55dc <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>
    5527:	90                   	nop
    5528:	c9                   	leave
    5529:	c3                   	ret

000000000000552a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    552a:	55                   	push   %rbp
    552b:	48 89 e5             	mov    %rsp,%rbp
    552e:	48 83 ec 20          	sub    $0x20,%rsp
    5532:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    5536:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    553d:	66 66 06 
    5540:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5548:	48 89 c7             	mov    %rax,%rdi
    554b:	e8 c6 00 00 00       	call   5616 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>
    5550:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5554:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5558:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    555c:	48 89 d6             	mov    %rdx,%rsi
    555f:	48 89 c7             	mov    %rax,%rdi
    5562:	e8 c9 00 00 00       	call   5630 <_ZSt3minImERKT_S2_S2_>
    5567:	48 8b 00             	mov    (%rax),%rax
      }
    556a:	c9                   	leave
    556b:	c3                   	ret

000000000000556c <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>:
      allocate(allocator_type& __a, size_type __n)
    556c:	55                   	push   %rbp
    556d:	48 89 e5             	mov    %rsp,%rbp
    5570:	48 83 ec 10          	sub    $0x10,%rsp
    5574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5578:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    557c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5580:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5584:	ba 00 00 00 00       	mov    $0x0,%edx
    5589:	48 89 ce             	mov    %rcx,%rsi
    558c:	48 89 c7             	mov    %rax,%rdi
    558f:	e8 c8 00 00 00       	call   565c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>
    5594:	c9                   	leave
    5595:	c3                   	ret

0000000000005596 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    5596:	55                   	push   %rbp
    5597:	48 89 e5             	mov    %rsp,%rbp
    559a:	48 83 ec 30          	sub    $0x30,%rsp
    559e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    55a6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    55aa:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    55ae:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    55b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    55b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    55ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55be:	48 89 ce             	mov    %rcx,%rsi
    55c1:	48 89 c7             	mov    %rax,%rdi
    55c4:	e8 fe 00 00 00       	call   56c7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>
    }
    55c9:	c9                   	leave
    55ca:	c3                   	ret
    55cb:	90                   	nop

00000000000055cc <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    55cc:	55                   	push   %rbp
    55cd:	48 89 e5             	mov    %rsp,%rbp
    55d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55d8:	90                   	nop
    55d9:	5d                   	pop    %rbp
    55da:	c3                   	ret
    55db:	90                   	nop

00000000000055dc <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    55dc:	55                   	push   %rbp
    55dd:	48 89 e5             	mov    %rsp,%rbp
    55e0:	48 83 ec 20          	sub    $0x20,%rsp
    55e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    55f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55f4:	48 89 d0             	mov    %rdx,%rax
    55f7:	48 c1 e0 02          	shl    $0x2,%rax
    55fb:	48 01 d0             	add    %rdx,%rax
    55fe:	48 c1 e0 02          	shl    $0x2,%rax
    5602:	48 89 c2             	mov    %rax,%rdx
    5605:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5609:	48 89 d6             	mov    %rdx,%rsi
    560c:	48 89 c7             	mov    %rax,%rdi
    560f:	e8 6c ee ff ff       	call   4480 <_ZdlPvm@plt>
      }
    5614:	c9                   	leave
    5615:	c3                   	ret

0000000000005616 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5616:	55                   	push   %rbp
    5617:	48 89 e5             	mov    %rsp,%rbp
    561a:	48 83 ec 10          	sub    $0x10,%rsp
    561e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
    5622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5626:	48 89 c7             	mov    %rax,%rdi
    5629:	e8 c6 00 00 00       	call   56f4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>
#else
	return size_t(-1) / sizeof(value_type);
#endif
      }
    562e:	c9                   	leave
    562f:	c3                   	ret

0000000000005630 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    5630:	55                   	push   %rbp
    5631:	48 89 e5             	mov    %rsp,%rbp
    5634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5638:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    563c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5640:	48 8b 10             	mov    (%rax),%rdx
    5643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5647:	48 8b 00             	mov    (%rax),%rax
    564a:	48 39 c2             	cmp    %rax,%rdx
    564d:	73 06                	jae    5655 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    564f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5653:	eb 04                	jmp    5659 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5659:	5d                   	pop    %rbp
    565a:	c3                   	ret
    565b:	90                   	nop

000000000000565c <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    565c:	55                   	push   %rbp
    565d:	48 89 e5             	mov    %rsp,%rbp
    5660:	48 83 ec 20          	sub    $0x20,%rsp
    5664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    566c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5674:	48 89 c7             	mov    %rax,%rdi
    5677:	e8 92 00 00 00       	call   570e <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    567c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5680:	0f 92 c0             	setb   %al
    5683:	0f b6 c0             	movzbl %al,%eax
    5686:	48 85 c0             	test   %rax,%rax
    5689:	0f 95 c0             	setne  %al
    568c:	84 c0                	test   %al,%al
    568e:	74 1a                	je     56aa <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5690:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    5697:	cc cc 0c 
    569a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    569e:	73 05                	jae    56a5 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    56a0:	e8 4b ec ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    56a5:	e8 66 ea ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    56aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56ae:	48 89 d0             	mov    %rdx,%rax
    56b1:	48 c1 e0 02          	shl    $0x2,%rax
    56b5:	48 01 d0             	add    %rdx,%rax
    56b8:	48 c1 e0 02          	shl    $0x2,%rax
    56bc:	48 89 c7             	mov    %rax,%rdi
    56bf:	e8 9c ed ff ff       	call   4460 <_Znwm@plt>
    56c4:	90                   	nop
      }
    56c5:	c9                   	leave
    56c6:	c3                   	ret

00000000000056c7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    56c7:	55                   	push   %rbp
    56c8:	48 89 e5             	mov    %rsp,%rbp
    56cb:	48 83 ec 20          	sub    $0x20,%rsp
    56cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    56d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    56db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    56df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    56e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56e7:	48 89 ce             	mov    %rcx,%rsi
    56ea:	48 89 c7             	mov    %rax,%rdi
    56ed:	e8 30 00 00 00       	call   5722 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    56f2:	c9                   	leave
    56f3:	c3                   	ret

00000000000056f4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    56f4:	55                   	push   %rbp
    56f5:	48 89 e5             	mov    %rsp,%rbp
    56f8:	48 83 ec 10          	sub    $0x10,%rsp
    56fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5704:	48 89 c7             	mov    %rax,%rdi
    5707:	e8 02 00 00 00       	call   570e <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    570c:	c9                   	leave
    570d:	c3                   	ret

000000000000570e <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    570e:	55                   	push   %rbp
    570f:	48 89 e5             	mov    %rsp,%rbp
    5712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5716:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    571d:	66 66 06 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5720:	5d                   	pop    %rbp
    5721:	c3                   	ret

0000000000005722 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    5722:	55                   	push   %rbp
    5723:	48 89 e5             	mov    %rsp,%rbp
    5726:	53                   	push   %rbx
    5727:	48 83 ec 28          	sub    $0x28,%rsp
    572b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    572f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5733:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    5737:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    573b:	48 89 c7             	mov    %rax,%rdi
    573e:	e8 2a 00 00 00       	call   576d <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    5743:	48 89 c3             	mov    %rax,%rbx
    5746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    574a:	48 89 c7             	mov    %rax,%rdi
    574d:	e8 1b 00 00 00       	call   576d <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    5752:	48 89 c1             	mov    %rax,%rcx
    5755:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5759:	48 89 c2             	mov    %rax,%rdx
    575c:	48 89 de             	mov    %rbx,%rsi
    575f:	48 89 cf             	mov    %rcx,%rdi
    5762:	e8 14 00 00 00       	call   577b <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    }
    5767:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    576b:	c9                   	leave
    576c:	c3                   	ret

000000000000576d <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    576d:	55                   	push   %rbp
    576e:	48 89 e5             	mov    %rsp,%rbp
    5771:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    5775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5779:	5d                   	pop    %rbp
    577a:	c3                   	ret

000000000000577b <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    577b:	55                   	push   %rbp
    577c:	48 89 e5             	mov    %rsp,%rbp
    577f:	41 54                	push   %r12
    5781:	53                   	push   %rbx
    5782:	48 83 ec 20          	sub    $0x20,%rsp
    5786:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    578a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    578e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    5792:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5796:	48 89 c7             	mov    %rax,%rdi
    5799:	e8 55 00 00 00       	call   57f3 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>
    579e:	49 89 c4             	mov    %rax,%r12
    57a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57a5:	48 89 c7             	mov    %rax,%rdi
    57a8:	e8 38 00 00 00       	call   57e5 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    57ad:	48 89 c3             	mov    %rax,%rbx
    57b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57b4:	48 89 c7             	mov    %rax,%rdi
    57b7:	e8 29 00 00 00       	call   57e5 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    57bc:	4c 89 e2             	mov    %r12,%rdx
    57bf:	48 89 de             	mov    %rbx,%rsi
    57c2:	48 89 c7             	mov    %rax,%rdi
    57c5:	e8 37 00 00 00       	call   5801 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    57ca:	48 89 c2             	mov    %rax,%rdx
    57cd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    57d1:	48 89 d6             	mov    %rdx,%rsi
    57d4:	48 89 c7             	mov    %rax,%rdi
    57d7:	e8 52 00 00 00       	call   582e <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>
    }
    57dc:	48 83 c4 20          	add    $0x20,%rsp
    57e0:	5b                   	pop    %rbx
    57e1:	41 5c                	pop    %r12
    57e3:	5d                   	pop    %rbp
    57e4:	c3                   	ret

00000000000057e5 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __niter_base(_Iterator __it)
    57e5:	55                   	push   %rbp
    57e6:	48 89 e5             	mov    %rsp,%rbp
    57e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    57ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57f1:	5d                   	pop    %rbp
    57f2:	c3                   	ret

00000000000057f3 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>:
    __niter_base(_Iterator __it)
    57f3:	55                   	push   %rbp
    57f4:	48 89 e5             	mov    %rsp,%rbp
    57f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    57fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ff:	5d                   	pop    %rbp
    5800:	c3                   	ret

0000000000005801 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    5801:	55                   	push   %rbp
    5802:	48 89 e5             	mov    %rsp,%rbp
    5805:	48 83 ec 20          	sub    $0x20,%rsp
    5809:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    580d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5811:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    5815:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5819:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    581d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5821:	48 89 ce             	mov    %rcx,%rsi
    5824:	48 89 c7             	mov    %rax,%rdi
    5827:	e8 14 00 00 00       	call   5840 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    582c:	c9                   	leave
    582d:	c3                   	ret

000000000000582e <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    582e:	55                   	push   %rbp
    582f:	48 89 e5             	mov    %rsp,%rbp
    5832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    583a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    583e:	5d                   	pop    %rbp
    583f:	c3                   	ret

0000000000005840 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    5840:	55                   	push   %rbp
    5841:	48 89 e5             	mov    %rsp,%rbp
    5844:	48 83 ec 20          	sub    $0x20,%rsp
    5848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    584c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5850:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    5854:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5858:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    585c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5860:	48 89 ce             	mov    %rcx,%rsi
    5863:	48 89 c7             	mov    %rax,%rdi
    5866:	e8 02 00 00 00       	call   586d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>
    }
    586b:	c9                   	leave
    586c:	c3                   	ret

000000000000586d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    586d:	55                   	push   %rbp
    586e:	48 89 e5             	mov    %rsp,%rbp
    5871:	48 83 ec 30          	sub    $0x30,%rsp
    5875:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5879:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    587d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    5881:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5885:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    5889:	48 c1 f8 02          	sar    $0x2,%rax
    588d:	48 89 c2             	mov    %rax,%rdx
    5890:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5897:	cc cc cc 
    589a:	48 0f af c2          	imul   %rdx,%rax
    589e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    58a2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    58a7:	74 28                	je     58d1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    58a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    58ad:	48 89 d0             	mov    %rdx,%rax
    58b0:	48 c1 e0 02          	shl    $0x2,%rax
    58b4:	48 01 d0             	add    %rdx,%rax
    58b7:	48 c1 e0 02          	shl    $0x2,%rax
    58bb:	48 89 c2             	mov    %rax,%rdx
    58be:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    58c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58c6:	48 89 ce             	mov    %rcx,%rsi
    58c9:	48 89 c7             	mov    %rax,%rdi
    58cc:	e8 3f ef ff ff       	call   4810 <memmove@plt>
	  return __result + _Num;
    58d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    58d5:	48 89 d0             	mov    %rdx,%rax
    58d8:	48 c1 e0 02          	shl    $0x2,%rax
    58dc:	48 01 d0             	add    %rdx,%rax
    58df:	48 c1 e0 02          	shl    $0x2,%rax
    58e3:	48 89 c2             	mov    %rax,%rdx
    58e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58ea:	48 01 d0             	add    %rdx,%rax
	}
    58ed:	c9                   	leave
    58ee:	c3                   	ret
    58ef:	90                   	nop

00000000000058f0 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    58f0:	55                   	push   %rbp
    58f1:	48 89 e5             	mov    %rsp,%rbp
    58f4:	48 83 ec 10          	sub    $0x10,%rsp
    58f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    58fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5900:	48 89 c7             	mov    %rax,%rdi
    5903:	e8 0c fb ff ff       	call   5414 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    5908:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    590b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    590f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5917:	48 8b 00             	mov    (%rax),%rax
    591a:	48 89 ce             	mov    %rcx,%rsi
    591d:	48 89 c7             	mov    %rax,%rdi
    5920:	e8 0f 00 00 00       	call   5934 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>
      }
    5925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5929:	48 89 c7             	mov    %rax,%rdi
    592c:	e8 09 f8 ff ff       	call   513a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    5931:	90                   	nop
    5932:	c9                   	leave
    5933:	c3                   	ret

0000000000005934 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5934:	55                   	push   %rbp
    5935:	48 89 e5             	mov    %rsp,%rbp
    5938:	48 83 ec 20          	sub    $0x20,%rsp
    593c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5940:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5944:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5948:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    594c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5950:	48 89 d6             	mov    %rdx,%rsi
    5953:	48 89 c7             	mov    %rax,%rdi
    5956:	e8 03 00 00 00       	call   595e <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>
    }
    595b:	90                   	nop
    595c:	c9                   	leave
    595d:	c3                   	ret

000000000000595e <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    595e:	55                   	push   %rbp
    595f:	48 89 e5             	mov    %rsp,%rbp
    5962:	48 83 ec 10          	sub    $0x10,%rsp
    5966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    596a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    596e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5976:	48 89 d6             	mov    %rdx,%rsi
    5979:	48 89 c7             	mov    %rax,%rdi
    597c:	e8 03 00 00 00       	call   5984 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>
    }
    5981:	90                   	nop
    5982:	c9                   	leave
    5983:	c3                   	ret

0000000000005984 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    5984:	55                   	push   %rbp
    5985:	48 89 e5             	mov    %rsp,%rbp
    5988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    598c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5990:	90                   	nop
    5991:	5d                   	pop    %rbp
    5992:	c3                   	ret

0000000000005993 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    5993:	55                   	push   %rbp
    5994:	48 89 e5             	mov    %rsp,%rbp
    5997:	41 54                	push   %r12
    5999:	53                   	push   %rbx
    599a:	48 83 ec 30          	sub    $0x30,%rsp
    599e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    59a2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    59a6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    59aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    59ae:	8b 40 1c             	mov    0x1c(%rax),%eax
    59b1:	89 c3                	mov    %eax,%ebx
    59b3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    59b7:	48 89 c7             	mov    %rax,%rdi
    59ba:	e8 1d 02 00 00       	call   5bdc <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    59bf:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    59c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59c7:	48 89 de             	mov    %rbx,%rsi
    59ca:	48 89 c7             	mov    %rax,%rdi
    59cd:	e8 42 02 00 00       	call   5c14 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    59d2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    59d6:	48 89 c7             	mov    %rax,%rdi
    59d9:	e8 1a 02 00 00       	call   5bf8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    59de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59e2:	48 89 c7             	mov    %rax,%rdi
    59e5:	e8 e4 02 00 00       	call   5cce <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    59ea:	48 89 c2             	mov    %rax,%rdx
    59ed:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    59f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59f5:	48 89 ce             	mov    %rcx,%rsi
    59f8:	48 89 c7             	mov    %rax,%rdi
    59fb:	e8 f0 e9 ff ff       	call   43f0 <vkAllocateCommandBuffers@plt>
    5a00:	85 c0                	test   %eax,%eax
    5a02:	0f 95 c0             	setne  %al
    5a05:	84 c0                	test   %al,%al
    5a07:	74 7f                	je     5a88 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    5a09:	bf 10 00 00 00       	mov    $0x10,%edi
    5a0e:	e8 9d e7 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    5a13:	48 89 c3             	mov    %rax,%rbx
    5a16:	48 8d 05 e3 72 01 00 	lea    0x172e3(%rip),%rax        # 1cd00 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    5a1d:	48 89 c6             	mov    %rax,%rsi
    5a20:	48 89 df             	mov    %rbx,%rdi
    5a23:	e8 08 e7 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    5a28:	48 8b 05 79 a5 02 00 	mov    0x2a579(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a2f:	48 89 c2             	mov    %rax,%rdx
    5a32:	48 8d 05 07 a3 02 00 	lea    0x2a307(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a39:	48 89 c6             	mov    %rax,%rsi
    5a3c:	48 89 df             	mov    %rbx,%rdi
    5a3f:	e8 0c ee ff ff       	call   4850 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    5a44:	48 89 c3             	mov    %rax,%rbx
    5a47:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5a4b:	48 89 c7             	mov    %rax,%rdi
    5a4e:	e8 a5 01 00 00       	call   5bf8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5a53:	48 89 d8             	mov    %rbx,%rax
    5a56:	48 89 c7             	mov    %rax,%rdi
    5a59:	e8 52 ee ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    5a5e:	49 89 c4             	mov    %rax,%r12
    5a61:	48 89 df             	mov    %rbx,%rdi
    5a64:	e8 57 e8 ff ff       	call   42c0 <__cxa_free_exception@plt>
    5a69:	4c 89 e3             	mov    %r12,%rbx
    5a6c:	eb 03                	jmp    5a71 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    5a6e:	48 89 c3             	mov    %rax,%rbx
    5a71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a75:	48 89 c7             	mov    %rax,%rdi
    5a78:	e8 0d 02 00 00       	call   5c8a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5a7d:	48 89 d8             	mov    %rbx,%rax
    5a80:	48 89 c7             	mov    %rax,%rdi
    5a83:	e8 28 ee ff ff       	call   48b0 <_Unwind_Resume@plt>
  return commandBuffers;
    5a88:	90                   	nop
}
    5a89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a8d:	48 83 c4 30          	add    $0x30,%rsp
    5a91:	5b                   	pop    %rbx
    5a92:	41 5c                	pop    %r12
    5a94:	5d                   	pop    %rbp
    5a95:	c3                   	ret

0000000000005a96 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    5a96:	55                   	push   %rbp
    5a97:	48 89 e5             	mov    %rsp,%rbp
    5a9a:	41 54                	push   %r12
    5a9c:	53                   	push   %rbx
    5a9d:	48 83 ec 10          	sub    $0x10,%rsp
    5aa1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5aa5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    5aa9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5aad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ab1:	48 89 d6             	mov    %rdx,%rsi
    5ab4:	48 89 c7             	mov    %rax,%rdi
    5ab7:	e8 b4 e9 ff ff       	call   4470 <vkBeginCommandBuffer@plt>
    5abc:	85 c0                	test   %eax,%eax
    5abe:	0f 95 c0             	setne  %al
    5ac1:	84 c0                	test   %al,%al
    5ac3:	74 51                	je     5b16 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    5ac5:	bf 10 00 00 00       	mov    $0x10,%edi
    5aca:	e8 e1 e6 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    5acf:	48 89 c3             	mov    %rax,%rbx
    5ad2:	48 8d 05 4f 72 01 00 	lea    0x1724f(%rip),%rax        # 1cd28 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    5ad9:	48 89 c6             	mov    %rax,%rsi
    5adc:	48 89 df             	mov    %rbx,%rdi
    5adf:	e8 4c e6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    5ae4:	48 8b 05 bd a4 02 00 	mov    0x2a4bd(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5aeb:	48 89 c2             	mov    %rax,%rdx
    5aee:	48 8d 05 4b a2 02 00 	lea    0x2a24b(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5af5:	48 89 c6             	mov    %rax,%rsi
    5af8:	48 89 df             	mov    %rbx,%rdi
    5afb:	e8 50 ed ff ff       	call   4850 <__cxa_throw@plt>
    5b00:	49 89 c4             	mov    %rax,%r12
    5b03:	48 89 df             	mov    %rbx,%rdi
    5b06:	e8 b5 e7 ff ff       	call   42c0 <__cxa_free_exception@plt>
    5b0b:	4c 89 e0             	mov    %r12,%rax
    5b0e:	48 89 c7             	mov    %rax,%rdi
    5b11:	e8 9a ed ff ff       	call   48b0 <_Unwind_Resume@plt>
  }
}
    5b16:	90                   	nop
    5b17:	48 83 c4 10          	add    $0x10,%rsp
    5b1b:	5b                   	pop    %rbx
    5b1c:	41 5c                	pop    %r12
    5b1e:	5d                   	pop    %rbp
    5b1f:	c3                   	ret

0000000000005b20 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    5b20:	55                   	push   %rbp
    5b21:	48 89 e5             	mov    %rsp,%rbp
    5b24:	41 54                	push   %r12
    5b26:	53                   	push   %rbx
    5b27:	48 83 ec 10          	sub    $0x10,%rsp
    5b2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    5b2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b33:	48 89 c7             	mov    %rax,%rdi
    5b36:	e8 d5 ed ff ff       	call   4910 <vkEndCommandBuffer@plt>
    5b3b:	85 c0                	test   %eax,%eax
    5b3d:	0f 95 c0             	setne  %al
    5b40:	84 c0                	test   %al,%al
    5b42:	74 51                	je     5b95 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    5b44:	bf 10 00 00 00       	mov    $0x10,%edi
    5b49:	e8 62 e6 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    5b4e:	48 89 c3             	mov    %rax,%rbx
    5b51:	48 8d 05 f0 71 01 00 	lea    0x171f0(%rip),%rax        # 1cd48 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    5b58:	48 89 c6             	mov    %rax,%rsi
    5b5b:	48 89 df             	mov    %rbx,%rdi
    5b5e:	e8 cd e5 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    5b63:	48 8b 05 3e a4 02 00 	mov    0x2a43e(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b6a:	48 89 c2             	mov    %rax,%rdx
    5b6d:	48 8d 05 cc a1 02 00 	lea    0x2a1cc(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b74:	48 89 c6             	mov    %rax,%rsi
    5b77:	48 89 df             	mov    %rbx,%rdi
    5b7a:	e8 d1 ec ff ff       	call   4850 <__cxa_throw@plt>
    5b7f:	49 89 c4             	mov    %rax,%r12
    5b82:	48 89 df             	mov    %rbx,%rdi
    5b85:	e8 36 e7 ff ff       	call   42c0 <__cxa_free_exception@plt>
    5b8a:	4c 89 e0             	mov    %r12,%rax
    5b8d:	48 89 c7             	mov    %rax,%rdi
    5b90:	e8 1b ed ff ff       	call   48b0 <_Unwind_Resume@plt>
  }
}
    5b95:	90                   	nop
    5b96:	48 83 c4 10          	add    $0x10,%rsp
    5b9a:	5b                   	pop    %rbx
    5b9b:	41 5c                	pop    %r12
    5b9d:	5d                   	pop    %rbp
    5b9e:	c3                   	ret

0000000000005b9f <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    5b9f:	55                   	push   %rbp
    5ba0:	48 89 e5             	mov    %rsp,%rbp
    5ba3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ba7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5baf:	5d                   	pop    %rbp
    5bb0:	c3                   	ret

0000000000005bb1 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    5bb1:	55                   	push   %rbp
    5bb2:	48 89 e5             	mov    %rsp,%rbp
    5bb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bbd:	5d                   	pop    %rbp
    5bbe:	c3                   	ret
    5bbf:	90                   	nop

0000000000005bc0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5bc0:	55                   	push   %rbp
    5bc1:	48 89 e5             	mov    %rsp,%rbp
    5bc4:	48 83 ec 10          	sub    $0x10,%rsp
    5bc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bd0:	48 89 c7             	mov    %rax,%rdi
    5bd3:	e8 20 00 00 00       	call   5bf8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5bd8:	90                   	nop
    5bd9:	c9                   	leave
    5bda:	c3                   	ret
    5bdb:	90                   	nop

0000000000005bdc <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5bdc:	55                   	push   %rbp
    5bdd:	48 89 e5             	mov    %rsp,%rbp
    5be0:	48 83 ec 10          	sub    $0x10,%rsp
    5be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bec:	48 89 c7             	mov    %rax,%rdi
    5bef:	e8 4c 01 00 00       	call   5d40 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    5bf4:	90                   	nop
    5bf5:	c9                   	leave
    5bf6:	c3                   	ret
    5bf7:	90                   	nop

0000000000005bf8 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5bf8:	55                   	push   %rbp
    5bf9:	48 89 e5             	mov    %rsp,%rbp
    5bfc:	48 83 ec 10          	sub    $0x10,%rsp
    5c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c08:	48 89 c7             	mov    %rax,%rdi
    5c0b:	e8 3c 01 00 00       	call   5d4c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    5c10:	90                   	nop
    5c11:	c9                   	leave
    5c12:	c3                   	ret
    5c13:	90                   	nop

0000000000005c14 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5c14:	55                   	push   %rbp
    5c15:	48 89 e5             	mov    %rsp,%rbp
    5c18:	53                   	push   %rbx
    5c19:	48 83 ec 28          	sub    $0x28,%rsp
    5c1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5c29:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5c2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5c35:	48 89 d6             	mov    %rdx,%rsi
    5c38:	48 89 c7             	mov    %rax,%rdi
    5c3b:	e8 17 01 00 00       	call   5d57 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    5c40:	48 89 c1             	mov    %rax,%rcx
    5c43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c47:	48 89 c2             	mov    %rax,%rdx
    5c4a:	48 89 ce             	mov    %rcx,%rsi
    5c4d:	48 89 df             	mov    %rbx,%rdi
    5c50:	e8 63 01 00 00       	call   5db8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    5c55:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5c59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c5d:	48 89 d6             	mov    %rdx,%rsi
    5c60:	48 89 c7             	mov    %rax,%rdi
    5c63:	e8 ae 01 00 00       	call   5e16 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    5c68:	eb 1a                	jmp    5c84 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    5c6a:	48 89 c3             	mov    %rax,%rbx
    5c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c71:	48 89 c7             	mov    %rax,%rdi
    5c74:	e8 79 00 00 00       	call   5cf2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5c79:	48 89 d8             	mov    %rbx,%rax
    5c7c:	48 89 c7             	mov    %rax,%rdi
    5c7f:	e8 2c ec ff ff       	call   48b0 <_Unwind_Resume@plt>
    5c84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c88:	c9                   	leave
    5c89:	c3                   	ret

0000000000005c8a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5c8a:	55                   	push   %rbp
    5c8b:	48 89 e5             	mov    %rsp,%rbp
    5c8e:	48 83 ec 10          	sub    $0x10,%rsp
    5c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c9a:	48 89 c7             	mov    %rax,%rdi
    5c9d:	e8 b4 01 00 00       	call   5e56 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5ca2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ca9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cb1:	48 8b 00             	mov    (%rax),%rax
    5cb4:	48 89 ce             	mov    %rcx,%rsi
    5cb7:	48 89 c7             	mov    %rax,%rdi
    5cba:	e8 a5 01 00 00       	call   5e64 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    5cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cc3:	48 89 c7             	mov    %rax,%rdi
    5cc6:	e8 27 00 00 00       	call   5cf2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5ccb:	90                   	nop
    5ccc:	c9                   	leave
    5ccd:	c3                   	ret

0000000000005cce <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5cce:	55                   	push   %rbp
    5ccf:	48 89 e5             	mov    %rsp,%rbp
    5cd2:	48 83 ec 10          	sub    $0x10,%rsp
    5cd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cde:	48 8b 10             	mov    (%rax),%rdx
    5ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ce5:	48 89 d6             	mov    %rdx,%rsi
    5ce8:	48 89 c7             	mov    %rax,%rdi
    5ceb:	e8 9e 01 00 00       	call   5e8e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    5cf0:	c9                   	leave
    5cf1:	c3                   	ret

0000000000005cf2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5cf2:	55                   	push   %rbp
    5cf3:	48 89 e5             	mov    %rsp,%rbp
    5cf6:	48 83 ec 10          	sub    $0x10,%rsp
    5cfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d02:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d0a:	48 8b 00             	mov    (%rax),%rax
    5d0d:	48 29 c2             	sub    %rax,%rdx
    5d10:	48 89 d0             	mov    %rdx,%rax
    5d13:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5d17:	48 89 c2             	mov    %rax,%rdx
    5d1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d1e:	48 8b 08             	mov    (%rax),%rcx
    5d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d25:	48 89 ce             	mov    %rcx,%rsi
    5d28:	48 89 c7             	mov    %rax,%rdi
    5d2b:	e8 96 01 00 00       	call   5ec6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    5d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d34:	48 89 c7             	mov    %rax,%rdi
    5d37:	e8 84 fe ff ff       	call   5bc0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5d3c:	90                   	nop
    5d3d:	c9                   	leave
    5d3e:	c3                   	ret
    5d3f:	90                   	nop

0000000000005d40 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5d40:	55                   	push   %rbp
    5d41:	48 89 e5             	mov    %rsp,%rbp
    5d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d48:	90                   	nop
    5d49:	5d                   	pop    %rbp
    5d4a:	c3                   	ret
    5d4b:	90                   	nop

0000000000005d4c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5d4c:	55                   	push   %rbp
    5d4d:	48 89 e5             	mov    %rsp,%rbp
    5d50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d54:	90                   	nop
    5d55:	5d                   	pop    %rbp
    5d56:	c3                   	ret

0000000000005d57 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5d57:	55                   	push   %rbp
    5d58:	48 89 e5             	mov    %rsp,%rbp
    5d5b:	53                   	push   %rbx
    5d5c:	48 83 ec 28          	sub    $0x28,%rsp
    5d60:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d64:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5d68:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5d6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d70:	48 89 d6             	mov    %rdx,%rsi
    5d73:	48 89 c7             	mov    %rax,%rdi
    5d76:	e8 25 01 00 00       	call   5ea0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5d7b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d7f:	48 89 c7             	mov    %rax,%rdi
    5d82:	e8 74 01 00 00       	call   5efb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5d87:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5d8b:	0f 92 c3             	setb   %bl
    5d8e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5d92:	48 89 c7             	mov    %rax,%rdi
    5d95:	e8 5e fe ff ff       	call   5bf8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5d9a:	84 db                	test   %bl,%bl
    5d9c:	74 0f                	je     5dad <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5d9e:	48 8d 05 c3 6f 01 00 	lea    0x16fc3(%rip),%rax        # 1cd68 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    5da5:	48 89 c7             	mov    %rax,%rdi
    5da8:	e8 33 e4 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5dad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5db1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5db5:	c9                   	leave
    5db6:	c3                   	ret
    5db7:	90                   	nop

0000000000005db8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5db8:	55                   	push   %rbp
    5db9:	48 89 e5             	mov    %rsp,%rbp
    5dbc:	53                   	push   %rbx
    5dbd:	48 83 ec 28          	sub    $0x28,%rsp
    5dc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5dc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5dc9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5dcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dd1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5dd5:	48 89 d6             	mov    %rdx,%rsi
    5dd8:	48 89 c7             	mov    %rax,%rdi
    5ddb:	e8 5e 01 00 00       	call   5f3e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5de0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5de4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5de8:	48 89 d6             	mov    %rdx,%rsi
    5deb:	48 89 c7             	mov    %rax,%rdi
    5dee:	e8 7d 01 00 00       	call   5f70 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    5df3:	eb 1a                	jmp    5e0f <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    5df5:	48 89 c3             	mov    %rax,%rbx
    5df8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dfc:	48 89 c7             	mov    %rax,%rdi
    5dff:	e8 bc fd ff ff       	call   5bc0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5e04:	48 89 d8             	mov    %rbx,%rax
    5e07:	48 89 c7             	mov    %rax,%rdi
    5e0a:	e8 a1 ea ff ff       	call   48b0 <_Unwind_Resume@plt>
    5e0f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e13:	c9                   	leave
    5e14:	c3                   	ret
    5e15:	90                   	nop

0000000000005e16 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5e16:	55                   	push   %rbp
    5e17:	48 89 e5             	mov    %rsp,%rbp
    5e1a:	48 83 ec 10          	sub    $0x10,%rsp
    5e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e2a:	48 89 c7             	mov    %rax,%rdi
    5e2d:	e8 24 00 00 00       	call   5e56 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5e32:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e39:	48 8b 00             	mov    (%rax),%rax
    5e3c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e40:	48 89 ce             	mov    %rcx,%rsi
    5e43:	48 89 c7             	mov    %rax,%rdi
    5e46:	e8 7b 01 00 00       	call   5fc6 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5e4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5e4f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5e53:	90                   	nop
    5e54:	c9                   	leave
    5e55:	c3                   	ret

0000000000005e56 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5e56:	55                   	push   %rbp
    5e57:	48 89 e5             	mov    %rsp,%rbp
    5e5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e62:	5d                   	pop    %rbp
    5e63:	c3                   	ret

0000000000005e64 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5e64:	55                   	push   %rbp
    5e65:	48 89 e5             	mov    %rsp,%rbp
    5e68:	48 83 ec 20          	sub    $0x20,%rsp
    5e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5e78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e80:	48 89 d6             	mov    %rdx,%rsi
    5e83:	48 89 c7             	mov    %rax,%rdi
    5e86:	e8 64 01 00 00       	call   5fef <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    5e8b:	90                   	nop
    5e8c:	c9                   	leave
    5e8d:	c3                   	ret

0000000000005e8e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5e8e:	55                   	push   %rbp
    5e8f:	48 89 e5             	mov    %rsp,%rbp
    5e92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5e9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5e9e:	5d                   	pop    %rbp
    5e9f:	c3                   	ret

0000000000005ea0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5ea0:	55                   	push   %rbp
    5ea1:	48 89 e5             	mov    %rsp,%rbp
    5ea4:	48 83 ec 10          	sub    $0x10,%rsp
    5ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5eb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb8:	48 89 d6             	mov    %rdx,%rsi
    5ebb:	48 89 c7             	mov    %rax,%rdi
    5ebe:	e8 53 01 00 00       	call   6016 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5ec3:	90                   	nop
    5ec4:	c9                   	leave
    5ec5:	c3                   	ret

0000000000005ec6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5ec6:	55                   	push   %rbp
    5ec7:	48 89 e5             	mov    %rsp,%rbp
    5eca:	48 83 ec 20          	sub    $0x20,%rsp
    5ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ed2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ed6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5eda:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5edf:	74 17                	je     5ef8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5ee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ee9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5eed:	48 89 ce             	mov    %rcx,%rsi
    5ef0:	48 89 c7             	mov    %rax,%rdi
    5ef3:	e8 2d 01 00 00       	call   6025 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5ef8:	90                   	nop
    5ef9:	c9                   	leave
    5efa:	c3                   	ret

0000000000005efb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5efb:	55                   	push   %rbp
    5efc:	48 89 e5             	mov    %rsp,%rbp
    5eff:	48 83 ec 20          	sub    $0x20,%rsp
    5f03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5f07:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5f0e:	ff ff 0f 
    5f11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5f15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f19:	48 89 c7             	mov    %rax,%rdi
    5f1c:	e8 32 01 00 00       	call   6053 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    5f21:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5f25:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5f29:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5f2d:	48 89 d6             	mov    %rdx,%rsi
    5f30:	48 89 c7             	mov    %rax,%rdi
    5f33:	e8 f8 f6 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    5f38:	48 8b 00             	mov    (%rax),%rax
      }
    5f3b:	c9                   	leave
    5f3c:	c3                   	ret
    5f3d:	90                   	nop

0000000000005f3e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5f3e:	55                   	push   %rbp
    5f3f:	48 89 e5             	mov    %rsp,%rbp
    5f42:	48 83 ec 10          	sub    $0x10,%rsp
    5f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5f4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f56:	48 89 d6             	mov    %rdx,%rsi
    5f59:	48 89 c7             	mov    %rax,%rdi
    5f5c:	e8 3f ff ff ff       	call   5ea0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f65:	48 89 c7             	mov    %rax,%rdi
    5f68:	e8 01 01 00 00       	call   606e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5f6d:	90                   	nop
    5f6e:	c9                   	leave
    5f6f:	c3                   	ret

0000000000005f70 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5f70:	55                   	push   %rbp
    5f71:	48 89 e5             	mov    %rsp,%rbp
    5f74:	48 83 ec 10          	sub    $0x10,%rsp
    5f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5f80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f88:	48 89 d6             	mov    %rdx,%rsi
    5f8b:	48 89 c7             	mov    %rax,%rdi
    5f8e:	e8 09 01 00 00       	call   609c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5f93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5f97:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f9e:	48 8b 10             	mov    (%rax),%rdx
    5fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fa5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5fa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fad:	48 8b 00             	mov    (%rax),%rax
    5fb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5fb4:	48 c1 e2 03          	shl    $0x3,%rdx
    5fb8:	48 01 c2             	add    %rax,%rdx
    5fbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fbf:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5fc3:	90                   	nop
    5fc4:	c9                   	leave
    5fc5:	c3                   	ret

0000000000005fc6 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5fc6:	55                   	push   %rbp
    5fc7:	48 89 e5             	mov    %rsp,%rbp
    5fca:	48 83 ec 20          	sub    $0x20,%rsp
    5fce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5fd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    5fda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe2:	48 89 d6             	mov    %rdx,%rsi
    5fe5:	48 89 c7             	mov    %rax,%rdi
    5fe8:	e8 e2 00 00 00       	call   60cf <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    5fed:	c9                   	leave
    5fee:	c3                   	ret

0000000000005fef <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5fef:	55                   	push   %rbp
    5ff0:	48 89 e5             	mov    %rsp,%rbp
    5ff3:	48 83 ec 10          	sub    $0x10,%rsp
    5ff7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ffb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    5fff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6007:	48 89 d6             	mov    %rdx,%rsi
    600a:	48 89 c7             	mov    %rax,%rdi
    600d:	e8 e6 00 00 00       	call   60f8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    6012:	90                   	nop
    6013:	c9                   	leave
    6014:	c3                   	ret
    6015:	90                   	nop

0000000000006016 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6016:	55                   	push   %rbp
    6017:	48 89 e5             	mov    %rsp,%rbp
    601a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    601e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6022:	90                   	nop
    6023:	5d                   	pop    %rbp
    6024:	c3                   	ret

0000000000006025 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6025:	55                   	push   %rbp
    6026:	48 89 e5             	mov    %rsp,%rbp
    6029:	48 83 ec 20          	sub    $0x20,%rsp
    602d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6031:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6035:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6039:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    603d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6045:	48 89 ce             	mov    %rcx,%rsi
    6048:	48 89 c7             	mov    %rax,%rdi
    604b:	e8 b8 00 00 00       	call   6108 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    6050:	90                   	nop
    6051:	c9                   	leave
    6052:	c3                   	ret

0000000000006053 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6053:	55                   	push   %rbp
    6054:	48 89 e5             	mov    %rsp,%rbp
    6057:	48 83 ec 10          	sub    $0x10,%rsp
    605b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    605f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6063:	48 89 c7             	mov    %rax,%rdi
    6066:	e8 cf 00 00 00       	call   613a <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    606b:	c9                   	leave
    606c:	c3                   	ret
    606d:	90                   	nop

000000000000606e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    606e:	55                   	push   %rbp
    606f:	48 89 e5             	mov    %rsp,%rbp
    6072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    607a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6085:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    608c:	00 
    608d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6091:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6098:	00 
	{ }
    6099:	90                   	nop
    609a:	5d                   	pop    %rbp
    609b:	c3                   	ret

000000000000609c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    609c:	55                   	push   %rbp
    609d:	48 89 e5             	mov    %rsp,%rbp
    60a0:	48 83 ec 10          	sub    $0x10,%rsp
    60a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    60ac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    60b1:	74 15                	je     60c8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    60b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60bb:	48 89 d6             	mov    %rdx,%rsi
    60be:	48 89 c7             	mov    %rax,%rdi
    60c1:	e8 8e 00 00 00       	call   6154 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    60c6:	eb 05                	jmp    60cd <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    60c8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    60cd:	c9                   	leave
    60ce:	c3                   	ret

00000000000060cf <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    60cf:	55                   	push   %rbp
    60d0:	48 89 e5             	mov    %rsp,%rbp
    60d3:	48 83 ec 20          	sub    $0x20,%rsp
    60d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    60db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    60df:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    60e3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    60e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60eb:	48 89 d6             	mov    %rdx,%rsi
    60ee:	48 89 c7             	mov    %rax,%rdi
    60f1:	e8 88 00 00 00       	call   617e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    60f6:	c9                   	leave
    60f7:	c3                   	ret

00000000000060f8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    60f8:	55                   	push   %rbp
    60f9:	48 89 e5             	mov    %rsp,%rbp
    60fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6104:	90                   	nop
    6105:	5d                   	pop    %rbp
    6106:	c3                   	ret
    6107:	90                   	nop

0000000000006108 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6108:	55                   	push   %rbp
    6109:	48 89 e5             	mov    %rsp,%rbp
    610c:	48 83 ec 20          	sub    $0x20,%rsp
    6110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6114:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6118:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    611c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6120:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6127:	00 
    6128:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    612c:	48 89 d6             	mov    %rdx,%rsi
    612f:	48 89 c7             	mov    %rax,%rdi
    6132:	e8 49 e3 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    6137:	c9                   	leave
    6138:	c3                   	ret
    6139:	90                   	nop

000000000000613a <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    613a:	55                   	push   %rbp
    613b:	48 89 e5             	mov    %rsp,%rbp
    613e:	48 83 ec 10          	sub    $0x10,%rsp
    6142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614a:	48 89 c7             	mov    %rax,%rdi
    614d:	e8 8a 00 00 00       	call   61dc <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6152:	c9                   	leave
    6153:	c3                   	ret

0000000000006154 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6154:	55                   	push   %rbp
    6155:	48 89 e5             	mov    %rsp,%rbp
    6158:	48 83 ec 10          	sub    $0x10,%rsp
    615c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6160:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6164:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616c:	ba 00 00 00 00       	mov    $0x0,%edx
    6171:	48 89 ce             	mov    %rcx,%rsi
    6174:	48 89 c7             	mov    %rax,%rdi
    6177:	e8 74 00 00 00       	call   61f0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    617c:	c9                   	leave
    617d:	c3                   	ret

000000000000617e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    617e:	55                   	push   %rbp
    617f:	48 89 e5             	mov    %rsp,%rbp
    6182:	48 83 ec 20          	sub    $0x20,%rsp
    6186:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    618a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    618e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6193:	74 40                	je     61d5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    6195:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6199:	48 89 c7             	mov    %rax,%rdi
    619c:	e8 b0 00 00 00       	call   6251 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    61a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    61a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a9:	48 89 c7             	mov    %rax,%rdi
    61ac:	e8 ae 00 00 00       	call   625f <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    61b1:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    61b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    61ba:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    61be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61c6:	48 89 ce             	mov    %rcx,%rsi
    61c9:	48 89 c7             	mov    %rax,%rdi
    61cc:	e8 b5 00 00 00       	call   6286 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    61d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    61d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    61d9:	c9                   	leave
    61da:	c3                   	ret
    61db:	90                   	nop

00000000000061dc <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    61dc:	55                   	push   %rbp
    61dd:	48 89 e5             	mov    %rsp,%rbp
    61e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    61e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    61eb:	ff ff 0f 
      }
    61ee:	5d                   	pop    %rbp
    61ef:	c3                   	ret

00000000000061f0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    61f0:	55                   	push   %rbp
    61f1:	48 89 e5             	mov    %rsp,%rbp
    61f4:	48 83 ec 20          	sub    $0x20,%rsp
    61f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6200:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6208:	48 89 c7             	mov    %rax,%rdi
    620b:	e8 cc ff ff ff       	call   61dc <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    6210:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6214:	0f 92 c0             	setb   %al
    6217:	0f b6 c0             	movzbl %al,%eax
    621a:	48 85 c0             	test   %rax,%rax
    621d:	0f 95 c0             	setne  %al
    6220:	84 c0                	test   %al,%al
    6222:	74 1a                	je     623e <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6224:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    622b:	ff ff 1f 
    622e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6232:	73 05                	jae    6239 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6234:	e8 b7 e0 ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6239:	e8 d2 de ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    623e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6242:	48 c1 e0 03          	shl    $0x3,%rax
    6246:	48 89 c7             	mov    %rax,%rdi
    6249:	e8 12 e2 ff ff       	call   4460 <_Znwm@plt>
    624e:	90                   	nop
      }
    624f:	c9                   	leave
    6250:	c3                   	ret

0000000000006251 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6251:	55                   	push   %rbp
    6252:	48 89 e5             	mov    %rsp,%rbp
    6255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625d:	5d                   	pop    %rbp
    625e:	c3                   	ret

000000000000625f <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    625f:	55                   	push   %rbp
    6260:	48 89 e5             	mov    %rsp,%rbp
    6263:	48 83 ec 10          	sub    $0x10,%rsp
    6267:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    626b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626f:	48 89 c6             	mov    %rax,%rsi
    6272:	bf 08 00 00 00       	mov    $0x8,%edi
    6277:	e8 23 f9 ff ff       	call   5b9f <_ZnwmPv>
    627c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    6283:	90                   	nop
    6284:	c9                   	leave
    6285:	c3                   	ret

0000000000006286 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6286:	55                   	push   %rbp
    6287:	48 89 e5             	mov    %rsp,%rbp
    628a:	48 83 ec 20          	sub    $0x20,%rsp
    628e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    629a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    629e:	48 89 c7             	mov    %rax,%rdi
    62a1:	e8 24 00 00 00       	call   62ca <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    62a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62aa:	48 89 c7             	mov    %rax,%rdi
    62ad:	e8 ff f8 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    62b2:	48 89 c1             	mov    %rax,%rcx
    62b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62bd:	48 89 ce             	mov    %rcx,%rsi
    62c0:	48 89 c7             	mov    %rax,%rdi
    62c3:	e8 0d 00 00 00       	call   62d5 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    62c8:	c9                   	leave
    62c9:	c3                   	ret

00000000000062ca <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    62ca:	55                   	push   %rbp
    62cb:	48 89 e5             	mov    %rsp,%rbp
    62ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    62d2:	90                   	nop
    62d3:	5d                   	pop    %rbp
    62d4:	c3                   	ret

00000000000062d5 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    62d5:	55                   	push   %rbp
    62d6:	48 89 e5             	mov    %rsp,%rbp
    62d9:	48 83 ec 20          	sub    $0x20,%rsp
    62dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    62e9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    62ee:	75 06                	jne    62f6 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    62f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f4:	eb 3a                	jmp    6330 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    62f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6301:	00 
    6302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6306:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    630a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    630e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6312:	48 89 ce             	mov    %rcx,%rsi
    6315:	48 89 c7             	mov    %rax,%rdi
    6318:	e8 15 00 00 00       	call   6332 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    631d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6321:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6328:	00 
    6329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    632d:	48 01 d0             	add    %rdx,%rax
    }
    6330:	c9                   	leave
    6331:	c3                   	ret

0000000000006332 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6332:	55                   	push   %rbp
    6333:	48 89 e5             	mov    %rsp,%rbp
    6336:	48 83 ec 20          	sub    $0x20,%rsp
    633a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    633e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6342:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6346:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    634a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    634e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6352:	48 89 ce             	mov    %rcx,%rsi
    6355:	48 89 c7             	mov    %rax,%rdi
    6358:	e8 03 00 00 00       	call   6360 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    635d:	90                   	nop
    635e:	c9                   	leave
    635f:	c3                   	ret

0000000000006360 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6360:	55                   	push   %rbp
    6361:	48 89 e5             	mov    %rsp,%rbp
    6364:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6368:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    636c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    6370:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6374:	48 8b 00             	mov    (%rax),%rax
    6377:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    637b:	eb 10                	jmp    638d <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    637d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6381:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6385:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    6388:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    638d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6391:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6395:	75 e6                	jne    637d <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6397:	90                   	nop
    6398:	90                   	nop
    6399:	5d                   	pop    %rbp
    639a:	c3                   	ret

000000000000639b <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    639b:	55                   	push   %rbp
    639c:	48 89 e5             	mov    %rsp,%rbp
    639f:	48 83 ec 20          	sub    $0x20,%rsp
    63a3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    63a6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    63a9:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    63ad:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    63b1:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    63b5:	be 00 00 00 00       	mov    $0x0,%esi
    63ba:	bf 01 20 02 00       	mov    $0x22001,%edi
    63bf:	e8 bc df ff ff       	call   4380 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
  return glfwCreateWindow(width, height, title, monitor, share);
    63c4:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    63c8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    63cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63d0:	8b 75 f8             	mov    -0x8(%rbp),%esi
    63d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    63d6:	49 89 f8             	mov    %rdi,%r8
    63d9:	89 c7                	mov    %eax,%edi
    63db:	e8 b0 e3 ff ff       	call   4790 <glfwCreateWindow@plt>
}
    63e0:	c9                   	leave
    63e1:	c3                   	ret

00000000000063e2 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    63e2:	55                   	push   %rbp
    63e3:	48 89 e5             	mov    %rsp,%rbp
    63e6:	41 54                	push   %r12
    63e8:	53                   	push   %rbx
    63e9:	48 83 ec 20          	sub    $0x20,%rsp
    63ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    63f1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    63f5:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    63f9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    63fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6401:	48 89 ce             	mov    %rcx,%rsi
    6404:	48 89 c7             	mov    %rax,%rdi
    6407:	e8 c4 e1 ff ff       	call   45d0 <vkCreateInstance@plt>
    640c:	85 c0                	test   %eax,%eax
    640e:	0f 95 c0             	setne  %al
    6411:	84 c0                	test   %al,%al
    6413:	74 3b                	je     6450 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    6415:	bf 10 00 00 00       	mov    $0x10,%edi
    641a:	e8 91 dd ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    641f:	48 89 c3             	mov    %rax,%rbx
    6422:	48 8d 05 a7 6f 01 00 	lea    0x16fa7(%rip),%rax        # 1d3d0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6429:	48 89 c6             	mov    %rax,%rsi
    642c:	48 89 df             	mov    %rbx,%rdi
    642f:	e8 fc dc ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6434:	48 8b 05 6d 9b 02 00 	mov    0x29b6d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    643b:	48 89 c2             	mov    %rax,%rdx
    643e:	48 8d 05 fb 98 02 00 	lea    0x298fb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6445:	48 89 c6             	mov    %rax,%rsi
    6448:	48 89 df             	mov    %rbx,%rdi
    644b:	e8 00 e4 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return instance;
    6450:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6454:	eb 16                	jmp    646c <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    6456:	49 89 c4             	mov    %rax,%r12
    6459:	48 89 df             	mov    %rbx,%rdi
    645c:	e8 5f de ff ff       	call   42c0 <__cxa_free_exception@plt>
    6461:	4c 89 e0             	mov    %r12,%rax
    6464:	48 89 c7             	mov    %rax,%rdi
    6467:	e8 44 e4 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    646c:	48 83 c4 20          	add    $0x20,%rsp
    6470:	5b                   	pop    %rbx
    6471:	41 5c                	pop    %r12
    6473:	5d                   	pop    %rbp
    6474:	c3                   	ret

0000000000006475 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    6475:	55                   	push   %rbp
    6476:	48 89 e5             	mov    %rsp,%rbp
    6479:	41 54                	push   %r12
    647b:	53                   	push   %rbx
    647c:	48 83 ec 30          	sub    $0x30,%rsp
    6480:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6484:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6488:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    648c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6490:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6494:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    649c:	48 89 c7             	mov    %rax,%rdi
    649f:	e8 9c e2 ff ff       	call   4740 <vkCreateDevice@plt>
    64a4:	85 c0                	test   %eax,%eax
    64a6:	0f 95 c0             	setne  %al
    64a9:	84 c0                	test   %al,%al
    64ab:	74 3b                	je     64e8 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    64ad:	bf 10 00 00 00       	mov    $0x10,%edi
    64b2:	e8 f9 dc ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    64b7:	48 89 c3             	mov    %rax,%rbx
    64ba:	48 8d 05 2f 6f 01 00 	lea    0x16f2f(%rip),%rax        # 1d3f0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    64c1:	48 89 c6             	mov    %rax,%rsi
    64c4:	48 89 df             	mov    %rbx,%rdi
    64c7:	e8 64 dc ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    64cc:	48 8b 05 d5 9a 02 00 	mov    0x29ad5(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    64d3:	48 89 c2             	mov    %rax,%rdx
    64d6:	48 8d 05 63 98 02 00 	lea    0x29863(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    64dd:	48 89 c6             	mov    %rax,%rsi
    64e0:	48 89 df             	mov    %rbx,%rdi
    64e3:	e8 68 e3 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return device;
    64e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64ec:	eb 16                	jmp    6504 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    64ee:	49 89 c4             	mov    %rax,%r12
    64f1:	48 89 df             	mov    %rbx,%rdi
    64f4:	e8 c7 dd ff ff       	call   42c0 <__cxa_free_exception@plt>
    64f9:	4c 89 e0             	mov    %r12,%rax
    64fc:	48 89 c7             	mov    %rax,%rdi
    64ff:	e8 ac e3 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6504:	48 83 c4 30          	add    $0x30,%rsp
    6508:	5b                   	pop    %rbx
    6509:	41 5c                	pop    %r12
    650b:	5d                   	pop    %rbp
    650c:	c3                   	ret

000000000000650d <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    650d:	55                   	push   %rbp
    650e:	48 89 e5             	mov    %rsp,%rbp
    6511:	41 54                	push   %r12
    6513:	53                   	push   %rbx
    6514:	48 83 ec 30          	sub    $0x30,%rsp
    6518:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    651c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6520:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    6524:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6528:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    652c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6530:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6534:	48 89 c7             	mov    %rax,%rdi
    6537:	e8 34 e2 ff ff       	call   4770 <glfwCreateWindowSurface@plt>
    653c:	85 c0                	test   %eax,%eax
    653e:	0f 95 c0             	setne  %al
    6541:	84 c0                	test   %al,%al
    6543:	74 3b                	je     6580 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    6545:	bf 10 00 00 00       	mov    $0x10,%edi
    654a:	e8 61 dc ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    654f:	48 89 c3             	mov    %rax,%rbx
    6552:	48 8d 05 bf 6e 01 00 	lea    0x16ebf(%rip),%rax        # 1d418 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    6559:	48 89 c6             	mov    %rax,%rsi
    655c:	48 89 df             	mov    %rbx,%rdi
    655f:	e8 cc db ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6564:	48 8b 05 3d 9a 02 00 	mov    0x29a3d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    656b:	48 89 c2             	mov    %rax,%rdx
    656e:	48 8d 05 cb 97 02 00 	lea    0x297cb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6575:	48 89 c6             	mov    %rax,%rsi
    6578:	48 89 df             	mov    %rbx,%rdi
    657b:	e8 d0 e2 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return surface;
    6580:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6584:	eb 16                	jmp    659c <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    6586:	49 89 c4             	mov    %rax,%r12
    6589:	48 89 df             	mov    %rbx,%rdi
    658c:	e8 2f dd ff ff       	call   42c0 <__cxa_free_exception@plt>
    6591:	4c 89 e0             	mov    %r12,%rax
    6594:	48 89 c7             	mov    %rax,%rdi
    6597:	e8 14 e3 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    659c:	48 83 c4 30          	add    $0x30,%rsp
    65a0:	5b                   	pop    %rbx
    65a1:	41 5c                	pop    %r12
    65a3:	5d                   	pop    %rbp
    65a4:	c3                   	ret

00000000000065a5 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    65a5:	55                   	push   %rbp
    65a6:	48 89 e5             	mov    %rsp,%rbp
    65a9:	41 54                	push   %r12
    65ab:	53                   	push   %rbx
    65ac:	48 83 ec 30          	sub    $0x30,%rsp
    65b0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    65b4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    65b8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    65bc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    65c3:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    65c4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    65c8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    65cc:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    65d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65d4:	48 89 c7             	mov    %rax,%rdi
    65d7:	e8 c4 df ff ff       	call   45a0 <vkCreateSwapchainKHR@plt>
    65dc:	85 c0                	test   %eax,%eax
    65de:	0f 95 c0             	setne  %al
    65e1:	84 c0                	test   %al,%al
    65e3:	74 3b                	je     6620 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    65e5:	bf 10 00 00 00       	mov    $0x10,%edi
    65ea:	e8 c1 db ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    65ef:	48 89 c3             	mov    %rax,%rbx
    65f2:	48 8d 05 40 6e 01 00 	lea    0x16e40(%rip),%rax        # 1d439 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x71>
    65f9:	48 89 c6             	mov    %rax,%rsi
    65fc:	48 89 df             	mov    %rbx,%rdi
    65ff:	e8 2c db ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6604:	48 8b 05 9d 99 02 00 	mov    0x2999d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    660b:	48 89 c2             	mov    %rax,%rdx
    660e:	48 8d 05 2b 97 02 00 	lea    0x2972b(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6615:	48 89 c6             	mov    %rax,%rsi
    6618:	48 89 df             	mov    %rbx,%rdi
    661b:	e8 30 e2 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return swapchain;
    6620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6624:	eb 16                	jmp    663c <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    6626:	49 89 c4             	mov    %rax,%r12
    6629:	48 89 df             	mov    %rbx,%rdi
    662c:	e8 8f dc ff ff       	call   42c0 <__cxa_free_exception@plt>
    6631:	4c 89 e0             	mov    %r12,%rax
    6634:	48 89 c7             	mov    %rax,%rdi
    6637:	e8 74 e2 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    663c:	48 83 c4 30          	add    $0x30,%rsp
    6640:	5b                   	pop    %rbx
    6641:	41 5c                	pop    %r12
    6643:	5d                   	pop    %rbp
    6644:	c3                   	ret

0000000000006645 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    6645:	55                   	push   %rbp
    6646:	48 89 e5             	mov    %rsp,%rbp
    6649:	41 54                	push   %r12
    664b:	53                   	push   %rbx
    664c:	48 83 ec 30          	sub    $0x30,%rsp
    6650:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6654:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6658:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    665c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6660:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6664:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6668:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    666c:	48 89 c7             	mov    %rax,%rdi
    666f:	e8 3c de ff ff       	call   44b0 <vkCreateImageView@plt>
    6674:	85 c0                	test   %eax,%eax
    6676:	0f 95 c0             	setne  %al
    6679:	84 c0                	test   %al,%al
    667b:	74 3b                	je     66b8 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    667d:	bf 10 00 00 00       	mov    $0x10,%edi
    6682:	e8 29 db ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6687:	48 89 c3             	mov    %rax,%rbx
    668a:	48 8d 05 c7 6d 01 00 	lea    0x16dc7(%rip),%rax        # 1d458 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    6691:	48 89 c6             	mov    %rax,%rsi
    6694:	48 89 df             	mov    %rbx,%rdi
    6697:	e8 94 da ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    669c:	48 8b 05 05 99 02 00 	mov    0x29905(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    66a3:	48 89 c2             	mov    %rax,%rdx
    66a6:	48 8d 05 93 96 02 00 	lea    0x29693(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    66ad:	48 89 c6             	mov    %rax,%rsi
    66b0:	48 89 df             	mov    %rbx,%rdi
    66b3:	e8 98 e1 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return imageView;
    66b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66bc:	eb 16                	jmp    66d4 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    66be:	49 89 c4             	mov    %rax,%r12
    66c1:	48 89 df             	mov    %rbx,%rdi
    66c4:	e8 f7 db ff ff       	call   42c0 <__cxa_free_exception@plt>
    66c9:	4c 89 e0             	mov    %r12,%rax
    66cc:	48 89 c7             	mov    %rax,%rdi
    66cf:	e8 dc e1 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    66d4:	48 83 c4 30          	add    $0x30,%rsp
    66d8:	5b                   	pop    %rbx
    66d9:	41 5c                	pop    %r12
    66db:	5d                   	pop    %rbp
    66dc:	c3                   	ret

00000000000066dd <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    66dd:	55                   	push   %rbp
    66de:	48 89 e5             	mov    %rsp,%rbp
    66e1:	41 54                	push   %r12
    66e3:	53                   	push   %rbx
    66e4:	48 83 ec 60          	sub    $0x60,%rsp
    66e8:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    66ec:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    66f0:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    66f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    66f8:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    66fc:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    6700:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    6705:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    670c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6710:	48 89 c7             	mov    %rax,%rdi
    6713:	e8 80 06 00 00       	call   6d98 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    6718:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    671c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6720:	48 89 c7             	mov    %rax,%rdi
    6723:	e8 90 06 00 00       	call   6db8 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    6728:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    672c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    6733:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    6734:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    6738:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    673c:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    6740:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6744:	48 89 c7             	mov    %rax,%rdi
    6747:	e8 b4 db ff ff       	call   4300 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    674c:	85 c0                	test   %eax,%eax
    674e:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    6751:	84 c0                	test   %al,%al
    6753:	74 3b                	je     6790 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    6755:	bf 10 00 00 00       	mov    $0x10,%edi
    675a:	e8 51 da ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    675f:	48 89 c3             	mov    %rax,%rbx
    6762:	48 8d 05 0f 6d 01 00 	lea    0x16d0f(%rip),%rax        # 1d478 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    6769:	48 89 c6             	mov    %rax,%rsi
    676c:	48 89 df             	mov    %rbx,%rdi
    676f:	e8 bc d9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6774:	48 8b 05 2d 98 02 00 	mov    0x2982d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    677b:	48 89 c2             	mov    %rax,%rdx
    677e:	48 8d 05 bb 95 02 00 	lea    0x295bb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6785:	48 89 c6             	mov    %rax,%rsi
    6788:	48 89 df             	mov    %rbx,%rdi
    678b:	e8 c0 e0 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return shaderModule;
    6790:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6794:	eb 16                	jmp    67ac <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    6796:	49 89 c4             	mov    %rax,%r12
    6799:	48 89 df             	mov    %rbx,%rdi
    679c:	e8 1f db ff ff       	call   42c0 <__cxa_free_exception@plt>
    67a1:	4c 89 e0             	mov    %r12,%rax
    67a4:	48 89 c7             	mov    %rax,%rdi
    67a7:	e8 04 e1 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    67ac:	48 83 c4 60          	add    $0x60,%rsp
    67b0:	5b                   	pop    %rbx
    67b1:	41 5c                	pop    %r12
    67b3:	5d                   	pop    %rbp
    67b4:	c3                   	ret

00000000000067b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    67b5:	55                   	push   %rbp
    67b6:	48 89 e5             	mov    %rsp,%rbp
    67b9:	41 54                	push   %r12
    67bb:	53                   	push   %rbx
    67bc:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    67c3:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    67ca:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    67d1:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    67d8:	be 04 00 00 00       	mov    $0x4,%esi
    67dd:	bf 02 00 00 00       	mov    $0x2,%edi
    67e2:	e8 9e 05 00 00       	call   6d85 <_ZStorSt13_Ios_OpenmodeS_>
    67e7:	89 c2                	mov    %eax,%edx
    67e9:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    67f0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    67f7:	48 89 ce             	mov    %rcx,%rsi
    67fa:	48 89 c7             	mov    %rax,%rdi
    67fd:	e8 ee df ff ff       	call   47f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    6802:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    6809:	48 89 c7             	mov    %rax,%rdi
    680c:	e8 cf df ff ff       	call   47e0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    6811:	83 f0 01             	xor    $0x1,%eax
    6814:	84 c0                	test   %al,%al
    6816:	74 61                	je     6879 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    6818:	bf 10 00 00 00       	mov    $0x10,%edi
    681d:	e8 8e d9 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6822:	48 89 c3             	mov    %rax,%rbx
    6825:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6829:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    6830:	48 8d 0d 61 6c 01 00 	lea    0x16c61(%rip),%rcx        # 1d498 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    6837:	48 89 ce             	mov    %rcx,%rsi
    683a:	48 89 c7             	mov    %rax,%rdi
    683d:	e8 9a 05 00 00       	call   6ddc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    6842:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6846:	48 89 c6             	mov    %rax,%rsi
    6849:	48 89 df             	mov    %rbx,%rdi
    684c:	e8 af df ff ff       	call   4800 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    6851:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6855:	48 89 c7             	mov    %rax,%rdi
    6858:	e8 03 da ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    685d:	48 8b 05 44 97 02 00 	mov    0x29744(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6864:	48 89 c2             	mov    %rax,%rdx
    6867:	48 8d 05 d2 94 02 00 	lea    0x294d2(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    686e:	48 89 c6             	mov    %rax,%rsi
    6871:	48 89 df             	mov    %rbx,%rdi
    6874:	e8 d7 df ff ff       	call   4850 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    6879:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    6880:	48 89 c7             	mov    %rax,%rdi
    6883:	e8 08 e0 ff ff       	call   4890 <_ZNSi5tellgEv@plt>
    6888:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    688c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6890:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6894:	48 89 c7             	mov    %rax,%rdi
    6897:	e8 42 06 00 00       	call   6ede <_ZNKSt4fposI11__mbstate_tEcvlEv>
    689c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    68a0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    68a4:	48 89 c7             	mov    %rax,%rdi
    68a7:	e8 14 e0 ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    68ac:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    68b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    68b4:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    68bb:	48 89 ce             	mov    %rcx,%rsi
    68be:	48 89 c7             	mov    %rax,%rdi
    68c1:	e8 2a 06 00 00       	call   6ef0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    68c6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    68ca:	48 89 c7             	mov    %rax,%rdi
    68cd:	e8 3e dc ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    68d2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    68d6:	be 00 00 00 00       	mov    $0x0,%esi
    68db:	48 89 c7             	mov    %rax,%rdi
    68de:	e8 c7 06 00 00       	call   6faa <_ZNSt4fposI11__mbstate_tEC1El>
    68e3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    68e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    68eb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    68f2:	48 89 ce             	mov    %rcx,%rsi
    68f5:	48 89 c7             	mov    %rax,%rdi
    68f8:	e8 33 dd ff ff       	call   4630 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    68fd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6901:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    6908:	48 89 c7             	mov    %rax,%rdi
    690b:	e8 ca 06 00 00       	call   6fda <_ZNSt6vectorIcSaIcEE4dataEv>
    6910:	48 89 c1             	mov    %rax,%rcx
    6913:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    691a:	48 89 da             	mov    %rbx,%rdx
    691d:	48 89 ce             	mov    %rcx,%rsi
    6920:	48 89 c7             	mov    %rax,%rdi
    6923:	e8 f8 dc ff ff       	call   4620 <_ZNSi4readEPcl@plt>
  file.close();
    6928:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    692f:	48 89 c7             	mov    %rax,%rdi
    6932:	e8 49 d7 ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    6937:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    693e:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    6945:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    694c:	48 89 ce             	mov    %rcx,%rsi
    694f:	48 89 c7             	mov    %rax,%rdi
    6952:	e8 86 fd ff ff       	call   66dd <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    6957:	48 89 c3             	mov    %rax,%rbx
    695a:	90                   	nop
}
    695b:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    6962:	48 89 c7             	mov    %rax,%rdi
    6965:	e8 fc 05 00 00       	call   6f66 <_ZNSt6vectorIcSaIcEED1Ev>
    696a:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    6971:	48 89 c7             	mov    %rax,%rdi
    6974:	e8 57 d7 ff ff       	call   40d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    6979:	48 89 d8             	mov    %rbx,%rax
    697c:	eb 63                	jmp    69e1 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    697e:	49 89 c4             	mov    %rax,%r12
    6981:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6985:	48 89 c7             	mov    %rax,%rdi
    6988:	e8 d3 d8 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    698d:	eb 03                	jmp    6992 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    698f:	49 89 c4             	mov    %rax,%r12
    6992:	48 89 df             	mov    %rbx,%rdi
    6995:	e8 26 d9 ff ff       	call   42c0 <__cxa_free_exception@plt>
    699a:	4c 89 e3             	mov    %r12,%rbx
    699d:	eb 28                	jmp    69c7 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    699f:	48 89 c3             	mov    %rax,%rbx
    69a2:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    69a6:	48 89 c7             	mov    %rax,%rdi
    69a9:	e8 62 db ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    69ae:	eb 17                	jmp    69c7 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    69b0:	48 89 c3             	mov    %rax,%rbx
    69b3:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    69ba:	48 89 c7             	mov    %rax,%rdi
    69bd:	e8 a4 05 00 00       	call   6f66 <_ZNSt6vectorIcSaIcEED1Ev>
    69c2:	eb 03                	jmp    69c7 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    69c4:	48 89 c3             	mov    %rax,%rbx
    69c7:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    69ce:	48 89 c7             	mov    %rax,%rdi
    69d1:	e8 fa d6 ff ff       	call   40d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    69d6:	48 89 d8             	mov    %rbx,%rax
    69d9:	48 89 c7             	mov    %rax,%rdi
    69dc:	e8 cf de ff ff       	call   48b0 <_Unwind_Resume@plt>
    69e1:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    69e8:	5b                   	pop    %rbx
    69e9:	41 5c                	pop    %r12
    69eb:	5d                   	pop    %rbp
    69ec:	c3                   	ret

00000000000069ed <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    69ed:	55                   	push   %rbp
    69ee:	48 89 e5             	mov    %rsp,%rbp
    69f1:	41 54                	push   %r12
    69f3:	53                   	push   %rbx
    69f4:	48 83 ec 30          	sub    $0x30,%rsp
    69f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    69fc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6a00:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    6a04:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6a08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6a0c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6a10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a14:	48 89 c7             	mov    %rax,%rdi
    6a17:	e8 34 d9 ff ff       	call   4350 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    6a1c:	85 c0                	test   %eax,%eax
    6a1e:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    6a21:	84 c0                	test   %al,%al
    6a23:	74 3b                	je     6a60 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    6a25:	bf 10 00 00 00       	mov    $0x10,%edi
    6a2a:	e8 81 d7 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6a2f:	48 89 c3             	mov    %rax,%rbx
    6a32:	48 8d 05 6f 6a 01 00 	lea    0x16a6f(%rip),%rax        # 1d4a8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    6a39:	48 89 c6             	mov    %rax,%rsi
    6a3c:	48 89 df             	mov    %rbx,%rdi
    6a3f:	e8 ec d6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6a44:	48 8b 05 5d 95 02 00 	mov    0x2955d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6a4b:	48 89 c2             	mov    %rax,%rdx
    6a4e:	48 8d 05 eb 92 02 00 	lea    0x292eb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6a55:	48 89 c6             	mov    %rax,%rsi
    6a58:	48 89 df             	mov    %rbx,%rdi
    6a5b:	e8 f0 dd ff ff       	call   4850 <__cxa_throw@plt>
  }
  return pipelineLayout;
    6a60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a64:	eb 16                	jmp    6a7c <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    6a66:	49 89 c4             	mov    %rax,%r12
    6a69:	48 89 df             	mov    %rbx,%rdi
    6a6c:	e8 4f d8 ff ff       	call   42c0 <__cxa_free_exception@plt>
    6a71:	4c 89 e0             	mov    %r12,%rax
    6a74:	48 89 c7             	mov    %rax,%rdi
    6a77:	e8 34 de ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6a7c:	48 83 c4 30          	add    $0x30,%rsp
    6a80:	5b                   	pop    %rbx
    6a81:	41 5c                	pop    %r12
    6a83:	5d                   	pop    %rbp
    6a84:	c3                   	ret

0000000000006a85 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    6a85:	55                   	push   %rbp
    6a86:	48 89 e5             	mov    %rsp,%rbp
    6a89:	41 54                	push   %r12
    6a8b:	53                   	push   %rbx
    6a8c:	48 83 ec 30          	sub    $0x30,%rsp
    6a90:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6a94:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6a98:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    6a9c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6aa0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6aa4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6aa8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6aac:	48 89 c7             	mov    %rax,%rdi
    6aaf:	e8 bc d7 ff ff       	call   4270 <vkCreateRenderPass@plt>
    6ab4:	85 c0                	test   %eax,%eax
    6ab6:	0f 95 c0             	setne  %al
    6ab9:	84 c0                	test   %al,%al
    6abb:	74 3b                	je     6af8 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    6abd:	bf 10 00 00 00       	mov    $0x10,%edi
    6ac2:	e8 e9 d6 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6ac7:	48 89 c3             	mov    %rax,%rbx
    6aca:	48 8d 05 d7 69 01 00 	lea    0x169d7(%rip),%rax        # 1d4a8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    6ad1:	48 89 c6             	mov    %rax,%rsi
    6ad4:	48 89 df             	mov    %rbx,%rdi
    6ad7:	e8 54 d6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6adc:	48 8b 05 c5 94 02 00 	mov    0x294c5(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ae3:	48 89 c2             	mov    %rax,%rdx
    6ae6:	48 8d 05 53 92 02 00 	lea    0x29253(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6aed:	48 89 c6             	mov    %rax,%rsi
    6af0:	48 89 df             	mov    %rbx,%rdi
    6af3:	e8 58 dd ff ff       	call   4850 <__cxa_throw@plt>
  }
  return renderPass;
    6af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6afc:	eb 16                	jmp    6b14 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    6afe:	49 89 c4             	mov    %rax,%r12
    6b01:	48 89 df             	mov    %rbx,%rdi
    6b04:	e8 b7 d7 ff ff       	call   42c0 <__cxa_free_exception@plt>
    6b09:	4c 89 e0             	mov    %r12,%rax
    6b0c:	48 89 c7             	mov    %rax,%rdi
    6b0f:	e8 9c dd ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6b14:	48 83 c4 30          	add    $0x30,%rsp
    6b18:	5b                   	pop    %rbx
    6b19:	41 5c                	pop    %r12
    6b1b:	5d                   	pop    %rbp
    6b1c:	c3                   	ret

0000000000006b1d <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6b1d:	55                   	push   %rbp
    6b1e:	48 89 e5             	mov    %rsp,%rbp
    6b21:	41 54                	push   %r12
    6b23:	53                   	push   %rbx
    6b24:	48 83 ec 30          	sub    $0x30,%rsp
    6b28:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b2c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6b30:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    6b34:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6b38:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6b3c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6b40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b44:	48 89 c7             	mov    %rax,%rdi
    6b47:	e8 44 db ff ff       	call   4690 <vkCreateFramebuffer@plt>
    6b4c:	85 c0                	test   %eax,%eax
    6b4e:	0f 95 c0             	setne  %al
    6b51:	84 c0                	test   %al,%al
    6b53:	74 3b                	je     6b90 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    6b55:	bf 10 00 00 00       	mov    $0x10,%edi
    6b5a:	e8 51 d6 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6b5f:	48 89 c3             	mov    %rax,%rbx
    6b62:	48 8d 05 61 69 01 00 	lea    0x16961(%rip),%rax        # 1d4ca <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x102>
    6b69:	48 89 c6             	mov    %rax,%rsi
    6b6c:	48 89 df             	mov    %rbx,%rdi
    6b6f:	e8 bc d5 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6b74:	48 8b 05 2d 94 02 00 	mov    0x2942d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6b7b:	48 89 c2             	mov    %rax,%rdx
    6b7e:	48 8d 05 bb 91 02 00 	lea    0x291bb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6b85:	48 89 c6             	mov    %rax,%rsi
    6b88:	48 89 df             	mov    %rbx,%rdi
    6b8b:	e8 c0 dc ff ff       	call   4850 <__cxa_throw@plt>
  }
  return framebuffer;
    6b90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b94:	eb 16                	jmp    6bac <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    6b96:	49 89 c4             	mov    %rax,%r12
    6b99:	48 89 df             	mov    %rbx,%rdi
    6b9c:	e8 1f d7 ff ff       	call   42c0 <__cxa_free_exception@plt>
    6ba1:	4c 89 e0             	mov    %r12,%rax
    6ba4:	48 89 c7             	mov    %rax,%rdi
    6ba7:	e8 04 dd ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6bac:	48 83 c4 30          	add    $0x30,%rsp
    6bb0:	5b                   	pop    %rbx
    6bb1:	41 5c                	pop    %r12
    6bb3:	5d                   	pop    %rbp
    6bb4:	c3                   	ret

0000000000006bb5 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6bb5:	55                   	push   %rbp
    6bb6:	48 89 e5             	mov    %rsp,%rbp
    6bb9:	41 54                	push   %r12
    6bbb:	53                   	push   %rbx
    6bbc:	48 83 ec 30          	sub    $0x30,%rsp
    6bc0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6bc4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6bc8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    6bcc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6bd3:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    6bd4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6bd8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6bdc:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6be0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6be4:	48 89 c7             	mov    %rax,%rdi
    6be7:	e8 84 d5 ff ff       	call   4170 <vkCreateCommandPool@plt>
    6bec:	85 c0                	test   %eax,%eax
    6bee:	0f 95 c0             	setne  %al
    6bf1:	84 c0                	test   %al,%al
    6bf3:	74 3b                	je     6c30 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    6bf5:	bf 10 00 00 00       	mov    $0x10,%edi
    6bfa:	e8 b1 d5 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6bff:	48 89 c3             	mov    %rax,%rbx
    6c02:	48 8d 05 df 68 01 00 	lea    0x168df(%rip),%rax        # 1d4e8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    6c09:	48 89 c6             	mov    %rax,%rsi
    6c0c:	48 89 df             	mov    %rbx,%rdi
    6c0f:	e8 1c d5 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6c14:	48 8b 05 8d 93 02 00 	mov    0x2938d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6c1b:	48 89 c2             	mov    %rax,%rdx
    6c1e:	48 8d 05 1b 91 02 00 	lea    0x2911b(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c25:	48 89 c6             	mov    %rax,%rsi
    6c28:	48 89 df             	mov    %rbx,%rdi
    6c2b:	e8 20 dc ff ff       	call   4850 <__cxa_throw@plt>
  }
  return commandPool;
    6c30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c34:	eb 16                	jmp    6c4c <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    6c36:	49 89 c4             	mov    %rax,%r12
    6c39:	48 89 df             	mov    %rbx,%rdi
    6c3c:	e8 7f d6 ff ff       	call   42c0 <__cxa_free_exception@plt>
    6c41:	4c 89 e0             	mov    %r12,%rax
    6c44:	48 89 c7             	mov    %rax,%rdi
    6c47:	e8 64 dc ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6c4c:	48 83 c4 30          	add    $0x30,%rsp
    6c50:	5b                   	pop    %rbx
    6c51:	41 5c                	pop    %r12
    6c53:	5d                   	pop    %rbp
    6c54:	c3                   	ret

0000000000006c55 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    6c55:	55                   	push   %rbp
    6c56:	48 89 e5             	mov    %rsp,%rbp
    6c59:	41 54                	push   %r12
    6c5b:	53                   	push   %rbx
    6c5c:	48 83 ec 30          	sub    $0x30,%rsp
    6c60:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6c64:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6c68:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    6c6c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6c70:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6c74:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6c78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c7c:	48 89 c7             	mov    %rax,%rdi
    6c7f:	e8 5c da ff ff       	call   46e0 <vkCreateSemaphore@plt>
    6c84:	85 c0                	test   %eax,%eax
    6c86:	0f 95 c0             	setne  %al
    6c89:	84 c0                	test   %al,%al
    6c8b:	74 3b                	je     6cc8 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    6c8d:	bf 10 00 00 00       	mov    $0x10,%edi
    6c92:	e8 19 d5 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6c97:	48 89 c3             	mov    %rax,%rbx
    6c9a:	48 8d 05 66 68 01 00 	lea    0x16866(%rip),%rax        # 1d507 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13f>
    6ca1:	48 89 c6             	mov    %rax,%rsi
    6ca4:	48 89 df             	mov    %rbx,%rdi
    6ca7:	e8 84 d4 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6cac:	48 8b 05 f5 92 02 00 	mov    0x292f5(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6cb3:	48 89 c2             	mov    %rax,%rdx
    6cb6:	48 8d 05 83 90 02 00 	lea    0x29083(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cbd:	48 89 c6             	mov    %rax,%rsi
    6cc0:	48 89 df             	mov    %rbx,%rdi
    6cc3:	e8 88 db ff ff       	call   4850 <__cxa_throw@plt>
  }
  return semaphore;
    6cc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ccc:	eb 16                	jmp    6ce4 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    6cce:	49 89 c4             	mov    %rax,%r12
    6cd1:	48 89 df             	mov    %rbx,%rdi
    6cd4:	e8 e7 d5 ff ff       	call   42c0 <__cxa_free_exception@plt>
    6cd9:	4c 89 e0             	mov    %r12,%rax
    6cdc:	48 89 c7             	mov    %rax,%rdi
    6cdf:	e8 cc db ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6ce4:	48 83 c4 30          	add    $0x30,%rsp
    6ce8:	5b                   	pop    %rbx
    6ce9:	41 5c                	pop    %r12
    6ceb:	5d                   	pop    %rbp
    6cec:	c3                   	ret

0000000000006ced <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    6ced:	55                   	push   %rbp
    6cee:	48 89 e5             	mov    %rsp,%rbp
    6cf1:	41 54                	push   %r12
    6cf3:	53                   	push   %rbx
    6cf4:	48 83 ec 30          	sub    $0x30,%rsp
    6cf8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6cfc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6d00:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    6d04:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6d08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6d0c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6d10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d14:	48 89 c7             	mov    %rax,%rdi
    6d17:	e8 d4 d8 ff ff       	call   45f0 <vkCreateFence@plt>
    6d1c:	85 c0                	test   %eax,%eax
    6d1e:	0f 95 c0             	setne  %al
    6d21:	84 c0                	test   %al,%al
    6d23:	74 3b                	je     6d60 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    6d25:	bf 10 00 00 00       	mov    $0x10,%edi
    6d2a:	e8 81 d4 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    6d2f:	48 89 c3             	mov    %rax,%rbx
    6d32:	48 8d 05 ea 67 01 00 	lea    0x167ea(%rip),%rax        # 1d523 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x15b>
    6d39:	48 89 c6             	mov    %rax,%rsi
    6d3c:	48 89 df             	mov    %rbx,%rdi
    6d3f:	e8 ec d3 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    6d44:	48 8b 05 5d 92 02 00 	mov    0x2925d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6d4b:	48 89 c2             	mov    %rax,%rdx
    6d4e:	48 8d 05 eb 8f 02 00 	lea    0x28feb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6d55:	48 89 c6             	mov    %rax,%rsi
    6d58:	48 89 df             	mov    %rbx,%rdi
    6d5b:	e8 f0 da ff ff       	call   4850 <__cxa_throw@plt>
  }
  return fence;
    6d60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d64:	eb 16                	jmp    6d7c <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    6d66:	49 89 c4             	mov    %rax,%r12
    6d69:	48 89 df             	mov    %rbx,%rdi
    6d6c:	e8 4f d5 ff ff       	call   42c0 <__cxa_free_exception@plt>
    6d71:	4c 89 e0             	mov    %r12,%rax
    6d74:	48 89 c7             	mov    %rax,%rdi
    6d77:	e8 34 db ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    6d7c:	48 83 c4 30          	add    $0x30,%rsp
    6d80:	5b                   	pop    %rbx
    6d81:	41 5c                	pop    %r12
    6d83:	5d                   	pop    %rbp
    6d84:	c3                   	ret

0000000000006d85 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    6d85:	55                   	push   %rbp
    6d86:	48 89 e5             	mov    %rsp,%rbp
    6d89:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6d8c:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6d8f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6d92:	0b 45 f8             	or     -0x8(%rbp),%eax
    6d95:	5d                   	pop    %rbp
    6d96:	c3                   	ret
    6d97:	90                   	nop

0000000000006d98 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    6d98:	55                   	push   %rbp
    6d99:	48 89 e5             	mov    %rsp,%rbp
    6d9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6da4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dac:	48 8b 00             	mov    (%rax),%rax
    6daf:	48 29 c2             	sub    %rax,%rdx
    6db2:	48 89 d0             	mov    %rdx,%rax
    6db5:	5d                   	pop    %rbp
    6db6:	c3                   	ret
    6db7:	90                   	nop

0000000000006db8 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    6db8:	55                   	push   %rbp
    6db9:	48 89 e5             	mov    %rsp,%rbp
    6dbc:	48 83 ec 10          	sub    $0x10,%rsp
    6dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dc8:	48 8b 10             	mov    (%rax),%rdx
    6dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dcf:	48 89 d6             	mov    %rdx,%rsi
    6dd2:	48 89 c7             	mov    %rax,%rdi
    6dd5:	e8 24 02 00 00       	call   6ffe <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    6dda:	c9                   	leave
    6ddb:	c3                   	ret

0000000000006ddc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    6ddc:	55                   	push   %rbp
    6ddd:	48 89 e5             	mov    %rsp,%rbp
    6de0:	53                   	push   %rbx
    6de1:	48 83 ec 38          	sub    $0x38,%rsp
    6de5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6de9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6ded:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    6df1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6df5:	48 89 c7             	mov    %rax,%rdi
    6df8:	e8 a1 df ff ff       	call   4d9e <_ZNSt11char_traitsIcE6lengthEPKc>
    6dfd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6e01:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6e05:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6e09:	48 89 d6             	mov    %rdx,%rsi
    6e0c:	48 89 c7             	mov    %rax,%rdi
    6e0f:	e8 0c d3 ff ff       	call   4120 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    6e14:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6e18:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    6e1c:	48 89 d6             	mov    %rdx,%rsi
    6e1f:	48 89 c7             	mov    %rax,%rdi
    6e22:	e8 e9 01 00 00       	call   7010 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    6e27:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    6e2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e2f:	48 89 d6             	mov    %rdx,%rsi
    6e32:	48 89 c7             	mov    %rax,%rdi
    6e35:	e8 26 da ff ff       	call   4860 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    6e3a:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6e3e:	48 89 c7             	mov    %rax,%rdi
    6e41:	e8 ca d6 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    6e46:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6e4a:	48 89 c7             	mov    %rax,%rdi
    6e4d:	e8 be d6 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    6e52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e56:	48 89 c7             	mov    %rax,%rdi
    6e59:	e8 42 d4 ff ff       	call   42a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6e5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e62:	48 01 c2             	add    %rax,%rdx
    6e65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e69:	48 89 d6             	mov    %rdx,%rsi
    6e6c:	48 89 c7             	mov    %rax,%rdi
    6e6f:	e8 2c d9 ff ff       	call   47a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    6e74:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e78:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6e7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e80:	48 89 ce             	mov    %rcx,%rsi
    6e83:	48 89 c7             	mov    %rax,%rdi
    6e86:	e8 b5 d1 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    6e8b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6e8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e93:	48 89 d6             	mov    %rdx,%rsi
    6e96:	48 89 c7             	mov    %rax,%rdi
    6e99:	e8 82 da ff ff       	call   4920 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    6e9e:	eb 34                	jmp    6ed4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6ea0:	48 89 c3             	mov    %rax,%rbx
    6ea3:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6ea7:	48 89 c7             	mov    %rax,%rdi
    6eaa:	e8 61 d6 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    6eaf:	48 89 d8             	mov    %rbx,%rax
    6eb2:	48 89 c7             	mov    %rax,%rdi
    6eb5:	e8 f6 d9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    }
    6eba:	48 89 c3             	mov    %rax,%rbx
    6ebd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ec1:	48 89 c7             	mov    %rax,%rdi
    6ec4:	e8 97 d3 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6ec9:	48 89 d8             	mov    %rbx,%rax
    6ecc:	48 89 c7             	mov    %rax,%rdi
    6ecf:	e8 dc d9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    6ed4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ed8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6edc:	c9                   	leave
    6edd:	c3                   	ret

0000000000006ede <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    6ede:	55                   	push   %rbp
    6edf:	48 89 e5             	mov    %rsp,%rbp
    6ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eea:	48 8b 00             	mov    (%rax),%rax
    6eed:	5d                   	pop    %rbp
    6eee:	c3                   	ret
    6eef:	90                   	nop

0000000000006ef0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6ef0:	55                   	push   %rbp
    6ef1:	48 89 e5             	mov    %rsp,%rbp
    6ef4:	53                   	push   %rbx
    6ef5:	48 83 ec 28          	sub    $0x28,%rsp
    6ef9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6efd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6f01:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6f05:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6f09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6f0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6f11:	48 89 d6             	mov    %rdx,%rsi
    6f14:	48 89 c7             	mov    %rax,%rdi
    6f17:	e8 1d 01 00 00       	call   7039 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    6f1c:	48 89 c1             	mov    %rax,%rcx
    6f1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f23:	48 89 c2             	mov    %rax,%rdx
    6f26:	48 89 ce             	mov    %rcx,%rsi
    6f29:	48 89 df             	mov    %rbx,%rdi
    6f2c:	e8 85 01 00 00       	call   70b6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6f31:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6f35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f39:	48 89 d6             	mov    %rdx,%rsi
    6f3c:	48 89 c7             	mov    %rax,%rdi
    6f3f:	e8 14 02 00 00       	call   7158 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6f44:	eb 1a                	jmp    6f60 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6f46:	48 89 c3             	mov    %rax,%rbx
    6f49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f4d:	48 89 c7             	mov    %rax,%rdi
    6f50:	e8 bf 01 00 00       	call   7114 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6f55:	48 89 d8             	mov    %rbx,%rax
    6f58:	48 89 c7             	mov    %rax,%rdi
    6f5b:	e8 50 d9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    6f60:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f64:	c9                   	leave
    6f65:	c3                   	ret

0000000000006f66 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6f66:	55                   	push   %rbp
    6f67:	48 89 e5             	mov    %rsp,%rbp
    6f6a:	48 83 ec 10          	sub    $0x10,%rsp
    6f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f76:	48 89 c7             	mov    %rax,%rdi
    6f79:	e8 1a 02 00 00       	call   7198 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6f7e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f85:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f8d:	48 8b 00             	mov    (%rax),%rax
    6f90:	48 89 ce             	mov    %rcx,%rsi
    6f93:	48 89 c7             	mov    %rax,%rdi
    6f96:	e8 0b 02 00 00       	call   71a6 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    6f9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f9f:	48 89 c7             	mov    %rax,%rdi
    6fa2:	e8 6d 01 00 00       	call   7114 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6fa7:	90                   	nop
    6fa8:	c9                   	leave
    6fa9:	c3                   	ret

0000000000006faa <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    6faa:	55                   	push   %rbp
    6fab:	48 89 e5             	mov    %rsp,%rbp
    6fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    6fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6fbe:	48 89 10             	mov    %rdx,(%rax)
    6fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fc5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    6fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fd0:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    6fd7:	90                   	nop
    6fd8:	5d                   	pop    %rbp
    6fd9:	c3                   	ret

0000000000006fda <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    6fda:	55                   	push   %rbp
    6fdb:	48 89 e5             	mov    %rsp,%rbp
    6fde:	48 83 ec 10          	sub    $0x10,%rsp
    6fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fea:	48 8b 10             	mov    (%rax),%rdx
    6fed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ff1:	48 89 d6             	mov    %rdx,%rsi
    6ff4:	48 89 c7             	mov    %rax,%rdi
    6ff7:	e8 02 00 00 00       	call   6ffe <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    6ffc:	c9                   	leave
    6ffd:	c3                   	ret

0000000000006ffe <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6ffe:	55                   	push   %rbp
    6fff:	48 89 e5             	mov    %rsp,%rbp
    7002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    700a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    700e:	5d                   	pop    %rbp
    700f:	c3                   	ret

0000000000007010 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    7010:	55                   	push   %rbp
    7011:	48 89 e5             	mov    %rsp,%rbp
    7014:	48 83 ec 10          	sub    $0x10,%rsp
    7018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    701c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    7020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7024:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7028:	48 89 d6             	mov    %rdx,%rsi
    702b:	48 89 c7             	mov    %rax,%rdi
    702e:	e8 a8 01 00 00       	call   71db <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    7033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7037:	c9                   	leave
    7038:	c3                   	ret

0000000000007039 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7039:	55                   	push   %rbp
    703a:	48 89 e5             	mov    %rsp,%rbp
    703d:	53                   	push   %rbx
    703e:	48 83 ec 28          	sub    $0x28,%rsp
    7042:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7046:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    704a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    704e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7052:	48 89 d6             	mov    %rdx,%rsi
    7055:	48 89 c7             	mov    %rax,%rdi
    7058:	e8 b3 d1 ff ff       	call   4210 <_ZNSaIcEC1ERKS_@plt>
    705d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7061:	48 89 c7             	mov    %rax,%rdi
    7064:	e8 9b 01 00 00       	call   7204 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    7069:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    706d:	0f 92 c3             	setb   %bl
    7070:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7074:	48 89 c7             	mov    %rax,%rdi
    7077:	e8 94 d4 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    707c:	84 db                	test   %bl,%bl
    707e:	74 0f                	je     708f <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    7080:	48 8d 05 b9 64 01 00 	lea    0x164b9(%rip),%rax        # 1d540 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x178>
    7087:	48 89 c7             	mov    %rax,%rdi
    708a:	e8 51 d1 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    708f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7093:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7097:	c9                   	leave
    7098:	c3                   	ret
    7099:	90                   	nop

000000000000709a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    709a:	55                   	push   %rbp
    709b:	48 89 e5             	mov    %rsp,%rbp
    709e:	48 83 ec 10          	sub    $0x10,%rsp
    70a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70aa:	48 89 c7             	mov    %rax,%rdi
    70ad:	e8 be cf ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    70b2:	90                   	nop
    70b3:	c9                   	leave
    70b4:	c3                   	ret
    70b5:	90                   	nop

00000000000070b6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    70b6:	55                   	push   %rbp
    70b7:	48 89 e5             	mov    %rsp,%rbp
    70ba:	53                   	push   %rbx
    70bb:	48 83 ec 28          	sub    $0x28,%rsp
    70bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    70c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    70cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    70d3:	48 89 d6             	mov    %rdx,%rsi
    70d6:	48 89 c7             	mov    %rax,%rdi
    70d9:	e8 68 01 00 00       	call   7246 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    70de:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    70e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70e6:	48 89 d6             	mov    %rdx,%rsi
    70e9:	48 89 c7             	mov    %rax,%rdi
    70ec:	e8 87 01 00 00       	call   7278 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    70f1:	eb 1a                	jmp    710d <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    70f3:	48 89 c3             	mov    %rax,%rbx
    70f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70fa:	48 89 c7             	mov    %rax,%rdi
    70fd:	e8 98 ff ff ff       	call   709a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7102:	48 89 d8             	mov    %rbx,%rax
    7105:	48 89 c7             	mov    %rax,%rdi
    7108:	e8 a3 d7 ff ff       	call   48b0 <_Unwind_Resume@plt>
    710d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7111:	c9                   	leave
    7112:	c3                   	ret
    7113:	90                   	nop

0000000000007114 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7114:	55                   	push   %rbp
    7115:	48 89 e5             	mov    %rsp,%rbp
    7118:	48 83 ec 10          	sub    $0x10,%rsp
    711c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7124:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    712c:	48 8b 00             	mov    (%rax),%rax
    712f:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    7132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7136:	48 8b 08             	mov    (%rax),%rcx
    7139:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    713d:	48 89 ce             	mov    %rcx,%rsi
    7140:	48 89 c7             	mov    %rax,%rdi
    7143:	e8 82 01 00 00       	call   72ca <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    7148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    714c:	48 89 c7             	mov    %rax,%rdi
    714f:	e8 46 ff ff ff       	call   709a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    7154:	90                   	nop
    7155:	c9                   	leave
    7156:	c3                   	ret
    7157:	90                   	nop

0000000000007158 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7158:	55                   	push   %rbp
    7159:	48 89 e5             	mov    %rsp,%rbp
    715c:	48 83 ec 10          	sub    $0x10,%rsp
    7160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    716c:	48 89 c7             	mov    %rax,%rdi
    716f:	e8 24 00 00 00       	call   7198 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    7174:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    717b:	48 8b 00             	mov    (%rax),%rax
    717e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7182:	48 89 ce             	mov    %rcx,%rsi
    7185:	48 89 c7             	mov    %rax,%rdi
    7188:	e8 72 01 00 00       	call   72ff <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    718d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7191:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7195:	90                   	nop
    7196:	c9                   	leave
    7197:	c3                   	ret

0000000000007198 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7198:	55                   	push   %rbp
    7199:	48 89 e5             	mov    %rsp,%rbp
    719c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    71a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71a4:	5d                   	pop    %rbp
    71a5:	c3                   	ret

00000000000071a6 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    71a6:	55                   	push   %rbp
    71a7:	48 89 e5             	mov    %rsp,%rbp
    71aa:	48 83 ec 20          	sub    $0x20,%rsp
    71ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    71b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    71ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c2:	48 89 d6             	mov    %rdx,%rsi
    71c5:	48 89 c7             	mov    %rax,%rdi
    71c8:	e8 5b 01 00 00       	call   7328 <_ZSt8_DestroyIPcEvT_S1_>
    }
    71cd:	90                   	nop
    71ce:	c9                   	leave
    71cf:	c3                   	ret

00000000000071d0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    71d0:	55                   	push   %rbp
    71d1:	48 89 e5             	mov    %rsp,%rbp
    71d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    71d8:	90                   	nop
    71d9:	5d                   	pop    %rbp
    71da:	c3                   	ret

00000000000071db <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    71db:	55                   	push   %rbp
    71dc:	48 89 e5             	mov    %rsp,%rbp
    71df:	48 83 ec 10          	sub    $0x10,%rsp
    71e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    71eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f3:	48 89 d6             	mov    %rdx,%rsi
    71f6:	48 89 c7             	mov    %rax,%rdi
    71f9:	e8 12 d0 ff ff       	call   4210 <_ZNSaIcEC1ERKS_@plt>
    71fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7202:	c9                   	leave
    7203:	c3                   	ret

0000000000007204 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7204:	55                   	push   %rbp
    7205:	48 89 e5             	mov    %rsp,%rbp
    7208:	48 83 ec 20          	sub    $0x20,%rsp
    720c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7210:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7217:	ff ff 7f 
    721a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    721e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7222:	48 89 c7             	mov    %rax,%rdi
    7225:	e8 52 01 00 00       	call   737c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    722a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    722e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7232:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7236:	48 89 d6             	mov    %rdx,%rsi
    7239:	48 89 c7             	mov    %rax,%rdi
    723c:	e8 ef e3 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    7241:	48 8b 00             	mov    (%rax),%rax
      }
    7244:	c9                   	leave
    7245:	c3                   	ret

0000000000007246 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7246:	55                   	push   %rbp
    7247:	48 89 e5             	mov    %rsp,%rbp
    724a:	48 83 ec 10          	sub    $0x10,%rsp
    724e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7252:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7256:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    725a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    725e:	48 89 d6             	mov    %rdx,%rsi
    7261:	48 89 c7             	mov    %rax,%rdi
    7264:	e8 b7 d4 ff ff       	call   4720 <_ZNSaIcEC2ERKS_@plt>
    7269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    726d:	48 89 c7             	mov    %rax,%rdi
    7270:	e8 21 01 00 00       	call   7396 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    7275:	90                   	nop
    7276:	c9                   	leave
    7277:	c3                   	ret

0000000000007278 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7278:	55                   	push   %rbp
    7279:	48 89 e5             	mov    %rsp,%rbp
    727c:	48 83 ec 10          	sub    $0x10,%rsp
    7280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7284:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7288:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    728c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7290:	48 89 d6             	mov    %rdx,%rsi
    7293:	48 89 c7             	mov    %rax,%rdi
    7296:	e8 29 01 00 00       	call   73c4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    729b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    729f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    72a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72a6:	48 8b 10             	mov    (%rax),%rdx
    72a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    72b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72b5:	48 8b 10             	mov    (%rax),%rdx
    72b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72bc:	48 01 c2             	add    %rax,%rdx
    72bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72c3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    72c7:	90                   	nop
    72c8:	c9                   	leave
    72c9:	c3                   	ret

00000000000072ca <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    72ca:	55                   	push   %rbp
    72cb:	48 89 e5             	mov    %rsp,%rbp
    72ce:	48 83 ec 20          	sub    $0x20,%rsp
    72d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    72de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    72e3:	74 17                	je     72fc <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    72e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    72f1:	48 89 ce             	mov    %rcx,%rsi
    72f4:	48 89 c7             	mov    %rax,%rdi
    72f7:	e8 52 00 00 00       	call   734e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    72fc:	90                   	nop
    72fd:	c9                   	leave
    72fe:	c3                   	ret

00000000000072ff <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    72ff:	55                   	push   %rbp
    7300:	48 89 e5             	mov    %rsp,%rbp
    7303:	48 83 ec 20          	sub    $0x20,%rsp
    7307:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    730b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    730f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7313:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    731b:	48 89 d6             	mov    %rdx,%rsi
    731e:	48 89 c7             	mov    %rax,%rdi
    7321:	e8 d1 00 00 00       	call   73f7 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    7326:	c9                   	leave
    7327:	c3                   	ret

0000000000007328 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7328:	55                   	push   %rbp
    7329:	48 89 e5             	mov    %rsp,%rbp
    732c:	48 83 ec 10          	sub    $0x10,%rsp
    7330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7334:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7338:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    733c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7340:	48 89 d6             	mov    %rdx,%rsi
    7343:	48 89 c7             	mov    %rax,%rdi
    7346:	e8 d5 00 00 00       	call   7420 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    734b:	90                   	nop
    734c:	c9                   	leave
    734d:	c3                   	ret

000000000000734e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    734e:	55                   	push   %rbp
    734f:	48 89 e5             	mov    %rsp,%rbp
    7352:	48 83 ec 20          	sub    $0x20,%rsp
    7356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    735a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    735e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7362:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7366:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    736a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    736e:	48 89 ce             	mov    %rcx,%rsi
    7371:	48 89 c7             	mov    %rax,%rdi
    7374:	e8 c5 00 00 00       	call   743e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    7379:	90                   	nop
    737a:	c9                   	leave
    737b:	c3                   	ret

000000000000737c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    737c:	55                   	push   %rbp
    737d:	48 89 e5             	mov    %rsp,%rbp
    7380:	48 83 ec 10          	sub    $0x10,%rsp
    7384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738c:	48 89 c7             	mov    %rax,%rdi
    738f:	e8 d4 00 00 00       	call   7468 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    7394:	c9                   	leave
    7395:	c3                   	ret

0000000000007396 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7396:	55                   	push   %rbp
    7397:	48 89 e5             	mov    %rsp,%rbp
    739a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    739e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    73a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    73b4:	00 
    73b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73b9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    73c0:	00 
	{ }
    73c1:	90                   	nop
    73c2:	5d                   	pop    %rbp
    73c3:	c3                   	ret

00000000000073c4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    73c4:	55                   	push   %rbp
    73c5:	48 89 e5             	mov    %rsp,%rbp
    73c8:	48 83 ec 10          	sub    $0x10,%rsp
    73cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    73d4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    73d9:	74 15                	je     73f0 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    73db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    73e3:	48 89 d6             	mov    %rdx,%rsi
    73e6:	48 89 c7             	mov    %rax,%rdi
    73e9:	e8 94 00 00 00       	call   7482 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    73ee:	eb 05                	jmp    73f5 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    73f0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    73f5:	c9                   	leave
    73f6:	c3                   	ret

00000000000073f7 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    73f7:	55                   	push   %rbp
    73f8:	48 89 e5             	mov    %rsp,%rbp
    73fb:	48 83 ec 20          	sub    $0x20,%rsp
    73ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7403:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7407:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    740b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    740f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7413:	48 89 d6             	mov    %rdx,%rsi
    7416:	48 89 c7             	mov    %rax,%rdi
    7419:	e8 8e 00 00 00       	call   74ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    741e:	c9                   	leave
    741f:	c3                   	ret

0000000000007420 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7420:	55                   	push   %rbp
    7421:	48 89 e5             	mov    %rsp,%rbp
    7424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7428:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    742c:	90                   	nop
    742d:	5d                   	pop    %rbp
    742e:	c3                   	ret

000000000000742f <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    742f:	55                   	push   %rbp
    7430:	48 89 e5             	mov    %rsp,%rbp
    7433:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    743b:	5d                   	pop    %rbp
    743c:	c3                   	ret
    743d:	90                   	nop

000000000000743e <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    743e:	55                   	push   %rbp
    743f:	48 89 e5             	mov    %rsp,%rbp
    7442:	48 83 ec 20          	sub    $0x20,%rsp
    7446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    744a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    744e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7452:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7456:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    745a:	48 89 d6             	mov    %rdx,%rsi
    745d:	48 89 c7             	mov    %rax,%rdi
    7460:	e8 1b d0 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    7465:	c9                   	leave
    7466:	c3                   	ret
    7467:	90                   	nop

0000000000007468 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7468:	55                   	push   %rbp
    7469:	48 89 e5             	mov    %rsp,%rbp
    746c:	48 83 ec 10          	sub    $0x10,%rsp
    7470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7478:	48 89 c7             	mov    %rax,%rdi
    747b:	e8 8a 00 00 00       	call   750a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    7480:	c9                   	leave
    7481:	c3                   	ret

0000000000007482 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    7482:	55                   	push   %rbp
    7483:	48 89 e5             	mov    %rsp,%rbp
    7486:	48 83 ec 10          	sub    $0x10,%rsp
    748a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    748e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7492:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    749a:	ba 00 00 00 00       	mov    $0x0,%edx
    749f:	48 89 ce             	mov    %rcx,%rsi
    74a2:	48 89 c7             	mov    %rax,%rdi
    74a5:	e8 74 00 00 00       	call   751e <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    74aa:	c9                   	leave
    74ab:	c3                   	ret

00000000000074ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    74ac:	55                   	push   %rbp
    74ad:	48 89 e5             	mov    %rsp,%rbp
    74b0:	48 83 ec 20          	sub    $0x20,%rsp
    74b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    74b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    74bc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    74c1:	74 40                	je     7503 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    74c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74c7:	48 89 c7             	mov    %rax,%rdi
    74ca:	e8 60 ff ff ff       	call   742f <_ZSt11__addressofIcEPT_RS0_>
    74cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    74d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74d7:	48 89 c7             	mov    %rax,%rdi
    74da:	e8 87 00 00 00       	call   7566 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    74df:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    74e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    74e8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    74ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    74f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74f4:	48 89 ce             	mov    %rcx,%rsi
    74f7:	48 89 c7             	mov    %rax,%rdi
    74fa:	e8 8a 00 00 00       	call   7589 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    74ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7503:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7507:	c9                   	leave
    7508:	c3                   	ret
    7509:	90                   	nop

000000000000750a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    750a:	55                   	push   %rbp
    750b:	48 89 e5             	mov    %rsp,%rbp
    750e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7512:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    7519:	ff ff 7f 
      }
    751c:	5d                   	pop    %rbp
    751d:	c3                   	ret

000000000000751e <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    751e:	55                   	push   %rbp
    751f:	48 89 e5             	mov    %rsp,%rbp
    7522:	48 83 ec 20          	sub    $0x20,%rsp
    7526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    752a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    752e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7536:	48 89 c7             	mov    %rax,%rdi
    7539:	e8 cc ff ff ff       	call   750a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    753e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7542:	0f 92 c0             	setb   %al
    7545:	0f b6 c0             	movzbl %al,%eax
    7548:	48 85 c0             	test   %rax,%rax
    754b:	0f 95 c0             	setne  %al
    754e:	84 c0                	test   %al,%al
    7550:	74 05                	je     7557 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    7552:	e8 b9 cb ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7557:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    755b:	48 89 c7             	mov    %rax,%rdi
    755e:	e8 fd ce ff ff       	call   4460 <_Znwm@plt>
    7563:	90                   	nop
      }
    7564:	c9                   	leave
    7565:	c3                   	ret

0000000000007566 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7566:	55                   	push   %rbp
    7567:	48 89 e5             	mov    %rsp,%rbp
    756a:	48 83 ec 10          	sub    $0x10,%rsp
    756e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7576:	48 89 c6             	mov    %rax,%rsi
    7579:	bf 01 00 00 00       	mov    $0x1,%edi
    757e:	e8 1c e6 ff ff       	call   5b9f <_ZnwmPv>
    7583:	c6 00 00             	movb   $0x0,(%rax)
    }
    7586:	90                   	nop
    7587:	c9                   	leave
    7588:	c3                   	ret

0000000000007589 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7589:	55                   	push   %rbp
    758a:	48 89 e5             	mov    %rsp,%rbp
    758d:	48 83 ec 20          	sub    $0x20,%rsp
    7591:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7595:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7599:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    759d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    75a1:	48 89 c7             	mov    %rax,%rdi
    75a4:	e8 27 fc ff ff       	call   71d0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    75a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75ad:	48 89 c7             	mov    %rax,%rdi
    75b0:	e8 fc e5 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    75b5:	48 89 c1             	mov    %rax,%rcx
    75b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    75c0:	48 89 ce             	mov    %rcx,%rsi
    75c3:	48 89 c7             	mov    %rax,%rdi
    75c6:	e8 02 00 00 00       	call   75cd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    75cb:	c9                   	leave
    75cc:	c3                   	ret

00000000000075cd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    75cd:	55                   	push   %rbp
    75ce:	48 89 e5             	mov    %rsp,%rbp
    75d1:	48 83 ec 20          	sub    $0x20,%rsp
    75d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    75dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    75e1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    75e6:	75 06                	jne    75ee <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    75e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75ec:	eb 2a                	jmp    7618 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    75ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    75f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75f6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    75fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    75fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7602:	48 89 ce             	mov    %rcx,%rsi
    7605:	48 89 c7             	mov    %rax,%rdi
    7608:	e8 0d 00 00 00       	call   761a <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    760d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7611:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7615:	48 01 d0             	add    %rdx,%rax
    }
    7618:	c9                   	leave
    7619:	c3                   	ret

000000000000761a <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    761a:	55                   	push   %rbp
    761b:	48 89 e5             	mov    %rsp,%rbp
    761e:	48 83 ec 20          	sub    $0x20,%rsp
    7622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7626:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    762a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    762e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7632:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    763a:	48 89 ce             	mov    %rcx,%rsi
    763d:	48 89 c7             	mov    %rax,%rdi
    7640:	e8 03 00 00 00       	call   7648 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    7645:	90                   	nop
    7646:	c9                   	leave
    7647:	c3                   	ret

0000000000007648 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    7648:	55                   	push   %rbp
    7649:	48 89 e5             	mov    %rsp,%rbp
    764c:	48 83 ec 30          	sub    $0x30,%rsp
    7650:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7654:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7658:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    765c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7660:	0f b6 00             	movzbl (%rax),%eax
    7663:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    7666:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    766a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    766e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7672:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7677:	74 19                	je     7692 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    7679:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    767d:	0f b6 c8             	movzbl %al,%ecx
    7680:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7688:	89 ce                	mov    %ecx,%esi
    768a:	48 89 c7             	mov    %rax,%rdi
    768d:	e8 6e cb ff ff       	call   4200 <memset@plt>
    }
    7692:	90                   	nop
    7693:	c9                   	leave
    7694:	c3                   	ret

0000000000007695 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    7695:	55                   	push   %rbp
    7696:	48 89 e5             	mov    %rsp,%rbp
    7699:	48 83 ec 10          	sub    $0x10,%rsp
    769d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76a5:	48 89 c7             	mov    %rax,%rdi
    76a8:	e8 53 ca ff ff       	call   4100 <glfwDestroyWindow@plt>
    76ad:	90                   	nop
    76ae:	c9                   	leave
    76af:	c3                   	ret

00000000000076b0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    76b0:	55                   	push   %rbp
    76b1:	48 89 e5             	mov    %rsp,%rbp
    76b4:	48 83 ec 10          	sub    $0x10,%rsp
    76b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    76c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    76c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76c8:	48 89 d6             	mov    %rdx,%rsi
    76cb:	48 89 c7             	mov    %rax,%rdi
    76ce:	e8 bd cd ff ff       	call   4490 <vkDestroyInstance@plt>
}
    76d3:	90                   	nop
    76d4:	c9                   	leave
    76d5:	c3                   	ret

00000000000076d6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    76d6:	55                   	push   %rbp
    76d7:	48 89 e5             	mov    %rsp,%rbp
    76da:	48 83 ec 10          	sub    $0x10,%rsp
    76de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    76e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    76ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ee:	48 89 d6             	mov    %rdx,%rsi
    76f1:	48 89 c7             	mov    %rax,%rdi
    76f4:	e8 47 cc ff ff       	call   4340 <vkDestroyDevice@plt>
}
    76f9:	90                   	nop
    76fa:	c9                   	leave
    76fb:	c3                   	ret

00000000000076fc <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    76fc:	55                   	push   %rbp
    76fd:	48 89 e5             	mov    %rsp,%rbp
    7700:	48 83 ec 20          	sub    $0x20,%rsp
    7704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7708:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    770c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    7710:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7714:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    771c:	48 89 ce             	mov    %rcx,%rsi
    771f:	48 89 c7             	mov    %rax,%rdi
    7722:	e8 79 d1 ff ff       	call   48a0 <vkDestroySurfaceKHR@plt>
}
    7727:	90                   	nop
    7728:	c9                   	leave
    7729:	c3                   	ret

000000000000772a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    772a:	55                   	push   %rbp
    772b:	48 89 e5             	mov    %rsp,%rbp
    772e:	48 83 ec 20          	sub    $0x20,%rsp
    7732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    773a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    773e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7742:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    774a:	48 89 ce             	mov    %rcx,%rsi
    774d:	48 89 c7             	mov    %rax,%rdi
    7750:	e8 8b c9 ff ff       	call   40e0 <vkDestroySwapchainKHR@plt>
}
    7755:	90                   	nop
    7756:	c9                   	leave
    7757:	c3                   	ret

0000000000007758 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    7758:	55                   	push   %rbp
    7759:	48 89 e5             	mov    %rsp,%rbp
    775c:	48 83 ec 20          	sub    $0x20,%rsp
    7760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7764:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7768:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    776c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7770:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7778:	48 89 ce             	mov    %rcx,%rsi
    777b:	48 89 c7             	mov    %rax,%rdi
    777e:	e8 4d d1 ff ff       	call   48d0 <vkDestroyImageView@plt>
}
    7783:	90                   	nop
    7784:	c9                   	leave
    7785:	c3                   	ret

0000000000007786 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    7786:	55                   	push   %rbp
    7787:	48 89 e5             	mov    %rsp,%rbp
    778a:	48 83 ec 20          	sub    $0x20,%rsp
    778e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7792:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7796:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    779a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    779e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    77a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a6:	48 89 ce             	mov    %rcx,%rsi
    77a9:	48 89 c7             	mov    %rax,%rdi
    77ac:	e8 0f ce ff ff       	call   45c0 <vkDestroyShaderModule@plt>
}
    77b1:	90                   	nop
    77b2:	c9                   	leave
    77b3:	c3                   	ret

00000000000077b4 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    77b4:	55                   	push   %rbp
    77b5:	48 89 e5             	mov    %rsp,%rbp
    77b8:	48 83 ec 20          	sub    $0x20,%rsp
    77bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    77c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    77d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77d4:	48 89 ce             	mov    %rcx,%rsi
    77d7:	48 89 c7             	mov    %rax,%rdi
    77da:	e8 31 ce ff ff       	call   4610 <vkDestroyPipelineLayout@plt>
}
    77df:	90                   	nop
    77e0:	c9                   	leave
    77e1:	c3                   	ret

00000000000077e2 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    77e2:	55                   	push   %rbp
    77e3:	48 89 e5             	mov    %rsp,%rbp
    77e6:	48 83 ec 20          	sub    $0x20,%rsp
    77ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    77f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    77fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7802:	48 89 ce             	mov    %rcx,%rsi
    7805:	48 89 c7             	mov    %rax,%rdi
    7808:	e8 23 cc ff ff       	call   4430 <vkDestroyRenderPass@plt>
}
    780d:	90                   	nop
    780e:	c9                   	leave
    780f:	c3                   	ret

0000000000007810 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    7810:	55                   	push   %rbp
    7811:	48 89 e5             	mov    %rsp,%rbp
    7814:	48 83 ec 20          	sub    $0x20,%rsp
    7818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    781c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7820:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    7824:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7828:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    782c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7830:	48 89 ce             	mov    %rcx,%rsi
    7833:	48 89 c7             	mov    %rax,%rdi
    7836:	e8 f5 cc ff ff       	call   4530 <vkDestroyPipeline@plt>
}
    783b:	90                   	nop
    783c:	c9                   	leave
    783d:	c3                   	ret

000000000000783e <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    783e:	55                   	push   %rbp
    783f:	48 89 e5             	mov    %rsp,%rbp
    7842:	48 83 ec 40          	sub    $0x40,%rsp
    7846:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    784a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    784e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    7852:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7856:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    785a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    785e:	48 89 c7             	mov    %rax,%rdi
    7861:	e8 20 01 00 00       	call   7986 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    7866:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    786a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    786e:	48 89 c7             	mov    %rax,%rdi
    7871:	e8 36 01 00 00       	call   79ac <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    7876:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    787a:	eb 36                	jmp    78b2 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    787c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7880:	48 89 c7             	mov    %rax,%rdi
    7883:	e8 a8 01 00 00       	call   7a30 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    7888:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    788c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7890:	48 8b 08             	mov    (%rax),%rcx
    7893:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7897:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    789b:	48 89 ce             	mov    %rcx,%rsi
    789e:	48 89 c7             	mov    %rax,%rdi
    78a1:	e8 8a cc ff ff       	call   4530 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    78a6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    78aa:	48 89 c7             	mov    %rax,%rdi
    78ad:	e8 5e 01 00 00       	call   7a10 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    78b2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    78b6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    78ba:	48 89 d6             	mov    %rdx,%rsi
    78bd:	48 89 c7             	mov    %rax,%rdi
    78c0:	e8 10 01 00 00       	call   79d5 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    78c5:	84 c0                	test   %al,%al
    78c7:	75 b3                	jne    787c <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    78c9:	90                   	nop
    78ca:	90                   	nop
    78cb:	c9                   	leave
    78cc:	c3                   	ret

00000000000078cd <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    78cd:	55                   	push   %rbp
    78ce:	48 89 e5             	mov    %rsp,%rbp
    78d1:	48 83 ec 20          	sub    $0x20,%rsp
    78d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    78e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    78e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78ed:	48 89 ce             	mov    %rcx,%rsi
    78f0:	48 89 c7             	mov    %rax,%rdi
    78f3:	e8 48 cf ff ff       	call   4840 <vkDestroyFramebuffer@plt>
}
    78f8:	90                   	nop
    78f9:	c9                   	leave
    78fa:	c3                   	ret

00000000000078fb <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    78fb:	55                   	push   %rbp
    78fc:	48 89 e5             	mov    %rsp,%rbp
    78ff:	48 83 ec 20          	sub    $0x20,%rsp
    7903:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7907:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    790b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    790f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7913:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    791b:	48 89 ce             	mov    %rcx,%rsi
    791e:	48 89 c7             	mov    %rax,%rdi
    7921:	e8 da cd ff ff       	call   4700 <vkDestroyCommandPool@plt>
}
    7926:	90                   	nop
    7927:	c9                   	leave
    7928:	c3                   	ret

0000000000007929 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    7929:	55                   	push   %rbp
    792a:	48 89 e5             	mov    %rsp,%rbp
    792d:	48 83 ec 20          	sub    $0x20,%rsp
    7931:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7935:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7939:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    793d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7941:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7949:	48 89 ce             	mov    %rcx,%rsi
    794c:	48 89 c7             	mov    %rax,%rdi
    794f:	e8 9c c7 ff ff       	call   40f0 <vkDestroySemaphore@plt>
}
    7954:	90                   	nop
    7955:	c9                   	leave
    7956:	c3                   	ret

0000000000007957 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    7957:	55                   	push   %rbp
    7958:	48 89 e5             	mov    %rsp,%rbp
    795b:	48 83 ec 20          	sub    $0x20,%rsp
    795f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7963:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7967:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    796b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    796f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7977:	48 89 ce             	mov    %rcx,%rsi
    797a:	48 89 c7             	mov    %rax,%rdi
    797d:	e8 9e cb ff ff       	call   4520 <vkDestroyFence@plt>
}
    7982:	90                   	nop
    7983:	c9                   	leave
    7984:	c3                   	ret
    7985:	90                   	nop

0000000000007986 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7986:	55                   	push   %rbp
    7987:	48 89 e5             	mov    %rsp,%rbp
    798a:	48 83 ec 20          	sub    $0x20,%rsp
    798e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    7992:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7996:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    799a:	48 89 d6             	mov    %rdx,%rsi
    799d:	48 89 c7             	mov    %rax,%rdi
    79a0:	e8 9d 00 00 00       	call   7a42 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    79a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79a9:	c9                   	leave
    79aa:	c3                   	ret
    79ab:	90                   	nop

00000000000079ac <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    79ac:	55                   	push   %rbp
    79ad:	48 89 e5             	mov    %rsp,%rbp
    79b0:	48 83 ec 20          	sub    $0x20,%rsp
    79b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    79b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79bc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    79c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    79c4:	48 89 d6             	mov    %rdx,%rsi
    79c7:	48 89 c7             	mov    %rax,%rdi
    79ca:	e8 73 00 00 00       	call   7a42 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    79cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79d3:	c9                   	leave
    79d4:	c3                   	ret

00000000000079d5 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    79d5:	55                   	push   %rbp
    79d6:	48 89 e5             	mov    %rsp,%rbp
    79d9:	53                   	push   %rbx
    79da:	48 83 ec 18          	sub    $0x18,%rsp
    79de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    79e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79ea:	48 89 c7             	mov    %rax,%rdi
    79ed:	e8 6e 00 00 00       	call   7a60 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    79f2:	48 8b 18             	mov    (%rax),%rbx
    79f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79f9:	48 89 c7             	mov    %rax,%rdi
    79fc:	e8 5f 00 00 00       	call   7a60 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    7a01:	48 8b 00             	mov    (%rax),%rax
    7a04:	48 39 c3             	cmp    %rax,%rbx
    7a07:	0f 95 c0             	setne  %al
    7a0a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a0e:	c9                   	leave
    7a0f:	c3                   	ret

0000000000007a10 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    7a10:	55                   	push   %rbp
    7a11:	48 89 e5             	mov    %rsp,%rbp
    7a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a1c:	48 8b 00             	mov    (%rax),%rax
    7a1f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a27:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    7a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7a2e:	5d                   	pop    %rbp
    7a2f:	c3                   	ret

0000000000007a30 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7a30:	55                   	push   %rbp
    7a31:	48 89 e5             	mov    %rsp,%rbp
    7a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    7a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a3c:	48 8b 00             	mov    (%rax),%rax
    7a3f:	5d                   	pop    %rbp
    7a40:	c3                   	ret
    7a41:	90                   	nop

0000000000007a42 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    7a42:	55                   	push   %rbp
    7a43:	48 89 e5             	mov    %rsp,%rbp
    7a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    7a4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a52:	48 8b 10             	mov    (%rax),%rdx
    7a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a59:	48 89 10             	mov    %rdx,(%rax)
    7a5c:	90                   	nop
    7a5d:	5d                   	pop    %rbp
    7a5e:	c3                   	ret
    7a5f:	90                   	nop

0000000000007a60 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    7a60:	55                   	push   %rbp
    7a61:	48 89 e5             	mov    %rsp,%rbp
    7a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    7a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a6c:	5d                   	pop    %rbp
    7a6d:	c3                   	ret

0000000000007a6e <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    7a6e:	55                   	push   %rbp
    7a6f:	48 89 e5             	mov    %rsp,%rbp
    7a72:	53                   	push   %rbx
    7a73:	48 83 ec 28          	sub    $0x28,%rsp
    7a77:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    7a7b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7a7f:	be 00 00 00 00       	mov    $0x0,%esi
    7a84:	48 89 c7             	mov    %rax,%rdi
    7a87:	e8 d4 ca ff ff       	call   4560 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7a8c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7a8f:	89 c3                	mov    %eax,%ebx
    7a91:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a95:	48 89 c7             	mov    %rax,%rdi
    7a98:	e8 47 11 00 00       	call   8be4 <_ZNSaI17VkLayerPropertiesEC1Ev>
    7a9d:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7aa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7aa5:	48 89 de             	mov    %rbx,%rsi
    7aa8:	48 89 c7             	mov    %rax,%rdi
    7aab:	e8 6c 11 00 00       	call   8c1c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    7ab0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7ab4:	48 89 c7             	mov    %rax,%rdi
    7ab7:	e8 44 11 00 00       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    7abc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ac0:	48 89 c7             	mov    %rax,%rdi
    7ac3:	e8 0e 12 00 00       	call   8cd6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7ac8:	48 89 c2             	mov    %rax,%rdx
    7acb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7acf:	48 89 d6             	mov    %rdx,%rsi
    7ad2:	48 89 c7             	mov    %rax,%rdi
    7ad5:	e8 86 ca ff ff       	call   4560 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    7ada:	eb 34                	jmp    7b10 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7adc:	48 89 c3             	mov    %rax,%rbx
    7adf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7ae3:	48 89 c7             	mov    %rax,%rdi
    7ae6:	e8 15 11 00 00       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
    7aeb:	48 89 d8             	mov    %rbx,%rax
    7aee:	48 89 c7             	mov    %rax,%rdi
    7af1:	e8 ba cd ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    7af6:	48 89 c3             	mov    %rax,%rbx
    7af9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7afd:	48 89 c7             	mov    %rax,%rdi
    7b00:	e8 8d 11 00 00       	call   8c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7b05:	48 89 d8             	mov    %rbx,%rax
    7b08:	48 89 c7             	mov    %rax,%rdi
    7b0b:	e8 a0 cd ff ff       	call   48b0 <_Unwind_Resume@plt>
    7b10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b18:	c9                   	leave
    7b19:	c3                   	ret

0000000000007b1a <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    7b1a:	55                   	push   %rbp
    7b1b:	48 89 e5             	mov    %rsp,%rbp
    7b1e:	41 54                	push   %r12
    7b20:	53                   	push   %rbx
    7b21:	48 83 ec 20          	sub    $0x20,%rsp
    7b25:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7b29:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7b2d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7b31:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b35:	ba 00 00 00 00       	mov    $0x0,%edx
    7b3a:	48 89 ce             	mov    %rcx,%rsi
    7b3d:	48 89 c7             	mov    %rax,%rdi
    7b40:	e8 1b c8 ff ff       	call   4360 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    7b45:	85 c0                	test   %eax,%eax
    7b47:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7b4a:	84 c0                	test   %al,%al
    7b4c:	74 3b                	je     7b89 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    7b4e:	bf 10 00 00 00       	mov    $0x10,%edi
    7b53:	e8 58 c6 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    7b58:	48 89 c3             	mov    %rax,%rbx
    7b5b:	48 8d 05 76 66 01 00 	lea    0x16676(%rip),%rax        # 1e1d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    7b62:	48 89 c6             	mov    %rax,%rsi
    7b65:	48 89 df             	mov    %rbx,%rdi
    7b68:	e8 c3 c5 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7b6d:	48 8b 05 34 84 02 00 	mov    0x28434(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b74:	48 89 c2             	mov    %rax,%rdx
    7b77:	48 8d 05 c2 81 02 00 	lea    0x281c2(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b7e:	48 89 c6             	mov    %rax,%rsi
    7b81:	48 89 df             	mov    %rbx,%rdi
    7b84:	e8 c7 cc ff ff       	call   4850 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    7b89:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7b8c:	89 c3                	mov    %eax,%ebx
    7b8e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b92:	48 89 c7             	mov    %rax,%rdi
    7b95:	e8 b8 11 00 00       	call   8d52 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    7b9a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7b9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ba2:	48 89 de             	mov    %rbx,%rsi
    7ba5:	48 89 c7             	mov    %rax,%rdi
    7ba8:	e8 dd 11 00 00       	call   8d8a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    7bad:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7bb1:	48 89 c7             	mov    %rax,%rdi
    7bb4:	e8 b5 11 00 00       	call   8d6e <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7bb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7bbd:	48 89 c7             	mov    %rax,%rdi
    7bc0:	e8 7f 12 00 00       	call   8e44 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7bc5:	48 89 c2             	mov    %rax,%rdx
    7bc8:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7bcc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7bd0:	48 89 ce             	mov    %rcx,%rsi
    7bd3:	48 89 c7             	mov    %rax,%rdi
    7bd6:	e8 85 c7 ff ff       	call   4360 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    7bdb:	85 c0                	test   %eax,%eax
    7bdd:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7be0:	84 c0                	test   %al,%al
    7be2:	0f 84 95 00 00 00    	je     7c7d <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    7be8:	bf 10 00 00 00       	mov    $0x10,%edi
    7bed:	e8 be c5 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    7bf2:	48 89 c3             	mov    %rax,%rbx
    7bf5:	48 8d 05 dc 65 01 00 	lea    0x165dc(%rip),%rax        # 1e1d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    7bfc:	48 89 c6             	mov    %rax,%rsi
    7bff:	48 89 df             	mov    %rbx,%rdi
    7c02:	e8 29 c5 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7c07:	48 8b 05 9a 83 02 00 	mov    0x2839a(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c0e:	48 89 c2             	mov    %rax,%rdx
    7c11:	48 8d 05 28 81 02 00 	lea    0x28128(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c18:	48 89 c6             	mov    %rax,%rsi
    7c1b:	48 89 df             	mov    %rbx,%rdi
    7c1e:	e8 2d cc ff ff       	call   4850 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7c23:	49 89 c4             	mov    %rax,%r12
    7c26:	48 89 df             	mov    %rbx,%rdi
    7c29:	e8 92 c6 ff ff       	call   42c0 <__cxa_free_exception@plt>
    7c2e:	4c 89 e0             	mov    %r12,%rax
    7c31:	48 89 c7             	mov    %rax,%rdi
    7c34:	e8 77 cc ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    7c39:	48 89 c3             	mov    %rax,%rbx
    7c3c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c40:	48 89 c7             	mov    %rax,%rdi
    7c43:	e8 26 11 00 00       	call   8d6e <_ZNSaI21VkExtensionPropertiesED1Ev>
    7c48:	48 89 d8             	mov    %rbx,%rax
    7c4b:	48 89 c7             	mov    %rax,%rdi
    7c4e:	e8 5d cc ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7c53:	49 89 c4             	mov    %rax,%r12
    7c56:	48 89 df             	mov    %rbx,%rdi
    7c59:	e8 62 c6 ff ff       	call   42c0 <__cxa_free_exception@plt>
    7c5e:	4c 89 e3             	mov    %r12,%rbx
    7c61:	eb 03                	jmp    7c66 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    7c63:	48 89 c3             	mov    %rax,%rbx
    7c66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c6a:	48 89 c7             	mov    %rax,%rdi
    7c6d:	e8 8e 11 00 00       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7c72:	48 89 d8             	mov    %rbx,%rax
    7c75:	48 89 c7             	mov    %rax,%rdi
    7c78:	e8 33 cc ff ff       	call   48b0 <_Unwind_Resume@plt>
  return instanceExtensions;
    7c7d:	90                   	nop
}
    7c7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c82:	48 83 c4 20          	add    $0x20,%rsp
    7c86:	5b                   	pop    %rbx
    7c87:	41 5c                	pop    %r12
    7c89:	5d                   	pop    %rbp
    7c8a:	c3                   	ret

0000000000007c8b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    7c8b:	55                   	push   %rbp
    7c8c:	48 89 e5             	mov    %rsp,%rbp
    7c8f:	41 54                	push   %r12
    7c91:	53                   	push   %rbx
    7c92:	48 83 ec 30          	sub    $0x30,%rsp
    7c96:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7c9a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7c9e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    7ca2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7ca6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7caa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7cae:	b9 00 00 00 00       	mov    $0x0,%ecx
    7cb3:	48 89 c7             	mov    %rax,%rdi
    7cb6:	e8 15 ca ff ff       	call   46d0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    7cbb:	85 c0                	test   %eax,%eax
    7cbd:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    7cc0:	84 c0                	test   %al,%al
    7cc2:	74 3b                	je     7cff <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    7cc4:	bf 10 00 00 00       	mov    $0x10,%edi
    7cc9:	e8 e2 c4 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    7cce:	48 89 c3             	mov    %rax,%rbx
    7cd1:	48 8d 05 28 65 01 00 	lea    0x16528(%rip),%rax        # 1e200 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    7cd8:	48 89 c6             	mov    %rax,%rsi
    7cdb:	48 89 df             	mov    %rbx,%rdi
    7cde:	e8 4d c4 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7ce3:	48 8b 05 be 82 02 00 	mov    0x282be(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7cea:	48 89 c2             	mov    %rax,%rdx
    7ced:	48 8d 05 4c 80 02 00 	lea    0x2804c(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7cf4:	48 89 c6             	mov    %rax,%rsi
    7cf7:	48 89 df             	mov    %rbx,%rdi
    7cfa:	e8 51 cb ff ff       	call   4850 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7cff:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7d02:	89 c3                	mov    %eax,%ebx
    7d04:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d08:	48 89 c7             	mov    %rax,%rdi
    7d0b:	e8 42 10 00 00       	call   8d52 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    7d10:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7d14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d18:	48 89 de             	mov    %rbx,%rsi
    7d1b:	48 89 c7             	mov    %rax,%rdi
    7d1e:	e8 67 10 00 00       	call   8d8a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    7d23:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d27:	48 89 c7             	mov    %rax,%rdi
    7d2a:	e8 3f 10 00 00       	call   8d6e <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    7d2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d33:	48 89 c7             	mov    %rax,%rdi
    7d36:	e8 09 11 00 00       	call   8e44 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7d3b:	48 89 c1             	mov    %rax,%rcx
    7d3e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7d42:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7d46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d4a:	48 89 c7             	mov    %rax,%rdi
    7d4d:	e8 7e c9 ff ff       	call   46d0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    7d52:	85 c0                	test   %eax,%eax
    7d54:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    7d57:	84 c0                	test   %al,%al
    7d59:	0f 84 95 00 00 00    	je     7df4 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    7d5f:	bf 10 00 00 00       	mov    $0x10,%edi
    7d64:	e8 47 c4 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    7d69:	48 89 c3             	mov    %rax,%rbx
    7d6c:	48 8d 05 8d 64 01 00 	lea    0x1648d(%rip),%rax        # 1e200 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    7d73:	48 89 c6             	mov    %rax,%rsi
    7d76:	48 89 df             	mov    %rbx,%rdi
    7d79:	e8 b2 c3 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    7d7e:	48 8b 05 23 82 02 00 	mov    0x28223(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7d85:	48 89 c2             	mov    %rax,%rdx
    7d88:	48 8d 05 b1 7f 02 00 	lea    0x27fb1(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7d8f:	48 89 c6             	mov    %rax,%rsi
    7d92:	48 89 df             	mov    %rbx,%rdi
    7d95:	e8 b6 ca ff ff       	call   4850 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    7d9a:	49 89 c4             	mov    %rax,%r12
    7d9d:	48 89 df             	mov    %rbx,%rdi
    7da0:	e8 1b c5 ff ff       	call   42c0 <__cxa_free_exception@plt>
    7da5:	4c 89 e0             	mov    %r12,%rax
    7da8:	48 89 c7             	mov    %rax,%rdi
    7dab:	e8 00 cb ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7db0:	48 89 c3             	mov    %rax,%rbx
    7db3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7db7:	48 89 c7             	mov    %rax,%rdi
    7dba:	e8 af 0f 00 00       	call   8d6e <_ZNSaI21VkExtensionPropertiesED1Ev>
    7dbf:	48 89 d8             	mov    %rbx,%rax
    7dc2:	48 89 c7             	mov    %rax,%rdi
    7dc5:	e8 e6 ca ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    7dca:	49 89 c4             	mov    %rax,%r12
    7dcd:	48 89 df             	mov    %rbx,%rdi
    7dd0:	e8 eb c4 ff ff       	call   42c0 <__cxa_free_exception@plt>
    7dd5:	4c 89 e3             	mov    %r12,%rbx
    7dd8:	eb 03                	jmp    7ddd <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    7dda:	48 89 c3             	mov    %rax,%rbx
    7ddd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7de1:	48 89 c7             	mov    %rax,%rdi
    7de4:	e8 17 10 00 00       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7de9:	48 89 d8             	mov    %rbx,%rax
    7dec:	48 89 c7             	mov    %rax,%rdi
    7def:	e8 bc ca ff ff       	call   48b0 <_Unwind_Resume@plt>
  return deviceExtensions;
    7df4:	90                   	nop
}
    7df5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7df9:	48 83 c4 30          	add    $0x30,%rsp
    7dfd:	5b                   	pop    %rbx
    7dfe:	41 5c                	pop    %r12
    7e00:	5d                   	pop    %rbp
    7e01:	c3                   	ret

0000000000007e02 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    7e02:	55                   	push   %rbp
    7e03:	48 89 e5             	mov    %rsp,%rbp
    7e06:	53                   	push   %rbx
    7e07:	48 83 ec 38          	sub    $0x38,%rsp
    7e0b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    7e0f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7e13:	48 89 c7             	mov    %rax,%rdi
    7e16:	e8 c5 c4 ff ff       	call   42e0 <glfwGetRequiredInstanceExtensions@plt>
    7e1b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7e1f:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7e22:	89 c3                	mov    %eax,%ebx
    7e24:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7e28:	48 89 c7             	mov    %rax,%rdi
    7e2b:	e8 90 10 00 00       	call   8ec0 <_ZNSaIPKcEC1Ev>
    7e30:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    7e34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e38:	48 89 de             	mov    %rbx,%rsi
    7e3b:	48 89 c7             	mov    %rax,%rdi
    7e3e:	e8 b5 10 00 00       	call   8ef8 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    7e43:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7e47:	48 89 c7             	mov    %rax,%rdi
    7e4a:	e8 8d 10 00 00       	call   8edc <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7e4f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    7e56:	eb 2e                	jmp    7e86 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    7e58:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7e5b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7e62:	00 
    7e63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e67:	48 01 d0             	add    %rdx,%rax
    7e6a:	48 8b 18             	mov    (%rax),%rbx
    7e6d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7e70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e74:	48 89 d6             	mov    %rdx,%rsi
    7e77:	48 89 c7             	mov    %rax,%rdi
    7e7a:	e8 ef 10 00 00       	call   8f6e <_ZNSt6vectorIPKcSaIS1_EEixEm>
    7e7f:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7e82:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    7e86:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7e89:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    7e8c:	72 ca                	jb     7e58 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    7e8e:	eb 1a                	jmp    7eaa <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7e90:	48 89 c3             	mov    %rax,%rbx
    7e93:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7e97:	48 89 c7             	mov    %rax,%rdi
    7e9a:	e8 3d 10 00 00       	call   8edc <_ZNSaIPKcED1Ev>
    7e9f:	48 89 d8             	mov    %rbx,%rax
    7ea2:	48 89 c7             	mov    %rax,%rdi
    7ea5:	e8 06 ca ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    7eaa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7eae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7eb2:	c9                   	leave
    7eb3:	c3                   	ret

0000000000007eb4 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    7eb4:	55                   	push   %rbp
    7eb5:	48 89 e5             	mov    %rsp,%rbp
    7eb8:	53                   	push   %rbx
    7eb9:	48 83 ec 28          	sub    $0x28,%rsp
    7ebd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    7ec1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7ec5:	be 00 00 00 00       	mov    $0x0,%esi
    7eca:	48 89 c7             	mov    %rax,%rdi
    7ecd:	e8 8e c6 ff ff       	call   4560 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7ed2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7ed5:	89 c3                	mov    %eax,%ebx
    7ed7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7edb:	48 89 c7             	mov    %rax,%rdi
    7ede:	e8 01 0d 00 00       	call   8be4 <_ZNSaI17VkLayerPropertiesEC1Ev>
    7ee3:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7ee7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7eeb:	48 89 de             	mov    %rbx,%rsi
    7eee:	48 89 c7             	mov    %rax,%rdi
    7ef1:	e8 26 0d 00 00       	call   8c1c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    7ef6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7efa:	48 89 c7             	mov    %rax,%rdi
    7efd:	e8 fe 0c 00 00       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    7f02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f06:	48 89 c7             	mov    %rax,%rdi
    7f09:	e8 c8 0d 00 00       	call   8cd6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7f0e:	48 89 c2             	mov    %rax,%rdx
    7f11:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7f15:	48 89 d6             	mov    %rdx,%rsi
    7f18:	48 89 c7             	mov    %rax,%rdi
    7f1b:	e8 40 c6 ff ff       	call   4560 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    7f20:	eb 34                	jmp    7f56 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7f22:	48 89 c3             	mov    %rax,%rbx
    7f25:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7f29:	48 89 c7             	mov    %rax,%rdi
    7f2c:	e8 cf 0c 00 00       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
    7f31:	48 89 d8             	mov    %rbx,%rax
    7f34:	48 89 c7             	mov    %rax,%rdi
    7f37:	e8 74 c9 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    7f3c:	48 89 c3             	mov    %rax,%rbx
    7f3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f43:	48 89 c7             	mov    %rax,%rdi
    7f46:	e8 47 0d 00 00       	call   8c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7f4b:	48 89 d8             	mov    %rbx,%rax
    7f4e:	48 89 c7             	mov    %rax,%rdi
    7f51:	e8 5a c9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    7f56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f5a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f5e:	c9                   	leave
    7f5f:	c3                   	ret

0000000000007f60 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    7f60:	55                   	push   %rbp
    7f61:	48 89 e5             	mov    %rsp,%rbp
    7f64:	41 54                	push   %r12
    7f66:	53                   	push   %rbx
    7f67:	48 83 ec 20          	sub    $0x20,%rsp
    7f6b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7f6f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    7f73:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7f77:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f7b:	ba 00 00 00 00       	mov    $0x0,%edx
    7f80:	48 89 ce             	mov    %rcx,%rsi
    7f83:	48 89 c7             	mov    %rax,%rdi
    7f86:	e8 65 c2 ff ff       	call   41f0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    7f8b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7f8e:	85 c0                	test   %eax,%eax
    7f90:	75 3b                	jne    7fcd <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    7f92:	bf 10 00 00 00       	mov    $0x10,%edi
    7f97:	e8 14 c2 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    7f9c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7f9f:	48 8d 05 82 62 01 00 	lea    0x16282(%rip),%rax        # 1e228 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x58>
    7fa6:	48 89 c6             	mov    %rax,%rsi
    7fa9:	48 89 df             	mov    %rbx,%rdi
    7fac:	e8 7f c1 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    7fb1:	48 8b 05 f0 7f 02 00 	mov    0x27ff0(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7fb8:	48 89 c2             	mov    %rax,%rdx
    7fbb:	48 8d 05 7e 7d 02 00 	lea    0x27d7e(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7fc2:	48 89 c6             	mov    %rax,%rsi
    7fc5:	48 89 df             	mov    %rbx,%rdi
    7fc8:	e8 83 c8 ff ff       	call   4850 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7fcd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7fd0:	89 c3                	mov    %eax,%ebx
    7fd2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7fd6:	48 89 c7             	mov    %rax,%rdi
    7fd9:	e8 fe 0f 00 00       	call   8fdc <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    7fde:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7fe2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fe6:	48 89 de             	mov    %rbx,%rsi
    7fe9:	48 89 c7             	mov    %rax,%rdi
    7fec:	e8 23 10 00 00       	call   9014 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7ff1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7ff5:	48 89 c7             	mov    %rax,%rdi
    7ff8:	e8 fb 0f 00 00       	call   8ff8 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7ffd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8001:	48 89 c7             	mov    %rax,%rdi
    8004:	e8 c5 10 00 00       	call   90ce <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    8009:	48 89 c2             	mov    %rax,%rdx
    800c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8010:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8014:	48 89 ce             	mov    %rcx,%rsi
    8017:	48 89 c7             	mov    %rax,%rdi
    801a:	e8 d1 c1 ff ff       	call   41f0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    801f:	85 c0                	test   %eax,%eax
    8021:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    8024:	84 c0                	test   %al,%al
    8026:	0f 84 95 00 00 00    	je     80c1 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    802c:	bf 10 00 00 00       	mov    $0x10,%edi
    8031:	e8 7a c1 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    8036:	48 89 c3             	mov    %rax,%rbx
    8039:	48 8d 05 20 62 01 00 	lea    0x16220(%rip),%rax        # 1e260 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    8040:	48 89 c6             	mov    %rax,%rsi
    8043:	48 89 df             	mov    %rbx,%rdi
    8046:	e8 e5 c0 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    804b:	48 8b 05 56 7f 02 00 	mov    0x27f56(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8052:	48 89 c2             	mov    %rax,%rdx
    8055:	48 8d 05 e4 7c 02 00 	lea    0x27ce4(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    805c:	48 89 c6             	mov    %rax,%rsi
    805f:	48 89 df             	mov    %rbx,%rdi
    8062:	e8 e9 c7 ff ff       	call   4850 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    8067:	49 89 c4             	mov    %rax,%r12
    806a:	48 89 df             	mov    %rbx,%rdi
    806d:	e8 4e c2 ff ff       	call   42c0 <__cxa_free_exception@plt>
    8072:	4c 89 e0             	mov    %r12,%rax
    8075:	48 89 c7             	mov    %rax,%rdi
    8078:	e8 33 c8 ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    807d:	48 89 c3             	mov    %rax,%rbx
    8080:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8084:	48 89 c7             	mov    %rax,%rdi
    8087:	e8 6c 0f 00 00       	call   8ff8 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    808c:	48 89 d8             	mov    %rbx,%rax
    808f:	48 89 c7             	mov    %rax,%rdi
    8092:	e8 19 c8 ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    8097:	49 89 c4             	mov    %rax,%r12
    809a:	48 89 df             	mov    %rbx,%rdi
    809d:	e8 1e c2 ff ff       	call   42c0 <__cxa_free_exception@plt>
    80a2:	4c 89 e3             	mov    %r12,%rbx
    80a5:	eb 03                	jmp    80aa <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    80a7:	48 89 c3             	mov    %rax,%rbx
    80aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80ae:	48 89 c7             	mov    %rax,%rdi
    80b1:	e8 d4 0f 00 00       	call   908a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    80b6:	48 89 d8             	mov    %rbx,%rax
    80b9:	48 89 c7             	mov    %rax,%rdi
    80bc:	e8 ef c7 ff ff       	call   48b0 <_Unwind_Resume@plt>
  return physicalDevices;
    80c1:	90                   	nop
}
    80c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80c6:	48 83 c4 20          	add    $0x20,%rsp
    80ca:	5b                   	pop    %rbx
    80cb:	41 5c                	pop    %r12
    80cd:	5d                   	pop    %rbp
    80ce:	c3                   	ret

00000000000080cf <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    80cf:	55                   	push   %rbp
    80d0:	48 89 e5             	mov    %rsp,%rbp
    80d3:	48 83 ec 10          	sub    $0x10,%rsp
    80d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    80df:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    80e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    80e7:	48 89 d6             	mov    %rdx,%rsi
    80ea:	48 89 c7             	mov    %rax,%rdi
    80ed:	e8 4e c0 ff ff       	call   4140 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    80f2:	90                   	nop
}
    80f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80f7:	c9                   	leave
    80f8:	c3                   	ret

00000000000080f9 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    80f9:	55                   	push   %rbp
    80fa:	48 89 e5             	mov    %rsp,%rbp
    80fd:	48 83 ec 20          	sub    $0x20,%rsp
    8101:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8105:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8109:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    810d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8111:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    8117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    811b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    811f:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    8123:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8127:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    812b:	48 89 d6             	mov    %rdx,%rsi
    812e:	48 89 c7             	mov    %rax,%rdi
    8131:	e8 ca c2 ff ff       	call   4400 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    8136:	90                   	nop
}
    8137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    813b:	c9                   	leave
    813c:	c3                   	ret

000000000000813d <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    813d:	55                   	push   %rbp
    813e:	48 89 e5             	mov    %rsp,%rbp
    8141:	53                   	push   %rbx
    8142:	48 83 ec 28          	sub    $0x28,%rsp
    8146:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    814a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    814e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8152:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8156:	ba 00 00 00 00       	mov    $0x0,%edx
    815b:	48 89 ce             	mov    %rcx,%rsi
    815e:	48 89 c7             	mov    %rax,%rdi
    8161:	e8 6a c1 ff ff       	call   42d0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    8166:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8169:	89 c3                	mov    %eax,%ebx
    816b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    816f:	48 89 c7             	mov    %rax,%rdi
    8172:	e8 c9 0f 00 00       	call   9140 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    8177:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    817b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    817f:	48 89 de             	mov    %rbx,%rsi
    8182:	48 89 c7             	mov    %rax,%rdi
    8185:	e8 ee 0f 00 00       	call   9178 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    818a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    818e:	48 89 c7             	mov    %rax,%rdi
    8191:	e8 c6 0f 00 00       	call   915c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    8196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    819a:	48 89 c7             	mov    %rax,%rdi
    819d:	e8 90 10 00 00       	call   9232 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    81a2:	48 89 c2             	mov    %rax,%rdx
    81a5:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    81a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81ad:	48 89 ce             	mov    %rcx,%rsi
    81b0:	48 89 c7             	mov    %rax,%rdi
    81b3:	e8 18 c1 ff ff       	call   42d0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    81b8:	eb 34                	jmp    81ee <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    81ba:	48 89 c3             	mov    %rax,%rbx
    81bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    81c1:	48 89 c7             	mov    %rax,%rdi
    81c4:	e8 93 0f 00 00       	call   915c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    81c9:	48 89 d8             	mov    %rbx,%rax
    81cc:	48 89 c7             	mov    %rax,%rdi
    81cf:	e8 dc c6 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    81d4:	48 89 c3             	mov    %rax,%rbx
    81d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81db:	48 89 c7             	mov    %rax,%rdi
    81de:	e8 0b 10 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    81e3:	48 89 d8             	mov    %rbx,%rax
    81e6:	48 89 c7             	mov    %rax,%rdi
    81e9:	e8 c2 c6 ff ff       	call   48b0 <_Unwind_Resume@plt>
    81ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81f6:	c9                   	leave
    81f7:	c3                   	ret

00000000000081f8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    81f8:	55                   	push   %rbp
    81f9:	48 89 e5             	mov    %rsp,%rbp
    81fc:	53                   	push   %rbx
    81fd:	48 83 ec 68          	sub    $0x68,%rsp
    8201:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8205:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8209:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    820d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8211:	48 89 d6             	mov    %rdx,%rsi
    8214:	48 89 c7             	mov    %rax,%rdi
    8217:	e8 21 ff ff ff       	call   813d <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    821c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8220:	48 89 c7             	mov    %rax,%rdi
    8223:	e8 86 10 00 00       	call   92ae <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    8228:	48 89 c3             	mov    %rax,%rbx
    822b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    822f:	48 89 c7             	mov    %rax,%rdi
    8232:	e8 a5 10 00 00       	call   92dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8237:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    823b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    823f:	48 89 de             	mov    %rbx,%rsi
    8242:	48 89 c7             	mov    %rax,%rdi
    8245:	e8 ca 10 00 00       	call   9314 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    824a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    824e:	48 89 c7             	mov    %rax,%rdi
    8251:	e8 a2 10 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    8256:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    825d:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    825e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8262:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8266:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    826a:	48 89 c7             	mov    %rax,%rdi
    826d:	e8 5c 11 00 00       	call   93ce <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8272:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8276:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    827a:	48 89 c7             	mov    %rax,%rdi
    827d:	e8 72 11 00 00       	call   93f4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8282:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8286:	eb 4e                	jmp    82d6 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    8288:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    828c:	48 89 c7             	mov    %rax,%rdi
    828f:	e8 e4 11 00 00       	call   9478 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8294:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    8298:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    829c:	8b 00                	mov    (%rax),%eax
    829e:	83 e0 01             	and    $0x1,%eax
    82a1:	85 c0                	test   %eax,%eax
    82a3:	74 25                	je     82ca <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    82a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    82a9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    82ad:	48 89 d6             	mov    %rdx,%rsi
    82b0:	48 89 c7             	mov    %rax,%rdi
    82b3:	e8 d2 11 00 00       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    82b8:	48 89 c2             	mov    %rax,%rdx
    82bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    82bf:	48 89 c6             	mov    %rax,%rsi
    82c2:	48 89 d7             	mov    %rdx,%rdi
    82c5:	e8 ea 11 00 00       	call   94b4 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    82ca:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    82ce:	48 89 c7             	mov    %rax,%rdi
    82d1:	e8 82 11 00 00       	call   9458 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    82d6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    82da:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    82de:	48 89 d6             	mov    %rdx,%rsi
    82e1:	48 89 c7             	mov    %rax,%rdi
    82e4:	e8 34 11 00 00       	call   941d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    82e9:	84 c0                	test   %al,%al
    82eb:	75 9b                	jne    8288 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    82ed:	90                   	nop
}
    82ee:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    82f2:	48 89 c7             	mov    %rax,%rdi
    82f5:	e8 f4 0e 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    82fa:	eb 26                	jmp    8322 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    82fc:	48 89 c3             	mov    %rax,%rbx
    82ff:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8303:	48 89 c7             	mov    %rax,%rdi
    8306:	e8 ed 0f 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    830b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    830f:	48 89 c7             	mov    %rax,%rdi
    8312:	e8 d7 0e 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8317:	48 89 d8             	mov    %rbx,%rax
    831a:	48 89 c7             	mov    %rax,%rdi
    831d:	e8 8e c5 ff ff       	call   48b0 <_Unwind_Resume@plt>
    8322:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8326:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    832a:	c9                   	leave
    832b:	c3                   	ret

000000000000832c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    832c:	55                   	push   %rbp
    832d:	48 89 e5             	mov    %rsp,%rbp
    8330:	53                   	push   %rbx
    8331:	48 83 ec 68          	sub    $0x68,%rsp
    8335:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    8339:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    833d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8341:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    8345:	48 89 d6             	mov    %rdx,%rsi
    8348:	48 89 c7             	mov    %rax,%rdi
    834b:	e8 ed fd ff ff       	call   813d <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    8350:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8354:	48 89 c7             	mov    %rax,%rdi
    8357:	e8 52 0f 00 00       	call   92ae <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    835c:	48 89 c3             	mov    %rax,%rbx
    835f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8363:	48 89 c7             	mov    %rax,%rdi
    8366:	e8 71 0f 00 00       	call   92dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    836b:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    836f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8373:	48 89 de             	mov    %rbx,%rsi
    8376:	48 89 c7             	mov    %rax,%rdi
    8379:	e8 96 0f 00 00       	call   9314 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    837e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8382:	48 89 c7             	mov    %rax,%rdi
    8385:	e8 6e 0f 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    838a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8391:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8392:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8396:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    839a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    839e:	48 89 c7             	mov    %rax,%rdi
    83a1:	e8 28 10 00 00       	call   93ce <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    83a6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    83aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83ae:	48 89 c7             	mov    %rax,%rdi
    83b1:	e8 3e 10 00 00       	call   93f4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    83b6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    83ba:	eb 53                	jmp    840f <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    83bc:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    83c0:	48 89 c7             	mov    %rax,%rdi
    83c3:	e8 b0 10 00 00       	call   9478 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    83c8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    83cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83d0:	8b 00                	mov    (%rax),%eax
    83d2:	83 e0 02             	and    $0x2,%eax
    83d5:	85 c0                	test   %eax,%eax
    83d7:	74 25                	je     83fe <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    83d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83dd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    83e1:	48 89 d6             	mov    %rdx,%rsi
    83e4:	48 89 c7             	mov    %rax,%rdi
    83e7:	e8 9e 10 00 00       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    83ec:	48 89 c2             	mov    %rax,%rdx
    83ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83f3:	48 89 c6             	mov    %rax,%rsi
    83f6:	48 89 d7             	mov    %rdx,%rdi
    83f9:	e8 b6 10 00 00       	call   94b4 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    83fe:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    8403:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8407:	48 89 c7             	mov    %rax,%rdi
    840a:	e8 49 10 00 00       	call   9458 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    840f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8413:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8417:	48 89 d6             	mov    %rdx,%rsi
    841a:	48 89 c7             	mov    %rax,%rdi
    841d:	e8 fb 0f 00 00       	call   941d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8422:	84 c0                	test   %al,%al
    8424:	75 96                	jne    83bc <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    8426:	90                   	nop
}
    8427:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    842b:	48 89 c7             	mov    %rax,%rdi
    842e:	e8 bb 0d 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    8433:	eb 26                	jmp    845b <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    8435:	48 89 c3             	mov    %rax,%rbx
    8438:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    843c:	48 89 c7             	mov    %rax,%rdi
    843f:	e8 b4 0e 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    8444:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8448:	48 89 c7             	mov    %rax,%rdi
    844b:	e8 9e 0d 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8450:	48 89 d8             	mov    %rbx,%rax
    8453:	48 89 c7             	mov    %rax,%rdi
    8456:	e8 55 c4 ff ff       	call   48b0 <_Unwind_Resume@plt>
    845b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    845f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8463:	c9                   	leave
    8464:	c3                   	ret

0000000000008465 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    8465:	55                   	push   %rbp
    8466:	48 89 e5             	mov    %rsp,%rbp
    8469:	53                   	push   %rbx
    846a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    8471:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    8475:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    8479:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    8480:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8484:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    8488:	48 89 d6             	mov    %rdx,%rsi
    848b:	48 89 c7             	mov    %rax,%rdi
    848e:	e8 aa fc ff ff       	call   813d <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    8493:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8497:	48 89 c7             	mov    %rax,%rdi
    849a:	e8 0f 0e 00 00       	call   92ae <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    849f:	48 89 c3             	mov    %rax,%rbx
    84a2:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    84a6:	48 89 c7             	mov    %rax,%rdi
    84a9:	e8 2e 0e 00 00       	call   92dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    84ae:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    84b2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    84b6:	48 89 de             	mov    %rbx,%rsi
    84b9:	48 89 c7             	mov    %rax,%rdi
    84bc:	e8 53 0e 00 00       	call   9314 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    84c1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    84c5:	48 89 c7             	mov    %rax,%rdi
    84c8:	e8 2b 0e 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    84cd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    84d4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    84d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    84dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84e0:	48 89 c7             	mov    %rax,%rdi
    84e3:	e8 e6 0e 00 00       	call   93ce <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    84e8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    84ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84f0:	48 89 c7             	mov    %rax,%rdi
    84f3:	e8 fc 0e 00 00       	call   93f4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    84f8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    84fc:	eb 6c                	jmp    856a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    84fe:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8502:	48 89 c7             	mov    %rax,%rdi
    8505:	e8 6e 0f 00 00       	call   9478 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    850a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    850e:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    8515:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    8519:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8520:	8b 75 ec             	mov    -0x14(%rbp),%esi
    8523:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8527:	48 89 c7             	mov    %rax,%rdi
    852a:	e8 c1 bf ff ff       	call   44f0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    852f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    8532:	85 c0                	test   %eax,%eax
    8534:	74 24                	je     855a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    8536:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8539:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    853d:	48 89 d6             	mov    %rdx,%rsi
    8540:	48 89 c7             	mov    %rax,%rdi
    8543:	e8 42 0f 00 00       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    8548:	48 89 c2             	mov    %rax,%rdx
    854b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    854f:	48 89 c6             	mov    %rax,%rsi
    8552:	48 89 d7             	mov    %rdx,%rdi
    8555:	e8 5a 0f 00 00       	call   94b4 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    855a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    855e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8562:	48 89 c7             	mov    %rax,%rdi
    8565:	e8 ee 0e 00 00       	call   9458 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    856a:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    856e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    8572:	48 89 d6             	mov    %rdx,%rsi
    8575:	48 89 c7             	mov    %rax,%rdi
    8578:	e8 a0 0e 00 00       	call   941d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    857d:	84 c0                	test   %al,%al
    857f:	0f 85 79 ff ff ff    	jne    84fe <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    8585:	90                   	nop
}
    8586:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    858a:	48 89 c7             	mov    %rax,%rdi
    858d:	e8 5c 0c 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    8592:	eb 37                	jmp    85cb <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    8594:	48 89 c3             	mov    %rax,%rbx
    8597:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    859b:	48 89 c7             	mov    %rax,%rdi
    859e:	e8 55 0d 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    85a3:	eb 0f                	jmp    85b4 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    85a5:	48 89 c3             	mov    %rax,%rbx
    85a8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    85ac:	48 89 c7             	mov    %rax,%rdi
    85af:	e8 d6 0d 00 00       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    85b4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    85b8:	48 89 c7             	mov    %rax,%rdi
    85bb:	e8 2e 0c 00 00       	call   91ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    85c0:	48 89 d8             	mov    %rbx,%rax
    85c3:	48 89 c7             	mov    %rax,%rdi
    85c6:	e8 e5 c2 ff ff       	call   48b0 <_Unwind_Resume@plt>
    85cb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    85cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85d3:	c9                   	leave
    85d4:	c3                   	ret

00000000000085d5 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    85d5:	55                   	push   %rbp
    85d6:	48 89 e5             	mov    %rsp,%rbp
    85d9:	41 54                	push   %r12
    85db:	53                   	push   %rbx
    85dc:	48 83 ec 20          	sub    $0x20,%rsp
    85e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    85e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    85ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85f0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    85f4:	0f 11 00             	movups %xmm0,(%rax)
    85f7:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    85fb:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    85ff:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    8604:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8608:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    860c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8610:	48 89 ce             	mov    %rcx,%rsi
    8613:	48 89 c7             	mov    %rax,%rdi
    8616:	e8 75 bd ff ff       	call   4390 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    861b:	85 c0                	test   %eax,%eax
    861d:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    8620:	84 c0                	test   %al,%al
    8622:	74 51                	je     8675 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    8624:	bf 10 00 00 00       	mov    $0x10,%edi
    8629:	e8 82 bb ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    862e:	48 89 c3             	mov    %rax,%rbx
    8631:	48 8d 05 50 5c 01 00 	lea    0x15c50(%rip),%rax        # 1e288 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb8>
    8638:	48 89 c6             	mov    %rax,%rsi
    863b:	48 89 df             	mov    %rbx,%rdi
    863e:	e8 ed ba ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8643:	48 8b 05 5e 79 02 00 	mov    0x2795e(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    864a:	48 89 c2             	mov    %rax,%rdx
    864d:	48 8d 05 ec 76 02 00 	lea    0x276ec(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8654:	48 89 c6             	mov    %rax,%rsi
    8657:	48 89 df             	mov    %rbx,%rdi
    865a:	e8 f1 c1 ff ff       	call   4850 <__cxa_throw@plt>
    865f:	49 89 c4             	mov    %rax,%r12
    8662:	48 89 df             	mov    %rbx,%rdi
    8665:	e8 56 bc ff ff       	call   42c0 <__cxa_free_exception@plt>
    866a:	4c 89 e0             	mov    %r12,%rax
    866d:	48 89 c7             	mov    %rax,%rdi
    8670:	e8 3b c2 ff ff       	call   48b0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    8675:	90                   	nop
}
    8676:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    867a:	48 83 c4 20          	add    $0x20,%rsp
    867e:	5b                   	pop    %rbx
    867f:	41 5c                	pop    %r12
    8681:	5d                   	pop    %rbp
    8682:	c3                   	ret

0000000000008683 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    8683:	55                   	push   %rbp
    8684:	48 89 e5             	mov    %rsp,%rbp
    8687:	41 54                	push   %r12
    8689:	53                   	push   %rbx
    868a:	48 83 ec 30          	sub    $0x30,%rsp
    868e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8692:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8696:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    869a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    869e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    86a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86a6:	b9 00 00 00 00       	mov    $0x0,%ecx
    86ab:	48 89 c7             	mov    %rax,%rdi
    86ae:	e8 8d bf ff ff       	call   4640 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    86b3:	85 c0                	test   %eax,%eax
    86b5:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    86b8:	84 c0                	test   %al,%al
    86ba:	74 3b                	je     86f7 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    86bc:	bf 10 00 00 00       	mov    $0x10,%edi
    86c1:	e8 ea ba ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    86c6:	48 89 c3             	mov    %rax,%rbx
    86c9:	48 8d 05 e0 5b 01 00 	lea    0x15be0(%rip),%rax        # 1e2b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    86d0:	48 89 c6             	mov    %rax,%rsi
    86d3:	48 89 df             	mov    %rbx,%rdi
    86d6:	e8 55 ba ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    86db:	48 8b 05 c6 78 02 00 	mov    0x278c6(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    86e2:	48 89 c2             	mov    %rax,%rdx
    86e5:	48 8d 05 54 76 02 00 	lea    0x27654(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    86ec:	48 89 c6             	mov    %rax,%rsi
    86ef:	48 89 df             	mov    %rbx,%rdi
    86f2:	e8 59 c1 ff ff       	call   4850 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    86f7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    86fa:	89 c3                	mov    %eax,%ebx
    86fc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8700:	48 89 c7             	mov    %rax,%rdi
    8703:	e8 84 0e 00 00       	call   958c <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    8708:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    870c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8710:	48 89 de             	mov    %rbx,%rsi
    8713:	48 89 c7             	mov    %rax,%rdi
    8716:	e8 a9 0e 00 00       	call   95c4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    871b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    871f:	48 89 c7             	mov    %rax,%rdi
    8722:	e8 81 0e 00 00       	call   95a8 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    8727:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    872b:	48 89 c7             	mov    %rax,%rdi
    872e:	e8 4b 0f 00 00       	call   967e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    8733:	48 89 c1             	mov    %rax,%rcx
    8736:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    873a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    873e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8742:	48 89 c7             	mov    %rax,%rdi
    8745:	e8 f6 be ff ff       	call   4640 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    874a:	85 c0                	test   %eax,%eax
    874c:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    874f:	84 c0                	test   %al,%al
    8751:	0f 84 95 00 00 00    	je     87ec <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    8757:	bf 10 00 00 00       	mov    $0x10,%edi
    875c:	e8 4f ba ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    8761:	48 89 c3             	mov    %rax,%rbx
    8764:	48 8d 05 45 5b 01 00 	lea    0x15b45(%rip),%rax        # 1e2b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    876b:	48 89 c6             	mov    %rax,%rsi
    876e:	48 89 df             	mov    %rbx,%rdi
    8771:	e8 ba b9 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8776:	48 8b 05 2b 78 02 00 	mov    0x2782b(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    877d:	48 89 c2             	mov    %rax,%rdx
    8780:	48 8d 05 b9 75 02 00 	lea    0x275b9(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8787:	48 89 c6             	mov    %rax,%rsi
    878a:	48 89 df             	mov    %rbx,%rdi
    878d:	e8 be c0 ff ff       	call   4850 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    8792:	49 89 c4             	mov    %rax,%r12
    8795:	48 89 df             	mov    %rbx,%rdi
    8798:	e8 23 bb ff ff       	call   42c0 <__cxa_free_exception@plt>
    879d:	4c 89 e0             	mov    %r12,%rax
    87a0:	48 89 c7             	mov    %rax,%rdi
    87a3:	e8 08 c1 ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    87a8:	48 89 c3             	mov    %rax,%rbx
    87ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87af:	48 89 c7             	mov    %rax,%rdi
    87b2:	e8 f1 0d 00 00       	call   95a8 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    87b7:	48 89 d8             	mov    %rbx,%rax
    87ba:	48 89 c7             	mov    %rax,%rdi
    87bd:	e8 ee c0 ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    87c2:	49 89 c4             	mov    %rax,%r12
    87c5:	48 89 df             	mov    %rbx,%rdi
    87c8:	e8 f3 ba ff ff       	call   42c0 <__cxa_free_exception@plt>
    87cd:	4c 89 e3             	mov    %r12,%rbx
    87d0:	eb 03                	jmp    87d5 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    87d2:	48 89 c3             	mov    %rax,%rbx
    87d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87d9:	48 89 c7             	mov    %rax,%rdi
    87dc:	e8 59 0e 00 00       	call   963a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    87e1:	48 89 d8             	mov    %rbx,%rax
    87e4:	48 89 c7             	mov    %rax,%rdi
    87e7:	e8 c4 c0 ff ff       	call   48b0 <_Unwind_Resume@plt>
  return surfaceFormats;
    87ec:	90                   	nop
}
    87ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87f1:	48 83 c4 30          	add    $0x30,%rsp
    87f5:	5b                   	pop    %rbx
    87f6:	41 5c                	pop    %r12
    87f8:	5d                   	pop    %rbp
    87f9:	c3                   	ret

00000000000087fa <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    87fa:	55                   	push   %rbp
    87fb:	48 89 e5             	mov    %rsp,%rbp
    87fe:	41 54                	push   %r12
    8800:	53                   	push   %rbx
    8801:	48 83 ec 30          	sub    $0x30,%rsp
    8805:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8809:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    880d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    8811:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8815:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8819:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    881d:	b9 00 00 00 00       	mov    $0x0,%ecx
    8822:	48 89 c7             	mov    %rax,%rdi
    8825:	e8 26 be ff ff       	call   4650 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    882a:	85 c0                	test   %eax,%eax
    882c:	0f 95 c0             	setne  %al
    882f:	84 c0                	test   %al,%al
    8831:	74 3b                	je     886e <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    8833:	bf 10 00 00 00       	mov    $0x10,%edi
    8838:	e8 73 b9 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    883d:	48 89 c3             	mov    %rax,%rbx
    8840:	48 8d 05 91 5a 01 00 	lea    0x15a91(%rip),%rax        # 1e2d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    8847:	48 89 c6             	mov    %rax,%rsi
    884a:	48 89 df             	mov    %rbx,%rdi
    884d:	e8 de b8 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8852:	48 8b 05 4f 77 02 00 	mov    0x2774f(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8859:	48 89 c2             	mov    %rax,%rdx
    885c:	48 8d 05 dd 74 02 00 	lea    0x274dd(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8863:	48 89 c6             	mov    %rax,%rsi
    8866:	48 89 df             	mov    %rbx,%rdi
    8869:	e8 e2 bf ff ff       	call   4850 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    886e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8871:	89 c3                	mov    %eax,%ebx
    8873:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8877:	48 89 c7             	mov    %rax,%rdi
    887a:	e8 71 0e 00 00       	call   96f0 <_ZNSaI16VkPresentModeKHREC1Ev>
    887f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    8883:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8887:	48 89 de             	mov    %rbx,%rsi
    888a:	48 89 c7             	mov    %rax,%rdi
    888d:	e8 96 0e 00 00       	call   9728 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    8892:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8896:	48 89 c7             	mov    %rax,%rdi
    8899:	e8 6e 0e 00 00       	call   970c <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    889e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88a2:	48 89 c7             	mov    %rax,%rdi
    88a5:	e8 38 0f 00 00       	call   97e2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    88aa:	48 89 c1             	mov    %rax,%rcx
    88ad:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    88b1:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    88b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    88b9:	48 89 c7             	mov    %rax,%rdi
    88bc:	e8 8f bd ff ff       	call   4650 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    88c1:	85 c0                	test   %eax,%eax
    88c3:	0f 95 c0             	setne  %al
    88c6:	84 c0                	test   %al,%al
    88c8:	0f 84 95 00 00 00    	je     8963 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    88ce:	bf 10 00 00 00       	mov    $0x10,%edi
    88d3:	e8 d8 b8 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    88d8:	48 89 c3             	mov    %rax,%rbx
    88db:	48 8d 05 f6 59 01 00 	lea    0x159f6(%rip),%rax        # 1e2d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    88e2:	48 89 c6             	mov    %rax,%rsi
    88e5:	48 89 df             	mov    %rbx,%rdi
    88e8:	e8 43 b8 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    88ed:	48 8b 05 b4 76 02 00 	mov    0x276b4(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    88f4:	48 89 c2             	mov    %rax,%rdx
    88f7:	48 8d 05 42 74 02 00 	lea    0x27442(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    88fe:	48 89 c6             	mov    %rax,%rsi
    8901:	48 89 df             	mov    %rbx,%rdi
    8904:	e8 47 bf ff ff       	call   4850 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    8909:	49 89 c4             	mov    %rax,%r12
    890c:	48 89 df             	mov    %rbx,%rdi
    890f:	e8 ac b9 ff ff       	call   42c0 <__cxa_free_exception@plt>
    8914:	4c 89 e0             	mov    %r12,%rax
    8917:	48 89 c7             	mov    %rax,%rdi
    891a:	e8 91 bf ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    891f:	48 89 c3             	mov    %rax,%rbx
    8922:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8926:	48 89 c7             	mov    %rax,%rdi
    8929:	e8 de 0d 00 00       	call   970c <_ZNSaI16VkPresentModeKHRED1Ev>
    892e:	48 89 d8             	mov    %rbx,%rax
    8931:	48 89 c7             	mov    %rax,%rdi
    8934:	e8 77 bf ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    8939:	49 89 c4             	mov    %rax,%r12
    893c:	48 89 df             	mov    %rbx,%rdi
    893f:	e8 7c b9 ff ff       	call   42c0 <__cxa_free_exception@plt>
    8944:	4c 89 e3             	mov    %r12,%rbx
    8947:	eb 03                	jmp    894c <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    8949:	48 89 c3             	mov    %rax,%rbx
    894c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8950:	48 89 c7             	mov    %rax,%rdi
    8953:	e8 46 0e 00 00       	call   979e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    8958:	48 89 d8             	mov    %rbx,%rax
    895b:	48 89 c7             	mov    %rax,%rdi
    895e:	e8 4d bf ff ff       	call   48b0 <_Unwind_Resume@plt>
  return presentModes;
    8963:	90                   	nop
}
    8964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8968:	48 83 c4 30          	add    $0x30,%rsp
    896c:	5b                   	pop    %rbx
    896d:	41 5c                	pop    %r12
    896f:	5d                   	pop    %rbp
    8970:	c3                   	ret

0000000000008971 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    8971:	55                   	push   %rbp
    8972:	48 89 e5             	mov    %rsp,%rbp
    8975:	41 54                	push   %r12
    8977:	53                   	push   %rbx
    8978:	48 83 ec 30          	sub    $0x30,%rsp
    897c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8980:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8984:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    8988:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    898c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8990:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8994:	b9 00 00 00 00       	mov    $0x0,%ecx
    8999:	48 89 c7             	mov    %rax,%rdi
    899c:	e8 9f b8 ff ff       	call   4240 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    89a1:	85 c0                	test   %eax,%eax
    89a3:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    89a6:	84 c0                	test   %al,%al
    89a8:	74 3b                	je     89e5 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    89aa:	bf 10 00 00 00       	mov    $0x10,%edi
    89af:	e8 fc b7 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    89b4:	48 89 c3             	mov    %rax,%rbx
    89b7:	48 8d 05 4a 59 01 00 	lea    0x1594a(%rip),%rax        # 1e308 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    89be:	48 89 c6             	mov    %rax,%rsi
    89c1:	48 89 df             	mov    %rbx,%rdi
    89c4:	e8 67 b7 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    89c9:	48 8b 05 d8 75 02 00 	mov    0x275d8(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    89d0:	48 89 c2             	mov    %rax,%rdx
    89d3:	48 8d 05 66 73 02 00 	lea    0x27366(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    89da:	48 89 c6             	mov    %rax,%rsi
    89dd:	48 89 df             	mov    %rbx,%rdi
    89e0:	e8 6b be ff ff       	call   4850 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    89e5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    89e8:	89 c3                	mov    %eax,%ebx
    89ea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    89ee:	48 89 c7             	mov    %rax,%rdi
    89f1:	e8 5e 0e 00 00       	call   9854 <_ZNSaIP9VkImage_TEC1Ev>
    89f6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    89fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89fe:	48 89 de             	mov    %rbx,%rsi
    8a01:	48 89 c7             	mov    %rax,%rdi
    8a04:	e8 83 0e 00 00       	call   988c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    8a09:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a0d:	48 89 c7             	mov    %rax,%rdi
    8a10:	e8 5b 0e 00 00       	call   9870 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    8a15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a19:	48 89 c7             	mov    %rax,%rdi
    8a1c:	e8 25 0f 00 00       	call   9946 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    8a21:	48 89 c1             	mov    %rax,%rcx
    8a24:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8a28:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8a2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a30:	48 89 c7             	mov    %rax,%rdi
    8a33:	e8 08 b8 ff ff       	call   4240 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    8a38:	85 c0                	test   %eax,%eax
    8a3a:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    8a3d:	84 c0                	test   %al,%al
    8a3f:	0f 84 95 00 00 00    	je     8ada <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    8a45:	bf 10 00 00 00       	mov    $0x10,%edi
    8a4a:	e8 61 b7 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    8a4f:	48 89 c3             	mov    %rax,%rbx
    8a52:	48 8d 05 af 58 01 00 	lea    0x158af(%rip),%rax        # 1e308 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    8a59:	48 89 c6             	mov    %rax,%rsi
    8a5c:	48 89 df             	mov    %rbx,%rdi
    8a5f:	e8 cc b6 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    8a64:	48 8b 05 3d 75 02 00 	mov    0x2753d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8a6b:	48 89 c2             	mov    %rax,%rdx
    8a6e:	48 8d 05 cb 72 02 00 	lea    0x272cb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8a75:	48 89 c6             	mov    %rax,%rsi
    8a78:	48 89 df             	mov    %rbx,%rdi
    8a7b:	e8 d0 bd ff ff       	call   4850 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    8a80:	49 89 c4             	mov    %rax,%r12
    8a83:	48 89 df             	mov    %rbx,%rdi
    8a86:	e8 35 b8 ff ff       	call   42c0 <__cxa_free_exception@plt>
    8a8b:	4c 89 e0             	mov    %r12,%rax
    8a8e:	48 89 c7             	mov    %rax,%rdi
    8a91:	e8 1a be ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    8a96:	48 89 c3             	mov    %rax,%rbx
    8a99:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a9d:	48 89 c7             	mov    %rax,%rdi
    8aa0:	e8 cb 0d 00 00       	call   9870 <_ZNSaIP9VkImage_TED1Ev>
    8aa5:	48 89 d8             	mov    %rbx,%rax
    8aa8:	48 89 c7             	mov    %rax,%rdi
    8aab:	e8 00 be ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    8ab0:	49 89 c4             	mov    %rax,%r12
    8ab3:	48 89 df             	mov    %rbx,%rdi
    8ab6:	e8 05 b8 ff ff       	call   42c0 <__cxa_free_exception@plt>
    8abb:	4c 89 e3             	mov    %r12,%rbx
    8abe:	eb 03                	jmp    8ac3 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    8ac0:	48 89 c3             	mov    %rax,%rbx
    8ac3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ac7:	48 89 c7             	mov    %rax,%rdi
    8aca:	e8 33 0e 00 00       	call   9902 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    8acf:	48 89 d8             	mov    %rbx,%rax
    8ad2:	48 89 c7             	mov    %rax,%rdi
    8ad5:	e8 d6 bd ff ff       	call   48b0 <_Unwind_Resume@plt>
  return swapchainImages;
    8ada:	90                   	nop
}
    8adb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8adf:	48 83 c4 30          	add    $0x30,%rsp
    8ae3:	5b                   	pop    %rbx
    8ae4:	41 5c                	pop    %r12
    8ae6:	5d                   	pop    %rbp
    8ae7:	c3                   	ret

0000000000008ae8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    8ae8:	55                   	push   %rbp
    8ae9:	48 89 e5             	mov    %rsp,%rbp
    8aec:	48 83 ec 10          	sub    $0x10,%rsp
    8af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af8:	48 89 c7             	mov    %rax,%rdi
    8afb:	e8 00 01 00 00       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
    8b00:	90                   	nop
    8b01:	c9                   	leave
    8b02:	c3                   	ret
    8b03:	90                   	nop

0000000000008b04 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    8b04:	55                   	push   %rbp
    8b05:	48 89 e5             	mov    %rsp,%rbp
    8b08:	48 83 ec 10          	sub    $0x10,%rsp
    8b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b14:	48 89 c7             	mov    %rax,%rdi
    8b17:	e8 52 02 00 00       	call   8d6e <_ZNSaI21VkExtensionPropertiesED1Ev>
    8b1c:	90                   	nop
    8b1d:	c9                   	leave
    8b1e:	c3                   	ret
    8b1f:	90                   	nop

0000000000008b20 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    8b20:	55                   	push   %rbp
    8b21:	48 89 e5             	mov    %rsp,%rbp
    8b24:	48 83 ec 10          	sub    $0x10,%rsp
    8b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b30:	48 89 c7             	mov    %rax,%rdi
    8b33:	e8 a4 03 00 00       	call   8edc <_ZNSaIPKcED1Ev>
    8b38:	90                   	nop
    8b39:	c9                   	leave
    8b3a:	c3                   	ret
    8b3b:	90                   	nop

0000000000008b3c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    8b3c:	55                   	push   %rbp
    8b3d:	48 89 e5             	mov    %rsp,%rbp
    8b40:	48 83 ec 10          	sub    $0x10,%rsp
    8b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b4c:	48 89 c7             	mov    %rax,%rdi
    8b4f:	e8 a4 04 00 00       	call   8ff8 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8b54:	90                   	nop
    8b55:	c9                   	leave
    8b56:	c3                   	ret
    8b57:	90                   	nop

0000000000008b58 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    8b58:	55                   	push   %rbp
    8b59:	48 89 e5             	mov    %rsp,%rbp
    8b5c:	48 83 ec 10          	sub    $0x10,%rsp
    8b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b68:	48 89 c7             	mov    %rax,%rdi
    8b6b:	e8 ec 05 00 00       	call   915c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8b70:	90                   	nop
    8b71:	c9                   	leave
    8b72:	c3                   	ret
    8b73:	90                   	nop

0000000000008b74 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    8b74:	55                   	push   %rbp
    8b75:	48 89 e5             	mov    %rsp,%rbp
    8b78:	48 83 ec 10          	sub    $0x10,%rsp
    8b7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b84:	48 89 c7             	mov    %rax,%rdi
    8b87:	e8 6c 07 00 00       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    8b8c:	90                   	nop
    8b8d:	c9                   	leave
    8b8e:	c3                   	ret
    8b8f:	90                   	nop

0000000000008b90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    8b90:	55                   	push   %rbp
    8b91:	48 89 e5             	mov    %rsp,%rbp
    8b94:	48 83 ec 10          	sub    $0x10,%rsp
    8b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba0:	48 89 c7             	mov    %rax,%rdi
    8ba3:	e8 00 0a 00 00       	call   95a8 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    8ba8:	90                   	nop
    8ba9:	c9                   	leave
    8baa:	c3                   	ret
    8bab:	90                   	nop

0000000000008bac <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    8bac:	55                   	push   %rbp
    8bad:	48 89 e5             	mov    %rsp,%rbp
    8bb0:	48 83 ec 10          	sub    $0x10,%rsp
    8bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bbc:	48 89 c7             	mov    %rax,%rdi
    8bbf:	e8 48 0b 00 00       	call   970c <_ZNSaI16VkPresentModeKHRED1Ev>
    8bc4:	90                   	nop
    8bc5:	c9                   	leave
    8bc6:	c3                   	ret
    8bc7:	90                   	nop

0000000000008bc8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    8bc8:	55                   	push   %rbp
    8bc9:	48 89 e5             	mov    %rsp,%rbp
    8bcc:	48 83 ec 10          	sub    $0x10,%rsp
    8bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd8:	48 89 c7             	mov    %rax,%rdi
    8bdb:	e8 90 0c 00 00       	call   9870 <_ZNSaIP9VkImage_TED1Ev>
    8be0:	90                   	nop
    8be1:	c9                   	leave
    8be2:	c3                   	ret
    8be3:	90                   	nop

0000000000008be4 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8be4:	55                   	push   %rbp
    8be5:	48 89 e5             	mov    %rsp,%rbp
    8be8:	48 83 ec 10          	sub    $0x10,%rsp
    8bec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf4:	48 89 c7             	mov    %rax,%rdi
    8bf7:	e8 bc 0d 00 00       	call   99b8 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    8bfc:	90                   	nop
    8bfd:	c9                   	leave
    8bfe:	c3                   	ret
    8bff:	90                   	nop

0000000000008c00 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8c00:	55                   	push   %rbp
    8c01:	48 89 e5             	mov    %rsp,%rbp
    8c04:	48 83 ec 10          	sub    $0x10,%rsp
    8c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c10:	48 89 c7             	mov    %rax,%rdi
    8c13:	e8 ac 0d 00 00       	call   99c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    8c18:	90                   	nop
    8c19:	c9                   	leave
    8c1a:	c3                   	ret
    8c1b:	90                   	nop

0000000000008c1c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8c1c:	55                   	push   %rbp
    8c1d:	48 89 e5             	mov    %rsp,%rbp
    8c20:	53                   	push   %rbx
    8c21:	48 83 ec 28          	sub    $0x28,%rsp
    8c25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c29:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c2d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8c31:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8c35:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c3d:	48 89 d6             	mov    %rdx,%rsi
    8c40:	48 89 c7             	mov    %rax,%rdi
    8c43:	e8 87 0d 00 00       	call   99cf <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8c48:	48 89 c1             	mov    %rax,%rcx
    8c4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c4f:	48 89 c2             	mov    %rax,%rdx
    8c52:	48 89 ce             	mov    %rcx,%rsi
    8c55:	48 89 df             	mov    %rbx,%rdi
    8c58:	e8 d3 0d 00 00       	call   9a30 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8c5d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c65:	48 89 d6             	mov    %rdx,%rsi
    8c68:	48 89 c7             	mov    %rax,%rdi
    8c6b:	e8 1e 0e 00 00       	call   9a8e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    8c70:	eb 1a                	jmp    8c8c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8c72:	48 89 c3             	mov    %rax,%rbx
    8c75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c79:	48 89 c7             	mov    %rax,%rdi
    8c7c:	e8 79 00 00 00       	call   8cfa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8c81:	48 89 d8             	mov    %rbx,%rax
    8c84:	48 89 c7             	mov    %rax,%rdi
    8c87:	e8 24 bc ff ff       	call   48b0 <_Unwind_Resume@plt>
    8c8c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c90:	c9                   	leave
    8c91:	c3                   	ret

0000000000008c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8c92:	55                   	push   %rbp
    8c93:	48 89 e5             	mov    %rsp,%rbp
    8c96:	48 83 ec 10          	sub    $0x10,%rsp
    8c9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca2:	48 89 c7             	mov    %rax,%rdi
    8ca5:	e8 24 0e 00 00       	call   9ace <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8caa:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cb1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8cb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cb9:	48 8b 00             	mov    (%rax),%rax
    8cbc:	48 89 ce             	mov    %rcx,%rsi
    8cbf:	48 89 c7             	mov    %rax,%rdi
    8cc2:	e8 15 0e 00 00       	call   9adc <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ccb:	48 89 c7             	mov    %rax,%rdi
    8cce:	e8 27 00 00 00       	call   8cfa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8cd3:	90                   	nop
    8cd4:	c9                   	leave
    8cd5:	c3                   	ret

0000000000008cd6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8cd6:	55                   	push   %rbp
    8cd7:	48 89 e5             	mov    %rsp,%rbp
    8cda:	48 83 ec 10          	sub    $0x10,%rsp
    8cde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce6:	48 8b 10             	mov    (%rax),%rdx
    8ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ced:	48 89 d6             	mov    %rdx,%rsi
    8cf0:	48 89 c7             	mov    %rax,%rdi
    8cf3:	e8 0e 0e 00 00       	call   9b06 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8cf8:	c9                   	leave
    8cf9:	c3                   	ret

0000000000008cfa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8cfa:	55                   	push   %rbp
    8cfb:	48 89 e5             	mov    %rsp,%rbp
    8cfe:	48 83 ec 10          	sub    $0x10,%rsp
    8d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d0a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d12:	48 8b 00             	mov    (%rax),%rax
    8d15:	48 29 c2             	sub    %rax,%rdx
    8d18:	48 c1 fa 03          	sar    $0x3,%rdx
    8d1c:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8d23:	fc c0 0f 
    8d26:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8d2a:	48 89 c2             	mov    %rax,%rdx
    8d2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d31:	48 8b 08             	mov    (%rax),%rcx
    8d34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d38:	48 89 ce             	mov    %rcx,%rsi
    8d3b:	48 89 c7             	mov    %rax,%rdi
    8d3e:	e8 fb 0d 00 00       	call   9b3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d47:	48 89 c7             	mov    %rax,%rdi
    8d4a:	e8 99 fd ff ff       	call   8ae8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8d4f:	90                   	nop
    8d50:	c9                   	leave
    8d51:	c3                   	ret

0000000000008d52 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8d52:	55                   	push   %rbp
    8d53:	48 89 e5             	mov    %rsp,%rbp
    8d56:	48 83 ec 10          	sub    $0x10,%rsp
    8d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d62:	48 89 c7             	mov    %rax,%rdi
    8d65:	e8 0a 0e 00 00       	call   9b74 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    8d6a:	90                   	nop
    8d6b:	c9                   	leave
    8d6c:	c3                   	ret
    8d6d:	90                   	nop

0000000000008d6e <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8d6e:	55                   	push   %rbp
    8d6f:	48 89 e5             	mov    %rsp,%rbp
    8d72:	48 83 ec 10          	sub    $0x10,%rsp
    8d76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d7e:	48 89 c7             	mov    %rax,%rdi
    8d81:	e8 fa 0d 00 00       	call   9b80 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    8d86:	90                   	nop
    8d87:	c9                   	leave
    8d88:	c3                   	ret
    8d89:	90                   	nop

0000000000008d8a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8d8a:	55                   	push   %rbp
    8d8b:	48 89 e5             	mov    %rsp,%rbp
    8d8e:	53                   	push   %rbx
    8d8f:	48 83 ec 28          	sub    $0x28,%rsp
    8d93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8d9f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8da3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8da7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8dab:	48 89 d6             	mov    %rdx,%rsi
    8dae:	48 89 c7             	mov    %rax,%rdi
    8db1:	e8 d5 0d 00 00       	call   9b8b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8db6:	48 89 c1             	mov    %rax,%rcx
    8db9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8dbd:	48 89 c2             	mov    %rax,%rdx
    8dc0:	48 89 ce             	mov    %rcx,%rsi
    8dc3:	48 89 df             	mov    %rbx,%rdi
    8dc6:	e8 21 0e 00 00       	call   9bec <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8dcb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8dcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8dd3:	48 89 d6             	mov    %rdx,%rsi
    8dd6:	48 89 c7             	mov    %rax,%rdi
    8dd9:	e8 6c 0e 00 00       	call   9c4a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    8dde:	eb 1a                	jmp    8dfa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8de0:	48 89 c3             	mov    %rax,%rbx
    8de3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8de7:	48 89 c7             	mov    %rax,%rdi
    8dea:	e8 79 00 00 00       	call   8e68 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8def:	48 89 d8             	mov    %rbx,%rax
    8df2:	48 89 c7             	mov    %rax,%rdi
    8df5:	e8 b6 ba ff ff       	call   48b0 <_Unwind_Resume@plt>
    8dfa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8dfe:	c9                   	leave
    8dff:	c3                   	ret

0000000000008e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8e00:	55                   	push   %rbp
    8e01:	48 89 e5             	mov    %rsp,%rbp
    8e04:	48 83 ec 10          	sub    $0x10,%rsp
    8e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e10:	48 89 c7             	mov    %rax,%rdi
    8e13:	e8 72 0e 00 00       	call   9c8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8e18:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e1f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8e23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e27:	48 8b 00             	mov    (%rax),%rax
    8e2a:	48 89 ce             	mov    %rcx,%rsi
    8e2d:	48 89 c7             	mov    %rax,%rdi
    8e30:	e8 63 0e 00 00       	call   9c98 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e39:	48 89 c7             	mov    %rax,%rdi
    8e3c:	e8 27 00 00 00       	call   8e68 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8e41:	90                   	nop
    8e42:	c9                   	leave
    8e43:	c3                   	ret

0000000000008e44 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8e44:	55                   	push   %rbp
    8e45:	48 89 e5             	mov    %rsp,%rbp
    8e48:	48 83 ec 10          	sub    $0x10,%rsp
    8e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e54:	48 8b 10             	mov    (%rax),%rdx
    8e57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5b:	48 89 d6             	mov    %rdx,%rsi
    8e5e:	48 89 c7             	mov    %rax,%rdi
    8e61:	e8 5c 0e 00 00       	call   9cc2 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8e66:	c9                   	leave
    8e67:	c3                   	ret

0000000000008e68 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8e68:	55                   	push   %rbp
    8e69:	48 89 e5             	mov    %rsp,%rbp
    8e6c:	48 83 ec 10          	sub    $0x10,%rsp
    8e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e78:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e80:	48 8b 00             	mov    (%rax),%rax
    8e83:	48 29 c2             	sub    %rax,%rdx
    8e86:	48 c1 fa 02          	sar    $0x2,%rdx
    8e8a:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8e91:	fc c0 0f 
    8e94:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8e98:	48 89 c2             	mov    %rax,%rdx
    8e9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e9f:	48 8b 08             	mov    (%rax),%rcx
    8ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea6:	48 89 ce             	mov    %rcx,%rsi
    8ea9:	48 89 c7             	mov    %rax,%rdi
    8eac:	e8 49 0e 00 00       	call   9cfa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eb5:	48 89 c7             	mov    %rax,%rdi
    8eb8:	e8 47 fc ff ff       	call   8b04 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8ebd:	90                   	nop
    8ebe:	c9                   	leave
    8ebf:	c3                   	ret

0000000000008ec0 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8ec0:	55                   	push   %rbp
    8ec1:	48 89 e5             	mov    %rsp,%rbp
    8ec4:	48 83 ec 10          	sub    $0x10,%rsp
    8ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed0:	48 89 c7             	mov    %rax,%rdi
    8ed3:	e8 58 0e 00 00       	call   9d30 <_ZNSt15__new_allocatorIPKcEC1Ev>
    8ed8:	90                   	nop
    8ed9:	c9                   	leave
    8eda:	c3                   	ret
    8edb:	90                   	nop

0000000000008edc <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8edc:	55                   	push   %rbp
    8edd:	48 89 e5             	mov    %rsp,%rbp
    8ee0:	48 83 ec 10          	sub    $0x10,%rsp
    8ee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eec:	48 89 c7             	mov    %rax,%rdi
    8eef:	e8 48 0e 00 00       	call   9d3c <_ZNSt15__new_allocatorIPKcED1Ev>
    8ef4:	90                   	nop
    8ef5:	c9                   	leave
    8ef6:	c3                   	ret
    8ef7:	90                   	nop

0000000000008ef8 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8ef8:	55                   	push   %rbp
    8ef9:	48 89 e5             	mov    %rsp,%rbp
    8efc:	53                   	push   %rbx
    8efd:	48 83 ec 28          	sub    $0x28,%rsp
    8f01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8f0d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8f11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8f19:	48 89 d6             	mov    %rdx,%rsi
    8f1c:	48 89 c7             	mov    %rax,%rdi
    8f1f:	e8 23 0e 00 00       	call   9d47 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8f24:	48 89 c1             	mov    %rax,%rcx
    8f27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f2b:	48 89 c2             	mov    %rax,%rdx
    8f2e:	48 89 ce             	mov    %rcx,%rsi
    8f31:	48 89 df             	mov    %rbx,%rdi
    8f34:	e8 6f 0e 00 00       	call   9da8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8f39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f41:	48 89 d6             	mov    %rdx,%rsi
    8f44:	48 89 c7             	mov    %rax,%rdi
    8f47:	e8 ba 0e 00 00       	call   9e06 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    8f4c:	eb 1a                	jmp    8f68 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    8f4e:	48 89 c3             	mov    %rax,%rbx
    8f51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f55:	48 89 c7             	mov    %rax,%rdi
    8f58:	e8 31 00 00 00       	call   8f8e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    8f5d:	48 89 d8             	mov    %rbx,%rax
    8f60:	48 89 c7             	mov    %rax,%rdi
    8f63:	e8 48 b9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    8f68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f6c:	c9                   	leave
    8f6d:	c3                   	ret

0000000000008f6e <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8f6e:	55                   	push   %rbp
    8f6f:	48 89 e5             	mov    %rsp,%rbp
    8f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8f7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f7e:	48 8b 00             	mov    (%rax),%rax
    8f81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f85:	48 c1 e2 03          	shl    $0x3,%rdx
    8f89:	48 01 d0             	add    %rdx,%rax
      }
    8f8c:	5d                   	pop    %rbp
    8f8d:	c3                   	ret

0000000000008f8e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8f8e:	55                   	push   %rbp
    8f8f:	48 89 e5             	mov    %rsp,%rbp
    8f92:	48 83 ec 10          	sub    $0x10,%rsp
    8f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f9e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fa6:	48 8b 00             	mov    (%rax),%rax
    8fa9:	48 29 c2             	sub    %rax,%rdx
    8fac:	48 89 d0             	mov    %rdx,%rax
    8faf:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8fb3:	48 89 c2             	mov    %rax,%rdx
    8fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fba:	48 8b 08             	mov    (%rax),%rcx
    8fbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fc1:	48 89 ce             	mov    %rcx,%rsi
    8fc4:	48 89 c7             	mov    %rax,%rdi
    8fc7:	e8 ae 0e 00 00       	call   9e7a <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    8fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd0:	48 89 c7             	mov    %rax,%rdi
    8fd3:	e8 48 fb ff ff       	call   8b20 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8fd8:	90                   	nop
    8fd9:	c9                   	leave
    8fda:	c3                   	ret
    8fdb:	90                   	nop

0000000000008fdc <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8fdc:	55                   	push   %rbp
    8fdd:	48 89 e5             	mov    %rsp,%rbp
    8fe0:	48 83 ec 10          	sub    $0x10,%rsp
    8fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fec:	48 89 c7             	mov    %rax,%rdi
    8fef:	e8 bc 0e 00 00       	call   9eb0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    8ff4:	90                   	nop
    8ff5:	c9                   	leave
    8ff6:	c3                   	ret
    8ff7:	90                   	nop

0000000000008ff8 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8ff8:	55                   	push   %rbp
    8ff9:	48 89 e5             	mov    %rsp,%rbp
    8ffc:	48 83 ec 10          	sub    $0x10,%rsp
    9000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9008:	48 89 c7             	mov    %rax,%rdi
    900b:	e8 ac 0e 00 00       	call   9ebc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    9010:	90                   	nop
    9011:	c9                   	leave
    9012:	c3                   	ret
    9013:	90                   	nop

0000000000009014 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9014:	55                   	push   %rbp
    9015:	48 89 e5             	mov    %rsp,%rbp
    9018:	53                   	push   %rbx
    9019:	48 83 ec 28          	sub    $0x28,%rsp
    901d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9021:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9025:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9029:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    902d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9031:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9035:	48 89 d6             	mov    %rdx,%rsi
    9038:	48 89 c7             	mov    %rax,%rdi
    903b:	e8 87 0e 00 00       	call   9ec7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    9040:	48 89 c1             	mov    %rax,%rcx
    9043:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9047:	48 89 c2             	mov    %rax,%rdx
    904a:	48 89 ce             	mov    %rcx,%rsi
    904d:	48 89 df             	mov    %rbx,%rdi
    9050:	e8 d3 0e 00 00       	call   9f28 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9055:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    905d:	48 89 d6             	mov    %rdx,%rsi
    9060:	48 89 c7             	mov    %rax,%rdi
    9063:	e8 1e 0f 00 00       	call   9f86 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    9068:	eb 1a                	jmp    9084 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    906a:	48 89 c3             	mov    %rax,%rbx
    906d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9071:	48 89 c7             	mov    %rax,%rdi
    9074:	e8 79 00 00 00       	call   90f2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    9079:	48 89 d8             	mov    %rbx,%rax
    907c:	48 89 c7             	mov    %rax,%rdi
    907f:	e8 2c b8 ff ff       	call   48b0 <_Unwind_Resume@plt>
    9084:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9088:	c9                   	leave
    9089:	c3                   	ret

000000000000908a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    908a:	55                   	push   %rbp
    908b:	48 89 e5             	mov    %rsp,%rbp
    908e:	48 83 ec 10          	sub    $0x10,%rsp
    9092:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909a:	48 89 c7             	mov    %rax,%rdi
    909d:	e8 24 0f 00 00       	call   9fc6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    90a2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    90a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90a9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    90ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90b1:	48 8b 00             	mov    (%rax),%rax
    90b4:	48 89 ce             	mov    %rcx,%rsi
    90b7:	48 89 c7             	mov    %rax,%rdi
    90ba:	e8 15 0f 00 00       	call   9fd4 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    90bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90c3:	48 89 c7             	mov    %rax,%rdi
    90c6:	e8 27 00 00 00       	call   90f2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    90cb:	90                   	nop
    90cc:	c9                   	leave
    90cd:	c3                   	ret

00000000000090ce <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    90ce:	55                   	push   %rbp
    90cf:	48 89 e5             	mov    %rsp,%rbp
    90d2:	48 83 ec 10          	sub    $0x10,%rsp
    90d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    90da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90de:	48 8b 10             	mov    (%rax),%rdx
    90e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90e5:	48 89 d6             	mov    %rdx,%rsi
    90e8:	48 89 c7             	mov    %rax,%rdi
    90eb:	e8 0e 0f 00 00       	call   9ffe <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    90f0:	c9                   	leave
    90f1:	c3                   	ret

00000000000090f2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    90f2:	55                   	push   %rbp
    90f3:	48 89 e5             	mov    %rsp,%rbp
    90f6:	48 83 ec 10          	sub    $0x10,%rsp
    90fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    90fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9102:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    910a:	48 8b 00             	mov    (%rax),%rax
    910d:	48 29 c2             	sub    %rax,%rdx
    9110:	48 89 d0             	mov    %rdx,%rax
    9113:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9117:	48 89 c2             	mov    %rax,%rdx
    911a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    911e:	48 8b 08             	mov    (%rax),%rcx
    9121:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9125:	48 89 ce             	mov    %rcx,%rsi
    9128:	48 89 c7             	mov    %rax,%rdi
    912b:	e8 06 0f 00 00       	call   a036 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    9130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9134:	48 89 c7             	mov    %rax,%rdi
    9137:	e8 00 fa ff ff       	call   8b3c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    913c:	90                   	nop
    913d:	c9                   	leave
    913e:	c3                   	ret
    913f:	90                   	nop

0000000000009140 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9140:	55                   	push   %rbp
    9141:	48 89 e5             	mov    %rsp,%rbp
    9144:	48 83 ec 10          	sub    $0x10,%rsp
    9148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    914c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9150:	48 89 c7             	mov    %rax,%rdi
    9153:	e8 14 0f 00 00       	call   a06c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    9158:	90                   	nop
    9159:	c9                   	leave
    915a:	c3                   	ret
    915b:	90                   	nop

000000000000915c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    915c:	55                   	push   %rbp
    915d:	48 89 e5             	mov    %rsp,%rbp
    9160:	48 83 ec 10          	sub    $0x10,%rsp
    9164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    916c:	48 89 c7             	mov    %rax,%rdi
    916f:	e8 04 0f 00 00       	call   a078 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    9174:	90                   	nop
    9175:	c9                   	leave
    9176:	c3                   	ret
    9177:	90                   	nop

0000000000009178 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9178:	55                   	push   %rbp
    9179:	48 89 e5             	mov    %rsp,%rbp
    917c:	53                   	push   %rbx
    917d:	48 83 ec 28          	sub    $0x28,%rsp
    9181:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9185:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9189:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    918d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9191:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9195:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9199:	48 89 d6             	mov    %rdx,%rsi
    919c:	48 89 c7             	mov    %rax,%rdi
    919f:	e8 df 0e 00 00       	call   a083 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    91a4:	48 89 c1             	mov    %rax,%rcx
    91a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    91ab:	48 89 c2             	mov    %rax,%rdx
    91ae:	48 89 ce             	mov    %rcx,%rsi
    91b1:	48 89 df             	mov    %rbx,%rdi
    91b4:	e8 2b 0f 00 00       	call   a0e4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    91b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    91bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91c1:	48 89 d6             	mov    %rdx,%rsi
    91c4:	48 89 c7             	mov    %rax,%rdi
    91c7:	e8 76 0f 00 00       	call   a142 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    91cc:	eb 1a                	jmp    91e8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    91ce:	48 89 c3             	mov    %rax,%rbx
    91d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91d5:	48 89 c7             	mov    %rax,%rdi
    91d8:	e8 79 00 00 00       	call   9256 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    91dd:	48 89 d8             	mov    %rbx,%rax
    91e0:	48 89 c7             	mov    %rax,%rdi
    91e3:	e8 c8 b6 ff ff       	call   48b0 <_Unwind_Resume@plt>
    91e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91ec:	c9                   	leave
    91ed:	c3                   	ret

00000000000091ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    91ee:	55                   	push   %rbp
    91ef:	48 89 e5             	mov    %rsp,%rbp
    91f2:	48 83 ec 10          	sub    $0x10,%rsp
    91f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    91fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91fe:	48 89 c7             	mov    %rax,%rdi
    9201:	e8 7c 0f 00 00       	call   a182 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9206:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    920d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9211:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9215:	48 8b 00             	mov    (%rax),%rax
    9218:	48 89 ce             	mov    %rcx,%rsi
    921b:	48 89 c7             	mov    %rax,%rdi
    921e:	e8 6d 0f 00 00       	call   a190 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    9223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9227:	48 89 c7             	mov    %rax,%rdi
    922a:	e8 27 00 00 00       	call   9256 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    922f:	90                   	nop
    9230:	c9                   	leave
    9231:	c3                   	ret

0000000000009232 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9232:	55                   	push   %rbp
    9233:	48 89 e5             	mov    %rsp,%rbp
    9236:	48 83 ec 10          	sub    $0x10,%rsp
    923a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    923e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9242:	48 8b 10             	mov    (%rax),%rdx
    9245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9249:	48 89 d6             	mov    %rdx,%rsi
    924c:	48 89 c7             	mov    %rax,%rdi
    924f:	e8 66 0f 00 00       	call   a1ba <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9254:	c9                   	leave
    9255:	c3                   	ret

0000000000009256 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9256:	55                   	push   %rbp
    9257:	48 89 e5             	mov    %rsp,%rbp
    925a:	48 83 ec 10          	sub    $0x10,%rsp
    925e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9266:	48 8b 50 10          	mov    0x10(%rax),%rdx
    926a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    926e:	48 8b 00             	mov    (%rax),%rax
    9271:	48 29 c2             	sub    %rax,%rdx
    9274:	48 c1 fa 03          	sar    $0x3,%rdx
    9278:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    927f:	aa aa aa 
    9282:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9286:	48 89 c2             	mov    %rax,%rdx
    9289:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    928d:	48 8b 08             	mov    (%rax),%rcx
    9290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9294:	48 89 ce             	mov    %rcx,%rsi
    9297:	48 89 c7             	mov    %rax,%rdi
    929a:	e8 53 0f 00 00       	call   a1f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    929f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a3:	48 89 c7             	mov    %rax,%rdi
    92a6:	e8 ad f8 ff ff       	call   8b58 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    92ab:	90                   	nop
    92ac:	c9                   	leave
    92ad:	c3                   	ret

00000000000092ae <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    92ae:	55                   	push   %rbp
    92af:	48 89 e5             	mov    %rsp,%rbp
    92b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    92b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ba:	48 8b 50 08          	mov    0x8(%rax),%rdx
    92be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92c2:	48 8b 00             	mov    (%rax),%rax
    92c5:	48 29 c2             	sub    %rax,%rdx
    92c8:	48 c1 fa 03          	sar    $0x3,%rdx
    92cc:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    92d3:	aa aa aa 
    92d6:	48 0f af c2          	imul   %rdx,%rax
    92da:	5d                   	pop    %rbp
    92db:	c3                   	ret

00000000000092dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    92dc:	55                   	push   %rbp
    92dd:	48 89 e5             	mov    %rsp,%rbp
    92e0:	48 83 ec 10          	sub    $0x10,%rsp
    92e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ec:	48 89 c7             	mov    %rax,%rdi
    92ef:	e8 34 0f 00 00       	call   a228 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    92f4:	90                   	nop
    92f5:	c9                   	leave
    92f6:	c3                   	ret
    92f7:	90                   	nop

00000000000092f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    92f8:	55                   	push   %rbp
    92f9:	48 89 e5             	mov    %rsp,%rbp
    92fc:	48 83 ec 10          	sub    $0x10,%rsp
    9300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9308:	48 89 c7             	mov    %rax,%rdi
    930b:	e8 24 0f 00 00       	call   a234 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9310:	90                   	nop
    9311:	c9                   	leave
    9312:	c3                   	ret
    9313:	90                   	nop

0000000000009314 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9314:	55                   	push   %rbp
    9315:	48 89 e5             	mov    %rsp,%rbp
    9318:	53                   	push   %rbx
    9319:	48 83 ec 28          	sub    $0x28,%rsp
    931d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9321:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9325:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    9329:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    932d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9331:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9335:	48 89 d6             	mov    %rdx,%rsi
    9338:	48 89 c7             	mov    %rax,%rdi
    933b:	e8 ff 0e 00 00       	call   a23f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    9340:	48 89 c1             	mov    %rax,%rcx
    9343:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9347:	48 89 c2             	mov    %rax,%rdx
    934a:	48 89 ce             	mov    %rcx,%rsi
    934d:	48 89 df             	mov    %rbx,%rdi
    9350:	e8 4b 0f 00 00       	call   a2a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    9355:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9359:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    935d:	48 89 d6             	mov    %rdx,%rsi
    9360:	48 89 c7             	mov    %rax,%rdi
    9363:	e8 96 0f 00 00       	call   a2fe <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    9368:	eb 1a                	jmp    9384 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    936a:	48 89 c3             	mov    %rax,%rbx
    936d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9371:	48 89 c7             	mov    %rax,%rdi
    9374:	e8 bb 01 00 00       	call   9534 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9379:	48 89 d8             	mov    %rbx,%rax
    937c:	48 89 c7             	mov    %rax,%rdi
    937f:	e8 2c b5 ff ff       	call   48b0 <_Unwind_Resume@plt>
    9384:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9388:	c9                   	leave
    9389:	c3                   	ret

000000000000938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    938a:	55                   	push   %rbp
    938b:	48 89 e5             	mov    %rsp,%rbp
    938e:	48 83 ec 10          	sub    $0x10,%rsp
    9392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    939a:	48 89 c7             	mov    %rax,%rdi
    939d:	e8 9c 0f 00 00       	call   a33e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    93a2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    93a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    93ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93b1:	48 8b 00             	mov    (%rax),%rax
    93b4:	48 89 ce             	mov    %rcx,%rsi
    93b7:	48 89 c7             	mov    %rax,%rdi
    93ba:	e8 8d 0f 00 00       	call   a34c <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    93bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c3:	48 89 c7             	mov    %rax,%rdi
    93c6:	e8 69 01 00 00       	call   9534 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    93cb:	90                   	nop
    93cc:	c9                   	leave
    93cd:	c3                   	ret

00000000000093ce <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    93ce:	55                   	push   %rbp
    93cf:	48 89 e5             	mov    %rsp,%rbp
    93d2:	48 83 ec 20          	sub    $0x20,%rsp
    93d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    93da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    93de:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    93e2:	48 89 d6             	mov    %rdx,%rsi
    93e5:	48 89 c7             	mov    %rax,%rdi
    93e8:	e8 89 0f 00 00       	call   a376 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    93ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f1:	c9                   	leave
    93f2:	c3                   	ret
    93f3:	90                   	nop

00000000000093f4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    93f4:	55                   	push   %rbp
    93f5:	48 89 e5             	mov    %rsp,%rbp
    93f8:	48 83 ec 20          	sub    $0x20,%rsp
    93fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9404:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9408:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    940c:	48 89 d6             	mov    %rdx,%rsi
    940f:	48 89 c7             	mov    %rax,%rdi
    9412:	e8 5f 0f 00 00       	call   a376 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    941b:	c9                   	leave
    941c:	c3                   	ret

000000000000941d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    941d:	55                   	push   %rbp
    941e:	48 89 e5             	mov    %rsp,%rbp
    9421:	53                   	push   %rbx
    9422:	48 83 ec 18          	sub    $0x18,%rsp
    9426:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    942a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    942e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9432:	48 89 c7             	mov    %rax,%rdi
    9435:	e8 5a 0f 00 00       	call   a394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    943a:	48 8b 18             	mov    (%rax),%rbx
    943d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9441:	48 89 c7             	mov    %rax,%rdi
    9444:	e8 4b 0f 00 00       	call   a394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9449:	48 8b 00             	mov    (%rax),%rax
    944c:	48 39 c3             	cmp    %rax,%rbx
    944f:	0f 95 c0             	setne  %al
    9452:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9456:	c9                   	leave
    9457:	c3                   	ret

0000000000009458 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9458:	55                   	push   %rbp
    9459:	48 89 e5             	mov    %rsp,%rbp
    945c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9464:	48 8b 00             	mov    (%rax),%rax
    9467:	48 8d 50 18          	lea    0x18(%rax),%rdx
    946b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    946f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9476:	5d                   	pop    %rbp
    9477:	c3                   	ret

0000000000009478 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9478:	55                   	push   %rbp
    9479:	48 89 e5             	mov    %rsp,%rbp
    947c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9484:	48 8b 00             	mov    (%rax),%rax
    9487:	5d                   	pop    %rbp
    9488:	c3                   	ret
    9489:	90                   	nop

000000000000948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    948a:	55                   	push   %rbp
    948b:	48 89 e5             	mov    %rsp,%rbp
    948e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9492:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    949a:	48 8b 08             	mov    (%rax),%rcx
    949d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94a1:	48 89 d0             	mov    %rdx,%rax
    94a4:	48 c1 e0 03          	shl    $0x3,%rax
    94a8:	48 29 d0             	sub    %rdx,%rax
    94ab:	48 c1 e0 02          	shl    $0x2,%rax
    94af:	48 01 c8             	add    %rcx,%rax
      }
    94b2:	5d                   	pop    %rbp
    94b3:	c3                   	ret

00000000000094b4 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    94b4:	55                   	push   %rbp
    94b5:	48 89 e5             	mov    %rsp,%rbp
    94b8:	53                   	push   %rbx
    94b9:	48 83 ec 18          	sub    $0x18,%rsp
    94bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    94c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    94c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94c9:	48 89 c7             	mov    %rax,%rdi
    94cc:	e8 d1 0e 00 00       	call   a3a2 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    94d1:	84 c0                	test   %al,%al
    94d3:	74 36                	je     950b <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    94d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94d9:	48 89 c7             	mov    %rax,%rdi
    94dc:	e8 17 0f 00 00       	call   a3f8 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    94e1:	48 89 c3             	mov    %rax,%rbx
    94e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94e8:	48 89 c7             	mov    %rax,%rdi
    94eb:	e8 c4 0e 00 00       	call   a3b4 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    94f0:	48 89 c1             	mov    %rax,%rcx
    94f3:	48 8b 03             	mov    (%rbx),%rax
    94f6:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    94fa:	48 89 01             	mov    %rax,(%rcx)
    94fd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    9501:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9505:	48 89 41 10          	mov    %rax,0x10(%rcx)
    9509:	eb 1e                	jmp    9529 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    950b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    950f:	48 89 c7             	mov    %rax,%rdi
    9512:	e8 e1 0e 00 00       	call   a3f8 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9517:	48 89 c2             	mov    %rax,%rdx
    951a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    951e:	48 89 d6             	mov    %rdx,%rsi
    9521:	48 89 c7             	mov    %rax,%rdi
    9524:	e8 dd 0e 00 00       	call   a406 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    9529:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    952d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9531:	c9                   	leave
    9532:	c3                   	ret
    9533:	90                   	nop

0000000000009534 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9534:	55                   	push   %rbp
    9535:	48 89 e5             	mov    %rsp,%rbp
    9538:	48 83 ec 10          	sub    $0x10,%rsp
    953c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9544:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    954c:	48 8b 00             	mov    (%rax),%rax
    954f:	48 29 c2             	sub    %rax,%rdx
    9552:	48 c1 fa 02          	sar    $0x2,%rdx
    9556:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    955d:	db b6 6d 
    9560:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9564:	48 89 c2             	mov    %rax,%rdx
    9567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    956b:	48 8b 08             	mov    (%rax),%rcx
    956e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9572:	48 89 ce             	mov    %rcx,%rsi
    9575:	48 89 c7             	mov    %rax,%rdi
    9578:	e8 e3 0e 00 00       	call   a460 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    957d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9581:	48 89 c7             	mov    %rax,%rdi
    9584:	e8 eb f5 ff ff       	call   8b74 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9589:	90                   	nop
    958a:	c9                   	leave
    958b:	c3                   	ret

000000000000958c <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    958c:	55                   	push   %rbp
    958d:	48 89 e5             	mov    %rsp,%rbp
    9590:	48 83 ec 10          	sub    $0x10,%rsp
    9594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    959c:	48 89 c7             	mov    %rax,%rdi
    959f:	e8 f2 0e 00 00       	call   a496 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    95a4:	90                   	nop
    95a5:	c9                   	leave
    95a6:	c3                   	ret
    95a7:	90                   	nop

00000000000095a8 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    95a8:	55                   	push   %rbp
    95a9:	48 89 e5             	mov    %rsp,%rbp
    95ac:	48 83 ec 10          	sub    $0x10,%rsp
    95b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95b8:	48 89 c7             	mov    %rax,%rdi
    95bb:	e8 e2 0e 00 00       	call   a4a2 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    95c0:	90                   	nop
    95c1:	c9                   	leave
    95c2:	c3                   	ret
    95c3:	90                   	nop

00000000000095c4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    95c4:	55                   	push   %rbp
    95c5:	48 89 e5             	mov    %rsp,%rbp
    95c8:	53                   	push   %rbx
    95c9:	48 83 ec 28          	sub    $0x28,%rsp
    95cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    95d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    95d9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    95dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    95e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95e5:	48 89 d6             	mov    %rdx,%rsi
    95e8:	48 89 c7             	mov    %rax,%rdi
    95eb:	e8 bd 0e 00 00       	call   a4ad <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    95f0:	48 89 c1             	mov    %rax,%rcx
    95f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    95f7:	48 89 c2             	mov    %rax,%rdx
    95fa:	48 89 ce             	mov    %rcx,%rsi
    95fd:	48 89 df             	mov    %rbx,%rdi
    9600:	e8 09 0f 00 00       	call   a50e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9605:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9609:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    960d:	48 89 d6             	mov    %rdx,%rsi
    9610:	48 89 c7             	mov    %rax,%rdi
    9613:	e8 54 0f 00 00       	call   a56c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    9618:	eb 1a                	jmp    9634 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    961a:	48 89 c3             	mov    %rax,%rbx
    961d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9621:	48 89 c7             	mov    %rax,%rdi
    9624:	e8 79 00 00 00       	call   96a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    9629:	48 89 d8             	mov    %rbx,%rax
    962c:	48 89 c7             	mov    %rax,%rdi
    962f:	e8 7c b2 ff ff       	call   48b0 <_Unwind_Resume@plt>
    9634:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9638:	c9                   	leave
    9639:	c3                   	ret

000000000000963a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    963a:	55                   	push   %rbp
    963b:	48 89 e5             	mov    %rsp,%rbp
    963e:	48 83 ec 10          	sub    $0x10,%rsp
    9642:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    964a:	48 89 c7             	mov    %rax,%rdi
    964d:	e8 5a 0f 00 00       	call   a5ac <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9652:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9659:	48 8b 48 08          	mov    0x8(%rax),%rcx
    965d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9661:	48 8b 00             	mov    (%rax),%rax
    9664:	48 89 ce             	mov    %rcx,%rsi
    9667:	48 89 c7             	mov    %rax,%rdi
    966a:	e8 4b 0f 00 00       	call   a5ba <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    966f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9673:	48 89 c7             	mov    %rax,%rdi
    9676:	e8 27 00 00 00       	call   96a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    967b:	90                   	nop
    967c:	c9                   	leave
    967d:	c3                   	ret

000000000000967e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    967e:	55                   	push   %rbp
    967f:	48 89 e5             	mov    %rsp,%rbp
    9682:	48 83 ec 10          	sub    $0x10,%rsp
    9686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    968a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    968e:	48 8b 10             	mov    (%rax),%rdx
    9691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9695:	48 89 d6             	mov    %rdx,%rsi
    9698:	48 89 c7             	mov    %rax,%rdi
    969b:	e8 44 0f 00 00       	call   a5e4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    96a0:	c9                   	leave
    96a1:	c3                   	ret

00000000000096a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    96a2:	55                   	push   %rbp
    96a3:	48 89 e5             	mov    %rsp,%rbp
    96a6:	48 83 ec 10          	sub    $0x10,%rsp
    96aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    96ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    96b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ba:	48 8b 00             	mov    (%rax),%rax
    96bd:	48 29 c2             	sub    %rax,%rdx
    96c0:	48 89 d0             	mov    %rdx,%rax
    96c3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    96c7:	48 89 c2             	mov    %rax,%rdx
    96ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ce:	48 8b 08             	mov    (%rax),%rcx
    96d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96d5:	48 89 ce             	mov    %rcx,%rsi
    96d8:	48 89 c7             	mov    %rax,%rdi
    96db:	e8 3c 0f 00 00       	call   a61c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    96e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e4:	48 89 c7             	mov    %rax,%rdi
    96e7:	e8 a4 f4 ff ff       	call   8b90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    96ec:	90                   	nop
    96ed:	c9                   	leave
    96ee:	c3                   	ret
    96ef:	90                   	nop

00000000000096f0 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    96f0:	55                   	push   %rbp
    96f1:	48 89 e5             	mov    %rsp,%rbp
    96f4:	48 83 ec 10          	sub    $0x10,%rsp
    96f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9700:	48 89 c7             	mov    %rax,%rdi
    9703:	e8 4a 0f 00 00       	call   a652 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    9708:	90                   	nop
    9709:	c9                   	leave
    970a:	c3                   	ret
    970b:	90                   	nop

000000000000970c <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    970c:	55                   	push   %rbp
    970d:	48 89 e5             	mov    %rsp,%rbp
    9710:	48 83 ec 10          	sub    $0x10,%rsp
    9714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    971c:	48 89 c7             	mov    %rax,%rdi
    971f:	e8 3a 0f 00 00       	call   a65e <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    9724:	90                   	nop
    9725:	c9                   	leave
    9726:	c3                   	ret
    9727:	90                   	nop

0000000000009728 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9728:	55                   	push   %rbp
    9729:	48 89 e5             	mov    %rsp,%rbp
    972c:	53                   	push   %rbx
    972d:	48 83 ec 28          	sub    $0x28,%rsp
    9731:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9735:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9739:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    973d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9741:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9745:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9749:	48 89 d6             	mov    %rdx,%rsi
    974c:	48 89 c7             	mov    %rax,%rdi
    974f:	e8 15 0f 00 00       	call   a669 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    9754:	48 89 c1             	mov    %rax,%rcx
    9757:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    975b:	48 89 c2             	mov    %rax,%rdx
    975e:	48 89 ce             	mov    %rcx,%rsi
    9761:	48 89 df             	mov    %rbx,%rdi
    9764:	e8 61 0f 00 00       	call   a6ca <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9769:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    976d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9771:	48 89 d6             	mov    %rdx,%rsi
    9774:	48 89 c7             	mov    %rax,%rdi
    9777:	e8 ac 0f 00 00       	call   a728 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    977c:	eb 1a                	jmp    9798 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    977e:	48 89 c3             	mov    %rax,%rbx
    9781:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9785:	48 89 c7             	mov    %rax,%rdi
    9788:	e8 79 00 00 00       	call   9806 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    978d:	48 89 d8             	mov    %rbx,%rax
    9790:	48 89 c7             	mov    %rax,%rdi
    9793:	e8 18 b1 ff ff       	call   48b0 <_Unwind_Resume@plt>
    9798:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    979c:	c9                   	leave
    979d:	c3                   	ret

000000000000979e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    979e:	55                   	push   %rbp
    979f:	48 89 e5             	mov    %rsp,%rbp
    97a2:	48 83 ec 10          	sub    $0x10,%rsp
    97a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    97aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ae:	48 89 c7             	mov    %rax,%rdi
    97b1:	e8 b2 0f 00 00       	call   a768 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    97b6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    97b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97bd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    97c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c5:	48 8b 00             	mov    (%rax),%rax
    97c8:	48 89 ce             	mov    %rcx,%rsi
    97cb:	48 89 c7             	mov    %rax,%rdi
    97ce:	e8 a3 0f 00 00       	call   a776 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    97d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d7:	48 89 c7             	mov    %rax,%rdi
    97da:	e8 27 00 00 00       	call   9806 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    97df:	90                   	nop
    97e0:	c9                   	leave
    97e1:	c3                   	ret

00000000000097e2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    97e2:	55                   	push   %rbp
    97e3:	48 89 e5             	mov    %rsp,%rbp
    97e6:	48 83 ec 10          	sub    $0x10,%rsp
    97ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    97ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f2:	48 8b 10             	mov    (%rax),%rdx
    97f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f9:	48 89 d6             	mov    %rdx,%rsi
    97fc:	48 89 c7             	mov    %rax,%rdi
    97ff:	e8 9c 0f 00 00       	call   a7a0 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9804:	c9                   	leave
    9805:	c3                   	ret

0000000000009806 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9806:	55                   	push   %rbp
    9807:	48 89 e5             	mov    %rsp,%rbp
    980a:	48 83 ec 10          	sub    $0x10,%rsp
    980e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9816:	48 8b 50 10          	mov    0x10(%rax),%rdx
    981a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    981e:	48 8b 00             	mov    (%rax),%rax
    9821:	48 29 c2             	sub    %rax,%rdx
    9824:	48 89 d0             	mov    %rdx,%rax
    9827:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    982b:	48 89 c2             	mov    %rax,%rdx
    982e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9832:	48 8b 08             	mov    (%rax),%rcx
    9835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9839:	48 89 ce             	mov    %rcx,%rsi
    983c:	48 89 c7             	mov    %rax,%rdi
    983f:	e8 94 0f 00 00       	call   a7d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    9844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9848:	48 89 c7             	mov    %rax,%rdi
    984b:	e8 5c f3 ff ff       	call   8bac <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    9850:	90                   	nop
    9851:	c9                   	leave
    9852:	c3                   	ret
    9853:	90                   	nop

0000000000009854 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9854:	55                   	push   %rbp
    9855:	48 89 e5             	mov    %rsp,%rbp
    9858:	48 83 ec 10          	sub    $0x10,%rsp
    985c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9864:	48 89 c7             	mov    %rax,%rdi
    9867:	e8 a2 0f 00 00       	call   a80e <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    986c:	90                   	nop
    986d:	c9                   	leave
    986e:	c3                   	ret
    986f:	90                   	nop

0000000000009870 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9870:	55                   	push   %rbp
    9871:	48 89 e5             	mov    %rsp,%rbp
    9874:	48 83 ec 10          	sub    $0x10,%rsp
    9878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    987c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9880:	48 89 c7             	mov    %rax,%rdi
    9883:	e8 92 0f 00 00       	call   a81a <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    9888:	90                   	nop
    9889:	c9                   	leave
    988a:	c3                   	ret
    988b:	90                   	nop

000000000000988c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    988c:	55                   	push   %rbp
    988d:	48 89 e5             	mov    %rsp,%rbp
    9890:	53                   	push   %rbx
    9891:	48 83 ec 28          	sub    $0x28,%rsp
    9895:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9899:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    989d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    98a1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    98a5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    98a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98ad:	48 89 d6             	mov    %rdx,%rsi
    98b0:	48 89 c7             	mov    %rax,%rdi
    98b3:	e8 6d 0f 00 00       	call   a825 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    98b8:	48 89 c1             	mov    %rax,%rcx
    98bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98bf:	48 89 c2             	mov    %rax,%rdx
    98c2:	48 89 ce             	mov    %rcx,%rsi
    98c5:	48 89 df             	mov    %rbx,%rdi
    98c8:	e8 b9 0f 00 00       	call   a886 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    98cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98d5:	48 89 d6             	mov    %rdx,%rsi
    98d8:	48 89 c7             	mov    %rax,%rdi
    98db:	e8 04 10 00 00       	call   a8e4 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    98e0:	eb 1a                	jmp    98fc <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    98e2:	48 89 c3             	mov    %rax,%rbx
    98e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98e9:	48 89 c7             	mov    %rax,%rdi
    98ec:	e8 79 00 00 00       	call   996a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    98f1:	48 89 d8             	mov    %rbx,%rax
    98f4:	48 89 c7             	mov    %rax,%rdi
    98f7:	e8 b4 af ff ff       	call   48b0 <_Unwind_Resume@plt>
    98fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9900:	c9                   	leave
    9901:	c3                   	ret

0000000000009902 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9902:	55                   	push   %rbp
    9903:	48 89 e5             	mov    %rsp,%rbp
    9906:	48 83 ec 10          	sub    $0x10,%rsp
    990a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    990e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9912:	48 89 c7             	mov    %rax,%rdi
    9915:	e8 0a 10 00 00       	call   a924 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    991a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    991d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9921:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9929:	48 8b 00             	mov    (%rax),%rax
    992c:	48 89 ce             	mov    %rcx,%rsi
    992f:	48 89 c7             	mov    %rax,%rdi
    9932:	e8 fb 0f 00 00       	call   a932 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    9937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    993b:	48 89 c7             	mov    %rax,%rdi
    993e:	e8 27 00 00 00       	call   996a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    9943:	90                   	nop
    9944:	c9                   	leave
    9945:	c3                   	ret

0000000000009946 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9946:	55                   	push   %rbp
    9947:	48 89 e5             	mov    %rsp,%rbp
    994a:	48 83 ec 10          	sub    $0x10,%rsp
    994e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9956:	48 8b 10             	mov    (%rax),%rdx
    9959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    995d:	48 89 d6             	mov    %rdx,%rsi
    9960:	48 89 c7             	mov    %rax,%rdi
    9963:	e8 f4 0f 00 00       	call   a95c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9968:	c9                   	leave
    9969:	c3                   	ret

000000000000996a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    996a:	55                   	push   %rbp
    996b:	48 89 e5             	mov    %rsp,%rbp
    996e:	48 83 ec 10          	sub    $0x10,%rsp
    9972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    997e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9982:	48 8b 00             	mov    (%rax),%rax
    9985:	48 29 c2             	sub    %rax,%rdx
    9988:	48 89 d0             	mov    %rdx,%rax
    998b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    998f:	48 89 c2             	mov    %rax,%rdx
    9992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9996:	48 8b 08             	mov    (%rax),%rcx
    9999:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    999d:	48 89 ce             	mov    %rcx,%rsi
    99a0:	48 89 c7             	mov    %rax,%rdi
    99a3:	e8 ec 0f 00 00       	call   a994 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    99a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99ac:	48 89 c7             	mov    %rax,%rdi
    99af:	e8 14 f2 ff ff       	call   8bc8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    99b4:	90                   	nop
    99b5:	c9                   	leave
    99b6:	c3                   	ret
    99b7:	90                   	nop

00000000000099b8 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    99b8:	55                   	push   %rbp
    99b9:	48 89 e5             	mov    %rsp,%rbp
    99bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99c0:	90                   	nop
    99c1:	5d                   	pop    %rbp
    99c2:	c3                   	ret
    99c3:	90                   	nop

00000000000099c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    99c4:	55                   	push   %rbp
    99c5:	48 89 e5             	mov    %rsp,%rbp
    99c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99cc:	90                   	nop
    99cd:	5d                   	pop    %rbp
    99ce:	c3                   	ret

00000000000099cf <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    99cf:	55                   	push   %rbp
    99d0:	48 89 e5             	mov    %rsp,%rbp
    99d3:	53                   	push   %rbx
    99d4:	48 83 ec 28          	sub    $0x28,%rsp
    99d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    99dc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    99e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    99e4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99e8:	48 89 d6             	mov    %rdx,%rsi
    99eb:	48 89 c7             	mov    %rax,%rdi
    99ee:	e8 25 01 00 00       	call   9b18 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    99f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99f7:	48 89 c7             	mov    %rax,%rdi
    99fa:	e8 ca 0f 00 00       	call   a9c9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    99ff:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9a03:	0f 92 c3             	setb   %bl
    9a06:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9a0a:	48 89 c7             	mov    %rax,%rdi
    9a0d:	e8 ee f1 ff ff       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
    9a12:	84 db                	test   %bl,%bl
    9a14:	74 0f                	je     9a25 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9a16:	48 8d 05 0b 49 01 00 	lea    0x1490b(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9a1d:	48 89 c7             	mov    %rax,%rdi
    9a20:	e8 bb a7 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9a25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9a29:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a2d:	c9                   	leave
    9a2e:	c3                   	ret
    9a2f:	90                   	nop

0000000000009a30 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9a30:	55                   	push   %rbp
    9a31:	48 89 e5             	mov    %rsp,%rbp
    9a34:	53                   	push   %rbx
    9a35:	48 83 ec 28          	sub    $0x28,%rsp
    9a39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9a45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a49:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9a4d:	48 89 d6             	mov    %rdx,%rsi
    9a50:	48 89 c7             	mov    %rax,%rdi
    9a53:	e8 b4 0f 00 00       	call   aa0c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9a58:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a60:	48 89 d6             	mov    %rdx,%rsi
    9a63:	48 89 c7             	mov    %rax,%rdi
    9a66:	e8 d3 0f 00 00       	call   aa3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    9a6b:	eb 1a                	jmp    9a87 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    9a6d:	48 89 c3             	mov    %rax,%rbx
    9a70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a74:	48 89 c7             	mov    %rax,%rdi
    9a77:	e8 6c f0 ff ff       	call   8ae8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    9a7c:	48 89 d8             	mov    %rbx,%rax
    9a7f:	48 89 c7             	mov    %rax,%rdi
    9a82:	e8 29 ae ff ff       	call   48b0 <_Unwind_Resume@plt>
    9a87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a8b:	c9                   	leave
    9a8c:	c3                   	ret
    9a8d:	90                   	nop

0000000000009a8e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9a8e:	55                   	push   %rbp
    9a8f:	48 89 e5             	mov    %rsp,%rbp
    9a92:	48 83 ec 10          	sub    $0x10,%rsp
    9a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa2:	48 89 c7             	mov    %rax,%rdi
    9aa5:	e8 24 00 00 00       	call   9ace <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9aaa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab1:	48 8b 00             	mov    (%rax),%rax
    9ab4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ab8:	48 89 ce             	mov    %rcx,%rsi
    9abb:	48 89 c7             	mov    %rax,%rdi
    9abe:	e8 dc 0f 00 00       	call   aa9f <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9ac3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9ac7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9acb:	90                   	nop
    9acc:	c9                   	leave
    9acd:	c3                   	ret

0000000000009ace <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9ace:	55                   	push   %rbp
    9acf:	48 89 e5             	mov    %rsp,%rbp
    9ad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9ad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ada:	5d                   	pop    %rbp
    9adb:	c3                   	ret

0000000000009adc <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9adc:	55                   	push   %rbp
    9add:	48 89 e5             	mov    %rsp,%rbp
    9ae0:	48 83 ec 20          	sub    $0x20,%rsp
    9ae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ae8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9aec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9af0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af8:	48 89 d6             	mov    %rdx,%rsi
    9afb:	48 89 c7             	mov    %rax,%rdi
    9afe:	e8 c5 0f 00 00       	call   aac8 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    9b03:	90                   	nop
    9b04:	c9                   	leave
    9b05:	c3                   	ret

0000000000009b06 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9b06:	55                   	push   %rbp
    9b07:	48 89 e5             	mov    %rsp,%rbp
    9b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9b12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b16:	5d                   	pop    %rbp
    9b17:	c3                   	ret

0000000000009b18 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9b18:	55                   	push   %rbp
    9b19:	48 89 e5             	mov    %rsp,%rbp
    9b1c:	48 83 ec 10          	sub    $0x10,%rsp
    9b20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9b28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b30:	48 89 d6             	mov    %rdx,%rsi
    9b33:	48 89 c7             	mov    %rax,%rdi
    9b36:	e8 b3 0f 00 00       	call   aaee <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    9b3b:	90                   	nop
    9b3c:	c9                   	leave
    9b3d:	c3                   	ret

0000000000009b3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9b3e:	55                   	push   %rbp
    9b3f:	48 89 e5             	mov    %rsp,%rbp
    9b42:	48 83 ec 20          	sub    $0x20,%rsp
    9b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9b52:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9b57:	74 17                	je     9b70 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b61:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b65:	48 89 ce             	mov    %rcx,%rsi
    9b68:	48 89 c7             	mov    %rax,%rdi
    9b6b:	e8 8d 0f 00 00       	call   aafd <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    9b70:	90                   	nop
    9b71:	c9                   	leave
    9b72:	c3                   	ret
    9b73:	90                   	nop

0000000000009b74 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9b74:	55                   	push   %rbp
    9b75:	48 89 e5             	mov    %rsp,%rbp
    9b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b7c:	90                   	nop
    9b7d:	5d                   	pop    %rbp
    9b7e:	c3                   	ret
    9b7f:	90                   	nop

0000000000009b80 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9b80:	55                   	push   %rbp
    9b81:	48 89 e5             	mov    %rsp,%rbp
    9b84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b88:	90                   	nop
    9b89:	5d                   	pop    %rbp
    9b8a:	c3                   	ret

0000000000009b8b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9b8b:	55                   	push   %rbp
    9b8c:	48 89 e5             	mov    %rsp,%rbp
    9b8f:	53                   	push   %rbx
    9b90:	48 83 ec 28          	sub    $0x28,%rsp
    9b94:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9b98:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9b9c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9ba0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9ba4:	48 89 d6             	mov    %rdx,%rsi
    9ba7:	48 89 c7             	mov    %rax,%rdi
    9baa:	e8 25 01 00 00       	call   9cd4 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9baf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9bb3:	48 89 c7             	mov    %rax,%rdi
    9bb6:	e8 70 0f 00 00       	call   ab2b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9bbb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9bbf:	0f 92 c3             	setb   %bl
    9bc2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9bc6:	48 89 c7             	mov    %rax,%rdi
    9bc9:	e8 a0 f1 ff ff       	call   8d6e <_ZNSaI21VkExtensionPropertiesED1Ev>
    9bce:	84 db                	test   %bl,%bl
    9bd0:	74 0f                	je     9be1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9bd2:	48 8d 05 4f 47 01 00 	lea    0x1474f(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9bd9:	48 89 c7             	mov    %rax,%rdi
    9bdc:	e8 ff a5 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9be1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9be5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9be9:	c9                   	leave
    9bea:	c3                   	ret
    9beb:	90                   	nop

0000000000009bec <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9bec:	55                   	push   %rbp
    9bed:	48 89 e5             	mov    %rsp,%rbp
    9bf0:	53                   	push   %rbx
    9bf1:	48 83 ec 28          	sub    $0x28,%rsp
    9bf5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9bf9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9bfd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9c01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c09:	48 89 d6             	mov    %rdx,%rsi
    9c0c:	48 89 c7             	mov    %rax,%rdi
    9c0f:	e8 5a 0f 00 00       	call   ab6e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9c14:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c1c:	48 89 d6             	mov    %rdx,%rsi
    9c1f:	48 89 c7             	mov    %rax,%rdi
    9c22:	e8 79 0f 00 00       	call   aba0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    9c27:	eb 1a                	jmp    9c43 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    9c29:	48 89 c3             	mov    %rax,%rbx
    9c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c30:	48 89 c7             	mov    %rax,%rdi
    9c33:	e8 cc ee ff ff       	call   8b04 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    9c38:	48 89 d8             	mov    %rbx,%rax
    9c3b:	48 89 c7             	mov    %rax,%rdi
    9c3e:	e8 6d ac ff ff       	call   48b0 <_Unwind_Resume@plt>
    9c43:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c47:	c9                   	leave
    9c48:	c3                   	ret
    9c49:	90                   	nop

0000000000009c4a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9c4a:	55                   	push   %rbp
    9c4b:	48 89 e5             	mov    %rsp,%rbp
    9c4e:	48 83 ec 10          	sub    $0x10,%rsp
    9c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c5e:	48 89 c7             	mov    %rax,%rdi
    9c61:	e8 24 00 00 00       	call   9c8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9c66:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c6d:	48 8b 00             	mov    (%rax),%rax
    9c70:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c74:	48 89 ce             	mov    %rcx,%rsi
    9c77:	48 89 c7             	mov    %rax,%rdi
    9c7a:	e8 82 0f 00 00       	call   ac01 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9c7f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c83:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9c87:	90                   	nop
    9c88:	c9                   	leave
    9c89:	c3                   	ret

0000000000009c8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9c8a:	55                   	push   %rbp
    9c8b:	48 89 e5             	mov    %rsp,%rbp
    9c8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c96:	5d                   	pop    %rbp
    9c97:	c3                   	ret

0000000000009c98 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9c98:	55                   	push   %rbp
    9c99:	48 89 e5             	mov    %rsp,%rbp
    9c9c:	48 83 ec 20          	sub    $0x20,%rsp
    9ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ca8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9cac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cb4:	48 89 d6             	mov    %rdx,%rsi
    9cb7:	48 89 c7             	mov    %rax,%rdi
    9cba:	e8 6b 0f 00 00       	call   ac2a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    9cbf:	90                   	nop
    9cc0:	c9                   	leave
    9cc1:	c3                   	ret

0000000000009cc2 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9cc2:	55                   	push   %rbp
    9cc3:	48 89 e5             	mov    %rsp,%rbp
    9cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9cce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cd2:	5d                   	pop    %rbp
    9cd3:	c3                   	ret

0000000000009cd4 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9cd4:	55                   	push   %rbp
    9cd5:	48 89 e5             	mov    %rsp,%rbp
    9cd8:	48 83 ec 10          	sub    $0x10,%rsp
    9cdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ce0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9ce4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cec:	48 89 d6             	mov    %rdx,%rsi
    9cef:	48 89 c7             	mov    %rax,%rdi
    9cf2:	e8 59 0f 00 00       	call   ac50 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    9cf7:	90                   	nop
    9cf8:	c9                   	leave
    9cf9:	c3                   	ret

0000000000009cfa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9cfa:	55                   	push   %rbp
    9cfb:	48 89 e5             	mov    %rsp,%rbp
    9cfe:	48 83 ec 20          	sub    $0x20,%rsp
    9d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9d0e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9d13:	74 17                	je     9d2c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d1d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d21:	48 89 ce             	mov    %rcx,%rsi
    9d24:	48 89 c7             	mov    %rax,%rdi
    9d27:	e8 33 0f 00 00       	call   ac5f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    9d2c:	90                   	nop
    9d2d:	c9                   	leave
    9d2e:	c3                   	ret
    9d2f:	90                   	nop

0000000000009d30 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9d30:	55                   	push   %rbp
    9d31:	48 89 e5             	mov    %rsp,%rbp
    9d34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d38:	90                   	nop
    9d39:	5d                   	pop    %rbp
    9d3a:	c3                   	ret
    9d3b:	90                   	nop

0000000000009d3c <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9d3c:	55                   	push   %rbp
    9d3d:	48 89 e5             	mov    %rsp,%rbp
    9d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d44:	90                   	nop
    9d45:	5d                   	pop    %rbp
    9d46:	c3                   	ret

0000000000009d47 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9d47:	55                   	push   %rbp
    9d48:	48 89 e5             	mov    %rsp,%rbp
    9d4b:	53                   	push   %rbx
    9d4c:	48 83 ec 28          	sub    $0x28,%rsp
    9d50:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9d54:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9d58:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9d5c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d60:	48 89 d6             	mov    %rdx,%rsi
    9d63:	48 89 c7             	mov    %rax,%rdi
    9d66:	e8 e9 00 00 00       	call   9e54 <_ZNSaIPKcEC1ERKS1_>
    9d6b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d6f:	48 89 c7             	mov    %rax,%rdi
    9d72:	e8 16 0f 00 00       	call   ac8d <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    9d77:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9d7b:	0f 92 c3             	setb   %bl
    9d7e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d82:	48 89 c7             	mov    %rax,%rdi
    9d85:	e8 52 f1 ff ff       	call   8edc <_ZNSaIPKcED1Ev>
    9d8a:	84 db                	test   %bl,%bl
    9d8c:	74 0f                	je     9d9d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9d8e:	48 8d 05 93 45 01 00 	lea    0x14593(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9d95:	48 89 c7             	mov    %rax,%rdi
    9d98:	e8 43 a4 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9d9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9da1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9da5:	c9                   	leave
    9da6:	c3                   	ret
    9da7:	90                   	nop

0000000000009da8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9da8:	55                   	push   %rbp
    9da9:	48 89 e5             	mov    %rsp,%rbp
    9dac:	53                   	push   %rbx
    9dad:	48 83 ec 28          	sub    $0x28,%rsp
    9db1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9db5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9db9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dc1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9dc5:	48 89 d6             	mov    %rdx,%rsi
    9dc8:	48 89 c7             	mov    %rax,%rdi
    9dcb:	e8 00 0f 00 00       	call   acd0 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9dd0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9dd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dd8:	48 89 d6             	mov    %rdx,%rsi
    9ddb:	48 89 c7             	mov    %rax,%rdi
    9dde:	e8 1f 0f 00 00       	call   ad02 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    9de3:	eb 1a                	jmp    9dff <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    9de5:	48 89 c3             	mov    %rax,%rbx
    9de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dec:	48 89 c7             	mov    %rax,%rdi
    9def:	e8 2c ed ff ff       	call   8b20 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    9df4:	48 89 d8             	mov    %rbx,%rax
    9df7:	48 89 c7             	mov    %rax,%rdi
    9dfa:	e8 b1 aa ff ff       	call   48b0 <_Unwind_Resume@plt>
    9dff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9e03:	c9                   	leave
    9e04:	c3                   	ret
    9e05:	90                   	nop

0000000000009e06 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9e06:	55                   	push   %rbp
    9e07:	48 89 e5             	mov    %rsp,%rbp
    9e0a:	48 83 ec 10          	sub    $0x10,%rsp
    9e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	48 89 c7             	mov    %rax,%rdi
    9e1d:	e8 24 00 00 00       	call   9e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9e22:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e29:	48 8b 00             	mov    (%rax),%rax
    9e2c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e30:	48 89 ce             	mov    %rcx,%rsi
    9e33:	48 89 c7             	mov    %rax,%rdi
    9e36:	e8 1d 0f 00 00       	call   ad58 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9e3b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e3f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9e43:	90                   	nop
    9e44:	c9                   	leave
    9e45:	c3                   	ret

0000000000009e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9e46:	55                   	push   %rbp
    9e47:	48 89 e5             	mov    %rsp,%rbp
    9e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e52:	5d                   	pop    %rbp
    9e53:	c3                   	ret

0000000000009e54 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9e54:	55                   	push   %rbp
    9e55:	48 89 e5             	mov    %rsp,%rbp
    9e58:	48 83 ec 10          	sub    $0x10,%rsp
    9e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9e64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6c:	48 89 d6             	mov    %rdx,%rsi
    9e6f:	48 89 c7             	mov    %rax,%rdi
    9e72:	e8 0b 0f 00 00       	call   ad82 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    9e77:	90                   	nop
    9e78:	c9                   	leave
    9e79:	c3                   	ret

0000000000009e7a <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9e7a:	55                   	push   %rbp
    9e7b:	48 89 e5             	mov    %rsp,%rbp
    9e7e:	48 83 ec 20          	sub    $0x20,%rsp
    9e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9e8e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9e93:	74 17                	je     9eac <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e99:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e9d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ea1:	48 89 ce             	mov    %rcx,%rsi
    9ea4:	48 89 c7             	mov    %rax,%rdi
    9ea7:	e8 e5 0e 00 00       	call   ad91 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    9eac:	90                   	nop
    9ead:	c9                   	leave
    9eae:	c3                   	ret
    9eaf:	90                   	nop

0000000000009eb0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9eb0:	55                   	push   %rbp
    9eb1:	48 89 e5             	mov    %rsp,%rbp
    9eb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eb8:	90                   	nop
    9eb9:	5d                   	pop    %rbp
    9eba:	c3                   	ret
    9ebb:	90                   	nop

0000000000009ebc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9ebc:	55                   	push   %rbp
    9ebd:	48 89 e5             	mov    %rsp,%rbp
    9ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ec4:	90                   	nop
    9ec5:	5d                   	pop    %rbp
    9ec6:	c3                   	ret

0000000000009ec7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9ec7:	55                   	push   %rbp
    9ec8:	48 89 e5             	mov    %rsp,%rbp
    9ecb:	53                   	push   %rbx
    9ecc:	48 83 ec 28          	sub    $0x28,%rsp
    9ed0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9ed4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9ed8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9edc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9ee0:	48 89 d6             	mov    %rdx,%rsi
    9ee3:	48 89 c7             	mov    %rax,%rdi
    9ee6:	e8 25 01 00 00       	call   a010 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9eeb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9eef:	48 89 c7             	mov    %rax,%rdi
    9ef2:	e8 c8 0e 00 00       	call   adbf <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    9ef7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9efb:	0f 92 c3             	setb   %bl
    9efe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9f02:	48 89 c7             	mov    %rax,%rdi
    9f05:	e8 ee f0 ff ff       	call   8ff8 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9f0a:	84 db                	test   %bl,%bl
    9f0c:	74 0f                	je     9f1d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9f0e:	48 8d 05 13 44 01 00 	lea    0x14413(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    9f15:	48 89 c7             	mov    %rax,%rdi
    9f18:	e8 c3 a2 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9f1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9f21:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f25:	c9                   	leave
    9f26:	c3                   	ret
    9f27:	90                   	nop

0000000000009f28 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9f28:	55                   	push   %rbp
    9f29:	48 89 e5             	mov    %rsp,%rbp
    9f2c:	53                   	push   %rbx
    9f2d:	48 83 ec 28          	sub    $0x28,%rsp
    9f31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f39:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f41:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9f45:	48 89 d6             	mov    %rdx,%rsi
    9f48:	48 89 c7             	mov    %rax,%rdi
    9f4b:	e8 b2 0e 00 00       	call   ae02 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9f50:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f58:	48 89 d6             	mov    %rdx,%rsi
    9f5b:	48 89 c7             	mov    %rax,%rdi
    9f5e:	e8 d1 0e 00 00       	call   ae34 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    9f63:	eb 1a                	jmp    9f7f <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    9f65:	48 89 c3             	mov    %rax,%rbx
    9f68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f6c:	48 89 c7             	mov    %rax,%rdi
    9f6f:	e8 c8 eb ff ff       	call   8b3c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9f74:	48 89 d8             	mov    %rbx,%rax
    9f77:	48 89 c7             	mov    %rax,%rdi
    9f7a:	e8 31 a9 ff ff       	call   48b0 <_Unwind_Resume@plt>
    9f7f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f83:	c9                   	leave
    9f84:	c3                   	ret
    9f85:	90                   	nop

0000000000009f86 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9f86:	55                   	push   %rbp
    9f87:	48 89 e5             	mov    %rsp,%rbp
    9f8a:	48 83 ec 10          	sub    $0x10,%rsp
    9f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9f96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f9a:	48 89 c7             	mov    %rax,%rdi
    9f9d:	e8 24 00 00 00       	call   9fc6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9fa2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9fa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fa9:	48 8b 00             	mov    (%rax),%rax
    9fac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9fb0:	48 89 ce             	mov    %rcx,%rsi
    9fb3:	48 89 c7             	mov    %rax,%rdi
    9fb6:	e8 cf 0e 00 00       	call   ae8a <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9fbb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fbf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9fc3:	90                   	nop
    9fc4:	c9                   	leave
    9fc5:	c3                   	ret

0000000000009fc6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9fc6:	55                   	push   %rbp
    9fc7:	48 89 e5             	mov    %rsp,%rbp
    9fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd2:	5d                   	pop    %rbp
    9fd3:	c3                   	ret

0000000000009fd4 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9fd4:	55                   	push   %rbp
    9fd5:	48 89 e5             	mov    %rsp,%rbp
    9fd8:	48 83 ec 20          	sub    $0x20,%rsp
    9fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fe4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9fe8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff0:	48 89 d6             	mov    %rdx,%rsi
    9ff3:	48 89 c7             	mov    %rax,%rdi
    9ff6:	e8 b8 0e 00 00       	call   aeb3 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9ffb:	90                   	nop
    9ffc:	c9                   	leave
    9ffd:	c3                   	ret

0000000000009ffe <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9ffe:	55                   	push   %rbp
    9fff:	48 89 e5             	mov    %rsp,%rbp
    a002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a00a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a00e:	5d                   	pop    %rbp
    a00f:	c3                   	ret

000000000000a010 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a010:	55                   	push   %rbp
    a011:	48 89 e5             	mov    %rsp,%rbp
    a014:	48 83 ec 10          	sub    $0x10,%rsp
    a018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a01c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a020:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a028:	48 89 d6             	mov    %rdx,%rsi
    a02b:	48 89 c7             	mov    %rax,%rdi
    a02e:	e8 a7 0e 00 00       	call   aeda <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    a033:	90                   	nop
    a034:	c9                   	leave
    a035:	c3                   	ret

000000000000a036 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    a036:	55                   	push   %rbp
    a037:	48 89 e5             	mov    %rsp,%rbp
    a03a:	48 83 ec 20          	sub    $0x20,%rsp
    a03e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a046:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a04a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a04f:	74 17                	je     a068 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a055:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a059:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a05d:	48 89 ce             	mov    %rcx,%rsi
    a060:	48 89 c7             	mov    %rax,%rdi
    a063:	e8 81 0e 00 00       	call   aee9 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    a068:	90                   	nop
    a069:	c9                   	leave
    a06a:	c3                   	ret
    a06b:	90                   	nop

000000000000a06c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a06c:	55                   	push   %rbp
    a06d:	48 89 e5             	mov    %rsp,%rbp
    a070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a074:	90                   	nop
    a075:	5d                   	pop    %rbp
    a076:	c3                   	ret
    a077:	90                   	nop

000000000000a078 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a078:	55                   	push   %rbp
    a079:	48 89 e5             	mov    %rsp,%rbp
    a07c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a080:	90                   	nop
    a081:	5d                   	pop    %rbp
    a082:	c3                   	ret

000000000000a083 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a083:	55                   	push   %rbp
    a084:	48 89 e5             	mov    %rsp,%rbp
    a087:	53                   	push   %rbx
    a088:	48 83 ec 28          	sub    $0x28,%rsp
    a08c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a090:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a094:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a098:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a09c:	48 89 d6             	mov    %rdx,%rsi
    a09f:	48 89 c7             	mov    %rax,%rdi
    a0a2:	e8 25 01 00 00       	call   a1cc <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a0a7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a0ab:	48 89 c7             	mov    %rax,%rdi
    a0ae:	e8 64 0e 00 00       	call   af17 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a0b3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a0b7:	0f 92 c3             	setb   %bl
    a0ba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a0be:	48 89 c7             	mov    %rax,%rdi
    a0c1:	e8 96 f0 ff ff       	call   915c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    a0c6:	84 db                	test   %bl,%bl
    a0c8:	74 0f                	je     a0d9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a0ca:	48 8d 05 57 42 01 00 	lea    0x14257(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a0d1:	48 89 c7             	mov    %rax,%rdi
    a0d4:	e8 07 a1 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a0d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a0dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a0e1:	c9                   	leave
    a0e2:	c3                   	ret
    a0e3:	90                   	nop

000000000000a0e4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a0e4:	55                   	push   %rbp
    a0e5:	48 89 e5             	mov    %rsp,%rbp
    a0e8:	53                   	push   %rbx
    a0e9:	48 83 ec 28          	sub    $0x28,%rsp
    a0ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a0f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a101:	48 89 d6             	mov    %rdx,%rsi
    a104:	48 89 c7             	mov    %rax,%rdi
    a107:	e8 4e 0e 00 00       	call   af5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a10c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a114:	48 89 d6             	mov    %rdx,%rsi
    a117:	48 89 c7             	mov    %rax,%rdi
    a11a:	e8 6d 0e 00 00       	call   af8c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    a11f:	eb 1a                	jmp    a13b <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    a121:	48 89 c3             	mov    %rax,%rbx
    a124:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a128:	48 89 c7             	mov    %rax,%rdi
    a12b:	e8 28 ea ff ff       	call   8b58 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    a130:	48 89 d8             	mov    %rbx,%rax
    a133:	48 89 c7             	mov    %rax,%rdi
    a136:	e8 75 a7 ff ff       	call   48b0 <_Unwind_Resume@plt>
    a13b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a13f:	c9                   	leave
    a140:	c3                   	ret
    a141:	90                   	nop

000000000000a142 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a142:	55                   	push   %rbp
    a143:	48 89 e5             	mov    %rsp,%rbp
    a146:	48 83 ec 10          	sub    $0x10,%rsp
    a14a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a14e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a156:	48 89 c7             	mov    %rax,%rdi
    a159:	e8 24 00 00 00       	call   a182 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a15e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a165:	48 8b 00             	mov    (%rax),%rax
    a168:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a16c:	48 89 ce             	mov    %rcx,%rsi
    a16f:	48 89 c7             	mov    %rax,%rdi
    a172:	e8 75 0e 00 00       	call   afec <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a177:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a17b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a17f:	90                   	nop
    a180:	c9                   	leave
    a181:	c3                   	ret

000000000000a182 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a182:	55                   	push   %rbp
    a183:	48 89 e5             	mov    %rsp,%rbp
    a186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a18a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18e:	5d                   	pop    %rbp
    a18f:	c3                   	ret

000000000000a190 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a190:	55                   	push   %rbp
    a191:	48 89 e5             	mov    %rsp,%rbp
    a194:	48 83 ec 20          	sub    $0x20,%rsp
    a198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a19c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a1a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ac:	48 89 d6             	mov    %rdx,%rsi
    a1af:	48 89 c7             	mov    %rax,%rdi
    a1b2:	e8 5e 0e 00 00       	call   b015 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    a1b7:	90                   	nop
    a1b8:	c9                   	leave
    a1b9:	c3                   	ret

000000000000a1ba <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a1ba:	55                   	push   %rbp
    a1bb:	48 89 e5             	mov    %rsp,%rbp
    a1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a1c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a1ca:	5d                   	pop    %rbp
    a1cb:	c3                   	ret

000000000000a1cc <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a1cc:	55                   	push   %rbp
    a1cd:	48 89 e5             	mov    %rsp,%rbp
    a1d0:	48 83 ec 10          	sub    $0x10,%rsp
    a1d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a1dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e4:	48 89 d6             	mov    %rdx,%rsi
    a1e7:	48 89 c7             	mov    %rax,%rdi
    a1ea:	e8 4d 0e 00 00       	call   b03c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    a1ef:	90                   	nop
    a1f0:	c9                   	leave
    a1f1:	c3                   	ret

000000000000a1f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a1f2:	55                   	push   %rbp
    a1f3:	48 89 e5             	mov    %rsp,%rbp
    a1f6:	48 83 ec 20          	sub    $0x20,%rsp
    a1fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a202:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a206:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a20b:	74 17                	je     a224 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a20d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a211:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a215:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a219:	48 89 ce             	mov    %rcx,%rsi
    a21c:	48 89 c7             	mov    %rax,%rdi
    a21f:	e8 27 0e 00 00       	call   b04b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    a224:	90                   	nop
    a225:	c9                   	leave
    a226:	c3                   	ret
    a227:	90                   	nop

000000000000a228 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a228:	55                   	push   %rbp
    a229:	48 89 e5             	mov    %rsp,%rbp
    a22c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a230:	90                   	nop
    a231:	5d                   	pop    %rbp
    a232:	c3                   	ret
    a233:	90                   	nop

000000000000a234 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a234:	55                   	push   %rbp
    a235:	48 89 e5             	mov    %rsp,%rbp
    a238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a23c:	90                   	nop
    a23d:	5d                   	pop    %rbp
    a23e:	c3                   	ret

000000000000a23f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a23f:	55                   	push   %rbp
    a240:	48 89 e5             	mov    %rsp,%rbp
    a243:	53                   	push   %rbx
    a244:	48 83 ec 28          	sub    $0x28,%rsp
    a248:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a24c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a250:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a254:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a258:	48 89 d6             	mov    %rdx,%rsi
    a25b:	48 89 c7             	mov    %rax,%rdi
    a25e:	e8 d7 01 00 00       	call   a43a <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a263:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a267:	48 89 c7             	mov    %rax,%rdi
    a26a:	e8 0a 0e 00 00       	call   b079 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    a26f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a273:	0f 92 c3             	setb   %bl
    a276:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a27a:	48 89 c7             	mov    %rax,%rdi
    a27d:	e8 76 f0 ff ff       	call   92f8 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    a282:	84 db                	test   %bl,%bl
    a284:	74 0f                	je     a295 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    a286:	48 8d 05 9b 40 01 00 	lea    0x1409b(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a28d:	48 89 c7             	mov    %rax,%rdi
    a290:	e8 4b 9f ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a299:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a29d:	c9                   	leave
    a29e:	c3                   	ret
    a29f:	90                   	nop

000000000000a2a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a2a0:	55                   	push   %rbp
    a2a1:	48 89 e5             	mov    %rsp,%rbp
    a2a4:	53                   	push   %rbx
    a2a5:	48 83 ec 28          	sub    $0x28,%rsp
    a2a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a2ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a2b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a2b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a2bd:	48 89 d6             	mov    %rdx,%rsi
    a2c0:	48 89 c7             	mov    %rax,%rdi
    a2c3:	e8 f4 0d 00 00       	call   b0bc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    a2c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a2cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2d0:	48 89 d6             	mov    %rdx,%rsi
    a2d3:	48 89 c7             	mov    %rax,%rdi
    a2d6:	e8 13 0e 00 00       	call   b0ee <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    a2db:	eb 1a                	jmp    a2f7 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    a2dd:	48 89 c3             	mov    %rax,%rbx
    a2e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2e4:	48 89 c7             	mov    %rax,%rdi
    a2e7:	e8 88 e8 ff ff       	call   8b74 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    a2ec:	48 89 d8             	mov    %rbx,%rax
    a2ef:	48 89 c7             	mov    %rax,%rdi
    a2f2:	e8 b9 a5 ff ff       	call   48b0 <_Unwind_Resume@plt>
    a2f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a2fb:	c9                   	leave
    a2fc:	c3                   	ret
    a2fd:	90                   	nop

000000000000a2fe <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a2fe:	55                   	push   %rbp
    a2ff:	48 89 e5             	mov    %rsp,%rbp
    a302:	48 83 ec 10          	sub    $0x10,%rsp
    a306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a30a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a30e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a312:	48 89 c7             	mov    %rax,%rdi
    a315:	e8 24 00 00 00       	call   a33e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    a31a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a31d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a321:	48 8b 00             	mov    (%rax),%rax
    a324:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a328:	48 89 ce             	mov    %rcx,%rsi
    a32b:	48 89 c7             	mov    %rax,%rdi
    a32e:	e8 1c 0e 00 00       	call   b14f <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a333:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a337:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a33b:	90                   	nop
    a33c:	c9                   	leave
    a33d:	c3                   	ret

000000000000a33e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a33e:	55                   	push   %rbp
    a33f:	48 89 e5             	mov    %rsp,%rbp
    a342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a34a:	5d                   	pop    %rbp
    a34b:	c3                   	ret

000000000000a34c <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a34c:	55                   	push   %rbp
    a34d:	48 89 e5             	mov    %rsp,%rbp
    a350:	48 83 ec 20          	sub    $0x20,%rsp
    a354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a358:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a35c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a360:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a368:	48 89 d6             	mov    %rdx,%rsi
    a36b:	48 89 c7             	mov    %rax,%rdi
    a36e:	e8 05 0e 00 00       	call   b178 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a373:	90                   	nop
    a374:	c9                   	leave
    a375:	c3                   	ret

000000000000a376 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    a376:	55                   	push   %rbp
    a377:	48 89 e5             	mov    %rsp,%rbp
    a37a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a37e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    a382:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a386:	48 8b 10             	mov    (%rax),%rdx
    a389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38d:	48 89 10             	mov    %rdx,(%rax)
    a390:	90                   	nop
    a391:	5d                   	pop    %rbp
    a392:	c3                   	ret
    a393:	90                   	nop

000000000000a394 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    a394:	55                   	push   %rbp
    a395:	48 89 e5             	mov    %rsp,%rbp
    a398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    a39c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3a0:	5d                   	pop    %rbp
    a3a1:	c3                   	ret

000000000000a3a2 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    a3a2:	55                   	push   %rbp
    a3a3:	48 89 e5             	mov    %rsp,%rbp
    a3a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    a3aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ae:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    a3b2:	5d                   	pop    %rbp
    a3b3:	c3                   	ret

000000000000a3b4 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    a3b4:	55                   	push   %rbp
    a3b5:	48 89 e5             	mov    %rsp,%rbp
    a3b8:	48 83 ec 10          	sub    $0x10,%rsp
    a3bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    a3c0:	e8 ce a9 ff ff       	call   4d93 <_ZSt23__is_constant_evaluatedv>
    a3c5:	84 c0                	test   %al,%al
    a3c7:	74 1a                	je     a3e3 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    a3c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3cd:	48 89 c7             	mov    %rax,%rdi
    a3d0:	e8 cd ff ff ff       	call   a3a2 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    a3d5:	83 f0 01             	xor    $0x1,%eax
    a3d8:	84 c0                	test   %al,%al
    a3da:	74 07                	je     a3e3 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    a3dc:	b8 01 00 00 00       	mov    $0x1,%eax
    a3e1:	eb 05                	jmp    a3e8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    a3e3:	b8 00 00 00 00       	mov    $0x0,%eax
    a3e8:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    a3ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ee:	48 89 c7             	mov    %rax,%rdi
    a3f1:	e8 a8 0d 00 00       	call   b19e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    a3f6:	c9                   	leave
    a3f7:	c3                   	ret

000000000000a3f8 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a3f8:	55                   	push   %rbp
    a3f9:	48 89 e5             	mov    %rsp,%rbp
    a3fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a404:	5d                   	pop    %rbp
    a405:	c3                   	ret

000000000000a406 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a406:	55                   	push   %rbp
    a407:	48 89 e5             	mov    %rsp,%rbp
    a40a:	53                   	push   %rbx
    a40b:	48 83 ec 18          	sub    $0x18,%rsp
    a40f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a413:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    a417:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a41b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a41f:	48 89 c7             	mov    %rax,%rdi
    a422:	e8 d1 ff ff ff       	call   a3f8 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a427:	48 89 c6             	mov    %rax,%rsi
    a42a:	48 89 df             	mov    %rbx,%rdi
    a42d:	e8 7a 0d 00 00       	call   b1ac <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    a432:	90                   	nop
    a433:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a437:	c9                   	leave
    a438:	c3                   	ret
    a439:	90                   	nop

000000000000a43a <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a43a:	55                   	push   %rbp
    a43b:	48 89 e5             	mov    %rsp,%rbp
    a43e:	48 83 ec 10          	sub    $0x10,%rsp
    a442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a446:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a44a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a44e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a452:	48 89 d6             	mov    %rdx,%rsi
    a455:	48 89 c7             	mov    %rax,%rdi
    a458:	e8 95 0d 00 00       	call   b1f2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    a45d:	90                   	nop
    a45e:	c9                   	leave
    a45f:	c3                   	ret

000000000000a460 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    a460:	55                   	push   %rbp
    a461:	48 89 e5             	mov    %rsp,%rbp
    a464:	48 83 ec 20          	sub    $0x20,%rsp
    a468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a46c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a470:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a474:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a479:	74 17                	je     a492 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a47b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a47f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a483:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a487:	48 89 ce             	mov    %rcx,%rsi
    a48a:	48 89 c7             	mov    %rax,%rdi
    a48d:	e8 6f 0d 00 00       	call   b201 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    a492:	90                   	nop
    a493:	c9                   	leave
    a494:	c3                   	ret
    a495:	90                   	nop

000000000000a496 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a496:	55                   	push   %rbp
    a497:	48 89 e5             	mov    %rsp,%rbp
    a49a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a49e:	90                   	nop
    a49f:	5d                   	pop    %rbp
    a4a0:	c3                   	ret
    a4a1:	90                   	nop

000000000000a4a2 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a4a2:	55                   	push   %rbp
    a4a3:	48 89 e5             	mov    %rsp,%rbp
    a4a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4aa:	90                   	nop
    a4ab:	5d                   	pop    %rbp
    a4ac:	c3                   	ret

000000000000a4ad <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a4ad:	55                   	push   %rbp
    a4ae:	48 89 e5             	mov    %rsp,%rbp
    a4b1:	53                   	push   %rbx
    a4b2:	48 83 ec 28          	sub    $0x28,%rsp
    a4b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a4ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a4be:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a4c2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4c6:	48 89 d6             	mov    %rdx,%rsi
    a4c9:	48 89 c7             	mov    %rax,%rdi
    a4cc:	e8 25 01 00 00       	call   a5f6 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a4d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4d5:	48 89 c7             	mov    %rax,%rdi
    a4d8:	e8 52 0d 00 00       	call   b22f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    a4dd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a4e1:	0f 92 c3             	setb   %bl
    a4e4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a4e8:	48 89 c7             	mov    %rax,%rdi
    a4eb:	e8 b8 f0 ff ff       	call   95a8 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    a4f0:	84 db                	test   %bl,%bl
    a4f2:	74 0f                	je     a503 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a4f4:	48 8d 05 2d 3e 01 00 	lea    0x13e2d(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a4fb:	48 89 c7             	mov    %rax,%rdi
    a4fe:	e8 dd 9c ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a503:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a507:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a50b:	c9                   	leave
    a50c:	c3                   	ret
    a50d:	90                   	nop

000000000000a50e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a50e:	55                   	push   %rbp
    a50f:	48 89 e5             	mov    %rsp,%rbp
    a512:	53                   	push   %rbx
    a513:	48 83 ec 28          	sub    $0x28,%rsp
    a517:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a51b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a51f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a523:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a527:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a52b:	48 89 d6             	mov    %rdx,%rsi
    a52e:	48 89 c7             	mov    %rax,%rdi
    a531:	e8 3c 0d 00 00       	call   b272 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a536:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a53a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a53e:	48 89 d6             	mov    %rdx,%rsi
    a541:	48 89 c7             	mov    %rax,%rdi
    a544:	e8 5b 0d 00 00       	call   b2a4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    a549:	eb 1a                	jmp    a565 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    a54b:	48 89 c3             	mov    %rax,%rbx
    a54e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a552:	48 89 c7             	mov    %rax,%rdi
    a555:	e8 36 e6 ff ff       	call   8b90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    a55a:	48 89 d8             	mov    %rbx,%rax
    a55d:	48 89 c7             	mov    %rax,%rdi
    a560:	e8 4b a3 ff ff       	call   48b0 <_Unwind_Resume@plt>
    a565:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a569:	c9                   	leave
    a56a:	c3                   	ret
    a56b:	90                   	nop

000000000000a56c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a56c:	55                   	push   %rbp
    a56d:	48 89 e5             	mov    %rsp,%rbp
    a570:	48 83 ec 10          	sub    $0x10,%rsp
    a574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a578:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a580:	48 89 c7             	mov    %rax,%rdi
    a583:	e8 24 00 00 00       	call   a5ac <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a588:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a58b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a58f:	48 8b 00             	mov    (%rax),%rax
    a592:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a596:	48 89 ce             	mov    %rcx,%rsi
    a599:	48 89 c7             	mov    %rax,%rdi
    a59c:	e8 59 0d 00 00       	call   b2fa <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a5a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a5a5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a5a9:	90                   	nop
    a5aa:	c9                   	leave
    a5ab:	c3                   	ret

000000000000a5ac <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a5ac:	55                   	push   %rbp
    a5ad:	48 89 e5             	mov    %rsp,%rbp
    a5b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a5b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b8:	5d                   	pop    %rbp
    a5b9:	c3                   	ret

000000000000a5ba <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a5ba:	55                   	push   %rbp
    a5bb:	48 89 e5             	mov    %rsp,%rbp
    a5be:	48 83 ec 20          	sub    $0x20,%rsp
    a5c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a5ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d6:	48 89 d6             	mov    %rdx,%rsi
    a5d9:	48 89 c7             	mov    %rax,%rdi
    a5dc:	e8 42 0d 00 00       	call   b323 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    a5e1:	90                   	nop
    a5e2:	c9                   	leave
    a5e3:	c3                   	ret

000000000000a5e4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a5e4:	55                   	push   %rbp
    a5e5:	48 89 e5             	mov    %rsp,%rbp
    a5e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a5f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a5f4:	5d                   	pop    %rbp
    a5f5:	c3                   	ret

000000000000a5f6 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a5f6:	55                   	push   %rbp
    a5f7:	48 89 e5             	mov    %rsp,%rbp
    a5fa:	48 83 ec 10          	sub    $0x10,%rsp
    a5fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a602:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a606:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a60a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a60e:	48 89 d6             	mov    %rdx,%rsi
    a611:	48 89 c7             	mov    %rax,%rdi
    a614:	e8 31 0d 00 00       	call   b34a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    a619:	90                   	nop
    a61a:	c9                   	leave
    a61b:	c3                   	ret

000000000000a61c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a61c:	55                   	push   %rbp
    a61d:	48 89 e5             	mov    %rsp,%rbp
    a620:	48 83 ec 20          	sub    $0x20,%rsp
    a624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a62c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a630:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a635:	74 17                	je     a64e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a637:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a63f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a643:	48 89 ce             	mov    %rcx,%rsi
    a646:	48 89 c7             	mov    %rax,%rdi
    a649:	e8 0b 0d 00 00       	call   b359 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    a64e:	90                   	nop
    a64f:	c9                   	leave
    a650:	c3                   	ret
    a651:	90                   	nop

000000000000a652 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a652:	55                   	push   %rbp
    a653:	48 89 e5             	mov    %rsp,%rbp
    a656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a65a:	90                   	nop
    a65b:	5d                   	pop    %rbp
    a65c:	c3                   	ret
    a65d:	90                   	nop

000000000000a65e <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a65e:	55                   	push   %rbp
    a65f:	48 89 e5             	mov    %rsp,%rbp
    a662:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a666:	90                   	nop
    a667:	5d                   	pop    %rbp
    a668:	c3                   	ret

000000000000a669 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a669:	55                   	push   %rbp
    a66a:	48 89 e5             	mov    %rsp,%rbp
    a66d:	53                   	push   %rbx
    a66e:	48 83 ec 28          	sub    $0x28,%rsp
    a672:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a676:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a67a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a67e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a682:	48 89 d6             	mov    %rdx,%rsi
    a685:	48 89 c7             	mov    %rax,%rdi
    a688:	e8 25 01 00 00       	call   a7b2 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a68d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a691:	48 89 c7             	mov    %rax,%rdi
    a694:	e8 ee 0c 00 00       	call   b387 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    a699:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a69d:	0f 92 c3             	setb   %bl
    a6a0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a6a4:	48 89 c7             	mov    %rax,%rdi
    a6a7:	e8 60 f0 ff ff       	call   970c <_ZNSaI16VkPresentModeKHRED1Ev>
    a6ac:	84 db                	test   %bl,%bl
    a6ae:	74 0f                	je     a6bf <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    a6b0:	48 8d 05 71 3c 01 00 	lea    0x13c71(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a6b7:	48 89 c7             	mov    %rax,%rdi
    a6ba:	e8 21 9b ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a6bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a6c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a6c7:	c9                   	leave
    a6c8:	c3                   	ret
    a6c9:	90                   	nop

000000000000a6ca <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a6ca:	55                   	push   %rbp
    a6cb:	48 89 e5             	mov    %rsp,%rbp
    a6ce:	53                   	push   %rbx
    a6cf:	48 83 ec 28          	sub    $0x28,%rsp
    a6d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a6d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a6db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a6df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6e3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a6e7:	48 89 d6             	mov    %rdx,%rsi
    a6ea:	48 89 c7             	mov    %rax,%rdi
    a6ed:	e8 d8 0c 00 00       	call   b3ca <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    a6f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a6f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6fa:	48 89 d6             	mov    %rdx,%rsi
    a6fd:	48 89 c7             	mov    %rax,%rdi
    a700:	e8 f7 0c 00 00       	call   b3fc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    a705:	eb 1a                	jmp    a721 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    a707:	48 89 c3             	mov    %rax,%rbx
    a70a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a70e:	48 89 c7             	mov    %rax,%rdi
    a711:	e8 96 e4 ff ff       	call   8bac <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    a716:	48 89 d8             	mov    %rbx,%rax
    a719:	48 89 c7             	mov    %rax,%rdi
    a71c:	e8 8f a1 ff ff       	call   48b0 <_Unwind_Resume@plt>
    a721:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a725:	c9                   	leave
    a726:	c3                   	ret
    a727:	90                   	nop

000000000000a728 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a728:	55                   	push   %rbp
    a729:	48 89 e5             	mov    %rsp,%rbp
    a72c:	48 83 ec 10          	sub    $0x10,%rsp
    a730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a734:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a73c:	48 89 c7             	mov    %rax,%rdi
    a73f:	e8 24 00 00 00       	call   a768 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    a744:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a74b:	48 8b 00             	mov    (%rax),%rax
    a74e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a752:	48 89 ce             	mov    %rcx,%rsi
    a755:	48 89 c7             	mov    %rax,%rdi
    a758:	e8 f5 0c 00 00       	call   b452 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a75d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a761:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a765:	90                   	nop
    a766:	c9                   	leave
    a767:	c3                   	ret

000000000000a768 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a768:	55                   	push   %rbp
    a769:	48 89 e5             	mov    %rsp,%rbp
    a76c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a774:	5d                   	pop    %rbp
    a775:	c3                   	ret

000000000000a776 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a776:	55                   	push   %rbp
    a777:	48 89 e5             	mov    %rsp,%rbp
    a77a:	48 83 ec 20          	sub    $0x20,%rsp
    a77e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a786:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a78a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a78e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a792:	48 89 d6             	mov    %rdx,%rsi
    a795:	48 89 c7             	mov    %rax,%rdi
    a798:	e8 de 0c 00 00       	call   b47b <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    a79d:	90                   	nop
    a79e:	c9                   	leave
    a79f:	c3                   	ret

000000000000a7a0 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a7a0:	55                   	push   %rbp
    a7a1:	48 89 e5             	mov    %rsp,%rbp
    a7a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a7ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7b0:	5d                   	pop    %rbp
    a7b1:	c3                   	ret

000000000000a7b2 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a7b2:	55                   	push   %rbp
    a7b3:	48 89 e5             	mov    %rsp,%rbp
    a7b6:	48 83 ec 10          	sub    $0x10,%rsp
    a7ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a7c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ca:	48 89 d6             	mov    %rdx,%rsi
    a7cd:	48 89 c7             	mov    %rax,%rdi
    a7d0:	e8 cd 0c 00 00       	call   b4a2 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    a7d5:	90                   	nop
    a7d6:	c9                   	leave
    a7d7:	c3                   	ret

000000000000a7d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a7d8:	55                   	push   %rbp
    a7d9:	48 89 e5             	mov    %rsp,%rbp
    a7dc:	48 83 ec 20          	sub    $0x20,%rsp
    a7e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a7ec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a7f1:	74 17                	je     a80a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a7f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a7ff:	48 89 ce             	mov    %rcx,%rsi
    a802:	48 89 c7             	mov    %rax,%rdi
    a805:	e8 a7 0c 00 00       	call   b4b1 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    a80a:	90                   	nop
    a80b:	c9                   	leave
    a80c:	c3                   	ret
    a80d:	90                   	nop

000000000000a80e <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a80e:	55                   	push   %rbp
    a80f:	48 89 e5             	mov    %rsp,%rbp
    a812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a816:	90                   	nop
    a817:	5d                   	pop    %rbp
    a818:	c3                   	ret
    a819:	90                   	nop

000000000000a81a <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a81a:	55                   	push   %rbp
    a81b:	48 89 e5             	mov    %rsp,%rbp
    a81e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a822:	90                   	nop
    a823:	5d                   	pop    %rbp
    a824:	c3                   	ret

000000000000a825 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a825:	55                   	push   %rbp
    a826:	48 89 e5             	mov    %rsp,%rbp
    a829:	53                   	push   %rbx
    a82a:	48 83 ec 28          	sub    $0x28,%rsp
    a82e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a832:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a836:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a83a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a83e:	48 89 d6             	mov    %rdx,%rsi
    a841:	48 89 c7             	mov    %rax,%rdi
    a844:	e8 25 01 00 00       	call   a96e <_ZNSaIP9VkImage_TEC1ERKS1_>
    a849:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a84d:	48 89 c7             	mov    %rax,%rdi
    a850:	e8 8a 0c 00 00       	call   b4df <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    a855:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a859:	0f 92 c3             	setb   %bl
    a85c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a860:	48 89 c7             	mov    %rax,%rdi
    a863:	e8 08 f0 ff ff       	call   9870 <_ZNSaIP9VkImage_TED1Ev>
    a868:	84 db                	test   %bl,%bl
    a86a:	74 0f                	je     a87b <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    a86c:	48 8d 05 b5 3a 01 00 	lea    0x13ab5(%rip),%rax        # 1e328 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    a873:	48 89 c7             	mov    %rax,%rdi
    a876:	e8 65 99 ff ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    a87b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    a87f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a883:	c9                   	leave
    a884:	c3                   	ret
    a885:	90                   	nop

000000000000a886 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    a886:	55                   	push   %rbp
    a887:	48 89 e5             	mov    %rsp,%rbp
    a88a:	53                   	push   %rbx
    a88b:	48 83 ec 28          	sub    $0x28,%rsp
    a88f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a893:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a897:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    a89b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a89f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a8a3:	48 89 d6             	mov    %rdx,%rsi
    a8a6:	48 89 c7             	mov    %rax,%rdi
    a8a9:	e8 74 0c 00 00       	call   b522 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    a8ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a8b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8b6:	48 89 d6             	mov    %rdx,%rsi
    a8b9:	48 89 c7             	mov    %rax,%rdi
    a8bc:	e8 93 0c 00 00       	call   b554 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    a8c1:	eb 1a                	jmp    a8dd <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    a8c3:	48 89 c3             	mov    %rax,%rbx
    a8c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8ca:	48 89 c7             	mov    %rax,%rdi
    a8cd:	e8 f6 e2 ff ff       	call   8bc8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    a8d2:	48 89 d8             	mov    %rbx,%rax
    a8d5:	48 89 c7             	mov    %rax,%rdi
    a8d8:	e8 d3 9f ff ff       	call   48b0 <_Unwind_Resume@plt>
    a8dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a8e1:	c9                   	leave
    a8e2:	c3                   	ret
    a8e3:	90                   	nop

000000000000a8e4 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a8e4:	55                   	push   %rbp
    a8e5:	48 89 e5             	mov    %rsp,%rbp
    a8e8:	48 83 ec 10          	sub    $0x10,%rsp
    a8ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a8f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f8:	48 89 c7             	mov    %rax,%rdi
    a8fb:	e8 24 00 00 00       	call   a924 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a900:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a907:	48 8b 00             	mov    (%rax),%rax
    a90a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a90e:	48 89 ce             	mov    %rcx,%rsi
    a911:	48 89 c7             	mov    %rax,%rdi
    a914:	e8 91 0c 00 00       	call   b5aa <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a919:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a91d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a921:	90                   	nop
    a922:	c9                   	leave
    a923:	c3                   	ret

000000000000a924 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a924:	55                   	push   %rbp
    a925:	48 89 e5             	mov    %rsp,%rbp
    a928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a92c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a930:	5d                   	pop    %rbp
    a931:	c3                   	ret

000000000000a932 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a932:	55                   	push   %rbp
    a933:	48 89 e5             	mov    %rsp,%rbp
    a936:	48 83 ec 20          	sub    $0x20,%rsp
    a93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a93e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a942:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a946:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a94a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a94e:	48 89 d6             	mov    %rdx,%rsi
    a951:	48 89 c7             	mov    %rax,%rdi
    a954:	e8 7a 0c 00 00       	call   b5d3 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    a959:	90                   	nop
    a95a:	c9                   	leave
    a95b:	c3                   	ret

000000000000a95c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a95c:	55                   	push   %rbp
    a95d:	48 89 e5             	mov    %rsp,%rbp
    a960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a964:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a968:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a96c:	5d                   	pop    %rbp
    a96d:	c3                   	ret

000000000000a96e <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a96e:	55                   	push   %rbp
    a96f:	48 89 e5             	mov    %rsp,%rbp
    a972:	48 83 ec 10          	sub    $0x10,%rsp
    a976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a97a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a97e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a986:	48 89 d6             	mov    %rdx,%rsi
    a989:	48 89 c7             	mov    %rax,%rdi
    a98c:	e8 69 0c 00 00       	call   b5fa <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    a991:	90                   	nop
    a992:	c9                   	leave
    a993:	c3                   	ret

000000000000a994 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    a994:	55                   	push   %rbp
    a995:	48 89 e5             	mov    %rsp,%rbp
    a998:	48 83 ec 20          	sub    $0x20,%rsp
    a99c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a9a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a9ad:	74 17                	je     a9c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a9af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a9b7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a9bb:	48 89 ce             	mov    %rcx,%rsi
    a9be:	48 89 c7             	mov    %rax,%rdi
    a9c1:	e8 43 0c 00 00       	call   b609 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    a9c6:	90                   	nop
    a9c7:	c9                   	leave
    a9c8:	c3                   	ret

000000000000a9c9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a9c9:	55                   	push   %rbp
    a9ca:	48 89 e5             	mov    %rsp,%rbp
    a9cd:	48 83 ec 20          	sub    $0x20,%rsp
    a9d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a9d5:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    a9dc:	03 3f 00 
    a9df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a9e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9e7:	48 89 c7             	mov    %rax,%rdi
    a9ea:	e8 48 0c 00 00       	call   b637 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    a9ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a9f3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a9f7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a9fb:	48 89 d6             	mov    %rdx,%rsi
    a9fe:	48 89 c7             	mov    %rax,%rdi
    aa01:	e8 2a ac ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    aa06:	48 8b 00             	mov    (%rax),%rax
      }
    aa09:	c9                   	leave
    aa0a:	c3                   	ret
    aa0b:	90                   	nop

000000000000aa0c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    aa0c:	55                   	push   %rbp
    aa0d:	48 89 e5             	mov    %rsp,%rbp
    aa10:	48 83 ec 10          	sub    $0x10,%rsp
    aa14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    aa1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa24:	48 89 d6             	mov    %rdx,%rsi
    aa27:	48 89 c7             	mov    %rax,%rdi
    aa2a:	e8 e9 f0 ff ff       	call   9b18 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    aa2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa33:	48 89 c7             	mov    %rax,%rdi
    aa36:	e8 17 0c 00 00       	call   b652 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    aa3b:	90                   	nop
    aa3c:	c9                   	leave
    aa3d:	c3                   	ret

000000000000aa3e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    aa3e:	55                   	push   %rbp
    aa3f:	48 89 e5             	mov    %rsp,%rbp
    aa42:	48 83 ec 10          	sub    $0x10,%rsp
    aa46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    aa4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa56:	48 89 d6             	mov    %rdx,%rsi
    aa59:	48 89 c7             	mov    %rax,%rdi
    aa5c:	e8 1f 0c 00 00       	call   b680 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    aa61:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aa65:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    aa68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa6c:	48 8b 10             	mov    (%rax),%rdx
    aa6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa73:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    aa77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa7b:	48 8b 08             	mov    (%rax),%rcx
    aa7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa82:	48 89 d0             	mov    %rdx,%rax
    aa85:	48 c1 e0 06          	shl    $0x6,%rax
    aa89:	48 01 d0             	add    %rdx,%rax
    aa8c:	48 c1 e0 03          	shl    $0x3,%rax
    aa90:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    aa94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa98:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    aa9c:	90                   	nop
    aa9d:	c9                   	leave
    aa9e:	c3                   	ret

000000000000aa9f <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    aa9f:	55                   	push   %rbp
    aaa0:	48 89 e5             	mov    %rsp,%rbp
    aaa3:	48 83 ec 20          	sub    $0x20,%rsp
    aaa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aaaf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    aab3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aabb:	48 89 d6             	mov    %rdx,%rsi
    aabe:	48 89 c7             	mov    %rax,%rdi
    aac1:	e8 ed 0b 00 00       	call   b6b3 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    aac6:	c9                   	leave
    aac7:	c3                   	ret

000000000000aac8 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    aac8:	55                   	push   %rbp
    aac9:	48 89 e5             	mov    %rsp,%rbp
    aacc:	48 83 ec 10          	sub    $0x10,%rsp
    aad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aad4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    aad8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aadc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae0:	48 89 d6             	mov    %rdx,%rsi
    aae3:	48 89 c7             	mov    %rax,%rdi
    aae6:	e8 f1 0b 00 00       	call   b6dc <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    aaeb:	90                   	nop
    aaec:	c9                   	leave
    aaed:	c3                   	ret

000000000000aaee <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    aaee:	55                   	push   %rbp
    aaef:	48 89 e5             	mov    %rsp,%rbp
    aaf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aafa:	90                   	nop
    aafb:	5d                   	pop    %rbp
    aafc:	c3                   	ret

000000000000aafd <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    aafd:	55                   	push   %rbp
    aafe:	48 89 e5             	mov    %rsp,%rbp
    ab01:	48 83 ec 20          	sub    $0x20,%rsp
    ab05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ab11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ab19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab1d:	48 89 ce             	mov    %rcx,%rsi
    ab20:	48 89 c7             	mov    %rax,%rdi
    ab23:	e8 c4 0b 00 00       	call   b6ec <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    ab28:	90                   	nop
    ab29:	c9                   	leave
    ab2a:	c3                   	ret

000000000000ab2b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ab2b:	55                   	push   %rbp
    ab2c:	48 89 e5             	mov    %rsp,%rbp
    ab2f:	48 83 ec 20          	sub    $0x20,%rsp
    ab33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ab37:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    ab3e:	07 7e 00 
    ab41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ab45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab49:	48 89 c7             	mov    %rax,%rdi
    ab4c:	e8 d5 0b 00 00       	call   b726 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    ab51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ab55:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ab59:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ab5d:	48 89 d6             	mov    %rdx,%rsi
    ab60:	48 89 c7             	mov    %rax,%rdi
    ab63:	e8 c8 aa ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    ab68:	48 8b 00             	mov    (%rax),%rax
      }
    ab6b:	c9                   	leave
    ab6c:	c3                   	ret
    ab6d:	90                   	nop

000000000000ab6e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ab6e:	55                   	push   %rbp
    ab6f:	48 89 e5             	mov    %rsp,%rbp
    ab72:	48 83 ec 10          	sub    $0x10,%rsp
    ab76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ab7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab86:	48 89 d6             	mov    %rdx,%rsi
    ab89:	48 89 c7             	mov    %rax,%rdi
    ab8c:	e8 43 f1 ff ff       	call   9cd4 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    ab91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab95:	48 89 c7             	mov    %rax,%rdi
    ab98:	e8 a3 0b 00 00       	call   b740 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ab9d:	90                   	nop
    ab9e:	c9                   	leave
    ab9f:	c3                   	ret

000000000000aba0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    aba0:	55                   	push   %rbp
    aba1:	48 89 e5             	mov    %rsp,%rbp
    aba4:	48 83 ec 10          	sub    $0x10,%rsp
    aba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    abb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    abb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abb8:	48 89 d6             	mov    %rdx,%rsi
    abbb:	48 89 c7             	mov    %rax,%rdi
    abbe:	e8 ab 0b 00 00       	call   b76e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    abc3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    abc7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    abca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abce:	48 8b 10             	mov    (%rax),%rdx
    abd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abd5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    abd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abdd:	48 8b 08             	mov    (%rax),%rcx
    abe0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    abe4:	48 89 d0             	mov    %rdx,%rax
    abe7:	48 c1 e0 06          	shl    $0x6,%rax
    abeb:	48 01 d0             	add    %rdx,%rax
    abee:	48 c1 e0 02          	shl    $0x2,%rax
    abf2:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    abf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfa:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    abfe:	90                   	nop
    abff:	c9                   	leave
    ac00:	c3                   	ret

000000000000ac01 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ac01:	55                   	push   %rbp
    ac02:	48 89 e5             	mov    %rsp,%rbp
    ac05:	48 83 ec 20          	sub    $0x20,%rsp
    ac09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac11:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    ac15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac1d:	48 89 d6             	mov    %rdx,%rsi
    ac20:	48 89 c7             	mov    %rax,%rdi
    ac23:	e8 79 0b 00 00       	call   b7a1 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    ac28:	c9                   	leave
    ac29:	c3                   	ret

000000000000ac2a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ac2a:	55                   	push   %rbp
    ac2b:	48 89 e5             	mov    %rsp,%rbp
    ac2e:	48 83 ec 10          	sub    $0x10,%rsp
    ac32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    ac3a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac42:	48 89 d6             	mov    %rdx,%rsi
    ac45:	48 89 c7             	mov    %rax,%rdi
    ac48:	e8 7d 0b 00 00       	call   b7ca <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    ac4d:	90                   	nop
    ac4e:	c9                   	leave
    ac4f:	c3                   	ret

000000000000ac50 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    ac50:	55                   	push   %rbp
    ac51:	48 89 e5             	mov    %rsp,%rbp
    ac54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac5c:	90                   	nop
    ac5d:	5d                   	pop    %rbp
    ac5e:	c3                   	ret

000000000000ac5f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ac5f:	55                   	push   %rbp
    ac60:	48 89 e5             	mov    %rsp,%rbp
    ac63:	48 83 ec 20          	sub    $0x20,%rsp
    ac67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac6f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ac73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac77:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ac7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac7f:	48 89 ce             	mov    %rcx,%rsi
    ac82:	48 89 c7             	mov    %rax,%rdi
    ac85:	e8 50 0b 00 00       	call   b7da <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    ac8a:	90                   	nop
    ac8b:	c9                   	leave
    ac8c:	c3                   	ret

000000000000ac8d <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ac8d:	55                   	push   %rbp
    ac8e:	48 89 e5             	mov    %rsp,%rbp
    ac91:	48 83 ec 20          	sub    $0x20,%rsp
    ac95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ac99:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    aca0:	ff ff 0f 
    aca3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    aca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acab:	48 89 c7             	mov    %rax,%rdi
    acae:	e8 61 0b 00 00       	call   b814 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    acb3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    acb7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    acbb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    acbf:	48 89 d6             	mov    %rdx,%rsi
    acc2:	48 89 c7             	mov    %rax,%rdi
    acc5:	e8 66 a9 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    acca:	48 8b 00             	mov    (%rax),%rax
      }
    accd:	c9                   	leave
    acce:	c3                   	ret
    accf:	90                   	nop

000000000000acd0 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    acd0:	55                   	push   %rbp
    acd1:	48 89 e5             	mov    %rsp,%rbp
    acd4:	48 83 ec 10          	sub    $0x10,%rsp
    acd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ace0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ace4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace8:	48 89 d6             	mov    %rdx,%rsi
    aceb:	48 89 c7             	mov    %rax,%rdi
    acee:	e8 61 f1 ff ff       	call   9e54 <_ZNSaIPKcEC1ERKS1_>
    acf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acf7:	48 89 c7             	mov    %rax,%rdi
    acfa:	e8 2f 0b 00 00       	call   b82e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    acff:	90                   	nop
    ad00:	c9                   	leave
    ad01:	c3                   	ret

000000000000ad02 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ad02:	55                   	push   %rbp
    ad03:	48 89 e5             	mov    %rsp,%rbp
    ad06:	48 83 ec 10          	sub    $0x10,%rsp
    ad0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ad12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad1a:	48 89 d6             	mov    %rdx,%rsi
    ad1d:	48 89 c7             	mov    %rax,%rdi
    ad20:	e8 37 0b 00 00       	call   b85c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    ad25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ad29:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ad2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad30:	48 8b 10             	mov    (%rax),%rdx
    ad33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad37:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ad3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad3f:	48 8b 00             	mov    (%rax),%rax
    ad42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad46:	48 c1 e2 03          	shl    $0x3,%rdx
    ad4a:	48 01 c2             	add    %rax,%rdx
    ad4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad51:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    ad55:	90                   	nop
    ad56:	c9                   	leave
    ad57:	c3                   	ret

000000000000ad58 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ad58:	55                   	push   %rbp
    ad59:	48 89 e5             	mov    %rsp,%rbp
    ad5c:	48 83 ec 20          	sub    $0x20,%rsp
    ad60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    ad6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad74:	48 89 d6             	mov    %rdx,%rsi
    ad77:	48 89 c7             	mov    %rax,%rdi
    ad7a:	e8 10 0b 00 00       	call   b88f <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    ad7f:	c9                   	leave
    ad80:	c3                   	ret
    ad81:	90                   	nop

000000000000ad82 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    ad82:	55                   	push   %rbp
    ad83:	48 89 e5             	mov    %rsp,%rbp
    ad86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad8e:	90                   	nop
    ad8f:	5d                   	pop    %rbp
    ad90:	c3                   	ret

000000000000ad91 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ad91:	55                   	push   %rbp
    ad92:	48 89 e5             	mov    %rsp,%rbp
    ad95:	48 83 ec 20          	sub    $0x20,%rsp
    ad99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad9d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ada1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ada5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ada9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    adad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adb1:	48 89 ce             	mov    %rcx,%rsi
    adb4:	48 89 c7             	mov    %rax,%rdi
    adb7:	e8 fc 0a 00 00       	call   b8b8 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    adbc:	90                   	nop
    adbd:	c9                   	leave
    adbe:	c3                   	ret

000000000000adbf <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    adbf:	55                   	push   %rbp
    adc0:	48 89 e5             	mov    %rsp,%rbp
    adc3:	48 83 ec 20          	sub    $0x20,%rsp
    adc7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    adcb:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    add2:	ff ff 0f 
    add5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    add9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    addd:	48 89 c7             	mov    %rax,%rdi
    ade0:	e8 04 0b 00 00       	call   b8e9 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    ade5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ade9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    aded:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    adf1:	48 89 d6             	mov    %rdx,%rsi
    adf4:	48 89 c7             	mov    %rax,%rdi
    adf7:	e8 34 a8 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    adfc:	48 8b 00             	mov    (%rax),%rax
      }
    adff:	c9                   	leave
    ae00:	c3                   	ret
    ae01:	90                   	nop

000000000000ae02 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ae02:	55                   	push   %rbp
    ae03:	48 89 e5             	mov    %rsp,%rbp
    ae06:	48 83 ec 10          	sub    $0x10,%rsp
    ae0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ae12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1a:	48 89 d6             	mov    %rdx,%rsi
    ae1d:	48 89 c7             	mov    %rax,%rdi
    ae20:	e8 eb f1 ff ff       	call   a010 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    ae25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae29:	48 89 c7             	mov    %rax,%rdi
    ae2c:	e8 d3 0a 00 00       	call   b904 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    ae31:	90                   	nop
    ae32:	c9                   	leave
    ae33:	c3                   	ret

000000000000ae34 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ae34:	55                   	push   %rbp
    ae35:	48 89 e5             	mov    %rsp,%rbp
    ae38:	48 83 ec 10          	sub    $0x10,%rsp
    ae3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ae44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4c:	48 89 d6             	mov    %rdx,%rsi
    ae4f:	48 89 c7             	mov    %rax,%rdi
    ae52:	e8 db 0a 00 00       	call   b932 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    ae57:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae5b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ae5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae62:	48 8b 10             	mov    (%rax),%rdx
    ae65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae69:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ae6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae71:	48 8b 00             	mov    (%rax),%rax
    ae74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae78:	48 c1 e2 03          	shl    $0x3,%rdx
    ae7c:	48 01 c2             	add    %rax,%rdx
    ae7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae83:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    ae87:	90                   	nop
    ae88:	c9                   	leave
    ae89:	c3                   	ret

000000000000ae8a <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ae8a:	55                   	push   %rbp
    ae8b:	48 89 e5             	mov    %rsp,%rbp
    ae8e:	48 83 ec 20          	sub    $0x20,%rsp
    ae92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    ae9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea6:	48 89 d6             	mov    %rdx,%rsi
    aea9:	48 89 c7             	mov    %rax,%rdi
    aeac:	e8 b4 0a 00 00       	call   b965 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    aeb1:	c9                   	leave
    aeb2:	c3                   	ret

000000000000aeb3 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    aeb3:	55                   	push   %rbp
    aeb4:	48 89 e5             	mov    %rsp,%rbp
    aeb7:	48 83 ec 10          	sub    $0x10,%rsp
    aebb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aebf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    aec3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aecb:	48 89 d6             	mov    %rdx,%rsi
    aece:	48 89 c7             	mov    %rax,%rdi
    aed1:	e8 b8 0a 00 00       	call   b98e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    aed6:	90                   	nop
    aed7:	c9                   	leave
    aed8:	c3                   	ret
    aed9:	90                   	nop

000000000000aeda <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    aeda:	55                   	push   %rbp
    aedb:	48 89 e5             	mov    %rsp,%rbp
    aede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aee2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aee6:	90                   	nop
    aee7:	5d                   	pop    %rbp
    aee8:	c3                   	ret

000000000000aee9 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    aee9:	55                   	push   %rbp
    aeea:	48 89 e5             	mov    %rsp,%rbp
    aeed:	48 83 ec 20          	sub    $0x20,%rsp
    aef1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aef5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aef9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    aefd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    af01:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af09:	48 89 ce             	mov    %rcx,%rsi
    af0c:	48 89 c7             	mov    %rax,%rdi
    af0f:	e8 8a 0a 00 00       	call   b99e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    af14:	90                   	nop
    af15:	c9                   	leave
    af16:	c3                   	ret

000000000000af17 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    af17:	55                   	push   %rbp
    af18:	48 89 e5             	mov    %rsp,%rbp
    af1b:	48 83 ec 20          	sub    $0x20,%rsp
    af1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    af23:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    af2a:	55 55 05 
    af2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    af31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af35:	48 89 c7             	mov    %rax,%rdi
    af38:	e8 92 0a 00 00       	call   b9cf <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    af3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    af41:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    af45:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    af49:	48 89 d6             	mov    %rdx,%rsi
    af4c:	48 89 c7             	mov    %rax,%rdi
    af4f:	e8 dc a6 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    af54:	48 8b 00             	mov    (%rax),%rax
      }
    af57:	c9                   	leave
    af58:	c3                   	ret
    af59:	90                   	nop

000000000000af5a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    af5a:	55                   	push   %rbp
    af5b:	48 89 e5             	mov    %rsp,%rbp
    af5e:	48 83 ec 10          	sub    $0x10,%rsp
    af62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    af6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af72:	48 89 d6             	mov    %rdx,%rsi
    af75:	48 89 c7             	mov    %rax,%rdi
    af78:	e8 4f f2 ff ff       	call   a1cc <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    af7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af81:	48 89 c7             	mov    %rax,%rdi
    af84:	e8 61 0a 00 00       	call   b9ea <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    af89:	90                   	nop
    af8a:	c9                   	leave
    af8b:	c3                   	ret

000000000000af8c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    af8c:	55                   	push   %rbp
    af8d:	48 89 e5             	mov    %rsp,%rbp
    af90:	48 83 ec 10          	sub    $0x10,%rsp
    af94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    af9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa4:	48 89 d6             	mov    %rdx,%rsi
    afa7:	48 89 c7             	mov    %rax,%rdi
    afaa:	e8 69 0a 00 00       	call   ba18 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    afaf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    afb3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    afb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afba:	48 8b 10             	mov    (%rax),%rdx
    afbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afc1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    afc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afc9:	48 8b 08             	mov    (%rax),%rcx
    afcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afd0:	48 89 d0             	mov    %rdx,%rax
    afd3:	48 01 c0             	add    %rax,%rax
    afd6:	48 01 d0             	add    %rdx,%rax
    afd9:	48 c1 e0 03          	shl    $0x3,%rax
    afdd:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    afe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afe5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    afe9:	90                   	nop
    afea:	c9                   	leave
    afeb:	c3                   	ret

000000000000afec <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    afec:	55                   	push   %rbp
    afed:	48 89 e5             	mov    %rsp,%rbp
    aff0:	48 83 ec 20          	sub    $0x20,%rsp
    aff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aff8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    affc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b000:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b008:	48 89 d6             	mov    %rdx,%rsi
    b00b:	48 89 c7             	mov    %rax,%rdi
    b00e:	e8 38 0a 00 00       	call   ba4b <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    b013:	c9                   	leave
    b014:	c3                   	ret

000000000000b015 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b015:	55                   	push   %rbp
    b016:	48 89 e5             	mov    %rsp,%rbp
    b019:	48 83 ec 10          	sub    $0x10,%rsp
    b01d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b021:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b025:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b02d:	48 89 d6             	mov    %rdx,%rsi
    b030:	48 89 c7             	mov    %rax,%rdi
    b033:	e8 3c 0a 00 00       	call   ba74 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    b038:	90                   	nop
    b039:	c9                   	leave
    b03a:	c3                   	ret
    b03b:	90                   	nop

000000000000b03c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    b03c:	55                   	push   %rbp
    b03d:	48 89 e5             	mov    %rsp,%rbp
    b040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b044:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b048:	90                   	nop
    b049:	5d                   	pop    %rbp
    b04a:	c3                   	ret

000000000000b04b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b04b:	55                   	push   %rbp
    b04c:	48 89 e5             	mov    %rsp,%rbp
    b04f:	48 83 ec 20          	sub    $0x20,%rsp
    b053:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b057:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b05b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b05f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b063:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b06b:	48 89 ce             	mov    %rcx,%rsi
    b06e:	48 89 c7             	mov    %rax,%rdi
    b071:	e8 0e 0a 00 00       	call   ba84 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    b076:	90                   	nop
    b077:	c9                   	leave
    b078:	c3                   	ret

000000000000b079 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b079:	55                   	push   %rbp
    b07a:	48 89 e5             	mov    %rsp,%rbp
    b07d:	48 83 ec 20          	sub    $0x20,%rsp
    b081:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b085:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    b08c:	49 92 04 
    b08f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b097:	48 89 c7             	mov    %rax,%rdi
    b09a:	e8 1e 0a 00 00       	call   babd <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    b09f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b0a3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b0a7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b0ab:	48 89 d6             	mov    %rdx,%rsi
    b0ae:	48 89 c7             	mov    %rax,%rdi
    b0b1:	e8 7a a5 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    b0b6:	48 8b 00             	mov    (%rax),%rax
      }
    b0b9:	c9                   	leave
    b0ba:	c3                   	ret
    b0bb:	90                   	nop

000000000000b0bc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b0bc:	55                   	push   %rbp
    b0bd:	48 89 e5             	mov    %rsp,%rbp
    b0c0:	48 83 ec 10          	sub    $0x10,%rsp
    b0c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b0cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0d4:	48 89 d6             	mov    %rdx,%rsi
    b0d7:	48 89 c7             	mov    %rax,%rdi
    b0da:	e8 5b f3 ff ff       	call   a43a <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    b0df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e3:	48 89 c7             	mov    %rax,%rdi
    b0e6:	e8 ed 09 00 00       	call   bad8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    b0eb:	90                   	nop
    b0ec:	c9                   	leave
    b0ed:	c3                   	ret

000000000000b0ee <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b0ee:	55                   	push   %rbp
    b0ef:	48 89 e5             	mov    %rsp,%rbp
    b0f2:	48 83 ec 10          	sub    $0x10,%rsp
    b0f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b0fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b106:	48 89 d6             	mov    %rdx,%rsi
    b109:	48 89 c7             	mov    %rax,%rdi
    b10c:	e8 f5 09 00 00       	call   bb06 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    b111:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b115:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b11c:	48 8b 10             	mov    (%rax),%rdx
    b11f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b123:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b12b:	48 8b 08             	mov    (%rax),%rcx
    b12e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b132:	48 89 d0             	mov    %rdx,%rax
    b135:	48 c1 e0 03          	shl    $0x3,%rax
    b139:	48 29 d0             	sub    %rdx,%rax
    b13c:	48 c1 e0 02          	shl    $0x2,%rax
    b140:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b148:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b14c:	90                   	nop
    b14d:	c9                   	leave
    b14e:	c3                   	ret

000000000000b14f <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b14f:	55                   	push   %rbp
    b150:	48 89 e5             	mov    %rsp,%rbp
    b153:	48 83 ec 20          	sub    $0x20,%rsp
    b157:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b15b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b15f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b163:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b16b:	48 89 d6             	mov    %rdx,%rsi
    b16e:	48 89 c7             	mov    %rax,%rdi
    b171:	e8 c3 09 00 00       	call   bb39 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    b176:	c9                   	leave
    b177:	c3                   	ret

000000000000b178 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b178:	55                   	push   %rbp
    b179:	48 89 e5             	mov    %rsp,%rbp
    b17c:	48 83 ec 10          	sub    $0x10,%rsp
    b180:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b184:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b188:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b18c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b190:	48 89 d6             	mov    %rdx,%rsi
    b193:	48 89 c7             	mov    %rax,%rdi
    b196:	e8 c7 09 00 00       	call   bb62 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    b19b:	90                   	nop
    b19c:	c9                   	leave
    b19d:	c3                   	ret

000000000000b19e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    b19e:	55                   	push   %rbp
    b19f:	48 89 e5             	mov    %rsp,%rbp
    b1a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    b1a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1aa:	5d                   	pop    %rbp
    b1ab:	c3                   	ret

000000000000b1ac <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    b1ac:	55                   	push   %rbp
    b1ad:	48 89 e5             	mov    %rsp,%rbp
    b1b0:	53                   	push   %rbx
    b1b1:	48 83 ec 18          	sub    $0x18,%rsp
    b1b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    b1bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b1c1:	48 89 c7             	mov    %rax,%rdi
    b1c4:	e8 2f f2 ff ff       	call   a3f8 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    b1c9:	48 89 c3             	mov    %rax,%rbx
    b1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1d0:	48 89 c7             	mov    %rax,%rdi
    b1d3:	e8 99 09 00 00       	call   bb71 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b1d8:	48 89 de             	mov    %rbx,%rsi
    b1db:	48 89 c7             	mov    %rax,%rdi
    b1de:	e8 9c 09 00 00       	call   bb7f <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    b1e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1e7:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    b1eb:	90                   	nop
    b1ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b1f0:	c9                   	leave
    b1f1:	c3                   	ret

000000000000b1f2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    b1f2:	55                   	push   %rbp
    b1f3:	48 89 e5             	mov    %rsp,%rbp
    b1f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b1fe:	90                   	nop
    b1ff:	5d                   	pop    %rbp
    b200:	c3                   	ret

000000000000b201 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b201:	55                   	push   %rbp
    b202:	48 89 e5             	mov    %rsp,%rbp
    b205:	48 83 ec 20          	sub    $0x20,%rsp
    b209:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b20d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b211:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b215:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b219:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b21d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b221:	48 89 ce             	mov    %rcx,%rsi
    b224:	48 89 c7             	mov    %rax,%rdi
    b227:	e8 a4 09 00 00       	call   bbd0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    b22c:	90                   	nop
    b22d:	c9                   	leave
    b22e:	c3                   	ret

000000000000b22f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b22f:	55                   	push   %rbp
    b230:	48 89 e5             	mov    %rsp,%rbp
    b233:	48 83 ec 20          	sub    $0x20,%rsp
    b237:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b23b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b242:	ff ff 0f 
    b245:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b249:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b24d:	48 89 c7             	mov    %rax,%rdi
    b250:	e8 b5 09 00 00       	call   bc0a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    b255:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b259:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b25d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b261:	48 89 d6             	mov    %rdx,%rsi
    b264:	48 89 c7             	mov    %rax,%rdi
    b267:	e8 c4 a3 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    b26c:	48 8b 00             	mov    (%rax),%rax
      }
    b26f:	c9                   	leave
    b270:	c3                   	ret
    b271:	90                   	nop

000000000000b272 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b272:	55                   	push   %rbp
    b273:	48 89 e5             	mov    %rsp,%rbp
    b276:	48 83 ec 10          	sub    $0x10,%rsp
    b27a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b27e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b282:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b28a:	48 89 d6             	mov    %rdx,%rsi
    b28d:	48 89 c7             	mov    %rax,%rdi
    b290:	e8 61 f3 ff ff       	call   a5f6 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    b295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b299:	48 89 c7             	mov    %rax,%rdi
    b29c:	e8 83 09 00 00       	call   bc24 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b2a1:	90                   	nop
    b2a2:	c9                   	leave
    b2a3:	c3                   	ret

000000000000b2a4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b2a4:	55                   	push   %rbp
    b2a5:	48 89 e5             	mov    %rsp,%rbp
    b2a8:	48 83 ec 10          	sub    $0x10,%rsp
    b2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b2b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2bc:	48 89 d6             	mov    %rdx,%rsi
    b2bf:	48 89 c7             	mov    %rax,%rdi
    b2c2:	e8 8b 09 00 00       	call   bc52 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    b2c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b2cb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d2:	48 8b 10             	mov    (%rax),%rdx
    b2d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b2dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e1:	48 8b 00             	mov    (%rax),%rax
    b2e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2e8:	48 c1 e2 03          	shl    $0x3,%rdx
    b2ec:	48 01 c2             	add    %rax,%rdx
    b2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2f3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b2f7:	90                   	nop
    b2f8:	c9                   	leave
    b2f9:	c3                   	ret

000000000000b2fa <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b2fa:	55                   	push   %rbp
    b2fb:	48 89 e5             	mov    %rsp,%rbp
    b2fe:	48 83 ec 20          	sub    $0x20,%rsp
    b302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b306:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b30a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b30e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b316:	48 89 d6             	mov    %rdx,%rsi
    b319:	48 89 c7             	mov    %rax,%rdi
    b31c:	e8 64 09 00 00       	call   bc85 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    b321:	c9                   	leave
    b322:	c3                   	ret

000000000000b323 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b323:	55                   	push   %rbp
    b324:	48 89 e5             	mov    %rsp,%rbp
    b327:	48 83 ec 10          	sub    $0x10,%rsp
    b32b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b32f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b333:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b33b:	48 89 d6             	mov    %rdx,%rsi
    b33e:	48 89 c7             	mov    %rax,%rdi
    b341:	e8 68 09 00 00       	call   bcae <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    b346:	90                   	nop
    b347:	c9                   	leave
    b348:	c3                   	ret
    b349:	90                   	nop

000000000000b34a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    b34a:	55                   	push   %rbp
    b34b:	48 89 e5             	mov    %rsp,%rbp
    b34e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b352:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b356:	90                   	nop
    b357:	5d                   	pop    %rbp
    b358:	c3                   	ret

000000000000b359 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b359:	55                   	push   %rbp
    b35a:	48 89 e5             	mov    %rsp,%rbp
    b35d:	48 83 ec 20          	sub    $0x20,%rsp
    b361:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b365:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b369:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b36d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b371:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b379:	48 89 ce             	mov    %rcx,%rsi
    b37c:	48 89 c7             	mov    %rax,%rdi
    b37f:	e8 3a 09 00 00       	call   bcbe <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    b384:	90                   	nop
    b385:	c9                   	leave
    b386:	c3                   	ret

000000000000b387 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b387:	55                   	push   %rbp
    b388:	48 89 e5             	mov    %rsp,%rbp
    b38b:	48 83 ec 20          	sub    $0x20,%rsp
    b38f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b393:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b39a:	ff ff 1f 
    b39d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b3a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3a5:	48 89 c7             	mov    %rax,%rdi
    b3a8:	e8 42 09 00 00       	call   bcef <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    b3ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b3b1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b3b5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b3b9:	48 89 d6             	mov    %rdx,%rsi
    b3bc:	48 89 c7             	mov    %rax,%rdi
    b3bf:	e8 6c a2 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    b3c4:	48 8b 00             	mov    (%rax),%rax
      }
    b3c7:	c9                   	leave
    b3c8:	c3                   	ret
    b3c9:	90                   	nop

000000000000b3ca <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b3ca:	55                   	push   %rbp
    b3cb:	48 89 e5             	mov    %rsp,%rbp
    b3ce:	48 83 ec 10          	sub    $0x10,%rsp
    b3d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b3da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3e2:	48 89 d6             	mov    %rdx,%rsi
    b3e5:	48 89 c7             	mov    %rax,%rdi
    b3e8:	e8 c5 f3 ff ff       	call   a7b2 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    b3ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f1:	48 89 c7             	mov    %rax,%rdi
    b3f4:	e8 11 09 00 00       	call   bd0a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b3f9:	90                   	nop
    b3fa:	c9                   	leave
    b3fb:	c3                   	ret

000000000000b3fc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b3fc:	55                   	push   %rbp
    b3fd:	48 89 e5             	mov    %rsp,%rbp
    b400:	48 83 ec 10          	sub    $0x10,%rsp
    b404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b408:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b40c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b414:	48 89 d6             	mov    %rdx,%rsi
    b417:	48 89 c7             	mov    %rax,%rdi
    b41a:	e8 19 09 00 00       	call   bd38 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    b41f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b423:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b42a:	48 8b 10             	mov    (%rax),%rdx
    b42d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b431:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b439:	48 8b 00             	mov    (%rax),%rax
    b43c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b440:	48 c1 e2 02          	shl    $0x2,%rdx
    b444:	48 01 c2             	add    %rax,%rdx
    b447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b44f:	90                   	nop
    b450:	c9                   	leave
    b451:	c3                   	ret

000000000000b452 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b452:	55                   	push   %rbp
    b453:	48 89 e5             	mov    %rsp,%rbp
    b456:	48 83 ec 20          	sub    $0x20,%rsp
    b45a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b45e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b462:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b466:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b46e:	48 89 d6             	mov    %rdx,%rsi
    b471:	48 89 c7             	mov    %rax,%rdi
    b474:	e8 f2 08 00 00       	call   bd6b <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    b479:	c9                   	leave
    b47a:	c3                   	ret

000000000000b47b <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b47b:	55                   	push   %rbp
    b47c:	48 89 e5             	mov    %rsp,%rbp
    b47f:	48 83 ec 10          	sub    $0x10,%rsp
    b483:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b487:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b48b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b48f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b493:	48 89 d6             	mov    %rdx,%rsi
    b496:	48 89 c7             	mov    %rax,%rdi
    b499:	e8 f6 08 00 00       	call   bd94 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    b49e:	90                   	nop
    b49f:	c9                   	leave
    b4a0:	c3                   	ret
    b4a1:	90                   	nop

000000000000b4a2 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    b4a2:	55                   	push   %rbp
    b4a3:	48 89 e5             	mov    %rsp,%rbp
    b4a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b4ae:	90                   	nop
    b4af:	5d                   	pop    %rbp
    b4b0:	c3                   	ret

000000000000b4b1 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b4b1:	55                   	push   %rbp
    b4b2:	48 89 e5             	mov    %rsp,%rbp
    b4b5:	48 83 ec 20          	sub    $0x20,%rsp
    b4b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b4c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b4c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b4c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b4cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4d1:	48 89 ce             	mov    %rcx,%rsi
    b4d4:	48 89 c7             	mov    %rax,%rdi
    b4d7:	e8 c8 08 00 00       	call   bda4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    b4dc:	90                   	nop
    b4dd:	c9                   	leave
    b4de:	c3                   	ret

000000000000b4df <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b4df:	55                   	push   %rbp
    b4e0:	48 89 e5             	mov    %rsp,%rbp
    b4e3:	48 83 ec 20          	sub    $0x20,%rsp
    b4e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b4eb:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b4f2:	ff ff 0f 
    b4f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b4f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4fd:	48 89 c7             	mov    %rax,%rdi
    b500:	e8 d0 08 00 00       	call   bdd5 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    b505:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b509:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b50d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b511:	48 89 d6             	mov    %rdx,%rsi
    b514:	48 89 c7             	mov    %rax,%rdi
    b517:	e8 14 a1 ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    b51c:	48 8b 00             	mov    (%rax),%rax
      }
    b51f:	c9                   	leave
    b520:	c3                   	ret
    b521:	90                   	nop

000000000000b522 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b522:	55                   	push   %rbp
    b523:	48 89 e5             	mov    %rsp,%rbp
    b526:	48 83 ec 10          	sub    $0x10,%rsp
    b52a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b52e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b532:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b53a:	48 89 d6             	mov    %rdx,%rsi
    b53d:	48 89 c7             	mov    %rax,%rdi
    b540:	e8 29 f4 ff ff       	call   a96e <_ZNSaIP9VkImage_TEC1ERKS1_>
    b545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b549:	48 89 c7             	mov    %rax,%rdi
    b54c:	e8 9f 08 00 00       	call   bdf0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    b551:	90                   	nop
    b552:	c9                   	leave
    b553:	c3                   	ret

000000000000b554 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b554:	55                   	push   %rbp
    b555:	48 89 e5             	mov    %rsp,%rbp
    b558:	48 83 ec 10          	sub    $0x10,%rsp
    b55c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b560:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b564:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b56c:	48 89 d6             	mov    %rdx,%rsi
    b56f:	48 89 c7             	mov    %rax,%rdi
    b572:	e8 a7 08 00 00       	call   be1e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    b577:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b57b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b57e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b582:	48 8b 10             	mov    (%rax),%rdx
    b585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b589:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b58d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b591:	48 8b 00             	mov    (%rax),%rax
    b594:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b598:	48 c1 e2 03          	shl    $0x3,%rdx
    b59c:	48 01 c2             	add    %rax,%rdx
    b59f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b5a7:	90                   	nop
    b5a8:	c9                   	leave
    b5a9:	c3                   	ret

000000000000b5aa <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b5aa:	55                   	push   %rbp
    b5ab:	48 89 e5             	mov    %rsp,%rbp
    b5ae:	48 83 ec 20          	sub    $0x20,%rsp
    b5b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b5be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5c6:	48 89 d6             	mov    %rdx,%rsi
    b5c9:	48 89 c7             	mov    %rax,%rdi
    b5cc:	e8 80 08 00 00       	call   be51 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    b5d1:	c9                   	leave
    b5d2:	c3                   	ret

000000000000b5d3 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b5d3:	55                   	push   %rbp
    b5d4:	48 89 e5             	mov    %rsp,%rbp
    b5d7:	48 83 ec 10          	sub    $0x10,%rsp
    b5db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b5e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5eb:	48 89 d6             	mov    %rdx,%rsi
    b5ee:	48 89 c7             	mov    %rax,%rdi
    b5f1:	e8 84 08 00 00       	call   be7a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    b5f6:	90                   	nop
    b5f7:	c9                   	leave
    b5f8:	c3                   	ret
    b5f9:	90                   	nop

000000000000b5fa <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    b5fa:	55                   	push   %rbp
    b5fb:	48 89 e5             	mov    %rsp,%rbp
    b5fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b602:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b606:	90                   	nop
    b607:	5d                   	pop    %rbp
    b608:	c3                   	ret

000000000000b609 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b609:	55                   	push   %rbp
    b60a:	48 89 e5             	mov    %rsp,%rbp
    b60d:	48 83 ec 20          	sub    $0x20,%rsp
    b611:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b615:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b619:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b61d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b621:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b629:	48 89 ce             	mov    %rcx,%rsi
    b62c:	48 89 c7             	mov    %rax,%rdi
    b62f:	e8 56 08 00 00       	call   be8a <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    b634:	90                   	nop
    b635:	c9                   	leave
    b636:	c3                   	ret

000000000000b637 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b637:	55                   	push   %rbp
    b638:	48 89 e5             	mov    %rsp,%rbp
    b63b:	48 83 ec 10          	sub    $0x10,%rsp
    b63f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b647:	48 89 c7             	mov    %rax,%rdi
    b64a:	e8 6d 08 00 00       	call   bebc <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    b64f:	c9                   	leave
    b650:	c3                   	ret
    b651:	90                   	nop

000000000000b652 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b652:	55                   	push   %rbp
    b653:	48 89 e5             	mov    %rsp,%rbp
    b656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b65a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b65e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b665:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b669:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b670:	00 
    b671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b675:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b67c:	00 
	{ }
    b67d:	90                   	nop
    b67e:	5d                   	pop    %rbp
    b67f:	c3                   	ret

000000000000b680 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b680:	55                   	push   %rbp
    b681:	48 89 e5             	mov    %rsp,%rbp
    b684:	48 83 ec 10          	sub    $0x10,%rsp
    b688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b68c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b690:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b695:	74 15                	je     b6ac <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    b697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b69b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b69f:	48 89 d6             	mov    %rdx,%rsi
    b6a2:	48 89 c7             	mov    %rax,%rdi
    b6a5:	e8 2c 08 00 00       	call   bed6 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    b6aa:	eb 05                	jmp    b6b1 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    b6ac:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b6b1:	c9                   	leave
    b6b2:	c3                   	ret

000000000000b6b3 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b6b3:	55                   	push   %rbp
    b6b4:	48 89 e5             	mov    %rsp,%rbp
    b6b7:	48 83 ec 20          	sub    $0x20,%rsp
    b6bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b6bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b6c3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b6c7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b6cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6cf:	48 89 d6             	mov    %rdx,%rsi
    b6d2:	48 89 c7             	mov    %rax,%rdi
    b6d5:	e8 26 08 00 00       	call   bf00 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    b6da:	c9                   	leave
    b6db:	c3                   	ret

000000000000b6dc <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    b6dc:	55                   	push   %rbp
    b6dd:	48 89 e5             	mov    %rsp,%rbp
    b6e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6e8:	90                   	nop
    b6e9:	5d                   	pop    %rbp
    b6ea:	c3                   	ret
    b6eb:	90                   	nop

000000000000b6ec <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b6ec:	55                   	push   %rbp
    b6ed:	48 89 e5             	mov    %rsp,%rbp
    b6f0:	48 83 ec 20          	sub    $0x20,%rsp
    b6f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b700:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b704:	48 89 d0             	mov    %rdx,%rax
    b707:	48 c1 e0 06          	shl    $0x6,%rax
    b70b:	48 01 d0             	add    %rdx,%rax
    b70e:	48 c1 e0 03          	shl    $0x3,%rax
    b712:	48 89 c2             	mov    %rax,%rdx
    b715:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b719:	48 89 d6             	mov    %rdx,%rsi
    b71c:	48 89 c7             	mov    %rax,%rdi
    b71f:	e8 5c 8d ff ff       	call   4480 <_ZdlPvm@plt>
      }
    b724:	c9                   	leave
    b725:	c3                   	ret

000000000000b726 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b726:	55                   	push   %rbp
    b727:	48 89 e5             	mov    %rsp,%rbp
    b72a:	48 83 ec 10          	sub    $0x10,%rsp
    b72e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b736:	48 89 c7             	mov    %rax,%rdi
    b739:	e8 22 08 00 00       	call   bf60 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    b73e:	c9                   	leave
    b73f:	c3                   	ret

000000000000b740 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b740:	55                   	push   %rbp
    b741:	48 89 e5             	mov    %rsp,%rbp
    b744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b74c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b757:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b75e:	00 
    b75f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b763:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b76a:	00 
	{ }
    b76b:	90                   	nop
    b76c:	5d                   	pop    %rbp
    b76d:	c3                   	ret

000000000000b76e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b76e:	55                   	push   %rbp
    b76f:	48 89 e5             	mov    %rsp,%rbp
    b772:	48 83 ec 10          	sub    $0x10,%rsp
    b776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b77a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b77e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b783:	74 15                	je     b79a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    b785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b789:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b78d:	48 89 d6             	mov    %rdx,%rsi
    b790:	48 89 c7             	mov    %rax,%rdi
    b793:	e8 e2 07 00 00       	call   bf7a <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    b798:	eb 05                	jmp    b79f <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    b79a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b79f:	c9                   	leave
    b7a0:	c3                   	ret

000000000000b7a1 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b7a1:	55                   	push   %rbp
    b7a2:	48 89 e5             	mov    %rsp,%rbp
    b7a5:	48 83 ec 20          	sub    $0x20,%rsp
    b7a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b7ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b7b1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b7b5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b7b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7bd:	48 89 d6             	mov    %rdx,%rsi
    b7c0:	48 89 c7             	mov    %rax,%rdi
    b7c3:	e8 dc 07 00 00       	call   bfa4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    b7c8:	c9                   	leave
    b7c9:	c3                   	ret

000000000000b7ca <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    b7ca:	55                   	push   %rbp
    b7cb:	48 89 e5             	mov    %rsp,%rbp
    b7ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7d6:	90                   	nop
    b7d7:	5d                   	pop    %rbp
    b7d8:	c3                   	ret
    b7d9:	90                   	nop

000000000000b7da <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b7da:	55                   	push   %rbp
    b7db:	48 89 e5             	mov    %rsp,%rbp
    b7de:	48 83 ec 20          	sub    $0x20,%rsp
    b7e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b7ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b7f2:	48 89 d0             	mov    %rdx,%rax
    b7f5:	48 c1 e0 06          	shl    $0x6,%rax
    b7f9:	48 01 d0             	add    %rdx,%rax
    b7fc:	48 c1 e0 02          	shl    $0x2,%rax
    b800:	48 89 c2             	mov    %rax,%rdx
    b803:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b807:	48 89 d6             	mov    %rdx,%rsi
    b80a:	48 89 c7             	mov    %rax,%rdi
    b80d:	e8 6e 8c ff ff       	call   4480 <_ZdlPvm@plt>
      }
    b812:	c9                   	leave
    b813:	c3                   	ret

000000000000b814 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b814:	55                   	push   %rbp
    b815:	48 89 e5             	mov    %rsp,%rbp
    b818:	48 83 ec 10          	sub    $0x10,%rsp
    b81c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b824:	48 89 c7             	mov    %rax,%rdi
    b827:	e8 d8 07 00 00       	call   c004 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    b82c:	c9                   	leave
    b82d:	c3                   	ret

000000000000b82e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b82e:	55                   	push   %rbp
    b82f:	48 89 e5             	mov    %rsp,%rbp
    b832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b83a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b845:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b84c:	00 
    b84d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b851:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b858:	00 
	{ }
    b859:	90                   	nop
    b85a:	5d                   	pop    %rbp
    b85b:	c3                   	ret

000000000000b85c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b85c:	55                   	push   %rbp
    b85d:	48 89 e5             	mov    %rsp,%rbp
    b860:	48 83 ec 10          	sub    $0x10,%rsp
    b864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b86c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b871:	74 15                	je     b888 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    b873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b877:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b87b:	48 89 d6             	mov    %rdx,%rsi
    b87e:	48 89 c7             	mov    %rax,%rdi
    b881:	e8 98 07 00 00       	call   c01e <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    b886:	eb 05                	jmp    b88d <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    b888:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b88d:	c9                   	leave
    b88e:	c3                   	ret

000000000000b88f <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b88f:	55                   	push   %rbp
    b890:	48 89 e5             	mov    %rsp,%rbp
    b893:	48 83 ec 20          	sub    $0x20,%rsp
    b897:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b89b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b89f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b8a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b8a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8ab:	48 89 d6             	mov    %rdx,%rsi
    b8ae:	48 89 c7             	mov    %rax,%rdi
    b8b1:	e8 92 07 00 00       	call   c048 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    b8b6:	c9                   	leave
    b8b7:	c3                   	ret

000000000000b8b8 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b8b8:	55                   	push   %rbp
    b8b9:	48 89 e5             	mov    %rsp,%rbp
    b8bc:	48 83 ec 20          	sub    $0x20,%rsp
    b8c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b8cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b8d7:	00 
    b8d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8dc:	48 89 d6             	mov    %rdx,%rsi
    b8df:	48 89 c7             	mov    %rax,%rdi
    b8e2:	e8 99 8b ff ff       	call   4480 <_ZdlPvm@plt>
      }
    b8e7:	c9                   	leave
    b8e8:	c3                   	ret

000000000000b8e9 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b8e9:	55                   	push   %rbp
    b8ea:	48 89 e5             	mov    %rsp,%rbp
    b8ed:	48 83 ec 10          	sub    $0x10,%rsp
    b8f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b8f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f9:	48 89 c7             	mov    %rax,%rdi
    b8fc:	e8 a5 07 00 00       	call   c0a6 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    b901:	c9                   	leave
    b902:	c3                   	ret
    b903:	90                   	nop

000000000000b904 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b904:	55                   	push   %rbp
    b905:	48 89 e5             	mov    %rsp,%rbp
    b908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b90c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b910:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b91b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b922:	00 
    b923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b927:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b92e:	00 
	{ }
    b92f:	90                   	nop
    b930:	5d                   	pop    %rbp
    b931:	c3                   	ret

000000000000b932 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b932:	55                   	push   %rbp
    b933:	48 89 e5             	mov    %rsp,%rbp
    b936:	48 83 ec 10          	sub    $0x10,%rsp
    b93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b93e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b942:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b947:	74 15                	je     b95e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    b949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b94d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b951:	48 89 d6             	mov    %rdx,%rsi
    b954:	48 89 c7             	mov    %rax,%rdi
    b957:	e8 64 07 00 00       	call   c0c0 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    b95c:	eb 05                	jmp    b963 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    b95e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b963:	c9                   	leave
    b964:	c3                   	ret

000000000000b965 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b965:	55                   	push   %rbp
    b966:	48 89 e5             	mov    %rsp,%rbp
    b969:	48 83 ec 20          	sub    $0x20,%rsp
    b96d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b971:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b975:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b979:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b97d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b981:	48 89 d6             	mov    %rdx,%rsi
    b984:	48 89 c7             	mov    %rax,%rdi
    b987:	e8 5e 07 00 00       	call   c0ea <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    b98c:	c9                   	leave
    b98d:	c3                   	ret

000000000000b98e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    b98e:	55                   	push   %rbp
    b98f:	48 89 e5             	mov    %rsp,%rbp
    b992:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b996:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b99a:	90                   	nop
    b99b:	5d                   	pop    %rbp
    b99c:	c3                   	ret
    b99d:	90                   	nop

000000000000b99e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b99e:	55                   	push   %rbp
    b99f:	48 89 e5             	mov    %rsp,%rbp
    b9a2:	48 83 ec 20          	sub    $0x20,%rsp
    b9a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b9b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b9b6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b9bd:	00 
    b9be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9c2:	48 89 d6             	mov    %rdx,%rsi
    b9c5:	48 89 c7             	mov    %rax,%rdi
    b9c8:	e8 b3 8a ff ff       	call   4480 <_ZdlPvm@plt>
      }
    b9cd:	c9                   	leave
    b9ce:	c3                   	ret

000000000000b9cf <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b9cf:	55                   	push   %rbp
    b9d0:	48 89 e5             	mov    %rsp,%rbp
    b9d3:	48 83 ec 10          	sub    $0x10,%rsp
    b9d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9df:	48 89 c7             	mov    %rax,%rdi
    b9e2:	e8 61 07 00 00       	call   c148 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    b9e7:	c9                   	leave
    b9e8:	c3                   	ret
    b9e9:	90                   	nop

000000000000b9ea <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b9ea:	55                   	push   %rbp
    b9eb:	48 89 e5             	mov    %rsp,%rbp
    b9ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b9f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b9fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba01:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ba08:	00 
    ba09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba0d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ba14:	00 
	{ }
    ba15:	90                   	nop
    ba16:	5d                   	pop    %rbp
    ba17:	c3                   	ret

000000000000ba18 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ba18:	55                   	push   %rbp
    ba19:	48 89 e5             	mov    %rsp,%rbp
    ba1c:	48 83 ec 10          	sub    $0x10,%rsp
    ba20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ba28:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ba2d:	74 15                	je     ba44 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ba2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba37:	48 89 d6             	mov    %rdx,%rsi
    ba3a:	48 89 c7             	mov    %rax,%rdi
    ba3d:	e8 20 07 00 00       	call   c162 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    ba42:	eb 05                	jmp    ba49 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ba44:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ba49:	c9                   	leave
    ba4a:	c3                   	ret

000000000000ba4b <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ba4b:	55                   	push   %rbp
    ba4c:	48 89 e5             	mov    %rsp,%rbp
    ba4f:	48 83 ec 20          	sub    $0x20,%rsp
    ba53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ba5b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ba5f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ba63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba67:	48 89 d6             	mov    %rdx,%rsi
    ba6a:	48 89 c7             	mov    %rax,%rdi
    ba6d:	e8 1a 07 00 00       	call   c18c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    ba72:	c9                   	leave
    ba73:	c3                   	ret

000000000000ba74 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    ba74:	55                   	push   %rbp
    ba75:	48 89 e5             	mov    %rsp,%rbp
    ba78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba80:	90                   	nop
    ba81:	5d                   	pop    %rbp
    ba82:	c3                   	ret
    ba83:	90                   	nop

000000000000ba84 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ba84:	55                   	push   %rbp
    ba85:	48 89 e5             	mov    %rsp,%rbp
    ba88:	48 83 ec 20          	sub    $0x20,%rsp
    ba8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ba98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba9c:	48 89 d0             	mov    %rdx,%rax
    ba9f:	48 01 c0             	add    %rax,%rax
    baa2:	48 01 d0             	add    %rdx,%rax
    baa5:	48 c1 e0 03          	shl    $0x3,%rax
    baa9:	48 89 c2             	mov    %rax,%rdx
    baac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bab0:	48 89 d6             	mov    %rdx,%rsi
    bab3:	48 89 c7             	mov    %rax,%rdi
    bab6:	e8 c5 89 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    babb:	c9                   	leave
    babc:	c3                   	ret

000000000000babd <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    babd:	55                   	push   %rbp
    babe:	48 89 e5             	mov    %rsp,%rbp
    bac1:	48 83 ec 10          	sub    $0x10,%rsp
    bac5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bacd:	48 89 c7             	mov    %rax,%rdi
    bad0:	e8 15 07 00 00       	call   c1ea <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    bad5:	c9                   	leave
    bad6:	c3                   	ret
    bad7:	90                   	nop

000000000000bad8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bad8:	55                   	push   %rbp
    bad9:	48 89 e5             	mov    %rsp,%rbp
    badc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bae4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    baeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baef:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    baf6:	00 
    baf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bafb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bb02:	00 
	{ }
    bb03:	90                   	nop
    bb04:	5d                   	pop    %rbp
    bb05:	c3                   	ret

000000000000bb06 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bb06:	55                   	push   %rbp
    bb07:	48 89 e5             	mov    %rsp,%rbp
    bb0a:	48 83 ec 10          	sub    $0x10,%rsp
    bb0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bb16:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bb1b:	74 15                	je     bb32 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    bb1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb25:	48 89 d6             	mov    %rdx,%rsi
    bb28:	48 89 c7             	mov    %rax,%rdi
    bb2b:	e8 d4 06 00 00       	call   c204 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    bb30:	eb 05                	jmp    bb37 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    bb32:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bb37:	c9                   	leave
    bb38:	c3                   	ret

000000000000bb39 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    bb39:	55                   	push   %rbp
    bb3a:	48 89 e5             	mov    %rsp,%rbp
    bb3d:	48 83 ec 20          	sub    $0x20,%rsp
    bb41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bb49:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    bb4d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bb51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb55:	48 89 d6             	mov    %rdx,%rsi
    bb58:	48 89 c7             	mov    %rax,%rdi
    bb5b:	e8 ce 06 00 00       	call   c22e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    bb60:	c9                   	leave
    bb61:	c3                   	ret

000000000000bb62 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    bb62:	55                   	push   %rbp
    bb63:	48 89 e5             	mov    %rsp,%rbp
    bb66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb6e:	90                   	nop
    bb6f:	5d                   	pop    %rbp
    bb70:	c3                   	ret

000000000000bb71 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb71:	55                   	push   %rbp
    bb72:	48 89 e5             	mov    %rsp,%rbp
    bb75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb7d:	5d                   	pop    %rbp
    bb7e:	c3                   	ret

000000000000bb7f <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb7f:	55                   	push   %rbp
    bb80:	48 89 e5             	mov    %rsp,%rbp
    bb83:	53                   	push   %rbx
    bb84:	48 83 ec 18          	sub    $0x18,%rsp
    bb88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb94:	48 89 c6             	mov    %rax,%rsi
    bb97:	bf 18 00 00 00       	mov    $0x18,%edi
    bb9c:	e8 fe 9f ff ff       	call   5b9f <_ZnwmPv>
    bba1:	48 89 c3             	mov    %rax,%rbx
    bba4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bba8:	48 89 c7             	mov    %rax,%rdi
    bbab:	e8 48 e8 ff ff       	call   a3f8 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    bbb0:	48 89 c1             	mov    %rax,%rcx
    bbb3:	48 8b 01             	mov    (%rcx),%rax
    bbb6:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    bbba:	48 89 03             	mov    %rax,(%rbx)
    bbbd:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    bbc1:	48 8b 41 10          	mov    0x10(%rcx),%rax
    bbc5:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    bbc9:	90                   	nop
    bbca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bbce:	c9                   	leave
    bbcf:	c3                   	ret

000000000000bbd0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bbd0:	55                   	push   %rbp
    bbd1:	48 89 e5             	mov    %rsp,%rbp
    bbd4:	48 83 ec 20          	sub    $0x20,%rsp
    bbd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbe0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bbe4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbe8:	48 89 d0             	mov    %rdx,%rax
    bbeb:	48 c1 e0 03          	shl    $0x3,%rax
    bbef:	48 29 d0             	sub    %rdx,%rax
    bbf2:	48 c1 e0 02          	shl    $0x2,%rax
    bbf6:	48 89 c2             	mov    %rax,%rdx
    bbf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbfd:	48 89 d6             	mov    %rdx,%rsi
    bc00:	48 89 c7             	mov    %rax,%rdi
    bc03:	e8 78 88 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    bc08:	c9                   	leave
    bc09:	c3                   	ret

000000000000bc0a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bc0a:	55                   	push   %rbp
    bc0b:	48 89 e5             	mov    %rsp,%rbp
    bc0e:	48 83 ec 10          	sub    $0x10,%rsp
    bc12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bc16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc1a:	48 89 c7             	mov    %rax,%rdi
    bc1d:	e8 52 06 00 00       	call   c274 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    bc22:	c9                   	leave
    bc23:	c3                   	ret

000000000000bc24 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bc24:	55                   	push   %rbp
    bc25:	48 89 e5             	mov    %rsp,%rbp
    bc28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bc2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc30:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bc37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bc42:	00 
    bc43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc47:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bc4e:	00 
	{ }
    bc4f:	90                   	nop
    bc50:	5d                   	pop    %rbp
    bc51:	c3                   	ret

000000000000bc52 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bc52:	55                   	push   %rbp
    bc53:	48 89 e5             	mov    %rsp,%rbp
    bc56:	48 83 ec 10          	sub    $0x10,%rsp
    bc5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bc62:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bc67:	74 15                	je     bc7e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    bc69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc71:	48 89 d6             	mov    %rdx,%rsi
    bc74:	48 89 c7             	mov    %rax,%rdi
    bc77:	e8 12 06 00 00       	call   c28e <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    bc7c:	eb 05                	jmp    bc83 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    bc7e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bc83:	c9                   	leave
    bc84:	c3                   	ret

000000000000bc85 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    bc85:	55                   	push   %rbp
    bc86:	48 89 e5             	mov    %rsp,%rbp
    bc89:	48 83 ec 20          	sub    $0x20,%rsp
    bc8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bc95:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    bc99:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bc9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bca1:	48 89 d6             	mov    %rdx,%rsi
    bca4:	48 89 c7             	mov    %rax,%rdi
    bca7:	e8 0c 06 00 00       	call   c2b8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    bcac:	c9                   	leave
    bcad:	c3                   	ret

000000000000bcae <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    bcae:	55                   	push   %rbp
    bcaf:	48 89 e5             	mov    %rsp,%rbp
    bcb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcba:	90                   	nop
    bcbb:	5d                   	pop    %rbp
    bcbc:	c3                   	ret
    bcbd:	90                   	nop

000000000000bcbe <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bcbe:	55                   	push   %rbp
    bcbf:	48 89 e5             	mov    %rsp,%rbp
    bcc2:	48 83 ec 20          	sub    $0x20,%rsp
    bcc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bcd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcd6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bcdd:	00 
    bcde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bce2:	48 89 d6             	mov    %rdx,%rsi
    bce5:	48 89 c7             	mov    %rax,%rdi
    bce8:	e8 93 87 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    bced:	c9                   	leave
    bcee:	c3                   	ret

000000000000bcef <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bcef:	55                   	push   %rbp
    bcf0:	48 89 e5             	mov    %rsp,%rbp
    bcf3:	48 83 ec 10          	sub    $0x10,%rsp
    bcf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bcfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcff:	48 89 c7             	mov    %rax,%rdi
    bd02:	e8 0f 06 00 00       	call   c316 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    bd07:	c9                   	leave
    bd08:	c3                   	ret
    bd09:	90                   	nop

000000000000bd0a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bd0a:	55                   	push   %rbp
    bd0b:	48 89 e5             	mov    %rsp,%rbp
    bd0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bd12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd16:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bd1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd21:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bd28:	00 
    bd29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd2d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bd34:	00 
	{ }
    bd35:	90                   	nop
    bd36:	5d                   	pop    %rbp
    bd37:	c3                   	ret

000000000000bd38 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bd38:	55                   	push   %rbp
    bd39:	48 89 e5             	mov    %rsp,%rbp
    bd3c:	48 83 ec 10          	sub    $0x10,%rsp
    bd40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bd48:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bd4d:	74 15                	je     bd64 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    bd4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd57:	48 89 d6             	mov    %rdx,%rsi
    bd5a:	48 89 c7             	mov    %rax,%rdi
    bd5d:	e8 ce 05 00 00       	call   c330 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    bd62:	eb 05                	jmp    bd69 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    bd64:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bd69:	c9                   	leave
    bd6a:	c3                   	ret

000000000000bd6b <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    bd6b:	55                   	push   %rbp
    bd6c:	48 89 e5             	mov    %rsp,%rbp
    bd6f:	48 83 ec 20          	sub    $0x20,%rsp
    bd73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd77:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    bd7b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    bd7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bd83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd87:	48 89 d6             	mov    %rdx,%rsi
    bd8a:	48 89 c7             	mov    %rax,%rdi
    bd8d:	e8 c8 05 00 00       	call   c35a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    bd92:	c9                   	leave
    bd93:	c3                   	ret

000000000000bd94 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    bd94:	55                   	push   %rbp
    bd95:	48 89 e5             	mov    %rsp,%rbp
    bd98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bda0:	90                   	nop
    bda1:	5d                   	pop    %rbp
    bda2:	c3                   	ret
    bda3:	90                   	nop

000000000000bda4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bda4:	55                   	push   %rbp
    bda5:	48 89 e5             	mov    %rsp,%rbp
    bda8:	48 83 ec 20          	sub    $0x20,%rsp
    bdac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bdb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdbc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    bdc3:	00 
    bdc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bdc8:	48 89 d6             	mov    %rdx,%rsi
    bdcb:	48 89 c7             	mov    %rax,%rdi
    bdce:	e8 ad 86 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    bdd3:	c9                   	leave
    bdd4:	c3                   	ret

000000000000bdd5 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bdd5:	55                   	push   %rbp
    bdd6:	48 89 e5             	mov    %rsp,%rbp
    bdd9:	48 83 ec 10          	sub    $0x10,%rsp
    bddd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    bde1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bde5:	48 89 c7             	mov    %rax,%rdi
    bde8:	e8 cb 05 00 00       	call   c3b8 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    bded:	c9                   	leave
    bdee:	c3                   	ret
    bdef:	90                   	nop

000000000000bdf0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bdf0:	55                   	push   %rbp
    bdf1:	48 89 e5             	mov    %rsp,%rbp
    bdf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bdf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdfc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    be03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be07:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    be0e:	00 
    be0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be13:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    be1a:	00 
	{ }
    be1b:	90                   	nop
    be1c:	5d                   	pop    %rbp
    be1d:	c3                   	ret

000000000000be1e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    be1e:	55                   	push   %rbp
    be1f:	48 89 e5             	mov    %rsp,%rbp
    be22:	48 83 ec 10          	sub    $0x10,%rsp
    be26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    be2e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    be33:	74 15                	je     be4a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    be35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be3d:	48 89 d6             	mov    %rdx,%rsi
    be40:	48 89 c7             	mov    %rax,%rdi
    be43:	e8 8a 05 00 00       	call   c3d2 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    be48:	eb 05                	jmp    be4f <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    be4a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    be4f:	c9                   	leave
    be50:	c3                   	ret

000000000000be51 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    be51:	55                   	push   %rbp
    be52:	48 89 e5             	mov    %rsp,%rbp
    be55:	48 83 ec 20          	sub    $0x20,%rsp
    be59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    be61:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    be65:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    be69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be6d:	48 89 d6             	mov    %rdx,%rsi
    be70:	48 89 c7             	mov    %rax,%rdi
    be73:	e8 84 05 00 00       	call   c3fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    be78:	c9                   	leave
    be79:	c3                   	ret

000000000000be7a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    be7a:	55                   	push   %rbp
    be7b:	48 89 e5             	mov    %rsp,%rbp
    be7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be86:	90                   	nop
    be87:	5d                   	pop    %rbp
    be88:	c3                   	ret
    be89:	90                   	nop

000000000000be8a <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    be8a:	55                   	push   %rbp
    be8b:	48 89 e5             	mov    %rsp,%rbp
    be8e:	48 83 ec 20          	sub    $0x20,%rsp
    be92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    be9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bea2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bea9:	00 
    beaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    beae:	48 89 d6             	mov    %rdx,%rsi
    beb1:	48 89 c7             	mov    %rax,%rdi
    beb4:	e8 c7 85 ff ff       	call   4480 <_ZdlPvm@plt>
      }
    beb9:	c9                   	leave
    beba:	c3                   	ret
    bebb:	90                   	nop

000000000000bebc <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    bebc:	55                   	push   %rbp
    bebd:	48 89 e5             	mov    %rsp,%rbp
    bec0:	48 83 ec 10          	sub    $0x10,%rsp
    bec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    bec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    becc:	48 89 c7             	mov    %rax,%rdi
    becf:	e8 86 05 00 00       	call   c45a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    bed4:	c9                   	leave
    bed5:	c3                   	ret

000000000000bed6 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    bed6:	55                   	push   %rbp
    bed7:	48 89 e5             	mov    %rsp,%rbp
    beda:	48 83 ec 10          	sub    $0x10,%rsp
    bede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bee2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    bee6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    beea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beee:	ba 00 00 00 00       	mov    $0x0,%edx
    bef3:	48 89 ce             	mov    %rcx,%rsi
    bef6:	48 89 c7             	mov    %rax,%rdi
    bef9:	e8 70 05 00 00       	call   c46e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    befe:	c9                   	leave
    beff:	c3                   	ret

000000000000bf00 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    bf00:	55                   	push   %rbp
    bf01:	48 89 e5             	mov    %rsp,%rbp
    bf04:	48 83 ec 20          	sub    $0x20,%rsp
    bf08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    bf10:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    bf15:	74 43                	je     bf5a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    bf17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf1b:	48 89 c7             	mov    %rax,%rdi
    bf1e:	e8 b6 05 00 00       	call   c4d9 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    bf23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    bf27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf2b:	48 89 c7             	mov    %rax,%rdi
    bf2e:	e8 b4 05 00 00       	call   c4e7 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    bf33:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    bf3a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    bf3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf3f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    bf43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bf47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf4b:	48 89 ce             	mov    %rcx,%rsi
    bf4e:	48 89 c7             	mov    %rax,%rdi
    bf51:	e8 eb 05 00 00       	call   c541 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    bf56:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    bf5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    bf5e:	c9                   	leave
    bf5f:	c3                   	ret

000000000000bf60 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    bf60:	55                   	push   %rbp
    bf61:	48 89 e5             	mov    %rsp,%rbp
    bf64:	48 83 ec 10          	sub    $0x10,%rsp
    bf68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    bf6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf70:	48 89 c7             	mov    %rax,%rdi
    bf73:	e8 0e 06 00 00       	call   c586 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    bf78:	c9                   	leave
    bf79:	c3                   	ret

000000000000bf7a <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    bf7a:	55                   	push   %rbp
    bf7b:	48 89 e5             	mov    %rsp,%rbp
    bf7e:	48 83 ec 10          	sub    $0x10,%rsp
    bf82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    bf8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bf8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf92:	ba 00 00 00 00       	mov    $0x0,%edx
    bf97:	48 89 ce             	mov    %rcx,%rsi
    bf9a:	48 89 c7             	mov    %rax,%rdi
    bf9d:	e8 f8 05 00 00       	call   c59a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    bfa2:	c9                   	leave
    bfa3:	c3                   	ret

000000000000bfa4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    bfa4:	55                   	push   %rbp
    bfa5:	48 89 e5             	mov    %rsp,%rbp
    bfa8:	48 83 ec 20          	sub    $0x20,%rsp
    bfac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bfb0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    bfb4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    bfb9:	74 43                	je     bffe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    bfbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfbf:	48 89 c7             	mov    %rax,%rdi
    bfc2:	e8 3e 06 00 00       	call   c605 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    bfc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    bfcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfcf:	48 89 c7             	mov    %rax,%rdi
    bfd2:	e8 3c 06 00 00       	call   c613 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    bfd7:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    bfde:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    bfdf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bfe3:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    bfe7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bfeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfef:	48 89 ce             	mov    %rcx,%rsi
    bff2:	48 89 c7             	mov    %rax,%rdi
    bff5:	e8 73 06 00 00       	call   c66d <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    bffa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    bffe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c002:	c9                   	leave
    c003:	c3                   	ret

000000000000c004 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c004:	55                   	push   %rbp
    c005:	48 89 e5             	mov    %rsp,%rbp
    c008:	48 83 ec 10          	sub    $0x10,%rsp
    c00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c014:	48 89 c7             	mov    %rax,%rdi
    c017:	e8 96 06 00 00       	call   c6b2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    c01c:	c9                   	leave
    c01d:	c3                   	ret

000000000000c01e <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    c01e:	55                   	push   %rbp
    c01f:	48 89 e5             	mov    %rsp,%rbp
    c022:	48 83 ec 10          	sub    $0x10,%rsp
    c026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c02a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c02e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c036:	ba 00 00 00 00       	mov    $0x0,%edx
    c03b:	48 89 ce             	mov    %rcx,%rsi
    c03e:	48 89 c7             	mov    %rax,%rdi
    c041:	e8 80 06 00 00       	call   c6c6 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    c046:	c9                   	leave
    c047:	c3                   	ret

000000000000c048 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c048:	55                   	push   %rbp
    c049:	48 89 e5             	mov    %rsp,%rbp
    c04c:	48 83 ec 20          	sub    $0x20,%rsp
    c050:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c054:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c058:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c05d:	74 40                	je     c09f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    c05f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c063:	48 89 c7             	mov    %rax,%rdi
    c066:	e8 bc 06 00 00       	call   c727 <_ZSt11__addressofIPKcEPT_RS2_>
    c06b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c06f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c073:	48 89 c7             	mov    %rax,%rdi
    c076:	e8 ba 06 00 00       	call   c735 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    c07b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c080:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c084:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c088:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c08c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c090:	48 89 ce             	mov    %rcx,%rsi
    c093:	48 89 c7             	mov    %rax,%rdi
    c096:	e8 c1 06 00 00       	call   c75c <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    c09b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c09f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c0a3:	c9                   	leave
    c0a4:	c3                   	ret
    c0a5:	90                   	nop

000000000000c0a6 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c0a6:	55                   	push   %rbp
    c0a7:	48 89 e5             	mov    %rsp,%rbp
    c0aa:	48 83 ec 10          	sub    $0x10,%rsp
    c0ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c0b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0b6:	48 89 c7             	mov    %rax,%rdi
    c0b9:	e8 e2 06 00 00       	call   c7a0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    c0be:	c9                   	leave
    c0bf:	c3                   	ret

000000000000c0c0 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    c0c0:	55                   	push   %rbp
    c0c1:	48 89 e5             	mov    %rsp,%rbp
    c0c4:	48 83 ec 10          	sub    $0x10,%rsp
    c0c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c0d0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c0d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0d8:	ba 00 00 00 00       	mov    $0x0,%edx
    c0dd:	48 89 ce             	mov    %rcx,%rsi
    c0e0:	48 89 c7             	mov    %rax,%rdi
    c0e3:	e8 cc 06 00 00       	call   c7b4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    c0e8:	c9                   	leave
    c0e9:	c3                   	ret

000000000000c0ea <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c0ea:	55                   	push   %rbp
    c0eb:	48 89 e5             	mov    %rsp,%rbp
    c0ee:	48 83 ec 20          	sub    $0x20,%rsp
    c0f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c0f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c0fa:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c0ff:	74 40                	je     c141 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    c101:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c105:	48 89 c7             	mov    %rax,%rdi
    c108:	e8 08 07 00 00       	call   c815 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    c10d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c115:	48 89 c7             	mov    %rax,%rdi
    c118:	e8 06 07 00 00       	call   c823 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    c11d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c122:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c126:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c12a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c12e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c132:	48 89 ce             	mov    %rcx,%rsi
    c135:	48 89 c7             	mov    %rax,%rdi
    c138:	e8 0d 07 00 00       	call   c84a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    c13d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c145:	c9                   	leave
    c146:	c3                   	ret
    c147:	90                   	nop

000000000000c148 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c148:	55                   	push   %rbp
    c149:	48 89 e5             	mov    %rsp,%rbp
    c14c:	48 83 ec 10          	sub    $0x10,%rsp
    c150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c158:	48 89 c7             	mov    %rax,%rdi
    c15b:	e8 2e 07 00 00       	call   c88e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    c160:	c9                   	leave
    c161:	c3                   	ret

000000000000c162 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c162:	55                   	push   %rbp
    c163:	48 89 e5             	mov    %rsp,%rbp
    c166:	48 83 ec 10          	sub    $0x10,%rsp
    c16a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c16e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c172:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c17a:	ba 00 00 00 00       	mov    $0x0,%edx
    c17f:	48 89 ce             	mov    %rcx,%rsi
    c182:	48 89 c7             	mov    %rax,%rdi
    c185:	e8 18 07 00 00       	call   c8a2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    c18a:	c9                   	leave
    c18b:	c3                   	ret

000000000000c18c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c18c:	55                   	push   %rbp
    c18d:	48 89 e5             	mov    %rsp,%rbp
    c190:	48 83 ec 20          	sub    $0x20,%rsp
    c194:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c198:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c19c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c1a1:	74 40                	je     c1e3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    c1a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1a7:	48 89 c7             	mov    %rax,%rdi
    c1aa:	e8 c2 f9 ff ff       	call   bb71 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    c1af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c1b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1b7:	48 89 c7             	mov    %rax,%rdi
    c1ba:	e8 4d 07 00 00       	call   c90c <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    c1bf:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c1c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c1c8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c1cc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c1d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1d4:	48 89 ce             	mov    %rcx,%rsi
    c1d7:	48 89 c7             	mov    %rax,%rdi
    c1da:	e8 76 07 00 00       	call   c955 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    c1df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c1e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c1e7:	c9                   	leave
    c1e8:	c3                   	ret
    c1e9:	90                   	nop

000000000000c1ea <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c1ea:	55                   	push   %rbp
    c1eb:	48 89 e5             	mov    %rsp,%rbp
    c1ee:	48 83 ec 10          	sub    $0x10,%rsp
    c1f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1fa:	48 89 c7             	mov    %rax,%rdi
    c1fd:	e8 98 07 00 00       	call   c99a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    c202:	c9                   	leave
    c203:	c3                   	ret

000000000000c204 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    c204:	55                   	push   %rbp
    c205:	48 89 e5             	mov    %rsp,%rbp
    c208:	48 83 ec 10          	sub    $0x10,%rsp
    c20c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c210:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c214:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c21c:	ba 00 00 00 00       	mov    $0x0,%edx
    c221:	48 89 ce             	mov    %rcx,%rsi
    c224:	48 89 c7             	mov    %rax,%rdi
    c227:	e8 82 07 00 00       	call   c9ae <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    c22c:	c9                   	leave
    c22d:	c3                   	ret

000000000000c22e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c22e:	55                   	push   %rbp
    c22f:	48 89 e5             	mov    %rsp,%rbp
    c232:	48 83 ec 20          	sub    $0x20,%rsp
    c236:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c23a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    c23e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c242:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    c246:	eb 1e                	jmp    c266 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    c248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c24c:	48 89 c7             	mov    %rax,%rdi
    c24f:	e8 c5 07 00 00       	call   ca19 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    c254:	48 89 c7             	mov    %rax,%rdi
    c257:	e8 cb 07 00 00       	call   ca27 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    c25c:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    c261:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    c266:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c26b:	75 db                	jne    c248 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    c26d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    c271:	c9                   	leave
    c272:	c3                   	ret
    c273:	90                   	nop

000000000000c274 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c274:	55                   	push   %rbp
    c275:	48 89 e5             	mov    %rsp,%rbp
    c278:	48 83 ec 10          	sub    $0x10,%rsp
    c27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c284:	48 89 c7             	mov    %rax,%rdi
    c287:	e8 c4 07 00 00       	call   ca50 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    c28c:	c9                   	leave
    c28d:	c3                   	ret

000000000000c28e <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c28e:	55                   	push   %rbp
    c28f:	48 89 e5             	mov    %rsp,%rbp
    c292:	48 83 ec 10          	sub    $0x10,%rsp
    c296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c29a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c29e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a6:	ba 00 00 00 00       	mov    $0x0,%edx
    c2ab:	48 89 ce             	mov    %rcx,%rsi
    c2ae:	48 89 c7             	mov    %rax,%rdi
    c2b1:	e8 ae 07 00 00       	call   ca64 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    c2b6:	c9                   	leave
    c2b7:	c3                   	ret

000000000000c2b8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c2b8:	55                   	push   %rbp
    c2b9:	48 89 e5             	mov    %rsp,%rbp
    c2bc:	48 83 ec 20          	sub    $0x20,%rsp
    c2c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c2c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c2c8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c2cd:	74 40                	je     c30f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    c2cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2d3:	48 89 c7             	mov    %rax,%rdi
    c2d6:	e8 ea 07 00 00       	call   cac5 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    c2db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c2df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2e3:	48 89 c7             	mov    %rax,%rdi
    c2e6:	e8 e8 07 00 00       	call   cad3 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    c2eb:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c2f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c2f4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c2f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c2fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c300:	48 89 ce             	mov    %rcx,%rsi
    c303:	48 89 c7             	mov    %rax,%rdi
    c306:	e8 f5 07 00 00       	call   cb00 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    c30b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c30f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c313:	c9                   	leave
    c314:	c3                   	ret
    c315:	90                   	nop

000000000000c316 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c316:	55                   	push   %rbp
    c317:	48 89 e5             	mov    %rsp,%rbp
    c31a:	48 83 ec 10          	sub    $0x10,%rsp
    c31e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c326:	48 89 c7             	mov    %rax,%rdi
    c329:	e8 16 08 00 00       	call   cb44 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    c32e:	c9                   	leave
    c32f:	c3                   	ret

000000000000c330 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    c330:	55                   	push   %rbp
    c331:	48 89 e5             	mov    %rsp,%rbp
    c334:	48 83 ec 10          	sub    $0x10,%rsp
    c338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c33c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c340:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c344:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c348:	ba 00 00 00 00       	mov    $0x0,%edx
    c34d:	48 89 ce             	mov    %rcx,%rsi
    c350:	48 89 c7             	mov    %rax,%rdi
    c353:	e8 00 08 00 00       	call   cb58 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    c358:	c9                   	leave
    c359:	c3                   	ret

000000000000c35a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c35a:	55                   	push   %rbp
    c35b:	48 89 e5             	mov    %rsp,%rbp
    c35e:	48 83 ec 20          	sub    $0x20,%rsp
    c362:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c366:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c36a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c36f:	74 40                	je     c3b1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    c371:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c375:	48 89 c7             	mov    %rax,%rdi
    c378:	e8 3c 08 00 00       	call   cbb9 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    c37d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c381:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c385:	48 89 c7             	mov    %rax,%rdi
    c388:	e8 3a 08 00 00       	call   cbc7 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    c38d:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c392:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c396:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c39a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c39e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a2:	48 89 ce             	mov    %rcx,%rsi
    c3a5:	48 89 c7             	mov    %rax,%rdi
    c3a8:	e8 40 08 00 00       	call   cbed <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    c3ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c3b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c3b5:	c9                   	leave
    c3b6:	c3                   	ret
    c3b7:	90                   	nop

000000000000c3b8 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    c3b8:	55                   	push   %rbp
    c3b9:	48 89 e5             	mov    %rsp,%rbp
    c3bc:	48 83 ec 10          	sub    $0x10,%rsp
    c3c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    c3c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3c8:	48 89 c7             	mov    %rax,%rdi
    c3cb:	e8 62 08 00 00       	call   cc32 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    c3d0:	c9                   	leave
    c3d1:	c3                   	ret

000000000000c3d2 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    c3d2:	55                   	push   %rbp
    c3d3:	48 89 e5             	mov    %rsp,%rbp
    c3d6:	48 83 ec 10          	sub    $0x10,%rsp
    c3da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c3e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ea:	ba 00 00 00 00       	mov    $0x0,%edx
    c3ef:	48 89 ce             	mov    %rcx,%rsi
    c3f2:	48 89 c7             	mov    %rax,%rdi
    c3f5:	e8 4c 08 00 00       	call   cc46 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    c3fa:	c9                   	leave
    c3fb:	c3                   	ret

000000000000c3fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    c3fc:	55                   	push   %rbp
    c3fd:	48 89 e5             	mov    %rsp,%rbp
    c400:	48 83 ec 20          	sub    $0x20,%rsp
    c404:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c408:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    c40c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c411:	74 40                	je     c453 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    c413:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c417:	48 89 c7             	mov    %rax,%rdi
    c41a:	e8 88 08 00 00       	call   cca7 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    c41f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    c423:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c427:	48 89 c7             	mov    %rax,%rdi
    c42a:	e8 86 08 00 00       	call   ccb5 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    c42f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    c434:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c438:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    c43c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c444:	48 89 ce             	mov    %rcx,%rsi
    c447:	48 89 c7             	mov    %rax,%rdi
    c44a:	e8 8d 08 00 00       	call   ccdc <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    c44f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    c453:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    c457:	c9                   	leave
    c458:	c3                   	ret
    c459:	90                   	nop

000000000000c45a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c45a:	55                   	push   %rbp
    c45b:	48 89 e5             	mov    %rsp,%rbp
    c45e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c462:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    c469:	03 3f 00 
      }
    c46c:	5d                   	pop    %rbp
    c46d:	c3                   	ret

000000000000c46e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c46e:	55                   	push   %rbp
    c46f:	48 89 e5             	mov    %rsp,%rbp
    c472:	48 83 ec 20          	sub    $0x20,%rsp
    c476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c47a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c47e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c486:	48 89 c7             	mov    %rax,%rdi
    c489:	e8 cc ff ff ff       	call   c45a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    c48e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c492:	0f 92 c0             	setb   %al
    c495:	0f b6 c0             	movzbl %al,%eax
    c498:	48 85 c0             	test   %rax,%rax
    c49b:	0f 95 c0             	setne  %al
    c49e:	84 c0                	test   %al,%al
    c4a0:	74 1a                	je     c4bc <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c4a2:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    c4a9:	07 7e 00 
    c4ac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4b0:	73 05                	jae    c4b7 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c4b2:	e8 39 7e ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c4b7:	e8 54 7c ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c4bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c4c0:	48 89 d0             	mov    %rdx,%rax
    c4c3:	48 c1 e0 06          	shl    $0x6,%rax
    c4c7:	48 01 d0             	add    %rdx,%rax
    c4ca:	48 c1 e0 03          	shl    $0x3,%rax
    c4ce:	48 89 c7             	mov    %rax,%rdi
    c4d1:	e8 8a 7f ff ff       	call   4460 <_Znwm@plt>
    c4d6:	90                   	nop
      }
    c4d7:	c9                   	leave
    c4d8:	c3                   	ret

000000000000c4d9 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c4d9:	55                   	push   %rbp
    c4da:	48 89 e5             	mov    %rsp,%rbp
    c4dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e5:	5d                   	pop    %rbp
    c4e6:	c3                   	ret

000000000000c4e7 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c4e7:	55                   	push   %rbp
    c4e8:	48 89 e5             	mov    %rsp,%rbp
    c4eb:	48 83 ec 10          	sub    $0x10,%rsp
    c4ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c4f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4f7:	48 89 c6             	mov    %rax,%rsi
    c4fa:	bf 08 02 00 00       	mov    $0x208,%edi
    c4ff:	e8 9b 96 ff ff       	call   5b9f <_ZnwmPv>
    c504:	b9 08 02 00 00       	mov    $0x208,%ecx
    c509:	be 00 00 00 00       	mov    $0x0,%esi
    c50e:	48 89 30             	mov    %rsi,(%rax)
    c511:	89 ca                	mov    %ecx,%edx
    c513:	48 01 c2             	add    %rax,%rdx
    c516:	48 83 c2 08          	add    $0x8,%rdx
    c51a:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    c51e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c522:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    c526:	48 29 d0             	sub    %rdx,%rax
    c529:	01 c1                	add    %eax,%ecx
    c52b:	83 e1 f8             	and    $0xfffffff8,%ecx
    c52e:	89 c8                	mov    %ecx,%eax
    c530:	c1 e8 03             	shr    $0x3,%eax
    c533:	89 c1                	mov    %eax,%ecx
    c535:	48 89 d7             	mov    %rdx,%rdi
    c538:	48 89 f0             	mov    %rsi,%rax
    c53b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    c53e:	90                   	nop
    c53f:	c9                   	leave
    c540:	c3                   	ret

000000000000c541 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c541:	55                   	push   %rbp
    c542:	48 89 e5             	mov    %rsp,%rbp
    c545:	48 83 ec 20          	sub    $0x20,%rsp
    c549:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c54d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c551:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c555:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c559:	48 89 c7             	mov    %rax,%rdi
    c55c:	e8 bf 07 00 00       	call   cd20 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c561:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c565:	48 89 c7             	mov    %rax,%rdi
    c568:	e8 44 96 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    c56d:	48 89 c1             	mov    %rax,%rcx
    c570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c574:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c578:	48 89 ce             	mov    %rcx,%rsi
    c57b:	48 89 c7             	mov    %rax,%rdi
    c57e:	e8 a8 07 00 00       	call   cd2b <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c583:	c9                   	leave
    c584:	c3                   	ret
    c585:	90                   	nop

000000000000c586 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c586:	55                   	push   %rbp
    c587:	48 89 e5             	mov    %rsp,%rbp
    c58a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c58e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    c595:	07 7e 00 
      }
    c598:	5d                   	pop    %rbp
    c599:	c3                   	ret

000000000000c59a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c59a:	55                   	push   %rbp
    c59b:	48 89 e5             	mov    %rsp,%rbp
    c59e:	48 83 ec 20          	sub    $0x20,%rsp
    c5a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b2:	48 89 c7             	mov    %rax,%rdi
    c5b5:	e8 cc ff ff ff       	call   c586 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    c5ba:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5be:	0f 92 c0             	setb   %al
    c5c1:	0f b6 c0             	movzbl %al,%eax
    c5c4:	48 85 c0             	test   %rax,%rax
    c5c7:	0f 95 c0             	setne  %al
    c5ca:	84 c0                	test   %al,%al
    c5cc:	74 1a                	je     c5e8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c5ce:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    c5d5:	0f fc 00 
    c5d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5dc:	73 05                	jae    c5e3 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c5de:	e8 0d 7d ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c5e3:	e8 28 7b ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c5e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c5ec:	48 89 d0             	mov    %rdx,%rax
    c5ef:	48 c1 e0 06          	shl    $0x6,%rax
    c5f3:	48 01 d0             	add    %rdx,%rax
    c5f6:	48 c1 e0 02          	shl    $0x2,%rax
    c5fa:	48 89 c7             	mov    %rax,%rdi
    c5fd:	e8 5e 7e ff ff       	call   4460 <_Znwm@plt>
    c602:	90                   	nop
      }
    c603:	c9                   	leave
    c604:	c3                   	ret

000000000000c605 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c605:	55                   	push   %rbp
    c606:	48 89 e5             	mov    %rsp,%rbp
    c609:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c60d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c611:	5d                   	pop    %rbp
    c612:	c3                   	ret

000000000000c613 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c613:	55                   	push   %rbp
    c614:	48 89 e5             	mov    %rsp,%rbp
    c617:	48 83 ec 10          	sub    $0x10,%rsp
    c61b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c61f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c623:	48 89 c6             	mov    %rax,%rsi
    c626:	bf 04 01 00 00       	mov    $0x104,%edi
    c62b:	e8 6f 95 ff ff       	call   5b9f <_ZnwmPv>
    c630:	b9 04 01 00 00       	mov    $0x104,%ecx
    c635:	be 00 00 00 00       	mov    $0x0,%esi
    c63a:	48 89 30             	mov    %rsi,(%rax)
    c63d:	89 ca                	mov    %ecx,%edx
    c63f:	48 01 c2             	add    %rax,%rdx
    c642:	48 83 c2 08          	add    $0x8,%rdx
    c646:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    c64a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c64e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    c652:	48 29 d0             	sub    %rdx,%rax
    c655:	01 c1                	add    %eax,%ecx
    c657:	83 e1 f8             	and    $0xfffffff8,%ecx
    c65a:	89 c8                	mov    %ecx,%eax
    c65c:	c1 e8 03             	shr    $0x3,%eax
    c65f:	89 c1                	mov    %eax,%ecx
    c661:	48 89 d7             	mov    %rdx,%rdi
    c664:	48 89 f0             	mov    %rsi,%rax
    c667:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    c66a:	90                   	nop
    c66b:	c9                   	leave
    c66c:	c3                   	ret

000000000000c66d <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c66d:	55                   	push   %rbp
    c66e:	48 89 e5             	mov    %rsp,%rbp
    c671:	48 83 ec 20          	sub    $0x20,%rsp
    c675:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c679:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c67d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c681:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c685:	48 89 c7             	mov    %rax,%rdi
    c688:	e8 0d 07 00 00       	call   cd9a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c68d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c691:	48 89 c7             	mov    %rax,%rdi
    c694:	e8 18 95 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    c699:	48 89 c1             	mov    %rax,%rcx
    c69c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6a4:	48 89 ce             	mov    %rcx,%rsi
    c6a7:	48 89 c7             	mov    %rax,%rdi
    c6aa:	e8 f6 06 00 00       	call   cda5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c6af:	c9                   	leave
    c6b0:	c3                   	ret
    c6b1:	90                   	nop

000000000000c6b2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c6b2:	55                   	push   %rbp
    c6b3:	48 89 e5             	mov    %rsp,%rbp
    c6b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c6ba:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c6c1:	ff ff 0f 
      }
    c6c4:	5d                   	pop    %rbp
    c6c5:	c3                   	ret

000000000000c6c6 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c6c6:	55                   	push   %rbp
    c6c7:	48 89 e5             	mov    %rsp,%rbp
    c6ca:	48 83 ec 20          	sub    $0x20,%rsp
    c6ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c6da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6de:	48 89 c7             	mov    %rax,%rdi
    c6e1:	e8 cc ff ff ff       	call   c6b2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    c6e6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c6ea:	0f 92 c0             	setb   %al
    c6ed:	0f b6 c0             	movzbl %al,%eax
    c6f0:	48 85 c0             	test   %rax,%rax
    c6f3:	0f 95 c0             	setne  %al
    c6f6:	84 c0                	test   %al,%al
    c6f8:	74 1a                	je     c714 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c6fa:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c701:	ff ff 1f 
    c704:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c708:	73 05                	jae    c70f <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c70a:	e8 e1 7b ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c70f:	e8 fc 79 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c714:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c718:	48 c1 e0 03          	shl    $0x3,%rax
    c71c:	48 89 c7             	mov    %rax,%rdi
    c71f:	e8 3c 7d ff ff       	call   4460 <_Znwm@plt>
    c724:	90                   	nop
      }
    c725:	c9                   	leave
    c726:	c3                   	ret

000000000000c727 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c727:	55                   	push   %rbp
    c728:	48 89 e5             	mov    %rsp,%rbp
    c72b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c72f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c733:	5d                   	pop    %rbp
    c734:	c3                   	ret

000000000000c735 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c735:	55                   	push   %rbp
    c736:	48 89 e5             	mov    %rsp,%rbp
    c739:	48 83 ec 10          	sub    $0x10,%rsp
    c73d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c745:	48 89 c6             	mov    %rax,%rsi
    c748:	bf 08 00 00 00       	mov    $0x8,%edi
    c74d:	e8 4d 94 ff ff       	call   5b9f <_ZnwmPv>
    c752:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    c759:	90                   	nop
    c75a:	c9                   	leave
    c75b:	c3                   	ret

000000000000c75c <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c75c:	55                   	push   %rbp
    c75d:	48 89 e5             	mov    %rsp,%rbp
    c760:	48 83 ec 20          	sub    $0x20,%rsp
    c764:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c768:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c76c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c770:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c774:	48 89 c7             	mov    %rax,%rdi
    c777:	e8 98 06 00 00       	call   ce14 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c77c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c780:	48 89 c7             	mov    %rax,%rdi
    c783:	e8 29 94 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    c788:	48 89 c1             	mov    %rax,%rcx
    c78b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c78f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c793:	48 89 ce             	mov    %rcx,%rsi
    c796:	48 89 c7             	mov    %rax,%rdi
    c799:	e8 81 06 00 00       	call   ce1f <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    c79e:	c9                   	leave
    c79f:	c3                   	ret

000000000000c7a0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c7a0:	55                   	push   %rbp
    c7a1:	48 89 e5             	mov    %rsp,%rbp
    c7a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c7a8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c7af:	ff ff 0f 
      }
    c7b2:	5d                   	pop    %rbp
    c7b3:	c3                   	ret

000000000000c7b4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c7b4:	55                   	push   %rbp
    c7b5:	48 89 e5             	mov    %rsp,%rbp
    c7b8:	48 83 ec 20          	sub    $0x20,%rsp
    c7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c7c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7cc:	48 89 c7             	mov    %rax,%rdi
    c7cf:	e8 cc ff ff ff       	call   c7a0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    c7d4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c7d8:	0f 92 c0             	setb   %al
    c7db:	0f b6 c0             	movzbl %al,%eax
    c7de:	48 85 c0             	test   %rax,%rax
    c7e1:	0f 95 c0             	setne  %al
    c7e4:	84 c0                	test   %al,%al
    c7e6:	74 1a                	je     c802 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c7e8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c7ef:	ff ff 1f 
    c7f2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c7f6:	73 05                	jae    c7fd <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c7f8:	e8 f3 7a ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c7fd:	e8 0e 79 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c802:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c806:	48 c1 e0 03          	shl    $0x3,%rax
    c80a:	48 89 c7             	mov    %rax,%rdi
    c80d:	e8 4e 7c ff ff       	call   4460 <_Znwm@plt>
    c812:	90                   	nop
      }
    c813:	c9                   	leave
    c814:	c3                   	ret

000000000000c815 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c815:	55                   	push   %rbp
    c816:	48 89 e5             	mov    %rsp,%rbp
    c819:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c81d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c821:	5d                   	pop    %rbp
    c822:	c3                   	ret

000000000000c823 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c823:	55                   	push   %rbp
    c824:	48 89 e5             	mov    %rsp,%rbp
    c827:	48 83 ec 10          	sub    $0x10,%rsp
    c82b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c82f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c833:	48 89 c6             	mov    %rax,%rsi
    c836:	bf 08 00 00 00       	mov    $0x8,%edi
    c83b:	e8 5f 93 ff ff       	call   5b9f <_ZnwmPv>
    c840:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    c847:	90                   	nop
    c848:	c9                   	leave
    c849:	c3                   	ret

000000000000c84a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c84a:	55                   	push   %rbp
    c84b:	48 89 e5             	mov    %rsp,%rbp
    c84e:	48 83 ec 20          	sub    $0x20,%rsp
    c852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c85a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c85e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c862:	48 89 c7             	mov    %rax,%rdi
    c865:	e8 12 06 00 00       	call   ce7c <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c86a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c86e:	48 89 c7             	mov    %rax,%rdi
    c871:	e8 3b 93 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    c876:	48 89 c1             	mov    %rax,%rcx
    c879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c87d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c881:	48 89 ce             	mov    %rcx,%rsi
    c884:	48 89 c7             	mov    %rax,%rdi
    c887:	e8 fb 05 00 00       	call   ce87 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    c88c:	c9                   	leave
    c88d:	c3                   	ret

000000000000c88e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c88e:	55                   	push   %rbp
    c88f:	48 89 e5             	mov    %rsp,%rbp
    c892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c896:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    c89d:	55 55 05 
      }
    c8a0:	5d                   	pop    %rbp
    c8a1:	c3                   	ret

000000000000c8a2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c8a2:	55                   	push   %rbp
    c8a3:	48 89 e5             	mov    %rsp,%rbp
    c8a6:	48 83 ec 20          	sub    $0x20,%rsp
    c8aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c8b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c8b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8ba:	48 89 c7             	mov    %rax,%rdi
    c8bd:	e8 cc ff ff ff       	call   c88e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    c8c2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c8c6:	0f 92 c0             	setb   %al
    c8c9:	0f b6 c0             	movzbl %al,%eax
    c8cc:	48 85 c0             	test   %rax,%rax
    c8cf:	0f 95 c0             	setne  %al
    c8d2:	84 c0                	test   %al,%al
    c8d4:	74 1a                	je     c8f0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c8d6:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    c8dd:	aa aa 0a 
    c8e0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c8e4:	73 05                	jae    c8eb <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c8e6:	e8 05 7a ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c8eb:	e8 20 78 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c8f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c8f4:	48 89 d0             	mov    %rdx,%rax
    c8f7:	48 01 c0             	add    %rax,%rax
    c8fa:	48 01 d0             	add    %rdx,%rax
    c8fd:	48 c1 e0 03          	shl    $0x3,%rax
    c901:	48 89 c7             	mov    %rax,%rdi
    c904:	e8 57 7b ff ff       	call   4460 <_Znwm@plt>
    c909:	90                   	nop
      }
    c90a:	c9                   	leave
    c90b:	c3                   	ret

000000000000c90c <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c90c:	55                   	push   %rbp
    c90d:	48 89 e5             	mov    %rsp,%rbp
    c910:	48 83 ec 10          	sub    $0x10,%rsp
    c914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c91c:	48 89 c6             	mov    %rax,%rsi
    c91f:	bf 18 00 00 00       	mov    $0x18,%edi
    c924:	e8 76 92 ff ff       	call   5b9f <_ZnwmPv>
    c929:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    c92f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    c936:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    c93d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    c944:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    c94b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    c952:	90                   	nop
    c953:	c9                   	leave
    c954:	c3                   	ret

000000000000c955 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c955:	55                   	push   %rbp
    c956:	48 89 e5             	mov    %rsp,%rbp
    c959:	48 83 ec 20          	sub    $0x20,%rsp
    c95d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c961:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c965:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c969:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c96d:	48 89 c7             	mov    %rax,%rdi
    c970:	e8 6f 05 00 00       	call   cee4 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c975:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c979:	48 89 c7             	mov    %rax,%rdi
    c97c:	e8 30 92 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    c981:	48 89 c1             	mov    %rax,%rcx
    c984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c988:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c98c:	48 89 ce             	mov    %rcx,%rsi
    c98f:	48 89 c7             	mov    %rax,%rdi
    c992:	e8 58 05 00 00       	call   ceef <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c997:	c9                   	leave
    c998:	c3                   	ret
    c999:	90                   	nop

000000000000c99a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c99a:	55                   	push   %rbp
    c99b:	48 89 e5             	mov    %rsp,%rbp
    c99e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c9a2:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    c9a9:	49 92 04 
      }
    c9ac:	5d                   	pop    %rbp
    c9ad:	c3                   	ret

000000000000c9ae <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c9ae:	55                   	push   %rbp
    c9af:	48 89 e5             	mov    %rsp,%rbp
    c9b2:	48 83 ec 20          	sub    $0x20,%rsp
    c9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c9be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c6:	48 89 c7             	mov    %rax,%rdi
    c9c9:	e8 cc ff ff ff       	call   c99a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    c9ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c9d2:	0f 92 c0             	setb   %al
    c9d5:	0f b6 c0             	movzbl %al,%eax
    c9d8:	48 85 c0             	test   %rax,%rax
    c9db:	0f 95 c0             	setne  %al
    c9de:	84 c0                	test   %al,%al
    c9e0:	74 1a                	je     c9fc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c9e2:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    c9e9:	92 24 09 
    c9ec:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c9f0:	73 05                	jae    c9f7 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c9f2:	e8 f9 78 ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c9f7:	e8 14 77 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c9fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca00:	48 89 d0             	mov    %rdx,%rax
    ca03:	48 c1 e0 03          	shl    $0x3,%rax
    ca07:	48 29 d0             	sub    %rdx,%rax
    ca0a:	48 c1 e0 02          	shl    $0x2,%rax
    ca0e:	48 89 c7             	mov    %rax,%rdi
    ca11:	e8 4a 7a ff ff       	call   4460 <_Znwm@plt>
    ca16:	90                   	nop
      }
    ca17:	c9                   	leave
    ca18:	c3                   	ret

000000000000ca19 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ca19:	55                   	push   %rbp
    ca1a:	48 89 e5             	mov    %rsp,%rbp
    ca1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ca21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca25:	5d                   	pop    %rbp
    ca26:	c3                   	ret

000000000000ca27 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ca27:	55                   	push   %rbp
    ca28:	48 89 e5             	mov    %rsp,%rbp
    ca2b:	48 83 ec 10          	sub    $0x10,%rsp
    ca2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ca33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca37:	48 89 c6             	mov    %rax,%rsi
    ca3a:	bf 1c 00 00 00       	mov    $0x1c,%edi
    ca3f:	e8 5b 91 ff ff       	call   5b9f <_ZnwmPv>
    ca44:	48 89 c7             	mov    %rax,%rdi
    ca47:	e8 6c 05 00 00       	call   cfb8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    ca4c:	90                   	nop
    ca4d:	c9                   	leave
    ca4e:	c3                   	ret
    ca4f:	90                   	nop

000000000000ca50 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ca50:	55                   	push   %rbp
    ca51:	48 89 e5             	mov    %rsp,%rbp
    ca54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ca58:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ca5f:	ff ff 0f 
      }
    ca62:	5d                   	pop    %rbp
    ca63:	c3                   	ret

000000000000ca64 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ca64:	55                   	push   %rbp
    ca65:	48 89 e5             	mov    %rsp,%rbp
    ca68:	48 83 ec 20          	sub    $0x20,%rsp
    ca6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ca74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ca78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca7c:	48 89 c7             	mov    %rax,%rdi
    ca7f:	e8 cc ff ff ff       	call   ca50 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    ca84:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ca88:	0f 92 c0             	setb   %al
    ca8b:	0f b6 c0             	movzbl %al,%eax
    ca8e:	48 85 c0             	test   %rax,%rax
    ca91:	0f 95 c0             	setne  %al
    ca94:	84 c0                	test   %al,%al
    ca96:	74 1a                	je     cab2 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ca98:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    ca9f:	ff ff 1f 
    caa2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    caa6:	73 05                	jae    caad <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    caa8:	e8 43 78 ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    caad:	e8 5e 76 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cab2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cab6:	48 c1 e0 03          	shl    $0x3,%rax
    caba:	48 89 c7             	mov    %rax,%rdi
    cabd:	e8 9e 79 ff ff       	call   4460 <_Znwm@plt>
    cac2:	90                   	nop
      }
    cac3:	c9                   	leave
    cac4:	c3                   	ret

000000000000cac5 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cac5:	55                   	push   %rbp
    cac6:	48 89 e5             	mov    %rsp,%rbp
    cac9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    cacd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cad1:	5d                   	pop    %rbp
    cad2:	c3                   	ret

000000000000cad3 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    cad3:	55                   	push   %rbp
    cad4:	48 89 e5             	mov    %rsp,%rbp
    cad7:	48 83 ec 10          	sub    $0x10,%rsp
    cadb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    cadf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cae3:	48 89 c6             	mov    %rax,%rsi
    cae6:	bf 08 00 00 00       	mov    $0x8,%edi
    caeb:	e8 af 90 ff ff       	call   5b9f <_ZnwmPv>
    caf0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    caf6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    cafd:	90                   	nop
    cafe:	c9                   	leave
    caff:	c3                   	ret

000000000000cb00 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    cb00:	55                   	push   %rbp
    cb01:	48 89 e5             	mov    %rsp,%rbp
    cb04:	48 83 ec 20          	sub    $0x20,%rsp
    cb08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    cb14:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb18:	48 89 c7             	mov    %rax,%rdi
    cb1b:	e8 b3 04 00 00       	call   cfd3 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    cb20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb24:	48 89 c7             	mov    %rax,%rdi
    cb27:	e8 85 90 ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    cb2c:	48 89 c1             	mov    %rax,%rcx
    cb2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb37:	48 89 ce             	mov    %rcx,%rsi
    cb3a:	48 89 c7             	mov    %rax,%rdi
    cb3d:	e8 9c 04 00 00       	call   cfde <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    cb42:	c9                   	leave
    cb43:	c3                   	ret

000000000000cb44 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    cb44:	55                   	push   %rbp
    cb45:	48 89 e5             	mov    %rsp,%rbp
    cb48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    cb4c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    cb53:	ff ff 1f 
      }
    cb56:	5d                   	pop    %rbp
    cb57:	c3                   	ret

000000000000cb58 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    cb58:	55                   	push   %rbp
    cb59:	48 89 e5             	mov    %rsp,%rbp
    cb5c:	48 83 ec 20          	sub    $0x20,%rsp
    cb60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    cb6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb70:	48 89 c7             	mov    %rax,%rdi
    cb73:	e8 cc ff ff ff       	call   cb44 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    cb78:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cb7c:	0f 92 c0             	setb   %al
    cb7f:	0f b6 c0             	movzbl %al,%eax
    cb82:	48 85 c0             	test   %rax,%rax
    cb85:	0f 95 c0             	setne  %al
    cb88:	84 c0                	test   %al,%al
    cb8a:	74 1a                	je     cba6 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    cb8c:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    cb93:	ff ff 3f 
    cb96:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cb9a:	73 05                	jae    cba1 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    cb9c:	e8 4f 77 ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    cba1:	e8 6a 75 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cba6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbaa:	48 c1 e0 02          	shl    $0x2,%rax
    cbae:	48 89 c7             	mov    %rax,%rdi
    cbb1:	e8 aa 78 ff ff       	call   4460 <_Znwm@plt>
    cbb6:	90                   	nop
      }
    cbb7:	c9                   	leave
    cbb8:	c3                   	ret

000000000000cbb9 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cbb9:	55                   	push   %rbp
    cbba:	48 89 e5             	mov    %rsp,%rbp
    cbbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    cbc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc5:	5d                   	pop    %rbp
    cbc6:	c3                   	ret

000000000000cbc7 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    cbc7:	55                   	push   %rbp
    cbc8:	48 89 e5             	mov    %rsp,%rbp
    cbcb:	48 83 ec 10          	sub    $0x10,%rsp
    cbcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    cbd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd7:	48 89 c6             	mov    %rax,%rsi
    cbda:	bf 04 00 00 00       	mov    $0x4,%edi
    cbdf:	e8 bb 8f ff ff       	call   5b9f <_ZnwmPv>
    cbe4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    cbea:	90                   	nop
    cbeb:	c9                   	leave
    cbec:	c3                   	ret

000000000000cbed <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    cbed:	55                   	push   %rbp
    cbee:	48 89 e5             	mov    %rsp,%rbp
    cbf1:	48 83 ec 20          	sub    $0x20,%rsp
    cbf5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbf9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbfd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    cc01:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc05:	48 89 c7             	mov    %rax,%rdi
    cc08:	e8 2e 04 00 00       	call   d03b <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    cc0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc11:	48 89 c7             	mov    %rax,%rdi
    cc14:	e8 98 8f ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    cc19:	48 89 c1             	mov    %rax,%rcx
    cc1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cc24:	48 89 ce             	mov    %rcx,%rsi
    cc27:	48 89 c7             	mov    %rax,%rdi
    cc2a:	e8 17 04 00 00       	call   d046 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    cc2f:	c9                   	leave
    cc30:	c3                   	ret
    cc31:	90                   	nop

000000000000cc32 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    cc32:	55                   	push   %rbp
    cc33:	48 89 e5             	mov    %rsp,%rbp
    cc36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    cc3a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    cc41:	ff ff 0f 
      }
    cc44:	5d                   	pop    %rbp
    cc45:	c3                   	ret

000000000000cc46 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    cc46:	55                   	push   %rbp
    cc47:	48 89 e5             	mov    %rsp,%rbp
    cc4a:	48 83 ec 20          	sub    $0x20,%rsp
    cc4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    cc5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc5e:	48 89 c7             	mov    %rax,%rdi
    cc61:	e8 cc ff ff ff       	call   cc32 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    cc66:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cc6a:	0f 92 c0             	setb   %al
    cc6d:	0f b6 c0             	movzbl %al,%eax
    cc70:	48 85 c0             	test   %rax,%rax
    cc73:	0f 95 c0             	setne  %al
    cc76:	84 c0                	test   %al,%al
    cc78:	74 1a                	je     cc94 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    cc7a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    cc81:	ff ff 1f 
    cc84:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cc88:	73 05                	jae    cc8f <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    cc8a:	e8 61 76 ff ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    cc8f:	e8 7c 74 ff ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    cc94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc98:	48 c1 e0 03          	shl    $0x3,%rax
    cc9c:	48 89 c7             	mov    %rax,%rdi
    cc9f:	e8 bc 77 ff ff       	call   4460 <_Znwm@plt>
    cca4:	90                   	nop
      }
    cca5:	c9                   	leave
    cca6:	c3                   	ret

000000000000cca7 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    cca7:	55                   	push   %rbp
    cca8:	48 89 e5             	mov    %rsp,%rbp
    ccab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ccaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccb3:	5d                   	pop    %rbp
    ccb4:	c3                   	ret

000000000000ccb5 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ccb5:	55                   	push   %rbp
    ccb6:	48 89 e5             	mov    %rsp,%rbp
    ccb9:	48 83 ec 10          	sub    $0x10,%rsp
    ccbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ccc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccc5:	48 89 c6             	mov    %rax,%rsi
    ccc8:	bf 08 00 00 00       	mov    $0x8,%edi
    cccd:	e8 cd 8e ff ff       	call   5b9f <_ZnwmPv>
    ccd2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    ccd9:	90                   	nop
    ccda:	c9                   	leave
    ccdb:	c3                   	ret

000000000000ccdc <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ccdc:	55                   	push   %rbp
    ccdd:	48 89 e5             	mov    %rsp,%rbp
    cce0:	48 83 ec 20          	sub    $0x20,%rsp
    cce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cce8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ccec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ccf0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ccf4:	48 89 c7             	mov    %rax,%rdi
    ccf7:	e8 a7 03 00 00       	call   d0a3 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ccfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cd00:	48 89 c7             	mov    %rax,%rdi
    cd03:	e8 a9 8e ff ff       	call   5bb1 <_ZSt17__size_to_integerm>
    cd08:	48 89 c1             	mov    %rax,%rcx
    cd0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd13:	48 89 ce             	mov    %rcx,%rsi
    cd16:	48 89 c7             	mov    %rax,%rdi
    cd19:	e8 90 03 00 00       	call   d0ae <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    cd1e:	c9                   	leave
    cd1f:	c3                   	ret

000000000000cd20 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cd20:	55                   	push   %rbp
    cd21:	48 89 e5             	mov    %rsp,%rbp
    cd24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cd28:	90                   	nop
    cd29:	5d                   	pop    %rbp
    cd2a:	c3                   	ret

000000000000cd2b <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cd2b:	55                   	push   %rbp
    cd2c:	48 89 e5             	mov    %rsp,%rbp
    cd2f:	48 83 ec 20          	sub    $0x20,%rsp
    cd33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cd3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cd3f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cd44:	75 06                	jne    cd4c <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cd46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd4a:	eb 4c                	jmp    cd98 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    cd4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd50:	48 89 d0             	mov    %rdx,%rax
    cd53:	48 c1 e0 06          	shl    $0x6,%rax
    cd57:	48 01 d0             	add    %rdx,%rax
    cd5a:	48 c1 e0 03          	shl    $0x3,%rax
    cd5e:	48 89 c2             	mov    %rax,%rdx
    cd61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd65:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cd69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd71:	48 89 ce             	mov    %rcx,%rsi
    cd74:	48 89 c7             	mov    %rax,%rdi
    cd77:	e8 8f 03 00 00       	call   d10b <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    cd7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd80:	48 89 d0             	mov    %rdx,%rax
    cd83:	48 c1 e0 06          	shl    $0x6,%rax
    cd87:	48 01 d0             	add    %rdx,%rax
    cd8a:	48 c1 e0 03          	shl    $0x3,%rax
    cd8e:	48 89 c2             	mov    %rax,%rdx
    cd91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd95:	48 01 d0             	add    %rdx,%rax
    }
    cd98:	c9                   	leave
    cd99:	c3                   	ret

000000000000cd9a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cd9a:	55                   	push   %rbp
    cd9b:	48 89 e5             	mov    %rsp,%rbp
    cd9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cda2:	90                   	nop
    cda3:	5d                   	pop    %rbp
    cda4:	c3                   	ret

000000000000cda5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cda5:	55                   	push   %rbp
    cda6:	48 89 e5             	mov    %rsp,%rbp
    cda9:	48 83 ec 20          	sub    $0x20,%rsp
    cdad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cdb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cdb9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cdbe:	75 06                	jne    cdc6 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cdc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdc4:	eb 4c                	jmp    ce12 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    cdc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cdca:	48 89 d0             	mov    %rdx,%rax
    cdcd:	48 c1 e0 06          	shl    $0x6,%rax
    cdd1:	48 01 d0             	add    %rdx,%rax
    cdd4:	48 c1 e0 02          	shl    $0x2,%rax
    cdd8:	48 89 c2             	mov    %rax,%rdx
    cddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cddf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cde3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cde7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdeb:	48 89 ce             	mov    %rcx,%rsi
    cdee:	48 89 c7             	mov    %rax,%rdi
    cdf1:	e8 43 03 00 00       	call   d139 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    cdf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cdfa:	48 89 d0             	mov    %rdx,%rax
    cdfd:	48 c1 e0 06          	shl    $0x6,%rax
    ce01:	48 01 d0             	add    %rdx,%rax
    ce04:	48 c1 e0 02          	shl    $0x2,%rax
    ce08:	48 89 c2             	mov    %rax,%rdx
    ce0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce0f:	48 01 d0             	add    %rdx,%rax
    }
    ce12:	c9                   	leave
    ce13:	c3                   	ret

000000000000ce14 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    ce14:	55                   	push   %rbp
    ce15:	48 89 e5             	mov    %rsp,%rbp
    ce18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ce1c:	90                   	nop
    ce1d:	5d                   	pop    %rbp
    ce1e:	c3                   	ret

000000000000ce1f <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ce1f:	55                   	push   %rbp
    ce20:	48 89 e5             	mov    %rsp,%rbp
    ce23:	48 83 ec 20          	sub    $0x20,%rsp
    ce27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce2b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce2f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ce33:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ce38:	75 06                	jne    ce40 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ce3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce3e:	eb 3a                	jmp    ce7a <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    ce40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ce4b:	00 
    ce4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce50:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ce54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5c:	48 89 ce             	mov    %rcx,%rsi
    ce5f:	48 89 c7             	mov    %rax,%rdi
    ce62:	e8 00 03 00 00       	call   d167 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    ce67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce6b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ce72:	00 
    ce73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce77:	48 01 d0             	add    %rdx,%rax
    }
    ce7a:	c9                   	leave
    ce7b:	c3                   	ret

000000000000ce7c <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    ce7c:	55                   	push   %rbp
    ce7d:	48 89 e5             	mov    %rsp,%rbp
    ce80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ce84:	90                   	nop
    ce85:	5d                   	pop    %rbp
    ce86:	c3                   	ret

000000000000ce87 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ce87:	55                   	push   %rbp
    ce88:	48 89 e5             	mov    %rsp,%rbp
    ce8b:	48 83 ec 20          	sub    $0x20,%rsp
    ce8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce97:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ce9b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cea0:	75 06                	jne    cea8 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cea6:	eb 3a                	jmp    cee2 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    cea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ceac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ceb3:	00 
    ceb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cebc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec4:	48 89 ce             	mov    %rcx,%rsi
    cec7:	48 89 c7             	mov    %rax,%rdi
    ceca:	e8 c6 02 00 00       	call   d195 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    cecf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ced3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ceda:	00 
    cedb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cedf:	48 01 d0             	add    %rdx,%rax
    }
    cee2:	c9                   	leave
    cee3:	c3                   	ret

000000000000cee4 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cee4:	55                   	push   %rbp
    cee5:	48 89 e5             	mov    %rsp,%rbp
    cee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ceec:	90                   	nop
    ceed:	5d                   	pop    %rbp
    ceee:	c3                   	ret

000000000000ceef <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ceef:	55                   	push   %rbp
    cef0:	48 89 e5             	mov    %rsp,%rbp
    cef3:	48 83 ec 20          	sub    $0x20,%rsp
    cef7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cefb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ceff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cf03:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cf08:	75 06                	jne    cf10 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cf0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf0e:	eb 4a                	jmp    cf5a <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    cf10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf14:	48 89 d0             	mov    %rdx,%rax
    cf17:	48 01 c0             	add    %rax,%rax
    cf1a:	48 01 d0             	add    %rdx,%rax
    cf1d:	48 c1 e0 03          	shl    $0x3,%rax
    cf21:	48 89 c2             	mov    %rax,%rdx
    cf24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf28:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cf2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf34:	48 89 ce             	mov    %rcx,%rsi
    cf37:	48 89 c7             	mov    %rax,%rdi
    cf3a:	e8 84 02 00 00       	call   d1c3 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    cf3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf43:	48 89 d0             	mov    %rdx,%rax
    cf46:	48 01 c0             	add    %rax,%rax
    cf49:	48 01 d0             	add    %rdx,%rax
    cf4c:	48 c1 e0 03          	shl    $0x3,%rax
    cf50:	48 89 c2             	mov    %rax,%rdx
    cf53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf57:	48 01 d0             	add    %rdx,%rax
    }
    cf5a:	c9                   	leave
    cf5b:	c3                   	ret

000000000000cf5c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    cf5c:	55                   	push   %rbp
    cf5d:	48 89 e5             	mov    %rsp,%rbp
    cf60:	48 83 ec 10          	sub    $0x10,%rsp
    cf64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf6c:	48 89 c7             	mov    %rax,%rdi
    cf6f:	e8 7e 02 00 00       	call   d1f2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    cf74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf78:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    cf7c:	90                   	nop
    cf7d:	c9                   	leave
    cf7e:	c3                   	ret
    cf7f:	90                   	nop

000000000000cf80 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    cf80:	55                   	push   %rbp
    cf81:	48 89 e5             	mov    %rsp,%rbp
    cf84:	48 83 ec 10          	sub    $0x10,%rsp
    cf88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf90:	48 89 c7             	mov    %rax,%rdi
    cf93:	e8 c4 ff ff ff       	call   cf5c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    cf98:	90                   	nop
    cf99:	c9                   	leave
    cf9a:	c3                   	ret
    cf9b:	90                   	nop

000000000000cf9c <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    cf9c:	55                   	push   %rbp
    cf9d:	48 89 e5             	mov    %rsp,%rbp
    cfa0:	48 83 ec 10          	sub    $0x10,%rsp
    cfa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfac:	48 89 c7             	mov    %rax,%rdi
    cfaf:	e8 cc ff ff ff       	call   cf80 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    cfb4:	90                   	nop
    cfb5:	c9                   	leave
    cfb6:	c3                   	ret
    cfb7:	90                   	nop

000000000000cfb8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    cfb8:	55                   	push   %rbp
    cfb9:	48 89 e5             	mov    %rsp,%rbp
    cfbc:	48 83 ec 10          	sub    $0x10,%rsp
    cfc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfc8:	48 89 c7             	mov    %rax,%rdi
    cfcb:	e8 cc ff ff ff       	call   cf9c <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    cfd0:	90                   	nop
    cfd1:	c9                   	leave
    cfd2:	c3                   	ret

000000000000cfd3 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    cfd3:	55                   	push   %rbp
    cfd4:	48 89 e5             	mov    %rsp,%rbp
    cfd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cfdb:	90                   	nop
    cfdc:	5d                   	pop    %rbp
    cfdd:	c3                   	ret

000000000000cfde <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    cfde:	55                   	push   %rbp
    cfdf:	48 89 e5             	mov    %rsp,%rbp
    cfe2:	48 83 ec 20          	sub    $0x20,%rsp
    cfe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cfee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    cff2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cff7:	75 06                	jne    cfff <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    cff9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cffd:	eb 3a                	jmp    d039 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    cfff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d003:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d00a:	00 
    d00b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d00f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d013:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d01b:	48 89 ce             	mov    %rcx,%rsi
    d01e:	48 89 c7             	mov    %rax,%rdi
    d021:	e8 d7 01 00 00       	call   d1fd <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    d026:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d02a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d031:	00 
    d032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d036:	48 01 d0             	add    %rdx,%rax
    }
    d039:	c9                   	leave
    d03a:	c3                   	ret

000000000000d03b <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    d03b:	55                   	push   %rbp
    d03c:	48 89 e5             	mov    %rsp,%rbp
    d03f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d043:	90                   	nop
    d044:	5d                   	pop    %rbp
    d045:	c3                   	ret

000000000000d046 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d046:	55                   	push   %rbp
    d047:	48 89 e5             	mov    %rsp,%rbp
    d04a:	48 83 ec 20          	sub    $0x20,%rsp
    d04e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d052:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d056:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d05a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d05f:	75 06                	jne    d067 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d065:	eb 3a                	jmp    d0a1 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d067:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d06b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    d072:	00 
    d073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d077:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d07b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d083:	48 89 ce             	mov    %rcx,%rsi
    d086:	48 89 c7             	mov    %rax,%rdi
    d089:	e8 9d 01 00 00       	call   d22b <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    d08e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d092:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    d099:	00 
    d09a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d09e:	48 01 d0             	add    %rdx,%rax
    }
    d0a1:	c9                   	leave
    d0a2:	c3                   	ret

000000000000d0a3 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    d0a3:	55                   	push   %rbp
    d0a4:	48 89 e5             	mov    %rsp,%rbp
    d0a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d0ab:	90                   	nop
    d0ac:	5d                   	pop    %rbp
    d0ad:	c3                   	ret

000000000000d0ae <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    d0ae:	55                   	push   %rbp
    d0af:	48 89 e5             	mov    %rsp,%rbp
    d0b2:	48 83 ec 20          	sub    $0x20,%rsp
    d0b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    d0c2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d0c7:	75 06                	jne    d0cf <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    d0c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0cd:	eb 3a                	jmp    d109 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    d0cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d0d3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d0da:	00 
    d0db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0df:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d0e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0eb:	48 89 ce             	mov    %rcx,%rsi
    d0ee:	48 89 c7             	mov    %rax,%rdi
    d0f1:	e8 63 01 00 00       	call   d259 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    d0f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d0fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d101:	00 
    d102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d106:	48 01 d0             	add    %rdx,%rax
    }
    d109:	c9                   	leave
    d10a:	c3                   	ret

000000000000d10b <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d10b:	55                   	push   %rbp
    d10c:	48 89 e5             	mov    %rsp,%rbp
    d10f:	48 83 ec 20          	sub    $0x20,%rsp
    d113:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d117:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d11b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d11f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d123:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d12b:	48 89 ce             	mov    %rcx,%rsi
    d12e:	48 89 c7             	mov    %rax,%rdi
    d131:	e8 51 01 00 00       	call   d287 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d136:	90                   	nop
    d137:	c9                   	leave
    d138:	c3                   	ret

000000000000d139 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d139:	55                   	push   %rbp
    d13a:	48 89 e5             	mov    %rsp,%rbp
    d13d:	48 83 ec 20          	sub    $0x20,%rsp
    d141:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d145:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d149:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d14d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d151:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d159:	48 89 ce             	mov    %rcx,%rsi
    d15c:	48 89 c7             	mov    %rax,%rdi
    d15f:	e8 9b 01 00 00       	call   d2ff <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d164:	90                   	nop
    d165:	c9                   	leave
    d166:	c3                   	ret

000000000000d167 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d167:	55                   	push   %rbp
    d168:	48 89 e5             	mov    %rsp,%rbp
    d16b:	48 83 ec 20          	sub    $0x20,%rsp
    d16f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d173:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d177:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d17b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d17f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d187:	48 89 ce             	mov    %rcx,%rsi
    d18a:	48 89 c7             	mov    %rax,%rdi
    d18d:	e8 e5 01 00 00       	call   d377 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    d192:	90                   	nop
    d193:	c9                   	leave
    d194:	c3                   	ret

000000000000d195 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d195:	55                   	push   %rbp
    d196:	48 89 e5             	mov    %rsp,%rbp
    d199:	48 83 ec 20          	sub    $0x20,%rsp
    d19d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d1a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1b5:	48 89 ce             	mov    %rcx,%rsi
    d1b8:	48 89 c7             	mov    %rax,%rdi
    d1bb:	e8 f2 01 00 00       	call   d3b2 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    d1c0:	90                   	nop
    d1c1:	c9                   	leave
    d1c2:	c3                   	ret

000000000000d1c3 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d1c3:	55                   	push   %rbp
    d1c4:	48 89 e5             	mov    %rsp,%rbp
    d1c7:	48 83 ec 20          	sub    $0x20,%rsp
    d1cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d1d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e3:	48 89 ce             	mov    %rcx,%rsi
    d1e6:	48 89 c7             	mov    %rax,%rdi
    d1e9:	e8 ff 01 00 00       	call   d3ed <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d1ee:	90                   	nop
    d1ef:	c9                   	leave
    d1f0:	c3                   	ret
    d1f1:	90                   	nop

000000000000d1f2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    d1f2:	55                   	push   %rbp
    d1f3:	48 89 e5             	mov    %rsp,%rbp
    d1f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1fa:	90                   	nop
    d1fb:	5d                   	pop    %rbp
    d1fc:	c3                   	ret

000000000000d1fd <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d1fd:	55                   	push   %rbp
    d1fe:	48 89 e5             	mov    %rsp,%rbp
    d201:	48 83 ec 20          	sub    $0x20,%rsp
    d205:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d209:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d20d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d211:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d215:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d21d:	48 89 ce             	mov    %rcx,%rsi
    d220:	48 89 c7             	mov    %rax,%rdi
    d223:	e8 08 02 00 00       	call   d430 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d228:	90                   	nop
    d229:	c9                   	leave
    d22a:	c3                   	ret

000000000000d22b <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d22b:	55                   	push   %rbp
    d22c:	48 89 e5             	mov    %rsp,%rbp
    d22f:	48 83 ec 20          	sub    $0x20,%rsp
    d233:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d237:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d23b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d23f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d243:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d24b:	48 89 ce             	mov    %rcx,%rsi
    d24e:	48 89 c7             	mov    %rax,%rdi
    d251:	e8 0d 02 00 00       	call   d463 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    d256:	90                   	nop
    d257:	c9                   	leave
    d258:	c3                   	ret

000000000000d259 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    d259:	55                   	push   %rbp
    d25a:	48 89 e5             	mov    %rsp,%rbp
    d25d:	48 83 ec 20          	sub    $0x20,%rsp
    d261:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d265:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d269:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    d26d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d271:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d279:	48 89 ce             	mov    %rcx,%rsi
    d27c:	48 89 c7             	mov    %rax,%rdi
    d27f:	e8 10 02 00 00       	call   d494 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    d284:	90                   	nop
    d285:	c9                   	leave
    d286:	c3                   	ret

000000000000d287 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d287:	55                   	push   %rbp
    d288:	48 89 e5             	mov    %rsp,%rbp
    d28b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d28f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d293:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d297:	eb 58                	jmp    d2f1 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    d299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d29d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d2a1:	b9 08 02 00 00       	mov    $0x208,%ecx
    d2a6:	48 8b 32             	mov    (%rdx),%rsi
    d2a9:	48 89 30             	mov    %rsi,(%rax)
    d2ac:	89 ce                	mov    %ecx,%esi
    d2ae:	48 01 c6             	add    %rax,%rsi
    d2b1:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    d2b5:	89 ce                	mov    %ecx,%esi
    d2b7:	48 01 d6             	add    %rdx,%rsi
    d2ba:	48 83 c6 08          	add    $0x8,%rsi
    d2be:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    d2c2:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    d2c6:	48 8d 78 08          	lea    0x8(%rax),%rdi
    d2ca:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d2ce:	48 29 f8             	sub    %rdi,%rax
    d2d1:	48 29 c2             	sub    %rax,%rdx
    d2d4:	01 c1                	add    %eax,%ecx
    d2d6:	83 e1 f8             	and    $0xfffffff8,%ecx
    d2d9:	89 c8                	mov    %ecx,%eax
    d2db:	c1 e8 03             	shr    $0x3,%eax
    d2de:	89 c0                	mov    %eax,%eax
    d2e0:	48 89 d6             	mov    %rdx,%rsi
    d2e3:	48 89 c1             	mov    %rax,%rcx
    d2e6:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    d2e9:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    d2f0:	00 
    d2f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d2f9:	75 9e                	jne    d299 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d2fb:	90                   	nop
    d2fc:	90                   	nop
    d2fd:	5d                   	pop    %rbp
    d2fe:	c3                   	ret

000000000000d2ff <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d2ff:	55                   	push   %rbp
    d300:	48 89 e5             	mov    %rsp,%rbp
    d303:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d307:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d30b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d30f:	eb 58                	jmp    d369 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    d311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d315:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d319:	b9 04 01 00 00       	mov    $0x104,%ecx
    d31e:	48 8b 32             	mov    (%rdx),%rsi
    d321:	48 89 30             	mov    %rsi,(%rax)
    d324:	89 ce                	mov    %ecx,%esi
    d326:	48 01 c6             	add    %rax,%rsi
    d329:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    d32d:	89 ce                	mov    %ecx,%esi
    d32f:	48 01 d6             	add    %rdx,%rsi
    d332:	48 83 c6 08          	add    $0x8,%rsi
    d336:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    d33a:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    d33e:	48 8d 78 08          	lea    0x8(%rax),%rdi
    d342:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d346:	48 29 f8             	sub    %rdi,%rax
    d349:	48 29 c2             	sub    %rax,%rdx
    d34c:	01 c1                	add    %eax,%ecx
    d34e:	83 e1 f8             	and    $0xfffffff8,%ecx
    d351:	89 c8                	mov    %ecx,%eax
    d353:	c1 e8 03             	shr    $0x3,%eax
    d356:	89 c0                	mov    %eax,%eax
    d358:	48 89 d6             	mov    %rdx,%rsi
    d35b:	48 89 c1             	mov    %rax,%rcx
    d35e:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    d361:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    d368:	00 
    d369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d36d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d371:	75 9e                	jne    d311 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d373:	90                   	nop
    d374:	90                   	nop
    d375:	5d                   	pop    %rbp
    d376:	c3                   	ret

000000000000d377 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d377:	55                   	push   %rbp
    d378:	48 89 e5             	mov    %rsp,%rbp
    d37b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d37f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d383:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    d387:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d38b:	48 8b 00             	mov    (%rax),%rax
    d38e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    d392:	eb 10                	jmp    d3a4 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    d394:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d398:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d39c:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d39f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    d3a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3a8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d3ac:	75 e6                	jne    d394 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    d3ae:	90                   	nop
    d3af:	90                   	nop
    d3b0:	5d                   	pop    %rbp
    d3b1:	c3                   	ret

000000000000d3b2 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d3b2:	55                   	push   %rbp
    d3b3:	48 89 e5             	mov    %rsp,%rbp
    d3b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d3ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d3be:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    d3c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d3c6:	48 8b 00             	mov    (%rax),%rax
    d3c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    d3cd:	eb 10                	jmp    d3df <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    d3cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3d7:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d3da:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    d3df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3e3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d3e7:	75 e6                	jne    d3cf <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    d3e9:	90                   	nop
    d3ea:	90                   	nop
    d3eb:	5d                   	pop    %rbp
    d3ec:	c3                   	ret

000000000000d3ed <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d3ed:	55                   	push   %rbp
    d3ee:	48 89 e5             	mov    %rsp,%rbp
    d3f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d3f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d3fd:	eb 23                	jmp    d422 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    d3ff:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d403:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    d407:	48 8b 06             	mov    (%rsi),%rax
    d40a:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    d40e:	48 89 01             	mov    %rax,(%rcx)
    d411:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    d415:	48 8b 46 10          	mov    0x10(%rsi),%rax
    d419:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    d41d:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    d422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d426:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d42a:	75 d3                	jne    d3ff <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d42c:	90                   	nop
    d42d:	90                   	nop
    d42e:	5d                   	pop    %rbp
    d42f:	c3                   	ret

000000000000d430 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d430:	55                   	push   %rbp
    d431:	48 89 e5             	mov    %rsp,%rbp
    d434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d438:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d43c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d440:	eb 13                	jmp    d455 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    d442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d446:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d44a:	48 8b 12             	mov    (%rdx),%rdx
    d44d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d450:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    d455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d459:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d45d:	75 e3                	jne    d442 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d45f:	90                   	nop
    d460:	90                   	nop
    d461:	5d                   	pop    %rbp
    d462:	c3                   	ret

000000000000d463 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d463:	55                   	push   %rbp
    d464:	48 89 e5             	mov    %rsp,%rbp
    d467:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d46b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d46f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    d473:	eb 11                	jmp    d486 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    d475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d479:	8b 10                	mov    (%rax),%edx
    d47b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d47f:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    d481:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    d486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d48a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d48e:	75 e5                	jne    d475 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    d490:	90                   	nop
    d491:	90                   	nop
    d492:	5d                   	pop    %rbp
    d493:	c3                   	ret

000000000000d494 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    d494:	55                   	push   %rbp
    d495:	48 89 e5             	mov    %rsp,%rbp
    d498:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d49c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d4a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    d4a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4a8:	48 8b 00             	mov    (%rax),%rax
    d4ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    d4af:	eb 10                	jmp    d4c1 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    d4b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4b9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    d4bc:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    d4c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4c5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d4c9:	75 e6                	jne    d4b1 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    d4cb:	90                   	nop
    d4cc:	90                   	nop
    d4cd:	5d                   	pop    %rbp
    d4ce:	c3                   	ret

000000000000d4cf <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    d4cf:	55                   	push   %rbp
    d4d0:	48 89 e5             	mov    %rsp,%rbp
    d4d3:	53                   	push   %rbx
    d4d4:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    d4d8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d4dc:	be 00 00 00 00       	mov    $0x0,%esi
    d4e1:	48 89 c7             	mov    %rax,%rdi
    d4e4:	e8 77 70 ff ff       	call   4560 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    d4e9:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d4ec:	89 c3                	mov    %eax,%ebx
    d4ee:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d4f2:	48 89 c7             	mov    %rax,%rdi
    d4f5:	e8 ea b6 ff ff       	call   8be4 <_ZNSaI17VkLayerPropertiesEC1Ev>
    d4fa:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d4fe:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d502:	48 89 de             	mov    %rbx,%rsi
    d505:	48 89 c7             	mov    %rax,%rdi
    d508:	e8 0f b7 ff ff       	call   8c1c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    d50d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d511:	48 89 c7             	mov    %rax,%rdi
    d514:	e8 e7 b6 ff ff       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    d519:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d51d:	48 89 c7             	mov    %rax,%rdi
    d520:	e8 b1 b7 ff ff       	call   8cd6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    d525:	48 89 c2             	mov    %rax,%rdx
    d528:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d52c:	48 89 d6             	mov    %rdx,%rsi
    d52f:	48 89 c7             	mov    %rax,%rdi
    d532:	e8 29 70 ff ff       	call   4560 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    d537:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d53b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d53f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d543:	48 89 c7             	mov    %rax,%rdi
    d546:	e8 63 04 00 00       	call   d9ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    d54b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d54f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d553:	48 89 c7             	mov    %rax,%rdi
    d556:	e8 79 04 00 00       	call   d9d4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    d55b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d55f:	eb 5b                	jmp    d5bc <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    d561:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d565:	48 89 c7             	mov    %rax,%rdi
    d568:	e8 ef 04 00 00       	call   da5c <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d56d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    d571:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d575:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d579:	48 89 d6             	mov    %rdx,%rsi
    d57c:	48 89 c7             	mov    %rax,%rdi
    d57f:	e8 f8 03 00 00       	call   d97c <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    d584:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d588:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d58c:	48 8b 3d 0d 27 02 00 	mov    0x2270d(%rip),%rdi        # 2fca0 <_ZN3vkh19validationLayerNameE>
    d593:	48 8b 35 0e 27 02 00 	mov    0x2270e(%rip),%rsi        # 2fca8 <_ZN3vkh19validationLayerNameE+0x8>
    d59a:	48 89 d1             	mov    %rdx,%rcx
    d59d:	48 89 c2             	mov    %rax,%rdx
    d5a0:	e8 da 04 00 00       	call   da7f <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    d5a5:	84 c0                	test   %al,%al
    d5a7:	74 07                	je     d5b0 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    d5a9:	bb 01 00 00 00       	mov    $0x1,%ebx
    d5ae:	eb 28                	jmp    d5d8 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    d5b0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d5b4:	48 89 c7             	mov    %rax,%rdi
    d5b7:	e8 7c 04 00 00       	call   da38 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d5bc:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d5c0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    d5c4:	48 89 d6             	mov    %rdx,%rsi
    d5c7:	48 89 c7             	mov    %rax,%rdi
    d5ca:	e8 2e 04 00 00       	call   d9fd <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d5cf:	84 c0                	test   %al,%al
    d5d1:	75 8e                	jne    d561 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    d5d3:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    d5d8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d5dc:	48 89 c7             	mov    %rax,%rdi
    d5df:	e8 ae b6 ff ff       	call   8c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    d5e4:	89 d8                	mov    %ebx,%eax
    d5e6:	eb 34                	jmp    d61c <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    d5e8:	48 89 c3             	mov    %rax,%rbx
    d5eb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d5ef:	48 89 c7             	mov    %rax,%rdi
    d5f2:	e8 09 b6 ff ff       	call   8c00 <_ZNSaI17VkLayerPropertiesED1Ev>
    d5f7:	48 89 d8             	mov    %rbx,%rax
    d5fa:	48 89 c7             	mov    %rax,%rdi
    d5fd:	e8 ae 72 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    d602:	48 89 c3             	mov    %rax,%rbx
    d605:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d609:	48 89 c7             	mov    %rax,%rdi
    d60c:	e8 81 b6 ff ff       	call   8c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    d611:	48 89 d8             	mov    %rbx,%rax
    d614:	48 89 c7             	mov    %rax,%rdi
    d617:	e8 94 72 ff ff       	call   48b0 <_Unwind_Resume@plt>
    d61c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d620:	c9                   	leave
    d621:	c3                   	ret

000000000000d622 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    d622:	55                   	push   %rbp
    d623:	48 89 e5             	mov    %rsp,%rbp
    d626:	48 83 ec 20          	sub    $0x20,%rsp
    d62a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d62d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d630:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    d634:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    d638:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d63b:	83 f8 01             	cmp    $0x1,%eax
    d63e:	7e 3c                	jle    d67c <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    d640:	be 0a 00 00 00       	mov    $0xa,%esi
    d645:	48 8d 05 74 2e 02 00 	lea    0x22e74(%rip),%rax        # 304c0 <_ZSt4cerr@GLIBCXX_3.4>
    d64c:	48 89 c7             	mov    %rax,%rdi
    d64f:	e8 2c 6f ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    d654:	48 89 c2             	mov    %rax,%rdx
    d657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d65b:	48 8b 40 28          	mov    0x28(%rax),%rax
    d65f:	48 89 c6             	mov    %rax,%rsi
    d662:	48 89 d7             	mov    %rdx,%rdi
    d665:	e8 e6 6d ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d66a:	48 8b 15 27 29 02 00 	mov    0x22927(%rip),%rdx        # 2ff98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    d671:	48 89 d6             	mov    %rdx,%rsi
    d674:	48 89 c7             	mov    %rax,%rdi
    d677:	e8 54 6e ff ff       	call   44d0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    d67c:	b8 00 00 00 00       	mov    $0x0,%eax
}
    d681:	c9                   	leave
    d682:	c3                   	ret

000000000000d683 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    d683:	55                   	push   %rbp
    d684:	48 89 e5             	mov    %rsp,%rbp
    d687:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    d68b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d68f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d693:	0f 11 00             	movups %xmm0,(%rax)
    d696:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    d69a:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    d69e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6a2:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    d6a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6ac:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    d6b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6b7:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    d6be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6c2:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # d622 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    d6c9:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    d6cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6d1:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    d6d8:	00 
}
    d6d9:	90                   	nop
    d6da:	5d                   	pop    %rbp
    d6db:	c3                   	ret

000000000000d6dc <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    d6dc:	55                   	push   %rbp
    d6dd:	48 89 e5             	mov    %rsp,%rbp
    d6e0:	48 83 ec 30          	sub    $0x30,%rsp
    d6e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d6e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d6ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d6f0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    d6f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6f8:	48 8d 15 b1 12 01 00 	lea    0x112b1(%rip),%rdx        # 1e9b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    d6ff:	48 89 d6             	mov    %rdx,%rsi
    d702:	48 89 c7             	mov    %rax,%rdi
    d705:	e8 06 6d ff ff       	call   4410 <vkGetInstanceProcAddr@plt>
    d70a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    d70e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d713:	75 07                	jne    d71c <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    d715:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    d71a:	eb 1b                	jmp    d737 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    d71c:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    d720:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d724:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d728:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    d72c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d730:	48 89 c7             	mov    %rax,%rdi
    d733:	41 ff d0             	call   *%r8
    d736:	90                   	nop
}
    d737:	c9                   	leave
    d738:	c3                   	ret

000000000000d739 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    d739:	55                   	push   %rbp
    d73a:	48 89 e5             	mov    %rsp,%rbp
    d73d:	41 54                	push   %r12
    d73f:	53                   	push   %rbx
    d740:	48 83 ec 50          	sub    $0x50,%rsp
    d744:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    d748:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d74c:	48 89 c7             	mov    %rax,%rdi
    d74f:	e8 2f ff ff ff       	call   d683 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    d754:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    d75b:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    d75c:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    d760:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    d764:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d768:	48 89 d1             	mov    %rdx,%rcx
    d76b:	ba 00 00 00 00       	mov    $0x0,%edx
    d770:	48 89 c7             	mov    %rax,%rdi
    d773:	e8 64 ff ff ff       	call   d6dc <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    d778:	85 c0                	test   %eax,%eax
    d77a:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    d77d:	84 c0                	test   %al,%al
    d77f:	74 3b                	je     d7bc <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    d781:	bf 10 00 00 00       	mov    $0x10,%edi
    d786:	e8 25 6a ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    d78b:	48 89 c3             	mov    %rax,%rbx
    d78e:	48 8d 05 3b 12 01 00 	lea    0x1123b(%rip),%rax        # 1e9d0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    d795:	48 89 c6             	mov    %rax,%rsi
    d798:	48 89 df             	mov    %rbx,%rdi
    d79b:	e8 90 69 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    d7a0:	48 8b 05 01 28 02 00 	mov    0x22801(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d7a7:	48 89 c2             	mov    %rax,%rdx
    d7aa:	48 8d 05 8f 25 02 00 	lea    0x2258f(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d7b1:	48 89 c6             	mov    %rax,%rsi
    d7b4:	48 89 df             	mov    %rbx,%rdi
    d7b7:	e8 94 70 ff ff       	call   4850 <__cxa_throw@plt>
  }
  return debugMessenger;
    d7bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d7c0:	eb 16                	jmp    d7d8 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    d7c2:	49 89 c4             	mov    %rax,%r12
    d7c5:	48 89 df             	mov    %rbx,%rdi
    d7c8:	e8 f3 6a ff ff       	call   42c0 <__cxa_free_exception@plt>
    d7cd:	4c 89 e0             	mov    %r12,%rax
    d7d0:	48 89 c7             	mov    %rax,%rdi
    d7d3:	e8 d8 70 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    d7d8:	48 83 c4 50          	add    $0x50,%rsp
    d7dc:	5b                   	pop    %rbx
    d7dd:	41 5c                	pop    %r12
    d7df:	5d                   	pop    %rbp
    d7e0:	c3                   	ret

000000000000d7e1 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    d7e1:	55                   	push   %rbp
    d7e2:	48 89 e5             	mov    %rsp,%rbp
    d7e5:	48 83 ec 30          	sub    $0x30,%rsp
    d7e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d7ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d7f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    d7f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7f9:	48 8d 15 f0 11 01 00 	lea    0x111f0(%rip),%rdx        # 1e9f0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    d800:	48 89 d6             	mov    %rdx,%rsi
    d803:	48 89 c7             	mov    %rax,%rdi
    d806:	e8 05 6c ff ff       	call   4410 <vkGetInstanceProcAddr@plt>
    d80b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    d80f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d814:	74 19                	je     d82f <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    d816:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    d81a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d81e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d826:	48 89 ce             	mov    %rcx,%rsi
    d829:	48 89 c7             	mov    %rax,%rdi
    d82c:	41 ff d0             	call   *%r8
  }
}
    d82f:	90                   	nop
    d830:	c9                   	leave
    d831:	c3                   	ret

000000000000d832 <_Z41__static_initialization_and_destruction_0ii>:

    d832:	55                   	push   %rbp
    d833:	48 89 e5             	mov    %rsp,%rbp
    d836:	48 83 ec 10          	sub    $0x10,%rsp
    d83a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d83d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d840:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    d844:	75 3b                	jne    d881 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d846:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    d84d:	75 32                	jne    d881 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d84f:	48 8d 05 b2 2d 02 00 	lea    0x22db2(%rip),%rax        # 30608 <_ZStL8__ioinit>
    d856:	48 89 c7             	mov    %rax,%rdi
    d859:	e8 02 6f ff ff       	call   4760 <_ZNSt8ios_base4InitC1Ev@plt>
    d85e:	48 8d 05 33 2c 02 00 	lea    0x22c33(%rip),%rax        # 30498 <__dso_handle>
    d865:	48 89 c2             	mov    %rax,%rdx
    d868:	48 8d 05 99 2d 02 00 	lea    0x22d99(%rip),%rax        # 30608 <_ZStL8__ioinit>
    d86f:	48 89 c6             	mov    %rax,%rsi
    d872:	48 8b 05 4f 27 02 00 	mov    0x2274f(%rip),%rax        # 2ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    d879:	48 89 c7             	mov    %rax,%rdi
    d87c:	e8 2f 6b ff ff       	call   43b0 <__cxa_atexit@plt>
    d881:	90                   	nop
    d882:	c9                   	leave
    d883:	c3                   	ret

000000000000d884 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    d884:	55                   	push   %rbp
    d885:	48 89 e5             	mov    %rsp,%rbp
    d888:	be ff ff 00 00       	mov    $0xffff,%esi
    d88d:	bf 01 00 00 00       	mov    $0x1,%edi
    d892:	e8 9b ff ff ff       	call   d832 <_Z41__static_initialization_and_destruction_0ii>
    d897:	5d                   	pop    %rbp
    d898:	c3                   	ret

000000000000d899 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    d899:	55                   	push   %rbp
    d89a:	48 89 e5             	mov    %rsp,%rbp
    d89d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    d8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8a9:	0f b6 00             	movzbl (%rax),%eax
    d8ac:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    d8ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d8b2:	0f b6 00             	movzbl (%rax),%eax
    d8b5:	38 c2                	cmp    %al,%dl
    d8b7:	0f 92 c0             	setb   %al
      }
    d8ba:	5d                   	pop    %rbp
    d8bb:	c3                   	ret

000000000000d8bc <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    d8bc:	55                   	push   %rbp
    d8bd:	48 89 e5             	mov    %rsp,%rbp
    d8c0:	48 83 ec 30          	sub    $0x30,%rsp
    d8c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d8c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d8cc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    d8d0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d8d5:	75 0a                	jne    d8e1 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    d8d7:	b8 00 00 00 00       	mov    $0x0,%eax
    d8dc:	e9 99 00 00 00       	jmp    d97a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    d8e1:	e8 ad 74 ff ff       	call   4d93 <_ZSt23__is_constant_evaluatedv>
    d8e6:	84 c0                	test   %al,%al
    d8e8:	74 78                	je     d962 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    d8ea:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    d8f1:	00 
    d8f2:	eb 5d                	jmp    d951 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    d8f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d8f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8fc:	48 01 c2             	add    %rax,%rdx
    d8ff:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    d903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d907:	48 01 c8             	add    %rcx,%rax
    d90a:	48 89 d6             	mov    %rdx,%rsi
    d90d:	48 89 c7             	mov    %rax,%rdi
    d910:	e8 84 ff ff ff       	call   d899 <_ZNSt11char_traitsIcE2ltERKcS2_>
    d915:	84 c0                	test   %al,%al
    d917:	74 07                	je     d920 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    d919:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d91e:	eb 5a                	jmp    d97a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    d920:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d928:	48 01 c2             	add    %rax,%rdx
    d92b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d92f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d933:	48 01 c8             	add    %rcx,%rax
    d936:	48 89 d6             	mov    %rdx,%rsi
    d939:	48 89 c7             	mov    %rax,%rdi
    d93c:	e8 58 ff ff ff       	call   d899 <_ZNSt11char_traitsIcE2ltERKcS2_>
    d941:	84 c0                	test   %al,%al
    d943:	74 07                	je     d94c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    d945:	b8 01 00 00 00       	mov    $0x1,%eax
    d94a:	eb 2e                	jmp    d97a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    d94c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    d951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d955:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    d959:	72 99                	jb     d8f4 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    d95b:	b8 00 00 00 00       	mov    $0x0,%eax
    d960:	eb 18                	jmp    d97a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    d962:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d966:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d96a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d96e:	48 89 ce             	mov    %rcx,%rsi
    d971:	48 89 c7             	mov    %rax,%rdi
    d974:	e8 17 68 ff ff       	call   4190 <memcmp@plt>
    d979:	90                   	nop
      }
    d97a:	c9                   	leave
    d97b:	c3                   	ret

000000000000d97c <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    d97c:	55                   	push   %rbp
    d97d:	48 89 e5             	mov    %rsp,%rbp
    d980:	48 83 ec 10          	sub    $0x10,%rsp
    d984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d988:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    d98c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d990:	48 89 c7             	mov    %rax,%rdi
    d993:	e8 06 74 ff ff       	call   4d9e <_ZNSt11char_traitsIcE6lengthEPKc>
    d998:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d99c:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    d99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    d9ab:	90                   	nop
    d9ac:	c9                   	leave
    d9ad:	c3                   	ret

000000000000d9ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    d9ae:	55                   	push   %rbp
    d9af:	48 89 e5             	mov    %rsp,%rbp
    d9b2:	48 83 ec 20          	sub    $0x20,%rsp
    d9b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    d9ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d9be:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d9c2:	48 89 d6             	mov    %rdx,%rsi
    d9c5:	48 89 c7             	mov    %rax,%rdi
    d9c8:	e8 27 01 00 00       	call   daf4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    d9cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9d1:	c9                   	leave
    d9d2:	c3                   	ret
    d9d3:	90                   	nop

000000000000d9d4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d9d4:	55                   	push   %rbp
    d9d5:	48 89 e5             	mov    %rsp,%rbp
    d9d8:	48 83 ec 20          	sub    $0x20,%rsp
    d9dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    d9e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9e4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d9e8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d9ec:	48 89 d6             	mov    %rdx,%rsi
    d9ef:	48 89 c7             	mov    %rax,%rdi
    d9f2:	e8 fd 00 00 00       	call   daf4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    d9f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9fb:	c9                   	leave
    d9fc:	c3                   	ret

000000000000d9fd <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d9fd:	55                   	push   %rbp
    d9fe:	48 89 e5             	mov    %rsp,%rbp
    da01:	53                   	push   %rbx
    da02:	48 83 ec 18          	sub    $0x18,%rsp
    da06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    da0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da12:	48 89 c7             	mov    %rax,%rdi
    da15:	e8 f8 00 00 00       	call   db12 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    da1a:	48 8b 18             	mov    (%rax),%rbx
    da1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    da21:	48 89 c7             	mov    %rax,%rdi
    da24:	e8 e9 00 00 00       	call   db12 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    da29:	48 8b 00             	mov    (%rax),%rax
    da2c:	48 39 c3             	cmp    %rax,%rbx
    da2f:	0f 95 c0             	setne  %al
    da32:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    da36:	c9                   	leave
    da37:	c3                   	ret

000000000000da38 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    da38:	55                   	push   %rbp
    da39:	48 89 e5             	mov    %rsp,%rbp
    da3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    da40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da44:	48 8b 00             	mov    (%rax),%rax
    da47:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    da4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da52:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    da55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    da59:	5d                   	pop    %rbp
    da5a:	c3                   	ret
    da5b:	90                   	nop

000000000000da5c <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    da5c:	55                   	push   %rbp
    da5d:	48 89 e5             	mov    %rsp,%rbp
    da60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    da64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da68:	48 8b 00             	mov    (%rax),%rax
    da6b:	5d                   	pop    %rbp
    da6c:	c3                   	ret
    da6d:	90                   	nop

000000000000da6e <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    da6e:	55                   	push   %rbp
    da6f:	48 89 e5             	mov    %rsp,%rbp
    da72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    da76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da7a:	48 8b 00             	mov    (%rax),%rax
    da7d:	5d                   	pop    %rbp
    da7e:	c3                   	ret

000000000000da7f <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    da7f:	55                   	push   %rbp
    da80:	48 89 e5             	mov    %rsp,%rbp
    da83:	53                   	push   %rbx
    da84:	48 83 ec 28          	sub    $0x28,%rsp
    da88:	48 89 f0             	mov    %rsi,%rax
    da8b:	49 89 f8             	mov    %rdi,%r8
    da8e:	4c 89 c6             	mov    %r8,%rsi
    da91:	4c 89 cf             	mov    %r9,%rdi
    da94:	48 89 c7             	mov    %rax,%rdi
    da97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    da9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da9f:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    daa3:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    daa7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    daab:	48 89 c7             	mov    %rax,%rdi
    daae:	e8 bb ff ff ff       	call   da6e <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    dab3:	48 89 c3             	mov    %rax,%rbx
    dab6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    daba:	48 89 c7             	mov    %rax,%rdi
    dabd:	e8 ac ff ff ff       	call   da6e <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    dac2:	48 39 c3             	cmp    %rax,%rbx
    dac5:	75 22                	jne    dae9 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    dac7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    dacb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dacf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    dad3:	48 89 ce             	mov    %rcx,%rsi
    dad6:	48 89 c7             	mov    %rax,%rdi
    dad9:	e8 42 00 00 00       	call   db20 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    dade:	85 c0                	test   %eax,%eax
    dae0:	75 07                	jne    dae9 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    dae2:	b8 01 00 00 00       	mov    $0x1,%eax
    dae7:	eb 05                	jmp    daee <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    dae9:	b8 00 00 00 00       	mov    $0x0,%eax
    daee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    daf2:	c9                   	leave
    daf3:	c3                   	ret

000000000000daf4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    daf4:	55                   	push   %rbp
    daf5:	48 89 e5             	mov    %rsp,%rbp
    daf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dafc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    db00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db04:	48 8b 10             	mov    (%rax),%rdx
    db07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db0b:	48 89 10             	mov    %rdx,(%rax)
    db0e:	90                   	nop
    db0f:	5d                   	pop    %rbp
    db10:	c3                   	ret
    db11:	90                   	nop

000000000000db12 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    db12:	55                   	push   %rbp
    db13:	48 89 e5             	mov    %rsp,%rbp
    db16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    db1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db1e:	5d                   	pop    %rbp
    db1f:	c3                   	ret

000000000000db20 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    db20:	55                   	push   %rbp
    db21:	48 89 e5             	mov    %rsp,%rbp
    db24:	48 83 ec 30          	sub    $0x30,%rsp
    db28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    db2c:	48 89 d1             	mov    %rdx,%rcx
    db2f:	48 89 f0             	mov    %rsi,%rax
    db32:	48 89 fa             	mov    %rdi,%rdx
    db35:	48 89 ca             	mov    %rcx,%rdx
    db38:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    db3c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    db40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db44:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    db48:	48 89 d6             	mov    %rdx,%rsi
    db4b:	48 89 c7             	mov    %rax,%rdi
    db4e:	e8 dd 7a ff ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
    db53:	48 8b 00             	mov    (%rax),%rax
    db56:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    db5a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    db5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db62:	48 8b 40 08          	mov    0x8(%rax),%rax
    db66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db6a:	48 89 ce             	mov    %rcx,%rsi
    db6d:	48 89 c7             	mov    %rax,%rdi
    db70:	e8 47 fd ff ff       	call   d8bc <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    db75:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    db78:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    db7c:	75 19                	jne    db97 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    db7e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    db82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db86:	48 8b 00             	mov    (%rax),%rax
    db89:	48 89 d6             	mov    %rdx,%rsi
    db8c:	48 89 c7             	mov    %rax,%rdi
    db8f:	e8 08 00 00 00       	call   db9c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    db94:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    db97:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    db9a:	c9                   	leave
    db9b:	c3                   	ret

000000000000db9c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    db9c:	55                   	push   %rbp
    db9d:	48 89 e5             	mov    %rsp,%rbp
    dba0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dba4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    dba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbac:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    dbb0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    dbb4:	b8 00 00 00 80       	mov    $0x80000000,%eax
    dbb9:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    dbbd:	7c 07                	jl     dbc6 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    dbbf:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    dbc4:	eb 1b                	jmp    dbe1 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    dbc6:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    dbcd:	ff ff ff 
    dbd0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    dbd4:	7f 07                	jg     dbdd <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    dbd6:	b8 00 00 00 80       	mov    $0x80000000,%eax
    dbdb:	eb 04                	jmp    dbe1 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    dbdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    dbe1:	5d                   	pop    %rbp
    dbe2:	c3                   	ret

000000000000dbe3 <_Z41__static_initialization_and_destruction_0ii>:
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};

} /* namespace vkh */
    dbe3:	55                   	push   %rbp
    dbe4:	48 89 e5             	mov    %rsp,%rbp
    dbe7:	48 83 ec 10          	sub    $0x10,%rsp
    dbeb:	89 7d fc             	mov    %edi,-0x4(%rbp)
    dbee:	89 75 f8             	mov    %esi,-0x8(%rbp)
    dbf1:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    dbf5:	75 3b                	jne    dc32 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    dbf7:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    dbfe:	75 32                	jne    dc32 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    dc00:	48 8d 05 02 2a 02 00 	lea    0x22a02(%rip),%rax        # 30609 <_ZStL8__ioinit>
    dc07:	48 89 c7             	mov    %rax,%rdi
    dc0a:	e8 51 6b ff ff       	call   4760 <_ZNSt8ios_base4InitC1Ev@plt>
    dc0f:	48 8d 05 82 28 02 00 	lea    0x22882(%rip),%rax        # 30498 <__dso_handle>
    dc16:	48 89 c2             	mov    %rax,%rdx
    dc19:	48 8d 05 e9 29 02 00 	lea    0x229e9(%rip),%rax        # 30609 <_ZStL8__ioinit>
    dc20:	48 89 c6             	mov    %rax,%rsi
    dc23:	48 8b 05 9e 23 02 00 	mov    0x2239e(%rip),%rax        # 2ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    dc2a:	48 89 c7             	mov    %rax,%rdi
    dc2d:	e8 7e 67 ff ff       	call   43b0 <__cxa_atexit@plt>
    dc32:	90                   	nop
    dc33:	c9                   	leave
    dc34:	c3                   	ret

000000000000dc35 <_GLOBAL__sub_I_vkh.cpp>:
    dc35:	55                   	push   %rbp
    dc36:	48 89 e5             	mov    %rsp,%rbp
    dc39:	be ff ff 00 00       	mov    $0xffff,%esi
    dc3e:	bf 01 00 00 00       	mov    $0x1,%edi
    dc43:	e8 9b ff ff ff       	call   dbe3 <_Z41__static_initialization_and_destruction_0ii>
    dc48:	5d                   	pop    %rbp
    dc49:	c3                   	ret

000000000000dc4a <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    dc4a:	55                   	push   %rbp
    dc4b:	48 89 e5             	mov    %rsp,%rbp
    dc4e:	48 83 ec 10          	sub    $0x10,%rsp
    dc52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    dc56:	e8 15 69 ff ff       	call   4570 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    dc5b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    dc61:	b9 00 00 00 00       	mov    $0x0,%ecx
    dc66:	48 8d 05 87 20 01 00 	lea    0x12087(%rip),%rax        # 1fcf4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    dc6d:	48 89 c2             	mov    %rax,%rdx
    dc70:	be 58 02 00 00       	mov    $0x258,%esi
    dc75:	bf 20 03 00 00       	mov    $0x320,%edi
    dc7a:	e8 1c 87 ff ff       	call   639b <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    dc7f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc83:	48 89 02             	mov    %rax,(%rdx)
  glfwSetWindowUserPointer(window, this);
    dc86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc8a:	48 8b 00             	mov    (%rax),%rax
    dc8d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc91:	48 89 d6             	mov    %rdx,%rsi
    dc94:	48 89 c7             	mov    %rax,%rdi
    dc97:	e8 34 65 ff ff       	call   41d0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    dc9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dca0:	48 8b 00             	mov    (%rax),%rax
    dca3:	48 8d 15 86 23 00 00 	lea    0x2386(%rip),%rdx        # 10030 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>
    dcaa:	48 89 d6             	mov    %rdx,%rsi
    dcad:	48 89 c7             	mov    %rax,%rdi
    dcb0:	e8 9b 6a ff ff       	call   4750 <glfwSetFramebufferSizeCallback@plt>
}
    dcb5:	90                   	nop
    dcb6:	c9                   	leave
    dcb7:	c3                   	ret

000000000000dcb8 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    dcb8:	55                   	push   %rbp
    dcb9:	48 89 e5             	mov    %rsp,%rbp
    dcbc:	53                   	push   %rbx
    dcbd:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    dcc4:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    dccb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dccf:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    dcd3:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    dcd7:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    dcdb:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    dce2:	48 8d 05 0b 20 01 00 	lea    0x1200b(%rip),%rax        # 1fcf4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c>
    dce9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    dced:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    dcf4:	48 8d 05 0c 20 01 00 	lea    0x1200c(%rip),%rax        # 1fd07 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f>
    dcfb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    dcff:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    dd06:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    dd0d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dd11:	48 89 c7             	mov    %rax,%rdi
    dd14:	e8 e9 a0 ff ff       	call   7e02 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    dd19:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dd1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dd21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd25:	48 89 c7             	mov    %rax,%rdi
    dd28:	e8 2b 4d 00 00       	call   12a58 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    dd2d:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    dd34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd38:	48 89 c7             	mov    %rax,%rdi
    dd3b:	e8 3e 4d 00 00       	call   12a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    dd40:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    dd47:	eb 3c                	jmp    dd85 <_ZN9VulkanApp14createInstanceEv+0xcd>
    dd49:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    dd50:	48 89 c7             	mov    %rax,%rdi
    dd53:	e8 aa 4d 00 00       	call   12b02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    dd58:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    dd5c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    dd63:	48 8d 50 10          	lea    0x10(%rax),%rdx
    dd67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd6b:	48 89 c6             	mov    %rax,%rsi
    dd6e:	48 89 d7             	mov    %rdx,%rdi
    dd71:	e8 9e 4d 00 00       	call   12b14 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    dd76:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    dd7d:	48 89 c7             	mov    %rax,%rdi
    dd80:	e8 5d 4d 00 00       	call   12ae2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    dd85:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    dd8c:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    dd93:	48 89 d6             	mov    %rdx,%rsi
    dd96:	48 89 c7             	mov    %rax,%rdi
    dd99:	e8 09 4d 00 00       	call   12aa7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    dd9e:	84 c0                	test   %al,%al
    dda0:	75 a7                	jne    dd49 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    dda2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dda6:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    ddad:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ddb4:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    ddb8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ddbf:	48 89 c7             	mov    %rax,%rdi
    ddc2:	e8 bc f8 ff ff       	call   d683 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    ddc7:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    ddce:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    ddd1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ddd8:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    dddf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    dde3:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    ddea:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ddf1:	48 83 c0 28          	add    $0x28,%rax
    ddf5:	48 89 c7             	mov    %rax,%rdi
    ddf8:	e8 bb 4d 00 00       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ddfd:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    de03:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    de0a:	48 83 c0 28          	add    $0x28,%rax
    de0e:	48 89 c7             	mov    %rax,%rdi
    de11:	e8 c6 4d 00 00       	call   12bdc <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    de16:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    de1d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    de24:	48 83 c0 10          	add    $0x10,%rax
    de28:	48 89 c7             	mov    %rax,%rdi
    de2b:	e8 88 4d 00 00       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    de30:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    de36:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    de3d:	48 83 c0 10          	add    $0x10,%rax
    de41:	48 89 c7             	mov    %rax,%rdi
    de44:	e8 b7 4d 00 00       	call   12c00 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    de49:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    de50:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    de57:	be 00 00 00 00       	mov    $0x0,%esi
    de5c:	48 89 c7             	mov    %rax,%rdi
    de5f:	e8 7e 85 ff ff       	call   63e2 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    de64:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    de6b:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    de6f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    de73:	48 89 c7             	mov    %rax,%rdi
    de76:	e8 99 4b 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    de7b:	eb 1a                	jmp    de97 <_ZN9VulkanApp14createInstanceEv+0x1df>
    de7d:	48 89 c3             	mov    %rax,%rbx
    de80:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    de84:	48 89 c7             	mov    %rax,%rdi
    de87:	e8 88 4b 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    de8c:	48 89 d8             	mov    %rbx,%rax
    de8f:	48 89 c7             	mov    %rax,%rdi
    de92:	e8 19 6a ff ff       	call   48b0 <_Unwind_Resume@plt>
    de97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de9b:	c9                   	leave
    de9c:	c3                   	ret
    de9d:	90                   	nop

000000000000de9e <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    de9e:	55                   	push   %rbp
    de9f:	48 89 e5             	mov    %rsp,%rbp
    dea2:	41 54                	push   %r12
    dea4:	53                   	push   %rbx
    dea5:	48 83 ec 10          	sub    $0x10,%rsp
    dea9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    dead:	e8 1d f6 ff ff       	call   d4cf <_ZN3vkh27checkValidationLayerSupportEv>
    deb2:	0f b6 c0             	movzbl %al,%eax
    deb5:	85 c0                	test   %eax,%eax
    deb7:	0f 94 c0             	sete   %al
    deba:	84 c0                	test   %al,%al
    debc:	74 3b                	je     def9 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    debe:	bf 10 00 00 00       	mov    $0x10,%edi
    dec3:	e8 e8 62 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    dec8:	48 89 c3             	mov    %rax,%rbx
    decb:	48 8d 05 46 1e 01 00 	lea    0x11e46(%rip),%rax        # 1fd18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x40>
    ded2:	48 89 c6             	mov    %rax,%rsi
    ded5:	48 89 df             	mov    %rbx,%rdi
    ded8:	e8 53 62 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    dedd:	48 8b 05 c4 20 02 00 	mov    0x220c4(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dee4:	48 89 c2             	mov    %rax,%rdx
    dee7:	48 8d 05 52 1e 02 00 	lea    0x21e52(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    deee:	48 89 c6             	mov    %rax,%rsi
    def1:	48 89 df             	mov    %rbx,%rdi
    def4:	e8 57 69 ff ff       	call   4850 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    def9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    defd:	48 8b 40 08          	mov    0x8(%rax),%rax
    df01:	48 89 c7             	mov    %rax,%rdi
    df04:	e8 30 f8 ff ff       	call   d739 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    df09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    df0d:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    df11:	eb 16                	jmp    df29 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    df13:	49 89 c4             	mov    %rax,%r12
    df16:	48 89 df             	mov    %rbx,%rdi
    df19:	e8 a2 63 ff ff       	call   42c0 <__cxa_free_exception@plt>
    df1e:	4c 89 e0             	mov    %r12,%rax
    df21:	48 89 c7             	mov    %rax,%rdi
    df24:	e8 87 69 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    df29:	48 83 c4 10          	add    $0x10,%rsp
    df2d:	5b                   	pop    %rbx
    df2e:	41 5c                	pop    %r12
    df30:	5d                   	pop    %rbp
    df31:	c3                   	ret

000000000000df32 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    df32:	55                   	push   %rbp
    df33:	48 89 e5             	mov    %rsp,%rbp
    df36:	48 83 ec 10          	sub    $0x10,%rsp
    df3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    df3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df42:	48 8b 08             	mov    (%rax),%rcx
    df45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df49:	48 8b 40 08          	mov    0x8(%rax),%rax
    df4d:	ba 00 00 00 00       	mov    $0x0,%edx
    df52:	48 89 ce             	mov    %rcx,%rsi
    df55:	48 89 c7             	mov    %rax,%rdi
    df58:	e8 b0 85 ff ff       	call   650d <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    df5d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    df61:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    df65:	90                   	nop
    df66:	c9                   	leave
    df67:	c3                   	ret

000000000000df68 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    df68:	55                   	push   %rbp
    df69:	48 89 e5             	mov    %rsp,%rbp
    df6c:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    df73:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    df7a:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    df81:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    df88:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    df8f:	48 89 d6             	mov    %rdx,%rsi
    df92:	48 89 c7             	mov    %rax,%rdi
    df95:	e8 35 a1 ff ff       	call   80cf <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    df9a:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    dfa0:	83 f8 02             	cmp    $0x2,%eax
    dfa3:	0f 94 c0             	sete   %al
}
    dfa6:	c9                   	leave
    dfa7:	c3                   	ret

000000000000dfa8 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    dfa8:	55                   	push   %rbp
    dfa9:	48 89 e5             	mov    %rsp,%rbp
    dfac:	53                   	push   %rbx
    dfad:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    dfb4:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    dfbb:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    dfc2:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    dfc9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dfcd:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    dfd4:	48 89 d6             	mov    %rdx,%rsi
    dfd7:	48 89 c7             	mov    %rax,%rdi
    dfda:	e8 19 a2 ff ff       	call   81f8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    dfdf:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    dfe3:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    dfea:	48 89 d6             	mov    %rdx,%rsi
    dfed:	48 89 c7             	mov    %rax,%rdi
    dff0:	e8 37 a3 ff ff       	call   832c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    dff5:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    dffc:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e000:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e007:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    e00e:	48 89 ce             	mov    %rcx,%rsi
    e011:	48 89 c7             	mov    %rax,%rdi
    e014:	e8 4c a4 ff ff       	call   8465 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    e019:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e020:	00 
    e021:	e9 c5 00 00 00       	jmp    e0eb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    e026:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e02a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e02e:	48 89 d6             	mov    %rdx,%rsi
    e031:	48 89 c7             	mov    %rax,%rdi
    e034:	e8 51 b4 ff ff       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    e039:	48 89 c7             	mov    %rax,%rdi
    e03c:	e8 11 4c 00 00       	call   12c52 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    e041:	84 c0                	test   %al,%al
    e043:	74 48                	je     e08d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    e045:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e049:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e04d:	48 89 d6             	mov    %rdx,%rsi
    e050:	48 89 c7             	mov    %rax,%rdi
    e053:	e8 32 b4 ff ff       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    e058:	48 89 c7             	mov    %rax,%rdi
    e05b:	e8 f2 4b 00 00       	call   12c52 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    e060:	84 c0                	test   %al,%al
    e062:	74 29                	je     e08d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    e064:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e068:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e06f:	48 89 d6             	mov    %rdx,%rsi
    e072:	48 89 c7             	mov    %rax,%rdi
    e075:	e8 10 b4 ff ff       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    e07a:	48 89 c7             	mov    %rax,%rdi
    e07d:	e8 d0 4b 00 00       	call   12c52 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    e082:	84 c0                	test   %al,%al
    e084:	74 07                	je     e08d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    e086:	b8 01 00 00 00       	mov    $0x1,%eax
    e08b:	eb 05                	jmp    e092 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    e08d:	b8 00 00 00 00       	mov    $0x0,%eax
    e092:	84 c0                	test   %al,%al
    e094:	74 50                	je     e0e6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    e096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e09a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    e09d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e0a1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e0a5:	48 89 d6             	mov    %rdx,%rsi
    e0a8:	48 89 c7             	mov    %rax,%rdi
    e0ab:	e8 da b3 ff ff       	call   948a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    e0b0:	48 89 c7             	mov    %rax,%rdi
    e0b3:	e8 b4 4b 00 00       	call   12c6c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    e0b8:	48 89 c2             	mov    %rax,%rdx
    e0bb:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    e0bf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e0c3:	48 89 ce             	mov    %rcx,%rsi
    e0c6:	48 89 c7             	mov    %rax,%rdi
    e0c9:	e8 d0 4b 00 00       	call   12c9e <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    e0ce:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    e0d2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e0d9:	48 89 d6             	mov    %rdx,%rsi
    e0dc:	48 89 c7             	mov    %rax,%rdi
    e0df:	e8 10 4c 00 00       	call   12cf4 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    e0e4:	eb 2f                	jmp    e115 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    e0e6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e0eb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e0ef:	48 89 c7             	mov    %rax,%rdi
    e0f2:	e8 2d 4b 00 00       	call   12c24 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    e0f7:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    e0fb:	0f 92 c0             	setb   %al
    e0fe:	84 c0                	test   %al,%al
    e100:	0f 85 20 ff ff ff    	jne    e026 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    e106:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e10d:	48 89 c7             	mov    %rax,%rdi
    e110:	e8 a1 44 00 00       	call   125b6 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    e115:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e11c:	48 89 c7             	mov    %rax,%rdi
    e11f:	e8 66 b2 ff ff       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e124:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e128:	48 89 c7             	mov    %rax,%rdi
    e12b:	e8 5a b2 ff ff       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e130:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e134:	48 89 c7             	mov    %rax,%rdi
    e137:	e8 4e b2 ff ff       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e13c:	eb 3f                	jmp    e17d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    e13e:	48 89 c3             	mov    %rax,%rbx
    e141:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e148:	48 89 c7             	mov    %rax,%rdi
    e14b:	e8 3a b2 ff ff       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e150:	eb 03                	jmp    e155 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    e152:	48 89 c3             	mov    %rax,%rbx
    e155:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e159:	48 89 c7             	mov    %rax,%rdi
    e15c:	e8 29 b2 ff ff       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e161:	eb 03                	jmp    e166 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    e163:	48 89 c3             	mov    %rax,%rbx
    e166:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e16a:	48 89 c7             	mov    %rax,%rdi
    e16d:	e8 18 b2 ff ff       	call   938a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    e172:	48 89 d8             	mov    %rbx,%rax
    e175:	48 89 c7             	mov    %rax,%rdi
    e178:	e8 33 67 ff ff       	call   48b0 <_Unwind_Resume@plt>
    e17d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    e184:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e188:	c9                   	leave
    e189:	c3                   	ret

000000000000e18a <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    e18a:	55                   	push   %rbp
    e18b:	48 89 e5             	mov    %rsp,%rbp
    e18e:	41 54                	push   %r12
    e190:	53                   	push   %rbx
    e191:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    e198:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    e19f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e1a6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e1aa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e1ae:	48 89 d6             	mov    %rdx,%rsi
    e1b1:	48 89 c7             	mov    %rax,%rdi
    e1b4:	e8 a7 9d ff ff       	call   7f60 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    e1b9:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e1c0:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    e1c1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e1c5:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    e1c9:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    e1cd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e1d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e1d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e1d9:	48 89 c7             	mov    %rax,%rdi
    e1dc:	e8 47 4b 00 00       	call   12d28 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    e1e1:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    e1e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e1ec:	48 89 c7             	mov    %rax,%rdi
    e1ef:	e8 5a 4b 00 00       	call   12d4e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    e1f4:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e1fb:	e9 dd 00 00 00       	jmp    e2dd <_ZN9VulkanApp12createDeviceEv+0x153>
    e200:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    e207:	48 89 c7             	mov    %rax,%rdi
    e20a:	e8 c3 4b 00 00       	call   12dd2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    e20f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    e213:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e217:	48 8b 10             	mov    (%rax),%rdx
    e21a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e221:	48 89 d6             	mov    %rdx,%rsi
    e224:	48 89 c7             	mov    %rax,%rdi
    e227:	e8 3c fd ff ff       	call   df68 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    e22c:	84 c0                	test   %al,%al
    e22e:	74 41                	je     e271 <_ZN9VulkanApp12createDeviceEv+0xe7>
    e230:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e234:	48 8b 10             	mov    (%rax),%rdx
    e237:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e23e:	48 89 d6             	mov    %rdx,%rsi
    e241:	48 89 c7             	mov    %rax,%rdi
    e244:	e8 f9 02 00 00       	call   e542 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    e249:	84 c0                	test   %al,%al
    e24b:	74 24                	je     e271 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    e24d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e251:	48 8b 10             	mov    (%rax),%rdx
    e254:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e25b:	48 89 d6             	mov    %rdx,%rsi
    e25e:	48 89 c7             	mov    %rax,%rdi
    e261:	e8 16 06 00 00       	call   e87c <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    e266:	84 c0                	test   %al,%al
    e268:	74 07                	je     e271 <_ZN9VulkanApp12createDeviceEv+0xe7>
    e26a:	b8 01 00 00 00       	mov    $0x1,%eax
    e26f:	eb 05                	jmp    e276 <_ZN9VulkanApp12createDeviceEv+0xec>
    e271:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    e276:	84 c0                	test   %al,%al
    e278:	74 54                	je     e2ce <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    e27a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e27e:	48 8b 10             	mov    (%rax),%rdx
    e281:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    e288:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    e28f:	48 89 ce             	mov    %rcx,%rsi
    e292:	48 89 c7             	mov    %rax,%rdi
    e295:	e8 0e fd ff ff       	call   dfa8 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    e29a:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    e2a1:	48 89 c7             	mov    %rax,%rdi
    e2a4:	e8 3b 4b 00 00       	call   12de4 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    e2a9:	84 c0                	test   %al,%al
    e2ab:	74 21                	je     e2ce <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    e2ad:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    e2b4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e2b8:	48 89 d6             	mov    %rdx,%rsi
    e2bb:	48 89 c7             	mov    %rax,%rdi
    e2be:	e8 45 43 00 00       	call   12608 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    e2c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e2c7:	48 8b 00             	mov    (%rax),%rax
    e2ca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    e2ce:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    e2d5:	48 89 c7             	mov    %rax,%rdi
    e2d8:	e8 d5 4a 00 00       	call   12db2 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    e2dd:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    e2e4:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    e2eb:	48 89 d6             	mov    %rdx,%rsi
    e2ee:	48 89 c7             	mov    %rax,%rdi
    e2f1:	e8 81 4a 00 00       	call   12d77 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e2f6:	84 c0                	test   %al,%al
    e2f8:	0f 85 02 ff ff ff    	jne    e200 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    e2fe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e303:	75 3b                	jne    e340 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    e305:	bf 10 00 00 00       	mov    $0x10,%edi
    e30a:	e8 a1 5e ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    e30f:	48 89 c3             	mov    %rax,%rbx
    e312:	48 8d 05 27 1a 01 00 	lea    0x11a27(%rip),%rax        # 1fd40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    e319:	48 89 c6             	mov    %rax,%rsi
    e31c:	48 89 df             	mov    %rbx,%rdi
    e31f:	e8 0c 5e ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    e324:	48 8b 05 7d 1c 02 00 	mov    0x21c7d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e32b:	48 89 c2             	mov    %rax,%rdx
    e32e:	48 8d 05 0b 1a 02 00 	lea    0x21a0b(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e335:	48 89 c6             	mov    %rax,%rsi
    e338:	48 89 df             	mov    %rbx,%rdi
    e33b:	e8 10 65 ff ff       	call   4850 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    e340:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e344:	48 89 c7             	mov    %rax,%rdi
    e347:	e8 e6 42 00 00       	call   12632 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    e34c:	8b 00                	mov    (%rax),%eax
    e34e:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    e351:	f3 0f 10 05 ff 1e 01 	movss  0x11eff(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    e358:	00 
    e359:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    e35e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e362:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    e369:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e370:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    e375:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    e37c:	00 00 00 
  queueInfo.pNext = nullptr;
    e37f:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    e386:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    e38a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    e38d:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    e393:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    e39a:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    e39d:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    e3a1:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    e3a5:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    e3ac:	b8 00 00 00 00       	mov    $0x0,%eax
    e3b1:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    e3b6:	48 89 d7             	mov    %rdx,%rdi
    e3b9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    e3bc:	48 89 fa             	mov    %rdi,%rdx
    e3bf:	89 02                	mov    %eax,(%rdx)
    e3c1:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    e3c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3c9:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    e3d0:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    e3d7:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e3de:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e3e5:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    e3ec:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    e3ed:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    e3f4:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    e3f7:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    e3fe:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    e402:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    e409:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    e40c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e413:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    e41a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e421:	48 05 90 00 00 00    	add    $0x90,%rax
    e427:	48 89 c7             	mov    %rax,%rdi
    e42a:	e8 89 47 00 00       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    e42f:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    e435:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e43c:	48 05 90 00 00 00    	add    $0x90,%rax
    e442:	48 89 c7             	mov    %rax,%rdi
    e445:	e8 b6 47 00 00       	call   12c00 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    e44a:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    e451:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    e458:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    e45f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e466:	48 83 c0 28          	add    $0x28,%rax
    e46a:	48 89 c7             	mov    %rax,%rdi
    e46d:	e8 46 47 00 00       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    e472:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    e478:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e47f:	48 83 c0 28          	add    $0x28,%rax
    e483:	48 89 c7             	mov    %rax,%rdi
    e486:	e8 51 47 00 00       	call   12bdc <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    e48b:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    e492:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    e499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e49d:	ba 00 00 00 00       	mov    $0x0,%edx
    e4a2:	48 89 ce             	mov    %rcx,%rsi
    e4a5:	48 89 c7             	mov    %rax,%rdi
    e4a8:	e8 c8 7f ff ff       	call   6475 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    e4ad:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    e4b4:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    e4b8:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e4bf:	48 8d 50 60          	lea    0x60(%rax),%rdx
    e4c3:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e4ca:	48 8b 40 50          	mov    0x50(%rax),%rax
    e4ce:	8b 75 dc             	mov    -0x24(%rbp),%esi
    e4d1:	48 89 d1             	mov    %rdx,%rcx
    e4d4:	ba 00 00 00 00       	mov    $0x0,%edx
    e4d9:	48 89 c7             	mov    %rax,%rdi
    e4dc:	e8 8f 61 ff ff       	call   4670 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    e4e1:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e4e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e4ec:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    e4f0:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    e4f7:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e4fa:	89 50 68             	mov    %edx,0x68(%rax)
}
    e4fd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e501:	48 89 c7             	mov    %rax,%rdi
    e504:	e8 81 ab ff ff       	call   908a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    e509:	eb 2a                	jmp    e535 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    e50b:	49 89 c4             	mov    %rax,%r12
    e50e:	48 89 df             	mov    %rbx,%rdi
    e511:	e8 aa 5d ff ff       	call   42c0 <__cxa_free_exception@plt>
    e516:	4c 89 e3             	mov    %r12,%rbx
    e519:	eb 03                	jmp    e51e <_ZN9VulkanApp12createDeviceEv+0x394>
}
    e51b:	48 89 c3             	mov    %rax,%rbx
    e51e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e522:	48 89 c7             	mov    %rax,%rdi
    e525:	e8 60 ab ff ff       	call   908a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    e52a:	48 89 d8             	mov    %rbx,%rax
    e52d:	48 89 c7             	mov    %rax,%rdi
    e530:	e8 7b 63 ff ff       	call   48b0 <_Unwind_Resume@plt>
    e535:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    e53c:	5b                   	pop    %rbx
    e53d:	41 5c                	pop    %r12
    e53f:	5d                   	pop    %rbp
    e540:	c3                   	ret
    e541:	90                   	nop

000000000000e542 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    e542:	55                   	push   %rbp
    e543:	48 89 e5             	mov    %rsp,%rbp
    e546:	53                   	push   %rbx
    e547:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    e54e:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    e555:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    e55c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e563:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    e56a:	ba 00 00 00 00       	mov    $0x0,%edx
    e56f:	48 89 ce             	mov    %rcx,%rsi
    e572:	48 89 c7             	mov    %rax,%rdi
    e575:	e8 11 97 ff ff       	call   7c8b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    e57a:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e581:	48 89 c7             	mov    %rax,%rdi
    e584:	e8 25 41 00 00       	call   126ae <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    e589:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e590:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e598:	48 89 c7             	mov    %rax,%rdi
    e59b:	e8 5a 49 00 00       	call   12efa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    e5a0:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e5a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5ab:	48 89 c7             	mov    %rax,%rdi
    e5ae:	e8 6d 49 00 00       	call   12f20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    e5b3:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e5ba:	e9 8c 00 00 00       	jmp    e64b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    e5bf:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e5c6:	48 89 c7             	mov    %rax,%rdi
    e5c9:	e8 da 49 00 00       	call   12fa8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    e5ce:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    e5d2:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e5d9:	48 89 c7             	mov    %rax,%rdi
    e5dc:	e8 df 62 ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    e5e1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e5e5:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    e5ec:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e5f3:	48 89 ce             	mov    %rcx,%rsi
    e5f6:	48 89 c7             	mov    %rax,%rdi
    e5f9:	e8 16 69 ff ff       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e5fe:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    e605:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e60c:	48 89 d6             	mov    %rdx,%rsi
    e60f:	48 89 c7             	mov    %rax,%rdi
    e612:	e8 a3 49 00 00       	call   12fba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    e617:	8b 10                	mov    (%rax),%edx
    e619:	83 c2 01             	add    $0x1,%edx
    e61c:	89 10                	mov    %edx,(%rax)
    e61e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e625:	48 89 c7             	mov    %rax,%rdi
    e628:	e8 33 5c ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e62d:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e634:	48 89 c7             	mov    %rax,%rdi
    e637:	e8 d4 5e ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    e63c:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e643:	48 89 c7             	mov    %rax,%rdi
    e646:	e8 39 49 00 00       	call   12f84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    e64b:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    e652:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e659:	48 89 d6             	mov    %rdx,%rsi
    e65c:	48 89 c7             	mov    %rax,%rdi
    e65f:	e8 e5 48 00 00       	call   12f49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e664:	84 c0                	test   %al,%al
    e666:	0f 85 53 ff ff ff    	jne    e5bf <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    e66c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    e673:	48 05 90 00 00 00    	add    $0x90,%rax
    e679:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e67d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e681:	48 89 c7             	mov    %rax,%rdi
    e684:	e8 cf 43 00 00       	call   12a58 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    e689:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    e690:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e694:	48 89 c7             	mov    %rax,%rdi
    e697:	e8 e2 43 00 00       	call   12a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    e69c:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    e6a3:	e9 ed 00 00 00       	jmp    e795 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    e6a8:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    e6af:	48 89 c7             	mov    %rax,%rdi
    e6b2:	e8 4b 44 00 00       	call   12b02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e6b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    e6bb:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    e6bf:	48 89 c7             	mov    %rax,%rdi
    e6c2:	e8 f9 61 ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    e6c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6cb:	48 8b 08             	mov    (%rax),%rcx
    e6ce:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    e6d2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    e6d9:	48 89 ce             	mov    %rcx,%rsi
    e6dc:	48 89 c7             	mov    %rax,%rdi
    e6df:	e8 30 68 ff ff       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e6e4:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    e6eb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e6f2:	48 89 d6             	mov    %rdx,%rsi
    e6f5:	48 89 c7             	mov    %rax,%rdi
    e6f8:	e8 bd 48 00 00       	call   12fba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    e6fd:	8b 10                	mov    (%rax),%edx
    e6ff:	83 c2 01             	add    $0x1,%edx
    e702:	89 10                	mov    %edx,(%rax)
    e704:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    e70b:	48 89 c7             	mov    %rax,%rdi
    e70e:	e8 4d 5b ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e713:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    e717:	48 89 c7             	mov    %rax,%rdi
    e71a:	e8 f1 5d ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    e71f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e723:	48 89 c7             	mov    %rax,%rdi
    e726:	e8 95 61 ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    e72b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e72f:	48 8b 08             	mov    (%rax),%rcx
    e732:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    e736:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e73a:	48 89 ce             	mov    %rcx,%rsi
    e73d:	48 89 c7             	mov    %rax,%rdi
    e740:	e8 cf 67 ff ff       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e745:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    e749:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e750:	48 89 d6             	mov    %rdx,%rsi
    e753:	48 89 c7             	mov    %rax,%rdi
    e756:	e8 5f 48 00 00       	call   12fba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    e75b:	8b 00                	mov    (%rax),%eax
    e75d:	83 f8 01             	cmp    $0x1,%eax
    e760:	0f 96 c3             	setbe  %bl
    e763:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e767:	48 89 c7             	mov    %rax,%rdi
    e76a:	e8 f1 5a ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e76f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e773:	48 89 c7             	mov    %rax,%rdi
    e776:	e8 95 5d ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    e77b:	84 db                	test   %bl,%bl
    e77d:	74 07                	je     e786 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    e77f:	bb 00 00 00 00       	mov    $0x0,%ebx
    e784:	eb 35                	jmp    e7bb <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    e786:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    e78d:	48 89 c7             	mov    %rax,%rdi
    e790:	e8 4d 43 00 00       	call   12ae2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    e795:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    e79c:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    e7a3:	48 89 d6             	mov    %rdx,%rsi
    e7a6:	48 89 c7             	mov    %rax,%rdi
    e7a9:	e8 f9 42 00 00       	call   12aa7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e7ae:	84 c0                	test   %al,%al
    e7b0:	0f 85 f2 fe ff ff    	jne    e6a8 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    e7b6:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    e7bb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e7c2:	48 89 c7             	mov    %rax,%rdi
    e7c5:	e8 00 3f 00 00       	call   126ca <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    e7ca:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e7d1:	48 89 c7             	mov    %rax,%rdi
    e7d4:	e8 27 a6 ff ff       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    e7d9:	89 d8                	mov    %ebx,%eax
    e7db:	e9 96 00 00 00       	jmp    e876 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    e7e0:	48 89 c3             	mov    %rax,%rbx
    e7e3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e7ea:	48 89 c7             	mov    %rax,%rdi
    e7ed:	e8 6e 5a ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e7f2:	eb 03                	jmp    e7f7 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    e7f4:	48 89 c3             	mov    %rax,%rbx
    e7f7:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e7fe:	48 89 c7             	mov    %rax,%rdi
    e801:	e8 0a 5d ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    e806:	eb 45                	jmp    e84d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    e808:	48 89 c3             	mov    %rax,%rbx
    e80b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    e812:	48 89 c7             	mov    %rax,%rdi
    e815:	e8 46 5a ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e81a:	eb 03                	jmp    e81f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    e81c:	48 89 c3             	mov    %rax,%rbx
    e81f:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    e823:	48 89 c7             	mov    %rax,%rdi
    e826:	e8 e5 5c ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    e82b:	eb 20                	jmp    e84d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    e82d:	48 89 c3             	mov    %rax,%rbx
    e830:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e834:	48 89 c7             	mov    %rax,%rdi
    e837:	e8 24 5a ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e83c:	eb 03                	jmp    e841 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    e83e:	48 89 c3             	mov    %rax,%rbx
    e841:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e845:	48 89 c7             	mov    %rax,%rdi
    e848:	e8 c3 5c ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
}
    e84d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e854:	48 89 c7             	mov    %rax,%rdi
    e857:	e8 6e 3e 00 00       	call   126ca <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    e85c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e863:	48 89 c7             	mov    %rax,%rdi
    e866:	e8 95 a5 ff ff       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    e86b:	48 89 d8             	mov    %rbx,%rax
    e86e:	48 89 c7             	mov    %rax,%rdi
    e871:	e8 3a 60 ff ff       	call   48b0 <_Unwind_Resume@plt>
    e876:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e87a:	c9                   	leave
    e87b:	c3                   	ret

000000000000e87c <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    e87c:	55                   	push   %rbp
    e87d:	48 89 e5             	mov    %rsp,%rbp
    e880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e884:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    e888:	b8 01 00 00 00       	mov    $0x1,%eax
}
    e88d:	5d                   	pop    %rbp
    e88e:	c3                   	ret
    e88f:	90                   	nop

000000000000e890 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    e890:	55                   	push   %rbp
    e891:	48 89 e5             	mov    %rsp,%rbp
    e894:	41 54                	push   %r12
    e896:	53                   	push   %rbx
    e897:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    e89e:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    e8a5:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    e8ac:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e8b3:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e8b7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e8be:	48 8b 48 58          	mov    0x58(%rax),%rcx
    e8c2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e8c6:	48 89 ce             	mov    %rcx,%rsi
    e8c9:	48 89 c7             	mov    %rax,%rdi
    e8cc:	e8 04 9d ff ff       	call   85d5 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    e8d1:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e8d8:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e8dc:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e8e3:	48 8b 48 58          	mov    0x58(%rax),%rcx
    e8e7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e8ee:	48 89 ce             	mov    %rcx,%rsi
    e8f1:	48 89 c7             	mov    %rax,%rdi
    e8f4:	e8 8a 9d ff ff       	call   8683 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    e8f9:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e900:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e904:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e90b:	48 8b 48 58          	mov    0x58(%rax),%rcx
    e90f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e916:	48 89 ce             	mov    %rcx,%rsi
    e919:	48 89 c7             	mov    %rax,%rdi
    e91c:	e8 d9 9e ff ff       	call   87fa <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    e921:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e928:	48 89 c6             	mov    %rax,%rsi
    e92b:	b8 00 00 00 00       	mov    $0x0,%eax
    e930:	ba 0d 00 00 00       	mov    $0xd,%edx
    e935:	48 89 f7             	mov    %rsi,%rdi
    e938:	48 89 d1             	mov    %rdx,%rcx
    e93b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    e93e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e945:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    e94b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e952:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e959:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    e95a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e961:	48 8b 50 48          	mov    0x48(%rax),%rdx
    e965:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e96c:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    e970:	8b 45 80             	mov    -0x80(%rbp),%eax
    e973:	83 c0 01             	add    $0x1,%eax
    e976:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    e979:	8b 45 84             	mov    -0x7c(%rbp),%eax
    e97c:	85 c0                	test   %eax,%eax
    e97e:	74 0e                	je     e98e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    e980:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    e983:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    e986:	73 06                	jae    e98e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    e988:	8b 45 84             	mov    -0x7c(%rbp),%eax
    e98b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    e98e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e995:	8b 55 ec             	mov    -0x14(%rbp),%edx
    e998:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    e99b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e9a2:	48 89 c7             	mov    %rax,%rdi
    e9a5:	e8 14 47 00 00       	call   130be <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    e9aa:	84 c0                	test   %al,%al
    e9ac:	74 3b                	je     e9e9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    e9ae:	bf 10 00 00 00       	mov    $0x10,%edi
    e9b3:	e8 f8 57 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    e9b8:	48 89 c3             	mov    %rax,%rbx
    e9bb:	48 8d 05 a2 13 01 00 	lea    0x113a2(%rip),%rax        # 1fd64 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8c>
    e9c2:	48 89 c6             	mov    %rax,%rsi
    e9c5:	48 89 df             	mov    %rbx,%rdi
    e9c8:	e8 63 57 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
    e9cd:	48 8b 05 d4 15 02 00 	mov    0x215d4(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e9d4:	48 89 c2             	mov    %rax,%rdx
    e9d7:	48 8d 05 62 13 02 00 	lea    0x21362(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e9de:	48 89 c6             	mov    %rax,%rsi
    e9e1:	48 89 df             	mov    %rbx,%rdi
    e9e4:	e8 67 5e ff ff       	call   4850 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    e9e9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e9f0:	be 00 00 00 00       	mov    $0x0,%esi
    e9f5:	48 89 c7             	mov    %rax,%rdi
    e9f8:	e8 03 47 00 00       	call   13100 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    e9fd:	8b 10                	mov    (%rax),%edx
    e9ff:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea06:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    ea09:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ea10:	be 00 00 00 00       	mov    $0x0,%esi
    ea15:	48 89 c7             	mov    %rax,%rdi
    ea18:	e8 e3 46 00 00       	call   13100 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    ea1d:	8b 50 04             	mov    0x4(%rax),%edx
    ea20:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea27:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    ea2a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ea31:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ea35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea39:	48 89 c7             	mov    %rax,%rdi
    ea3c:	e8 df 46 00 00       	call   13120 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    ea41:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    ea48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea4c:	48 89 c7             	mov    %rax,%rdi
    ea4f:	e8 f2 46 00 00       	call   13146 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    ea54:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    ea5b:	eb 5b                	jmp    eab8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    ea5d:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    ea64:	48 89 c7             	mov    %rax,%rdi
    ea67:	e8 5e 47 00 00       	call   131ca <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    ea6c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    ea70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ea74:	8b 00                	mov    (%rax),%eax
    ea76:	83 f8 2b             	cmp    $0x2b,%eax
    ea79:	75 2e                	jne    eaa9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    ea7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ea7f:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    ea82:	85 c0                	test   %eax,%eax
    ea84:	75 23                	jne    eaa9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    ea86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ea8a:	8b 10                	mov    (%rax),%edx
    ea8c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ea93:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    ea96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ea9a:	8b 50 04             	mov    0x4(%rax),%edx
    ea9d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eaa4:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    eaa7:	eb 2c                	jmp    ead5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    eaa9:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    eab0:	48 89 c7             	mov    %rax,%rdi
    eab3:	e8 f2 46 00 00       	call   131aa <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    eab8:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    eabf:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    eac6:	48 89 d6             	mov    %rdx,%rsi
    eac9:	48 89 c7             	mov    %rax,%rdi
    eacc:	e8 9e 46 00 00       	call   1316f <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    ead1:	84 c0                	test   %al,%al
    ead3:	75 88                	jne    ea5d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    ead5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eadc:	8b 50 24             	mov    0x24(%rax),%edx
    eadf:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    eae6:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    eae9:	8b 45 88             	mov    -0x78(%rbp),%eax
    eaec:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    eaef:	8b 45 8c             	mov    -0x74(%rbp),%eax
    eaf2:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    eaf5:	8b 45 98             	mov    -0x68(%rbp),%eax
    eaf8:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    eafb:	73 06                	jae    eb03 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    eafd:	8b 45 98             	mov    -0x68(%rbp),%eax
    eb00:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    eb03:	8b 45 9c             	mov    -0x64(%rbp),%eax
    eb06:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    eb09:	73 06                	jae    eb11 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    eb0b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    eb0e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    eb11:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb18:	8b 55 e8             	mov    -0x18(%rbp),%edx
    eb1b:	89 50 2c             	mov    %edx,0x2c(%rax)
    eb1e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb25:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    eb28:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    eb2b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    eb32:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    eb39:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    eb3d:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    eb41:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb48:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    eb4f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eb56:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  // auto  = VK_PRESENT_MODE_IMMEDIATE_KHR;
  for (const auto &presentMode : surfacePresentModes) {
    eb5d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    eb64:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    eb68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb6c:	48 89 c7             	mov    %rax,%rdi
    eb6f:	e8 68 46 00 00       	call   131dc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    eb74:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    eb7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb7f:	48 89 c7             	mov    %rax,%rdi
    eb82:	e8 7b 46 00 00       	call   13202 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    eb87:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    eb8e:	eb 52                	jmp    ebe2 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x352>
    eb90:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    eb97:	48 89 c7             	mov    %rax,%rdi
    eb9a:	e8 e7 46 00 00       	call   13286 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    eb9f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (presentMode == preferredPresentMode) {
    eba3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eba7:	8b 10                	mov    (%rax),%edx
    eba9:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ebb0:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    ebb6:	39 c2                	cmp    %eax,%edx
    ebb8:	75 19                	jne    ebd3 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    ebba:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ebc1:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
    ebc7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ebce:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    ebd1:	eb 2c                	jmp    ebff <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x36f>
  for (const auto &presentMode : surfacePresentModes) {
    ebd3:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    ebda:	48 89 c7             	mov    %rax,%rdi
    ebdd:	e8 84 46 00 00       	call   13266 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    ebe2:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    ebe9:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    ebf0:	48 89 d6             	mov    %rdx,%rsi
    ebf3:	48 89 c7             	mov    %rax,%rdi
    ebf6:	e8 30 46 00 00       	call   1322b <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    ebfb:	84 c0                	test   %al,%al
    ebfd:	75 91                	jne    eb90 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x300>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    ebff:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec06:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    ec0d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec14:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    ec1b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec22:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    ec29:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec30:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    ec37:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    ec38:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    ec3b:	83 e0 01             	and    $0x1,%eax
    ec3e:	85 c0                	test   %eax,%eax
    ec40:	74 1e                	je     ec60 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d0>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    ec42:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ec49:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    ec50:	8b 45 ac             	mov    -0x54(%rbp),%eax
    ec53:	83 e0 01             	and    $0x1,%eax
    ec56:	85 c0                	test   %eax,%eax
    ec58:	0f 84 9b 00 00 00    	je     ecf9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x469>
    ec5e:	eb 3b                	jmp    ec9b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x40b>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ec60:	bf 10 00 00 00       	mov    $0x10,%edi
    ec65:	e8 46 55 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    ec6a:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    ec6d:	48 8d 05 14 11 01 00 	lea    0x11114(%rip),%rax        # 1fd88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    ec74:	48 89 c6             	mov    %rax,%rsi
    ec77:	48 89 df             	mov    %rbx,%rdi
    ec7a:	e8 b1 54 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ec7f:	48 8b 05 22 13 02 00 	mov    0x21322(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ec86:	48 89 c2             	mov    %rax,%rdx
    ec89:	48 8d 05 b0 10 02 00 	lea    0x210b0(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ec90:	48 89 c6             	mov    %rax,%rsi
    ec93:	48 89 df             	mov    %rbx,%rdi
    ec96:	e8 b5 5b ff ff       	call   4850 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    ec9b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eca2:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    eca9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ecb0:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    ecb7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ecbe:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ecc5:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    ecc6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    eccd:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    ecd4:	00 

  return swapchainCreateInfo;
    ecd5:	90                   	nop
}
    ecd6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ecdd:	48 89 c7             	mov    %rax,%rdi
    ece0:	e8 b9 aa ff ff       	call   979e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ece5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ecec:	48 89 c7             	mov    %rax,%rdi
    ecef:	e8 46 a9 ff ff       	call   963a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    ecf4:	e9 9c 00 00 00       	jmp    ed95 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x505>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ecf9:	bf 10 00 00 00       	mov    $0x10,%edi
    ecfe:	e8 ad 54 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
    ed03:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    ed06:	48 8d 05 b3 10 01 00 	lea    0x110b3(%rip),%rax        # 1fdc0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe8>
    ed0d:	48 89 c6             	mov    %rax,%rsi
    ed10:	48 89 df             	mov    %rbx,%rdi
    ed13:	e8 18 54 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ed18:	48 8b 05 89 12 02 00 	mov    0x21289(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ed1f:	48 89 c2             	mov    %rax,%rdx
    ed22:	48 8d 05 17 10 02 00 	lea    0x21017(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ed29:	48 89 c6             	mov    %rax,%rsi
    ed2c:	48 89 df             	mov    %rbx,%rdi
    ed2f:	e8 1c 5b ff ff       	call   4850 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    ed34:	49 89 c4             	mov    %rax,%r12
    ed37:	48 89 df             	mov    %rbx,%rdi
    ed3a:	e8 81 55 ff ff       	call   42c0 <__cxa_free_exception@plt>
    ed3f:	4c 89 e3             	mov    %r12,%rbx
    ed42:	eb 23                	jmp    ed67 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ed44:	49 89 c4             	mov    %rax,%r12
    ed47:	48 89 df             	mov    %rbx,%rdi
    ed4a:	e8 71 55 ff ff       	call   42c0 <__cxa_free_exception@plt>
    ed4f:	4c 89 e3             	mov    %r12,%rbx
    ed52:	eb 13                	jmp    ed67 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    ed54:	49 89 c4             	mov    %rax,%r12
    ed57:	48 89 df             	mov    %rbx,%rdi
    ed5a:	e8 61 55 ff ff       	call   42c0 <__cxa_free_exception@plt>
    ed5f:	4c 89 e3             	mov    %r12,%rbx
    ed62:	eb 03                	jmp    ed67 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
}
    ed64:	48 89 c3             	mov    %rax,%rbx
    ed67:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ed6e:	48 89 c7             	mov    %rax,%rdi
    ed71:	e8 28 aa ff ff       	call   979e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ed76:	eb 03                	jmp    ed7b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4eb>
    ed78:	48 89 c3             	mov    %rax,%rbx
    ed7b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ed82:	48 89 c7             	mov    %rax,%rdi
    ed85:	e8 b0 a8 ff ff       	call   963a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    ed8a:	48 89 d8             	mov    %rbx,%rax
    ed8d:	48 89 c7             	mov    %rax,%rdi
    ed90:	e8 1b 5b ff ff       	call   48b0 <_Unwind_Resume@plt>
    ed95:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ed9c:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    eda3:	5b                   	pop    %rbx
    eda4:	41 5c                	pop    %r12
    eda6:	5d                   	pop    %rbp
    eda7:	c3                   	ret

000000000000eda8 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    eda8:	55                   	push   %rbp
    eda9:	48 89 e5             	mov    %rsp,%rbp
    edac:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    edb0:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    edb4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    edb8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    edbc:	48 89 d6             	mov    %rdx,%rsi
    edbf:	48 89 c7             	mov    %rax,%rdi
    edc2:	e8 c9 fa ff ff       	call   e890 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    edc7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    edcb:	48 8b 40 50          	mov    0x50(%rax),%rax
    edcf:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    edd3:	ba 00 00 00 00       	mov    $0x0,%edx
    edd8:	48 89 ce             	mov    %rcx,%rsi
    eddb:	48 89 c7             	mov    %rax,%rdi
    edde:	e8 c2 77 ff ff       	call   65a5 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    ede3:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ede7:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    edeb:	90                   	nop
    edec:	c9                   	leave
    eded:	c3                   	ret

000000000000edee <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    edee:	55                   	push   %rbp
    edef:	48 89 e5             	mov    %rsp,%rbp
    edf2:	53                   	push   %rbx
    edf3:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    edfa:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    ee01:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee08:	48 8b 50 70          	mov    0x70(%rax),%rdx
    ee0c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee13:	48 8b 48 50          	mov    0x50(%rax),%rcx
    ee17:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ee1b:	48 89 ce             	mov    %rcx,%rsi
    ee1e:	48 89 c7             	mov    %rax,%rdi
    ee21:	e8 4b 9b ff ff       	call   8971 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    ee26:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee2d:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    ee34:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ee38:	48 89 c6             	mov    %rax,%rsi
    ee3b:	48 89 d7             	mov    %rdx,%rdi
    ee3e:	e8 55 44 00 00       	call   13298 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    ee43:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ee47:	48 89 c7             	mov    %rax,%rdi
    ee4a:	e8 b3 aa ff ff       	call   9902 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    ee4f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee56:	48 05 c0 00 00 00    	add    $0xc0,%rax
    ee5c:	48 89 c7             	mov    %rax,%rdi
    ee5f:	e8 6c 44 00 00       	call   132d0 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    ee64:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    ee68:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee6f:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    ee76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ee7a:	48 89 c6             	mov    %rax,%rsi
    ee7d:	48 89 d7             	mov    %rdx,%rdi
    ee80:	e8 6f 44 00 00       	call   132f4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    ee85:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ee8c:	00 
    ee8d:	e9 f1 00 00 00       	jmp    ef83 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    ee92:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee96:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ee9d:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    eea1:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    eea5:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    eea9:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    eead:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    eeb4:	00 00 00 
    imageViewInfo.pNext = nullptr;
    eeb7:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    eebe:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    eec2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eec9:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    eed0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eed4:	48 89 c6             	mov    %rax,%rsi
    eed7:	48 89 d7             	mov    %rdx,%rdi
    eeda:	e8 9b 44 00 00       	call   1337a <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    eedf:	48 8b 00             	mov    (%rax),%rax
    eee2:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    eee6:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    eeed:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eef4:	8b 40 78             	mov    0x78(%rax),%eax
    eef7:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    eefa:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    ef01:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    ef08:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    ef0f:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    ef16:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    ef1d:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    ef24:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    ef2b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    ef32:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    ef39:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ef40:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef44:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    ef4b:	ba 00 00 00 00       	mov    $0x0,%edx
    ef50:	48 89 ce             	mov    %rcx,%rsi
    ef53:	48 89 c7             	mov    %rax,%rdi
    ef56:	e8 ea 76 ff ff       	call   6645 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    ef5b:	48 89 c3             	mov    %rax,%rbx
    ef5e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ef65:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    ef6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef70:	48 89 c6             	mov    %rax,%rsi
    ef73:	48 89 d7             	mov    %rdx,%rdi
    ef76:	e8 1f 44 00 00       	call   1339a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    ef7b:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    ef7e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    ef83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef87:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    ef8b:	0f 82 01 ff ff ff    	jb     ee92 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    ef91:	90                   	nop
    ef92:	90                   	nop
    ef93:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ef97:	c9                   	leave
    ef98:	c3                   	ret
    ef99:	90                   	nop

000000000000ef9a <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    ef9a:	55                   	push   %rbp
    ef9b:	48 89 e5             	mov    %rsp,%rbp
    ef9e:	41 55                	push   %r13
    efa0:	41 54                	push   %r12
    efa2:	53                   	push   %rbx
    efa3:	48 81 ec 78 05 00 00 	sub    $0x578,%rsp
    efaa:	48 89 bd 78 fa ff ff 	mov    %rdi,-0x588(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    efb1:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    efb8:	00 00 00 00 
    efbc:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    efc3:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    efc7:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    efce:	48 89 c7             	mov    %rax,%rdi
    efd1:	e8 ea 58 ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    efd6:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    efdd:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    efe4:	48 8d 0d 0d 0e 01 00 	lea    0x10e0d(%rip),%rcx        # 1fdf8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    efeb:	48 89 ce             	mov    %rcx,%rsi
    efee:	48 89 c7             	mov    %rax,%rdi
    eff1:	e8 1e 5f ff ff       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    eff6:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    effd:	48 8b 40 50          	mov    0x50(%rax),%rax
    f001:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    f008:	ba 00 00 00 00       	mov    $0x0,%edx
    f00d:	48 89 ce             	mov    %rcx,%rsi
    f010:	48 89 c7             	mov    %rax,%rdi
    f013:	e8 9d 77 ff ff       	call   67b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    f018:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    f01f:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    f026:	48 89 c7             	mov    %rax,%rdi
    f029:	e8 32 52 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f02e:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    f035:	48 89 c7             	mov    %rax,%rdi
    f038:	e8 d3 54 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    f03d:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    f044:	48 89 c7             	mov    %rax,%rdi
    f047:	e8 74 58 ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
    f04c:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    f053:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f05a:	48 8d 0d b7 0d 01 00 	lea    0x10db7(%rip),%rcx        # 1fe18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x140>
    f061:	48 89 ce             	mov    %rcx,%rsi
    f064:	48 89 c7             	mov    %rax,%rdi
    f067:	e8 a8 5e ff ff       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f06c:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f073:	48 8b 40 50          	mov    0x50(%rax),%rax
    f077:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    f07e:	ba 00 00 00 00       	mov    $0x0,%edx
    f083:	48 89 ce             	mov    %rcx,%rsi
    f086:	48 89 c7             	mov    %rax,%rdi
    f089:	e8 27 77 ff ff       	call   67b5 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    f08e:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    f095:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f09c:	48 89 c7             	mov    %rax,%rdi
    f09f:	e8 bc 51 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f0a4:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    f0ab:	48 89 c7             	mov    %rax,%rdi
    f0ae:	e8 5d 54 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    f0b3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0b7:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    f0be:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    f0c5:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    f0cc:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    f0d3:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    f0d6:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    f0dd:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    f0e0:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    f0e7:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    f0ee:	48 8d 05 43 0d 01 00 	lea    0x10d43(%rip),%rax        # 1fe38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    f0f5:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    f0fc:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    f103:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    f107:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f10b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    f112:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    f119:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    f120:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    f127:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    f12a:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    f131:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    f134:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    f13b:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    f142:	48 8d 05 ef 0c 01 00 	lea    0x10cef(%rip),%rax        # 1fe38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x160>
    f149:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    f150:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    f157:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    f15b:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    f162:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    f169:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    f170:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    f177:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    f17e:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    f185:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    f18c:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    f193:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    f19a:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    f1a1:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    f1a8:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    f1af:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    f1b6:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    f1bd:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    f1c4:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    f1cb:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    f1d2:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    f1d9:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    f1e0:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    f1e7:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    f1ee:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    f1f5:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    f1fc:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  auto bindingDescription = vkh::Vertex2D_RGB::getBindingDescription();
    f203:	e8 b2 41 00 00       	call   133ba <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>
    f208:	48 89 85 e4 fd ff ff 	mov    %rax,-0x21c(%rbp)
    f20f:	8b 85 ec fd ff ff    	mov    -0x214(%rbp),%eax
    f215:	83 e0 00             	and    $0x0,%eax
    f218:	09 d0                	or     %edx,%eax
    f21a:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
  auto attributeDescriptions = vkh::Vertex2D_RGB::getAttributeDescriptions();
    f220:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    f227:	48 89 c7             	mov    %rax,%rdi
    f22a:	e8 cd 41 00 00       	call   133fc <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>

  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    f22f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f233:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    f23a:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    f241:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  vertInputInfo.sType =
    f248:	c7 85 90 fd ff ff 13 	movl   $0x13,-0x270(%rbp)
    f24f:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 1;
    f252:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    f259:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = &bindingDescription;
    f25c:	48 8d 85 e4 fd ff ff 	lea    -0x21c(%rbp),%rax
    f263:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  vertInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
    f26a:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    f271:	48 89 c7             	mov    %rax,%rdi
    f274:	e8 63 42 00 00       	call   134dc <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertInputInfo.vertexAttributeDescriptionCount =
    f279:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%rbp)
  vertInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    f27f:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    f286:	48 89 c7             	mov    %rax,%rdi
    f289:	e8 58 34 00 00       	call   126e6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
    f28e:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    f295:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f299:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    f2a0:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
  inputAssemblyInfo.sType =
    f2a7:	c7 85 70 fd ff ff 14 	movl   $0x14,-0x290(%rbp)
    f2ae:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    f2b1:	c7 85 84 fd ff ff 03 	movl   $0x3,-0x27c(%rbp)
    f2b8:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    f2bb:	c7 85 88 fd ff ff 00 	movl   $0x0,-0x278(%rbp)
    f2c2:	00 00 00 

  /*  */
  VkViewport viewport{};
    f2c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2c9:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    f2d0:	66 0f d6 85 60 fd ff 	movq   %xmm0,-0x2a0(%rbp)
    f2d7:	ff 
  viewport.x = 0.0f;
    f2d8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2dc:	f3 0f 11 85 50 fd ff 	movss  %xmm0,-0x2b0(%rbp)
    f2e3:	ff 
  viewport.y = 0.0f;
    f2e4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2e8:	f3 0f 11 85 54 fd ff 	movss  %xmm0,-0x2ac(%rbp)
    f2ef:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    f2f0:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f2f7:	8b 40 7c             	mov    0x7c(%rax),%eax
    f2fa:	89 c0                	mov    %eax,%eax
    f2fc:	48 85 c0             	test   %rax,%rax
    f2ff:	78 0b                	js     f30c <_ZN9VulkanApp22createGraphicsPipelineEv+0x372>
    f301:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f305:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    f30a:	eb 19                	jmp    f325 <_ZN9VulkanApp22createGraphicsPipelineEv+0x38b>
    f30c:	48 89 c2             	mov    %rax,%rdx
    f30f:	48 d1 ea             	shr    %rdx
    f312:	83 e0 01             	and    $0x1,%eax
    f315:	48 09 c2             	or     %rax,%rdx
    f318:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f31c:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    f321:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    f325:	f3 0f 11 85 58 fd ff 	movss  %xmm0,-0x2a8(%rbp)
    f32c:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    f32d:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f334:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    f33a:	89 c0                	mov    %eax,%eax
    f33c:	48 85 c0             	test   %rax,%rax
    f33f:	78 0b                	js     f34c <_ZN9VulkanApp22createGraphicsPipelineEv+0x3b2>
    f341:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f345:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    f34a:	eb 19                	jmp    f365 <_ZN9VulkanApp22createGraphicsPipelineEv+0x3cb>
    f34c:	48 89 c2             	mov    %rax,%rdx
    f34f:	48 d1 ea             	shr    %rdx
    f352:	83 e0 01             	and    $0x1,%eax
    f355:	48 09 c2             	or     %rax,%rdx
    f358:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f35c:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    f361:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    f365:	f3 0f 11 85 5c fd ff 	movss  %xmm0,-0x2a4(%rbp)
    f36c:	ff 
  viewport.minDepth = 0.0f;
    f36d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f371:	f3 0f 11 85 60 fd ff 	movss  %xmm0,-0x2a0(%rbp)
    f378:	ff 
  viewport.maxDepth = 1.0f;
    f379:	f3 0f 10 05 d7 0e 01 	movss  0x10ed7(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f380:	00 
    f381:	f3 0f 11 85 64 fd ff 	movss  %xmm0,-0x29c(%rbp)
    f388:	ff 

  VkRect2D scissor{};
    f389:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
    f390:	00 00 00 00 
    f394:	48 c7 85 48 fd ff ff 	movq   $0x0,-0x2b8(%rbp)
    f39b:	00 00 00 00 
  scissor.offset = {0, 0};
    f39f:	c7 85 40 fd ff ff 00 	movl   $0x0,-0x2c0(%rbp)
    f3a6:	00 00 00 
    f3a9:	c7 85 44 fd ff ff 00 	movl   $0x0,-0x2bc(%rbp)
    f3b0:	00 00 00 
  scissor.extent = swapchain.extent;
    f3b3:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f3ba:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    f3be:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    f3c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f3c9:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    f3d0:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    f3d7:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  viewportStateInfo.sType =
    f3de:	c7 85 10 fd ff ff 16 	movl   $0x16,-0x2f0(%rbp)
    f3e5:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    f3e8:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    f3ef:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    f3f2:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    f3f9:	48 89 85 28 fd ff ff 	mov    %rax,-0x2d8(%rbp)
  viewportStateInfo.scissorCount = 1;
    f400:	c7 85 30 fd ff ff 01 	movl   $0x1,-0x2d0(%rbp)
    f407:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    f40a:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    f411:	48 89 85 38 fd ff ff 	mov    %rax,-0x2c8(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    f418:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f41c:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    f423:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    f42a:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    f431:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
  rastStateInfo.sType =
    f438:	c7 85 d0 fc ff ff 17 	movl   $0x17,-0x330(%rbp)
    f43f:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    f442:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
    f449:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    f44d:	c7 85 e4 fc ff ff 00 	movl   $0x0,-0x31c(%rbp)
    f454:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    f457:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    f45e:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    f461:	c7 85 ec fc ff ff 00 	movl   $0x0,-0x314(%rbp)
    f468:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    f46b:	f3 0f 10 05 e5 0d 01 	movss  0x10de5(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f472:	00 
    f473:	f3 0f 11 85 08 fd ff 	movss  %xmm0,-0x2f8(%rbp)
    f47a:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    f47b:	c7 85 f0 fc ff ff 02 	movl   $0x2,-0x310(%rbp)
    f482:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    f485:	c7 85 f4 fc ff ff 01 	movl   $0x1,-0x30c(%rbp)
    f48c:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    f48f:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    f496:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    f499:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f49d:	f3 0f 11 85 fc fc ff 	movss  %xmm0,-0x304(%rbp)
    f4a4:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    f4a5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4a9:	f3 0f 11 85 00 fd ff 	movss  %xmm0,-0x300(%rbp)
    f4b0:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    f4b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4b5:	f3 0f 11 85 04 fd ff 	movss  %xmm0,-0x2fc(%rbp)
    f4bc:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    f4bd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4c1:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    f4c8:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    f4cf:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  multisampleStateInfo.sType =
    f4d6:	c7 85 a0 fc ff ff 18 	movl   $0x18,-0x360(%rbp)
    f4dd:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    f4e0:	c7 85 b8 fc ff ff 00 	movl   $0x0,-0x348(%rbp)
    f4e7:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    f4ea:	c7 85 b4 fc ff ff 01 	movl   $0x1,-0x34c(%rbp)
    f4f1:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    f4f4:	f3 0f 10 05 5c 0d 01 	movss  0x10d5c(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f4fb:	00 
    f4fc:	f3 0f 11 85 bc fc ff 	movss  %xmm0,-0x344(%rbp)
    f503:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    f504:	48 c7 85 c0 fc ff ff 	movq   $0x0,-0x340(%rbp)
    f50b:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    f50f:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    f516:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    f519:	c7 85 cc fc ff ff 00 	movl   $0x0,-0x334(%rbp)
    f520:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    f523:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f527:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    f52e:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
  colorBlendAttachment.colorWriteMask =
    f535:	c7 85 9c fc ff ff 0f 	movl   $0xf,-0x364(%rbp)
    f53c:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    f53f:	c7 85 80 fc ff ff 01 	movl   $0x1,-0x380(%rbp)
    f546:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    f549:	c7 85 84 fc ff ff 06 	movl   $0x6,-0x37c(%rbp)
    f550:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    f553:	c7 85 88 fc ff ff 07 	movl   $0x7,-0x378(%rbp)
    f55a:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    f55d:	c7 85 8c fc ff ff 00 	movl   $0x0,-0x374(%rbp)
    f564:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    f567:	c7 85 90 fc ff ff 01 	movl   $0x1,-0x370(%rbp)
    f56e:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    f571:	c7 85 94 fc ff ff 00 	movl   $0x0,-0x36c(%rbp)
    f578:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    f57b:	c7 85 98 fc ff ff 00 	movl   $0x0,-0x368(%rbp)
    f582:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    f585:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f589:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    f590:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    f597:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
    f59e:	66 0f d6 85 70 fc ff 	movq   %xmm0,-0x390(%rbp)
    f5a5:	ff 
  colorBlendState.sType =
    f5a6:	c7 85 40 fc ff ff 1a 	movl   $0x1a,-0x3c0(%rbp)
    f5ad:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    f5b0:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    f5b7:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    f5ba:	c7 85 58 fc ff ff 03 	movl   $0x3,-0x3a8(%rbp)
    f5c1:	00 00 00 
  colorBlendState.attachmentCount = 1;
    f5c4:	c7 85 5c fc ff ff 01 	movl   $0x1,-0x3a4(%rbp)
    f5cb:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    f5ce:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
    f5d5:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    f5dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f5e0:	f3 0f 11 85 68 fc ff 	movss  %xmm0,-0x398(%rbp)
    f5e7:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    f5e8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f5ec:	f3 0f 11 85 6c fc ff 	movss  %xmm0,-0x394(%rbp)
    f5f3:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    f5f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f5f8:	f3 0f 11 85 70 fc ff 	movss  %xmm0,-0x390(%rbp)
    f5ff:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    f600:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f604:	f3 0f 11 85 74 fc ff 	movss  %xmm0,-0x38c(%rbp)
    f60b:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    f60c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f610:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    f617:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    f61e:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    f625:	c7 85 10 fc ff ff 1e 	movl   $0x1e,-0x3f0(%rbp)
    f62c:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    f62f:	c7 85 24 fc ff ff 00 	movl   $0x0,-0x3dc(%rbp)
    f636:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    f639:	48 c7 85 28 fc ff ff 	movq   $0x0,-0x3d8(%rbp)
    f640:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    f644:	c7 85 30 fc ff ff 00 	movl   $0x0,-0x3d0(%rbp)
    f64b:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    f64e:	48 c7 85 38 fc ff ff 	movq   $0x0,-0x3c8(%rbp)
    f655:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    f659:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f660:	48 8b 40 50          	mov    0x50(%rax),%rax
    f664:	48 8d 8d 10 fc ff ff 	lea    -0x3f0(%rbp),%rcx
    f66b:	ba 00 00 00 00       	mov    $0x0,%edx
    f670:	48 89 ce             	mov    %rcx,%rsi
    f673:	48 89 c7             	mov    %rax,%rdi
    f676:	e8 72 73 ff ff       	call   69ed <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    f67b:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    f682:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    f689:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f68d:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    f694:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    f69b:	66 0f 7e 85 00 fc ff 	movd   %xmm0,-0x400(%rbp)
    f6a2:	ff 
  colorAttachment.format = swapchain.format;
    f6a3:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f6aa:	8b 40 78             	mov    0x78(%rax),%eax
    f6ad:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    f6b3:	c7 85 e8 fb ff ff 01 	movl   $0x1,-0x418(%rbp)
    f6ba:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    f6bd:	c7 85 ec fb ff ff 01 	movl   $0x1,-0x414(%rbp)
    f6c4:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    f6c7:	c7 85 f0 fb ff ff 00 	movl   $0x0,-0x410(%rbp)
    f6ce:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    f6d1:	c7 85 f4 fb ff ff 02 	movl   $0x2,-0x40c(%rbp)
    f6d8:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    f6db:	c7 85 f8 fb ff ff 01 	movl   $0x1,-0x408(%rbp)
    f6e2:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    f6e5:	c7 85 fc fb ff ff 00 	movl   $0x0,-0x404(%rbp)
    f6ec:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    f6ef:	c7 85 00 fc ff ff ea 	movl   $0x3b9acdea,-0x400(%rbp)
    f6f6:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    f6f9:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
    f700:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    f704:	c7 85 d8 fb ff ff 00 	movl   $0x0,-0x428(%rbp)
    f70b:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    f70e:	c7 85 dc fb ff ff 02 	movl   $0x2,-0x424(%rbp)
    f715:	00 00 00 

  VkSubpassDescription subpass{};
    f718:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f71c:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
    f723:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    f72a:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
    f731:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    f738:	66 0f d6 85 d0 fb ff 	movq   %xmm0,-0x430(%rbp)
    f73f:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    f740:	c7 85 94 fb ff ff 00 	movl   $0x0,-0x46c(%rbp)
    f747:	00 00 00 
  subpass.colorAttachmentCount = 1;
    f74a:	c7 85 a8 fb ff ff 01 	movl   $0x1,-0x458(%rbp)
    f751:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    f754:	48 8d 85 d8 fb ff ff 	lea    -0x428(%rbp),%rax
    f75b:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
    f762:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f766:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
    f76d:	0f 11 85 7c fb ff ff 	movups %xmm0,-0x484(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
    f774:	c7 85 70 fb ff ff ff 	movl   $0xffffffff,-0x490(%rbp)
    f77b:	ff ff ff 
  subPassDep.dstSubpass = 0;
    f77e:	c7 85 74 fb ff ff 00 	movl   $0x0,-0x48c(%rbp)
    f785:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    f788:	c7 85 78 fb ff ff 00 	movl   $0x400,-0x488(%rbp)
    f78f:	04 00 00 
  subPassDep.srcAccessMask = 0;
    f792:	c7 85 80 fb ff ff 00 	movl   $0x0,-0x480(%rbp)
    f799:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    f79c:	c7 85 7c fb ff ff 00 	movl   $0x400,-0x484(%rbp)
    f7a3:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    f7a6:	c7 85 84 fb ff ff 00 	movl   $0x100,-0x47c(%rbp)
    f7ad:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
    f7b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f7b4:	0f 29 85 30 fb ff ff 	movaps %xmm0,-0x4d0(%rbp)
    f7bb:	0f 29 85 40 fb ff ff 	movaps %xmm0,-0x4c0(%rbp)
    f7c2:	0f 29 85 50 fb ff ff 	movaps %xmm0,-0x4b0(%rbp)
    f7c9:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    f7d0:	c7 85 30 fb ff ff 26 	movl   $0x26,-0x4d0(%rbp)
    f7d7:	00 00 00 
  renderPassInfo.pNext = nullptr;
    f7da:	48 c7 85 38 fb ff ff 	movq   $0x0,-0x4c8(%rbp)
    f7e1:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    f7e5:	c7 85 44 fb ff ff 01 	movl   $0x1,-0x4bc(%rbp)
    f7ec:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    f7ef:	48 8d 85 e0 fb ff ff 	lea    -0x420(%rbp),%rax
    f7f6:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  renderPassInfo.subpassCount = 1;
    f7fd:	c7 85 50 fb ff ff 01 	movl   $0x1,-0x4b0(%rbp)
    f804:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    f807:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
    f80e:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  renderPassInfo.dependencyCount = 1;
    f815:	c7 85 60 fb ff ff 01 	movl   $0x1,-0x4a0(%rbp)
    f81c:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
    f81f:	48 8d 85 70 fb ff ff 	lea    -0x490(%rbp),%rax
    f826:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    f82d:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f834:	48 8b 40 50          	mov    0x50(%rax),%rax
    f838:	48 8d 8d 30 fb ff ff 	lea    -0x4d0(%rbp),%rcx
    f83f:	ba 00 00 00 00       	mov    $0x0,%edx
    f844:	48 89 ce             	mov    %rcx,%rsi
    f847:	48 89 c7             	mov    %rax,%rdi
    f84a:	e8 36 72 ff ff       	call   6a85 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    f84f:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    f856:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    f85d:	48 8d 95 a0 fa ff ff 	lea    -0x560(%rbp),%rdx
    f864:	b8 00 00 00 00       	mov    $0x0,%eax
    f869:	b9 12 00 00 00       	mov    $0x12,%ecx
    f86e:	48 89 d7             	mov    %rdx,%rdi
    f871:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    f874:	c7 85 a0 fa ff ff 1c 	movl   $0x1c,-0x560(%rbp)
    f87b:	00 00 00 
  pipelineInfo.pNext = nullptr;
    f87e:	48 c7 85 a8 fa ff ff 	movq   $0x0,-0x558(%rbp)
    f885:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    f889:	c7 85 b4 fa ff ff 02 	movl   $0x2,-0x54c(%rbp)
    f890:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    f893:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    f89a:	48 89 85 b8 fa ff ff 	mov    %rax,-0x548(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    f8a1:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
    f8a8:	48 89 85 c0 fa ff ff 	mov    %rax,-0x540(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    f8af:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    f8b6:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    f8bd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8c4:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    f8cb:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f8d2:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    f8d9:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    f8e0:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    f8e7:	48 c7 85 f0 fa ff ff 	movq   $0x0,-0x510(%rbp)
    f8ee:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    f8f2:	48 8d 85 40 fc ff ff 	lea    -0x3c0(%rbp),%rax
    f8f9:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    f900:	48 c7 85 00 fb ff ff 	movq   $0x0,-0x500(%rbp)
    f907:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    f90b:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f912:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
    f919:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    f920:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    f927:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    f92e:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.subpass = 0;
    f935:	c7 85 18 fb ff ff 00 	movl   $0x0,-0x4e8(%rbp)
    f93c:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    f93f:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
    f946:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    f94a:	c7 85 28 fb ff ff ff 	movl   $0xffffffff,-0x4d8(%rbp)
    f951:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    f954:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
    f95b:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    f962:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    f969:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    f970:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
    f977:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
    f97e:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    f985:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    f98c:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
    f993:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    f99a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    f9a1:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    f9a8:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
    f9af:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
    f9b6:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    f9bd:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    f9c4:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
    f9cb:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
    f9d2:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f9d9:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    f9e0:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    f9e7:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    f9ee:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    f9f5:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    f9fc:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    fa03:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    fa0a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fa0e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    fa12:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    fa19:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    fa20:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    fa24:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    fa28:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    fa2f:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    fa36:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    fa3a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    fa3e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fa45:	49 89 c4             	mov    %rax,%r12
    fa48:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    fa4e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    fa52:	48 89 c7             	mov    %rax,%rdi
    fa55:	e8 92 3a 00 00       	call   134ec <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    fa5a:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    fa5e:	4c 89 e6             	mov    %r12,%rsi
    fa61:	4c 89 ef             	mov    %r13,%rdi
    fa64:	4c 89 e1             	mov    %r12,%rcx
    fa67:	4c 89 eb             	mov    %r13,%rbx
    fa6a:	48 89 df             	mov    %rbx,%rdi
    fa6d:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    fa74:	48 89 d1             	mov    %rdx,%rcx
    fa77:	48 89 fa             	mov    %rdi,%rdx
    fa7a:	48 89 c7             	mov    %rax,%rdi
    fa7d:	e8 a2 3a 00 00       	call   13524 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    fa82:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    fa86:	48 89 c7             	mov    %rax,%rdi
    fa89:	e8 7a 3a 00 00       	call   13508 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    fa8e:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fa95:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
    fa9c:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    faa3:	48 8b 70 50          	mov    0x50(%rax),%rsi
    faa7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    faab:	48 8d 8d 80 fa ff ff 	lea    -0x580(%rbp),%rcx
    fab2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    fab8:	48 89 c7             	mov    %rax,%rdi
    fabb:	e8 4b 3b 00 00       	call   1360b <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    fac0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fac4:	be 00 00 00 00       	mov    $0x0,%esi
    fac9:	48 89 c7             	mov    %rax,%rdi
    facc:	e8 ab 3c 00 00       	call   1377c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    fad1:	48 8b 10             	mov    (%rax),%rdx
    fad4:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fadb:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
    fae2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fae6:	48 89 c7             	mov    %rax,%rdi
    fae9:	e8 4a 3c 00 00       	call   13738 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    faee:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    faf5:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fafc:	48 8b 40 50          	mov    0x50(%rax),%rax
    fb00:	ba 00 00 00 00       	mov    $0x0,%edx
    fb05:	48 89 ce             	mov    %rcx,%rsi
    fb08:	48 89 c7             	mov    %rax,%rdi
    fb0b:	e8 76 7c ff ff       	call   7786 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    fb10:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    fb17:	48 8b 85 78 fa ff ff 	mov    -0x588(%rbp),%rax
    fb1e:	48 8b 40 50          	mov    0x50(%rax),%rax
    fb22:	ba 00 00 00 00       	mov    $0x0,%edx
    fb27:	48 89 ce             	mov    %rcx,%rsi
    fb2a:	48 89 c7             	mov    %rax,%rdi
    fb2d:	e8 54 7c ff ff       	call   7786 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    fb32:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    fb39:	48 89 c7             	mov    %rax,%rdi
    fb3c:	e8 6b 3a 00 00       	call   135ac <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    fb41:	e9 99 00 00 00       	jmp    fbdf <_ZN9VulkanApp22createGraphicsPipelineEv+0xc45>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    fb46:	48 89 c3             	mov    %rax,%rbx
    fb49:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    fb50:	48 89 c7             	mov    %rax,%rdi
    fb53:	e8 08 47 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fb58:	eb 03                	jmp    fb5d <_ZN9VulkanApp22createGraphicsPipelineEv+0xbc3>
    fb5a:	48 89 c3             	mov    %rax,%rbx
    fb5d:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    fb64:	48 89 c7             	mov    %rax,%rdi
    fb67:	e8 a4 49 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    fb6c:	48 89 d8             	mov    %rbx,%rax
    fb6f:	48 89 c7             	mov    %rax,%rdi
    fb72:	e8 39 4d ff ff       	call   48b0 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    fb77:	48 89 c3             	mov    %rax,%rbx
    fb7a:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    fb81:	48 89 c7             	mov    %rax,%rdi
    fb84:	e8 d7 46 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fb89:	eb 03                	jmp    fb8e <_ZN9VulkanApp22createGraphicsPipelineEv+0xbf4>
    fb8b:	48 89 c3             	mov    %rax,%rbx
    fb8e:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    fb95:	48 89 c7             	mov    %rax,%rdi
    fb98:	e8 73 49 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
    fb9d:	48 89 d8             	mov    %rbx,%rax
    fba0:	48 89 c7             	mov    %rax,%rdi
    fba3:	e8 08 4d ff ff       	call   48b0 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    fba8:	48 89 c3             	mov    %rax,%rbx
    fbab:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    fbaf:	48 89 c7             	mov    %rax,%rdi
    fbb2:	e8 51 39 00 00       	call   13508 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    fbb7:	48 89 d8             	mov    %rbx,%rax
    fbba:	48 89 c7             	mov    %rax,%rdi
    fbbd:	e8 ee 4c ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    fbc2:	48 89 c3             	mov    %rax,%rbx
    fbc5:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    fbcc:	48 89 c7             	mov    %rax,%rdi
    fbcf:	e8 d8 39 00 00       	call   135ac <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    fbd4:	48 89 d8             	mov    %rbx,%rax
    fbd7:	48 89 c7             	mov    %rax,%rdi
    fbda:	e8 d1 4c ff ff       	call   48b0 <_Unwind_Resume@plt>
    fbdf:	48 81 c4 78 05 00 00 	add    $0x578,%rsp
    fbe6:	5b                   	pop    %rbx
    fbe7:	41 5c                	pop    %r12
    fbe9:	41 5d                	pop    %r13
    fbeb:	5d                   	pop    %rbp
    fbec:	c3                   	ret
    fbed:	90                   	nop

000000000000fbee <_ZN9VulkanApp18createFramebuffersEv>:

void VulkanApp::createFramebuffers() {
    fbee:	55                   	push   %rbp
    fbef:	48 89 e5             	mov    %rsp,%rbp
    fbf2:	41 55                	push   %r13
    fbf4:	41 54                	push   %r12
    fbf6:	53                   	push   %rbx
    fbf7:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    fbfe:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
    fc05:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc0c:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
    fc13:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc1a:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fc20:	48 89 c7             	mov    %rax,%rdi
    fc23:	e8 74 3b 00 00       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fc28:	48 89 c6             	mov    %rax,%rsi
    fc2b:	48 89 df             	mov    %rbx,%rdi
    fc2e:	e8 8d 3b 00 00       	call   137c0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    fc33:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    fc3a:	00 
    fc3b:	e9 3a 01 00 00       	jmp    fd7a <_ZN9VulkanApp18createFramebuffersEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
    fc40:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fc47:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    fc4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fc52:	48 89 c6             	mov    %rax,%rsi
    fc55:	48 89 d7             	mov    %rdx,%rdi
    fc58:	e8 3d 37 00 00       	call   1339a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    fc5d:	48 8b 00             	mov    (%rax),%rax
    fc60:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fc64:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fc68:	49 89 c4             	mov    %rax,%r12
    fc6b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    fc71:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fc75:	48 89 c7             	mov    %rax,%rdi
    fc78:	e8 c9 3b 00 00       	call   13846 <_ZNSaIP13VkImageView_TEC1Ev>
    fc7d:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    fc81:	4c 89 e6             	mov    %r12,%rsi
    fc84:	4c 89 ef             	mov    %r13,%rdi
    fc87:	4c 89 e1             	mov    %r12,%rcx
    fc8a:	4c 89 eb             	mov    %r13,%rbx
    fc8d:	48 89 df             	mov    %rbx,%rdi
    fc90:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fc94:	48 89 d1             	mov    %rdx,%rcx
    fc97:	48 89 fa             	mov    %rdi,%rdx
    fc9a:	48 89 c7             	mov    %rax,%rdi
    fc9d:	e8 dc 3b 00 00       	call   1387e <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fca2:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fca6:	48 89 c7             	mov    %rax,%rdi
    fca9:	e8 b4 3b 00 00       	call   13862 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
    fcae:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fcb2:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    fcb9:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    fcbd:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    fcc1:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    fcc5:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
    fccc:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
    fccf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fcd6:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    fcdd:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
    fce1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fce5:	48 89 c7             	mov    %rax,%rdi
    fce8:	e8 af 3a 00 00       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fced:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
    fcf0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fcf4:	48 89 c7             	mov    %rax,%rdi
    fcf7:	e8 4e 3c 00 00       	call   1394a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
    fcfc:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
    fd00:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fd07:	8b 40 7c             	mov    0x7c(%rax),%eax
    fd0a:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
    fd0d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fd14:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    fd1a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
    fd1d:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
    fd24:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fd2b:	48 8b 40 50          	mov    0x50(%rax),%rax
    fd2f:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    fd36:	ba 00 00 00 00       	mov    $0x0,%edx
    fd3b:	48 89 ce             	mov    %rcx,%rsi
    fd3e:	48 89 c7             	mov    %rax,%rdi
    fd41:	e8 d7 6d ff ff       	call   6b1d <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
    fd46:	48 89 c3             	mov    %rax,%rbx
    fd49:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fd50:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    fd57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd5b:	48 89 c6             	mov    %rax,%rsi
    fd5e:	48 89 d7             	mov    %rdx,%rdi
    fd61:	e8 08 3c 00 00       	call   1396e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    fd66:	48 89 18             	mov    %rbx,(%rax)
  }
    fd69:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fd6d:	48 89 c7             	mov    %rax,%rdi
    fd70:	e8 91 3b 00 00       	call   13906 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    fd75:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    fd7a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    fd81:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fd87:	48 89 c7             	mov    %rax,%rdi
    fd8a:	e8 0d 3a 00 00       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fd8f:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    fd93:	0f 92 c0             	setb   %al
    fd96:	84 c0                	test   %al,%al
    fd98:	0f 85 a2 fe ff ff    	jne    fc40 <_ZN9VulkanApp18createFramebuffersEv+0x52>
}
    fd9e:	eb 34                	jmp    fdd4 <_ZN9VulkanApp18createFramebuffersEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
    fda0:	48 89 c3             	mov    %rax,%rbx
    fda3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fda7:	48 89 c7             	mov    %rax,%rdi
    fdaa:	e8 b3 3a 00 00       	call   13862 <_ZNSaIP13VkImageView_TED1Ev>
    fdaf:	48 89 d8             	mov    %rbx,%rax
    fdb2:	48 89 c7             	mov    %rax,%rdi
    fdb5:	e8 f6 4a ff ff       	call   48b0 <_Unwind_Resume@plt>
  }
    fdba:	48 89 c3             	mov    %rax,%rbx
    fdbd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fdc1:	48 89 c7             	mov    %rax,%rdi
    fdc4:	e8 3d 3b 00 00       	call   13906 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    fdc9:	48 89 d8             	mov    %rbx,%rax
    fdcc:	48 89 c7             	mov    %rax,%rdi
    fdcf:	e8 dc 4a ff ff       	call   48b0 <_Unwind_Resume@plt>
}
    fdd4:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    fddb:	5b                   	pop    %rbx
    fddc:	41 5c                	pop    %r12
    fdde:	41 5d                	pop    %r13
    fde0:	5d                   	pop    %rbp
    fde1:	c3                   	ret

000000000000fde2 <_ZN9VulkanApp17recreateSwapchainEv>:

void VulkanApp::recreateSwapchain() {
    fde2:	55                   	push   %rbp
    fde3:	48 89 e5             	mov    %rsp,%rbp
    fde6:	48 83 ec 20          	sub    $0x20,%rsp
    fdea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  /* Handle minimization */
  int width = 0, heigth = 0;
    fdee:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    fdf5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &width, &heigth);
    fdfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe00:	48 8b 00             	mov    (%rax),%rax
    fe03:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fe07:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    fe0b:	48 89 ce             	mov    %rcx,%rsi
    fe0e:	48 89 c7             	mov    %rax,%rdi
    fe11:	e8 ba 49 ff ff       	call   47d0 <glfwGetFramebufferSize@plt>
  while (width == 0 || heigth == 0) {
    fe16:	eb 1f                	jmp    fe37 <_ZN9VulkanApp17recreateSwapchainEv+0x55>
    glfwGetFramebufferSize(window, &width, &heigth);
    fe18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe1c:	48 8b 00             	mov    (%rax),%rax
    fe1f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fe23:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    fe27:	48 89 ce             	mov    %rcx,%rsi
    fe2a:	48 89 c7             	mov    %rax,%rdi
    fe2d:	e8 9e 49 ff ff       	call   47d0 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
    fe32:	e8 f9 43 ff ff       	call   4230 <glfwWaitEvents@plt>
  while (width == 0 || heigth == 0) {
    fe37:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fe3a:	85 c0                	test   %eax,%eax
    fe3c:	74 da                	je     fe18 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
    fe3e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    fe41:	85 c0                	test   %eax,%eax
    fe43:	74 d3                	je     fe18 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
  }

  /* Recreate the swapchain */
  vkDeviceWaitIdle(device);
    fe45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe49:	48 8b 40 50          	mov    0x50(%rax),%rax
    fe4d:	48 89 c7             	mov    %rax,%rdi
    fe50:	e8 6b 42 ff ff       	call   40c0 <vkDeviceWaitIdle@plt>
  cleanupSwapchain();
    fe55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe59:	48 89 c7             	mov    %rax,%rdi
    fe5c:	e8 33 00 00 00       	call   fe94 <_ZN9VulkanApp16cleanupSwapchainEv>
  createSwapchain();
    fe61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe65:	48 89 c7             	mov    %rax,%rdi
    fe68:	e8 3b ef ff ff       	call   eda8 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    fe6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe71:	48 89 c7             	mov    %rax,%rdi
    fe74:	e8 75 ef ff ff       	call   edee <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    fe79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe7d:	48 89 c7             	mov    %rax,%rdi
    fe80:	e8 15 f1 ff ff       	call   ef9a <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
    fe85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe89:	48 89 c7             	mov    %rax,%rdi
    fe8c:	e8 5d fd ff ff       	call   fbee <_ZN9VulkanApp18createFramebuffersEv>
}
    fe91:	90                   	nop
    fe92:	c9                   	leave
    fe93:	c3                   	ret

000000000000fe94 <_ZN9VulkanApp16cleanupSwapchainEv>:

void VulkanApp::cleanupSwapchain() {
    fe94:	55                   	push   %rbp
    fe95:	48 89 e5             	mov    %rsp,%rbp
    fe98:	48 83 ec 50          	sub    $0x50,%rsp
    fe9c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  for (auto &framebuffer : framebuffers) {
    fea0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fea4:	48 05 00 01 00 00    	add    $0x100,%rax
    feaa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    feae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    feb2:	48 89 c7             	mov    %rax,%rdi
    feb5:	e8 d4 3a 00 00       	call   1398e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    feba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    febe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fec2:	48 89 c7             	mov    %rax,%rdi
    fec5:	e8 ea 3a 00 00       	call   139b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    feca:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fece:	eb 3b                	jmp    ff0b <_ZN9VulkanApp16cleanupSwapchainEv+0x77>
    fed0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fed4:	48 89 c7             	mov    %rax,%rdi
    fed7:	e8 5c 3b 00 00       	call   13a38 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    fedc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
    fee0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fee4:	48 8b 08             	mov    (%rax),%rcx
    fee7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    feeb:	48 8b 40 50          	mov    0x50(%rax),%rax
    feef:	ba 00 00 00 00       	mov    $0x0,%edx
    fef4:	48 89 ce             	mov    %rcx,%rsi
    fef7:	48 89 c7             	mov    %rax,%rdi
    fefa:	e8 ce 79 ff ff       	call   78cd <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    feff:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ff03:	48 89 c7             	mov    %rax,%rdi
    ff06:	e8 0d 3b 00 00       	call   13a18 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    ff0b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ff0f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ff13:	48 89 d6             	mov    %rdx,%rsi
    ff16:	48 89 c7             	mov    %rax,%rdi
    ff19:	e8 bf 3a 00 00       	call   139dd <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ff1e:	84 c0                	test   %al,%al
    ff20:	75 ae                	jne    fed0 <_ZN9VulkanApp16cleanupSwapchainEv+0x3c>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
    ff22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff26:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    ff2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff31:	48 8b 40 50          	mov    0x50(%rax),%rax
    ff35:	ba 00 00 00 00       	mov    $0x0,%edx
    ff3a:	48 89 ce             	mov    %rcx,%rsi
    ff3d:	48 89 c7             	mov    %rax,%rdi
    ff40:	e8 cb 78 ff ff       	call   7810 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    ff45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff49:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
    ff50:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff54:	48 8b 40 50          	mov    0x50(%rax),%rax
    ff58:	ba 00 00 00 00       	mov    $0x0,%edx
    ff5d:	48 89 ce             	mov    %rcx,%rsi
    ff60:	48 89 c7             	mov    %rax,%rdi
    ff63:	e8 4c 78 ff ff       	call   77b4 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    ff68:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff6c:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    ff73:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff77:	48 8b 40 50          	mov    0x50(%rax),%rax
    ff7b:	ba 00 00 00 00       	mov    $0x0,%edx
    ff80:	48 89 ce             	mov    %rcx,%rsi
    ff83:	48 89 c7             	mov    %rax,%rdi
    ff86:	e8 57 78 ff ff       	call   77e2 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    ff8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff8f:	48 05 a8 00 00 00    	add    $0xa8,%rax
    ff95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ff99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ff9d:	48 89 c7             	mov    %rax,%rdi
    ffa0:	e8 a5 3a 00 00       	call   13a4a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    ffa5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ffa9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ffad:	48 89 c7             	mov    %rax,%rdi
    ffb0:	e8 bb 3a 00 00       	call   13a70 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    ffb5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ffb9:	eb 3b                	jmp    fff6 <_ZN9VulkanApp16cleanupSwapchainEv+0x162>
    ffbb:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ffbf:	48 89 c7             	mov    %rax,%rdi
    ffc2:	e8 2d 3b 00 00       	call   13af4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    ffc7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
    ffcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffcf:	48 8b 08             	mov    (%rax),%rcx
    ffd2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffd6:	48 8b 40 50          	mov    0x50(%rax),%rax
    ffda:	ba 00 00 00 00       	mov    $0x0,%edx
    ffdf:	48 89 ce             	mov    %rcx,%rsi
    ffe2:	48 89 c7             	mov    %rax,%rdi
    ffe5:	e8 6e 77 ff ff       	call   7758 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    ffea:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ffee:	48 89 c7             	mov    %rax,%rdi
    fff1:	e8 de 3a 00 00       	call   13ad4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    fff6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    fffa:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fffe:	48 89 d6             	mov    %rdx,%rsi
   10001:	48 89 c7             	mov    %rax,%rdi
   10004:	e8 90 3a 00 00       	call   13a99 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10009:	84 c0                	test   %al,%al
   1000b:	75 ae                	jne    ffbb <_ZN9VulkanApp16cleanupSwapchainEv+0x127>
  }
  vkh::destroySwapchain(device, swapchain.self);
   1000d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10011:	48 8b 48 70          	mov    0x70(%rax),%rcx
   10015:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10019:	48 8b 40 50          	mov    0x50(%rax),%rax
   1001d:	ba 00 00 00 00       	mov    $0x0,%edx
   10022:	48 89 ce             	mov    %rcx,%rsi
   10025:	48 89 c7             	mov    %rax,%rdi
   10028:	e8 fd 76 ff ff       	call   772a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
}
   1002d:	90                   	nop
   1002e:	c9                   	leave
   1002f:	c3                   	ret

0000000000010030 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>:

void VulkanApp::framebufferResizeCallback(GLFWwindow *windowInstance,
                                          [[maybe_unused]] int width,
                                          [[maybe_unused]] int height) {
   10030:	55                   	push   %rbp
   10031:	48 89 e5             	mov    %rsp,%rbp
   10034:	48 83 ec 20          	sub    $0x20,%rsp
   10038:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1003c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1003f:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app =
      reinterpret_cast<VulkanApp *>(glfwGetWindowUserPointer(windowInstance));
   10042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10046:	48 89 c7             	mov    %rax,%rdi
   10049:	e8 52 46 ff ff       	call   46a0 <glfwGetWindowUserPointer@plt>
   1004e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->framebufferResized = true;
   10052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10056:	c6 80 18 01 00 00 01 	movb   $0x1,0x118(%rax)
}
   1005d:	90                   	nop
   1005e:	c9                   	leave
   1005f:	c3                   	ret

0000000000010060 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
   10060:	55                   	push   %rbp
   10061:	48 89 e5             	mov    %rsp,%rbp
   10064:	48 83 ec 30          	sub    $0x30,%rsp
   10068:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
   1006c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10070:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   10074:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
   10079:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
   10080:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10087:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
   10088:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
   1008f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10093:	8b 40 68             	mov    0x68(%rax),%eax
   10096:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
   10099:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1009d:	48 8b 40 50          	mov    0x50(%rax),%rax
   100a1:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   100a5:	ba 00 00 00 00       	mov    $0x0,%edx
   100aa:	48 89 ce             	mov    %rcx,%rsi
   100ad:	48 89 c7             	mov    %rax,%rdi
   100b0:	e8 00 6b ff ff       	call   6bb5 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
   100b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   100b9:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
   100c0:	90                   	nop
   100c1:	c9                   	leave
   100c2:	c3                   	ret
   100c3:	90                   	nop

00000000000100c4 <_ZN9VulkanApp14findMemoryTypeEjj>:

uint32_t VulkanApp::findMemoryType(uint32_t typeFilter,
                                   VkMemoryPropertyFlags propFlags) {
   100c4:	55                   	push   %rbp
   100c5:	48 89 e5             	mov    %rsp,%rbp
   100c8:	41 54                	push   %r12
   100ca:	53                   	push   %rbx
   100cb:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
   100d2:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
   100d9:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
   100df:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)
  VkPhysicalDeviceMemoryProperties memoryProperties;
  vkGetPhysicalDeviceMemoryProperties(physicalDevice, &memoryProperties);
   100e5:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   100ec:	48 8b 40 58          	mov    0x58(%rax),%rax
   100f0:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
   100f7:	48 89 d6             	mov    %rdx,%rsi
   100fa:	48 89 c7             	mov    %rax,%rdi
   100fd:	e8 be 46 ff ff       	call   47c0 <vkGetPhysicalDeviceMemoryProperties@plt>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   10102:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   10109:	eb 39                	jmp    10144 <_ZN9VulkanApp14findMemoryTypeEjj+0x80>
    if (typeFilter & (1 << i) &&
   1010b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1010e:	ba 01 00 00 00       	mov    $0x1,%edx
   10113:	89 c1                	mov    %eax,%ecx
   10115:	d3 e2                	shl    %cl,%edx
   10117:	89 d0                	mov    %edx,%eax
   10119:	23 85 d4 fd ff ff    	and    -0x22c(%rbp),%eax
   1011f:	85 c0                	test   %eax,%eax
   10121:	74 1d                	je     10140 <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
        (memoryProperties.memoryTypes[i].propertyFlags & propFlags) ==
   10123:	8b 45 ec             	mov    -0x14(%rbp),%eax
   10126:	8b 84 c5 e4 fd ff ff 	mov    -0x21c(%rbp,%rax,8),%eax
   1012d:	23 85 d0 fd ff ff    	and    -0x230(%rbp),%eax
    if (typeFilter & (1 << i) &&
   10133:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%rbp)
   10139:	75 05                	jne    10140 <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
            propFlags) {
      return i;
   1013b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1013e:	eb 60                	jmp    101a0 <_ZN9VulkanApp14findMemoryTypeEjj+0xdc>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   10140:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   10144:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
   1014a:	39 45 ec             	cmp    %eax,-0x14(%rbp)
   1014d:	72 bc                	jb     1010b <_ZN9VulkanApp14findMemoryTypeEjj+0x47>
    }
  }
  throw std::runtime_error("Failed to find suitable memory type.");
   1014f:	bf 10 00 00 00       	mov    $0x10,%edi
   10154:	e8 57 40 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   10159:	48 89 c3             	mov    %rax,%rbx
   1015c:	48 8d 05 dd fc 00 00 	lea    0xfcdd(%rip),%rax        # 1fe40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x168>
   10163:	48 89 c6             	mov    %rax,%rsi
   10166:	48 89 df             	mov    %rbx,%rdi
   10169:	e8 c2 3f ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   1016e:	48 8b 05 33 fe 01 00 	mov    0x1fe33(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10175:	48 89 c2             	mov    %rax,%rdx
   10178:	48 8d 05 c1 fb 01 00 	lea    0x1fbc1(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1017f:	48 89 c6             	mov    %rax,%rsi
   10182:	48 89 df             	mov    %rbx,%rdi
   10185:	e8 c6 46 ff ff       	call   4850 <__cxa_throw@plt>
   1018a:	49 89 c4             	mov    %rax,%r12
   1018d:	48 89 df             	mov    %rbx,%rdi
   10190:	e8 2b 41 ff ff       	call   42c0 <__cxa_free_exception@plt>
   10195:	4c 89 e0             	mov    %r12,%rax
   10198:	48 89 c7             	mov    %rax,%rdi
   1019b:	e8 10 47 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
   101a0:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
   101a7:	5b                   	pop    %rbx
   101a8:	41 5c                	pop    %r12
   101aa:	5d                   	pop    %rbp
   101ab:	c3                   	ret

00000000000101ac <_ZN9VulkanApp19createVertexBuffersEv>:

void VulkanApp::createVertexBuffers() {
   101ac:	55                   	push   %rbp
   101ad:	48 89 e5             	mov    %rsp,%rbp
   101b0:	41 54                	push   %r12
   101b2:	53                   	push   %rbx
   101b3:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   101ba:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
  static constexpr uint32_t vertexBufferCount = 1;
  VkBufferCreateInfo bufferInfo{};
   101c1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   101c5:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   101c9:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   101cd:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   101d1:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
   101d6:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size =
      vertexBufferCount * sizeof(shader::triangle[0]) * shader::triangle.size();
   101dd:	48 8d 05 3c 04 02 00 	lea    0x2043c(%rip),%rax        # 30620 <_ZN6shaderL8triangleE>
   101e4:	48 89 c7             	mov    %rax,%rdi
   101e7:	e8 1a 39 00 00       	call   13b06 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>
   101ec:	48 89 c2             	mov    %rax,%rdx
   101ef:	48 89 d0             	mov    %rdx,%rax
   101f2:	48 c1 e0 02          	shl    $0x2,%rax
   101f6:	48 01 d0             	add    %rdx,%rax
   101f9:	48 c1 e0 02          	shl    $0x2,%rax
  bufferInfo.size =
   101fd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT;
   10201:	c7 45 d0 80 00 00 00 	movl   $0x80,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
   10208:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &vertexBuffer) !=
   1020f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10216:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
   1021d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10224:	48 8b 40 50          	mov    0x50(%rax),%rax
   10228:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   1022c:	48 89 d1             	mov    %rdx,%rcx
   1022f:	ba 00 00 00 00       	mov    $0x0,%edx
   10234:	48 89 c7             	mov    %rax,%rdi
   10237:	e8 04 42 ff ff       	call   4440 <vkCreateBuffer@plt>
   1023c:	85 c0                	test   %eax,%eax
   1023e:	0f 95 c0             	setne  %al
   10241:	84 c0                	test   %al,%al
   10243:	74 3b                	je     10280 <_ZN9VulkanApp19createVertexBuffersEv+0xd4>
      VK_SUCCESS) {
    throw std::runtime_error("Failed creating vertex buffer.");
   10245:	bf 10 00 00 00       	mov    $0x10,%edi
   1024a:	e8 61 3f ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   1024f:	48 89 c3             	mov    %rax,%rbx
   10252:	48 8d 05 17 fc 00 00 	lea    0xfc17(%rip),%rax        # 1fe70 <_ZZN9VulkanApp19createVertexBuffersEvE17vertexBufferCount+0x8>
   10259:	48 89 c6             	mov    %rax,%rsi
   1025c:	48 89 df             	mov    %rbx,%rdi
   1025f:	e8 cc 3e ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10264:	48 8b 05 3d fd 01 00 	mov    0x1fd3d(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1026b:	48 89 c2             	mov    %rax,%rdx
   1026e:	48 8d 05 cb fa 01 00 	lea    0x1facb(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10275:	48 89 c6             	mov    %rax,%rsi
   10278:	48 89 df             	mov    %rbx,%rdi
   1027b:	e8 d0 45 ff ff       	call   4850 <__cxa_throw@plt>
  }

  VkMemoryRequirements memoryRequirements;
  vkGetBufferMemoryRequirements(device, vertexBuffer, &memoryRequirements);
   10280:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10287:	48 8b 88 98 01 00 00 	mov    0x198(%rax),%rcx
   1028e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10295:	48 8b 40 50          	mov    0x50(%rax),%rax
   10299:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   1029d:	48 89 ce             	mov    %rcx,%rsi
   102a0:	48 89 c7             	mov    %rax,%rdi
   102a3:	e8 e8 3d ff ff       	call   4090 <vkGetBufferMemoryRequirements@plt>

  VkMemoryAllocateInfo allocInfo{};
   102a8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   102ac:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   102b3:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
   102b7:	c7 85 70 ff ff ff 05 	movl   $0x5,-0x90(%rbp)
   102be:	00 00 00 
  allocInfo.allocationSize = memoryRequirements.size;
   102c1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   102c5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  allocInfo.memoryTypeIndex =
      findMemoryType(memoryRequirements.memoryTypeBits,
   102c9:	8b 4d a0             	mov    -0x60(%rbp),%ecx
   102cc:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   102d3:	ba 06 00 00 00       	mov    $0x6,%edx
   102d8:	89 ce                	mov    %ecx,%esi
   102da:	48 89 c7             	mov    %rax,%rdi
   102dd:	e8 e2 fd ff ff       	call   100c4 <_ZN9VulkanApp14findMemoryTypeEjj>
  allocInfo.memoryTypeIndex =
   102e2:	89 45 88             	mov    %eax,-0x78(%rbp)
                     VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT |
                         VK_MEMORY_PROPERTY_HOST_COHERENT_BIT);
  if (vkAllocateMemory(device, &allocInfo, nullptr, &vertexBufferMemory) !=
   102e5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   102ec:	48 8d 90 a0 01 00 00 	lea    0x1a0(%rax),%rdx
   102f3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   102fa:	48 8b 40 50          	mov    0x50(%rax),%rax
   102fe:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
   10305:	48 89 d1             	mov    %rdx,%rcx
   10308:	ba 00 00 00 00       	mov    $0x0,%edx
   1030d:	48 89 c7             	mov    %rax,%rdi
   10310:	e8 1b 45 ff ff       	call   4830 <vkAllocateMemory@plt>
   10315:	85 c0                	test   %eax,%eax
   10317:	0f 95 c0             	setne  %al
   1031a:	84 c0                	test   %al,%al
   1031c:	74 3b                	je     10359 <_ZN9VulkanApp19createVertexBuffersEv+0x1ad>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   1031e:	bf 10 00 00 00       	mov    $0x10,%edi
   10323:	e8 88 3e ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   10328:	48 89 c3             	mov    %rax,%rbx
   1032b:	48 8d 05 5e fb 00 00 	lea    0xfb5e(%rip),%rax        # 1fe90 <_ZZN9VulkanApp19createVertexBuffersEvE17vertexBufferCount+0x28>
   10332:	48 89 c6             	mov    %rax,%rsi
   10335:	48 89 df             	mov    %rbx,%rdi
   10338:	e8 f3 3d ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   1033d:	48 8b 05 64 fc 01 00 	mov    0x1fc64(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10344:	48 89 c2             	mov    %rax,%rdx
   10347:	48 8d 05 f2 f9 01 00 	lea    0x1f9f2(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1034e:	48 89 c6             	mov    %rax,%rsi
   10351:	48 89 df             	mov    %rbx,%rdi
   10354:	e8 f7 44 ff ff       	call   4850 <__cxa_throw@plt>
  }
  vkBindBufferMemory(device, vertexBuffer, vertexBufferMemory, 0);
   10359:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10360:	48 8b 90 a0 01 00 00 	mov    0x1a0(%rax),%rdx
   10367:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1036e:	48 8b b0 98 01 00 00 	mov    0x198(%rax),%rsi
   10375:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1037c:	48 8b 40 50          	mov    0x50(%rax),%rax
   10380:	b9 00 00 00 00       	mov    $0x0,%ecx
   10385:	48 89 c7             	mov    %rax,%rdi
   10388:	e8 03 42 ff ff       	call   4590 <vkBindBufferMemory@plt>

  /* Copy the vertex data to the buffer */
  void *data;
  vkMapMemory(device, vertexBufferMemory, 0, bufferInfo.size, 0, &data);
   1038d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10391:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   10398:	48 8b b0 a0 01 00 00 	mov    0x1a0(%rax),%rsi
   1039f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   103a6:	48 8b 40 50          	mov    0x50(%rax),%rax
   103aa:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   103b1:	49 89 c9             	mov    %rcx,%r9
   103b4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   103ba:	48 89 d1             	mov    %rdx,%rcx
   103bd:	ba 00 00 00 00       	mov    $0x0,%edx
   103c2:	48 89 c7             	mov    %rax,%rdi
   103c5:	e8 06 40 ff ff       	call   43d0 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle.data(),
              static_cast<size_t>(bufferInfo.size));
   103ca:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  std::memcpy(data, shader::triangle.data(),
   103ce:	48 8d 05 4b 02 02 00 	lea    0x2024b(%rip),%rax        # 30620 <_ZN6shaderL8triangleE>
   103d5:	48 89 c7             	mov    %rax,%rdi
   103d8:	e8 57 37 00 00       	call   13b34 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>
   103dd:	48 89 c1             	mov    %rax,%rcx
   103e0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   103e7:	48 89 da             	mov    %rbx,%rdx
   103ea:	48 89 ce             	mov    %rcx,%rsi
   103ed:	48 89 c7             	mov    %rax,%rdi
   103f0:	e8 3b 3f ff ff       	call   4330 <memcpy@plt>
  vkUnmapMemory(device, vertexBufferMemory);
   103f5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   103fc:	48 8b 90 a0 01 00 00 	mov    0x1a0(%rax),%rdx
   10403:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
   1040a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1040e:	48 89 d6             	mov    %rdx,%rsi
   10411:	48 89 c7             	mov    %rax,%rdi
   10414:	e8 07 3f ff ff       	call   4320 <vkUnmapMemory@plt>
}
   10419:	eb 2c                	jmp    10447 <_ZN9VulkanApp19createVertexBuffersEv+0x29b>
    throw std::runtime_error("Failed creating vertex buffer.");
   1041b:	49 89 c4             	mov    %rax,%r12
   1041e:	48 89 df             	mov    %rbx,%rdi
   10421:	e8 9a 3e ff ff       	call   42c0 <__cxa_free_exception@plt>
   10426:	4c 89 e0             	mov    %r12,%rax
   10429:	48 89 c7             	mov    %rax,%rdi
   1042c:	e8 7f 44 ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   10431:	49 89 c4             	mov    %rax,%r12
   10434:	48 89 df             	mov    %rbx,%rdi
   10437:	e8 84 3e ff ff       	call   42c0 <__cxa_free_exception@plt>
   1043c:	4c 89 e0             	mov    %r12,%rax
   1043f:	48 89 c7             	mov    %rax,%rdi
   10442:	e8 69 44 ff ff       	call   48b0 <_Unwind_Resume@plt>
}
   10447:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   1044e:	5b                   	pop    %rbx
   1044f:	41 5c                	pop    %r12
   10451:	5d                   	pop    %rbp
   10452:	c3                   	ret
   10453:	90                   	nop

0000000000010454 <_ZN9VulkanApp20createCommandBuffersEv>:

void VulkanApp::createCommandBuffers() {
   10454:	55                   	push   %rbp
   10455:	48 89 e5             	mov    %rsp,%rbp
   10458:	48 83 ec 50          	sub    $0x50,%rsp
   1045c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
   10460:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10464:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   10468:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   1046c:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
   10473:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10477:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   1047e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   10482:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount =
      static_cast<uint32_t>(maxFramesInFlight);
   10489:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1048d:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  cmdBufferAllocInfo.commandBufferCount =
   10494:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffers = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
   10497:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1049b:	48 8b 48 50          	mov    0x50(%rax),%rcx
   1049f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   104a3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   104a7:	48 89 ce             	mov    %rcx,%rsi
   104aa:	48 89 c7             	mov    %rax,%rdi
   104ad:	e8 e1 54 ff ff       	call   5993 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   104b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   104b6:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   104bd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   104c1:	48 89 c6             	mov    %rax,%rsi
   104c4:	48 89 d7             	mov    %rdx,%rdi
   104c7:	e8 8c 36 00 00       	call   13b58 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>
   104cc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   104d0:	48 89 c7             	mov    %rax,%rdi
   104d3:	e8 b2 57 ff ff       	call   5c8a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
   104d8:	90                   	nop
   104d9:	c9                   	leave
   104da:	c3                   	ret
   104db:	90                   	nop

00000000000104dc <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
   104dc:	55                   	push   %rbp
   104dd:	48 89 e5             	mov    %rsp,%rbp
   104e0:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   104e7:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   104ee:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   104f5:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
  /* 1. Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
   104fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   104ff:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   10503:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   10507:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
   1050e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
   10515:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1051c:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
   1051d:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10521:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10528:	48 89 d6             	mov    %rdx,%rsi
   1052b:	48 89 c7             	mov    %rax,%rdi
   1052e:	e8 63 55 ff ff       	call   5a96 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* 2. Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
   10533:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10537:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   1053c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10540:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   10545:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10549:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   1054e:	f3 0f 10 05 02 fd 00 	movss  0xfd02(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   10555:	00 
   10556:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
   1055b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1055f:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10563:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   10567:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   1056b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
   1056f:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
   10576:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1057d:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   10584:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
   10588:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1058f:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   10596:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   1059c:	48 89 c6             	mov    %rax,%rsi
   1059f:	48 89 d7             	mov    %rdx,%rdi
   105a2:	e8 c7 33 00 00       	call   1396e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   105a7:	48 8b 00             	mov    (%rax),%rax
   105aa:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
   105ae:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   105b5:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
   105bc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   105c3:	48 8b 40 7c          	mov    0x7c(%rax),%rax
   105c7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
   105cb:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
   105d2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   105d6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
   105da:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   105de:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   105e5:	ba 00 00 00 00       	mov    $0x0,%edx
   105ea:	48 89 ce             	mov    %rcx,%rsi
   105ed:	48 89 c7             	mov    %rax,%rdi
   105f0:	e8 fb 40 ff ff       	call   46f0 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* 3. Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
   105f5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   105fc:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
   10603:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1060a:	be 00 00 00 00       	mov    $0x0,%esi
   1060f:	48 89 c7             	mov    %rax,%rdi
   10612:	e8 89 3d ff ff       	call   43a0 <vkCmdBindPipeline@plt>
                    graphicsPipeline.self);

  /* Binding the vertex buffers */
  VkBuffer vertexBuffers[] = {vertexBuffer};
   10617:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1061e:	48 8b 80 98 01 00 00 	mov    0x198(%rax),%rax
   10625:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  VkDeviceSize offsets[] = {0};
   10629:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   10630:	00 
  vkCmdBindVertexBuffers(cmdBuffer, 0, 1, vertexBuffers, offsets);
   10631:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
   10635:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   10639:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10640:	49 89 c8             	mov    %rcx,%r8
   10643:	48 89 d1             	mov    %rdx,%rcx
   10646:	ba 01 00 00 00       	mov    $0x1,%edx
   1064b:	be 00 00 00 00       	mov    $0x0,%esi
   10650:	48 89 c7             	mov    %rax,%rdi
   10653:	e8 b8 40 ff ff       	call   4710 <vkCmdBindVertexBuffers@plt>

  static const uint32_t instanceCount = 1;
  static const uint32_t firstVertex = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDraw(cmdBuffer, static_cast<uint32_t>(shader::triangle.size()),
   10658:	48 8d 05 c1 ff 01 00 	lea    0x1ffc1(%rip),%rax        # 30620 <_ZN6shaderL8triangleE>
   1065f:	48 89 c7             	mov    %rax,%rdi
   10662:	e8 9f 34 00 00       	call   13b06 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>
   10667:	89 c6                	mov    %eax,%esi
   10669:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   10670:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10676:	b9 00 00 00 00       	mov    $0x0,%ecx
   1067b:	ba 01 00 00 00       	mov    $0x1,%edx
   10680:	48 89 c7             	mov    %rax,%rdi
   10683:	e8 a8 42 ff ff       	call   4930 <vkCmdDraw@plt>
            instanceCount, firstVertex, firstInstance);

  /* 4. End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
   10688:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1068f:	48 89 c7             	mov    %rax,%rdi
   10692:	e8 b9 39 ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
   10697:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1069e:	48 89 c7             	mov    %rax,%rdi
   106a1:	e8 7a 54 ff ff       	call   5b20 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
   106a6:	90                   	nop
   106a7:	c9                   	leave
   106a8:	c3                   	ret
   106a9:	90                   	nop

00000000000106aa <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
   106aa:	55                   	push   %rbp
   106ab:	48 89 e5             	mov    %rsp,%rbp
   106ae:	53                   	push   %rbx
   106af:	48 83 ec 58          	sub    $0x58,%rsp
   106b3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
   106b7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   106bb:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   106bf:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
   106c4:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
   106cb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   106cf:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   106d3:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
   106d8:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
   106df:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  sync.imageAvailableSemaphore.resize(maxFramesInFlight);
   106e6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106ea:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   106f1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106f5:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   106fc:	48 89 c6             	mov    %rax,%rsi
   106ff:	48 89 d7             	mov    %rdx,%rdi
   10702:	e8 89 34 00 00       	call   13b90 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.renderFinisedSemaphore.resize(maxFramesInFlight);
   10707:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1070b:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   10712:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10716:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1071d:	48 89 c6             	mov    %rax,%rsi
   10720:	48 89 d7             	mov    %rdx,%rdi
   10723:	e8 68 34 00 00       	call   13b90 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.inFlightFence.resize(maxFramesInFlight);
   10728:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1072c:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   10733:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10737:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1073e:	48 89 c6             	mov    %rax,%rsi
   10741:	48 89 d7             	mov    %rdx,%rdi
   10744:	e8 cd 34 00 00       	call   13c16 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   10749:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10750:	00 
   10751:	e9 b9 00 00 00       	jmp    1080f <_ZN9VulkanApp28createSynchronizationObjectsEv+0x165>
    sync.imageAvailableSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   10756:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1075a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1075e:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   10762:	ba 00 00 00 00       	mov    $0x0,%edx
   10767:	48 89 ce             	mov    %rcx,%rsi
   1076a:	48 89 c7             	mov    %rax,%rdi
   1076d:	e8 e3 64 ff ff       	call   6c55 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   10772:	48 89 c3             	mov    %rax,%rbx
    sync.imageAvailableSemaphore[i] =
   10775:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10779:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   10780:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10784:	48 89 c6             	mov    %rax,%rsi
   10787:	48 89 d7             	mov    %rdx,%rdi
   1078a:	e8 0d 35 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1078f:	48 89 18             	mov    %rbx,(%rax)
    sync.renderFinisedSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   10792:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10796:	48 8b 40 50          	mov    0x50(%rax),%rax
   1079a:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1079e:	ba 00 00 00 00       	mov    $0x0,%edx
   107a3:	48 89 ce             	mov    %rcx,%rsi
   107a6:	48 89 c7             	mov    %rax,%rdi
   107a9:	e8 a7 64 ff ff       	call   6c55 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   107ae:	48 89 c3             	mov    %rax,%rbx
    sync.renderFinisedSemaphore[i] =
   107b1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   107b5:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   107bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107c0:	48 89 c6             	mov    %rax,%rsi
   107c3:	48 89 d7             	mov    %rdx,%rdi
   107c6:	e8 d1 34 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   107cb:	48 89 18             	mov    %rbx,(%rax)
    sync.inFlightFence[i] = vkh::createFence(device, &fenceInfo);
   107ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   107d2:	48 8b 40 50          	mov    0x50(%rax),%rax
   107d6:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   107da:	ba 00 00 00 00       	mov    $0x0,%edx
   107df:	48 89 ce             	mov    %rcx,%rsi
   107e2:	48 89 c7             	mov    %rax,%rdi
   107e5:	e8 03 65 ff ff       	call   6ced <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
   107ea:	48 89 c3             	mov    %rax,%rbx
   107ed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   107f1:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   107f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107fc:	48 89 c6             	mov    %rax,%rsi
   107ff:	48 89 d7             	mov    %rdx,%rdi
   10802:	e8 b5 34 00 00       	call   13cbc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   10807:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1080a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   1080f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10813:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1081a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1081e:	0f 82 32 ff ff ff    	jb     10756 <_ZN9VulkanApp28createSynchronizationObjectsEv+0xac>
  }
}
   10824:	90                   	nop
   10825:	90                   	nop
   10826:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1082a:	c9                   	leave
   1082b:	c3                   	ret

000000000001082c <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
   1082c:	55                   	push   %rbp
   1082d:	48 89 e5             	mov    %rsp,%rbp
   10830:	41 57                	push   %r15
   10832:	41 56                	push   %r14
   10834:	41 55                	push   %r13
   10836:	41 54                	push   %r12
   10838:	53                   	push   %rbx
   10839:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   10840:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* 1. Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence[sync.currentFrame], VK_TRUE,
   10847:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1084e:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   10855:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1085c:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10863:	48 89 c6             	mov    %rax,%rsi
   10866:	48 89 d7             	mov    %rdx,%rdi
   10869:	e8 4e 34 00 00       	call   13cbc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   1086e:	48 89 c2             	mov    %rax,%rdx
   10871:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10878:	48 8b 40 50          	mov    0x50(%rax),%rax
   1087c:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   10883:	b9 01 00 00 00       	mov    $0x1,%ecx
   10888:	be 01 00 00 00       	mov    $0x1,%esi
   1088d:	48 89 c7             	mov    %rax,%rdi
   10890:	e8 8b 39 ff ff       	call   4220 <vkWaitForFences@plt>

  /* 2. Acquire an image frome the swapchain */
  uint32_t imageIndex;
  VkResult result =
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
                            sync.imageAvailableSemaphore[sync.currentFrame],
   10895:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1089c:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   108a3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   108aa:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   108b1:	48 89 c6             	mov    %rax,%rsi
   108b4:	48 89 d7             	mov    %rdx,%rdi
   108b7:	e8 e0 33 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
   108bc:	48 8b 10             	mov    (%rax),%rdx
   108bf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   108c6:	48 8b 70 70          	mov    0x70(%rax),%rsi
   108ca:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   108d1:	48 8b 40 50          	mov    0x50(%rax),%rax
   108d5:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
   108d9:	49 89 c9             	mov    %rcx,%r9
   108dc:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   108e2:	48 89 d1             	mov    %rdx,%rcx
   108e5:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   108ec:	48 89 c7             	mov    %rax,%rdi
   108ef:	e8 6c 38 ff ff       	call   4160 <vkAcquireNextImageKHR@plt>
   108f4:	89 45 cc             	mov    %eax,-0x34(%rbp)
                            VK_NULL_HANDLE, &imageIndex);
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR) {
   108f7:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   108fe:	74 09                	je     10909 <_ZN9VulkanApp6renderEv+0xdd>
   10900:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   10907:	75 14                	jne    1091d <_ZN9VulkanApp6renderEv+0xf1>
    recreateSwapchain();
   10909:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10910:	48 89 c7             	mov    %rax,%rdi
   10913:	e8 ca f4 ff ff       	call   fde2 <_ZN9VulkanApp17recreateSwapchainEv>
    throw std::runtime_error("Failed to present swapchain image.");
  }

  /* 6. Set up the next frame */
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
}
   10918:	e9 f6 05 00 00       	jmp    10f13 <_ZN9VulkanApp6renderEv+0x6e7>
  } else if (result != VK_SUCCESS) {
   1091d:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   10921:	74 3b                	je     1095e <_ZN9VulkanApp6renderEv+0x132>
    throw std::runtime_error("Failed to acquire swapchain image.");
   10923:	bf 10 00 00 00       	mov    $0x10,%edi
   10928:	e8 83 38 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   1092d:	48 89 c3             	mov    %rax,%rbx
   10930:	48 8d 05 99 f5 00 00 	lea    0xf599(%rip),%rax        # 1fed0 <_ZZN9VulkanApp6renderEvE11submitCount+0x8>
   10937:	48 89 c6             	mov    %rax,%rsi
   1093a:	48 89 df             	mov    %rbx,%rdi
   1093d:	e8 ee 37 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10942:	48 8b 05 5f f6 01 00 	mov    0x1f65f(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10949:	48 89 c2             	mov    %rax,%rdx
   1094c:	48 8d 05 ed f3 01 00 	lea    0x1f3ed(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10953:	48 89 c6             	mov    %rax,%rsi
   10956:	48 89 df             	mov    %rbx,%rdi
   10959:	e8 f2 3e ff ff       	call   4850 <__cxa_throw@plt>
  vkResetFences(device, 1, &sync.inFlightFence[sync.currentFrame]);
   1095e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10965:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   1096c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10973:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   1097a:	48 89 c6             	mov    %rax,%rsi
   1097d:	48 89 d7             	mov    %rdx,%rdi
   10980:	e8 37 33 00 00       	call   13cbc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   10985:	48 89 c2             	mov    %rax,%rdx
   10988:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1098f:	48 8b 40 50          	mov    0x50(%rax),%rax
   10993:	be 01 00 00 00       	mov    $0x1,%esi
   10998:	48 89 c7             	mov    %rax,%rdi
   1099b:	e8 e0 3d ff ff       	call   4780 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[sync.currentFrame], 0);
   109a0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109a7:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   109ae:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109b5:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   109bc:	48 89 c6             	mov    %rax,%rsi
   109bf:	48 89 d7             	mov    %rdx,%rdi
   109c2:	e8 15 33 00 00       	call   13cdc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   109c7:	48 8b 00             	mov    (%rax),%rax
   109ca:	be 00 00 00 00       	mov    $0x0,%esi
   109cf:	48 89 c7             	mov    %rax,%rdi
   109d2:	e8 29 3c ff ff       	call   4600 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[sync.currentFrame], imageIndex);
   109d7:	8b 5d a4             	mov    -0x5c(%rbp),%ebx
   109da:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109e1:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   109e8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   109ef:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   109f6:	48 89 c6             	mov    %rax,%rsi
   109f9:	48 89 d7             	mov    %rdx,%rdi
   109fc:	e8 db 32 00 00       	call   13cdc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   10a01:	48 8b 08             	mov    (%rax),%rcx
   10a04:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a0b:	89 da                	mov    %ebx,%edx
   10a0d:	48 89 ce             	mov    %rcx,%rsi
   10a10:	48 89 c7             	mov    %rax,%rdi
   10a13:	e8 c4 fa ff ff       	call   104dc <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   10a18:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a1f:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   10a26:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10a2d:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10a34:	48 89 c6             	mov    %rax,%rsi
   10a37:	48 89 d7             	mov    %rdx,%rdi
   10a3a:	e8 5d 32 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10a3f:	48 8b 00             	mov    (%rax),%rax
   10a42:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10a46:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
   10a4a:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   10a51:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
   10a58:	01 00 00 00 
   10a5c:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   10a60:	48 89 c7             	mov    %rax,%rdi
   10a63:	e8 94 32 00 00       	call   13cfc <_ZNSaIP13VkSemaphore_TEC1Ev>
   10a68:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
   10a6c:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
   10a73:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
   10a7a:	48 89 ce             	mov    %rcx,%rsi
   10a7d:	48 89 df             	mov    %rbx,%rdi
   10a80:	48 89 df             	mov    %rbx,%rdi
   10a83:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10a87:	48 89 d1             	mov    %rdx,%rcx
   10a8a:	48 89 fa             	mov    %rdi,%rdx
   10a8d:	48 89 c7             	mov    %rax,%rdi
   10a90:	e8 9f 32 00 00       	call   13d34 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10a95:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   10a99:	48 89 c7             	mov    %rax,%rdi
   10a9c:	e8 77 32 00 00       	call   13d18 <_ZNSaIP13VkSemaphore_TED1Ev>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   10aa1:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
   10aa8:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   10aac:	49 89 c6             	mov    %rax,%r14
   10aaf:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   10ab5:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10ab9:	48 89 c7             	mov    %rax,%rdi
   10abc:	e8 3f 33 00 00       	call   13e00 <_ZNSaIjEC1Ev>
   10ac1:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   10ac5:	4c 89 f6             	mov    %r14,%rsi
   10ac8:	4c 89 ff             	mov    %r15,%rdi
   10acb:	4c 89 f1             	mov    %r14,%rcx
   10ace:	4c 89 fb             	mov    %r15,%rbx
   10ad1:	48 89 df             	mov    %rbx,%rdi
   10ad4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10adb:	48 89 d1             	mov    %rdx,%rcx
   10ade:	48 89 fa             	mov    %rdi,%rdx
   10ae1:	48 89 c7             	mov    %rax,%rdi
   10ae4:	e8 4f 33 00 00       	call   13e38 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
   10ae9:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10aed:	48 89 c7             	mov    %rax,%rdi
   10af0:	e8 27 33 00 00       	call   13e1c <_ZNSaIjED1Ev>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   10af5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10afc:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   10b03:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10b0a:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10b11:	48 89 c6             	mov    %rax,%rsi
   10b14:	48 89 d7             	mov    %rdx,%rdi
   10b17:	e8 80 31 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10b1c:	48 8b 00             	mov    (%rax),%rax
   10b1f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10b23:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10b27:	49 89 c4             	mov    %rax,%r12
   10b2a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   10b30:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   10b34:	48 89 c7             	mov    %rax,%rdi
   10b37:	e8 c0 31 00 00       	call   13cfc <_ZNSaIP13VkSemaphore_TEC1Ev>
   10b3c:	48 8d 55 cb          	lea    -0x35(%rbp),%rdx
   10b40:	4c 89 e6             	mov    %r12,%rsi
   10b43:	4c 89 ef             	mov    %r13,%rdi
   10b46:	4c 89 e1             	mov    %r12,%rcx
   10b49:	4c 89 eb             	mov    %r13,%rbx
   10b4c:	48 89 df             	mov    %rbx,%rdi
   10b4f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10b56:	48 89 d1             	mov    %rdx,%rcx
   10b59:	48 89 fa             	mov    %rdi,%rdx
   10b5c:	48 89 c7             	mov    %rax,%rdi
   10b5f:	e8 d0 31 00 00       	call   13d34 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10b64:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   10b68:	48 89 c7             	mov    %rax,%rdi
   10b6b:	e8 a8 31 00 00       	call   13d18 <_ZNSaIP13VkSemaphore_TED1Ev>
  VkSubmitInfo submitInfo{};
   10b70:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10b74:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
   10b7b:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
   10b82:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
   10b89:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   10b90:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
   10b97:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   10b98:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
   10b9f:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
   10ba2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10ba6:	48 89 c7             	mov    %rax,%rdi
   10ba9:	e8 56 33 00 00       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   10bae:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
   10bb4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10bb8:	48 89 c7             	mov    %rax,%rdi
   10bbb:	e8 68 33 00 00       	call   13f28 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   10bc0:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
   10bc7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10bce:	48 89 c7             	mov    %rax,%rdi
   10bd1:	e8 76 33 00 00       	call   13f4c <_ZNSt6vectorIjSaIjEE4dataEv>
   10bd6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = 1;
   10bdd:	c7 85 18 ff ff ff 01 	movl   $0x1,-0xe8(%rbp)
   10be4:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffers[sync.currentFrame];
   10be7:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10bee:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   10bf5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10bfc:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10c03:	48 89 c6             	mov    %rax,%rsi
   10c06:	48 89 d7             	mov    %rdx,%rdi
   10c09:	e8 ce 30 00 00       	call   13cdc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   10c0e:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
      static_cast<uint32_t>(signalSemaphores.size());
   10c15:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10c1c:	48 89 c7             	mov    %rax,%rdi
   10c1f:	e8 e0 32 00 00       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
   10c24:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
   10c2a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10c31:	48 89 c7             	mov    %rax,%rdi
   10c34:	e8 ef 32 00 00       	call   13f28 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   10c39:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   10c40:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10c47:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   10c4e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10c55:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10c5c:	48 89 c6             	mov    %rax,%rsi
   10c5f:	48 89 d7             	mov    %rdx,%rdi
   10c62:	e8 55 30 00 00       	call   13cbc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   10c67:	48 8b 08             	mov    (%rax),%rcx
   10c6a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10c71:	48 8b 40 60          	mov    0x60(%rax),%rax
   10c75:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   10c7c:	be 01 00 00 00       	mov    $0x1,%esi
   10c81:	48 89 c7             	mov    %rax,%rdi
   10c84:	e8 d7 39 ff ff       	call   4660 <vkQueueSubmit@plt>
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   10c89:	85 c0                	test   %eax,%eax
   10c8b:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   10c8e:	84 c0                	test   %al,%al
   10c90:	74 3b                	je     10ccd <_ZN9VulkanApp6renderEv+0x4a1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   10c92:	bf 10 00 00 00       	mov    $0x10,%edi
   10c97:	e8 14 35 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   10c9c:	48 89 c3             	mov    %rax,%rbx
   10c9f:	48 8d 05 52 f2 00 00 	lea    0xf252(%rip),%rax        # 1fef8 <_ZZN9VulkanApp6renderEvE11submitCount+0x30>
   10ca6:	48 89 c6             	mov    %rax,%rsi
   10ca9:	48 89 df             	mov    %rbx,%rdi
   10cac:	e8 7f 34 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10cb1:	48 8b 05 f0 f2 01 00 	mov    0x1f2f0(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10cb8:	48 89 c2             	mov    %rax,%rdx
   10cbb:	48 8d 05 7e f0 01 00 	lea    0x1f07e(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10cc2:	48 89 c6             	mov    %rax,%rsi
   10cc5:	48 89 df             	mov    %rbx,%rdi
   10cc8:	e8 83 3b ff ff       	call   4850 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
   10ccd:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10cd1:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   10cd8:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
   10cdf:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
   10ce6:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
   10ced:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
   10cf4:	cd 9a 3b 
      static_cast<uint32_t>(signalSemaphores.size());
   10cf7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10cfe:	48 89 c7             	mov    %rax,%rdi
   10d01:	e8 fe 31 00 00       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
   10d06:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
   10d0c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10d13:	48 89 c7             	mov    %rax,%rdi
   10d16:	e8 0d 32 00 00       	call   13f28 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   10d1b:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
   10d22:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10d29:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   10d2f:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
   10d35:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10d3c:	48 83 c0 70          	add    $0x70,%rax
   10d40:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
   10d47:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   10d4b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
   10d52:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
   10d59:	00 00 00 00 
  result = vkQueuePresentKHR(queue, &presentInfo);
   10d5d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10d64:	48 8b 40 60          	mov    0x60(%rax),%rax
   10d68:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   10d6f:	48 89 d6             	mov    %rdx,%rsi
   10d72:	48 89 c7             	mov    %rax,%rdi
   10d75:	e8 36 3a ff ff       	call   47b0 <vkQueuePresentKHR@plt>
   10d7a:	89 45 cc             	mov    %eax,-0x34(%rbp)
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   10d7d:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   10d84:	74 1b                	je     10da1 <_ZN9VulkanApp6renderEv+0x575>
   10d86:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   10d8d:	74 12                	je     10da1 <_ZN9VulkanApp6renderEv+0x575>
      framebufferResized) {
   10d8f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10d96:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   10d9d:	84 c0                	test   %al,%al
   10d9f:	74 1f                	je     10dc0 <_ZN9VulkanApp6renderEv+0x594>
    framebufferResized = false;
   10da1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10da8:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
    recreateSwapchain();
   10daf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10db6:	48 89 c7             	mov    %rax,%rdi
   10db9:	e8 24 f0 ff ff       	call   fde2 <_ZN9VulkanApp17recreateSwapchainEv>
   10dbe:	eb 41                	jmp    10e01 <_ZN9VulkanApp6renderEv+0x5d5>
  } else if (result != VK_SUCCESS) {
   10dc0:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   10dc4:	74 3b                	je     10e01 <_ZN9VulkanApp6renderEv+0x5d5>
    throw std::runtime_error("Failed to present swapchain image.");
   10dc6:	bf 10 00 00 00       	mov    $0x10,%edi
   10dcb:	e8 e0 33 ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   10dd0:	48 89 c3             	mov    %rax,%rbx
   10dd3:	48 8d 05 46 f1 00 00 	lea    0xf146(%rip),%rax        # 1ff20 <_ZZN9VulkanApp6renderEvE11submitCount+0x58>
   10dda:	48 89 c6             	mov    %rax,%rsi
   10ddd:	48 89 df             	mov    %rbx,%rdi
   10de0:	e8 4b 33 ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   10de5:	48 8b 05 bc f1 01 00 	mov    0x1f1bc(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10dec:	48 89 c2             	mov    %rax,%rdx
   10def:	48 8d 05 4a ef 01 00 	lea    0x1ef4a(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10df6:	48 89 c6             	mov    %rax,%rsi
   10df9:	48 89 df             	mov    %rbx,%rdi
   10dfc:	e8 4f 3a ff ff       	call   4850 <__cxa_throw@plt>
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
   10e01:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10e08:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   10e0f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   10e13:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10e1a:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
   10e21:	48 89 d0             	mov    %rdx,%rax
   10e24:	ba 00 00 00 00       	mov    $0x0,%edx
   10e29:	48 f7 f1             	div    %rcx
   10e2c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   10e33:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
}
   10e3a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10e41:	48 89 c7             	mov    %rax,%rdi
   10e44:	e8 73 2f 00 00       	call   13dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10e49:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10e50:	48 89 c7             	mov    %rax,%rdi
   10e53:	e8 68 30 00 00       	call   13ec0 <_ZNSt6vectorIjSaIjEED1Ev>
   10e58:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10e5c:	48 89 c7             	mov    %rax,%rdi
   10e5f:	e8 58 2f 00 00       	call   13dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10e64:	e9 aa 00 00 00       	jmp    10f13 <_ZN9VulkanApp6renderEv+0x6e7>
    throw std::runtime_error("Failed to acquire swapchain image.");
   10e69:	49 89 c4             	mov    %rax,%r12
   10e6c:	48 89 df             	mov    %rbx,%rdi
   10e6f:	e8 4c 34 ff ff       	call   42c0 <__cxa_free_exception@plt>
   10e74:	4c 89 e0             	mov    %r12,%rax
   10e77:	48 89 c7             	mov    %rax,%rdi
   10e7a:	e8 31 3a ff ff       	call   48b0 <_Unwind_Resume@plt>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   10e7f:	48 89 c3             	mov    %rax,%rbx
   10e82:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   10e86:	48 89 c7             	mov    %rax,%rdi
   10e89:	e8 8a 2e 00 00       	call   13d18 <_ZNSaIP13VkSemaphore_TED1Ev>
   10e8e:	48 89 d8             	mov    %rbx,%rax
   10e91:	48 89 c7             	mov    %rax,%rdi
   10e94:	e8 17 3a ff ff       	call   48b0 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   10e99:	48 89 c3             	mov    %rax,%rbx
   10e9c:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   10ea0:	48 89 c7             	mov    %rax,%rdi
   10ea3:	e8 74 2f 00 00       	call   13e1c <_ZNSaIjED1Ev>
   10ea8:	eb 52                	jmp    10efc <_ZN9VulkanApp6renderEv+0x6d0>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   10eaa:	48 89 c3             	mov    %rax,%rbx
   10ead:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   10eb1:	48 89 c7             	mov    %rax,%rdi
   10eb4:	e8 5f 2e 00 00       	call   13d18 <_ZNSaIP13VkSemaphore_TED1Ev>
   10eb9:	eb 32                	jmp    10eed <_ZN9VulkanApp6renderEv+0x6c1>
    throw std::runtime_error("Failed to submit draw command buffer.");
   10ebb:	49 89 c4             	mov    %rax,%r12
   10ebe:	48 89 df             	mov    %rbx,%rdi
   10ec1:	e8 fa 33 ff ff       	call   42c0 <__cxa_free_exception@plt>
   10ec6:	4c 89 e3             	mov    %r12,%rbx
   10ec9:	eb 13                	jmp    10ede <_ZN9VulkanApp6renderEv+0x6b2>
    throw std::runtime_error("Failed to present swapchain image.");
   10ecb:	49 89 c4             	mov    %rax,%r12
   10ece:	48 89 df             	mov    %rbx,%rdi
   10ed1:	e8 ea 33 ff ff       	call   42c0 <__cxa_free_exception@plt>
   10ed6:	4c 89 e3             	mov    %r12,%rbx
   10ed9:	eb 03                	jmp    10ede <_ZN9VulkanApp6renderEv+0x6b2>
}
   10edb:	48 89 c3             	mov    %rax,%rbx
   10ede:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10ee5:	48 89 c7             	mov    %rax,%rdi
   10ee8:	e8 cf 2e 00 00       	call   13dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10eed:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10ef4:	48 89 c7             	mov    %rax,%rdi
   10ef7:	e8 c4 2f 00 00       	call   13ec0 <_ZNSt6vectorIjSaIjEED1Ev>
   10efc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   10f00:	48 89 c7             	mov    %rax,%rdi
   10f03:	e8 b4 2e 00 00       	call   13dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   10f08:	48 89 d8             	mov    %rbx,%rax
   10f0b:	48 89 c7             	mov    %rax,%rdi
   10f0e:	e8 9d 39 ff ff       	call   48b0 <_Unwind_Resume@plt>
   10f13:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   10f1a:	5b                   	pop    %rbx
   10f1b:	41 5c                	pop    %r12
   10f1d:	41 5d                	pop    %r13
   10f1f:	41 5e                	pop    %r14
   10f21:	41 5f                	pop    %r15
   10f23:	5d                   	pop    %rbp
   10f24:	c3                   	ret
   10f25:	90                   	nop

0000000000010f26 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
   10f26:	55                   	push   %rbp
   10f27:	48 89 e5             	mov    %rsp,%rbp
   10f2a:	41 57                	push   %r15
   10f2c:	41 56                	push   %r14
   10f2e:	41 55                	push   %r13
   10f30:	41 54                	push   %r12
   10f32:	53                   	push   %rbx
   10f33:	48 83 ec 38          	sub    $0x38,%rsp
   10f37:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10f3b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10f3f:	48 8d 58 10          	lea    0x10(%rax),%rbx
   10f43:	48 8d 05 f9 ef 00 00 	lea    0xeff9(%rip),%rax        # 1ff43 <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   10f4a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10f4e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10f52:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10f56:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
   10f5d:	00 
   10f5e:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10f62:	48 89 c7             	mov    %rax,%rdi
   10f65:	e8 56 7f ff ff       	call   8ec0 <_ZNSaIPKcEC1Ev>
   10f6a:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10f6e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   10f72:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   10f76:	49 89 f0             	mov    %rsi,%r8
   10f79:	49 89 f9             	mov    %rdi,%r9
   10f7c:	48 89 fa             	mov    %rdi,%rdx
   10f7f:	48 89 c1             	mov    %rax,%rcx
   10f82:	4c 89 c6             	mov    %r8,%rsi
   10f85:	48 89 df             	mov    %rbx,%rdi
   10f88:	e8 ff 19 00 00       	call   1298c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10f8d:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10f91:	48 89 c7             	mov    %rax,%rdi
   10f94:	e8 43 7f ff ff       	call   8edc <_ZNSaIPKcED1Ev>
   10f99:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10f9d:	48 8d 58 28          	lea    0x28(%rax),%rbx
   10fa1:	4c 8d 35 38 ed 01 00 	lea    0x1ed38(%rip),%r14        # 2fce0 <C.147.0>
   10fa8:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   10fae:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10fb2:	48 89 c7             	mov    %rax,%rdi
   10fb5:	e8 06 7f ff ff       	call   8ec0 <_ZNSaIPKcEC1Ev>
   10fba:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10fbe:	4d 89 f0             	mov    %r14,%r8
   10fc1:	4d 89 f9             	mov    %r15,%r9
   10fc4:	4c 89 f6             	mov    %r14,%rsi
   10fc7:	4c 89 ff             	mov    %r15,%rdi
   10fca:	48 89 fa             	mov    %rdi,%rdx
   10fcd:	48 89 c1             	mov    %rax,%rcx
   10fd0:	4c 89 c6             	mov    %r8,%rsi
   10fd3:	48 89 df             	mov    %rbx,%rdi
   10fd6:	e8 b1 19 00 00       	call   1298c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10fdb:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   10fdf:	48 89 c7             	mov    %rax,%rdi
   10fe2:	e8 f5 7e ff ff       	call   8edc <_ZNSaIPKcED1Ev>
   10fe7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10feb:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%rax)
   10ff2:	00 00 00 
   10ff5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10ff9:	c7 80 8c 00 00 00 01 	movl   $0x1,0x8c(%rax)
   11000:	00 00 00 
   11003:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11007:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
   1100e:	4c 8d 25 db ec 01 00 	lea    0x1ecdb(%rip),%r12        # 2fcf0 <C.148.1>
   11015:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   1101b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1101f:	48 89 c7             	mov    %rax,%rdi
   11022:	e8 99 7e ff ff       	call   8ec0 <_ZNSaIPKcEC1Ev>
   11027:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1102b:	4d 89 e0             	mov    %r12,%r8
   1102e:	4d 89 e9             	mov    %r13,%r9
   11031:	4c 89 e6             	mov    %r12,%rsi
   11034:	4c 89 ef             	mov    %r13,%rdi
   11037:	48 89 fa             	mov    %rdi,%rdx
   1103a:	48 89 c1             	mov    %rax,%rcx
   1103d:	4c 89 c6             	mov    %r8,%rsi
   11040:	48 89 df             	mov    %rbx,%rdi
   11043:	e8 44 19 00 00       	call   1298c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   11048:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1104c:	48 89 c7             	mov    %rax,%rdi
   1104f:	e8 88 7e ff ff       	call   8edc <_ZNSaIPKcED1Ev>
   11054:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11058:	48 05 a8 00 00 00    	add    $0xa8,%rax
   1105e:	48 89 c7             	mov    %rax,%rdi
   11061:	e8 e0 16 00 00       	call   12746 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
   11066:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1106a:	48 05 c0 00 00 00    	add    $0xc0,%rax
   11070:	48 89 c7             	mov    %rax,%rdi
   11073:	e8 06 17 00 00       	call   1277e <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
   11078:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1107c:	48 05 d8 00 00 00    	add    $0xd8,%rax
   11082:	48 89 c7             	mov    %rax,%rdi
   11085:	e8 10 17 00 00       	call   1279a <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
   1108a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1108e:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
   11095:	00 00 00 
   11098:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1109c:	48 05 00 01 00 00    	add    $0x100,%rax
   110a2:	48 89 c7             	mov    %rax,%rdi
   110a5:	e8 62 17 00 00       	call   1280c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
   110aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   110ae:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
   110b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   110b9:	48 c7 80 20 01 00 00 	movq   $0x2,0x120(%rax)
   110c0:	02 00 00 00 
   110c4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   110c8:	48 05 28 01 00 00    	add    $0x128,%rax
   110ce:	48 89 c7             	mov    %rax,%rdi
   110d1:	e8 6e 17 00 00       	call   12844 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   110d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   110da:	48 05 48 01 00 00    	add    $0x148,%rax
   110e0:	48 89 c7             	mov    %rax,%rdi
   110e3:	e8 20 18 00 00       	call   12908 <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
   110e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   110ec:	48 89 c7             	mov    %rax,%rdi
   110ef:	e8 56 cb ff ff       	call   dc4a <_ZN9VulkanApp12createWindowEv>
  createInstance();
   110f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   110f8:	48 89 c7             	mov    %rax,%rdi
   110fb:	e8 b8 cb ff ff       	call   dcb8 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
   11100:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11104:	48 89 c7             	mov    %rax,%rdi
   11107:	e8 92 cd ff ff       	call   de9e <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
   1110c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11110:	48 89 c7             	mov    %rax,%rdi
   11113:	e8 1a ce ff ff       	call   df32 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
   11118:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1111c:	48 89 c7             	mov    %rax,%rdi
   1111f:	e8 66 d0 ff ff       	call   e18a <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
   11124:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11128:	48 89 c7             	mov    %rax,%rdi
   1112b:	e8 78 dc ff ff       	call   eda8 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   11130:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11134:	48 89 c7             	mov    %rax,%rdi
   11137:	e8 b2 dc ff ff       	call   edee <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   1113c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11140:	48 89 c7             	mov    %rax,%rdi
   11143:	e8 52 de ff ff       	call   ef9a <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   11148:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1114c:	48 89 c7             	mov    %rax,%rdi
   1114f:	e8 9a ea ff ff       	call   fbee <_ZN9VulkanApp18createFramebuffersEv>
  createCommandPool();
   11154:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11158:	48 89 c7             	mov    %rax,%rdi
   1115b:	e8 00 ef ff ff       	call   10060 <_ZN9VulkanApp17createCommandPoolEv>
  createVertexBuffers();
   11160:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11164:	48 89 c7             	mov    %rax,%rdi
   11167:	e8 40 f0 ff ff       	call   101ac <_ZN9VulkanApp19createVertexBuffersEv>
  createCommandBuffers();
   1116c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11170:	48 89 c7             	mov    %rax,%rdi
   11173:	e8 dc f2 ff ff       	call   10454 <_ZN9VulkanApp20createCommandBuffersEv>
  createSynchronizationObjects();
   11178:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1117c:	48 89 c7             	mov    %rax,%rdi
   1117f:	e8 26 f5 ff ff       	call   106aa <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
   11184:	e9 d9 00 00 00       	jmp    11262 <_ZN9VulkanAppC1Ev+0x33c>
VulkanApp::VulkanApp() {
   11189:	48 89 c3             	mov    %rax,%rbx
   1118c:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   11190:	48 89 c7             	mov    %rax,%rdi
   11193:	e8 44 7d ff ff       	call   8edc <_ZNSaIPKcED1Ev>
   11198:	48 89 d8             	mov    %rbx,%rax
   1119b:	48 89 c7             	mov    %rax,%rdi
   1119e:	e8 0d 37 ff ff       	call   48b0 <_Unwind_Resume@plt>
   111a3:	48 89 c3             	mov    %rax,%rbx
   111a6:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   111aa:	48 89 c7             	mov    %rax,%rdi
   111ad:	e8 2a 7d ff ff       	call   8edc <_ZNSaIPKcED1Ev>
   111b2:	e9 90 00 00 00       	jmp    11247 <_ZN9VulkanAppC1Ev+0x321>
   111b7:	48 89 c3             	mov    %rax,%rbx
   111ba:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   111be:	48 89 c7             	mov    %rax,%rdi
   111c1:	e8 16 7d ff ff       	call   8edc <_ZNSaIPKcED1Ev>
   111c6:	eb 6f                	jmp    11237 <_ZN9VulkanAppC1Ev+0x311>
}
   111c8:	48 89 c3             	mov    %rax,%rbx
   111cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   111cf:	48 05 48 01 00 00    	add    $0x148,%rax
   111d5:	48 89 c7             	mov    %rax,%rdi
   111d8:	e8 73 17 00 00       	call   12950 <_ZN9VulkanApp11SyncWrapperD1Ev>
   111dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   111e1:	48 05 28 01 00 00    	add    $0x128,%rax
   111e7:	48 89 c7             	mov    %rax,%rdi
   111ea:	e8 9b 4a ff ff       	call   5c8a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   111ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   111f3:	48 05 00 01 00 00    	add    $0x100,%rax
   111f9:	48 89 c7             	mov    %rax,%rdi
   111fc:	e8 9f 2e 00 00       	call   140a0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   11201:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11205:	48 05 c0 00 00 00    	add    $0xc0,%rax
   1120b:	48 89 c7             	mov    %rax,%rdi
   1120e:	e8 ef 86 ff ff       	call   9902 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   11213:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11217:	48 05 a8 00 00 00    	add    $0xa8,%rax
   1121d:	48 89 c7             	mov    %rax,%rdi
   11220:	e8 e1 26 00 00       	call   13906 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   11225:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11229:	48 05 90 00 00 00    	add    $0x90,%rax
   1122f:	48 89 c7             	mov    %rax,%rdi
   11232:	e8 dd 17 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
   11237:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1123b:	48 83 c0 28          	add    $0x28,%rax
}
   1123f:	48 89 c7             	mov    %rax,%rdi
   11242:	e8 cd 17 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   11247:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1124b:	48 83 c0 10          	add    $0x10,%rax
   1124f:	48 89 c7             	mov    %rax,%rdi
   11252:	e8 bd 17 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   11257:	48 89 d8             	mov    %rbx,%rax
   1125a:	48 89 c7             	mov    %rax,%rdi
   1125d:	e8 4e 36 ff ff       	call   48b0 <_Unwind_Resume@plt>
   11262:	48 83 c4 38          	add    $0x38,%rsp
   11266:	5b                   	pop    %rbx
   11267:	41 5c                	pop    %r12
   11269:	41 5d                	pop    %r13
   1126b:	41 5e                	pop    %r14
   1126d:	41 5f                	pop    %r15
   1126f:	5d                   	pop    %rbp
   11270:	c3                   	ret
   11271:	90                   	nop

0000000000011272 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
   11272:	55                   	push   %rbp
   11273:	48 89 e5             	mov    %rsp,%rbp
   11276:	48 83 ec 20          	sub    $0x20,%rsp
   1127a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanupSwapchain();
   1127e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11282:	48 89 c7             	mov    %rax,%rdi
   11285:	e8 0a ec ff ff       	call   fe94 <_ZN9VulkanApp16cleanupSwapchainEv>
  vkDestroyBuffer(device, vertexBuffer, nullptr);
   1128a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1128e:	48 8b 88 98 01 00 00 	mov    0x198(%rax),%rcx
   11295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11299:	48 8b 40 50          	mov    0x50(%rax),%rax
   1129d:	ba 00 00 00 00       	mov    $0x0,%edx
   112a2:	48 89 ce             	mov    %rcx,%rsi
   112a5:	48 89 c7             	mov    %rax,%rdi
   112a8:	e8 13 2f ff ff       	call   41c0 <vkDestroyBuffer@plt>
  vkFreeMemory(device, vertexBufferMemory, nullptr);
   112ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112b1:	48 8b 88 a0 01 00 00 	mov    0x1a0(%rax),%rcx
   112b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112bc:	48 8b 40 50          	mov    0x50(%rax),%rax
   112c0:	ba 00 00 00 00       	mov    $0x0,%edx
   112c5:	48 89 ce             	mov    %rcx,%rsi
   112c8:	48 89 c7             	mov    %rax,%rdi
   112cb:	e8 10 31 ff ff       	call   43e0 <vkFreeMemory@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   112d0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   112d7:	00 
   112d8:	e9 a4 00 00 00       	jmp    11381 <_ZN9VulkanAppD1Ev+0x10f>
    vkh::destroySemaphore(device, sync.imageAvailableSemaphore[i]);
   112dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112e1:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   112e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112ec:	48 89 c6             	mov    %rax,%rsi
   112ef:	48 89 d7             	mov    %rdx,%rdi
   112f2:	e8 a5 29 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   112f7:	48 8b 08             	mov    (%rax),%rcx
   112fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112fe:	48 8b 40 50          	mov    0x50(%rax),%rax
   11302:	ba 00 00 00 00       	mov    $0x0,%edx
   11307:	48 89 ce             	mov    %rcx,%rsi
   1130a:	48 89 c7             	mov    %rax,%rdi
   1130d:	e8 17 66 ff ff       	call   7929 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroySemaphore(device, sync.renderFinisedSemaphore[i]);
   11312:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11316:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   1131d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11321:	48 89 c6             	mov    %rax,%rsi
   11324:	48 89 d7             	mov    %rdx,%rdi
   11327:	e8 70 29 00 00       	call   13c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1132c:	48 8b 08             	mov    (%rax),%rcx
   1132f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11333:	48 8b 40 50          	mov    0x50(%rax),%rax
   11337:	ba 00 00 00 00       	mov    $0x0,%edx
   1133c:	48 89 ce             	mov    %rcx,%rsi
   1133f:	48 89 c7             	mov    %rax,%rdi
   11342:	e8 e2 65 ff ff       	call   7929 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroyFence(device, sync.inFlightFence[i]);
   11347:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1134b:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   11352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11356:	48 89 c6             	mov    %rax,%rsi
   11359:	48 89 d7             	mov    %rdx,%rdi
   1135c:	e8 5b 29 00 00       	call   13cbc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   11361:	48 8b 08             	mov    (%rax),%rcx
   11364:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11368:	48 8b 40 50          	mov    0x50(%rax),%rax
   1136c:	ba 00 00 00 00       	mov    $0x0,%edx
   11371:	48 89 ce             	mov    %rcx,%rsi
   11374:	48 89 c7             	mov    %rax,%rdi
   11377:	e8 db 65 ff ff       	call   7957 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1137c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   11381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11385:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1138c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   11390:	0f 82 47 ff ff ff    	jb     112dd <_ZN9VulkanAppD1Ev+0x6b>
  }
  vkh::destroyCommandPool(device, commandPool);
   11396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1139a:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
   113a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113a5:	48 8b 40 50          	mov    0x50(%rax),%rax
   113a9:	ba 00 00 00 00       	mov    $0x0,%edx
   113ae:	48 89 ce             	mov    %rcx,%rsi
   113b1:	48 89 c7             	mov    %rax,%rdi
   113b4:	e8 42 65 ff ff       	call   78fb <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
   113b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113bd:	48 8b 40 50          	mov    0x50(%rax),%rax
   113c1:	be 00 00 00 00       	mov    $0x0,%esi
   113c6:	48 89 c7             	mov    %rax,%rdi
   113c9:	e8 08 63 ff ff       	call   76d6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
   113ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113d2:	48 8b 48 40          	mov    0x40(%rax),%rcx
   113d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113da:	48 8b 40 08          	mov    0x8(%rax),%rax
   113de:	ba 00 00 00 00       	mov    $0x0,%edx
   113e3:	48 89 ce             	mov    %rcx,%rsi
   113e6:	48 89 c7             	mov    %rax,%rdi
   113e9:	e8 f3 c3 ff ff       	call   d7e1 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
   113ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113f2:	48 8b 48 48          	mov    0x48(%rax),%rcx
   113f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113fa:	48 8b 40 08          	mov    0x8(%rax),%rax
   113fe:	ba 00 00 00 00       	mov    $0x0,%edx
   11403:	48 89 ce             	mov    %rcx,%rsi
   11406:	48 89 c7             	mov    %rax,%rdi
   11409:	e8 ee 62 ff ff       	call   76fc <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
   1140e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11412:	48 8b 40 08          	mov    0x8(%rax),%rax
   11416:	be 00 00 00 00       	mov    $0x0,%esi
   1141b:	48 89 c7             	mov    %rax,%rdi
   1141e:	e8 8d 62 ff ff       	call   76b0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
   11423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11427:	48 8b 00             	mov    (%rax),%rax
   1142a:	48 89 c7             	mov    %rax,%rdi
   1142d:	e8 63 62 ff ff       	call   7695 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
   11432:	e8 69 30 ff ff       	call   44a0 <glfwTerminate@plt>
}
   11437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1143b:	48 05 48 01 00 00    	add    $0x148,%rax
   11441:	48 89 c7             	mov    %rax,%rdi
   11444:	e8 07 15 00 00       	call   12950 <_ZN9VulkanApp11SyncWrapperD1Ev>
   11449:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1144d:	48 05 28 01 00 00    	add    $0x128,%rax
   11453:	48 89 c7             	mov    %rax,%rdi
   11456:	e8 2f 48 ff ff       	call   5c8a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   1145b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1145f:	48 05 00 01 00 00    	add    $0x100,%rax
   11465:	48 89 c7             	mov    %rax,%rdi
   11468:	e8 33 2c 00 00       	call   140a0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   1146d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11471:	48 05 c0 00 00 00    	add    $0xc0,%rax
   11477:	48 89 c7             	mov    %rax,%rdi
   1147a:	e8 83 84 ff ff       	call   9902 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   1147f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11483:	48 05 a8 00 00 00    	add    $0xa8,%rax
   11489:	48 89 c7             	mov    %rax,%rdi
   1148c:	e8 75 24 00 00       	call   13906 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   11491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11495:	48 05 90 00 00 00    	add    $0x90,%rax
   1149b:	48 89 c7             	mov    %rax,%rdi
   1149e:	e8 71 15 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
   114a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114a7:	48 83 c0 28          	add    $0x28,%rax
}
   114ab:	48 89 c7             	mov    %rax,%rdi
   114ae:	e8 61 15 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   114b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114b7:	48 83 c0 10          	add    $0x10,%rax
   114bb:	48 89 c7             	mov    %rax,%rdi
   114be:	e8 51 15 00 00       	call   12a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   114c3:	90                   	nop
   114c4:	c9                   	leave
   114c5:	c3                   	ret

00000000000114c6 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
   114c6:	55                   	push   %rbp
   114c7:	48 89 e5             	mov    %rsp,%rbp
   114ca:	48 83 ec 10          	sub    $0x10,%rsp
   114ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
   114d2:	eb 11                	jmp    114e5 <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
   114d4:	e8 47 2f ff ff       	call   4420 <glfwPollEvents@plt>
    render();
   114d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114dd:	48 89 c7             	mov    %rax,%rdi
   114e0:	e8 47 f3 ff ff       	call   1082c <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   114e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e9:	48 8b 00             	mov    (%rax),%rax
   114ec:	48 89 c7             	mov    %rax,%rdi
   114ef:	e8 0c 34 ff ff       	call   4900 <glfwWindowShouldClose@plt>
   114f4:	85 c0                	test   %eax,%eax
   114f6:	0f 94 c0             	sete   %al
   114f9:	84 c0                	test   %al,%al
   114fb:	75 d7                	jne    114d4 <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   114fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11501:	48 8b 40 50          	mov    0x50(%rax),%rax
   11505:	48 89 c7             	mov    %rax,%rdi
   11508:	e8 b3 2b ff ff       	call   40c0 <vkDeviceWaitIdle@plt>
}
   1150d:	90                   	nop
   1150e:	c9                   	leave
   1150f:	c3                   	ret

0000000000011510 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   11510:	55                   	push   %rbp
   11511:	48 89 e5             	mov    %rsp,%rbp
   11514:	41 54                	push   %r12
   11516:	53                   	push   %rbx
   11517:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   1151e:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   11525:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   1152c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11533:	48 89 c7             	mov    %rax,%rdi
   11536:	e8 75 30 ff ff       	call   45b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   1153b:	be 10 00 00 00       	mov    $0x10,%esi
   11540:	bf 08 00 00 00       	mov    $0x8,%edi
   11545:	e8 3b 58 ff ff       	call   6d85 <_ZStorSt13_Ios_OpenmodeS_>
   1154a:	89 c2                	mov    %eax,%edx
   1154c:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   11553:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1155a:	48 89 ce             	mov    %rcx,%rsi
   1155d:	48 89 c7             	mov    %rax,%rdi
   11560:	e8 5b 31 ff ff       	call   46c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   11565:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1156c:	48 89 c7             	mov    %rax,%rdi
   1156f:	e8 fc 32 ff ff       	call   4870 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   11574:	83 f0 01             	xor    $0x1,%eax
   11577:	84 c0                	test   %al,%al
   11579:	0f 84 97 00 00 00    	je     11616 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   1157f:	bf 10 00 00 00       	mov    $0x10,%edi
   11584:	e8 27 2c ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   11589:	48 89 c3             	mov    %rax,%rbx
   1158c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11593:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   1159a:	48 8d 0d b5 e9 00 00 	lea    0xe9b5(%rip),%rcx        # 1ff56 <_ZZN9VulkanApp6renderEvE11submitCount+0x8e>
   115a1:	48 89 ce             	mov    %rcx,%rsi
   115a4:	48 89 c7             	mov    %rax,%rdi
   115a7:	e8 30 58 ff ff       	call   6ddc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   115ac:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   115b3:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   115ba:	ba 0a 00 00 00       	mov    $0xa,%edx
   115bf:	48 89 ce             	mov    %rcx,%rsi
   115c2:	48 89 c7             	mov    %rax,%rdi
   115c5:	e8 8e 2c 00 00       	call   14258 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   115ca:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   115d1:	48 89 c6             	mov    %rax,%rsi
   115d4:	48 89 df             	mov    %rbx,%rdi
   115d7:	e8 24 32 ff ff       	call   4800 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   115dc:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   115e3:	48 89 c7             	mov    %rax,%rdi
   115e6:	e8 75 2c ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   115eb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   115f2:	48 89 c7             	mov    %rax,%rdi
   115f5:	e8 66 2c ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   115fa:	48 8b 05 a7 e9 01 00 	mov    0x1e9a7(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11601:	48 89 c2             	mov    %rax,%rdx
   11604:	48 8d 05 35 e7 01 00 	lea    0x1e735(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1160b:	48 89 c6             	mov    %rax,%rsi
   1160e:	48 89 df             	mov    %rbx,%rdi
   11611:	e8 3a 32 ff ff       	call   4850 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   11616:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1161d:	48 83 c0 10          	add    $0x10,%rax
   11621:	48 8d 15 3e e9 00 00 	lea    0xe93e(%rip),%rdx        # 1ff66 <_ZZN9VulkanApp6renderEvE11submitCount+0x9e>
   11628:	48 89 d6             	mov    %rdx,%rsi
   1162b:	48 89 c7             	mov    %rax,%rdi
   1162e:	e8 1d 2e ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   11633:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1163a:	48 83 c0 10          	add    $0x10,%rax
   1163e:	48 8d 15 3a e9 00 00 	lea    0xe93a(%rip),%rdx        # 1ff7f <_ZZN9VulkanApp6renderEvE11submitCount+0xb7>
   11645:	48 89 d6             	mov    %rdx,%rsi
   11648:	48 89 c7             	mov    %rax,%rdi
   1164b:	e8 00 2e ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   11650:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   11657:	be 00 00 00 00       	mov    $0x0,%esi
   1165c:	48 89 c7             	mov    %rax,%rdi
   1165f:	e8 b6 64 ff ff       	call   7b1a <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   11664:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1166b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1166f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11673:	48 89 c7             	mov    %rax,%rdi
   11676:	e8 7f 18 00 00       	call   12efa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   1167b:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   11682:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11686:	48 89 c7             	mov    %rax,%rdi
   11689:	e8 92 18 00 00       	call   12f20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   1168e:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   11695:	eb 64                	jmp    116fb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   11697:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   1169e:	48 89 c7             	mov    %rax,%rdi
   116a1:	e8 02 19 00 00       	call   12fa8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   116a6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   116ad:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   116b4:	48 83 c0 10          	add    $0x10,%rax
   116b8:	48 8d 15 d1 e8 00 00 	lea    0xe8d1(%rip),%rdx        # 1ff90 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   116bf:	48 89 d6             	mov    %rdx,%rsi
   116c2:	48 89 c7             	mov    %rax,%rdi
   116c5:	e8 86 2d ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   116ca:	48 89 c2             	mov    %rax,%rdx
   116cd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   116d4:	48 89 c6             	mov    %rax,%rsi
   116d7:	48 89 d7             	mov    %rdx,%rdi
   116da:	e8 71 2d ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   116df:	be 0a 00 00 00       	mov    $0xa,%esi
   116e4:	48 89 c7             	mov    %rax,%rdi
   116e7:	e8 94 2e ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   116ec:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   116f3:	48 89 c7             	mov    %rax,%rdi
   116f6:	e8 89 18 00 00       	call   12f84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   116fb:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   11702:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   11709:	48 89 d6             	mov    %rdx,%rsi
   1170c:	48 89 c7             	mov    %rax,%rdi
   1170f:	e8 35 18 00 00       	call   12f49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11714:	84 c0                	test   %al,%al
   11716:	0f 85 7b ff ff ff    	jne    11697 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   1171c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11723:	48 83 c0 10          	add    $0x10,%rax
   11727:	48 8d 15 65 e8 00 00 	lea    0xe865(%rip),%rdx        # 1ff93 <_ZZN9VulkanApp6renderEvE11submitCount+0xcb>
   1172e:	48 89 d6             	mov    %rdx,%rsi
   11731:	48 89 c7             	mov    %rax,%rdi
   11734:	e8 17 2d ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   11739:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11740:	48 83 c0 10          	add    $0x10,%rax
   11744:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11748:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1174c:	48 89 c7             	mov    %rax,%rdi
   1174f:	e8 04 13 00 00       	call   12a58 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   11754:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   1175b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1175f:	48 89 c7             	mov    %rax,%rdi
   11762:	e8 17 13 00 00       	call   12a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11767:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   1176e:	eb 67                	jmp    117d7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   11770:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   11777:	48 89 c7             	mov    %rax,%rdi
   1177a:	e8 83 13 00 00       	call   12b02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1177f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   11786:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1178d:	48 83 c0 10          	add    $0x10,%rax
   11791:	48 8d 15 f8 e7 00 00 	lea    0xe7f8(%rip),%rdx        # 1ff90 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   11798:	48 89 d6             	mov    %rdx,%rsi
   1179b:	48 89 c7             	mov    %rax,%rdi
   1179e:	e8 ad 2c ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   117a3:	48 89 c2             	mov    %rax,%rdx
   117a6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   117ad:	48 8b 00             	mov    (%rax),%rax
   117b0:	48 89 c6             	mov    %rax,%rsi
   117b3:	48 89 d7             	mov    %rdx,%rdi
   117b6:	e8 95 2c ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   117bb:	be 0a 00 00 00       	mov    $0xa,%esi
   117c0:	48 89 c7             	mov    %rax,%rdi
   117c3:	e8 b8 2d ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   117c8:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   117cf:	48 89 c7             	mov    %rax,%rdi
   117d2:	e8 0b 13 00 00       	call   12ae2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   117d7:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   117de:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   117e5:	48 89 d6             	mov    %rdx,%rsi
   117e8:	48 89 c7             	mov    %rax,%rdi
   117eb:	e8 b7 12 00 00       	call   12aa7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   117f0:	84 c0                	test   %al,%al
   117f2:	0f 85 78 ff ff ff    	jne    11770 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   117f8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   117ff:	48 83 c0 10          	add    $0x10,%rax
   11803:	be 0a 00 00 00       	mov    $0xa,%esi
   11808:	48 89 c7             	mov    %rax,%rdi
   1180b:	e8 70 2d ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   11810:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11817:	48 83 c0 10          	add    $0x10,%rax
   1181b:	48 8d 15 81 e7 00 00 	lea    0xe781(%rip),%rdx        # 1ffa3 <_ZZN9VulkanApp6renderEvE11submitCount+0xdb>
   11822:	48 89 d6             	mov    %rdx,%rsi
   11825:	48 89 c7             	mov    %rax,%rdi
   11828:	e8 23 2c ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   1182d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11834:	48 83 c0 10          	add    $0x10,%rax
   11838:	48 8d 15 79 e7 00 00 	lea    0xe779(%rip),%rdx        # 1ffb8 <_ZZN9VulkanApp6renderEvE11submitCount+0xf0>
   1183f:	48 89 d6             	mov    %rdx,%rsi
   11842:	48 89 c7             	mov    %rax,%rdi
   11845:	e8 06 2c ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   1184a:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   11851:	48 89 c7             	mov    %rax,%rdi
   11854:	e8 5b 66 ff ff       	call   7eb4 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   11859:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   11860:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11864:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11868:	48 89 c7             	mov    %rax,%rdi
   1186b:	e8 3e c1 ff ff       	call   d9ae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   11870:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   11877:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1187b:	48 89 c7             	mov    %rax,%rdi
   1187e:	e8 51 c1 ff ff       	call   d9d4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   11883:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   1188a:	eb 5e                	jmp    118ea <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   1188c:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   11893:	48 89 c7             	mov    %rax,%rdi
   11896:	e8 c1 c1 ff ff       	call   da5c <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   1189b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   1189f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   118a6:	48 83 c0 10          	add    $0x10,%rax
   118aa:	48 8d 15 df e6 00 00 	lea    0xe6df(%rip),%rdx        # 1ff90 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   118b1:	48 89 d6             	mov    %rdx,%rsi
   118b4:	48 89 c7             	mov    %rax,%rdi
   118b7:	e8 94 2b ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   118bc:	48 89 c2             	mov    %rax,%rdx
   118bf:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   118c3:	48 89 c6             	mov    %rax,%rsi
   118c6:	48 89 d7             	mov    %rdx,%rdi
   118c9:	e8 82 2b ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   118ce:	be 0a 00 00 00       	mov    $0xa,%esi
   118d3:	48 89 c7             	mov    %rax,%rdi
   118d6:	e8 a5 2c ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   118db:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   118e2:	48 89 c7             	mov    %rax,%rdi
   118e5:	e8 4e c1 ff ff       	call   da38 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   118ea:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   118f1:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   118f8:	48 89 d6             	mov    %rdx,%rsi
   118fb:	48 89 c7             	mov    %rax,%rdi
   118fe:	e8 fa c0 ff ff       	call   d9fd <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11903:	84 c0                	test   %al,%al
   11905:	75 85                	jne    1188c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   11907:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1190e:	48 83 c0 10          	add    $0x10,%rax
   11912:	48 8d 15 b0 e6 00 00 	lea    0xe6b0(%rip),%rdx        # 1ffc9 <_ZZN9VulkanApp6renderEvE11submitCount+0x101>
   11919:	48 89 d6             	mov    %rdx,%rsi
   1191c:	48 89 c7             	mov    %rax,%rdi
   1191f:	e8 2c 2b ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   11924:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1192b:	48 83 c0 28          	add    $0x28,%rax
   1192f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11933:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11937:	48 89 c7             	mov    %rax,%rdi
   1193a:	e8 63 29 00 00       	call   142a2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   1193f:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   11946:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1194a:	48 89 c7             	mov    %rax,%rdi
   1194d:	e8 76 29 00 00       	call   142c8 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   11952:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   11959:	eb 61                	jmp    119bc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   1195b:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   11962:	48 89 c7             	mov    %rax,%rdi
   11965:	e8 e2 29 00 00       	call   1434c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1196a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   1196e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11975:	48 83 c0 10          	add    $0x10,%rax
   11979:	48 8d 15 10 e6 00 00 	lea    0xe610(%rip),%rdx        # 1ff90 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   11980:	48 89 d6             	mov    %rdx,%rsi
   11983:	48 89 c7             	mov    %rax,%rdi
   11986:	e8 c5 2a ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1198b:	48 89 c2             	mov    %rax,%rdx
   1198e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11992:	48 8b 00             	mov    (%rax),%rax
   11995:	48 89 c6             	mov    %rax,%rsi
   11998:	48 89 d7             	mov    %rdx,%rdi
   1199b:	e8 b0 2a ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   119a0:	be 0a 00 00 00       	mov    $0xa,%esi
   119a5:	48 89 c7             	mov    %rax,%rdi
   119a8:	e8 d3 2b ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   119ad:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   119b4:	48 89 c7             	mov    %rax,%rdi
   119b7:	e8 70 29 00 00       	call   1432c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   119bc:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   119c3:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   119ca:	48 89 d6             	mov    %rdx,%rsi
   119cd:	48 89 c7             	mov    %rax,%rdi
   119d0:	e8 1c 29 00 00       	call   142f1 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   119d5:	84 c0                	test   %al,%al
   119d7:	75 82                	jne    1195b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   119d9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   119e0:	48 83 c0 10          	add    $0x10,%rax
   119e4:	be 0a 00 00 00       	mov    $0xa,%esi
   119e9:	48 89 c7             	mov    %rax,%rdi
   119ec:	e8 8f 2b ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   119f1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   119f8:	48 83 c0 10          	add    $0x10,%rax
   119fc:	48 8d 15 d6 e5 00 00 	lea    0xe5d6(%rip),%rdx        # 1ffd9 <_ZZN9VulkanApp6renderEvE11submitCount+0x111>
   11a03:	48 89 d6             	mov    %rdx,%rsi
   11a06:	48 89 c7             	mov    %rax,%rdi
   11a09:	e8 42 2a ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   11a0e:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11a15:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11a19:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   11a20:	48 89 d6             	mov    %rdx,%rsi
   11a23:	48 89 c7             	mov    %rax,%rdi
   11a26:	e8 35 65 ff ff       	call   7f60 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   11a2b:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   11a32:	48 8b 50 58          	mov    0x58(%rax),%rdx
   11a36:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   11a3d:	48 89 d6             	mov    %rdx,%rsi
   11a40:	48 89 c7             	mov    %rax,%rdi
   11a43:	e8 87 66 ff ff       	call   80cf <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   11a48:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   11a4f:	00 
  size_t selectedDeviceIndex = 0;
   11a50:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   11a57:	00 
  for (const auto &physDev : physicalDeviceList) {
   11a58:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   11a5f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11a63:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11a67:	48 89 c7             	mov    %rax,%rdi
   11a6a:	e8 b9 12 00 00       	call   12d28 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   11a6f:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   11a76:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11a7a:	48 89 c7             	mov    %rax,%rdi
   11a7d:	e8 cc 12 00 00       	call   12d4e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   11a82:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   11a89:	e9 c7 06 00 00       	jmp    12155 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   11a8e:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   11a95:	48 89 c7             	mov    %rax,%rdi
   11a98:	e8 35 13 00 00       	call   12dd2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   11a9d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   11aa1:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   11aa8:	48 89 c7             	mov    %rax,%rdi
   11aab:	e8 10 2e ff ff       	call   48c0 <_ZNSaIcEC1Ev@plt>
   11ab0:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   11ab7:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   11abe:	48 8d 0d 2a e5 00 00 	lea    0xe52a(%rip),%rcx        # 1ffef <_ZZN9VulkanApp6renderEvE11submitCount+0x127>
   11ac5:	48 89 ce             	mov    %rcx,%rsi
   11ac8:	48 89 c7             	mov    %rax,%rdi
   11acb:	e8 44 34 ff ff       	call   4f14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   11ad0:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   11ad7:	48 89 c7             	mov    %rax,%rdi
   11ada:	e8 31 2a ff ff       	call   4510 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   11adf:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   11ae6:	b8 00 00 00 00       	mov    $0x0,%eax
   11aeb:	b9 0e 00 00 00       	mov    $0xe,%ecx
   11af0:	48 89 d7             	mov    %rdx,%rdi
   11af3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   11af6:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   11afd:	00 00 00 
    vk11Props.pNext = nullptr;
   11b00:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   11b07:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   11b0b:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   11b12:	b8 00 00 00 00       	mov    $0x0,%eax
   11b17:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   11b1c:	48 89 d7             	mov    %rdx,%rdi
   11b1f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   11b22:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   11b29:	00 00 00 
    vk12Props.pNext = &vk11Props;
   11b2c:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   11b33:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   11b3a:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   11b41:	b8 00 00 00 00       	mov    $0x0,%eax
   11b46:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   11b4b:	48 89 d7             	mov    %rdx,%rdi
   11b4e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   11b51:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   11b58:	00 00 00 
    vk13Props.pNext = &vk12Props;
   11b5b:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   11b62:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   11b69:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11b6d:	48 8b 08             	mov    (%rax),%rcx
   11b70:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   11b77:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   11b7e:	48 89 ce             	mov    %rcx,%rsi
   11b81:	48 89 c7             	mov    %rax,%rdi
   11b84:	e8 70 65 ff ff       	call   80f9 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   11b89:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   11b8f:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   11b95:	39 c2                	cmp    %eax,%edx
   11b97:	75 08                	jne    11ba1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   11b99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b9d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   11ba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ba5:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11ba9:	75 19                	jne    11bc4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   11bab:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   11bb2:	48 8d 15 37 e4 00 00 	lea    0xe437(%rip),%rdx        # 1fff0 <_ZZN9VulkanApp6renderEvE11submitCount+0x128>
   11bb9:	48 89 d6             	mov    %rdx,%rsi
   11bbc:	48 89 c7             	mov    %rax,%rdi
   11bbf:	e8 ec 2a ff ff       	call   46b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   11bc4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11bcb:	48 83 c0 10          	add    $0x10,%rax
   11bcf:	48 8d 15 26 e4 00 00 	lea    0xe426(%rip),%rdx        # 1fffc <_ZZN9VulkanApp6renderEvE11submitCount+0x134>
   11bd6:	48 89 d6             	mov    %rdx,%rsi
   11bd9:	48 89 c7             	mov    %rax,%rdi
   11bdc:	e8 6f 28 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11be1:	48 89 c2             	mov    %rax,%rdx
   11be4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11be8:	48 89 c6             	mov    %rax,%rsi
   11beb:	48 89 d7             	mov    %rdx,%rdi
   11bee:	e8 bd 24 ff ff       	call   40b0 <_ZNSolsEm@plt>
   11bf3:	48 89 c2             	mov    %rax,%rdx
   11bf6:	48 8d 05 03 e4 00 00 	lea    0xe403(%rip),%rax        # 20000 <_ZZN9VulkanApp6renderEvE11submitCount+0x138>
   11bfd:	48 89 c6             	mov    %rax,%rsi
   11c00:	48 89 d7             	mov    %rdx,%rdi
   11c03:	e8 48 28 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11c08:	48 89 c2             	mov    %rax,%rdx
   11c0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c0f:	48 89 c6             	mov    %rax,%rsi
   11c12:	48 89 d7             	mov    %rdx,%rdi
   11c15:	e8 96 24 ff ff       	call   40b0 <_ZNSolsEm@plt>
   11c1a:	48 89 c2             	mov    %rax,%rdx
   11c1d:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   11c24:	48 89 c6             	mov    %rax,%rsi
   11c27:	48 89 d7             	mov    %rdx,%rdi
   11c2a:	e8 91 27 ff ff       	call   43c0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   11c2f:	48 89 c2             	mov    %rax,%rdx
   11c32:	48 8d 05 d0 e3 00 00 	lea    0xe3d0(%rip),%rax        # 20009 <_ZZN9VulkanApp6renderEvE11submitCount+0x141>
   11c39:	48 89 c6             	mov    %rax,%rsi
   11c3c:	48 89 d7             	mov    %rdx,%rdi
   11c3f:	e8 0c 28 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   11c44:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11c4b:	48 83 c0 10          	add    $0x10,%rax
   11c4f:	48 8d 15 b6 e3 00 00 	lea    0xe3b6(%rip),%rdx        # 2000c <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   11c56:	48 89 d6             	mov    %rdx,%rsi
   11c59:	48 89 c7             	mov    %rax,%rdi
   11c5c:	e8 ef 27 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11c61:	48 89 c2             	mov    %rax,%rdx
   11c64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c68:	48 89 c6             	mov    %rax,%rsi
   11c6b:	48 89 d7             	mov    %rdx,%rdi
   11c6e:	e8 3d 24 ff ff       	call   40b0 <_ZNSolsEm@plt>
   11c73:	48 89 c2             	mov    %rax,%rdx
   11c76:	48 8d 05 94 e3 00 00 	lea    0xe394(%rip),%rax        # 20011 <_ZZN9VulkanApp6renderEvE11submitCount+0x149>
   11c7d:	48 89 c6             	mov    %rax,%rsi
   11c80:	48 89 d7             	mov    %rdx,%rdi
   11c83:	e8 c8 27 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   11c88:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11c8f:	48 83 c0 10          	add    $0x10,%rax
   11c93:	48 8d 15 8e e3 00 00 	lea    0xe38e(%rip),%rdx        # 20028 <_ZZN9VulkanApp6renderEvE11submitCount+0x160>
   11c9a:	48 89 d6             	mov    %rdx,%rsi
   11c9d:	48 89 c7             	mov    %rax,%rdi
   11ca0:	e8 ab 27 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11ca5:	48 89 c2             	mov    %rax,%rdx
   11ca8:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   11cae:	89 c6                	mov    %eax,%esi
   11cb0:	48 89 d7             	mov    %rdx,%rdi
   11cb3:	e8 c8 29 ff ff       	call   4680 <_ZNSolsEj@plt>
   11cb8:	be 0a 00 00 00       	mov    $0xa,%esi
   11cbd:	48 89 c7             	mov    %rax,%rdi
   11cc0:	e8 bb 28 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   11cc5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11ccc:	48 83 c0 10          	add    $0x10,%rax
   11cd0:	48 8d 15 60 e3 00 00 	lea    0xe360(%rip),%rdx        # 20037 <_ZZN9VulkanApp6renderEvE11submitCount+0x16f>
   11cd7:	48 89 d6             	mov    %rdx,%rsi
   11cda:	48 89 c7             	mov    %rax,%rdi
   11cdd:	e8 6e 27 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11ce2:	48 89 c2             	mov    %rax,%rdx
   11ce5:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   11cec:	48 83 c0 24          	add    $0x24,%rax
   11cf0:	48 89 c6             	mov    %rax,%rsi
   11cf3:	48 89 d7             	mov    %rdx,%rdi
   11cf6:	e8 55 27 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11cfb:	be 0a 00 00 00       	mov    $0xa,%esi
   11d00:	48 89 c7             	mov    %rax,%rdi
   11d03:	e8 78 28 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   11d08:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11d0f:	48 83 c0 10          	add    $0x10,%rax
   11d13:	48 8d 15 2e e3 00 00 	lea    0xe32e(%rip),%rdx        # 20048 <_ZZN9VulkanApp6renderEvE11submitCount+0x180>
   11d1a:	48 89 d6             	mov    %rdx,%rsi
   11d1d:	48 89 c7             	mov    %rax,%rdi
   11d20:	e8 2b 27 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   11d25:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   11d2b:	83 f8 04             	cmp    $0x4,%eax
   11d2e:	0f 84 80 00 00 00    	je     11db4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   11d34:	83 f8 04             	cmp    $0x4,%eax
   11d37:	0f 8f 96 00 00 00    	jg     11dd3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   11d3d:	83 f8 03             	cmp    $0x3,%eax
   11d40:	74 53                	je     11d95 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   11d42:	83 f8 03             	cmp    $0x3,%eax
   11d45:	0f 8f 88 00 00 00    	jg     11dd3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   11d4b:	83 f8 01             	cmp    $0x1,%eax
   11d4e:	74 07                	je     11d57 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   11d50:	83 f8 02             	cmp    $0x2,%eax
   11d53:	74 21                	je     11d76 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   11d55:	eb 7c                	jmp    11dd3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   11d57:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11d5e:	48 83 c0 10          	add    $0x10,%rax
   11d62:	48 8d 15 f0 e2 00 00 	lea    0xe2f0(%rip),%rdx        # 20059 <_ZZN9VulkanApp6renderEvE11submitCount+0x191>
   11d69:	48 89 d6             	mov    %rdx,%rsi
   11d6c:	48 89 c7             	mov    %rax,%rdi
   11d6f:	e8 dc 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11d74:	eb 7b                	jmp    11df1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   11d76:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11d7d:	48 83 c0 10          	add    $0x10,%rax
   11d81:	48 8d 15 e1 e2 00 00 	lea    0xe2e1(%rip),%rdx        # 20069 <_ZZN9VulkanApp6renderEvE11submitCount+0x1a1>
   11d88:	48 89 d6             	mov    %rdx,%rsi
   11d8b:	48 89 c7             	mov    %rax,%rdi
   11d8e:	e8 bd 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11d93:	eb 5c                	jmp    11df1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   11d95:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11d9c:	48 83 c0 10          	add    $0x10,%rax
   11da0:	48 8d 15 d0 e2 00 00 	lea    0xe2d0(%rip),%rdx        # 20077 <_ZZN9VulkanApp6renderEvE11submitCount+0x1af>
   11da7:	48 89 d6             	mov    %rdx,%rsi
   11daa:	48 89 c7             	mov    %rax,%rdi
   11dad:	e8 9e 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11db2:	eb 3d                	jmp    11df1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   11db4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11dbb:	48 83 c0 10          	add    $0x10,%rax
   11dbf:	48 8d 15 be e2 00 00 	lea    0xe2be(%rip),%rdx        # 20084 <_ZZN9VulkanApp6renderEvE11submitCount+0x1bc>
   11dc6:	48 89 d6             	mov    %rdx,%rsi
   11dc9:	48 89 c7             	mov    %rax,%rdi
   11dcc:	e8 7f 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11dd1:	eb 1e                	jmp    11df1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   11dd3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11dda:	48 83 c0 10          	add    $0x10,%rax
   11dde:	48 8d 15 a4 e2 00 00 	lea    0xe2a4(%rip),%rdx        # 20089 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c1>
   11de5:	48 89 d6             	mov    %rdx,%rsi
   11de8:	48 89 c7             	mov    %rax,%rdi
   11deb:	e8 60 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   11df0:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   11df1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11df8:	48 83 c0 10          	add    $0x10,%rax
   11dfc:	48 8d 15 8d e2 00 00 	lea    0xe28d(%rip),%rdx        # 20090 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c8>
   11e03:	48 89 d6             	mov    %rdx,%rsi
   11e06:	48 89 c7             	mov    %rax,%rdi
   11e09:	e8 42 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11e0e:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   11e14:	89 d6                	mov    %edx,%esi
   11e16:	48 89 c7             	mov    %rax,%rdi
   11e19:	e8 62 2a ff ff       	call   4880 <_ZNSolsEi@plt>
   11e1e:	be 0a 00 00 00       	mov    $0xa,%esi
   11e23:	48 89 c7             	mov    %rax,%rdi
   11e26:	e8 55 27 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   11e2b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11e32:	48 83 c0 10          	add    $0x10,%rax
   11e36:	48 8d 15 62 e2 00 00 	lea    0xe262(%rip),%rdx        # 2009f <_ZZN9VulkanApp6renderEvE11submitCount+0x1d7>
   11e3d:	48 89 d6             	mov    %rdx,%rsi
   11e40:	48 89 c7             	mov    %rax,%rdi
   11e43:	e8 08 26 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11e48:	48 89 c2             	mov    %rax,%rdx
   11e4b:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   11e52:	48 83 c0 14          	add    $0x14,%rax
   11e56:	48 89 c6             	mov    %rax,%rsi
   11e59:	48 89 d7             	mov    %rdx,%rdi
   11e5c:	e8 ef 25 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11e61:	be 0a 00 00 00       	mov    $0xa,%esi
   11e66:	48 89 c7             	mov    %rax,%rdi
   11e69:	e8 12 27 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   11e6e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11e75:	48 83 c0 10          	add    $0x10,%rax
   11e79:	48 8d 15 30 e2 00 00 	lea    0xe230(%rip),%rdx        # 200b0 <_ZZN9VulkanApp6renderEvE11submitCount+0x1e8>
   11e80:	48 89 d6             	mov    %rdx,%rsi
   11e83:	48 89 c7             	mov    %rax,%rdi
   11e86:	e8 c5 25 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11e8b:	48 89 c2             	mov    %rax,%rdx
   11e8e:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   11e95:	48 05 14 01 00 00    	add    $0x114,%rax
   11e9b:	48 89 c6             	mov    %rax,%rsi
   11e9e:	48 89 d7             	mov    %rdx,%rdi
   11ea1:	e8 aa 25 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11ea6:	be 0a 00 00 00       	mov    $0xa,%esi
   11eab:	48 89 c7             	mov    %rax,%rdi
   11eae:	e8 cd 26 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   11eb3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11eba:	48 83 c0 10          	add    $0x10,%rax
   11ebe:	48 8d 15 03 e2 00 00 	lea    0xe203(%rip),%rdx        # 200c8 <_ZZN9VulkanApp6renderEvE11submitCount+0x200>
   11ec5:	48 89 d6             	mov    %rdx,%rsi
   11ec8:	48 89 c7             	mov    %rax,%rdi
   11ecb:	e8 80 25 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11ed0:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   11ed3:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   11eda:	48 89 c6             	mov    %rax,%rsi
   11edd:	48 89 d7             	mov    %rdx,%rdi
   11ee0:	e8 cb 21 ff ff       	call   40b0 <_ZNSolsEm@plt>
   11ee5:	be 0a 00 00 00       	mov    $0xa,%esi
   11eea:	48 89 c7             	mov    %rax,%rdi
   11eed:	e8 8e 26 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   11ef2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11ef9:	48 83 c0 10          	add    $0x10,%rax
   11efd:	48 8d 15 08 e1 00 00 	lea    0xe108(%rip),%rdx        # 2000c <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   11f04:	48 89 d6             	mov    %rdx,%rsi
   11f07:	48 89 c7             	mov    %rax,%rdi
   11f0a:	e8 41 25 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11f0f:	48 89 c2             	mov    %rax,%rdx
   11f12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f16:	48 89 c6             	mov    %rax,%rsi
   11f19:	48 89 d7             	mov    %rdx,%rdi
   11f1c:	e8 8f 21 ff ff       	call   40b0 <_ZNSolsEm@plt>
   11f21:	48 89 c2             	mov    %rax,%rdx
   11f24:	48 8d 05 c5 e1 00 00 	lea    0xe1c5(%rip),%rax        # 200f0 <_ZZN9VulkanApp6renderEvE11submitCount+0x228>
   11f2b:	48 89 c6             	mov    %rax,%rsi
   11f2e:	48 89 d7             	mov    %rdx,%rdi
   11f31:	e8 1a 25 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   11f36:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11f3a:	48 8b 08             	mov    (%rax),%rcx
   11f3d:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   11f44:	ba 00 00 00 00       	mov    $0x0,%edx
   11f49:	48 89 ce             	mov    %rcx,%rsi
   11f4c:	48 89 c7             	mov    %rax,%rdi
   11f4f:	e8 37 5d ff ff       	call   7c8b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   11f54:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   11f5b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   11f5f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f63:	48 89 c7             	mov    %rax,%rdi
   11f66:	e8 8f 0f 00 00       	call   12efa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   11f6b:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   11f72:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f76:	48 89 c7             	mov    %rax,%rdi
   11f79:	e8 a2 0f 00 00       	call   12f20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   11f7e:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   11f85:	eb 5e                	jmp    11fe5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   11f87:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11f8e:	48 89 c7             	mov    %rax,%rdi
   11f91:	e8 12 10 00 00       	call   12fa8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   11f96:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   11f9a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11fa1:	48 83 c0 10          	add    $0x10,%rax
   11fa5:	48 8d 15 65 e1 00 00 	lea    0xe165(%rip),%rdx        # 20111 <_ZZN9VulkanApp6renderEvE11submitCount+0x249>
   11fac:	48 89 d6             	mov    %rdx,%rsi
   11faf:	48 89 c7             	mov    %rax,%rdi
   11fb2:	e8 99 24 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11fb7:	48 89 c2             	mov    %rax,%rdx
   11fba:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11fbe:	48 89 c6             	mov    %rax,%rsi
   11fc1:	48 89 d7             	mov    %rdx,%rdi
   11fc4:	e8 87 24 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11fc9:	be 0a 00 00 00       	mov    $0xa,%esi
   11fce:	48 89 c7             	mov    %rax,%rdi
   11fd1:	e8 aa 25 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   11fd6:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11fdd:	48 89 c7             	mov    %rax,%rdi
   11fe0:	e8 9f 0f 00 00       	call   12f84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   11fe5:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   11fec:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11ff3:	48 89 d6             	mov    %rdx,%rsi
   11ff6:	48 89 c7             	mov    %rax,%rdi
   11ff9:	e8 4b 0f 00 00       	call   12f49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11ffe:	84 c0                	test   %al,%al
   12000:	75 85                	jne    11f87 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   12002:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12006:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1200a:	0f 85 fb 00 00 00    	jne    1210b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   12010:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12017:	48 83 c0 10          	add    $0x10,%rax
   1201b:	48 8d 15 ea df 00 00 	lea    0xdfea(%rip),%rdx        # 2000c <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   12022:	48 89 d6             	mov    %rdx,%rsi
   12025:	48 89 c7             	mov    %rax,%rdi
   12028:	e8 23 24 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1202d:	48 89 c2             	mov    %rax,%rdx
   12030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12034:	48 89 c6             	mov    %rax,%rsi
   12037:	48 89 d7             	mov    %rdx,%rdi
   1203a:	e8 71 20 ff ff       	call   40b0 <_ZNSolsEm@plt>
   1203f:	48 89 c2             	mov    %rax,%rdx
   12042:	48 8d 05 cf e0 00 00 	lea    0xe0cf(%rip),%rax        # 20118 <_ZZN9VulkanApp6renderEvE11submitCount+0x250>
   12049:	48 89 c6             	mov    %rax,%rsi
   1204c:	48 89 d7             	mov    %rdx,%rdi
   1204f:	e8 fc 23 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   12054:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1205b:	48 05 90 00 00 00    	add    $0x90,%rax
   12061:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   12065:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12069:	48 89 c7             	mov    %rax,%rdi
   1206c:	e8 e7 09 00 00       	call   12a58 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   12071:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   12078:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1207c:	48 89 c7             	mov    %rax,%rdi
   1207f:	e8 fa 09 00 00       	call   12a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   12084:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   1208b:	eb 61                	jmp    120ee <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   1208d:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   12094:	48 89 c7             	mov    %rax,%rdi
   12097:	e8 66 0a 00 00       	call   12b02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1209c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   120a0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   120a7:	48 83 c0 10          	add    $0x10,%rax
   120ab:	48 8d 15 5f e0 00 00 	lea    0xe05f(%rip),%rdx        # 20111 <_ZZN9VulkanApp6renderEvE11submitCount+0x249>
   120b2:	48 89 d6             	mov    %rdx,%rsi
   120b5:	48 89 c7             	mov    %rax,%rdi
   120b8:	e8 93 23 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   120bd:	48 89 c2             	mov    %rax,%rdx
   120c0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   120c4:	48 8b 00             	mov    (%rax),%rax
   120c7:	48 89 c6             	mov    %rax,%rsi
   120ca:	48 89 d7             	mov    %rdx,%rdi
   120cd:	e8 7e 23 ff ff       	call   4450 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   120d2:	be 0a 00 00 00       	mov    $0xa,%esi
   120d7:	48 89 c7             	mov    %rax,%rdi
   120da:	e8 a1 24 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   120df:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   120e6:	48 89 c7             	mov    %rax,%rdi
   120e9:	e8 f4 09 00 00       	call   12ae2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   120ee:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   120f5:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   120fc:	48 89 d6             	mov    %rdx,%rsi
   120ff:	48 89 c7             	mov    %rax,%rdi
   12102:	e8 a0 09 00 00       	call   12aa7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   12107:	84 c0                	test   %al,%al
   12109:	75 82                	jne    1208d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   1210b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12112:	48 83 c0 10          	add    $0x10,%rax
   12116:	be 0a 00 00 00       	mov    $0xa,%esi
   1211b:	48 89 c7             	mov    %rax,%rdi
   1211e:	e8 5d 24 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   12123:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   12128:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   1212f:	48 89 c7             	mov    %rax,%rdi
   12132:	e8 c9 6c ff ff       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   12137:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   1213e:	48 89 c7             	mov    %rax,%rdi
   12141:	e8 1a 21 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   12146:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   1214d:	48 89 c7             	mov    %rax,%rdi
   12150:	e8 5d 0c 00 00       	call   12db2 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   12155:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   1215c:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   12163:	48 89 d6             	mov    %rdx,%rsi
   12166:	48 89 c7             	mov    %rax,%rdi
   12169:	e8 09 0c 00 00       	call   12d77 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   1216e:	84 c0                	test   %al,%al
   12170:	0f 85 18 f9 ff ff    	jne    11a8e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   12176:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1217d:	48 83 c0 10          	add    $0x10,%rax
   12181:	be 0a 00 00 00       	mov    $0xa,%esi
   12186:	48 89 c7             	mov    %rax,%rdi
   12189:	e8 f2 23 ff ff       	call   4580 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   1218e:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   12195:	48 89 c7             	mov    %rax,%rdi
   12198:	e8 ed 6e ff ff       	call   908a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   1219d:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   121a4:	48 89 c7             	mov    %rax,%rdi
   121a7:	e8 e6 6a ff ff       	call   8c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   121ac:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   121b3:	48 89 c7             	mov    %rax,%rdi
   121b6:	e8 45 6c ff ff       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   121bb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   121c2:	48 89 c7             	mov    %rax,%rdi
   121c5:	e8 d6 1e ff ff       	call   40a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   121ca:	e9 cd 00 00 00       	jmp    1229c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   121cf:	49 89 c4             	mov    %rax,%r12
   121d2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   121d9:	48 89 c7             	mov    %rax,%rdi
   121dc:	e8 7f 20 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   121e1:	eb 03                	jmp    121e6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   121e3:	49 89 c4             	mov    %rax,%r12
   121e6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   121ed:	48 89 c7             	mov    %rax,%rdi
   121f0:	e8 6b 20 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   121f5:	eb 03                	jmp    121fa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   121f7:	49 89 c4             	mov    %rax,%r12
   121fa:	48 89 df             	mov    %rbx,%rdi
   121fd:	e8 be 20 ff ff       	call   42c0 <__cxa_free_exception@plt>
   12202:	4c 89 e3             	mov    %r12,%rbx
   12205:	eb 7b                	jmp    12282 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   12207:	48 89 c3             	mov    %rax,%rbx
   1220a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   12211:	48 89 c7             	mov    %rax,%rdi
   12214:	e8 f7 22 ff ff       	call   4510 <_ZNSaIcED1Ev@plt>
   12219:	eb 2b                	jmp    12246 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   1221b:	48 89 c3             	mov    %rax,%rbx
   1221e:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   12225:	48 89 c7             	mov    %rax,%rdi
   12228:	e8 d3 6b ff ff       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   1222d:	eb 03                	jmp    12232 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   1222f:	48 89 c3             	mov    %rax,%rbx
   12232:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   12239:	48 89 c7             	mov    %rax,%rdi
   1223c:	e8 1f 20 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   12241:	eb 03                	jmp    12246 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   12243:	48 89 c3             	mov    %rax,%rbx
   12246:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   1224d:	48 89 c7             	mov    %rax,%rdi
   12250:	e8 35 6e ff ff       	call   908a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   12255:	eb 03                	jmp    1225a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   12257:	48 89 c3             	mov    %rax,%rbx
   1225a:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   12261:	48 89 c7             	mov    %rax,%rdi
   12264:	e8 29 6a ff ff       	call   8c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   12269:	eb 03                	jmp    1226e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   1226b:	48 89 c3             	mov    %rax,%rbx
   1226e:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   12275:	48 89 c7             	mov    %rax,%rdi
   12278:	e8 83 6b ff ff       	call   8e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   1227d:	eb 03                	jmp    12282 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   1227f:	48 89 c3             	mov    %rax,%rbx
   12282:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   12289:	48 89 c7             	mov    %rax,%rdi
   1228c:	e8 0f 1e ff ff       	call   40a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   12291:	48 89 d8             	mov    %rbx,%rax
   12294:	48 89 c7             	mov    %rax,%rdi
   12297:	e8 14 26 ff ff       	call   48b0 <_Unwind_Resume@plt>
   1229c:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   122a3:	5b                   	pop    %rbx
   122a4:	41 5c                	pop    %r12
   122a6:	5d                   	pop    %rbp
   122a7:	c3                   	ret

00000000000122a8 <_Z41__static_initialization_and_destruction_0ii>:
   122a8:	55                   	push   %rbp
   122a9:	48 89 e5             	mov    %rsp,%rbp
   122ac:	41 55                	push   %r13
   122ae:	41 54                	push   %r12
   122b0:	53                   	push   %rbx
   122b1:	48 83 ec 58          	sub    $0x58,%rsp
   122b5:	89 7d 9c             	mov    %edi,-0x64(%rbp)
   122b8:	89 75 98             	mov    %esi,-0x68(%rbp)
   122bb:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
   122bf:	0f 85 6f 01 00 00    	jne    12434 <_Z41__static_initialization_and_destruction_0ii+0x18c>
   122c5:	81 7d 98 ff ff 00 00 	cmpl   $0xffff,-0x68(%rbp)
   122cc:	0f 85 62 01 00 00    	jne    12434 <_Z41__static_initialization_and_destruction_0ii+0x18c>
   122d2:	48 8d 05 37 e3 01 00 	lea    0x1e337(%rip),%rax        # 30610 <_ZStL8__ioinit>
   122d9:	48 89 c7             	mov    %rax,%rdi
   122dc:	e8 7f 24 ff ff       	call   4760 <_ZNSt8ios_base4InitC1Ev@plt>
   122e1:	48 8d 05 b0 e1 01 00 	lea    0x1e1b0(%rip),%rax        # 30498 <__dso_handle>
   122e8:	48 89 c2             	mov    %rax,%rdx
   122eb:	48 8d 05 1e e3 01 00 	lea    0x1e31e(%rip),%rax        # 30610 <_ZStL8__ioinit>
   122f2:	48 89 c6             	mov    %rax,%rsi
   122f5:	48 8b 05 cc dc 01 00 	mov    0x1dccc(%rip),%rax        # 2ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   122fc:	48 89 c7             	mov    %rax,%rdi
   122ff:	e8 ac 20 ff ff       	call   43b0 <__cxa_atexit@plt>
   12304:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12308:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
   1230d:	f3 0f 10 05 47 df 00 	movss  0xdf47(%rip),%xmm0        # 2025c <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   12314:	00 
   12315:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
   1231a:	f3 0f 10 05 36 df 00 	movss  0xdf36(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   12321:	00 
   12322:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
   12327:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1232b:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
   12330:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12334:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
   12339:	f3 0f 10 05 1f df 00 	movss  0xdf1f(%rip),%xmm0        # 20260 <_ZZN9VulkanApp6renderEvE11submitCount+0x398>
   12340:	00 
   12341:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
   12346:	f3 0f 10 05 12 df 00 	movss  0xdf12(%rip),%xmm0        # 20260 <_ZZN9VulkanApp6renderEvE11submitCount+0x398>
   1234d:	00 
   1234e:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
   12353:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12357:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
   1235c:	f3 0f 10 05 f4 de 00 	movss  0xdef4(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   12363:	00 
   12364:	f3 0f 11 45 c0       	movss  %xmm0,-0x40(%rbp)
   12369:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1236d:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
   12372:	f3 0f 10 05 e2 de 00 	movss  0xdee2(%rip),%xmm0        # 2025c <_ZZN9VulkanApp6renderEvE11submitCount+0x394>
   12379:	00 
   1237a:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
   1237f:	f3 0f 10 05 d9 de 00 	movss  0xded9(%rip),%xmm0        # 20260 <_ZZN9VulkanApp6renderEvE11submitCount+0x398>
   12386:	00 
   12387:	f3 0f 11 45 cc       	movss  %xmm0,-0x34(%rbp)
   1238c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12390:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   12395:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12399:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   1239e:	f3 0f 10 05 b2 de 00 	movss  0xdeb2(%rip),%xmm0        # 20258 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
   123a5:	00 
   123a6:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   123ab:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   123af:	49 89 c4             	mov    %rax,%r12
   123b2:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   123b8:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   123bc:	48 89 c7             	mov    %rax,%rdi
   123bf:	e8 90 2a ff ff       	call   4e54 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
   123c4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   123c8:	4c 89 e6             	mov    %r12,%rsi
   123cb:	4c 89 ef             	mov    %r13,%rdi
   123ce:	4c 89 e1             	mov    %r12,%rcx
   123d1:	4c 89 eb             	mov    %r13,%rbx
   123d4:	48 89 da             	mov    %rbx,%rdx
   123d7:	48 89 c1             	mov    %rax,%rcx
   123da:	48 8d 05 3f e2 01 00 	lea    0x1e23f(%rip),%rax        # 30620 <_ZN6shaderL8triangleE>
   123e1:	48 89 c7             	mov    %rax,%rdi
   123e4:	e8 a3 2a ff ff       	call   4e8c <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
   123e9:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   123ed:	48 89 c7             	mov    %rax,%rdi
   123f0:	e8 7b 2a ff ff       	call   4e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
const std::vector<vkh::Vertex2D_RGB> triangle{
   123f5:	48 8d 05 9c e0 01 00 	lea    0x1e09c(%rip),%rax        # 30498 <__dso_handle>
   123fc:	48 89 c2             	mov    %rax,%rdx
   123ff:	48 8d 05 1a e2 01 00 	lea    0x1e21a(%rip),%rax        # 30620 <_ZN6shaderL8triangleE>
   12406:	48 89 c6             	mov    %rax,%rsi
   12409:	48 8d 05 e0 34 ff ff 	lea    -0xcb20(%rip),%rax        # 58f0 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
   12410:	48 89 c7             	mov    %rax,%rdi
   12413:	e8 98 1f ff ff       	call   43b0 <__cxa_atexit@plt>
   12418:	eb 1a                	jmp    12434 <_Z41__static_initialization_and_destruction_0ii+0x18c>
    {{-0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}}};
   1241a:	48 89 c3             	mov    %rax,%rbx
   1241d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   12421:	48 89 c7             	mov    %rax,%rdi
   12424:	e8 47 2a ff ff       	call   4e70 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
   12429:	48 89 d8             	mov    %rbx,%rax
   1242c:	48 89 c7             	mov    %rax,%rdi
   1242f:	e8 7c 24 ff ff       	call   48b0 <_Unwind_Resume@plt>
   12434:	48 83 c4 58          	add    $0x58,%rsp
   12438:	5b                   	pop    %rbx
   12439:	41 5c                	pop    %r12
   1243b:	41 5d                	pop    %r13
   1243d:	5d                   	pop    %rbp
   1243e:	c3                   	ret

000000000001243f <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   1243f:	55                   	push   %rbp
   12440:	48 89 e5             	mov    %rsp,%rbp
   12443:	be ff ff 00 00       	mov    $0xffff,%esi
   12448:	bf 01 00 00 00       	mov    $0x1,%edi
   1244d:	e8 56 fe ff ff       	call   122a8 <_Z41__static_initialization_and_destruction_0ii>
   12452:	5d                   	pop    %rbp
   12453:	c3                   	ret

0000000000012454 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   12454:	55                   	push   %rbp
   12455:	48 89 e5             	mov    %rsp,%rbp
   12458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1245c:	48 8d 15 ad d8 01 00 	lea    0x1d8ad(%rip),%rdx        # 2fd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   12463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12467:	48 89 10             	mov    %rdx,(%rax)
   1246a:	90                   	nop
   1246b:	5d                   	pop    %rbp
   1246c:	c3                   	ret

000000000001246d <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   1246d:	55                   	push   %rbp
   1246e:	48 89 e5             	mov    %rsp,%rbp
   12471:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12475:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12479:	90                   	nop
   1247a:	5d                   	pop    %rbp
   1247b:	c3                   	ret

000000000001247c <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   1247c:	55                   	push   %rbp
   1247d:	48 89 e5             	mov    %rsp,%rbp
   12480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   12484:	48 8d 05 55 d8 00 00 	lea    0xd855(%rip),%rax        # 1fce0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   1248b:	5d                   	pop    %rbp
   1248c:	c3                   	ret
   1248d:	90                   	nop

000000000001248e <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   1248e:	55                   	push   %rbp
   1248f:	48 89 e5             	mov    %rsp,%rbp
   12492:	48 83 ec 10          	sub    $0x10,%rsp
   12496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1249a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1249e:	48 89 c7             	mov    %rax,%rdi
   124a1:	e8 ae ff ff ff       	call   12454 <_ZNSt9exceptionC1Ev>
   124a6:	48 8d 15 13 d8 01 00 	lea    0x1d813(%rip),%rdx        # 2fcc0 <_ZTVSt19bad_optional_access+0x10>
   124ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124b1:	48 89 10             	mov    %rdx,(%rax)
   124b4:	90                   	nop
   124b5:	c9                   	leave
   124b6:	c3                   	ret

00000000000124b7 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   124b7:	55                   	push   %rbp
   124b8:	48 89 e5             	mov    %rsp,%rbp
   124bb:	53                   	push   %rbx
   124bc:	48 83 ec 08          	sub    $0x8,%rsp
   124c0:	bf 08 00 00 00       	mov    $0x8,%edi
   124c5:	e8 e6 1c ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   124ca:	48 89 c3             	mov    %rax,%rbx
   124cd:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   124d4:	48 89 df             	mov    %rbx,%rdi
   124d7:	e8 b2 ff ff ff       	call   1248e <_ZNSt19bad_optional_accessC1Ev>
   124dc:	48 8d 05 4b 8b 00 00 	lea    0x8b4b(%rip),%rax        # 1b02e <_ZNSt19bad_optional_accessD1Ev>
   124e3:	48 89 c2             	mov    %rax,%rdx
   124e6:	48 8d 05 6b d8 01 00 	lea    0x1d86b(%rip),%rax        # 2fd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   124ed:	48 89 c6             	mov    %rax,%rsi
   124f0:	48 89 df             	mov    %rbx,%rdi
   124f3:	e8 58 23 ff ff       	call   4850 <__cxa_throw@plt>

00000000000124f8 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   124f8:	55                   	push   %rbp
   124f9:	48 89 e5             	mov    %rsp,%rbp
   124fc:	48 83 ec 10          	sub    $0x10,%rsp
   12500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   12504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12508:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   1250e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12512:	48 89 c7             	mov    %rax,%rdi
   12515:	e8 04 00 00 00       	call   1251e <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   1251a:	90                   	nop
   1251b:	c9                   	leave
   1251c:	c3                   	ret
   1251d:	90                   	nop

000000000001251e <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   1251e:	55                   	push   %rbp
   1251f:	48 89 e5             	mov    %rsp,%rbp
   12522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   12526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1252a:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12531:	00 
      _M_header._M_left = &_M_header;
   12532:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1253a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   1253e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12546:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   1254a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1254e:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   12555:	00 
    }
   12556:	90                   	nop
   12557:	5d                   	pop    %rbp
   12558:	c3                   	ret
   12559:	90                   	nop

000000000001255a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   1255a:	55                   	push   %rbp
   1255b:	48 89 e5             	mov    %rsp,%rbp
   1255e:	48 83 ec 10          	sub    $0x10,%rsp
   12562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1256a:	48 89 c7             	mov    %rax,%rdi
   1256d:	e8 60 00 00 00       	call   125d2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   12572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12576:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   1257a:	90                   	nop
   1257b:	c9                   	leave
   1257c:	c3                   	ret
   1257d:	90                   	nop

000000000001257e <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   1257e:	55                   	push   %rbp
   1257f:	48 89 e5             	mov    %rsp,%rbp
   12582:	48 83 ec 10          	sub    $0x10,%rsp
   12586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1258a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1258e:	48 89 c7             	mov    %rax,%rdi
   12591:	e8 c4 ff ff ff       	call   1255a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   12596:	90                   	nop
   12597:	c9                   	leave
   12598:	c3                   	ret
   12599:	90                   	nop

000000000001259a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   1259a:	55                   	push   %rbp
   1259b:	48 89 e5             	mov    %rsp,%rbp
   1259e:	48 83 ec 10          	sub    $0x10,%rsp
   125a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125aa:	48 89 c7             	mov    %rax,%rdi
   125ad:	e8 cc ff ff ff       	call   1257e <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   125b2:	90                   	nop
   125b3:	c9                   	leave
   125b4:	c3                   	ret
   125b5:	90                   	nop

00000000000125b6 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   125b6:	55                   	push   %rbp
   125b7:	48 89 e5             	mov    %rsp,%rbp
   125ba:	48 83 ec 10          	sub    $0x10,%rsp
   125be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125c6:	48 89 c7             	mov    %rax,%rdi
   125c9:	e8 cc ff ff ff       	call   1259a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   125ce:	90                   	nop
   125cf:	c9                   	leave
   125d0:	c3                   	ret
   125d1:	90                   	nop

00000000000125d2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   125d2:	55                   	push   %rbp
   125d3:	48 89 e5             	mov    %rsp,%rbp
   125d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125da:	90                   	nop
   125db:	5d                   	pop    %rbp
   125dc:	c3                   	ret
   125dd:	90                   	nop

00000000000125de <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   125de:	55                   	push   %rbp
   125df:	48 89 e5             	mov    %rsp,%rbp
   125e2:	48 83 ec 10          	sub    $0x10,%rsp
   125e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   125ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   125f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125f6:	48 89 d6             	mov    %rdx,%rsi
   125f9:	48 89 c7             	mov    %rax,%rdi
   125fc:	e8 fd 07 00 00       	call   12dfe <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   12601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12605:	c9                   	leave
   12606:	c3                   	ret
   12607:	90                   	nop

0000000000012608 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   12608:	55                   	push   %rbp
   12609:	48 89 e5             	mov    %rsp,%rbp
   1260c:	48 83 ec 10          	sub    $0x10,%rsp
   12610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12614:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1261c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12620:	48 89 d6             	mov    %rdx,%rsi
   12623:	48 89 c7             	mov    %rax,%rdi
   12626:	e8 b3 ff ff ff       	call   125de <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   1262b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1262f:	c9                   	leave
   12630:	c3                   	ret
   12631:	90                   	nop

0000000000012632 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   12632:	55                   	push   %rbp
   12633:	48 89 e5             	mov    %rsp,%rbp
   12636:	48 83 ec 10          	sub    $0x10,%rsp
   1263a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   1263e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12642:	48 89 c7             	mov    %rax,%rdi
   12645:	e8 1a 00 00 00       	call   12664 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1264a:	84 c0                	test   %al,%al
   1264c:	74 0e                	je     1265c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   1264e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12652:	48 89 c7             	mov    %rax,%rdi
   12655:	e8 ce 07 00 00       	call   12e28 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   1265a:	eb 05                	jmp    12661 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   1265c:	e8 56 fe ff ff       	call   124b7 <_ZSt27__throw_bad_optional_accessv>
      }
   12661:	c9                   	leave
   12662:	c3                   	ret
   12663:	90                   	nop

0000000000012664 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   12664:	55                   	push   %rbp
   12665:	48 89 e5             	mov    %rsp,%rbp
   12668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   1266c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12670:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12674:	5d                   	pop    %rbp
   12675:	c3                   	ret

0000000000012676 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   12676:	55                   	push   %rbp
   12677:	48 89 e5             	mov    %rsp,%rbp
   1267a:	48 83 ec 10          	sub    $0x10,%rsp
   1267e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12686:	48 89 c7             	mov    %rax,%rdi
   12689:	e8 16 08 00 00       	call   12ea4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   1268e:	90                   	nop
   1268f:	c9                   	leave
   12690:	c3                   	ret
   12691:	90                   	nop

0000000000012692 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   12692:	55                   	push   %rbp
   12693:	48 89 e5             	mov    %rsp,%rbp
   12696:	48 83 ec 10          	sub    $0x10,%rsp
   1269a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1269e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126a2:	48 89 c7             	mov    %rax,%rdi
   126a5:	e8 c2 07 00 00       	call   12e6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   126aa:	90                   	nop
   126ab:	c9                   	leave
   126ac:	c3                   	ret
   126ad:	90                   	nop

00000000000126ae <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   126ae:	55                   	push   %rbp
   126af:	48 89 e5             	mov    %rsp,%rbp
   126b2:	48 83 ec 10          	sub    $0x10,%rsp
   126b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126be:	48 89 c7             	mov    %rax,%rdi
   126c1:	e8 cc ff ff ff       	call   12692 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   126c6:	90                   	nop
   126c7:	c9                   	leave
   126c8:	c3                   	ret
   126c9:	90                   	nop

00000000000126ca <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   126ca:	55                   	push   %rbp
   126cb:	48 89 e5             	mov    %rsp,%rbp
   126ce:	48 83 ec 10          	sub    $0x10,%rsp
   126d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126da:	48 89 c7             	mov    %rax,%rdi
   126dd:	e8 de 07 00 00       	call   12ec0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   126e2:	90                   	nop
   126e3:	c9                   	leave
   126e4:	c3                   	ret
   126e5:	90                   	nop

00000000000126e6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
   126e6:	55                   	push   %rbp
   126e7:	48 89 e5             	mov    %rsp,%rbp
   126ea:	48 83 ec 10          	sub    $0x10,%rsp
   126ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
   126f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126f6:	48 89 c7             	mov    %rax,%rdi
   126f9:	e8 02 00 00 00       	call   12700 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
   126fe:	c9                   	leave
   126ff:	c3                   	ret

0000000000012700 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
   12700:	55                   	push   %rbp
   12701:	48 89 e5             	mov    %rsp,%rbp
   12704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
   12708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1270c:	5d                   	pop    %rbp
   1270d:	c3                   	ret

000000000001270e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1270e:	55                   	push   %rbp
   1270f:	48 89 e5             	mov    %rsp,%rbp
   12712:	48 83 ec 10          	sub    $0x10,%rsp
   12716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1271a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1271e:	48 89 c7             	mov    %rax,%rdi
   12721:	e8 3c 11 00 00       	call   13862 <_ZNSaIP13VkImageView_TED1Ev>
   12726:	90                   	nop
   12727:	c9                   	leave
   12728:	c3                   	ret
   12729:	90                   	nop

000000000001272a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1272a:	55                   	push   %rbp
   1272b:	48 89 e5             	mov    %rsp,%rbp
   1272e:	48 83 ec 10          	sub    $0x10,%rsp
   12732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1273a:	48 89 c7             	mov    %rax,%rdi
   1273d:	e8 2e 18 00 00       	call   13f70 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   12742:	90                   	nop
   12743:	c9                   	leave
   12744:	c3                   	ret
   12745:	90                   	nop

0000000000012746 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   12746:	55                   	push   %rbp
   12747:	48 89 e5             	mov    %rsp,%rbp
   1274a:	48 83 ec 10          	sub    $0x10,%rsp
   1274e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12756:	48 89 c7             	mov    %rax,%rdi
   12759:	e8 cc ff ff ff       	call   1272a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   1275e:	90                   	nop
   1275f:	c9                   	leave
   12760:	c3                   	ret
   12761:	90                   	nop

0000000000012762 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   12762:	55                   	push   %rbp
   12763:	48 89 e5             	mov    %rsp,%rbp
   12766:	48 83 ec 10          	sub    $0x10,%rsp
   1276a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1276e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12772:	48 89 c7             	mov    %rax,%rdi
   12775:	e8 6c 18 00 00       	call   13fe6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   1277a:	90                   	nop
   1277b:	c9                   	leave
   1277c:	c3                   	ret
   1277d:	90                   	nop

000000000001277e <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   1277e:	55                   	push   %rbp
   1277f:	48 89 e5             	mov    %rsp,%rbp
   12782:	48 83 ec 10          	sub    $0x10,%rsp
   12786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1278a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1278e:	48 89 c7             	mov    %rax,%rdi
   12791:	e8 cc ff ff ff       	call   12762 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   12796:	90                   	nop
   12797:	c9                   	leave
   12798:	c3                   	ret
   12799:	90                   	nop

000000000001279a <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   1279a:	55                   	push   %rbp
   1279b:	48 89 e5             	mov    %rsp,%rbp
   1279e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127a6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   127ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127b1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   127b8:	00 
   127b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127bd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   127c4:	00 
   127c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127c9:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   127d0:	00 
   127d1:	90                   	nop
   127d2:	5d                   	pop    %rbp
   127d3:	c3                   	ret

00000000000127d4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   127d4:	55                   	push   %rbp
   127d5:	48 89 e5             	mov    %rsp,%rbp
   127d8:	48 83 ec 10          	sub    $0x10,%rsp
   127dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127e4:	48 89 c7             	mov    %rax,%rdi
   127e7:	e8 4a 18 00 00       	call   14036 <_ZNSaIP15VkFramebuffer_TED1Ev>
   127ec:	90                   	nop
   127ed:	c9                   	leave
   127ee:	c3                   	ret
   127ef:	90                   	nop

00000000000127f0 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   127f0:	55                   	push   %rbp
   127f1:	48 89 e5             	mov    %rsp,%rbp
   127f4:	48 83 ec 10          	sub    $0x10,%rsp
   127f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12800:	48 89 c7             	mov    %rax,%rdi
   12803:	e8 06 18 00 00       	call   1400e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   12808:	90                   	nop
   12809:	c9                   	leave
   1280a:	c3                   	ret
   1280b:	90                   	nop

000000000001280c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   1280c:	55                   	push   %rbp
   1280d:	48 89 e5             	mov    %rsp,%rbp
   12810:	48 83 ec 10          	sub    $0x10,%rsp
   12814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1281c:	48 89 c7             	mov    %rax,%rdi
   1281f:	e8 cc ff ff ff       	call   127f0 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   12824:	90                   	nop
   12825:	c9                   	leave
   12826:	c3                   	ret
   12827:	90                   	nop

0000000000012828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   12828:	55                   	push   %rbp
   12829:	48 89 e5             	mov    %rsp,%rbp
   1282c:	48 83 ec 10          	sub    $0x10,%rsp
   12830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12838:	48 89 c7             	mov    %rax,%rdi
   1283b:	e8 a4 18 00 00       	call   140e4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
   12840:	90                   	nop
   12841:	c9                   	leave
   12842:	c3                   	ret
   12843:	90                   	nop

0000000000012844 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   12844:	55                   	push   %rbp
   12845:	48 89 e5             	mov    %rsp,%rbp
   12848:	48 83 ec 10          	sub    $0x10,%rsp
   1284c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12854:	48 89 c7             	mov    %rax,%rdi
   12857:	e8 cc ff ff ff       	call   12828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   1285c:	90                   	nop
   1285d:	c9                   	leave
   1285e:	c3                   	ret
   1285f:	90                   	nop

0000000000012860 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12860:	55                   	push   %rbp
   12861:	48 89 e5             	mov    %rsp,%rbp
   12864:	48 83 ec 10          	sub    $0x10,%rsp
   12868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1286c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12870:	48 89 c7             	mov    %rax,%rdi
   12873:	e8 a0 14 00 00       	call   13d18 <_ZNSaIP13VkSemaphore_TED1Ev>
   12878:	90                   	nop
   12879:	c9                   	leave
   1287a:	c3                   	ret
   1287b:	90                   	nop

000000000001287c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1287c:	55                   	push   %rbp
   1287d:	48 89 e5             	mov    %rsp,%rbp
   12880:	48 83 ec 10          	sub    $0x10,%rsp
   12884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1288c:	48 89 c7             	mov    %rax,%rdi
   1288f:	e8 78 18 00 00       	call   1410c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
   12894:	90                   	nop
   12895:	c9                   	leave
   12896:	c3                   	ret
   12897:	90                   	nop

0000000000012898 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
   12898:	55                   	push   %rbp
   12899:	48 89 e5             	mov    %rsp,%rbp
   1289c:	48 83 ec 10          	sub    $0x10,%rsp
   128a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128a8:	48 89 c7             	mov    %rax,%rdi
   128ab:	e8 cc ff ff ff       	call   1287c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
   128b0:	90                   	nop
   128b1:	c9                   	leave
   128b2:	c3                   	ret
   128b3:	90                   	nop

00000000000128b4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   128b4:	55                   	push   %rbp
   128b5:	48 89 e5             	mov    %rsp,%rbp
   128b8:	48 83 ec 10          	sub    $0x10,%rsp
   128bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128c4:	48 89 c7             	mov    %rax,%rdi
   128c7:	e8 de 18 00 00       	call   141aa <_ZNSaIP9VkFence_TED1Ev>
   128cc:	90                   	nop
   128cd:	c9                   	leave
   128ce:	c3                   	ret
   128cf:	90                   	nop

00000000000128d0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   128d0:	55                   	push   %rbp
   128d1:	48 89 e5             	mov    %rsp,%rbp
   128d4:	48 83 ec 10          	sub    $0x10,%rsp
   128d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128e0:	48 89 c7             	mov    %rax,%rdi
   128e3:	e8 9a 18 00 00       	call   14182 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
   128e8:	90                   	nop
   128e9:	c9                   	leave
   128ea:	c3                   	ret
   128eb:	90                   	nop

00000000000128ec <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
   128ec:	55                   	push   %rbp
   128ed:	48 89 e5             	mov    %rsp,%rbp
   128f0:	48 83 ec 10          	sub    $0x10,%rsp
   128f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128fc:	48 89 c7             	mov    %rax,%rdi
   128ff:	e8 cc ff ff ff       	call   128d0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
   12904:	90                   	nop
   12905:	c9                   	leave
   12906:	c3                   	ret
   12907:	90                   	nop

0000000000012908 <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffers();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 11: Synchronization and cache control */
  struct SyncWrapper {
   12908:	55                   	push   %rbp
   12909:	48 89 e5             	mov    %rsp,%rbp
   1290c:	48 83 ec 10          	sub    $0x10,%rsp
   12910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12918:	48 89 c7             	mov    %rax,%rdi
   1291b:	e8 78 ff ff ff       	call   12898 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   12920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12924:	48 83 c0 18          	add    $0x18,%rax
   12928:	48 89 c7             	mov    %rax,%rdi
   1292b:	e8 68 ff ff ff       	call   12898 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   12930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12934:	48 83 c0 30          	add    $0x30,%rax
   12938:	48 89 c7             	mov    %rax,%rdi
   1293b:	e8 ac ff ff ff       	call   128ec <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
   12940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12944:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   1294b:	00 
   1294c:	90                   	nop
   1294d:	c9                   	leave
   1294e:	c3                   	ret
   1294f:	90                   	nop

0000000000012950 <_ZN9VulkanApp11SyncWrapperD1Ev>:
   12950:	55                   	push   %rbp
   12951:	48 89 e5             	mov    %rsp,%rbp
   12954:	48 83 ec 10          	sub    $0x10,%rsp
   12958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1295c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12960:	48 83 c0 30          	add    $0x30,%rax
   12964:	48 89 c7             	mov    %rax,%rdi
   12967:	e8 a8 18 00 00       	call   14214 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
   1296c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12970:	48 83 c0 18          	add    $0x18,%rax
   12974:	48 89 c7             	mov    %rax,%rdi
   12977:	e8 40 14 00 00       	call   13dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   1297c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12980:	48 89 c7             	mov    %rax,%rdi
   12983:	e8 34 14 00 00       	call   13dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   12988:	90                   	nop
   12989:	c9                   	leave
   1298a:	c3                   	ret
   1298b:	90                   	nop

000000000001298c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   1298c:	55                   	push   %rbp
   1298d:	48 89 e5             	mov    %rsp,%rbp
   12990:	53                   	push   %rbx
   12991:	48 83 ec 38          	sub    $0x38,%rsp
   12995:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12999:	48 89 f0             	mov    %rsi,%rax
   1299c:	48 89 d6             	mov    %rdx,%rsi
   1299f:	48 89 f2             	mov    %rsi,%rdx
   129a2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   129a6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   129aa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   129ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129b2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   129b6:	48 89 d6             	mov    %rdx,%rsi
   129b9:	48 89 c7             	mov    %rax,%rdi
   129bc:	e8 ab 19 00 00       	call   1436c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   129c1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   129c5:	48 89 c7             	mov    %rax,%rdi
   129c8:	e8 d7 19 00 00       	call   143a4 <_ZNKSt16initializer_listIPKcE3endEv>
   129cd:	48 89 c3             	mov    %rax,%rbx
   129d0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   129d4:	48 89 c7             	mov    %rax,%rdi
   129d7:	e8 b6 19 00 00       	call   14392 <_ZNKSt16initializer_listIPKcE5beginEv>
   129dc:	48 89 c1             	mov    %rax,%rcx
   129df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129e3:	48 89 da             	mov    %rbx,%rdx
   129e6:	48 89 ce             	mov    %rcx,%rsi
   129e9:	48 89 c7             	mov    %rax,%rdi
   129ec:	e8 19 1a 00 00       	call   1440a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   129f1:	eb 1a                	jmp    12a0d <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   129f3:	48 89 c3             	mov    %rax,%rbx
   129f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129fa:	48 89 c7             	mov    %rax,%rdi
   129fd:	e8 8c 65 ff ff       	call   8f8e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   12a02:	48 89 d8             	mov    %rbx,%rax
   12a05:	48 89 c7             	mov    %rax,%rdi
   12a08:	e8 a3 1e ff ff       	call   48b0 <_Unwind_Resume@plt>
   12a0d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12a11:	c9                   	leave
   12a12:	c3                   	ret
   12a13:	90                   	nop

0000000000012a14 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12a14:	55                   	push   %rbp
   12a15:	48 89 e5             	mov    %rsp,%rbp
   12a18:	48 83 ec 10          	sub    $0x10,%rsp
   12a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   12a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a24:	48 89 c7             	mov    %rax,%rdi
   12a27:	e8 1a 74 ff ff       	call   9e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12a2c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   12a2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a33:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a3b:	48 8b 00             	mov    (%rax),%rax
   12a3e:	48 89 ce             	mov    %rcx,%rsi
   12a41:	48 89 c7             	mov    %rax,%rdi
   12a44:	e8 70 1a 00 00       	call   144b9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   12a49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a4d:	48 89 c7             	mov    %rax,%rdi
   12a50:	e8 39 65 ff ff       	call   8f8e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   12a55:	90                   	nop
   12a56:	c9                   	leave
   12a57:	c3                   	ret

0000000000012a58 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12a58:	55                   	push   %rbp
   12a59:	48 89 e5             	mov    %rsp,%rbp
   12a5c:	48 83 ec 20          	sub    $0x20,%rsp
   12a60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12a64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12a6c:	48 89 d6             	mov    %rdx,%rsi
   12a6f:	48 89 c7             	mov    %rax,%rdi
   12a72:	e8 6d 1a 00 00       	call   144e4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a7b:	c9                   	leave
   12a7c:	c3                   	ret
   12a7d:	90                   	nop

0000000000012a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12a7e:	55                   	push   %rbp
   12a7f:	48 89 e5             	mov    %rsp,%rbp
   12a82:	48 83 ec 20          	sub    $0x20,%rsp
   12a86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a8e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12a92:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12a96:	48 89 d6             	mov    %rdx,%rsi
   12a99:	48 89 c7             	mov    %rax,%rdi
   12a9c:	e8 43 1a 00 00       	call   144e4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aa5:	c9                   	leave
   12aa6:	c3                   	ret

0000000000012aa7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12aa7:	55                   	push   %rbp
   12aa8:	48 89 e5             	mov    %rsp,%rbp
   12aab:	53                   	push   %rbx
   12aac:	48 83 ec 18          	sub    $0x18,%rsp
   12ab0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ab4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12ab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12abc:	48 89 c7             	mov    %rax,%rdi
   12abf:	e8 3e 1a 00 00       	call   14502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12ac4:	48 8b 18             	mov    (%rax),%rbx
   12ac7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12acb:	48 89 c7             	mov    %rax,%rdi
   12ace:	e8 2f 1a 00 00       	call   14502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12ad3:	48 8b 00             	mov    (%rax),%rax
   12ad6:	48 39 c3             	cmp    %rax,%rbx
   12ad9:	0f 95 c0             	setne  %al
   12adc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ae0:	c9                   	leave
   12ae1:	c3                   	ret

0000000000012ae2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12ae2:	55                   	push   %rbp
   12ae3:	48 89 e5             	mov    %rsp,%rbp
   12ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aee:	48 8b 00             	mov    (%rax),%rax
   12af1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12af9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12b00:	5d                   	pop    %rbp
   12b01:	c3                   	ret

0000000000012b02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12b02:	55                   	push   %rbp
   12b03:	48 89 e5             	mov    %rsp,%rbp
   12b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12b0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b0e:	48 8b 00             	mov    (%rax),%rax
   12b11:	5d                   	pop    %rbp
   12b12:	c3                   	ret
   12b13:	90                   	nop

0000000000012b14 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   12b14:	55                   	push   %rbp
   12b15:	48 89 e5             	mov    %rsp,%rbp
   12b18:	53                   	push   %rbx
   12b19:	48 83 ec 18          	sub    $0x18,%rsp
   12b1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   12b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b29:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12b2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b31:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b35:	48 39 c2             	cmp    %rax,%rdx
   12b38:	74 3c                	je     12b76 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   12b3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b3e:	48 89 c7             	mov    %rax,%rdi
   12b41:	e8 ca 19 00 00       	call   14510 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   12b46:	48 89 c2             	mov    %rax,%rdx
   12b49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b4d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12b51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b55:	48 89 ce             	mov    %rcx,%rsi
   12b58:	48 89 c7             	mov    %rax,%rdi
   12b5b:	e8 be 19 00 00       	call   1451e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   12b60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b64:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b68:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12b6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b70:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12b74:	eb 30                	jmp    12ba6 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   12b76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b7a:	48 89 c7             	mov    %rax,%rdi
   12b7d:	e8 8e 19 00 00       	call   14510 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   12b82:	48 89 c3             	mov    %rax,%rbx
   12b85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b89:	48 89 c7             	mov    %rax,%rdi
   12b8c:	e8 ed fe ff ff       	call   12a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   12b91:	48 89 c1             	mov    %rax,%rcx
   12b94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b98:	48 89 da             	mov    %rbx,%rdx
   12b9b:	48 89 ce             	mov    %rcx,%rsi
   12b9e:	48 89 c7             	mov    %rax,%rdi
   12ba1:	e8 b2 19 00 00       	call   14558 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   12ba6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12baa:	48 89 c7             	mov    %rax,%rdi
   12bad:	e8 38 1b 00 00       	call   146ea <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   12bb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12bb6:	c9                   	leave
   12bb7:	c3                   	ret

0000000000012bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12bb8:	55                   	push   %rbp
   12bb9:	48 89 e5             	mov    %rsp,%rbp
   12bbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bc4:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bcc:	48 8b 00             	mov    (%rax),%rax
   12bcf:	48 29 c2             	sub    %rax,%rdx
   12bd2:	48 89 d0             	mov    %rdx,%rax
   12bd5:	48 c1 f8 03          	sar    $0x3,%rax
   12bd9:	5d                   	pop    %rbp
   12bda:	c3                   	ret
   12bdb:	90                   	nop

0000000000012bdc <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   12bdc:	55                   	push   %rbp
   12bdd:	48 89 e5             	mov    %rsp,%rbp
   12be0:	48 83 ec 10          	sub    $0x10,%rsp
   12be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bec:	48 8b 10             	mov    (%rax),%rdx
   12bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bf3:	48 89 d6             	mov    %rdx,%rsi
   12bf6:	48 89 c7             	mov    %rax,%rdi
   12bf9:	e8 2c 1b 00 00       	call   1472a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12bfe:	c9                   	leave
   12bff:	c3                   	ret

0000000000012c00 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   12c00:	55                   	push   %rbp
   12c01:	48 89 e5             	mov    %rsp,%rbp
   12c04:	48 83 ec 10          	sub    $0x10,%rsp
   12c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c10:	48 8b 10             	mov    (%rax),%rdx
   12c13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c17:	48 89 d6             	mov    %rdx,%rsi
   12c1a:	48 89 c7             	mov    %rax,%rdi
   12c1d:	e8 08 1b 00 00       	call   1472a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12c22:	c9                   	leave
   12c23:	c3                   	ret

0000000000012c24 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12c24:	55                   	push   %rbp
   12c25:	48 89 e5             	mov    %rsp,%rbp
   12c28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c30:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12c34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c38:	48 8b 00             	mov    (%rax),%rax
   12c3b:	48 29 c2             	sub    %rax,%rdx
   12c3e:	48 c1 fa 02          	sar    $0x2,%rdx
   12c42:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   12c49:	db b6 6d 
   12c4c:	48 0f af c2          	imul   %rdx,%rax
   12c50:	5d                   	pop    %rbp
   12c51:	c3                   	ret

0000000000012c52 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   12c52:	55                   	push   %rbp
   12c53:	48 89 e5             	mov    %rsp,%rbp
   12c56:	48 83 ec 10          	sub    $0x10,%rsp
   12c5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   12c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c62:	48 89 c7             	mov    %rax,%rdi
   12c65:	e8 38 77 ff ff       	call   a3a2 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   12c6a:	c9                   	leave
   12c6b:	c3                   	ret

0000000000012c6c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   12c6c:	55                   	push   %rbp
   12c6d:	48 89 e5             	mov    %rsp,%rbp
   12c70:	48 83 ec 10          	sub    $0x10,%rsp
   12c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   12c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c7c:	48 89 c7             	mov    %rax,%rdi
   12c7f:	e8 1e 77 ff ff       	call   a3a2 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   12c84:	84 c0                	test   %al,%al
   12c86:	74 0e                	je     12c96 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   12c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c8c:	48 89 c7             	mov    %rax,%rdi
   12c8f:	e8 20 77 ff ff       	call   a3b4 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   12c94:	eb 05                	jmp    12c9b <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   12c96:	e8 1c f8 ff ff       	call   124b7 <_ZSt27__throw_bad_optional_accessv>
      }
   12c9b:	c9                   	leave
   12c9c:	c3                   	ret
   12c9d:	90                   	nop

0000000000012c9e <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   12c9e:	55                   	push   %rbp
   12c9f:	48 89 e5             	mov    %rsp,%rbp
   12ca2:	48 83 ec 20          	sub    $0x20,%rsp
   12ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12caa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12cae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   12cb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cb6:	48 89 c7             	mov    %rax,%rdi
   12cb9:	e8 7e 1a 00 00       	call   1473c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   12cbe:	8b 10                	mov    (%rax),%edx
   12cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cc4:	89 10                	mov    %edx,(%rax)
   12cc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cca:	48 89 c7             	mov    %rax,%rdi
   12ccd:	e8 78 1a 00 00       	call   1474a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   12cd2:	48 89 c1             	mov    %rax,%rcx
   12cd5:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   12cd9:	48 8b 01             	mov    (%rcx),%rax
   12cdc:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   12ce0:	48 89 46 04          	mov    %rax,0x4(%rsi)
   12ce4:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   12ce8:	48 8b 41 10          	mov    0x10(%rcx),%rax
   12cec:	48 89 46 14          	mov    %rax,0x14(%rsi)
   12cf0:	90                   	nop
   12cf1:	c9                   	leave
   12cf2:	c3                   	ret
   12cf3:	90                   	nop

0000000000012cf4 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   12cf4:	55                   	push   %rbp
   12cf5:	48 89 e5             	mov    %rsp,%rbp
   12cf8:	53                   	push   %rbx
   12cf9:	48 83 ec 18          	sub    $0x18,%rsp
   12cfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12d01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   12d05:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12d09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d0d:	48 89 c7             	mov    %rax,%rdi
   12d10:	e8 43 1a 00 00       	call   14758 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12d15:	48 89 c6             	mov    %rax,%rsi
   12d18:	48 89 df             	mov    %rbx,%rdi
   12d1b:	e8 6c 1a 00 00       	call   1478c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   12d20:	90                   	nop
   12d21:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12d25:	c9                   	leave
   12d26:	c3                   	ret
   12d27:	90                   	nop

0000000000012d28 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12d28:	55                   	push   %rbp
   12d29:	48 89 e5             	mov    %rsp,%rbp
   12d2c:	48 83 ec 20          	sub    $0x20,%rsp
   12d30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12d34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d38:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12d3c:	48 89 d6             	mov    %rdx,%rsi
   12d3f:	48 89 c7             	mov    %rax,%rdi
   12d42:	e8 79 1a 00 00       	call   147c0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d4b:	c9                   	leave
   12d4c:	c3                   	ret
   12d4d:	90                   	nop

0000000000012d4e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12d4e:	55                   	push   %rbp
   12d4f:	48 89 e5             	mov    %rsp,%rbp
   12d52:	48 83 ec 20          	sub    $0x20,%rsp
   12d56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12d5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d5e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12d62:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12d66:	48 89 d6             	mov    %rdx,%rsi
   12d69:	48 89 c7             	mov    %rax,%rdi
   12d6c:	e8 4f 1a 00 00       	call   147c0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d75:	c9                   	leave
   12d76:	c3                   	ret

0000000000012d77 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12d77:	55                   	push   %rbp
   12d78:	48 89 e5             	mov    %rsp,%rbp
   12d7b:	53                   	push   %rbx
   12d7c:	48 83 ec 18          	sub    $0x18,%rsp
   12d80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12d84:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12d88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d8c:	48 89 c7             	mov    %rax,%rdi
   12d8f:	e8 4a 1a 00 00       	call   147de <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   12d94:	48 8b 18             	mov    (%rax),%rbx
   12d97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d9b:	48 89 c7             	mov    %rax,%rdi
   12d9e:	e8 3b 1a 00 00       	call   147de <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   12da3:	48 8b 00             	mov    (%rax),%rax
   12da6:	48 39 c3             	cmp    %rax,%rbx
   12da9:	0f 95 c0             	setne  %al
   12dac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12db0:	c9                   	leave
   12db1:	c3                   	ret

0000000000012db2 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12db2:	55                   	push   %rbp
   12db3:	48 89 e5             	mov    %rsp,%rbp
   12db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dbe:	48 8b 00             	mov    (%rax),%rax
   12dc1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dc9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12dd0:	5d                   	pop    %rbp
   12dd1:	c3                   	ret

0000000000012dd2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12dd2:	55                   	push   %rbp
   12dd3:	48 89 e5             	mov    %rsp,%rbp
   12dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dde:	48 8b 00             	mov    (%rax),%rax
   12de1:	5d                   	pop    %rbp
   12de2:	c3                   	ret
   12de3:	90                   	nop

0000000000012de4 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   12de4:	55                   	push   %rbp
   12de5:	48 89 e5             	mov    %rsp,%rbp
   12de8:	48 83 ec 10          	sub    $0x10,%rsp
   12dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   12df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12df4:	48 89 c7             	mov    %rax,%rdi
   12df7:	e8 68 f8 ff ff       	call   12664 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   12dfc:	c9                   	leave
   12dfd:	c3                   	ret

0000000000012dfe <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   12dfe:	55                   	push   %rbp
   12dff:	48 89 e5             	mov    %rsp,%rbp
   12e02:	48 83 ec 10          	sub    $0x10,%rsp
   12e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   12e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12e16:	48 89 d6             	mov    %rdx,%rsi
   12e19:	48 89 c7             	mov    %rax,%rdi
   12e1c:	e8 cb 19 00 00       	call   147ec <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   12e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12e25:	c9                   	leave
   12e26:	c3                   	ret
   12e27:	90                   	nop

0000000000012e28 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   12e28:	55                   	push   %rbp
   12e29:	48 89 e5             	mov    %rsp,%rbp
   12e2c:	48 83 ec 10          	sub    $0x10,%rsp
   12e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   12e34:	e8 5a 1f ff ff       	call   4d93 <_ZSt23__is_constant_evaluatedv>
   12e39:	84 c0                	test   %al,%al
   12e3b:	74 1a                	je     12e57 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   12e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e41:	48 89 c7             	mov    %rax,%rdi
   12e44:	e8 1b f8 ff ff       	call   12664 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   12e49:	83 f0 01             	xor    $0x1,%eax
   12e4c:	84 c0                	test   %al,%al
   12e4e:	74 07                	je     12e57 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   12e50:	b8 01 00 00 00       	mov    $0x1,%eax
   12e55:	eb 05                	jmp    12e5c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   12e57:	b8 00 00 00 00       	mov    $0x0,%eax
   12e5c:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   12e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e62:	48 89 c7             	mov    %rax,%rdi
   12e65:	e8 14 1a 00 00       	call   1487e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   12e6a:	c9                   	leave
   12e6b:	c3                   	ret

0000000000012e6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   12e6c:	55                   	push   %rbp
   12e6d:	48 89 e5             	mov    %rsp,%rbp
   12e70:	48 83 ec 10          	sub    $0x10,%rsp
   12e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   12e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e7c:	48 89 c7             	mov    %rax,%rdi
   12e7f:	e8 08 1a 00 00       	call   1488c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   12e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e88:	48 89 c7             	mov    %rax,%rdi
   12e8b:	e8 18 1a 00 00       	call   148a8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   12e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e94:	48 83 c0 08          	add    $0x8,%rax
   12e98:	48 89 c7             	mov    %rax,%rdi
   12e9b:	e8 58 f6 ff ff       	call   124f8 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   12ea0:	90                   	nop
   12ea1:	c9                   	leave
   12ea2:	c3                   	ret
   12ea3:	90                   	nop

0000000000012ea4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12ea4:	55                   	push   %rbp
   12ea5:	48 89 e5             	mov    %rsp,%rbp
   12ea8:	48 83 ec 10          	sub    $0x10,%rsp
   12eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb4:	48 89 c7             	mov    %rax,%rdi
   12eb7:	e8 f8 19 00 00       	call   148b4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   12ebc:	90                   	nop
   12ebd:	c9                   	leave
   12ebe:	c3                   	ret
   12ebf:	90                   	nop

0000000000012ec0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   12ec0:	55                   	push   %rbp
   12ec1:	48 89 e5             	mov    %rsp,%rbp
   12ec4:	48 83 ec 10          	sub    $0x10,%rsp
   12ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   12ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ed0:	48 89 c7             	mov    %rax,%rdi
   12ed3:	e8 4e 1a 00 00       	call   14926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   12ed8:	48 89 c2             	mov    %rax,%rdx
   12edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12edf:	48 89 d6             	mov    %rdx,%rsi
   12ee2:	48 89 c7             	mov    %rax,%rdi
   12ee5:	e8 d6 19 00 00       	call   148c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   12eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eee:	48 89 c7             	mov    %rax,%rdi
   12ef1:	e8 80 f7 ff ff       	call   12676 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   12ef6:	90                   	nop
   12ef7:	c9                   	leave
   12ef8:	c3                   	ret
   12ef9:	90                   	nop

0000000000012efa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12efa:	55                   	push   %rbp
   12efb:	48 89 e5             	mov    %rsp,%rbp
   12efe:	48 83 ec 20          	sub    $0x20,%rsp
   12f02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12f06:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12f0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12f0e:	48 89 d6             	mov    %rdx,%rsi
   12f11:	48 89 c7             	mov    %rax,%rdi
   12f14:	e8 27 1a 00 00       	call   14940 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f1d:	c9                   	leave
   12f1e:	c3                   	ret
   12f1f:	90                   	nop

0000000000012f20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12f20:	55                   	push   %rbp
   12f21:	48 89 e5             	mov    %rsp,%rbp
   12f24:	48 83 ec 20          	sub    $0x20,%rsp
   12f28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12f2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f30:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12f34:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12f38:	48 89 d6             	mov    %rdx,%rsi
   12f3b:	48 89 c7             	mov    %rax,%rdi
   12f3e:	e8 fd 19 00 00       	call   14940 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f47:	c9                   	leave
   12f48:	c3                   	ret

0000000000012f49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12f49:	55                   	push   %rbp
   12f4a:	48 89 e5             	mov    %rsp,%rbp
   12f4d:	53                   	push   %rbx
   12f4e:	48 83 ec 18          	sub    $0x18,%rsp
   12f52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12f56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12f5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f5e:	48 89 c7             	mov    %rax,%rdi
   12f61:	e8 f8 19 00 00       	call   1495e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   12f66:	48 8b 18             	mov    (%rax),%rbx
   12f69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12f6d:	48 89 c7             	mov    %rax,%rdi
   12f70:	e8 e9 19 00 00       	call   1495e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   12f75:	48 8b 00             	mov    (%rax),%rax
   12f78:	48 39 c3             	cmp    %rax,%rbx
   12f7b:	0f 95 c0             	setne  %al
   12f7e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12f82:	c9                   	leave
   12f83:	c3                   	ret

0000000000012f84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12f84:	55                   	push   %rbp
   12f85:	48 89 e5             	mov    %rsp,%rbp
   12f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f90:	48 8b 00             	mov    (%rax),%rax
   12f93:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   12f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f9e:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12fa5:	5d                   	pop    %rbp
   12fa6:	c3                   	ret
   12fa7:	90                   	nop

0000000000012fa8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12fa8:	55                   	push   %rbp
   12fa9:	48 89 e5             	mov    %rsp,%rbp
   12fac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fb4:	48 8b 00             	mov    (%rax),%rax
   12fb7:	5d                   	pop    %rbp
   12fb8:	c3                   	ret
   12fb9:	90                   	nop

0000000000012fba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   12fba:	55                   	push   %rbp
   12fbb:	48 89 e5             	mov    %rsp,%rbp
   12fbe:	53                   	push   %rbx
   12fbf:	48 83 ec 48          	sub    $0x48,%rsp
   12fc3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   12fc7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   12fcb:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   12fcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12fd3:	48 89 d6             	mov    %rdx,%rsi
   12fd6:	48 89 c7             	mov    %rax,%rdi
   12fd9:	e8 8e 19 00 00       	call   1496c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   12fde:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   12fe2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12fe6:	48 89 c7             	mov    %rax,%rdi
   12fe9:	e8 a4 19 00 00       	call   14992 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   12fee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   12ff2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12ff6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12ffa:	48 89 d6             	mov    %rdx,%rsi
   12ffd:	48 89 c7             	mov    %rax,%rdi
   13000:	e8 a7 19 00 00       	call   149ac <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   13005:	84 c0                	test   %al,%al
   13007:	75 32                	jne    1303b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   13009:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1300d:	48 89 c7             	mov    %rax,%rdi
   13010:	e8 b9 19 00 00       	call   149ce <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   13015:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   13019:	48 89 c7             	mov    %rax,%rdi
   1301c:	e8 c9 19 00 00       	call   149ea <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   13021:	48 89 c2             	mov    %rax,%rdx
   13024:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   13028:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   1302c:	48 89 ce             	mov    %rcx,%rsi
   1302f:	48 89 c7             	mov    %rax,%rdi
   13032:	e8 d1 19 00 00       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13037:	84 c0                	test   %al,%al
   13039:	74 07                	je     13042 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   1303b:	b8 01 00 00 00       	mov    $0x1,%eax
   13040:	eb 05                	jmp    13047 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   13042:	b8 00 00 00 00       	mov    $0x0,%eax
   13047:	84 c0                	test   %al,%al
   13049:	74 5d                	je     130a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1304b:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   1304f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13053:	48 89 c7             	mov    %rax,%rdi
   13056:	e8 02 13 00 00       	call   1435d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1305b:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1305e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13062:	48 89 d6             	mov    %rdx,%rsi
   13065:	48 89 c7             	mov    %rax,%rdi
   13068:	e8 c4 19 00 00       	call   14a31 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   1306d:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   13071:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13075:	48 89 d6             	mov    %rdx,%rsi
   13078:	48 89 c7             	mov    %rax,%rdi
   1307b:	e8 e6 19 00 00       	call   14a66 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   13080:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   13084:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13088:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1308c:	49 89 c8             	mov    %rcx,%r8
   1308f:	48 89 d1             	mov    %rdx,%rcx
   13092:	48 8d 15 0f c6 00 00 	lea    0xc60f(%rip),%rdx        # 1f6a8 <_ZSt19piecewise_construct>
   13099:	48 89 c6             	mov    %rax,%rsi
   1309c:	48 89 df             	mov    %rbx,%rdi
   1309f:	e8 e0 19 00 00       	call   14a84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   130a4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   130a8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   130ac:	48 89 c7             	mov    %rax,%rdi
   130af:	e8 36 19 00 00       	call   149ea <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   130b4:	48 83 c0 20          	add    $0x20,%rax
      }
   130b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   130bc:	c9                   	leave
   130bd:	c3                   	ret

00000000000130be <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   130be:	55                   	push   %rbp
   130bf:	48 89 e5             	mov    %rsp,%rbp
   130c2:	48 83 ec 20          	sub    $0x20,%rsp
   130c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   130ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130ce:	48 89 c7             	mov    %rax,%rdi
   130d1:	e8 d0 1a 00 00       	call   14ba6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   130d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   130da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130de:	48 89 c7             	mov    %rax,%rdi
   130e1:	e8 9a 1a 00 00       	call   14b80 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   130e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   130ea:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   130ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   130f2:	48 89 d6             	mov    %rdx,%rsi
   130f5:	48 89 c7             	mov    %rax,%rdi
   130f8:	e8 d2 1a 00 00       	call   14bcf <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   130fd:	c9                   	leave
   130fe:	c3                   	ret
   130ff:	90                   	nop

0000000000013100 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   13100:	55                   	push   %rbp
   13101:	48 89 e5             	mov    %rsp,%rbp
   13104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13108:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1310c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13110:	48 8b 00             	mov    (%rax),%rax
   13113:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13117:	48 c1 e2 03          	shl    $0x3,%rdx
   1311b:	48 01 d0             	add    %rdx,%rax
      }
   1311e:	5d                   	pop    %rbp
   1311f:	c3                   	ret

0000000000013120 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13120:	55                   	push   %rbp
   13121:	48 89 e5             	mov    %rsp,%rbp
   13124:	48 83 ec 20          	sub    $0x20,%rsp
   13128:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1312c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13130:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13134:	48 89 d6             	mov    %rdx,%rsi
   13137:	48 89 c7             	mov    %rax,%rdi
   1313a:	e8 cb 1a 00 00       	call   14c0a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1313f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13143:	c9                   	leave
   13144:	c3                   	ret
   13145:	90                   	nop

0000000000013146 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13146:	55                   	push   %rbp
   13147:	48 89 e5             	mov    %rsp,%rbp
   1314a:	48 83 ec 20          	sub    $0x20,%rsp
   1314e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13152:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13156:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1315a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1315e:	48 89 d6             	mov    %rdx,%rsi
   13161:	48 89 c7             	mov    %rax,%rdi
   13164:	e8 a1 1a 00 00       	call   14c0a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   13169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1316d:	c9                   	leave
   1316e:	c3                   	ret

000000000001316f <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1316f:	55                   	push   %rbp
   13170:	48 89 e5             	mov    %rsp,%rbp
   13173:	53                   	push   %rbx
   13174:	48 83 ec 18          	sub    $0x18,%rsp
   13178:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1317c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13180:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13184:	48 89 c7             	mov    %rax,%rdi
   13187:	e8 9c 1a 00 00       	call   14c28 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1318c:	48 8b 18             	mov    (%rax),%rbx
   1318f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13193:	48 89 c7             	mov    %rax,%rdi
   13196:	e8 8d 1a 00 00       	call   14c28 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1319b:	48 8b 00             	mov    (%rax),%rax
   1319e:	48 39 c3             	cmp    %rax,%rbx
   131a1:	0f 95 c0             	setne  %al
   131a4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   131a8:	c9                   	leave
   131a9:	c3                   	ret

00000000000131aa <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   131aa:	55                   	push   %rbp
   131ab:	48 89 e5             	mov    %rsp,%rbp
   131ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   131b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131b6:	48 8b 00             	mov    (%rax),%rax
   131b9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   131bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131c1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   131c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   131c8:	5d                   	pop    %rbp
   131c9:	c3                   	ret

00000000000131ca <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   131ca:	55                   	push   %rbp
   131cb:	48 89 e5             	mov    %rsp,%rbp
   131ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   131d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131d6:	48 8b 00             	mov    (%rax),%rax
   131d9:	5d                   	pop    %rbp
   131da:	c3                   	ret
   131db:	90                   	nop

00000000000131dc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   131dc:	55                   	push   %rbp
   131dd:	48 89 e5             	mov    %rsp,%rbp
   131e0:	48 83 ec 20          	sub    $0x20,%rsp
   131e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   131e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131ec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   131f0:	48 89 d6             	mov    %rdx,%rsi
   131f3:	48 89 c7             	mov    %rax,%rdi
   131f6:	e8 3b 1a 00 00       	call   14c36 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   131fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131ff:	c9                   	leave
   13200:	c3                   	ret
   13201:	90                   	nop

0000000000013202 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13202:	55                   	push   %rbp
   13203:	48 89 e5             	mov    %rsp,%rbp
   13206:	48 83 ec 20          	sub    $0x20,%rsp
   1320a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1320e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13212:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13216:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1321a:	48 89 d6             	mov    %rdx,%rsi
   1321d:	48 89 c7             	mov    %rax,%rdi
   13220:	e8 11 1a 00 00       	call   14c36 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   13225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13229:	c9                   	leave
   1322a:	c3                   	ret

000000000001322b <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1322b:	55                   	push   %rbp
   1322c:	48 89 e5             	mov    %rsp,%rbp
   1322f:	53                   	push   %rbx
   13230:	48 83 ec 18          	sub    $0x18,%rsp
   13234:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13238:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1323c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13240:	48 89 c7             	mov    %rax,%rdi
   13243:	e8 0c 1a 00 00       	call   14c54 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   13248:	48 8b 18             	mov    (%rax),%rbx
   1324b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1324f:	48 89 c7             	mov    %rax,%rdi
   13252:	e8 fd 19 00 00       	call   14c54 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   13257:	48 8b 00             	mov    (%rax),%rax
   1325a:	48 39 c3             	cmp    %rax,%rbx
   1325d:	0f 95 c0             	setne  %al
   13260:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13264:	c9                   	leave
   13265:	c3                   	ret

0000000000013266 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13266:	55                   	push   %rbp
   13267:	48 89 e5             	mov    %rsp,%rbp
   1326a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1326e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13272:	48 8b 00             	mov    (%rax),%rax
   13275:	48 8d 50 04          	lea    0x4(%rax),%rdx
   13279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1327d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13284:	5d                   	pop    %rbp
   13285:	c3                   	ret

0000000000013286 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13286:	55                   	push   %rbp
   13287:	48 89 e5             	mov    %rsp,%rbp
   1328a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1328e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13292:	48 8b 00             	mov    (%rax),%rax
   13295:	5d                   	pop    %rbp
   13296:	c3                   	ret
   13297:	90                   	nop

0000000000013298 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   13298:	55                   	push   %rbp
   13299:	48 89 e5             	mov    %rsp,%rbp
   1329c:	48 83 ec 20          	sub    $0x20,%rsp
   132a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   132a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   132a8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   132ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   132b0:	48 89 c7             	mov    %rax,%rdi
   132b3:	e8 aa 19 00 00       	call   14c62 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   132b8:	48 89 c2             	mov    %rax,%rdx
   132bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132bf:	48 89 d6             	mov    %rdx,%rsi
   132c2:	48 89 c7             	mov    %rax,%rdi
   132c5:	e8 a6 19 00 00       	call   14c70 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   132ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   132ce:	c9                   	leave
   132cf:	c3                   	ret

00000000000132d0 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   132d0:	55                   	push   %rbp
   132d1:	48 89 e5             	mov    %rsp,%rbp
   132d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   132d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132dc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   132e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132e4:	48 8b 00             	mov    (%rax),%rax
   132e7:	48 29 c2             	sub    %rax,%rdx
   132ea:	48 89 d0             	mov    %rdx,%rax
   132ed:	48 c1 f8 03          	sar    $0x3,%rax
   132f1:	5d                   	pop    %rbp
   132f2:	c3                   	ret
   132f3:	90                   	nop

00000000000132f4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   132f4:	55                   	push   %rbp
   132f5:	48 89 e5             	mov    %rsp,%rbp
   132f8:	48 83 ec 10          	sub    $0x10,%rsp
   132fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13300:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   13304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13308:	48 89 c7             	mov    %rax,%rdi
   1330b:	e8 8c 04 00 00       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13310:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13314:	0f 92 c0             	setb   %al
   13317:	84 c0                	test   %al,%al
   13319:	74 24                	je     1333f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1331b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1331f:	48 89 c7             	mov    %rax,%rdi
   13322:	e8 75 04 00 00       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13327:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1332b:	48 29 c2             	sub    %rax,%rdx
   1332e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13332:	48 89 d6             	mov    %rdx,%rsi
   13335:	48 89 c7             	mov    %rax,%rdi
   13338:	e8 d5 19 00 00       	call   14d12 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   1333d:	eb 38                	jmp    13377 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1333f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13343:	48 89 c7             	mov    %rax,%rdi
   13346:	e8 51 04 00 00       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1334b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1334f:	0f 92 c0             	setb   %al
   13352:	84 c0                	test   %al,%al
   13354:	74 21                	je     13377 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1335a:	48 8b 00             	mov    (%rax),%rax
   1335d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13361:	48 c1 e2 03          	shl    $0x3,%rdx
   13365:	48 01 c2             	add    %rax,%rdx
   13368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1336c:	48 89 d6             	mov    %rdx,%rsi
   1336f:	48 89 c7             	mov    %rax,%rdi
   13372:	e8 a5 1b 00 00       	call   14f1c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   13377:	90                   	nop
   13378:	c9                   	leave
   13379:	c3                   	ret

000000000001337a <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1337a:	55                   	push   %rbp
   1337b:	48 89 e5             	mov    %rsp,%rbp
   1337e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13382:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   13386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1338a:	48 8b 00             	mov    (%rax),%rax
   1338d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13391:	48 c1 e2 03          	shl    $0x3,%rdx
   13395:	48 01 d0             	add    %rdx,%rax
      }
   13398:	5d                   	pop    %rbp
   13399:	c3                   	ret

000000000001339a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1339a:	55                   	push   %rbp
   1339b:	48 89 e5             	mov    %rsp,%rbp
   1339e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   133a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133aa:	48 8b 00             	mov    (%rax),%rax
   133ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   133b1:	48 c1 e2 03          	shl    $0x3,%rdx
   133b5:	48 01 d0             	add    %rdx,%rax
      }
   133b8:	5d                   	pop    %rbp
   133b9:	c3                   	ret

00000000000133ba <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>:
  PosVecType position;
  ColorVecType color;

  static constexpr size_t attributeCount = 2;

  static VkVertexInputBindingDescription getBindingDescription() {
   133ba:	55                   	push   %rbp
   133bb:	48 89 e5             	mov    %rsp,%rbp
    VkVertexInputBindingDescription bindingDescription{};
   133be:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   133c5:	00 
   133c6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bindingDescription.binding = 0;
   133cd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    bindingDescription.stride = sizeof(Vertex);
   133d4:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
    bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   133db:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    return bindingDescription;
   133e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133e6:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   133ea:	8b 45 f0             	mov    -0x10(%rbp),%eax
   133ed:	89 45 fc             	mov    %eax,-0x4(%rbp)
   133f0:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   133f4:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   133f7:	48 89 ca             	mov    %rcx,%rdx
  }
   133fa:	5d                   	pop    %rbp
   133fb:	c3                   	ret

00000000000133fc <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>:

  static std::array<VkVertexInputAttributeDescription, attributeCount>
  getAttributeDescriptions() {
   133fc:	55                   	push   %rbp
   133fd:	48 89 e5             	mov    %rsp,%rbp
   13400:	48 83 ec 10          	sub    $0x10,%rsp
   13404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    std::array<VkVertexInputAttributeDescription, attributeCount>
        attributeDescriptions{};
   13408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1340c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13410:	0f 11 00             	movups %xmm0,(%rax)
   13413:	0f 11 40 10          	movups %xmm0,0x10(%rax)

    attributeDescriptions[0].binding = 0;
   13417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1341b:	be 00 00 00 00       	mov    $0x0,%esi
   13420:	48 89 c7             	mov    %rax,%rdi
   13423:	e8 54 1b 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   13428:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[0].location = 0;
   1342f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13433:	be 00 00 00 00       	mov    $0x0,%esi
   13438:	48 89 c7             	mov    %rax,%rdi
   1343b:	e8 3c 1b 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   13440:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   13446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1344a:	be 00 00 00 00       	mov    $0x0,%esi
   1344f:	48 89 c7             	mov    %rax,%rdi
   13452:	e8 25 1b 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   13457:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    attributeDescriptions[0].offset = offsetof(Vertex, position);
   1345e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13462:	be 00 00 00 00       	mov    $0x0,%esi
   13467:	48 89 c7             	mov    %rax,%rdi
   1346a:	e8 0d 1b 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1346f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

    attributeDescriptions[1].binding = 0;
   13476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1347a:	be 01 00 00 00       	mov    $0x1,%esi
   1347f:	48 89 c7             	mov    %rax,%rdi
   13482:	e8 f5 1a 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   13487:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[1].location = 1;
   1348e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13492:	be 01 00 00 00       	mov    $0x1,%esi
   13497:	48 89 c7             	mov    %rax,%rdi
   1349a:	e8 dd 1a 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1349f:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   134a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134a9:	be 01 00 00 00       	mov    $0x1,%esi
   134ae:	48 89 c7             	mov    %rax,%rdi
   134b1:	e8 c6 1a 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   134b6:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
    attributeDescriptions[1].offset = offsetof(Vertex, color);
   134bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134c1:	be 01 00 00 00       	mov    $0x1,%esi
   134c6:	48 89 c7             	mov    %rax,%rdi
   134c9:	e8 ae 1a 00 00       	call   14f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   134ce:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

    return attributeDescriptions;
   134d5:	90                   	nop
  }
   134d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134da:	c9                   	leave
   134db:	c3                   	ret

00000000000134dc <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
   134dc:	55                   	push   %rbp
   134dd:	48 89 e5             	mov    %rsp,%rbp
   134e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134e4:	b8 02 00 00 00       	mov    $0x2,%eax
   134e9:	5d                   	pop    %rbp
   134ea:	c3                   	ret
   134eb:	90                   	nop

00000000000134ec <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   134ec:	55                   	push   %rbp
   134ed:	48 89 e5             	mov    %rsp,%rbp
   134f0:	48 83 ec 10          	sub    $0x10,%rsp
   134f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134fc:	48 89 c7             	mov    %rax,%rdi
   134ff:	e8 9e 1a 00 00       	call   14fa2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   13504:	90                   	nop
   13505:	c9                   	leave
   13506:	c3                   	ret
   13507:	90                   	nop

0000000000013508 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13508:	55                   	push   %rbp
   13509:	48 89 e5             	mov    %rsp,%rbp
   1350c:	48 83 ec 10          	sub    $0x10,%rsp
   13510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13518:	48 89 c7             	mov    %rax,%rdi
   1351b:	e8 8e 1a 00 00       	call   14fae <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   13520:	90                   	nop
   13521:	c9                   	leave
   13522:	c3                   	ret
   13523:	90                   	nop

0000000000013524 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   13524:	55                   	push   %rbp
   13525:	48 89 e5             	mov    %rsp,%rbp
   13528:	53                   	push   %rbx
   13529:	48 83 ec 38          	sub    $0x38,%rsp
   1352d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13531:	48 89 f0             	mov    %rsi,%rax
   13534:	48 89 d6             	mov    %rdx,%rsi
   13537:	48 89 f2             	mov    %rsi,%rdx
   1353a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1353e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13542:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   13546:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1354a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1354e:	48 89 d6             	mov    %rdx,%rsi
   13551:	48 89 c7             	mov    %rax,%rdi
   13554:	e8 7d 1a 00 00       	call   14fd6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   13559:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1355d:	48 89 c7             	mov    %rax,%rdi
   13560:	e8 01 1b 00 00       	call   15066 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   13565:	48 89 c3             	mov    %rax,%rbx
   13568:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1356c:	48 89 c7             	mov    %rax,%rdi
   1356f:	e8 e0 1a 00 00       	call   15054 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   13574:	48 89 c1             	mov    %rax,%rcx
   13577:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1357b:	48 89 da             	mov    %rbx,%rdx
   1357e:	48 89 ce             	mov    %rcx,%rsi
   13581:	48 89 c7             	mov    %rax,%rdi
   13584:	e8 51 1b 00 00       	call   150da <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   13589:	eb 1a                	jmp    135a5 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   1358b:	48 89 c3             	mov    %rax,%rbx
   1358e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13592:	48 89 c7             	mov    %rax,%rdi
   13595:	e8 62 1a 00 00       	call   14ffc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   1359a:	48 89 d8             	mov    %rbx,%rax
   1359d:	48 89 c7             	mov    %rax,%rdi
   135a0:	e8 0b 13 ff ff       	call   48b0 <_Unwind_Resume@plt>
   135a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   135a9:	c9                   	leave
   135aa:	c3                   	ret
   135ab:	90                   	nop

00000000000135ac <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   135ac:	55                   	push   %rbp
   135ad:	48 89 e5             	mov    %rsp,%rbp
   135b0:	48 83 ec 10          	sub    $0x10,%rsp
   135b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   135b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135bc:	48 89 c7             	mov    %rax,%rdi
   135bf:	e8 d0 1b 00 00       	call   15194 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   135c4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   135c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135cb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   135cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135d3:	48 8b 00             	mov    (%rax),%rax
   135d6:	48 89 ce             	mov    %rcx,%rsi
   135d9:	48 89 c7             	mov    %rax,%rdi
   135dc:	e8 c1 1b 00 00       	call   151a2 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   135e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135e5:	48 89 c7             	mov    %rax,%rdi
   135e8:	e8 0f 1a 00 00       	call   14ffc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   135ed:	90                   	nop
   135ee:	c9                   	leave
   135ef:	c3                   	ret

00000000000135f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   135f0:	55                   	push   %rbp
   135f1:	48 89 e5             	mov    %rsp,%rbp
   135f4:	48 83 ec 10          	sub    $0x10,%rsp
   135f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13600:	48 89 c7             	mov    %rax,%rdi
   13603:	e8 0e 1c 00 00       	call   15216 <_ZNSaIP12VkPipeline_TED1Ev>
   13608:	90                   	nop
   13609:	c9                   	leave
   1360a:	c3                   	ret

000000000001360b <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   1360b:	55                   	push   %rbp
   1360c:	48 89 e5             	mov    %rsp,%rbp
   1360f:	41 54                	push   %r12
   13611:	53                   	push   %rbx
   13612:	48 83 ec 40          	sub    $0x40,%rsp
   13616:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1361a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1361e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13622:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   13626:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   1362a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1362e:	48 89 c7             	mov    %rax,%rdi
   13631:	e8 96 1b 00 00       	call   151cc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   13636:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   13639:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   1363c:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   13640:	48 89 c7             	mov    %rax,%rdi
   13643:	e8 b2 1b 00 00       	call   151fa <_ZNSaIP12VkPipeline_TEC1Ev>
   13648:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   1364c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13650:	48 89 de             	mov    %rbx,%rsi
   13653:	48 89 c7             	mov    %rax,%rdi
   13656:	e8 d7 1b 00 00       	call   15232 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   1365b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   1365f:	48 89 c7             	mov    %rax,%rdi
   13662:	e8 af 1b 00 00       	call   15216 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   13667:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1366b:	48 89 c7             	mov    %rax,%rdi
   1366e:	e8 59 1c 00 00       	call   152cc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   13673:	48 89 c3             	mov    %rax,%rbx
   13676:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1367a:	48 89 c7             	mov    %rax,%rdi
   1367d:	e8 26 1c 00 00       	call   152a8 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   13682:	48 89 c1             	mov    %rax,%rcx
   13685:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   13689:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1368c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   13690:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13694:	49 89 d9             	mov    %rbx,%r9
   13697:	49 89 f8             	mov    %rdi,%r8
   1369a:	48 89 c7             	mov    %rax,%rdi
   1369d:	e8 fe 0a ff ff       	call   41a0 <vkCreateGraphicsPipelines@plt>
   136a2:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   136a5:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   136a9:	74 7f                	je     1372a <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   136ab:	bf 10 00 00 00       	mov    $0x10,%edi
   136b0:	e8 fb 0a ff ff       	call   41b0 <__cxa_allocate_exception@plt>
   136b5:	48 89 c3             	mov    %rax,%rbx
   136b8:	48 8d 05 ab ca 00 00 	lea    0xcaab(%rip),%rax        # 2016a <_ZZN9VulkanApp6renderEvE11submitCount+0x2a2>
   136bf:	48 89 c6             	mov    %rax,%rsi
   136c2:	48 89 df             	mov    %rbx,%rdi
   136c5:	e8 66 0a ff ff       	call   4130 <_ZNSt13runtime_errorC1EPKc@plt>
   136ca:	48 8b 05 d7 c8 01 00 	mov    0x1c8d7(%rip),%rax        # 2ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   136d1:	48 89 c2             	mov    %rax,%rdx
   136d4:	48 8d 05 65 c6 01 00 	lea    0x1c665(%rip),%rax        # 2fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   136db:	48 89 c6             	mov    %rax,%rsi
   136de:	48 89 df             	mov    %rbx,%rdi
   136e1:	e8 6a 11 ff ff       	call   4850 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   136e6:	48 89 c3             	mov    %rax,%rbx
   136e9:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   136ed:	48 89 c7             	mov    %rax,%rdi
   136f0:	e8 21 1b 00 00       	call   15216 <_ZNSaIP12VkPipeline_TED1Ev>
   136f5:	48 89 d8             	mov    %rbx,%rax
   136f8:	48 89 c7             	mov    %rax,%rdi
   136fb:	e8 b0 11 ff ff       	call   48b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   13700:	49 89 c4             	mov    %rax,%r12
   13703:	48 89 df             	mov    %rbx,%rdi
   13706:	e8 b5 0b ff ff       	call   42c0 <__cxa_free_exception@plt>
   1370b:	4c 89 e3             	mov    %r12,%rbx
   1370e:	eb 03                	jmp    13713 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   13710:	48 89 c3             	mov    %rax,%rbx
   13713:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13717:	48 89 c7             	mov    %rax,%rdi
   1371a:	e8 19 00 00 00       	call   13738 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   1371f:	48 89 d8             	mov    %rbx,%rax
   13722:	48 89 c7             	mov    %rax,%rdi
   13725:	e8 86 11 ff ff       	call   48b0 <_Unwind_Resume@plt>
  return pipelines;
   1372a:	90                   	nop
}
   1372b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1372f:	48 83 c4 40          	add    $0x40,%rsp
   13733:	5b                   	pop    %rbx
   13734:	41 5c                	pop    %r12
   13736:	5d                   	pop    %rbp
   13737:	c3                   	ret

0000000000013738 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13738:	55                   	push   %rbp
   13739:	48 89 e5             	mov    %rsp,%rbp
   1373c:	48 83 ec 10          	sub    $0x10,%rsp
   13740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13748:	48 89 c7             	mov    %rax,%rdi
   1374b:	e8 ee 1b 00 00       	call   1533e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13750:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13757:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1375b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1375f:	48 8b 00             	mov    (%rax),%rax
   13762:	48 89 ce             	mov    %rcx,%rsi
   13765:	48 89 c7             	mov    %rax,%rdi
   13768:	e8 df 1b 00 00       	call   1534c <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   1376d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13771:	48 89 c7             	mov    %rax,%rdi
   13774:	e8 77 1b 00 00       	call   152f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   13779:	90                   	nop
   1377a:	c9                   	leave
   1377b:	c3                   	ret

000000000001377c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1377c:	55                   	push   %rbp
   1377d:	48 89 e5             	mov    %rsp,%rbp
   13780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   13788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1378c:	48 8b 00             	mov    (%rax),%rax
   1378f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13793:	48 c1 e2 03          	shl    $0x3,%rdx
   13797:	48 01 d0             	add    %rdx,%rax
      }
   1379a:	5d                   	pop    %rbp
   1379b:	c3                   	ret

000000000001379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1379c:	55                   	push   %rbp
   1379d:	48 89 e5             	mov    %rsp,%rbp
   137a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   137a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   137ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137b0:	48 8b 00             	mov    (%rax),%rax
   137b3:	48 29 c2             	sub    %rax,%rdx
   137b6:	48 89 d0             	mov    %rdx,%rax
   137b9:	48 c1 f8 03          	sar    $0x3,%rax
   137bd:	5d                   	pop    %rbp
   137be:	c3                   	ret
   137bf:	90                   	nop

00000000000137c0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   137c0:	55                   	push   %rbp
   137c1:	48 89 e5             	mov    %rsp,%rbp
   137c4:	48 83 ec 10          	sub    $0x10,%rsp
   137c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   137d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137d4:	48 89 c7             	mov    %rax,%rdi
   137d7:	e8 9a 1b 00 00       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   137dc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   137e0:	0f 92 c0             	setb   %al
   137e3:	84 c0                	test   %al,%al
   137e5:	74 24                	je     1380b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   137e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137eb:	48 89 c7             	mov    %rax,%rdi
   137ee:	e8 83 1b 00 00       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   137f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   137f7:	48 29 c2             	sub    %rax,%rdx
   137fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137fe:	48 89 d6             	mov    %rdx,%rsi
   13801:	48 89 c7             	mov    %rax,%rdi
   13804:	e8 91 1b 00 00       	call   1539a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   13809:	eb 38                	jmp    13843 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1380b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1380f:	48 89 c7             	mov    %rax,%rdi
   13812:	e8 5f 1b 00 00       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   13817:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1381b:	0f 92 c0             	setb   %al
   1381e:	84 c0                	test   %al,%al
   13820:	74 21                	je     13843 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13826:	48 8b 00             	mov    (%rax),%rax
   13829:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1382d:	48 c1 e2 03          	shl    $0x3,%rdx
   13831:	48 01 c2             	add    %rax,%rdx
   13834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13838:	48 89 d6             	mov    %rdx,%rsi
   1383b:	48 89 c7             	mov    %rax,%rdi
   1383e:	e8 61 1d 00 00       	call   155a4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   13843:	90                   	nop
   13844:	c9                   	leave
   13845:	c3                   	ret

0000000000013846 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13846:	55                   	push   %rbp
   13847:	48 89 e5             	mov    %rsp,%rbp
   1384a:	48 83 ec 10          	sub    $0x10,%rsp
   1384e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13856:	48 89 c7             	mov    %rax,%rdi
   13859:	e8 a6 1d 00 00       	call   15604 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   1385e:	90                   	nop
   1385f:	c9                   	leave
   13860:	c3                   	ret
   13861:	90                   	nop

0000000000013862 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13862:	55                   	push   %rbp
   13863:	48 89 e5             	mov    %rsp,%rbp
   13866:	48 83 ec 10          	sub    $0x10,%rsp
   1386a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1386e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13872:	48 89 c7             	mov    %rax,%rdi
   13875:	e8 96 1d 00 00       	call   15610 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   1387a:	90                   	nop
   1387b:	c9                   	leave
   1387c:	c3                   	ret
   1387d:	90                   	nop

000000000001387e <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   1387e:	55                   	push   %rbp
   1387f:	48 89 e5             	mov    %rsp,%rbp
   13882:	53                   	push   %rbx
   13883:	48 83 ec 38          	sub    $0x38,%rsp
   13887:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1388b:	48 89 f0             	mov    %rsi,%rax
   1388e:	48 89 d6             	mov    %rdx,%rsi
   13891:	48 89 f2             	mov    %rsi,%rdx
   13894:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13898:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1389c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   138a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   138a4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   138a8:	48 89 d6             	mov    %rdx,%rsi
   138ab:	48 89 c7             	mov    %rax,%rdi
   138ae:	e8 69 1d 00 00       	call   1561c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   138b3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   138b7:	48 89 c7             	mov    %rax,%rdi
   138ba:	e8 95 1d 00 00       	call   15654 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   138bf:	48 89 c3             	mov    %rax,%rbx
   138c2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   138c6:	48 89 c7             	mov    %rax,%rdi
   138c9:	e8 74 1d 00 00       	call   15642 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   138ce:	48 89 c1             	mov    %rax,%rcx
   138d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   138d5:	48 89 da             	mov    %rbx,%rdx
   138d8:	48 89 ce             	mov    %rcx,%rsi
   138db:	48 89 c7             	mov    %rax,%rdi
   138de:	e8 d7 1d 00 00       	call   156ba <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   138e3:	eb 1a                	jmp    138ff <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   138e5:	48 89 c3             	mov    %rax,%rbx
   138e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   138ec:	48 89 c7             	mov    %rax,%rdi
   138ef:	e8 a4 06 00 00       	call   13f98 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   138f4:	48 89 d8             	mov    %rbx,%rax
   138f7:	48 89 c7             	mov    %rax,%rdi
   138fa:	e8 b1 0f ff ff       	call   48b0 <_Unwind_Resume@plt>
   138ff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13903:	c9                   	leave
   13904:	c3                   	ret
   13905:	90                   	nop

0000000000013906 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13906:	55                   	push   %rbp
   13907:	48 89 e5             	mov    %rsp,%rbp
   1390a:	48 83 ec 10          	sub    $0x10,%rsp
   1390e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13916:	48 89 c7             	mov    %rax,%rdi
   13919:	e8 4c 1e 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1391e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13925:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13929:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1392d:	48 8b 00             	mov    (%rax),%rax
   13930:	48 89 ce             	mov    %rcx,%rsi
   13933:	48 89 c7             	mov    %rax,%rdi
   13936:	e8 3d 1e 00 00       	call   15778 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   1393b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1393f:	48 89 c7             	mov    %rax,%rdi
   13942:	e8 51 06 00 00       	call   13f98 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   13947:	90                   	nop
   13948:	c9                   	leave
   13949:	c3                   	ret

000000000001394a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1394a:	55                   	push   %rbp
   1394b:	48 89 e5             	mov    %rsp,%rbp
   1394e:	48 83 ec 10          	sub    $0x10,%rsp
   13952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1395a:	48 8b 10             	mov    (%rax),%rdx
   1395d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13961:	48 89 d6             	mov    %rdx,%rsi
   13964:	48 89 c7             	mov    %rax,%rdi
   13967:	e8 36 1e 00 00       	call   157a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1396c:	c9                   	leave
   1396d:	c3                   	ret

000000000001396e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1396e:	55                   	push   %rbp
   1396f:	48 89 e5             	mov    %rsp,%rbp
   13972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13976:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1397a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1397e:	48 8b 00             	mov    (%rax),%rax
   13981:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13985:	48 c1 e2 03          	shl    $0x3,%rdx
   13989:	48 01 d0             	add    %rdx,%rax
      }
   1398c:	5d                   	pop    %rbp
   1398d:	c3                   	ret

000000000001398e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1398e:	55                   	push   %rbp
   1398f:	48 89 e5             	mov    %rsp,%rbp
   13992:	48 83 ec 20          	sub    $0x20,%rsp
   13996:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1399a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1399e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   139a2:	48 89 d6             	mov    %rdx,%rsi
   139a5:	48 89 c7             	mov    %rax,%rdi
   139a8:	e8 07 1e 00 00       	call   157b4 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   139ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139b1:	c9                   	leave
   139b2:	c3                   	ret
   139b3:	90                   	nop

00000000000139b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   139b4:	55                   	push   %rbp
   139b5:	48 89 e5             	mov    %rsp,%rbp
   139b8:	48 83 ec 20          	sub    $0x20,%rsp
   139bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   139c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139c4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   139c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   139cc:	48 89 d6             	mov    %rdx,%rsi
   139cf:	48 89 c7             	mov    %rax,%rdi
   139d2:	e8 dd 1d 00 00       	call   157b4 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   139d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139db:	c9                   	leave
   139dc:	c3                   	ret

00000000000139dd <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   139dd:	55                   	push   %rbp
   139de:	48 89 e5             	mov    %rsp,%rbp
   139e1:	53                   	push   %rbx
   139e2:	48 83 ec 18          	sub    $0x18,%rsp
   139e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   139ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   139ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139f2:	48 89 c7             	mov    %rax,%rdi
   139f5:	e8 d8 1d 00 00       	call   157d2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   139fa:	48 8b 18             	mov    (%rax),%rbx
   139fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13a01:	48 89 c7             	mov    %rax,%rdi
   13a04:	e8 c9 1d 00 00       	call   157d2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13a09:	48 8b 00             	mov    (%rax),%rax
   13a0c:	48 39 c3             	cmp    %rax,%rbx
   13a0f:	0f 95 c0             	setne  %al
   13a12:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a16:	c9                   	leave
   13a17:	c3                   	ret

0000000000013a18 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13a18:	55                   	push   %rbp
   13a19:	48 89 e5             	mov    %rsp,%rbp
   13a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a24:	48 8b 00             	mov    (%rax),%rax
   13a27:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a2f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13a36:	5d                   	pop    %rbp
   13a37:	c3                   	ret

0000000000013a38 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13a38:	55                   	push   %rbp
   13a39:	48 89 e5             	mov    %rsp,%rbp
   13a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a44:	48 8b 00             	mov    (%rax),%rax
   13a47:	5d                   	pop    %rbp
   13a48:	c3                   	ret
   13a49:	90                   	nop

0000000000013a4a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   13a4a:	55                   	push   %rbp
   13a4b:	48 89 e5             	mov    %rsp,%rbp
   13a4e:	48 83 ec 20          	sub    $0x20,%rsp
   13a52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   13a56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a5a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a5e:	48 89 d6             	mov    %rdx,%rsi
   13a61:	48 89 c7             	mov    %rax,%rdi
   13a64:	e8 77 1d 00 00       	call   157e0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a6d:	c9                   	leave
   13a6e:	c3                   	ret
   13a6f:	90                   	nop

0000000000013a70 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13a70:	55                   	push   %rbp
   13a71:	48 89 e5             	mov    %rsp,%rbp
   13a74:	48 83 ec 20          	sub    $0x20,%rsp
   13a78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   13a7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a80:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13a84:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a88:	48 89 d6             	mov    %rdx,%rsi
   13a8b:	48 89 c7             	mov    %rax,%rdi
   13a8e:	e8 4d 1d 00 00       	call   157e0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a97:	c9                   	leave
   13a98:	c3                   	ret

0000000000013a99 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   13a99:	55                   	push   %rbp
   13a9a:	48 89 e5             	mov    %rsp,%rbp
   13a9d:	53                   	push   %rbx
   13a9e:	48 83 ec 18          	sub    $0x18,%rsp
   13aa2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13aa6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   13aaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13aae:	48 89 c7             	mov    %rax,%rdi
   13ab1:	e8 48 1d 00 00       	call   157fe <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13ab6:	48 8b 18             	mov    (%rax),%rbx
   13ab9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13abd:	48 89 c7             	mov    %rax,%rdi
   13ac0:	e8 39 1d 00 00       	call   157fe <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13ac5:	48 8b 00             	mov    (%rax),%rax
   13ac8:	48 39 c3             	cmp    %rax,%rbx
   13acb:	0f 95 c0             	setne  %al
   13ace:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13ad2:	c9                   	leave
   13ad3:	c3                   	ret

0000000000013ad4 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13ad4:	55                   	push   %rbp
   13ad5:	48 89 e5             	mov    %rsp,%rbp
   13ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ae0:	48 8b 00             	mov    (%rax),%rax
   13ae3:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aeb:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   13aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13af2:	5d                   	pop    %rbp
   13af3:	c3                   	ret

0000000000013af4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13af4:	55                   	push   %rbp
   13af5:	48 89 e5             	mov    %rsp,%rbp
   13af8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b00:	48 8b 00             	mov    (%rax),%rax
   13b03:	5d                   	pop    %rbp
   13b04:	c3                   	ret
   13b05:	90                   	nop

0000000000013b06 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13b06:	55                   	push   %rbp
   13b07:	48 89 e5             	mov    %rsp,%rbp
   13b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b12:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b1a:	48 8b 00             	mov    (%rax),%rax
   13b1d:	48 29 c2             	sub    %rax,%rdx
   13b20:	48 c1 fa 02          	sar    $0x2,%rdx
   13b24:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   13b2b:	cc cc cc 
   13b2e:	48 0f af c2          	imul   %rdx,%rax
   13b32:	5d                   	pop    %rbp
   13b33:	c3                   	ret

0000000000013b34 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   13b34:	55                   	push   %rbp
   13b35:	48 89 e5             	mov    %rsp,%rbp
   13b38:	48 83 ec 10          	sub    $0x10,%rsp
   13b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b44:	48 8b 10             	mov    (%rax),%rdx
   13b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b4b:	48 89 d6             	mov    %rdx,%rsi
   13b4e:	48 89 c7             	mov    %rax,%rdi
   13b51:	e8 b6 1c 00 00       	call   1580c <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>
   13b56:	c9                   	leave
   13b57:	c3                   	ret

0000000000013b58 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   13b58:	55                   	push   %rbp
   13b59:	48 89 e5             	mov    %rsp,%rbp
   13b5c:	48 83 ec 20          	sub    $0x20,%rsp
   13b60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13b64:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   13b68:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   13b6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b70:	48 89 c7             	mov    %rax,%rdi
   13b73:	e8 a6 1c 00 00       	call   1581e <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   13b78:	48 89 c2             	mov    %rax,%rdx
   13b7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b7f:	48 89 d6             	mov    %rdx,%rsi
   13b82:	48 89 c7             	mov    %rax,%rdi
   13b85:	e8 a2 1c 00 00       	call   1582c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   13b8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13b8e:	c9                   	leave
   13b8f:	c3                   	ret

0000000000013b90 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   13b90:	55                   	push   %rbp
   13b91:	48 89 e5             	mov    %rsp,%rbp
   13b94:	48 83 ec 10          	sub    $0x10,%rsp
   13b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   13ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ba4:	48 89 c7             	mov    %rax,%rdi
   13ba7:	e8 58 03 00 00       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   13bac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13bb0:	0f 92 c0             	setb   %al
   13bb3:	84 c0                	test   %al,%al
   13bb5:	74 24                	je     13bdb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   13bb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bbb:	48 89 c7             	mov    %rax,%rdi
   13bbe:	e8 41 03 00 00       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   13bc3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13bc7:	48 29 c2             	sub    %rax,%rdx
   13bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bce:	48 89 d6             	mov    %rdx,%rsi
   13bd1:	48 89 c7             	mov    %rax,%rdi
   13bd4:	e8 f5 1c 00 00       	call   158ce <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
   13bd9:	eb 38                	jmp    13c13 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   13bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bdf:	48 89 c7             	mov    %rax,%rdi
   13be2:	e8 1d 03 00 00       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   13be7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   13beb:	0f 92 c0             	setb   %al
   13bee:	84 c0                	test   %al,%al
   13bf0:	74 21                	je     13c13 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bf6:	48 8b 00             	mov    (%rax),%rax
   13bf9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13bfd:	48 c1 e2 03          	shl    $0x3,%rdx
   13c01:	48 01 c2             	add    %rax,%rdx
   13c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c08:	48 89 d6             	mov    %rdx,%rsi
   13c0b:	48 89 c7             	mov    %rax,%rdi
   13c0e:	e8 c5 1e 00 00       	call   15ad8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   13c13:	90                   	nop
   13c14:	c9                   	leave
   13c15:	c3                   	ret

0000000000013c16 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   13c16:	55                   	push   %rbp
   13c17:	48 89 e5             	mov    %rsp,%rbp
   13c1a:	48 83 ec 10          	sub    $0x10,%rsp
   13c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   13c26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c2a:	48 89 c7             	mov    %rax,%rdi
   13c2d:	e8 06 1f 00 00       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   13c32:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13c36:	0f 92 c0             	setb   %al
   13c39:	84 c0                	test   %al,%al
   13c3b:	74 24                	je     13c61 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   13c3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c41:	48 89 c7             	mov    %rax,%rdi
   13c44:	e8 ef 1e 00 00       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   13c49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13c4d:	48 29 c2             	sub    %rax,%rdx
   13c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c54:	48 89 d6             	mov    %rdx,%rsi
   13c57:	48 89 c7             	mov    %rax,%rdi
   13c5a:	e8 fd 1e 00 00       	call   15b5c <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
   13c5f:	eb 38                	jmp    13c99 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   13c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c65:	48 89 c7             	mov    %rax,%rdi
   13c68:	e8 cb 1e 00 00       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   13c6d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   13c71:	0f 92 c0             	setb   %al
   13c74:	84 c0                	test   %al,%al
   13c76:	74 21                	je     13c99 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   13c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c7c:	48 8b 00             	mov    (%rax),%rax
   13c7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13c83:	48 c1 e2 03          	shl    $0x3,%rdx
   13c87:	48 01 c2             	add    %rax,%rdx
   13c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c8e:	48 89 d6             	mov    %rdx,%rsi
   13c91:	48 89 c7             	mov    %rax,%rdi
   13c94:	e8 cd 20 00 00       	call   15d66 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   13c99:	90                   	nop
   13c9a:	c9                   	leave
   13c9b:	c3                   	ret

0000000000013c9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   13c9c:	55                   	push   %rbp
   13c9d:	48 89 e5             	mov    %rsp,%rbp
   13ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   13ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cac:	48 8b 00             	mov    (%rax),%rax
   13caf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13cb3:	48 c1 e2 03          	shl    $0x3,%rdx
   13cb7:	48 01 d0             	add    %rdx,%rax
      }
   13cba:	5d                   	pop    %rbp
   13cbb:	c3                   	ret

0000000000013cbc <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   13cbc:	55                   	push   %rbp
   13cbd:	48 89 e5             	mov    %rsp,%rbp
   13cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13cc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   13cc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ccc:	48 8b 00             	mov    (%rax),%rax
   13ccf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13cd3:	48 c1 e2 03          	shl    $0x3,%rdx
   13cd7:	48 01 d0             	add    %rdx,%rax
      }
   13cda:	5d                   	pop    %rbp
   13cdb:	c3                   	ret

0000000000013cdc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   13cdc:	55                   	push   %rbp
   13cdd:	48 89 e5             	mov    %rsp,%rbp
   13ce0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ce4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   13ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cec:	48 8b 00             	mov    (%rax),%rax
   13cef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13cf3:	48 c1 e2 03          	shl    $0x3,%rdx
   13cf7:	48 01 d0             	add    %rdx,%rax
      }
   13cfa:	5d                   	pop    %rbp
   13cfb:	c3                   	ret

0000000000013cfc <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13cfc:	55                   	push   %rbp
   13cfd:	48 89 e5             	mov    %rsp,%rbp
   13d00:	48 83 ec 10          	sub    $0x10,%rsp
   13d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d0c:	48 89 c7             	mov    %rax,%rdi
   13d0f:	e8 b2 20 00 00       	call   15dc6 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   13d14:	90                   	nop
   13d15:	c9                   	leave
   13d16:	c3                   	ret
   13d17:	90                   	nop

0000000000013d18 <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13d18:	55                   	push   %rbp
   13d19:	48 89 e5             	mov    %rsp,%rbp
   13d1c:	48 83 ec 10          	sub    $0x10,%rsp
   13d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d28:	48 89 c7             	mov    %rax,%rdi
   13d2b:	e8 a2 20 00 00       	call   15dd2 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   13d30:	90                   	nop
   13d31:	c9                   	leave
   13d32:	c3                   	ret
   13d33:	90                   	nop

0000000000013d34 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   13d34:	55                   	push   %rbp
   13d35:	48 89 e5             	mov    %rsp,%rbp
   13d38:	53                   	push   %rbx
   13d39:	48 83 ec 38          	sub    $0x38,%rsp
   13d3d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13d41:	48 89 f0             	mov    %rsi,%rax
   13d44:	48 89 d6             	mov    %rdx,%rsi
   13d47:	48 89 f2             	mov    %rsi,%rdx
   13d4a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13d4e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13d52:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   13d56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d5a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13d5e:	48 89 d6             	mov    %rdx,%rsi
   13d61:	48 89 c7             	mov    %rax,%rdi
   13d64:	e8 75 20 00 00       	call   15dde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   13d69:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13d6d:	48 89 c7             	mov    %rax,%rdi
   13d70:	e8 a1 20 00 00       	call   15e16 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   13d75:	48 89 c3             	mov    %rax,%rbx
   13d78:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13d7c:	48 89 c7             	mov    %rax,%rdi
   13d7f:	e8 80 20 00 00       	call   15e04 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   13d84:	48 89 c1             	mov    %rax,%rcx
   13d87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d8b:	48 89 da             	mov    %rbx,%rdx
   13d8e:	48 89 ce             	mov    %rcx,%rsi
   13d91:	48 89 c7             	mov    %rax,%rdi
   13d94:	e8 e3 20 00 00       	call   15e7c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   13d99:	eb 1a                	jmp    13db5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   13d9b:	48 89 c3             	mov    %rax,%rbx
   13d9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13da2:	48 89 c7             	mov    %rax,%rdi
   13da5:	e8 8a 03 00 00       	call   14134 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   13daa:	48 89 d8             	mov    %rbx,%rax
   13dad:	48 89 c7             	mov    %rax,%rdi
   13db0:	e8 fb 0a ff ff       	call   48b0 <_Unwind_Resume@plt>
   13db5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13db9:	c9                   	leave
   13dba:	c3                   	ret
   13dbb:	90                   	nop

0000000000013dbc <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13dbc:	55                   	push   %rbp
   13dbd:	48 89 e5             	mov    %rsp,%rbp
   13dc0:	48 83 ec 10          	sub    $0x10,%rsp
   13dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dcc:	48 89 c7             	mov    %rax,%rdi
   13dcf:	e8 58 21 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13dd4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ddb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13de3:	48 8b 00             	mov    (%rax),%rax
   13de6:	48 89 ce             	mov    %rcx,%rsi
   13de9:	48 89 c7             	mov    %rax,%rdi
   13dec:	e8 49 21 00 00       	call   15f3a <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   13df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13df5:	48 89 c7             	mov    %rax,%rdi
   13df8:	e8 37 03 00 00       	call   14134 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   13dfd:	90                   	nop
   13dfe:	c9                   	leave
   13dff:	c3                   	ret

0000000000013e00 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13e00:	55                   	push   %rbp
   13e01:	48 89 e5             	mov    %rsp,%rbp
   13e04:	48 83 ec 10          	sub    $0x10,%rsp
   13e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e10:	48 89 c7             	mov    %rax,%rdi
   13e13:	e8 4c 21 00 00       	call   15f64 <_ZNSt15__new_allocatorIjEC1Ev>
   13e18:	90                   	nop
   13e19:	c9                   	leave
   13e1a:	c3                   	ret
   13e1b:	90                   	nop

0000000000013e1c <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13e1c:	55                   	push   %rbp
   13e1d:	48 89 e5             	mov    %rsp,%rbp
   13e20:	48 83 ec 10          	sub    $0x10,%rsp
   13e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e2c:	48 89 c7             	mov    %rax,%rdi
   13e2f:	e8 3c 21 00 00       	call   15f70 <_ZNSt15__new_allocatorIjED1Ev>
   13e34:	90                   	nop
   13e35:	c9                   	leave
   13e36:	c3                   	ret
   13e37:	90                   	nop

0000000000013e38 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   13e38:	55                   	push   %rbp
   13e39:	48 89 e5             	mov    %rsp,%rbp
   13e3c:	53                   	push   %rbx
   13e3d:	48 83 ec 38          	sub    $0x38,%rsp
   13e41:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13e45:	48 89 f0             	mov    %rsi,%rax
   13e48:	48 89 d6             	mov    %rdx,%rsi
   13e4b:	48 89 f2             	mov    %rsi,%rdx
   13e4e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13e52:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13e56:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   13e5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e5e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13e62:	48 89 d6             	mov    %rdx,%rsi
   13e65:	48 89 c7             	mov    %rax,%rdi
   13e68:	e8 2b 21 00 00       	call   15f98 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   13e6d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13e71:	48 89 c7             	mov    %rax,%rdi
   13e74:	e8 a5 21 00 00       	call   1601e <_ZNKSt16initializer_listIjE3endEv>
   13e79:	48 89 c3             	mov    %rax,%rbx
   13e7c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13e80:	48 89 c7             	mov    %rax,%rdi
   13e83:	e8 84 21 00 00       	call   1600c <_ZNKSt16initializer_listIjE5beginEv>
   13e88:	48 89 c1             	mov    %rax,%rcx
   13e8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e8f:	48 89 da             	mov    %rbx,%rdx
   13e92:	48 89 ce             	mov    %rcx,%rsi
   13e95:	48 89 c7             	mov    %rax,%rdi
   13e98:	e8 e7 21 00 00       	call   16084 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   13e9d:	eb 1a                	jmp    13eb9 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   13e9f:	48 89 c3             	mov    %rax,%rbx
   13ea2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ea6:	48 89 c7             	mov    %rax,%rdi
   13ea9:	e8 10 21 00 00       	call   15fbe <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   13eae:	48 89 d8             	mov    %rbx,%rax
   13eb1:	48 89 c7             	mov    %rax,%rdi
   13eb4:	e8 f7 09 ff ff       	call   48b0 <_Unwind_Resume@plt>
   13eb9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13ebd:	c9                   	leave
   13ebe:	c3                   	ret
   13ebf:	90                   	nop

0000000000013ec0 <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13ec0:	55                   	push   %rbp
   13ec1:	48 89 e5             	mov    %rsp,%rbp
   13ec4:	48 83 ec 10          	sub    $0x10,%rsp
   13ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ed0:	48 89 c7             	mov    %rax,%rdi
   13ed3:	e8 5c 22 00 00       	call   16134 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   13ed8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13edf:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ee7:	48 8b 00             	mov    (%rax),%rax
   13eea:	48 89 ce             	mov    %rcx,%rsi
   13eed:	48 89 c7             	mov    %rax,%rdi
   13ef0:	e8 4d 22 00 00       	call   16142 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   13ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ef9:	48 89 c7             	mov    %rax,%rdi
   13efc:	e8 bd 20 00 00       	call   15fbe <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   13f01:	90                   	nop
   13f02:	c9                   	leave
   13f03:	c3                   	ret

0000000000013f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13f04:	55                   	push   %rbp
   13f05:	48 89 e5             	mov    %rsp,%rbp
   13f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f10:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f18:	48 8b 00             	mov    (%rax),%rax
   13f1b:	48 29 c2             	sub    %rax,%rdx
   13f1e:	48 89 d0             	mov    %rdx,%rax
   13f21:	48 c1 f8 03          	sar    $0x3,%rax
   13f25:	5d                   	pop    %rbp
   13f26:	c3                   	ret
   13f27:	90                   	nop

0000000000013f28 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   13f28:	55                   	push   %rbp
   13f29:	48 89 e5             	mov    %rsp,%rbp
   13f2c:	48 83 ec 10          	sub    $0x10,%rsp
   13f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f38:	48 8b 10             	mov    (%rax),%rdx
   13f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f3f:	48 89 d6             	mov    %rdx,%rsi
   13f42:	48 89 c7             	mov    %rax,%rdi
   13f45:	e8 22 22 00 00       	call   1616c <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   13f4a:	c9                   	leave
   13f4b:	c3                   	ret

0000000000013f4c <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   13f4c:	55                   	push   %rbp
   13f4d:	48 89 e5             	mov    %rsp,%rbp
   13f50:	48 83 ec 10          	sub    $0x10,%rsp
   13f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   13f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f5c:	48 8b 10             	mov    (%rax),%rdx
   13f5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f63:	48 89 d6             	mov    %rdx,%rsi
   13f66:	48 89 c7             	mov    %rax,%rdi
   13f69:	e8 10 22 00 00       	call   1617e <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   13f6e:	c9                   	leave
   13f6f:	c3                   	ret

0000000000013f70 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13f70:	55                   	push   %rbp
   13f71:	48 89 e5             	mov    %rsp,%rbp
   13f74:	48 83 ec 10          	sub    $0x10,%rsp
   13f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f80:	48 89 c7             	mov    %rax,%rdi
   13f83:	e8 be f8 ff ff       	call   13846 <_ZNSaIP13VkImageView_TEC1Ev>
   13f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f8c:	48 89 c7             	mov    %rax,%rdi
   13f8f:	e8 fc 21 00 00       	call   16190 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   13f94:	90                   	nop
   13f95:	c9                   	leave
   13f96:	c3                   	ret
   13f97:	90                   	nop

0000000000013f98 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13f98:	55                   	push   %rbp
   13f99:	48 89 e5             	mov    %rsp,%rbp
   13f9c:	48 83 ec 10          	sub    $0x10,%rsp
   13fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fa8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13fac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fb0:	48 8b 00             	mov    (%rax),%rax
   13fb3:	48 29 c2             	sub    %rax,%rdx
   13fb6:	48 89 d0             	mov    %rdx,%rax
   13fb9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   13fbd:	48 89 c2             	mov    %rax,%rdx
   13fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fc4:	48 8b 08             	mov    (%rax),%rcx
   13fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fcb:	48 89 ce             	mov    %rcx,%rsi
   13fce:	48 89 c7             	mov    %rax,%rdi
   13fd1:	e8 e8 21 00 00       	call   161be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fda:	48 89 c7             	mov    %rax,%rdi
   13fdd:	e8 2c e7 ff ff       	call   1270e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   13fe2:	90                   	nop
   13fe3:	c9                   	leave
   13fe4:	c3                   	ret
   13fe5:	90                   	nop

0000000000013fe6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   13fe6:	55                   	push   %rbp
   13fe7:	48 89 e5             	mov    %rsp,%rbp
   13fea:	48 83 ec 10          	sub    $0x10,%rsp
   13fee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   13ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ff6:	48 89 c7             	mov    %rax,%rdi
   13ff9:	e8 56 58 ff ff       	call   9854 <_ZNSaIP9VkImage_TEC1Ev>
   13ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14002:	48 89 c7             	mov    %rax,%rdi
   14005:	e8 e6 7d ff ff       	call   bdf0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1400a:	90                   	nop
   1400b:	c9                   	leave
   1400c:	c3                   	ret
   1400d:	90                   	nop

000000000001400e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1400e:	55                   	push   %rbp
   1400f:	48 89 e5             	mov    %rsp,%rbp
   14012:	48 83 ec 10          	sub    $0x10,%rsp
   14016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1401a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1401e:	48 89 c7             	mov    %rax,%rdi
   14021:	e8 ce 21 00 00       	call   161f4 <_ZNSaIP15VkFramebuffer_TEC1Ev>
   14026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1402a:	48 89 c7             	mov    %rax,%rdi
   1402d:	e8 de 21 00 00       	call   16210 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   14032:	90                   	nop
   14033:	c9                   	leave
   14034:	c3                   	ret
   14035:	90                   	nop

0000000000014036 <_ZNSaIP15VkFramebuffer_TED1Ev>:
   14036:	55                   	push   %rbp
   14037:	48 89 e5             	mov    %rsp,%rbp
   1403a:	48 83 ec 10          	sub    $0x10,%rsp
   1403e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14046:	48 89 c7             	mov    %rax,%rdi
   14049:	e8 f0 21 00 00       	call   1623e <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   1404e:	90                   	nop
   1404f:	c9                   	leave
   14050:	c3                   	ret
   14051:	90                   	nop

0000000000014052 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14052:	55                   	push   %rbp
   14053:	48 89 e5             	mov    %rsp,%rbp
   14056:	48 83 ec 10          	sub    $0x10,%rsp
   1405a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1405e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14062:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1406a:	48 8b 00             	mov    (%rax),%rax
   1406d:	48 29 c2             	sub    %rax,%rdx
   14070:	48 89 d0             	mov    %rdx,%rax
   14073:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   14077:	48 89 c2             	mov    %rax,%rdx
   1407a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1407e:	48 8b 08             	mov    (%rax),%rcx
   14081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14085:	48 89 ce             	mov    %rcx,%rsi
   14088:	48 89 c7             	mov    %rax,%rdi
   1408b:	e8 ba 21 00 00       	call   1624a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   14090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14094:	48 89 c7             	mov    %rax,%rdi
   14097:	e8 38 e7 ff ff       	call   127d4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   1409c:	90                   	nop
   1409d:	c9                   	leave
   1409e:	c3                   	ret
   1409f:	90                   	nop

00000000000140a0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   140a0:	55                   	push   %rbp
   140a1:	48 89 e5             	mov    %rsp,%rbp
   140a4:	48 83 ec 10          	sub    $0x10,%rsp
   140a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   140ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140b0:	48 89 c7             	mov    %rax,%rdi
   140b3:	e8 c8 21 00 00       	call   16280 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   140b8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   140bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140bf:	48 8b 48 08          	mov    0x8(%rax),%rcx
   140c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140c7:	48 8b 00             	mov    (%rax),%rax
   140ca:	48 89 ce             	mov    %rcx,%rsi
   140cd:	48 89 c7             	mov    %rax,%rdi
   140d0:	e8 b9 21 00 00       	call   1628e <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   140d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140d9:	48 89 c7             	mov    %rax,%rdi
   140dc:	e8 71 ff ff ff       	call   14052 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   140e1:	90                   	nop
   140e2:	c9                   	leave
   140e3:	c3                   	ret

00000000000140e4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   140e4:	55                   	push   %rbp
   140e5:	48 89 e5             	mov    %rsp,%rbp
   140e8:	48 83 ec 10          	sub    $0x10,%rsp
   140ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   140f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140f4:	48 89 c7             	mov    %rax,%rdi
   140f7:	e8 e0 1a ff ff       	call   5bdc <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   140fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14100:	48 89 c7             	mov    %rax,%rdi
   14103:	e8 66 1f ff ff       	call   606e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   14108:	90                   	nop
   14109:	c9                   	leave
   1410a:	c3                   	ret
   1410b:	90                   	nop

000000000001410c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1410c:	55                   	push   %rbp
   1410d:	48 89 e5             	mov    %rsp,%rbp
   14110:	48 83 ec 10          	sub    $0x10,%rsp
   14114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   14118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1411c:	48 89 c7             	mov    %rax,%rdi
   1411f:	e8 d8 fb ff ff       	call   13cfc <_ZNSaIP13VkSemaphore_TEC1Ev>
   14124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14128:	48 89 c7             	mov    %rax,%rdi
   1412b:	e8 88 21 00 00       	call   162b8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   14130:	90                   	nop
   14131:	c9                   	leave
   14132:	c3                   	ret
   14133:	90                   	nop

0000000000014134 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14134:	55                   	push   %rbp
   14135:	48 89 e5             	mov    %rsp,%rbp
   14138:	48 83 ec 10          	sub    $0x10,%rsp
   1413c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   14140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14144:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1414c:	48 8b 00             	mov    (%rax),%rax
   1414f:	48 29 c2             	sub    %rax,%rdx
   14152:	48 89 d0             	mov    %rdx,%rax
   14155:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   14159:	48 89 c2             	mov    %rax,%rdx
   1415c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14160:	48 8b 08             	mov    (%rax),%rcx
   14163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14167:	48 89 ce             	mov    %rcx,%rsi
   1416a:	48 89 c7             	mov    %rax,%rdi
   1416d:	e8 74 21 00 00       	call   162e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   14172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14176:	48 89 c7             	mov    %rax,%rdi
   14179:	e8 e2 e6 ff ff       	call   12860 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   1417e:	90                   	nop
   1417f:	c9                   	leave
   14180:	c3                   	ret
   14181:	90                   	nop

0000000000014182 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   14182:	55                   	push   %rbp
   14183:	48 89 e5             	mov    %rsp,%rbp
   14186:	48 83 ec 10          	sub    $0x10,%rsp
   1418a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1418e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14192:	48 89 c7             	mov    %rax,%rdi
   14195:	e8 82 21 00 00       	call   1631c <_ZNSaIP9VkFence_TEC1Ev>
   1419a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1419e:	48 89 c7             	mov    %rax,%rdi
   141a1:	e8 92 21 00 00       	call   16338 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   141a6:	90                   	nop
   141a7:	c9                   	leave
   141a8:	c3                   	ret
   141a9:	90                   	nop

00000000000141aa <_ZNSaIP9VkFence_TED1Ev>:
   141aa:	55                   	push   %rbp
   141ab:	48 89 e5             	mov    %rsp,%rbp
   141ae:	48 83 ec 10          	sub    $0x10,%rsp
   141b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141ba:	48 89 c7             	mov    %rax,%rdi
   141bd:	e8 a4 21 00 00       	call   16366 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
   141c2:	90                   	nop
   141c3:	c9                   	leave
   141c4:	c3                   	ret
   141c5:	90                   	nop

00000000000141c6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   141c6:	55                   	push   %rbp
   141c7:	48 89 e5             	mov    %rsp,%rbp
   141ca:	48 83 ec 10          	sub    $0x10,%rsp
   141ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   141d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141d6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   141da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141de:	48 8b 00             	mov    (%rax),%rax
   141e1:	48 29 c2             	sub    %rax,%rdx
   141e4:	48 89 d0             	mov    %rdx,%rax
   141e7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   141eb:	48 89 c2             	mov    %rax,%rdx
   141ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f2:	48 8b 08             	mov    (%rax),%rcx
   141f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f9:	48 89 ce             	mov    %rcx,%rsi
   141fc:	48 89 c7             	mov    %rax,%rdi
   141ff:	e8 6e 21 00 00       	call   16372 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   14204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14208:	48 89 c7             	mov    %rax,%rdi
   1420b:	e8 a4 e6 ff ff       	call   128b4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
   14210:	90                   	nop
   14211:	c9                   	leave
   14212:	c3                   	ret
   14213:	90                   	nop

0000000000014214 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   14214:	55                   	push   %rbp
   14215:	48 89 e5             	mov    %rsp,%rbp
   14218:	48 83 ec 10          	sub    $0x10,%rsp
   1421c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   14220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14224:	48 89 c7             	mov    %rax,%rdi
   14227:	e8 7c 21 00 00       	call   163a8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1422c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1422f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14233:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1423b:	48 8b 00             	mov    (%rax),%rax
   1423e:	48 89 ce             	mov    %rcx,%rsi
   14241:	48 89 c7             	mov    %rax,%rdi
   14244:	e8 6d 21 00 00       	call   163b6 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
   14249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1424d:	48 89 c7             	mov    %rax,%rdi
   14250:	e8 71 ff ff ff       	call   141c6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
   14255:	90                   	nop
   14256:	c9                   	leave
   14257:	c3                   	ret

0000000000014258 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   14258:	55                   	push   %rbp
   14259:	48 89 e5             	mov    %rsp,%rbp
   1425c:	48 83 ec 20          	sub    $0x20,%rsp
   14260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14264:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14268:	89 d0                	mov    %edx,%eax
   1426a:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   1426d:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   14271:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14275:	be 01 00 00 00       	mov    $0x1,%esi
   1427a:	48 89 c7             	mov    %rax,%rdi
   1427d:	e8 7e 02 ff ff       	call   4500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   14282:	48 89 c7             	mov    %rax,%rdi
   14285:	e8 d3 00 00 00       	call   1435d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1428a:	48 89 c2             	mov    %rax,%rdx
   1428d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14291:	48 89 d6             	mov    %rdx,%rsi
   14294:	48 89 c7             	mov    %rax,%rdi
   14297:	e8 b4 ff fe ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   1429c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142a0:	c9                   	leave
   142a1:	c3                   	ret

00000000000142a2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   142a2:	55                   	push   %rbp
   142a3:	48 89 e5             	mov    %rsp,%rbp
   142a6:	48 83 ec 20          	sub    $0x20,%rsp
   142aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   142ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   142b2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   142b6:	48 89 d6             	mov    %rdx,%rsi
   142b9:	48 89 c7             	mov    %rax,%rdi
   142bc:	e8 1f 21 00 00       	call   163e0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   142c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142c5:	c9                   	leave
   142c6:	c3                   	ret
   142c7:	90                   	nop

00000000000142c8 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   142c8:	55                   	push   %rbp
   142c9:	48 89 e5             	mov    %rsp,%rbp
   142cc:	48 83 ec 20          	sub    $0x20,%rsp
   142d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   142d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142d8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   142dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   142e0:	48 89 d6             	mov    %rdx,%rsi
   142e3:	48 89 c7             	mov    %rax,%rdi
   142e6:	e8 f5 20 00 00       	call   163e0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   142eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142ef:	c9                   	leave
   142f0:	c3                   	ret

00000000000142f1 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   142f1:	55                   	push   %rbp
   142f2:	48 89 e5             	mov    %rsp,%rbp
   142f5:	53                   	push   %rbx
   142f6:	48 83 ec 18          	sub    $0x18,%rsp
   142fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   142fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   14302:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14306:	48 89 c7             	mov    %rax,%rdi
   14309:	e8 f0 20 00 00       	call   163fe <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1430e:	48 8b 18             	mov    (%rax),%rbx
   14311:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14315:	48 89 c7             	mov    %rax,%rdi
   14318:	e8 e1 20 00 00       	call   163fe <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1431d:	48 8b 00             	mov    (%rax),%rax
   14320:	48 39 c3             	cmp    %rax,%rbx
   14323:	0f 95 c0             	setne  %al
   14326:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1432a:	c9                   	leave
   1432b:	c3                   	ret

000000000001432c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1432c:	55                   	push   %rbp
   1432d:	48 89 e5             	mov    %rsp,%rbp
   14330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   14334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14338:	48 8b 00             	mov    (%rax),%rax
   1433b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1433f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14343:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   14346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1434a:	5d                   	pop    %rbp
   1434b:	c3                   	ret

000000000001434c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1434c:	55                   	push   %rbp
   1434d:	48 89 e5             	mov    %rsp,%rbp
   14350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   14354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14358:	48 8b 00             	mov    (%rax),%rax
   1435b:	5d                   	pop    %rbp
   1435c:	c3                   	ret

000000000001435d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   1435d:	55                   	push   %rbp
   1435e:	48 89 e5             	mov    %rsp,%rbp
   14361:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   14365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14369:	5d                   	pop    %rbp
   1436a:	c3                   	ret
   1436b:	90                   	nop

000000000001436c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1436c:	55                   	push   %rbp
   1436d:	48 89 e5             	mov    %rsp,%rbp
   14370:	48 83 ec 10          	sub    $0x10,%rsp
   14374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14378:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1437c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14380:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14384:	48 89 d6             	mov    %rdx,%rsi
   14387:	48 89 c7             	mov    %rax,%rdi
   1438a:	e8 41 69 ff ff       	call   acd0 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   1438f:	90                   	nop
   14390:	c9                   	leave
   14391:	c3                   	ret

0000000000014392 <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
   14392:	55                   	push   %rbp
   14393:	48 89 e5             	mov    %rsp,%rbp
   14396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1439a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1439e:	48 8b 00             	mov    (%rax),%rax
   143a1:	5d                   	pop    %rbp
   143a2:	c3                   	ret
   143a3:	90                   	nop

00000000000143a4 <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
   143a4:	55                   	push   %rbp
   143a5:	48 89 e5             	mov    %rsp,%rbp
   143a8:	53                   	push   %rbx
   143a9:	48 83 ec 18          	sub    $0x18,%rsp
   143ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   143b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143b5:	48 89 c7             	mov    %rax,%rdi
   143b8:	e8 d5 ff ff ff       	call   14392 <_ZNKSt16initializer_listIPKcE5beginEv>
   143bd:	48 89 c3             	mov    %rax,%rbx
   143c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143c4:	48 89 c7             	mov    %rax,%rdi
   143c7:	e8 40 20 00 00       	call   1640c <_ZNKSt16initializer_listIPKcE4sizeEv>
   143cc:	48 c1 e0 03          	shl    $0x3,%rax
   143d0:	48 01 d8             	add    %rbx,%rax
   143d3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   143d7:	c9                   	leave
   143d8:	c3                   	ret

00000000000143d9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   143d9:	55                   	push   %rbp
   143da:	48 89 e5             	mov    %rsp,%rbp
   143dd:	48 83 ec 10          	sub    $0x10,%rsp
   143e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   143e9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   143ed:	48 89 c7             	mov    %rax,%rdi
   143f0:	e8 29 20 00 00       	call   1641e <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   143f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143fd:	48 89 d6             	mov    %rdx,%rsi
   14400:	48 89 c7             	mov    %rax,%rdi
   14403:	e8 21 20 00 00       	call   16429 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   14408:	c9                   	leave
   14409:	c3                   	ret

000000000001440a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1440a:	55                   	push   %rbp
   1440b:	48 89 e5             	mov    %rsp,%rbp
   1440e:	53                   	push   %rbx
   1440f:	48 83 ec 38          	sub    $0x38,%rsp
   14413:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14417:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1441b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1441f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14423:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14427:	48 89 d6             	mov    %rdx,%rsi
   1442a:	48 89 c7             	mov    %rax,%rdi
   1442d:	e8 a7 ff ff ff       	call   143d9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   14432:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   14436:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1443a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1443e:	48 89 c7             	mov    %rax,%rdi
   14441:	e8 00 5a ff ff       	call   9e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   14446:	48 89 c2             	mov    %rax,%rdx
   14449:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1444d:	48 89 d6             	mov    %rdx,%rsi
   14450:	48 89 c7             	mov    %rax,%rdi
   14453:	e8 ef 58 ff ff       	call   9d47 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   14458:	48 89 c6             	mov    %rax,%rsi
   1445b:	48 89 df             	mov    %rbx,%rdi
   1445e:	e8 f9 73 ff ff       	call   b85c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   14463:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14467:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1446a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1446e:	48 8b 00             	mov    (%rax),%rax
   14471:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14475:	48 c1 e2 03          	shl    $0x3,%rdx
   14479:	48 01 c2             	add    %rax,%rdx
   1447c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14480:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   14484:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14488:	48 89 c7             	mov    %rax,%rdi
   1448b:	e8 b6 59 ff ff       	call   9e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   14490:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   14493:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14497:	48 8b 10             	mov    (%rax),%rdx
   1449a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1449e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144a2:	48 89 c7             	mov    %rax,%rdi
   144a5:	e8 99 1f 00 00       	call   16443 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   144aa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   144ae:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   144b2:	90                   	nop
   144b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   144b7:	c9                   	leave
   144b8:	c3                   	ret

00000000000144b9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   144b9:	55                   	push   %rbp
   144ba:	48 89 e5             	mov    %rsp,%rbp
   144bd:	48 83 ec 20          	sub    $0x20,%rsp
   144c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   144c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   144cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   144d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144d5:	48 89 d6             	mov    %rdx,%rsi
   144d8:	48 89 c7             	mov    %rax,%rdi
   144db:	e8 94 1f 00 00       	call   16474 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   144e0:	90                   	nop
   144e1:	c9                   	leave
   144e2:	c3                   	ret
   144e3:	90                   	nop

00000000000144e4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   144e4:	55                   	push   %rbp
   144e5:	48 89 e5             	mov    %rsp,%rbp
   144e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   144f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   144f4:	48 8b 10             	mov    (%rax),%rdx
   144f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144fb:	48 89 10             	mov    %rdx,(%rax)
   144fe:	90                   	nop
   144ff:	5d                   	pop    %rbp
   14500:	c3                   	ret
   14501:	90                   	nop

0000000000014502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14502:	55                   	push   %rbp
   14503:	48 89 e5             	mov    %rsp,%rbp
   14506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1450a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1450e:	5d                   	pop    %rbp
   1450f:	c3                   	ret

0000000000014510 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14510:	55                   	push   %rbp
   14511:	48 89 e5             	mov    %rsp,%rbp
   14514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1451c:	5d                   	pop    %rbp
   1451d:	c3                   	ret

000000000001451e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1451e:	55                   	push   %rbp
   1451f:	48 89 e5             	mov    %rsp,%rbp
   14522:	48 83 ec 20          	sub    $0x20,%rsp
   14526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1452a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1452e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   14532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14536:	48 89 c7             	mov    %rax,%rdi
   14539:	e8 d2 ff ff ff       	call   14510 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1453e:	48 89 c2             	mov    %rax,%rdx
   14541:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14549:	48 89 ce             	mov    %rcx,%rsi
   1454c:	48 89 c7             	mov    %rax,%rdi
   1454f:	e8 46 1f 00 00       	call   1649a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   14554:	90                   	nop
   14555:	c9                   	leave
   14556:	c3                   	ret
   14557:	90                   	nop

0000000000014558 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   14558:	55                   	push   %rbp
   14559:	48 89 e5             	mov    %rsp,%rbp
   1455c:	53                   	push   %rbx
   1455d:	48 83 ec 68          	sub    $0x68,%rsp
   14561:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14565:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14569:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1456d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14571:	48 8d 15 0e bc 00 00 	lea    0xbc0e(%rip),%rdx        # 20186 <_ZZN9VulkanApp6renderEvE11submitCount+0x2be>
   14578:	be 01 00 00 00       	mov    $0x1,%esi
   1457d:	48 89 c7             	mov    %rax,%rdi
   14580:	e8 57 1f 00 00       	call   164dc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   14585:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   14589:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1458d:	48 8b 00             	mov    (%rax),%rax
   14590:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   14594:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14598:	48 8b 40 08          	mov    0x8(%rax),%rax
   1459c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   145a0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   145a4:	48 89 c7             	mov    %rax,%rdi
   145a7:	e8 ac e4 ff ff       	call   12a58 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   145ac:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   145b0:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   145b4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   145b8:	48 89 d6             	mov    %rdx,%rsi
   145bb:	48 89 c7             	mov    %rax,%rdi
   145be:	e8 e1 1f 00 00       	call   165a4 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   145c3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   145c7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   145cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   145cf:	48 89 d6             	mov    %rdx,%rsi
   145d2:	48 89 c7             	mov    %rax,%rdi
   145d5:	e8 82 72 ff ff       	call   b85c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   145da:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   145de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145e2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   145e6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   145ea:	48 89 c7             	mov    %rax,%rdi
   145ed:	e8 1e ff ff ff       	call   14510 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   145f2:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   145f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   145f9:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   14600:	00 
	  _Alloc_traits::construct(this->_M_impl,
   14601:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14605:	48 01 c1             	add    %rax,%rcx
   14608:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1460c:	48 89 ce             	mov    %rcx,%rsi
   1460f:	48 89 c7             	mov    %rax,%rdi
   14612:	e8 07 ff ff ff       	call   1451e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   14617:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1461e:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   1461f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14623:	48 89 c7             	mov    %rax,%rdi
   14626:	e8 1b 58 ff ff       	call   9e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1462b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   1462e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14632:	48 89 c7             	mov    %rax,%rdi
   14635:	e8 c8 fe ff ff       	call   14502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1463a:	48 8b 30             	mov    (%rax),%rsi
   1463d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14641:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14645:	48 89 d9             	mov    %rbx,%rcx
   14648:	48 89 c7             	mov    %rax,%rdi
   1464b:	e8 96 1f 00 00       	call   165e6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   14650:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   14654:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   14659:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1465d:	48 89 c7             	mov    %rax,%rdi
   14660:	e8 e1 57 ff ff       	call   9e46 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   14665:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   14668:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1466c:	48 89 c7             	mov    %rax,%rdi
   1466f:	e8 8e fe ff ff       	call   14502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   14674:	48 8b 00             	mov    (%rax),%rax
   14677:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1467b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1467f:	48 89 d9             	mov    %rbx,%rcx
   14682:	48 89 c7             	mov    %rax,%rdi
   14685:	e8 5c 1f 00 00       	call   165e6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1468a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   1468e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   14692:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14696:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1469a:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   1469e:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   146a2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   146a6:	48 89 ce             	mov    %rcx,%rsi
   146a9:	48 89 c7             	mov    %rax,%rdi
   146ac:	e8 c9 57 ff ff       	call   9e7a <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   146b1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   146b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   146b9:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   146bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   146c0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   146c4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   146c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146cc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   146d3:	00 
   146d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146d8:	48 01 c2             	add    %rax,%rdx
   146db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   146df:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   146e3:	90                   	nop
   146e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   146e8:	c9                   	leave
   146e9:	c3                   	ret

00000000000146ea <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   146ea:	55                   	push   %rbp
   146eb:	48 89 e5             	mov    %rsp,%rbp
   146ee:	48 83 ec 20          	sub    $0x20,%rsp
   146f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   146f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146fa:	48 89 c7             	mov    %rax,%rdi
   146fd:	e8 7c e3 ff ff       	call   12a7e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   14702:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14706:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1470a:	be 01 00 00 00       	mov    $0x1,%esi
   1470f:	48 89 c7             	mov    %rax,%rdi
   14712:	e8 01 1f 00 00       	call   16618 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   14717:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1471b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1471f:	48 89 c7             	mov    %rax,%rdi
   14722:	e8 db e3 ff ff       	call   12b02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   14727:	c9                   	leave
   14728:	c3                   	ret
   14729:	90                   	nop

000000000001472a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1472a:	55                   	push   %rbp
   1472b:	48 89 e5             	mov    %rsp,%rbp
   1472e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14732:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   14736:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1473a:	5d                   	pop    %rbp
   1473b:	c3                   	ret

000000000001473c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1473c:	55                   	push   %rbp
   1473d:	48 89 e5             	mov    %rsp,%rbp
   14740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14748:	5d                   	pop    %rbp
   14749:	c3                   	ret

000000000001474a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1474a:	55                   	push   %rbp
   1474b:	48 89 e5             	mov    %rsp,%rbp
   1474e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14756:	5d                   	pop    %rbp
   14757:	c3                   	ret

0000000000014758 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14758:	55                   	push   %rbp
   14759:	48 89 e5             	mov    %rsp,%rbp
   1475c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14764:	5d                   	pop    %rbp
   14765:	c3                   	ret

0000000000014766 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   14766:	55                   	push   %rbp
   14767:	48 89 e5             	mov    %rsp,%rbp
   1476a:	48 83 ec 20          	sub    $0x20,%rsp
   1476e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14772:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   14776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1477a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1477e:	48 89 d6             	mov    %rdx,%rsi
   14781:	48 89 c7             	mov    %rax,%rdi
   14784:	e8 d1 1e 00 00       	call   1665a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   14789:	90                   	nop
   1478a:	c9                   	leave
   1478b:	c3                   	ret

000000000001478c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   1478c:	55                   	push   %rbp
   1478d:	48 89 e5             	mov    %rsp,%rbp
   14790:	53                   	push   %rbx
   14791:	48 83 ec 18          	sub    $0x18,%rsp
   14795:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14799:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   1479d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   147a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   147a5:	48 89 c7             	mov    %rax,%rdi
   147a8:	e8 ab ff ff ff       	call   14758 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   147ad:	48 89 c6             	mov    %rax,%rsi
   147b0:	48 89 df             	mov    %rbx,%rdi
   147b3:	e8 ae ff ff ff       	call   14766 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   147b8:	90                   	nop
   147b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   147bd:	c9                   	leave
   147be:	c3                   	ret
   147bf:	90                   	nop

00000000000147c0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   147c0:	55                   	push   %rbp
   147c1:	48 89 e5             	mov    %rsp,%rbp
   147c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   147cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   147d0:	48 8b 10             	mov    (%rax),%rdx
   147d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147d7:	48 89 10             	mov    %rdx,(%rax)
   147da:	90                   	nop
   147db:	5d                   	pop    %rbp
   147dc:	c3                   	ret
   147dd:	90                   	nop

00000000000147de <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   147de:	55                   	push   %rbp
   147df:	48 89 e5             	mov    %rsp,%rbp
   147e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   147e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147ea:	5d                   	pop    %rbp
   147eb:	c3                   	ret

00000000000147ec <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   147ec:	55                   	push   %rbp
   147ed:	48 89 e5             	mov    %rsp,%rbp
   147f0:	53                   	push   %rbx
   147f1:	48 83 ec 18          	sub    $0x18,%rsp
   147f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   147fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14801:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14805:	84 c0                	test   %al,%al
   14807:	74 35                	je     1483e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   14809:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1480d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14811:	84 c0                	test   %al,%al
   14813:	74 29                	je     1483e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   14815:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14819:	48 89 c7             	mov    %rax,%rdi
   1481c:	e8 75 1e 00 00       	call   16696 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   14821:	48 89 c3             	mov    %rax,%rbx
   14824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14828:	48 89 c7             	mov    %rax,%rdi
   1482b:	e8 4e 00 00 00       	call   1487e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   14830:	48 89 de             	mov    %rbx,%rsi
   14833:	48 89 c7             	mov    %rax,%rdi
   14836:	e8 69 1e 00 00       	call   166a4 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   1483b:	90                   	nop
      }
   1483c:	eb 38                	jmp    14876 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   1483e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14842:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14846:	84 c0                	test   %al,%al
   14848:	74 20                	je     1486a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   1484a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1484e:	48 89 c7             	mov    %rax,%rdi
   14851:	e8 40 1e 00 00       	call   16696 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   14856:	48 89 c2             	mov    %rax,%rdx
   14859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1485d:	48 89 d6             	mov    %rdx,%rsi
   14860:	48 89 c7             	mov    %rax,%rdi
   14863:	e8 7a 1e 00 00       	call   166e2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   14868:	eb 0c                	jmp    14876 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   1486a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1486e:	48 89 c7             	mov    %rax,%rdi
   14871:	e8 b2 1e 00 00       	call   16728 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   14876:	90                   	nop
   14877:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1487b:	c9                   	leave
   1487c:	c3                   	ret
   1487d:	90                   	nop

000000000001487e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   1487e:	55                   	push   %rbp
   1487f:	48 89 e5             	mov    %rsp,%rbp
   14882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   14886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1488a:	5d                   	pop    %rbp
   1488b:	c3                   	ret

000000000001488c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1488c:	55                   	push   %rbp
   1488d:	48 89 e5             	mov    %rsp,%rbp
   14890:	48 83 ec 10          	sub    $0x10,%rsp
   14894:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1489c:	48 89 c7             	mov    %rax,%rdi
   1489f:	e8 ac 1e 00 00       	call   16750 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   148a4:	90                   	nop
   148a5:	c9                   	leave
   148a6:	c3                   	ret
   148a7:	90                   	nop

00000000000148a8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   148a8:	55                   	push   %rbp
   148a9:	48 89 e5             	mov    %rsp,%rbp
   148ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   148b0:	90                   	nop
   148b1:	5d                   	pop    %rbp
   148b2:	c3                   	ret
   148b3:	90                   	nop

00000000000148b4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   148b4:	55                   	push   %rbp
   148b5:	48 89 e5             	mov    %rsp,%rbp
   148b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148bc:	90                   	nop
   148bd:	5d                   	pop    %rbp
   148be:	c3                   	ret
   148bf:	90                   	nop

00000000000148c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   148c0:	55                   	push   %rbp
   148c1:	48 89 e5             	mov    %rsp,%rbp
   148c4:	48 83 ec 20          	sub    $0x20,%rsp
   148c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   148cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   148d0:	eb 49                	jmp    1491b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   148d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148d6:	48 89 c7             	mov    %rax,%rdi
   148d9:	e8 7d 1e 00 00       	call   1675b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   148de:	48 89 c2             	mov    %rax,%rdx
   148e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148e5:	48 89 d6             	mov    %rdx,%rsi
   148e8:	48 89 c7             	mov    %rax,%rdi
   148eb:	e8 d0 ff ff ff       	call   148c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   148f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148f4:	48 89 c7             	mov    %rax,%rdi
   148f7:	e8 71 1e 00 00       	call   1676d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   148fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   14900:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14908:	48 89 d6             	mov    %rdx,%rsi
   1490b:	48 89 c7             	mov    %rax,%rdi
   1490e:	e8 6d 1e 00 00       	call   16780 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   14913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14917:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   1491b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14920:	75 b0                	jne    148d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   14922:	90                   	nop
   14923:	90                   	nop
   14924:	c9                   	leave
   14925:	c3                   	ret

0000000000014926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   14926:	55                   	push   %rbp
   14927:	48 89 e5             	mov    %rsp,%rbp
   1492a:	48 83 ec 10          	sub    $0x10,%rsp
   1492e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   14932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14936:	48 89 c7             	mov    %rax,%rdi
   14939:	e8 7c 1e 00 00       	call   167ba <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   1493e:	c9                   	leave
   1493f:	c3                   	ret

0000000000014940 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14940:	55                   	push   %rbp
   14941:	48 89 e5             	mov    %rsp,%rbp
   14944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1494c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14950:	48 8b 10             	mov    (%rax),%rdx
   14953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14957:	48 89 10             	mov    %rdx,(%rax)
   1495a:	90                   	nop
   1495b:	5d                   	pop    %rbp
   1495c:	c3                   	ret
   1495d:	90                   	nop

000000000001495e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1495e:	55                   	push   %rbp
   1495f:	48 89 e5             	mov    %rsp,%rbp
   14962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1496a:	5d                   	pop    %rbp
   1496b:	c3                   	ret

000000000001496c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   1496c:	55                   	push   %rbp
   1496d:	48 89 e5             	mov    %rsp,%rbp
   14970:	48 83 ec 10          	sub    $0x10,%rsp
   14974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14978:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   1497c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14980:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14984:	48 89 d6             	mov    %rdx,%rsi
   14987:	48 89 c7             	mov    %rax,%rdi
   1498a:	e8 3d 1e 00 00       	call   167cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   1498f:	c9                   	leave
   14990:	c3                   	ret
   14991:	90                   	nop

0000000000014992 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14992:	55                   	push   %rbp
   14993:	48 89 e5             	mov    %rsp,%rbp
   14996:	48 83 ec 10          	sub    $0x10,%rsp
   1499a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1499e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149a2:	48 89 c7             	mov    %rax,%rdi
   149a5:	e8 6e 1e 00 00       	call   16818 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   149aa:	c9                   	leave
   149ab:	c3                   	ret

00000000000149ac <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   149ac:	55                   	push   %rbp
   149ad:	48 89 e5             	mov    %rsp,%rbp
   149b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   149b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149bc:	48 8b 10             	mov    (%rax),%rdx
   149bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149c3:	48 8b 00             	mov    (%rax),%rax
   149c6:	48 39 c2             	cmp    %rax,%rdx
   149c9:	0f 94 c0             	sete   %al
   149cc:	5d                   	pop    %rbp
   149cd:	c3                   	ret

00000000000149ce <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   149ce:	55                   	push   %rbp
   149cf:	48 89 e5             	mov    %rsp,%rbp
   149d2:	48 83 ec 10          	sub    $0x10,%rsp
   149d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   149da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149de:	48 89 c7             	mov    %rax,%rdi
   149e1:	e8 5c 1e 00 00       	call   16842 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   149e6:	90                   	nop
   149e7:	c9                   	leave
   149e8:	c3                   	ret
   149e9:	90                   	nop

00000000000149ea <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   149ea:	55                   	push   %rbp
   149eb:	48 89 e5             	mov    %rsp,%rbp
   149ee:	48 83 ec 10          	sub    $0x10,%rsp
   149f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   149f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149fa:	48 8b 00             	mov    (%rax),%rax
   149fd:	48 89 c7             	mov    %rax,%rdi
   14a00:	e8 49 1e 00 00       	call   1684e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14a05:	c9                   	leave
   14a06:	c3                   	ret
   14a07:	90                   	nop

0000000000014a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   14a08:	55                   	push   %rbp
   14a09:	48 89 e5             	mov    %rsp,%rbp
   14a0c:	48 83 ec 20          	sub    $0x20,%rsp
   14a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a18:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   14a1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14a20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a24:	48 89 d6             	mov    %rdx,%rsi
   14a27:	48 89 c7             	mov    %rax,%rdi
   14a2a:	e8 3d 1e 00 00       	call   1686c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   14a2f:	c9                   	leave
   14a30:	c3                   	ret

0000000000014a31 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   14a31:	55                   	push   %rbp
   14a32:	48 89 e5             	mov    %rsp,%rbp
   14a35:	48 83 ec 10          	sub    $0x10,%rsp
   14a39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   14a41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a45:	48 89 c7             	mov    %rax,%rdi
   14a48:	e8 47 1e 00 00       	call   16894 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   14a4d:	48 89 c2             	mov    %rax,%rdx
   14a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a54:	48 89 d6             	mov    %rdx,%rsi
   14a57:	48 89 c7             	mov    %rax,%rdi
   14a5a:	e8 43 1e 00 00       	call   168a2 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   14a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a63:	c9                   	leave
   14a64:	c3                   	ret
   14a65:	90                   	nop

0000000000014a66 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   14a66:	55                   	push   %rbp
   14a67:	48 89 e5             	mov    %rsp,%rbp
   14a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   14a72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a76:	48 8b 10             	mov    (%rax),%rdx
   14a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a7d:	48 89 10             	mov    %rdx,(%rax)
   14a80:	90                   	nop
   14a81:	5d                   	pop    %rbp
   14a82:	c3                   	ret
   14a83:	90                   	nop

0000000000014a84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14a84:	55                   	push   %rbp
   14a85:	48 89 e5             	mov    %rsp,%rbp
   14a88:	41 54                	push   %r12
   14a8a:	53                   	push   %rbx
   14a8b:	48 83 ec 60          	sub    $0x60,%rsp
   14a8f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   14a93:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   14a97:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   14a9b:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   14a9f:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   14aa3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14aa7:	48 89 c7             	mov    %rax,%rdi
   14aaa:	e8 42 1e 00 00       	call   168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14aaf:	49 89 c4             	mov    %rax,%r12
   14ab2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14ab6:	48 89 c7             	mov    %rax,%rdi
   14ab9:	e8 25 1e 00 00       	call   168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14abe:	48 89 c3             	mov    %rax,%rbx
   14ac1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14ac5:	48 89 c7             	mov    %rax,%rdi
   14ac8:	e8 08 1e 00 00       	call   168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14acd:	48 89 c2             	mov    %rax,%rdx
   14ad0:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   14ad4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14ad8:	4d 89 e0             	mov    %r12,%r8
   14adb:	48 89 d9             	mov    %rbx,%rcx
   14ade:	48 89 c7             	mov    %rax,%rdi
   14ae1:	e8 1a 1e 00 00       	call   16900 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   14ae6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14aea:	48 89 c7             	mov    %rax,%rdi
   14aed:	e8 0e 23 00 00       	call   16e00 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   14af2:	48 89 c2             	mov    %rax,%rdx
   14af5:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   14af9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14afd:	48 89 ce             	mov    %rcx,%rsi
   14b00:	48 89 c7             	mov    %rax,%rdi
   14b03:	e8 aa 1e 00 00       	call   169b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   14b08:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14b0c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   14b10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14b14:	48 85 c0             	test   %rax,%rax
   14b17:	74 1c                	je     14b35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   14b19:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   14b1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14b21:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14b25:	48 89 ce             	mov    %rcx,%rsi
   14b28:	48 89 c7             	mov    %rax,%rdi
   14b2b:	e8 ee 22 00 00       	call   16e1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   14b30:	48 89 c3             	mov    %rax,%rbx
   14b33:	eb 17                	jmp    14b4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   14b35:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14b39:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   14b3d:	48 89 d6             	mov    %rdx,%rsi
   14b40:	48 89 c7             	mov    %rax,%rdi
   14b43:	e8 2c 23 00 00       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14b48:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   14b4c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14b50:	48 89 c7             	mov    %rax,%rdi
   14b53:	e8 24 1e 00 00       	call   1697c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   14b58:	48 89 d8             	mov    %rbx,%rax
   14b5b:	eb 1a                	jmp    14b77 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   14b5d:	48 89 c3             	mov    %rax,%rbx
   14b60:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14b64:	48 89 c7             	mov    %rax,%rdi
   14b67:	e8 10 1e 00 00       	call   1697c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   14b6c:	48 89 d8             	mov    %rbx,%rax
   14b6f:	48 89 c7             	mov    %rax,%rdi
   14b72:	e8 39 fd fe ff       	call   48b0 <_Unwind_Resume@plt>
   14b77:	48 83 c4 60          	add    $0x60,%rsp
   14b7b:	5b                   	pop    %rbx
   14b7c:	41 5c                	pop    %r12
   14b7e:	5d                   	pop    %rbp
   14b7f:	c3                   	ret

0000000000014b80 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   14b80:	55                   	push   %rbp
   14b81:	48 89 e5             	mov    %rsp,%rbp
   14b84:	48 83 ec 20          	sub    $0x20,%rsp
   14b88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   14b8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14b90:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14b94:	48 89 d6             	mov    %rdx,%rsi
   14b97:	48 89 c7             	mov    %rax,%rdi
   14b9a:	e8 ef 22 00 00       	call   16e8e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   14b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ba3:	c9                   	leave
   14ba4:	c3                   	ret
   14ba5:	90                   	nop

0000000000014ba6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   14ba6:	55                   	push   %rbp
   14ba7:	48 89 e5             	mov    %rsp,%rbp
   14baa:	48 83 ec 20          	sub    $0x20,%rsp
   14bae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   14bb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bb6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14bba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14bbe:	48 89 d6             	mov    %rdx,%rsi
   14bc1:	48 89 c7             	mov    %rax,%rdi
   14bc4:	e8 c5 22 00 00       	call   16e8e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   14bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bcd:	c9                   	leave
   14bce:	c3                   	ret

0000000000014bcf <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   14bcf:	55                   	push   %rbp
   14bd0:	48 89 e5             	mov    %rsp,%rbp
   14bd3:	53                   	push   %rbx
   14bd4:	48 83 ec 18          	sub    $0x18,%rsp
   14bd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14bdc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   14be0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14be4:	48 89 c7             	mov    %rax,%rdi
   14be7:	e8 c0 22 00 00       	call   16eac <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   14bec:	48 8b 18             	mov    (%rax),%rbx
   14bef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14bf3:	48 89 c7             	mov    %rax,%rdi
   14bf6:	e8 b1 22 00 00       	call   16eac <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   14bfb:	48 8b 00             	mov    (%rax),%rax
   14bfe:	48 39 c3             	cmp    %rax,%rbx
   14c01:	0f 94 c0             	sete   %al
   14c04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14c08:	c9                   	leave
   14c09:	c3                   	ret

0000000000014c0a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14c0a:	55                   	push   %rbp
   14c0b:	48 89 e5             	mov    %rsp,%rbp
   14c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14c16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14c1a:	48 8b 10             	mov    (%rax),%rdx
   14c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c21:	48 89 10             	mov    %rdx,(%rax)
   14c24:	90                   	nop
   14c25:	5d                   	pop    %rbp
   14c26:	c3                   	ret
   14c27:	90                   	nop

0000000000014c28 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14c28:	55                   	push   %rbp
   14c29:	48 89 e5             	mov    %rsp,%rbp
   14c2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c34:	5d                   	pop    %rbp
   14c35:	c3                   	ret

0000000000014c36 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14c36:	55                   	push   %rbp
   14c37:	48 89 e5             	mov    %rsp,%rbp
   14c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14c42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14c46:	48 8b 10             	mov    (%rax),%rdx
   14c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c4d:	48 89 10             	mov    %rdx,(%rax)
   14c50:	90                   	nop
   14c51:	5d                   	pop    %rbp
   14c52:	c3                   	ret
   14c53:	90                   	nop

0000000000014c54 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14c54:	55                   	push   %rbp
   14c55:	48 89 e5             	mov    %rsp,%rbp
   14c58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c60:	5d                   	pop    %rbp
   14c61:	c3                   	ret

0000000000014c62 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   14c62:	55                   	push   %rbp
   14c63:	48 89 e5             	mov    %rsp,%rbp
   14c66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   14c6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c6e:	5d                   	pop    %rbp
   14c6f:	c3                   	ret

0000000000014c70 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   14c70:	55                   	push   %rbp
   14c71:	48 89 e5             	mov    %rsp,%rbp
   14c74:	53                   	push   %rbx
   14c75:	48 83 ec 38          	sub    $0x38,%rsp
   14c79:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14c7d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   14c81:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14c85:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14c89:	48 89 d6             	mov    %rdx,%rsi
   14c8c:	48 89 c7             	mov    %rax,%rdi
   14c8f:	e8 26 22 00 00       	call   16eba <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   14c94:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   14c98:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14c9c:	48 89 d6             	mov    %rdx,%rsi
   14c9f:	48 89 c7             	mov    %rax,%rdi
   14ca2:	e8 47 22 00 00       	call   16eee <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   14ca7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14cab:	48 89 c7             	mov    %rax,%rdi
   14cae:	e8 bd 4b ff ff       	call   9870 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   14cb3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14cb7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14cbb:	48 89 d6             	mov    %rdx,%rsi
   14cbe:	48 89 c7             	mov    %rax,%rdi
   14cc1:	e8 4e 22 00 00       	call   16f14 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   14cc6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14cca:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14cce:	48 89 d6             	mov    %rdx,%rsi
   14cd1:	48 89 c7             	mov    %rax,%rdi
   14cd4:	e8 3b 22 00 00       	call   16f14 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   14cd9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14cdd:	48 89 c7             	mov    %rax,%rdi
   14ce0:	e8 3f 5c ff ff       	call   a924 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14ce5:	48 89 c3             	mov    %rax,%rbx
   14ce8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14cec:	48 89 c7             	mov    %rax,%rdi
   14cef:	e8 30 5c ff ff       	call   a924 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14cf4:	48 89 de             	mov    %rbx,%rsi
   14cf7:	48 89 c7             	mov    %rax,%rdi
   14cfa:	e8 6d 22 00 00       	call   16f6c <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   14cff:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14d03:	48 89 c7             	mov    %rax,%rdi
   14d06:	e8 f7 4b ff ff       	call   9902 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   14d0b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14d0f:	c9                   	leave
   14d10:	c3                   	ret
   14d11:	90                   	nop

0000000000014d12 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   14d12:	55                   	push   %rbp
   14d13:	48 89 e5             	mov    %rsp,%rbp
   14d16:	53                   	push   %rbx
   14d17:	48 83 ec 38          	sub    $0x38,%rsp
   14d1b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14d1f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   14d23:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   14d28:	0f 84 e7 01 00 00    	je     14f15 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   14d2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d32:	48 89 c7             	mov    %rax,%rdi
   14d35:	e8 62 ea ff ff       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14d3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14d3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d42:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   14d46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d4a:	48 8b 40 08          	mov    0x8(%rax),%rax
   14d4e:	48 29 c2             	sub    %rax,%rdx
   14d51:	48 89 d0             	mov    %rdx,%rax
   14d54:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14d58:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   14d5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d60:	48 89 c7             	mov    %rax,%rdi
   14d63:	e8 24 22 00 00       	call   16f8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14d68:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14d6c:	72 16                	jb     14d84 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   14d6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d72:	48 89 c7             	mov    %rax,%rdi
   14d75:	e8 12 22 00 00       	call   16f8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14d7a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14d7e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   14d82:	73 07                	jae    14d8b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   14d84:	b8 01 00 00 00       	mov    $0x1,%eax
   14d89:	eb 05                	jmp    14d90 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   14d8b:	b8 00 00 00 00       	mov    $0x0,%eax
   14d90:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   14d92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14d96:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   14d9a:	72 33                	jb     14dcf <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   14d9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14da0:	48 89 c7             	mov    %rax,%rdi
   14da3:	e8 c2 09 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14da8:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   14dab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14daf:	48 8b 40 08          	mov    0x8(%rax),%rax
   14db3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   14db7:	48 89 ce             	mov    %rcx,%rsi
   14dba:	48 89 c7             	mov    %rax,%rdi
   14dbd:	e8 ec 21 00 00       	call   16fae <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   14dc2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14dc6:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   14dca:	e9 46 01 00 00       	jmp    14f15 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   14dcf:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   14dd3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14dd7:	48 8d 15 c2 b3 00 00 	lea    0xb3c2(%rip),%rdx        # 201a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   14dde:	48 89 ce             	mov    %rcx,%rsi
   14de1:	48 89 c7             	mov    %rax,%rdi
   14de4:	e8 ef 21 00 00       	call   16fd8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   14de9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   14ded:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14df1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14df5:	48 89 d6             	mov    %rdx,%rsi
   14df8:	48 89 c7             	mov    %rax,%rdi
   14dfb:	e8 a0 22 00 00       	call   170a0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   14e00:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   14e04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14e08:	48 89 c7             	mov    %rax,%rdi
   14e0b:	e8 5a 09 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14e10:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   14e13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e17:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   14e1e:	00 
   14e1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14e23:	48 01 c1             	add    %rax,%rcx
   14e26:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14e2a:	48 89 c6             	mov    %rax,%rsi
   14e2d:	48 89 cf             	mov    %rcx,%rdi
   14e30:	e8 79 21 00 00       	call   16fae <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   14e35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14e39:	48 89 c7             	mov    %rax,%rdi
   14e3c:	e8 29 09 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14e41:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   14e44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14e48:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14e4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14e50:	48 8b 00             	mov    (%rax),%rax
   14e53:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14e57:	48 89 c7             	mov    %rax,%rdi
   14e5a:	e8 74 22 00 00       	call   170d3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   14e5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   14e63:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14e67:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   14e6b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14e6f:	48 8b 12             	mov    (%rdx),%rdx
   14e72:	48 29 d1             	sub    %rdx,%rcx
   14e75:	48 c1 f9 03          	sar    $0x3,%rcx
   14e79:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   14e7c:	48 89 d6             	mov    %rdx,%rsi
   14e7f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14e83:	48 8b 0a             	mov    (%rdx),%rcx
   14e86:	48 89 f2             	mov    %rsi,%rdx
   14e89:	48 89 ce             	mov    %rcx,%rsi
   14e8c:	48 89 c7             	mov    %rax,%rdi
   14e8f:	e8 2a 13 00 00       	call   161be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   14e94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14e98:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14e9c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   14e9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14ea3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14ea7:	48 01 d0             	add    %rdx,%rax
   14eaa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14eb1:	00 
   14eb2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14eb6:	48 01 c2             	add    %rax,%rdx
   14eb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ebd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   14ec1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ec5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14ecc:	00 
   14ecd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ed1:	48 01 c2             	add    %rax,%rdx
   14ed4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ed8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   14edc:	eb 37                	jmp    14f15 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   14ede:	48 89 c7             	mov    %rax,%rdi
   14ee1:	e8 6a f2 fe ff       	call   4150 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   14ee6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14eea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14eee:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   14ef2:	48 89 ce             	mov    %rcx,%rsi
   14ef5:	48 89 c7             	mov    %rax,%rdi
   14ef8:	e8 c1 12 00 00       	call   161be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   14efd:	e8 2e f8 fe ff       	call   4730 <__cxa_rethrow@plt>
		  __catch(...)
   14f02:	48 89 c3             	mov    %rax,%rbx
   14f05:	e8 16 f9 fe ff       	call   4820 <__cxa_end_catch@plt>
   14f0a:	48 89 d8             	mov    %rbx,%rax
   14f0d:	48 89 c7             	mov    %rax,%rdi
   14f10:	e8 9b f9 fe ff       	call   48b0 <_Unwind_Resume@plt>
    }
   14f15:	90                   	nop
   14f16:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14f1a:	c9                   	leave
   14f1b:	c3                   	ret

0000000000014f1c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   14f1c:	55                   	push   %rbp
   14f1d:	48 89 e5             	mov    %rsp,%rbp
   14f20:	48 83 ec 20          	sub    $0x20,%rsp
   14f24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14f28:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   14f2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f30:	48 8b 40 08          	mov    0x8(%rax),%rax
   14f34:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   14f38:	48 c1 f8 03          	sar    $0x3,%rax
   14f3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14f40:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14f45:	74 32                	je     14f79 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   14f47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f4b:	48 89 c7             	mov    %rax,%rdi
   14f4e:	e8 17 08 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14f53:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   14f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f5a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14f5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f62:	48 89 ce             	mov    %rcx,%rsi
   14f65:	48 89 c7             	mov    %rax,%rdi
   14f68:	e8 0b 08 00 00       	call   15778 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   14f6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f71:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14f75:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   14f79:	90                   	nop
   14f7a:	c9                   	leave
   14f7b:	c3                   	ret

0000000000014f7c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   14f7c:	55                   	push   %rbp
   14f7d:	48 89 e5             	mov    %rsp,%rbp
   14f80:	48 83 ec 10          	sub    $0x10,%rsp
   14f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   14f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14f94:	48 89 d6             	mov    %rdx,%rsi
   14f97:	48 89 c7             	mov    %rax,%rdi
   14f9a:	e8 66 21 00 00       	call   17105 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   14f9f:	c9                   	leave
   14fa0:	c3                   	ret
   14fa1:	90                   	nop

0000000000014fa2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14fa2:	55                   	push   %rbp
   14fa3:	48 89 e5             	mov    %rsp,%rbp
   14fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14faa:	90                   	nop
   14fab:	5d                   	pop    %rbp
   14fac:	c3                   	ret
   14fad:	90                   	nop

0000000000014fae <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14fae:	55                   	push   %rbp
   14faf:	48 89 e5             	mov    %rsp,%rbp
   14fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fb6:	90                   	nop
   14fb7:	5d                   	pop    %rbp
   14fb8:	c3                   	ret
   14fb9:	90                   	nop

0000000000014fba <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   14fba:	55                   	push   %rbp
   14fbb:	48 89 e5             	mov    %rsp,%rbp
   14fbe:	48 83 ec 10          	sub    $0x10,%rsp
   14fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fca:	48 89 c7             	mov    %rax,%rdi
   14fcd:	e8 36 e5 ff ff       	call   13508 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   14fd2:	90                   	nop
   14fd3:	c9                   	leave
   14fd4:	c3                   	ret
   14fd5:	90                   	nop

0000000000014fd6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14fd6:	55                   	push   %rbp
   14fd7:	48 89 e5             	mov    %rsp,%rbp
   14fda:	48 83 ec 10          	sub    $0x10,%rsp
   14fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fe2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14fee:	48 89 d6             	mov    %rdx,%rsi
   14ff1:	48 89 c7             	mov    %rax,%rdi
   14ff4:	e8 2d 21 00 00       	call   17126 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   14ff9:	90                   	nop
   14ffa:	c9                   	leave
   14ffb:	c3                   	ret

0000000000014ffc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14ffc:	55                   	push   %rbp
   14ffd:	48 89 e5             	mov    %rsp,%rbp
   15000:	48 83 ec 10          	sub    $0x10,%rsp
   15004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   15008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1500c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15014:	48 8b 00             	mov    (%rax),%rax
   15017:	48 29 c2             	sub    %rax,%rdx
   1501a:	48 c1 fa 04          	sar    $0x4,%rdx
   1501e:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   15025:	e3 38 8e 
   15028:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   1502c:	48 89 c2             	mov    %rax,%rdx
   1502f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15033:	48 8b 08             	mov    (%rax),%rcx
   15036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1503a:	48 89 ce             	mov    %rcx,%rsi
   1503d:	48 89 c7             	mov    %rax,%rdi
   15040:	e8 13 21 00 00       	call   17158 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   15045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15049:	48 89 c7             	mov    %rax,%rdi
   1504c:	e8 69 ff ff ff       	call   14fba <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   15051:	90                   	nop
   15052:	c9                   	leave
   15053:	c3                   	ret

0000000000015054 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   15054:	55                   	push   %rbp
   15055:	48 89 e5             	mov    %rsp,%rbp
   15058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1505c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15060:	48 8b 00             	mov    (%rax),%rax
   15063:	5d                   	pop    %rbp
   15064:	c3                   	ret
   15065:	90                   	nop

0000000000015066 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   15066:	55                   	push   %rbp
   15067:	48 89 e5             	mov    %rsp,%rbp
   1506a:	53                   	push   %rbx
   1506b:	48 83 ec 18          	sub    $0x18,%rsp
   1506f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15073:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15077:	48 89 c7             	mov    %rax,%rdi
   1507a:	e8 d5 ff ff ff       	call   15054 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   1507f:	48 89 c3             	mov    %rax,%rbx
   15082:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15086:	48 89 c7             	mov    %rax,%rdi
   15089:	e8 00 21 00 00       	call   1718e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   1508e:	48 89 c2             	mov    %rax,%rdx
   15091:	48 89 d0             	mov    %rdx,%rax
   15094:	48 c1 e0 03          	shl    $0x3,%rax
   15098:	48 01 d0             	add    %rdx,%rax
   1509b:	48 c1 e0 04          	shl    $0x4,%rax
   1509f:	48 01 d8             	add    %rbx,%rax
   150a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   150a6:	c9                   	leave
   150a7:	c3                   	ret

00000000000150a8 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   150a8:	55                   	push   %rbp
   150a9:	48 89 e5             	mov    %rsp,%rbp
   150ac:	48 83 ec 10          	sub    $0x10,%rsp
   150b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   150b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   150bc:	48 89 c7             	mov    %rax,%rdi
   150bf:	e8 dc 20 00 00       	call   171a0 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   150c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150cc:	48 89 d6             	mov    %rdx,%rsi
   150cf:	48 89 c7             	mov    %rax,%rdi
   150d2:	e8 d4 20 00 00       	call   171ab <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   150d7:	c9                   	leave
   150d8:	c3                   	ret
   150d9:	90                   	nop

00000000000150da <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   150da:	55                   	push   %rbp
   150db:	48 89 e5             	mov    %rsp,%rbp
   150de:	53                   	push   %rbx
   150df:	48 83 ec 38          	sub    $0x38,%rsp
   150e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   150e7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   150eb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   150ef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   150f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   150f7:	48 89 d6             	mov    %rdx,%rsi
   150fa:	48 89 c7             	mov    %rax,%rdi
   150fd:	e8 a6 ff ff ff       	call   150a8 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   15102:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   15106:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1510a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1510e:	48 89 c7             	mov    %rax,%rdi
   15111:	e8 7e 00 00 00       	call   15194 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   15116:	48 89 c2             	mov    %rax,%rdx
   15119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1511d:	48 89 d6             	mov    %rdx,%rsi
   15120:	48 89 c7             	mov    %rax,%rdi
   15123:	e8 ae 20 00 00       	call   171d6 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   15128:	48 89 c6             	mov    %rax,%rsi
   1512b:	48 89 df             	mov    %rbx,%rdi
   1512e:	e8 03 21 00 00       	call   17236 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   15133:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15137:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1513a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1513e:	48 8b 08             	mov    (%rax),%rcx
   15141:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15145:	48 89 d0             	mov    %rdx,%rax
   15148:	48 c1 e0 03          	shl    $0x3,%rax
   1514c:	48 01 d0             	add    %rdx,%rax
   1514f:	48 c1 e0 04          	shl    $0x4,%rax
   15153:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   15157:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1515b:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1515f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15163:	48 89 c7             	mov    %rax,%rdi
   15166:	e8 29 00 00 00       	call   15194 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   1516b:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1516e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15172:	48 8b 10             	mov    (%rax),%rdx
   15175:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   15179:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1517d:	48 89 c7             	mov    %rax,%rdi
   15180:	e8 e4 20 00 00       	call   17269 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   15185:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15189:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1518d:	90                   	nop
   1518e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15192:	c9                   	leave
   15193:	c3                   	ret

0000000000015194 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15194:	55                   	push   %rbp
   15195:	48 89 e5             	mov    %rsp,%rbp
   15198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1519c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151a0:	5d                   	pop    %rbp
   151a1:	c3                   	ret

00000000000151a2 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   151a2:	55                   	push   %rbp
   151a3:	48 89 e5             	mov    %rsp,%rbp
   151a6:	48 83 ec 20          	sub    $0x20,%rsp
   151aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   151b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   151b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   151ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151be:	48 89 d6             	mov    %rdx,%rsi
   151c1:	48 89 c7             	mov    %rax,%rdi
   151c4:	e8 d1 20 00 00       	call   1729a <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   151c9:	90                   	nop
   151ca:	c9                   	leave
   151cb:	c3                   	ret

00000000000151cc <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   151cc:	55                   	push   %rbp
   151cd:	48 89 e5             	mov    %rsp,%rbp
   151d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   151d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151d8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   151dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151e0:	48 8b 00             	mov    (%rax),%rax
   151e3:	48 29 c2             	sub    %rax,%rdx
   151e6:	48 c1 fa 04          	sar    $0x4,%rdx
   151ea:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   151f1:	e3 38 8e 
   151f4:	48 0f af c2          	imul   %rdx,%rax
   151f8:	5d                   	pop    %rbp
   151f9:	c3                   	ret

00000000000151fa <_ZNSaIP12VkPipeline_TEC1Ev>:
   151fa:	55                   	push   %rbp
   151fb:	48 89 e5             	mov    %rsp,%rbp
   151fe:	48 83 ec 10          	sub    $0x10,%rsp
   15202:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1520a:	48 89 c7             	mov    %rax,%rdi
   1520d:	e8 ae 20 00 00       	call   172c0 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   15212:	90                   	nop
   15213:	c9                   	leave
   15214:	c3                   	ret
   15215:	90                   	nop

0000000000015216 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   15216:	55                   	push   %rbp
   15217:	48 89 e5             	mov    %rsp,%rbp
   1521a:	48 83 ec 10          	sub    $0x10,%rsp
   1521e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15226:	48 89 c7             	mov    %rax,%rdi
   15229:	e8 9e 20 00 00       	call   172cc <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   1522e:	90                   	nop
   1522f:	c9                   	leave
   15230:	c3                   	ret
   15231:	90                   	nop

0000000000015232 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   15232:	55                   	push   %rbp
   15233:	48 89 e5             	mov    %rsp,%rbp
   15236:	53                   	push   %rbx
   15237:	48 83 ec 28          	sub    $0x28,%rsp
   1523b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1523f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15243:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   15247:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1524b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1524f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15253:	48 89 d6             	mov    %rdx,%rsi
   15256:	48 89 c7             	mov    %rax,%rdi
   15259:	e8 79 20 00 00       	call   172d7 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   1525e:	48 89 c1             	mov    %rax,%rcx
   15261:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15265:	48 89 c2             	mov    %rax,%rdx
   15268:	48 89 ce             	mov    %rcx,%rsi
   1526b:	48 89 df             	mov    %rbx,%rdi
   1526e:	e8 c5 20 00 00       	call   17338 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   15273:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15277:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1527b:	48 89 d6             	mov    %rdx,%rsi
   1527e:	48 89 c7             	mov    %rax,%rdi
   15281:	e8 10 21 00 00       	call   17396 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   15286:	eb 1a                	jmp    152a2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   15288:	48 89 c3             	mov    %rax,%rbx
   1528b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1528f:	48 89 c7             	mov    %rax,%rdi
   15292:	e8 59 00 00 00       	call   152f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   15297:	48 89 d8             	mov    %rbx,%rax
   1529a:	48 89 c7             	mov    %rax,%rdi
   1529d:	e8 0e f6 fe ff       	call   48b0 <_Unwind_Resume@plt>
   152a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   152a6:	c9                   	leave
   152a7:	c3                   	ret

00000000000152a8 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   152a8:	55                   	push   %rbp
   152a9:	48 89 e5             	mov    %rsp,%rbp
   152ac:	48 83 ec 10          	sub    $0x10,%rsp
   152b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   152b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152b8:	48 8b 10             	mov    (%rax),%rdx
   152bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152bf:	48 89 d6             	mov    %rdx,%rsi
   152c2:	48 89 c7             	mov    %rax,%rdi
   152c5:	e8 0c 21 00 00       	call   173d6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   152ca:	c9                   	leave
   152cb:	c3                   	ret

00000000000152cc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   152cc:	55                   	push   %rbp
   152cd:	48 89 e5             	mov    %rsp,%rbp
   152d0:	48 83 ec 10          	sub    $0x10,%rsp
   152d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   152d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152dc:	48 8b 10             	mov    (%rax),%rdx
   152df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152e3:	48 89 d6             	mov    %rdx,%rsi
   152e6:	48 89 c7             	mov    %rax,%rdi
   152e9:	e8 fa 20 00 00       	call   173e8 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   152ee:	c9                   	leave
   152ef:	c3                   	ret

00000000000152f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   152f0:	55                   	push   %rbp
   152f1:	48 89 e5             	mov    %rsp,%rbp
   152f4:	48 83 ec 10          	sub    $0x10,%rsp
   152f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   152fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15300:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15308:	48 8b 00             	mov    (%rax),%rax
   1530b:	48 29 c2             	sub    %rax,%rdx
   1530e:	48 89 d0             	mov    %rdx,%rax
   15311:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   15315:	48 89 c2             	mov    %rax,%rdx
   15318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1531c:	48 8b 08             	mov    (%rax),%rcx
   1531f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15323:	48 89 ce             	mov    %rcx,%rsi
   15326:	48 89 c7             	mov    %rax,%rdi
   15329:	e8 f2 20 00 00       	call   17420 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1532e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15332:	48 89 c7             	mov    %rax,%rdi
   15335:	e8 b6 e2 ff ff       	call   135f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1533a:	90                   	nop
   1533b:	c9                   	leave
   1533c:	c3                   	ret
   1533d:	90                   	nop

000000000001533e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1533e:	55                   	push   %rbp
   1533f:	48 89 e5             	mov    %rsp,%rbp
   15342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1534a:	5d                   	pop    %rbp
   1534b:	c3                   	ret

000000000001534c <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1534c:	55                   	push   %rbp
   1534d:	48 89 e5             	mov    %rsp,%rbp
   15350:	48 83 ec 20          	sub    $0x20,%rsp
   15354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15358:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1535c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15360:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15368:	48 89 d6             	mov    %rdx,%rsi
   1536b:	48 89 c7             	mov    %rax,%rdi
   1536e:	e8 e2 20 00 00       	call   17455 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   15373:	90                   	nop
   15374:	c9                   	leave
   15375:	c3                   	ret

0000000000015376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15376:	55                   	push   %rbp
   15377:	48 89 e5             	mov    %rsp,%rbp
   1537a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1537e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15382:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1538a:	48 8b 00             	mov    (%rax),%rax
   1538d:	48 29 c2             	sub    %rax,%rdx
   15390:	48 89 d0             	mov    %rdx,%rax
   15393:	48 c1 f8 03          	sar    $0x3,%rax
   15397:	5d                   	pop    %rbp
   15398:	c3                   	ret
   15399:	90                   	nop

000000000001539a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1539a:	55                   	push   %rbp
   1539b:	48 89 e5             	mov    %rsp,%rbp
   1539e:	53                   	push   %rbx
   1539f:	48 83 ec 38          	sub    $0x38,%rsp
   153a3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   153a7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   153ab:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   153b0:	0f 84 e7 01 00 00    	je     1559d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   153b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   153ba:	48 89 c7             	mov    %rax,%rdi
   153bd:	e8 b4 ff ff ff       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   153c2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   153c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   153ca:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   153ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   153d2:	48 8b 40 08          	mov    0x8(%rax),%rax
   153d6:	48 29 c2             	sub    %rax,%rdx
   153d9:	48 89 d0             	mov    %rdx,%rax
   153dc:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   153e0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   153e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   153e8:	48 89 c7             	mov    %rax,%rdi
   153eb:	e8 8c 20 00 00       	call   1747c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   153f0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   153f4:	72 16                	jb     1540c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   153f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   153fa:	48 89 c7             	mov    %rax,%rdi
   153fd:	e8 7a 20 00 00       	call   1747c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   15402:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15406:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1540a:	73 07                	jae    15413 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   1540c:	b8 01 00 00 00       	mov    $0x1,%eax
   15411:	eb 05                	jmp    15418 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   15413:	b8 00 00 00 00       	mov    $0x0,%eax
   15418:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1541a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1541e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15422:	72 33                	jb     15457 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   15424:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15428:	48 89 c7             	mov    %rax,%rdi
   1542b:	e8 50 0e 00 00       	call   16280 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15430:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15433:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15437:	48 8b 40 08          	mov    0x8(%rax),%rax
   1543b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1543f:	48 89 ce             	mov    %rcx,%rsi
   15442:	48 89 c7             	mov    %rax,%rdi
   15445:	e8 54 20 00 00       	call   1749e <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1544a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1544e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   15452:	e9 46 01 00 00       	jmp    1559d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15457:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1545b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1545f:	48 8d 15 3a ad 00 00 	lea    0xad3a(%rip),%rdx        # 201a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   15466:	48 89 ce             	mov    %rcx,%rsi
   15469:	48 89 c7             	mov    %rax,%rdi
   1546c:	e8 57 20 00 00       	call   174c8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   15471:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   15475:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15479:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1547d:	48 89 d6             	mov    %rdx,%rsi
   15480:	48 89 c7             	mov    %rax,%rdi
   15483:	e8 08 21 00 00       	call   17590 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   15488:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1548c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15490:	48 89 c7             	mov    %rax,%rdi
   15493:	e8 e8 0d 00 00       	call   16280 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15498:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1549b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1549f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   154a6:	00 
   154a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   154ab:	48 01 c1             	add    %rax,%rcx
   154ae:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   154b2:	48 89 c6             	mov    %rax,%rsi
   154b5:	48 89 cf             	mov    %rcx,%rdi
   154b8:	e8 e1 1f 00 00       	call   1749e <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   154bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154c1:	48 89 c7             	mov    %rax,%rdi
   154c4:	e8 b7 0d 00 00       	call   16280 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   154c9:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   154cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154d0:	48 8b 70 08          	mov    0x8(%rax),%rsi
   154d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   154d8:	48 8b 00             	mov    (%rax),%rax
   154db:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   154df:	48 89 c7             	mov    %rax,%rdi
   154e2:	e8 dc 20 00 00       	call   175c3 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   154e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   154eb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   154ef:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   154f3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   154f7:	48 8b 12             	mov    (%rdx),%rdx
   154fa:	48 29 d1             	sub    %rdx,%rcx
   154fd:	48 c1 f9 03          	sar    $0x3,%rcx
   15501:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15504:	48 89 d6             	mov    %rdx,%rsi
   15507:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1550b:	48 8b 0a             	mov    (%rdx),%rcx
   1550e:	48 89 f2             	mov    %rsi,%rdx
   15511:	48 89 ce             	mov    %rcx,%rsi
   15514:	48 89 c7             	mov    %rax,%rdi
   15517:	e8 2e 0d 00 00       	call   1624a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1551c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15520:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15524:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15527:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1552b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1552f:	48 01 d0             	add    %rdx,%rax
   15532:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15539:	00 
   1553a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1553e:	48 01 c2             	add    %rax,%rdx
   15541:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15545:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15549:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1554d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15554:	00 
   15555:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15559:	48 01 c2             	add    %rax,%rdx
   1555c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15560:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15564:	eb 37                	jmp    1559d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15566:	48 89 c7             	mov    %rax,%rdi
   15569:	e8 e2 eb fe ff       	call   4150 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1556e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15572:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15576:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1557a:	48 89 ce             	mov    %rcx,%rsi
   1557d:	48 89 c7             	mov    %rax,%rdi
   15580:	e8 c5 0c 00 00       	call   1624a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15585:	e8 a6 f1 fe ff       	call   4730 <__cxa_rethrow@plt>
		  __catch(...)
   1558a:	48 89 c3             	mov    %rax,%rbx
   1558d:	e8 8e f2 fe ff       	call   4820 <__cxa_end_catch@plt>
   15592:	48 89 d8             	mov    %rbx,%rax
   15595:	48 89 c7             	mov    %rax,%rdi
   15598:	e8 13 f3 fe ff       	call   48b0 <_Unwind_Resume@plt>
    }
   1559d:	90                   	nop
   1559e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   155a2:	c9                   	leave
   155a3:	c3                   	ret

00000000000155a4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   155a4:	55                   	push   %rbp
   155a5:	48 89 e5             	mov    %rsp,%rbp
   155a8:	48 83 ec 20          	sub    $0x20,%rsp
   155ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   155b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   155b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155b8:	48 8b 40 08          	mov    0x8(%rax),%rax
   155bc:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   155c0:	48 c1 f8 03          	sar    $0x3,%rax
   155c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   155c8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   155cd:	74 32                	je     15601 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   155cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155d3:	48 89 c7             	mov    %rax,%rdi
   155d6:	e8 a5 0c 00 00       	call   16280 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   155db:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   155de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155e2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   155e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   155ea:	48 89 ce             	mov    %rcx,%rsi
   155ed:	48 89 c7             	mov    %rax,%rdi
   155f0:	e8 99 0c 00 00       	call   1628e <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   155f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   155fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15601:	90                   	nop
   15602:	c9                   	leave
   15603:	c3                   	ret

0000000000015604 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15604:	55                   	push   %rbp
   15605:	48 89 e5             	mov    %rsp,%rbp
   15608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1560c:	90                   	nop
   1560d:	5d                   	pop    %rbp
   1560e:	c3                   	ret
   1560f:	90                   	nop

0000000000015610 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15610:	55                   	push   %rbp
   15611:	48 89 e5             	mov    %rsp,%rbp
   15614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15618:	90                   	nop
   15619:	5d                   	pop    %rbp
   1561a:	c3                   	ret
   1561b:	90                   	nop

000000000001561c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1561c:	55                   	push   %rbp
   1561d:	48 89 e5             	mov    %rsp,%rbp
   15620:	48 83 ec 10          	sub    $0x10,%rsp
   15624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1562c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15630:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15634:	48 89 d6             	mov    %rdx,%rsi
   15637:	48 89 c7             	mov    %rax,%rdi
   1563a:	e8 b7 1f 00 00       	call   175f6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   1563f:	90                   	nop
   15640:	c9                   	leave
   15641:	c3                   	ret

0000000000015642 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   15642:	55                   	push   %rbp
   15643:	48 89 e5             	mov    %rsp,%rbp
   15646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1564a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1564e:	48 8b 00             	mov    (%rax),%rax
   15651:	5d                   	pop    %rbp
   15652:	c3                   	ret
   15653:	90                   	nop

0000000000015654 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   15654:	55                   	push   %rbp
   15655:	48 89 e5             	mov    %rsp,%rbp
   15658:	53                   	push   %rbx
   15659:	48 83 ec 18          	sub    $0x18,%rsp
   1565d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15661:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15665:	48 89 c7             	mov    %rax,%rdi
   15668:	e8 d5 ff ff ff       	call   15642 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   1566d:	48 89 c3             	mov    %rax,%rbx
   15670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15674:	48 89 c7             	mov    %rax,%rdi
   15677:	e8 ac 1f 00 00       	call   17628 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   1567c:	48 c1 e0 03          	shl    $0x3,%rax
   15680:	48 01 d8             	add    %rbx,%rax
   15683:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15687:	c9                   	leave
   15688:	c3                   	ret

0000000000015689 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   15689:	55                   	push   %rbp
   1568a:	48 89 e5             	mov    %rsp,%rbp
   1568d:	48 83 ec 10          	sub    $0x10,%rsp
   15691:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15695:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   15699:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1569d:	48 89 c7             	mov    %rax,%rdi
   156a0:	e8 95 1f 00 00       	call   1763a <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   156a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   156ad:	48 89 d6             	mov    %rdx,%rsi
   156b0:	48 89 c7             	mov    %rax,%rdi
   156b3:	e8 8d 1f 00 00       	call   17645 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   156b8:	c9                   	leave
   156b9:	c3                   	ret

00000000000156ba <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   156ba:	55                   	push   %rbp
   156bb:	48 89 e5             	mov    %rsp,%rbp
   156be:	53                   	push   %rbx
   156bf:	48 83 ec 38          	sub    $0x38,%rsp
   156c3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   156c7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   156cb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   156cf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   156d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   156d7:	48 89 d6             	mov    %rdx,%rsi
   156da:	48 89 c7             	mov    %rax,%rdi
   156dd:	e8 a7 ff ff ff       	call   15689 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   156e2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   156e6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   156ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   156ee:	48 89 c7             	mov    %rax,%rdi
   156f1:	e8 74 00 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   156f6:	48 89 c2             	mov    %rax,%rdx
   156f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156fd:	48 89 d6             	mov    %rdx,%rsi
   15700:	48 89 c7             	mov    %rax,%rdi
   15703:	e8 57 1f 00 00       	call   1765f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   15708:	48 89 c6             	mov    %rax,%rsi
   1570b:	48 89 df             	mov    %rbx,%rdi
   1570e:	e8 8d 19 00 00       	call   170a0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   15713:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15717:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1571a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1571e:	48 8b 00             	mov    (%rax),%rax
   15721:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15725:	48 c1 e2 03          	shl    $0x3,%rdx
   15729:	48 01 c2             	add    %rax,%rdx
   1572c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15730:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   15734:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15738:	48 89 c7             	mov    %rax,%rdi
   1573b:	e8 2a 00 00 00       	call   1576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15740:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   15743:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15747:	48 8b 10             	mov    (%rax),%rdx
   1574a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1574e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15752:	48 89 c7             	mov    %rax,%rdi
   15755:	e8 65 1f 00 00       	call   176bf <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   1575a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1575e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   15762:	90                   	nop
   15763:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15767:	c9                   	leave
   15768:	c3                   	ret
   15769:	90                   	nop

000000000001576a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1576a:	55                   	push   %rbp
   1576b:	48 89 e5             	mov    %rsp,%rbp
   1576e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15776:	5d                   	pop    %rbp
   15777:	c3                   	ret

0000000000015778 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15778:	55                   	push   %rbp
   15779:	48 89 e5             	mov    %rsp,%rbp
   1577c:	48 83 ec 20          	sub    $0x20,%rsp
   15780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15788:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1578c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15794:	48 89 d6             	mov    %rdx,%rsi
   15797:	48 89 c7             	mov    %rax,%rdi
   1579a:	e8 51 1f 00 00       	call   176f0 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   1579f:	90                   	nop
   157a0:	c9                   	leave
   157a1:	c3                   	ret

00000000000157a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   157a2:	55                   	push   %rbp
   157a3:	48 89 e5             	mov    %rsp,%rbp
   157a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   157ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157b2:	5d                   	pop    %rbp
   157b3:	c3                   	ret

00000000000157b4 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   157b4:	55                   	push   %rbp
   157b5:	48 89 e5             	mov    %rsp,%rbp
   157b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   157c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157c4:	48 8b 10             	mov    (%rax),%rdx
   157c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157cb:	48 89 10             	mov    %rdx,(%rax)
   157ce:	90                   	nop
   157cf:	5d                   	pop    %rbp
   157d0:	c3                   	ret
   157d1:	90                   	nop

00000000000157d2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   157d2:	55                   	push   %rbp
   157d3:	48 89 e5             	mov    %rsp,%rbp
   157d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   157da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157de:	5d                   	pop    %rbp
   157df:	c3                   	ret

00000000000157e0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   157e0:	55                   	push   %rbp
   157e1:	48 89 e5             	mov    %rsp,%rbp
   157e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   157ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157f0:	48 8b 10             	mov    (%rax),%rdx
   157f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157f7:	48 89 10             	mov    %rdx,(%rax)
   157fa:	90                   	nop
   157fb:	5d                   	pop    %rbp
   157fc:	c3                   	ret
   157fd:	90                   	nop

00000000000157fe <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   157fe:	55                   	push   %rbp
   157ff:	48 89 e5             	mov    %rsp,%rbp
   15802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1580a:	5d                   	pop    %rbp
   1580b:	c3                   	ret

000000000001580c <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1580c:	55                   	push   %rbp
   1580d:	48 89 e5             	mov    %rsp,%rbp
   15810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15814:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   15818:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1581c:	5d                   	pop    %rbp
   1581d:	c3                   	ret

000000000001581e <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   1581e:	55                   	push   %rbp
   1581f:	48 89 e5             	mov    %rsp,%rbp
   15822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1582a:	5d                   	pop    %rbp
   1582b:	c3                   	ret

000000000001582c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   1582c:	55                   	push   %rbp
   1582d:	48 89 e5             	mov    %rsp,%rbp
   15830:	53                   	push   %rbx
   15831:	48 83 ec 38          	sub    $0x38,%rsp
   15835:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15839:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   1583d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15841:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15845:	48 89 d6             	mov    %rdx,%rsi
   15848:	48 89 c7             	mov    %rax,%rdi
   1584b:	e8 c6 1e 00 00       	call   17716 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>
   15850:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   15854:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15858:	48 89 d6             	mov    %rdx,%rsi
   1585b:	48 89 c7             	mov    %rax,%rdi
   1585e:	e8 e7 1e 00 00       	call   1774a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   15863:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15867:	48 89 c7             	mov    %rax,%rdi
   1586a:	e8 89 03 ff ff       	call   5bf8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   1586f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15873:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15877:	48 89 d6             	mov    %rdx,%rsi
   1587a:	48 89 c7             	mov    %rax,%rdi
   1587d:	e8 ee 1e 00 00       	call   17770 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   15882:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15886:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1588a:	48 89 d6             	mov    %rdx,%rsi
   1588d:	48 89 c7             	mov    %rax,%rdi
   15890:	e8 db 1e 00 00       	call   17770 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   15895:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15899:	48 89 c7             	mov    %rax,%rdi
   1589c:	e8 b5 05 ff ff       	call   5e56 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   158a1:	48 89 c3             	mov    %rax,%rbx
   158a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   158a8:	48 89 c7             	mov    %rax,%rdi
   158ab:	e8 a6 05 ff ff       	call   5e56 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   158b0:	48 89 de             	mov    %rbx,%rsi
   158b3:	48 89 c7             	mov    %rax,%rdi
   158b6:	e8 0d 1f 00 00       	call   177c8 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>
      }
   158bb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   158bf:	48 89 c7             	mov    %rax,%rdi
   158c2:	e8 c3 03 ff ff       	call   5c8a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   158c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   158cb:	c9                   	leave
   158cc:	c3                   	ret
   158cd:	90                   	nop

00000000000158ce <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   158ce:	55                   	push   %rbp
   158cf:	48 89 e5             	mov    %rsp,%rbp
   158d2:	53                   	push   %rbx
   158d3:	48 83 ec 38          	sub    $0x38,%rsp
   158d7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   158db:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   158df:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   158e4:	0f 84 e7 01 00 00    	je     15ad1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   158ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   158ee:	48 89 c7             	mov    %rax,%rdi
   158f1:	e8 0e e6 ff ff       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   158f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   158fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   158fe:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   15902:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15906:	48 8b 40 08          	mov    0x8(%rax),%rax
   1590a:	48 29 c2             	sub    %rax,%rdx
   1590d:	48 89 d0             	mov    %rdx,%rax
   15910:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15914:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   15918:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1591c:	48 89 c7             	mov    %rax,%rdi
   1591f:	e8 c4 1e 00 00       	call   177e8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   15924:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15928:	72 16                	jb     15940 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   1592a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1592e:	48 89 c7             	mov    %rax,%rdi
   15931:	e8 b2 1e 00 00       	call   177e8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   15936:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1593a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1593e:	73 07                	jae    15947 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   15940:	b8 01 00 00 00       	mov    $0x1,%eax
   15945:	eb 05                	jmp    1594c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   15947:	b8 00 00 00 00       	mov    $0x0,%eax
   1594c:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1594e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15952:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15956:	72 33                	jb     1598b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   15958:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1595c:	48 89 c7             	mov    %rax,%rdi
   1595f:	e8 c8 05 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15964:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15967:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1596b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1596f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15973:	48 89 ce             	mov    %rcx,%rsi
   15976:	48 89 c7             	mov    %rax,%rdi
   15979:	e8 8c 1e 00 00       	call   1780a <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1597e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15982:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   15986:	e9 46 01 00 00       	jmp    15ad1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1598b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1598f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15993:	48 8d 15 06 a8 00 00 	lea    0xa806(%rip),%rdx        # 201a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   1599a:	48 89 ce             	mov    %rcx,%rsi
   1599d:	48 89 c7             	mov    %rax,%rdi
   159a0:	e8 8f 1e 00 00       	call   17834 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   159a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   159a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   159ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   159b1:	48 89 d6             	mov    %rdx,%rsi
   159b4:	48 89 c7             	mov    %rax,%rdi
   159b7:	e8 40 1f 00 00       	call   178fc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   159bc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   159c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   159c4:	48 89 c7             	mov    %rax,%rdi
   159c7:	e8 60 05 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   159cc:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   159cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159d3:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   159da:	00 
   159db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   159df:	48 01 c1             	add    %rax,%rcx
   159e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   159e6:	48 89 c6             	mov    %rax,%rsi
   159e9:	48 89 cf             	mov    %rcx,%rdi
   159ec:	e8 19 1e 00 00       	call   1780a <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   159f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   159f5:	48 89 c7             	mov    %rax,%rdi
   159f8:	e8 2f 05 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   159fd:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   15a00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a04:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15a08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a0c:	48 8b 00             	mov    (%rax),%rax
   15a0f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15a13:	48 89 c7             	mov    %rax,%rdi
   15a16:	e8 14 1f 00 00       	call   1792f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   15a1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   15a1f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15a23:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   15a27:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15a2b:	48 8b 12             	mov    (%rdx),%rdx
   15a2e:	48 29 d1             	sub    %rdx,%rcx
   15a31:	48 c1 f9 03          	sar    $0x3,%rcx
   15a35:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15a38:	48 89 d6             	mov    %rdx,%rsi
   15a3b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15a3f:	48 8b 0a             	mov    (%rdx),%rcx
   15a42:	48 89 f2             	mov    %rsi,%rdx
   15a45:	48 89 ce             	mov    %rcx,%rsi
   15a48:	48 89 c7             	mov    %rax,%rdi
   15a4b:	e8 96 08 00 00       	call   162e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   15a50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a54:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15a58:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15a5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15a5f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15a63:	48 01 d0             	add    %rdx,%rax
   15a66:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15a6d:	00 
   15a6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15a72:	48 01 c2             	add    %rax,%rdx
   15a75:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a79:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15a7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a81:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15a88:	00 
   15a89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15a8d:	48 01 c2             	add    %rax,%rdx
   15a90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15a94:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15a98:	eb 37                	jmp    15ad1 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15a9a:	48 89 c7             	mov    %rax,%rdi
   15a9d:	e8 ae e6 fe ff       	call   4150 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   15aa2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15aa6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15aaa:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   15aae:	48 89 ce             	mov    %rcx,%rsi
   15ab1:	48 89 c7             	mov    %rax,%rdi
   15ab4:	e8 2d 08 00 00       	call   162e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15ab9:	e8 72 ec fe ff       	call   4730 <__cxa_rethrow@plt>
		  __catch(...)
   15abe:	48 89 c3             	mov    %rax,%rbx
   15ac1:	e8 5a ed fe ff       	call   4820 <__cxa_end_catch@plt>
   15ac6:	48 89 d8             	mov    %rbx,%rax
   15ac9:	48 89 c7             	mov    %rax,%rdi
   15acc:	e8 df ed fe ff       	call   48b0 <_Unwind_Resume@plt>
    }
   15ad1:	90                   	nop
   15ad2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15ad6:	c9                   	leave
   15ad7:	c3                   	ret

0000000000015ad8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   15ad8:	55                   	push   %rbp
   15ad9:	48 89 e5             	mov    %rsp,%rbp
   15adc:	48 83 ec 20          	sub    $0x20,%rsp
   15ae0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15ae4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   15ae8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15aec:	48 8b 40 08          	mov    0x8(%rax),%rax
   15af0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   15af4:	48 c1 f8 03          	sar    $0x3,%rax
   15af8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15afc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15b01:	74 32                	je     15b35 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   15b03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b07:	48 89 c7             	mov    %rax,%rdi
   15b0a:	e8 1d 04 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15b0f:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   15b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b16:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15b1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b1e:	48 89 ce             	mov    %rcx,%rsi
   15b21:	48 89 c7             	mov    %rax,%rdi
   15b24:	e8 11 04 00 00       	call   15f3a <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   15b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15b31:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15b35:	90                   	nop
   15b36:	c9                   	leave
   15b37:	c3                   	ret

0000000000015b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15b38:	55                   	push   %rbp
   15b39:	48 89 e5             	mov    %rsp,%rbp
   15b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   15b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b44:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b4c:	48 8b 00             	mov    (%rax),%rax
   15b4f:	48 29 c2             	sub    %rax,%rdx
   15b52:	48 89 d0             	mov    %rdx,%rax
   15b55:	48 c1 f8 03          	sar    $0x3,%rax
   15b59:	5d                   	pop    %rbp
   15b5a:	c3                   	ret
   15b5b:	90                   	nop

0000000000015b5c <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   15b5c:	55                   	push   %rbp
   15b5d:	48 89 e5             	mov    %rsp,%rbp
   15b60:	53                   	push   %rbx
   15b61:	48 83 ec 38          	sub    $0x38,%rsp
   15b65:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   15b69:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   15b6d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   15b72:	0f 84 e7 01 00 00    	je     15d5f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   15b78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b7c:	48 89 c7             	mov    %rax,%rdi
   15b7f:	e8 b4 ff ff ff       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   15b84:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15b88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b8c:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   15b90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15b94:	48 8b 40 08          	mov    0x8(%rax),%rax
   15b98:	48 29 c2             	sub    %rax,%rdx
   15b9b:	48 89 d0             	mov    %rdx,%rax
   15b9e:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   15ba2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   15ba6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15baa:	48 89 c7             	mov    %rax,%rdi
   15bad:	e8 b0 1d 00 00       	call   17962 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   15bb2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15bb6:	72 16                	jb     15bce <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   15bb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15bbc:	48 89 c7             	mov    %rax,%rdi
   15bbf:	e8 9e 1d 00 00       	call   17962 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   15bc4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15bc8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15bcc:	73 07                	jae    15bd5 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   15bce:	b8 01 00 00 00       	mov    $0x1,%eax
   15bd3:	eb 05                	jmp    15bda <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   15bd5:	b8 00 00 00 00       	mov    $0x0,%eax
   15bda:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   15bdc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15be0:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   15be4:	72 33                	jb     15c19 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   15be6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15bea:	48 89 c7             	mov    %rax,%rdi
   15bed:	e8 b6 07 00 00       	call   163a8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15bf2:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   15bf5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15bf9:	48 8b 40 08          	mov    0x8(%rax),%rax
   15bfd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15c01:	48 89 ce             	mov    %rcx,%rsi
   15c04:	48 89 c7             	mov    %rax,%rdi
   15c07:	e8 78 1d 00 00       	call   17984 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   15c0c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15c10:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   15c14:	e9 46 01 00 00       	jmp    15d5f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   15c19:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   15c1d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c21:	48 8d 15 78 a5 00 00 	lea    0xa578(%rip),%rdx        # 201a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   15c28:	48 89 ce             	mov    %rcx,%rsi
   15c2b:	48 89 c7             	mov    %rax,%rdi
   15c2e:	e8 7b 1d 00 00       	call   179ae <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   15c33:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   15c37:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15c3f:	48 89 d6             	mov    %rdx,%rsi
   15c42:	48 89 c7             	mov    %rax,%rdi
   15c45:	e8 2c 1e 00 00       	call   17a76 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   15c4a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   15c4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c52:	48 89 c7             	mov    %rax,%rdi
   15c55:	e8 4e 07 00 00       	call   163a8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15c5a:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   15c5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c61:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   15c68:	00 
   15c69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15c6d:	48 01 c1             	add    %rax,%rcx
   15c70:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15c74:	48 89 c6             	mov    %rax,%rsi
   15c77:	48 89 cf             	mov    %rcx,%rdi
   15c7a:	e8 05 1d 00 00       	call   17984 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   15c7f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c83:	48 89 c7             	mov    %rax,%rdi
   15c86:	e8 1d 07 00 00       	call   163a8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15c8b:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   15c8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c92:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15c96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c9a:	48 8b 00             	mov    (%rax),%rax
   15c9d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15ca1:	48 89 c7             	mov    %rax,%rdi
   15ca4:	e8 00 1e 00 00       	call   17aa9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   15ca9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   15cad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15cb1:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   15cb5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15cb9:	48 8b 12             	mov    (%rdx),%rdx
   15cbc:	48 29 d1             	sub    %rdx,%rcx
   15cbf:	48 c1 f9 03          	sar    $0x3,%rcx
   15cc3:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   15cc6:	48 89 d6             	mov    %rdx,%rsi
   15cc9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15ccd:	48 8b 0a             	mov    (%rdx),%rcx
   15cd0:	48 89 f2             	mov    %rsi,%rdx
   15cd3:	48 89 ce             	mov    %rcx,%rsi
   15cd6:	48 89 c7             	mov    %rax,%rdi
   15cd9:	e8 94 06 00 00       	call   16372 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   15cde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15ce2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15ce6:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   15ce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ced:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15cf1:	48 01 d0             	add    %rdx,%rax
   15cf4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15cfb:	00 
   15cfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15d00:	48 01 c2             	add    %rax,%rdx
   15d03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d07:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   15d0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d0f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15d16:	00 
   15d17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15d1b:	48 01 c2             	add    %rax,%rdx
   15d1e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d22:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   15d26:	eb 37                	jmp    15d5f <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   15d28:	48 89 c7             	mov    %rax,%rdi
   15d2b:	e8 20 e4 fe ff       	call   4150 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   15d30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d34:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15d38:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   15d3c:	48 89 ce             	mov    %rcx,%rsi
   15d3f:	48 89 c7             	mov    %rax,%rdi
   15d42:	e8 2b 06 00 00       	call   16372 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   15d47:	e8 e4 e9 fe ff       	call   4730 <__cxa_rethrow@plt>
		  __catch(...)
   15d4c:	48 89 c3             	mov    %rax,%rbx
   15d4f:	e8 cc ea fe ff       	call   4820 <__cxa_end_catch@plt>
   15d54:	48 89 d8             	mov    %rbx,%rax
   15d57:	48 89 c7             	mov    %rax,%rdi
   15d5a:	e8 51 eb fe ff       	call   48b0 <_Unwind_Resume@plt>
    }
   15d5f:	90                   	nop
   15d60:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15d64:	c9                   	leave
   15d65:	c3                   	ret

0000000000015d66 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   15d66:	55                   	push   %rbp
   15d67:	48 89 e5             	mov    %rsp,%rbp
   15d6a:	48 83 ec 20          	sub    $0x20,%rsp
   15d6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15d72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   15d76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d7a:	48 8b 40 08          	mov    0x8(%rax),%rax
   15d7e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   15d82:	48 c1 f8 03          	sar    $0x3,%rax
   15d86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15d8a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15d8f:	74 32                	je     15dc3 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   15d91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d95:	48 89 c7             	mov    %rax,%rdi
   15d98:	e8 0b 06 00 00       	call   163a8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15d9d:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   15da0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15da4:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15da8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15dac:	48 89 ce             	mov    %rcx,%rsi
   15daf:	48 89 c7             	mov    %rax,%rdi
   15db2:	e8 ff 05 00 00       	call   163b6 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   15db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15dbb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15dbf:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   15dc3:	90                   	nop
   15dc4:	c9                   	leave
   15dc5:	c3                   	ret

0000000000015dc6 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15dc6:	55                   	push   %rbp
   15dc7:	48 89 e5             	mov    %rsp,%rbp
   15dca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15dce:	90                   	nop
   15dcf:	5d                   	pop    %rbp
   15dd0:	c3                   	ret
   15dd1:	90                   	nop

0000000000015dd2 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15dd2:	55                   	push   %rbp
   15dd3:	48 89 e5             	mov    %rsp,%rbp
   15dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15dda:	90                   	nop
   15ddb:	5d                   	pop    %rbp
   15ddc:	c3                   	ret
   15ddd:	90                   	nop

0000000000015dde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15dde:	55                   	push   %rbp
   15ddf:	48 89 e5             	mov    %rsp,%rbp
   15de2:	48 83 ec 10          	sub    $0x10,%rsp
   15de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15dea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   15dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15df2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15df6:	48 89 d6             	mov    %rdx,%rsi
   15df9:	48 89 c7             	mov    %rax,%rdi
   15dfc:	e8 db 1c 00 00       	call   17adc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   15e01:	90                   	nop
   15e02:	c9                   	leave
   15e03:	c3                   	ret

0000000000015e04 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   15e04:	55                   	push   %rbp
   15e05:	48 89 e5             	mov    %rsp,%rbp
   15e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e10:	48 8b 00             	mov    (%rax),%rax
   15e13:	5d                   	pop    %rbp
   15e14:	c3                   	ret
   15e15:	90                   	nop

0000000000015e16 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   15e16:	55                   	push   %rbp
   15e17:	48 89 e5             	mov    %rsp,%rbp
   15e1a:	53                   	push   %rbx
   15e1b:	48 83 ec 18          	sub    $0x18,%rsp
   15e1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e27:	48 89 c7             	mov    %rax,%rdi
   15e2a:	e8 d5 ff ff ff       	call   15e04 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   15e2f:	48 89 c3             	mov    %rax,%rbx
   15e32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e36:	48 89 c7             	mov    %rax,%rdi
   15e39:	e8 d0 1c 00 00       	call   17b0e <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   15e3e:	48 c1 e0 03          	shl    $0x3,%rax
   15e42:	48 01 d8             	add    %rbx,%rax
   15e45:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15e49:	c9                   	leave
   15e4a:	c3                   	ret

0000000000015e4b <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   15e4b:	55                   	push   %rbp
   15e4c:	48 89 e5             	mov    %rsp,%rbp
   15e4f:	48 83 ec 10          	sub    $0x10,%rsp
   15e53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   15e5b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15e5f:	48 89 c7             	mov    %rax,%rdi
   15e62:	e8 b9 1c 00 00       	call   17b20 <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   15e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15e6f:	48 89 d6             	mov    %rdx,%rsi
   15e72:	48 89 c7             	mov    %rax,%rdi
   15e75:	e8 b1 1c 00 00       	call   17b2b <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   15e7a:	c9                   	leave
   15e7b:	c3                   	ret

0000000000015e7c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   15e7c:	55                   	push   %rbp
   15e7d:	48 89 e5             	mov    %rsp,%rbp
   15e80:	53                   	push   %rbx
   15e81:	48 83 ec 38          	sub    $0x38,%rsp
   15e85:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15e89:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15e8d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   15e91:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e95:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e99:	48 89 d6             	mov    %rdx,%rsi
   15e9c:	48 89 c7             	mov    %rax,%rdi
   15e9f:	e8 a7 ff ff ff       	call   15e4b <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   15ea4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   15ea8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15eac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15eb0:	48 89 c7             	mov    %rax,%rdi
   15eb3:	e8 74 00 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15eb8:	48 89 c2             	mov    %rax,%rdx
   15ebb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ebf:	48 89 d6             	mov    %rdx,%rsi
   15ec2:	48 89 c7             	mov    %rax,%rdi
   15ec5:	e8 7b 1c 00 00       	call   17b45 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   15eca:	48 89 c6             	mov    %rax,%rsi
   15ecd:	48 89 df             	mov    %rbx,%rdi
   15ed0:	e8 27 1a 00 00       	call   178fc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   15ed5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15ed9:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   15edc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ee0:	48 8b 00             	mov    (%rax),%rax
   15ee3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ee7:	48 c1 e2 03          	shl    $0x3,%rdx
   15eeb:	48 01 c2             	add    %rax,%rdx
   15eee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ef2:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   15ef6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15efa:	48 89 c7             	mov    %rax,%rdi
   15efd:	e8 2a 00 00 00       	call   15f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15f02:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   15f05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f09:	48 8b 10             	mov    (%rax),%rdx
   15f0c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   15f10:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15f14:	48 89 c7             	mov    %rax,%rdi
   15f17:	e8 89 1c 00 00       	call   17ba5 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   15f1c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15f20:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   15f24:	90                   	nop
   15f25:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15f29:	c9                   	leave
   15f2a:	c3                   	ret
   15f2b:	90                   	nop

0000000000015f2c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15f2c:	55                   	push   %rbp
   15f2d:	48 89 e5             	mov    %rsp,%rbp
   15f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f38:	5d                   	pop    %rbp
   15f39:	c3                   	ret

0000000000015f3a <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15f3a:	55                   	push   %rbp
   15f3b:	48 89 e5             	mov    %rsp,%rbp
   15f3e:	48 83 ec 20          	sub    $0x20,%rsp
   15f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15f4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15f4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f56:	48 89 d6             	mov    %rdx,%rsi
   15f59:	48 89 c7             	mov    %rax,%rdi
   15f5c:	e8 75 1c 00 00       	call   17bd6 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   15f61:	90                   	nop
   15f62:	c9                   	leave
   15f63:	c3                   	ret

0000000000015f64 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15f64:	55                   	push   %rbp
   15f65:	48 89 e5             	mov    %rsp,%rbp
   15f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f6c:	90                   	nop
   15f6d:	5d                   	pop    %rbp
   15f6e:	c3                   	ret
   15f6f:	90                   	nop

0000000000015f70 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   15f70:	55                   	push   %rbp
   15f71:	48 89 e5             	mov    %rsp,%rbp
   15f74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f78:	90                   	nop
   15f79:	5d                   	pop    %rbp
   15f7a:	c3                   	ret
   15f7b:	90                   	nop

0000000000015f7c <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   15f7c:	55                   	push   %rbp
   15f7d:	48 89 e5             	mov    %rsp,%rbp
   15f80:	48 83 ec 10          	sub    $0x10,%rsp
   15f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f8c:	48 89 c7             	mov    %rax,%rdi
   15f8f:	e8 88 de ff ff       	call   13e1c <_ZNSaIjED1Ev>
   15f94:	90                   	nop
   15f95:	c9                   	leave
   15f96:	c3                   	ret
   15f97:	90                   	nop

0000000000015f98 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15f98:	55                   	push   %rbp
   15f99:	48 89 e5             	mov    %rsp,%rbp
   15f9c:	48 83 ec 10          	sub    $0x10,%rsp
   15fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   15fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15fb0:	48 89 d6             	mov    %rdx,%rsi
   15fb3:	48 89 c7             	mov    %rax,%rdi
   15fb6:	e8 41 1c 00 00       	call   17bfc <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   15fbb:	90                   	nop
   15fbc:	c9                   	leave
   15fbd:	c3                   	ret

0000000000015fbe <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   15fbe:	55                   	push   %rbp
   15fbf:	48 89 e5             	mov    %rsp,%rbp
   15fc2:	48 83 ec 10          	sub    $0x10,%rsp
   15fc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   15fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fce:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fd6:	48 8b 00             	mov    (%rax),%rax
   15fd9:	48 29 c2             	sub    %rax,%rdx
   15fdc:	48 89 d0             	mov    %rdx,%rax
   15fdf:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   15fe3:	48 89 c2             	mov    %rax,%rdx
   15fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fea:	48 8b 08             	mov    (%rax),%rcx
   15fed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ff1:	48 89 ce             	mov    %rcx,%rsi
   15ff4:	48 89 c7             	mov    %rax,%rdi
   15ff7:	e8 32 1c 00 00       	call   17c2e <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   15ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16000:	48 89 c7             	mov    %rax,%rdi
   16003:	e8 74 ff ff ff       	call   15f7c <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   16008:	90                   	nop
   16009:	c9                   	leave
   1600a:	c3                   	ret
   1600b:	90                   	nop

000000000001600c <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   1600c:	55                   	push   %rbp
   1600d:	48 89 e5             	mov    %rsp,%rbp
   16010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16018:	48 8b 00             	mov    (%rax),%rax
   1601b:	5d                   	pop    %rbp
   1601c:	c3                   	ret
   1601d:	90                   	nop

000000000001601e <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   1601e:	55                   	push   %rbp
   1601f:	48 89 e5             	mov    %rsp,%rbp
   16022:	53                   	push   %rbx
   16023:	48 83 ec 18          	sub    $0x18,%rsp
   16027:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1602b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1602f:	48 89 c7             	mov    %rax,%rdi
   16032:	e8 d5 ff ff ff       	call   1600c <_ZNKSt16initializer_listIjE5beginEv>
   16037:	48 89 c3             	mov    %rax,%rbx
   1603a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1603e:	48 89 c7             	mov    %rax,%rdi
   16041:	e8 1e 1c 00 00       	call   17c64 <_ZNKSt16initializer_listIjE4sizeEv>
   16046:	48 c1 e0 02          	shl    $0x2,%rax
   1604a:	48 01 d8             	add    %rbx,%rax
   1604d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16051:	c9                   	leave
   16052:	c3                   	ret

0000000000016053 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   16053:	55                   	push   %rbp
   16054:	48 89 e5             	mov    %rsp,%rbp
   16057:	48 83 ec 10          	sub    $0x10,%rsp
   1605b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1605f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   16063:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16067:	48 89 c7             	mov    %rax,%rdi
   1606a:	e8 07 1c 00 00       	call   17c76 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   1606f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16073:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16077:	48 89 d6             	mov    %rdx,%rsi
   1607a:	48 89 c7             	mov    %rax,%rdi
   1607d:	e8 ff 1b 00 00       	call   17c81 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   16082:	c9                   	leave
   16083:	c3                   	ret

0000000000016084 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   16084:	55                   	push   %rbp
   16085:	48 89 e5             	mov    %rsp,%rbp
   16088:	53                   	push   %rbx
   16089:	48 83 ec 38          	sub    $0x38,%rsp
   1608d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16091:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16095:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   16099:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1609d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   160a1:	48 89 d6             	mov    %rdx,%rsi
   160a4:	48 89 c7             	mov    %rax,%rdi
   160a7:	e8 a7 ff ff ff       	call   16053 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   160ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   160b0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   160b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160b8:	48 89 c7             	mov    %rax,%rdi
   160bb:	e8 74 00 00 00       	call   16134 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   160c0:	48 89 c2             	mov    %rax,%rdx
   160c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160c7:	48 89 d6             	mov    %rdx,%rsi
   160ca:	48 89 c7             	mov    %rax,%rdi
   160cd:	e8 c9 1b 00 00       	call   17c9b <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   160d2:	48 89 c6             	mov    %rax,%rsi
   160d5:	48 89 df             	mov    %rbx,%rdi
   160d8:	e8 1f 1c 00 00       	call   17cfc <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   160dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   160e1:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   160e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160e8:	48 8b 00             	mov    (%rax),%rax
   160eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   160ef:	48 c1 e2 02          	shl    $0x2,%rdx
   160f3:	48 01 c2             	add    %rax,%rdx
   160f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   160fa:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   160fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16102:	48 89 c7             	mov    %rax,%rdi
   16105:	e8 2a 00 00 00       	call   16134 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   1610a:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1610d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16111:	48 8b 10             	mov    (%rax),%rdx
   16114:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   16118:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1611c:	48 89 c7             	mov    %rax,%rdi
   1611f:	e8 0b 1c 00 00       	call   17d2f <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   16124:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16128:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1612c:	90                   	nop
   1612d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16131:	c9                   	leave
   16132:	c3                   	ret
   16133:	90                   	nop

0000000000016134 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   16134:	55                   	push   %rbp
   16135:	48 89 e5             	mov    %rsp,%rbp
   16138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1613c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16140:	5d                   	pop    %rbp
   16141:	c3                   	ret

0000000000016142 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   16142:	55                   	push   %rbp
   16143:	48 89 e5             	mov    %rsp,%rbp
   16146:	48 83 ec 20          	sub    $0x20,%rsp
   1614a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1614e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16152:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   16156:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1615a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1615e:	48 89 d6             	mov    %rdx,%rsi
   16161:	48 89 c7             	mov    %rax,%rdi
   16164:	e8 f7 1b 00 00       	call   17d60 <_ZSt8_DestroyIPjEvT_S1_>
    }
   16169:	90                   	nop
   1616a:	c9                   	leave
   1616b:	c3                   	ret

000000000001616c <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1616c:	55                   	push   %rbp
   1616d:	48 89 e5             	mov    %rsp,%rbp
   16170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16174:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   16178:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1617c:	5d                   	pop    %rbp
   1617d:	c3                   	ret

000000000001617e <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1617e:	55                   	push   %rbp
   1617f:	48 89 e5             	mov    %rsp,%rbp
   16182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16186:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1618a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1618e:	5d                   	pop    %rbp
   1618f:	c3                   	ret

0000000000016190 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   16190:	55                   	push   %rbp
   16191:	48 89 e5             	mov    %rsp,%rbp
   16194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   16198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1619c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   161a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161a7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   161ae:	00 
   161af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161b3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   161ba:	00 
	{ }
   161bb:	90                   	nop
   161bc:	5d                   	pop    %rbp
   161bd:	c3                   	ret

00000000000161be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   161be:	55                   	push   %rbp
   161bf:	48 89 e5             	mov    %rsp,%rbp
   161c2:	48 83 ec 20          	sub    $0x20,%rsp
   161c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   161d2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   161d7:	74 17                	je     161f0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   161d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   161e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   161e5:	48 89 ce             	mov    %rcx,%rsi
   161e8:	48 89 c7             	mov    %rax,%rdi
   161eb:	e8 96 1b 00 00       	call   17d86 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   161f0:	90                   	nop
   161f1:	c9                   	leave
   161f2:	c3                   	ret
   161f3:	90                   	nop

00000000000161f4 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   161f4:	55                   	push   %rbp
   161f5:	48 89 e5             	mov    %rsp,%rbp
   161f8:	48 83 ec 10          	sub    $0x10,%rsp
   161fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16204:	48 89 c7             	mov    %rax,%rdi
   16207:	e8 a8 1b 00 00       	call   17db4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   1620c:	90                   	nop
   1620d:	c9                   	leave
   1620e:	c3                   	ret
   1620f:	90                   	nop

0000000000016210 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   16210:	55                   	push   %rbp
   16211:	48 89 e5             	mov    %rsp,%rbp
   16214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   16218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1621c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16227:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1622e:	00 
   1622f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16233:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1623a:	00 
	{ }
   1623b:	90                   	nop
   1623c:	5d                   	pop    %rbp
   1623d:	c3                   	ret

000000000001623e <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   1623e:	55                   	push   %rbp
   1623f:	48 89 e5             	mov    %rsp,%rbp
   16242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16246:	90                   	nop
   16247:	5d                   	pop    %rbp
   16248:	c3                   	ret
   16249:	90                   	nop

000000000001624a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1624a:	55                   	push   %rbp
   1624b:	48 89 e5             	mov    %rsp,%rbp
   1624e:	48 83 ec 20          	sub    $0x20,%rsp
   16252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16256:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1625a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1625e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16263:	74 17                	je     1627c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   16265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16269:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1626d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16271:	48 89 ce             	mov    %rcx,%rsi
   16274:	48 89 c7             	mov    %rax,%rdi
   16277:	e8 43 1b 00 00       	call   17dbf <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   1627c:	90                   	nop
   1627d:	c9                   	leave
   1627e:	c3                   	ret
   1627f:	90                   	nop

0000000000016280 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   16280:	55                   	push   %rbp
   16281:	48 89 e5             	mov    %rsp,%rbp
   16284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1628c:	5d                   	pop    %rbp
   1628d:	c3                   	ret

000000000001628e <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1628e:	55                   	push   %rbp
   1628f:	48 89 e5             	mov    %rsp,%rbp
   16292:	48 83 ec 20          	sub    $0x20,%rsp
   16296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1629a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1629e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   162a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   162a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162aa:	48 89 d6             	mov    %rdx,%rsi
   162ad:	48 89 c7             	mov    %rax,%rdi
   162b0:	e8 38 1b 00 00       	call   17ded <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   162b5:	90                   	nop
   162b6:	c9                   	leave
   162b7:	c3                   	ret

00000000000162b8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   162b8:	55                   	push   %rbp
   162b9:	48 89 e5             	mov    %rsp,%rbp
   162bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   162c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162c4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   162cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162cf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   162d6:	00 
   162d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162db:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   162e2:	00 
	{ }
   162e3:	90                   	nop
   162e4:	5d                   	pop    %rbp
   162e5:	c3                   	ret

00000000000162e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   162e6:	55                   	push   %rbp
   162e7:	48 89 e5             	mov    %rsp,%rbp
   162ea:	48 83 ec 20          	sub    $0x20,%rsp
   162ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   162f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   162fa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   162ff:	74 17                	je     16318 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   16301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16305:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16309:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1630d:	48 89 ce             	mov    %rcx,%rsi
   16310:	48 89 c7             	mov    %rax,%rdi
   16313:	e8 fb 1a 00 00       	call   17e13 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   16318:	90                   	nop
   16319:	c9                   	leave
   1631a:	c3                   	ret
   1631b:	90                   	nop

000000000001631c <_ZNSaIP9VkFence_TEC1Ev>:
   1631c:	55                   	push   %rbp
   1631d:	48 89 e5             	mov    %rsp,%rbp
   16320:	48 83 ec 10          	sub    $0x10,%rsp
   16324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1632c:	48 89 c7             	mov    %rax,%rdi
   1632f:	e8 0e 1b 00 00       	call   17e42 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
   16334:	90                   	nop
   16335:	c9                   	leave
   16336:	c3                   	ret
   16337:	90                   	nop

0000000000016338 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   16338:	55                   	push   %rbp
   16339:	48 89 e5             	mov    %rsp,%rbp
   1633c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   16340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16344:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1634b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1634f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   16356:	00 
   16357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1635b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   16362:	00 
	{ }
   16363:	90                   	nop
   16364:	5d                   	pop    %rbp
   16365:	c3                   	ret

0000000000016366 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
   16366:	55                   	push   %rbp
   16367:	48 89 e5             	mov    %rsp,%rbp
   1636a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1636e:	90                   	nop
   1636f:	5d                   	pop    %rbp
   16370:	c3                   	ret
   16371:	90                   	nop

0000000000016372 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   16372:	55                   	push   %rbp
   16373:	48 89 e5             	mov    %rsp,%rbp
   16376:	48 83 ec 20          	sub    $0x20,%rsp
   1637a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1637e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16382:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   16386:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1638b:	74 17                	je     163a4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1638d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16391:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16395:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16399:	48 89 ce             	mov    %rcx,%rsi
   1639c:	48 89 c7             	mov    %rax,%rdi
   1639f:	e8 a9 1a 00 00       	call   17e4d <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
   163a4:	90                   	nop
   163a5:	c9                   	leave
   163a6:	c3                   	ret
   163a7:	90                   	nop

00000000000163a8 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   163a8:	55                   	push   %rbp
   163a9:	48 89 e5             	mov    %rsp,%rbp
   163ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   163b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163b4:	5d                   	pop    %rbp
   163b5:	c3                   	ret

00000000000163b6 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   163b6:	55                   	push   %rbp
   163b7:	48 89 e5             	mov    %rsp,%rbp
   163ba:	48 83 ec 20          	sub    $0x20,%rsp
   163be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   163ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   163ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163d2:	48 89 d6             	mov    %rdx,%rsi
   163d5:	48 89 c7             	mov    %rax,%rdi
   163d8:	e8 9e 1a 00 00       	call   17e7b <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
   163dd:	90                   	nop
   163de:	c9                   	leave
   163df:	c3                   	ret

00000000000163e0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   163e0:	55                   	push   %rbp
   163e1:	48 89 e5             	mov    %rsp,%rbp
   163e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   163ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   163f0:	48 8b 10             	mov    (%rax),%rdx
   163f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163f7:	48 89 10             	mov    %rdx,(%rax)
   163fa:	90                   	nop
   163fb:	5d                   	pop    %rbp
   163fc:	c3                   	ret
   163fd:	90                   	nop

00000000000163fe <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   163fe:	55                   	push   %rbp
   163ff:	48 89 e5             	mov    %rsp,%rbp
   16402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   16406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1640a:	5d                   	pop    %rbp
   1640b:	c3                   	ret

000000000001640c <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   1640c:	55                   	push   %rbp
   1640d:	48 89 e5             	mov    %rsp,%rbp
   16410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16418:	48 8b 40 08          	mov    0x8(%rax),%rax
   1641c:	5d                   	pop    %rbp
   1641d:	c3                   	ret

000000000001641e <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1641e:	55                   	push   %rbp
   1641f:	48 89 e5             	mov    %rsp,%rbp
   16422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16426:	90                   	nop
   16427:	5d                   	pop    %rbp
   16428:	c3                   	ret

0000000000016429 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   16429:	55                   	push   %rbp
   1642a:	48 89 e5             	mov    %rsp,%rbp
   1642d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16431:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   16435:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16439:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1643d:	48 c1 f8 03          	sar    $0x3,%rax
    }
   16441:	5d                   	pop    %rbp
   16442:	c3                   	ret

0000000000016443 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   16443:	55                   	push   %rbp
   16444:	48 89 e5             	mov    %rsp,%rbp
   16447:	48 83 ec 20          	sub    $0x20,%rsp
   1644b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1644f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16453:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16457:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1645b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1645f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16467:	48 89 ce             	mov    %rcx,%rsi
   1646a:	48 89 c7             	mov    %rax,%rdi
   1646d:	e8 2f 1a 00 00       	call   17ea1 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   16472:	c9                   	leave
   16473:	c3                   	ret

0000000000016474 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   16474:	55                   	push   %rbp
   16475:	48 89 e5             	mov    %rsp,%rbp
   16478:	48 83 ec 10          	sub    $0x10,%rsp
   1647c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16480:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   16484:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1648c:	48 89 d6             	mov    %rdx,%rsi
   1648f:	48 89 c7             	mov    %rax,%rdi
   16492:	e8 3f 1a 00 00       	call   17ed6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   16497:	90                   	nop
   16498:	c9                   	leave
   16499:	c3                   	ret

000000000001649a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1649a:	55                   	push   %rbp
   1649b:	48 89 e5             	mov    %rsp,%rbp
   1649e:	53                   	push   %rbx
   1649f:	48 83 ec 28          	sub    $0x28,%rsp
   164a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   164a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   164ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   164af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164b3:	48 89 c6             	mov    %rax,%rsi
   164b6:	bf 08 00 00 00       	mov    $0x8,%edi
   164bb:	e8 df f6 fe ff       	call   5b9f <_ZnwmPv>
   164c0:	48 89 c3             	mov    %rax,%rbx
   164c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   164c7:	48 89 c7             	mov    %rax,%rdi
   164ca:	e8 41 e0 ff ff       	call   14510 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   164cf:	48 8b 00             	mov    (%rax),%rax
   164d2:	48 89 03             	mov    %rax,(%rbx)
   164d5:	90                   	nop
   164d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   164da:	c9                   	leave
   164db:	c3                   	ret

00000000000164dc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   164dc:	55                   	push   %rbp
   164dd:	48 89 e5             	mov    %rsp,%rbp
   164e0:	53                   	push   %rbx
   164e1:	48 83 ec 38          	sub    $0x38,%rsp
   164e5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   164e9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   164ed:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   164f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   164f5:	48 89 c7             	mov    %rax,%rdi
   164f8:	e8 e9 19 00 00       	call   17ee6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   164fd:	48 89 c3             	mov    %rax,%rbx
   16500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16504:	48 89 c7             	mov    %rax,%rdi
   16507:	e8 ac c6 ff ff       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1650c:	48 29 c3             	sub    %rax,%rbx
   1650f:	48 89 da             	mov    %rbx,%rdx
   16512:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16516:	48 39 c2             	cmp    %rax,%rdx
   16519:	0f 92 c0             	setb   %al
   1651c:	84 c0                	test   %al,%al
   1651e:	74 0c                	je     1652c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   16520:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16524:	48 89 c7             	mov    %rax,%rdi
   16527:	e8 b4 dc fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1652c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16530:	48 89 c7             	mov    %rax,%rdi
   16533:	e8 80 c6 ff ff       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   16538:	48 89 c3             	mov    %rax,%rbx
   1653b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1653f:	48 89 c7             	mov    %rax,%rdi
   16542:	e8 71 c6 ff ff       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   16547:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1654b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1654f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16553:	48 89 d6             	mov    %rdx,%rsi
   16556:	48 89 c7             	mov    %rax,%rdi
   16559:	e8 aa 19 00 00       	call   17f08 <_ZSt3maxImERKT_S2_S2_>
   1655e:	48 8b 00             	mov    (%rax),%rax
   16561:	48 01 d8             	add    %rbx,%rax
   16564:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   16568:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1656c:	48 89 c7             	mov    %rax,%rdi
   1656f:	e8 44 c6 ff ff       	call   12bb8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   16574:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   16578:	72 12                	jb     1658c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   1657a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1657e:	48 89 c7             	mov    %rax,%rdi
   16581:	e8 60 19 00 00       	call   17ee6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   16586:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1658a:	73 0e                	jae    1659a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1658c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16590:	48 89 c7             	mov    %rax,%rdi
   16593:	e8 4e 19 00 00       	call   17ee6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   16598:	eb 04                	jmp    1659e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   1659a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1659e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   165a2:	c9                   	leave
   165a3:	c3                   	ret

00000000000165a4 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   165a4:	55                   	push   %rbp
   165a5:	48 89 e5             	mov    %rsp,%rbp
   165a8:	53                   	push   %rbx
   165a9:	48 83 ec 18          	sub    $0x18,%rsp
   165ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   165b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   165b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165b9:	48 89 c7             	mov    %rax,%rdi
   165bc:	e8 41 df ff ff       	call   14502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   165c1:	48 8b 18             	mov    (%rax),%rbx
   165c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   165c8:	48 89 c7             	mov    %rax,%rdi
   165cb:	e8 32 df ff ff       	call   14502 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   165d0:	48 8b 00             	mov    (%rax),%rax
   165d3:	48 89 da             	mov    %rbx,%rdx
   165d6:	48 29 c2             	sub    %rax,%rdx
   165d9:	48 89 d0             	mov    %rdx,%rax
   165dc:	48 c1 f8 03          	sar    $0x3,%rax
   165e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   165e4:	c9                   	leave
   165e5:	c3                   	ret

00000000000165e6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   165e6:	55                   	push   %rbp
   165e7:	48 89 e5             	mov    %rsp,%rbp
   165ea:	48 83 ec 20          	sub    $0x20,%rsp
   165ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   165fa:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   165fe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16602:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16606:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1660a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1660e:	48 89 c7             	mov    %rax,%rdi
   16611:	e8 1d 19 00 00       	call   17f33 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   16616:	c9                   	leave
   16617:	c3                   	ret

0000000000016618 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   16618:	55                   	push   %rbp
   16619:	48 89 e5             	mov    %rsp,%rbp
   1661c:	48 83 ec 20          	sub    $0x20,%rsp
   16620:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16624:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   16628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1662c:	48 8b 00             	mov    (%rax),%rax
   1662f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16633:	48 c1 e2 03          	shl    $0x3,%rdx
   16637:	48 f7 da             	neg    %rdx
   1663a:	48 01 d0             	add    %rdx,%rax
   1663d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16641:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   16645:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   16649:	48 89 d6             	mov    %rdx,%rsi
   1664c:	48 89 c7             	mov    %rax,%rdi
   1664f:	e8 90 de ff ff       	call   144e4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   16654:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16658:	c9                   	leave
   16659:	c3                   	ret

000000000001665a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   1665a:	55                   	push   %rbp
   1665b:	48 89 e5             	mov    %rsp,%rbp
   1665e:	53                   	push   %rbx
   1665f:	48 83 ec 28          	sub    $0x28,%rsp
   16663:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16667:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   1666b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1666f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16673:	48 89 c7             	mov    %rax,%rdi
   16676:	e8 dd e0 ff ff       	call   14758 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1667b:	48 89 c6             	mov    %rax,%rsi
   1667e:	48 89 df             	mov    %rbx,%rdi
   16681:	e8 10 19 00 00       	call   17f96 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   16686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1668a:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1668e:	90                   	nop
   1668f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16693:	c9                   	leave
   16694:	c3                   	ret
   16695:	90                   	nop

0000000000016696 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   16696:	55                   	push   %rbp
   16697:	48 89 e5             	mov    %rsp,%rbp
   1669a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1669e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166a2:	5d                   	pop    %rbp
   166a3:	c3                   	ret

00000000000166a4 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   166a4:	55                   	push   %rbp
   166a5:	48 89 e5             	mov    %rsp,%rbp
   166a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   166b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   166b4:	8b 10                	mov    (%rax),%edx
   166b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166ba:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   166bc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   166c0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   166c4:	48 8b 46 04          	mov    0x4(%rsi),%rax
   166c8:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   166cc:	48 89 41 04          	mov    %rax,0x4(%rcx)
   166d0:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   166d4:	48 8b 46 14          	mov    0x14(%rsi),%rax
   166d8:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   166dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   166e0:	5d                   	pop    %rbp
   166e1:	c3                   	ret

00000000000166e2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   166e2:	55                   	push   %rbp
   166e3:	48 89 e5             	mov    %rsp,%rbp
   166e6:	53                   	push   %rbx
   166e7:	48 83 ec 18          	sub    $0x18,%rsp
   166eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   166ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   166f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   166f7:	48 89 c7             	mov    %rax,%rdi
   166fa:	e8 e9 18 00 00       	call   17fe8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   166ff:	48 89 c3             	mov    %rax,%rbx
   16702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16706:	48 89 c7             	mov    %rax,%rdi
   16709:	e8 cc 18 00 00       	call   17fda <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   1670e:	48 89 de             	mov    %rbx,%rsi
   16711:	48 89 c7             	mov    %rax,%rdi
   16714:	e8 dd 18 00 00       	call   17ff6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   16719:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1671d:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   16721:	90                   	nop
   16722:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16726:	c9                   	leave
   16727:	c3                   	ret

0000000000016728 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   16728:	55                   	push   %rbp
   16729:	48 89 e5             	mov    %rsp,%rbp
   1672c:	48 83 ec 10          	sub    $0x10,%rsp
   16730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   16734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16738:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1673c:	84 c0                	test   %al,%al
   1673e:	74 0c                	je     1674c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   16740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16744:	48 89 c7             	mov    %rax,%rdi
   16747:	e8 04 19 00 00       	call   18050 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   1674c:	90                   	nop
   1674d:	c9                   	leave
   1674e:	c3                   	ret
   1674f:	90                   	nop

0000000000016750 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16750:	55                   	push   %rbp
   16751:	48 89 e5             	mov    %rsp,%rbp
   16754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16758:	90                   	nop
   16759:	5d                   	pop    %rbp
   1675a:	c3                   	ret

000000000001675b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1675b:	55                   	push   %rbp
   1675c:	48 89 e5             	mov    %rsp,%rbp
   1675f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   16763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16767:	48 8b 40 18          	mov    0x18(%rax),%rax
   1676b:	5d                   	pop    %rbp
   1676c:	c3                   	ret

000000000001676d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1676d:	55                   	push   %rbp
   1676e:	48 89 e5             	mov    %rsp,%rbp
   16771:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   16775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16779:	48 8b 40 10          	mov    0x10(%rax),%rax
   1677d:	5d                   	pop    %rbp
   1677e:	c3                   	ret
   1677f:	90                   	nop

0000000000016780 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   16780:	55                   	push   %rbp
   16781:	48 89 e5             	mov    %rsp,%rbp
   16784:	48 83 ec 10          	sub    $0x10,%rsp
   16788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1678c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   16790:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16798:	48 89 d6             	mov    %rdx,%rsi
   1679b:	48 89 c7             	mov    %rax,%rdi
   1679e:	e8 c1 18 00 00       	call   18064 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   167a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   167a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167ab:	48 89 d6             	mov    %rdx,%rsi
   167ae:	48 89 c7             	mov    %rax,%rdi
   167b1:	e8 ec 18 00 00       	call   180a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   167b6:	90                   	nop
   167b7:	c9                   	leave
   167b8:	c3                   	ret
   167b9:	90                   	nop

00000000000167ba <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   167ba:	55                   	push   %rbp
   167bb:	48 89 e5             	mov    %rsp,%rbp
   167be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   167c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167c6:	48 8b 40 10          	mov    0x10(%rax),%rax
   167ca:	5d                   	pop    %rbp
   167cb:	c3                   	ret

00000000000167cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   167cc:	55                   	push   %rbp
   167cd:	48 89 e5             	mov    %rsp,%rbp
   167d0:	53                   	push   %rbx
   167d1:	48 83 ec 18          	sub    $0x18,%rsp
   167d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   167d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   167dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167e1:	48 89 c7             	mov    %rax,%rdi
   167e4:	e8 ef 18 00 00       	call   180d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   167e9:	48 89 c3             	mov    %rax,%rbx
   167ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167f0:	48 89 c7             	mov    %rax,%rdi
   167f3:	e8 2e e1 ff ff       	call   14926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   167f8:	48 89 c6             	mov    %rax,%rsi
   167fb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   167ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16803:	48 89 d1             	mov    %rdx,%rcx
   16806:	48 89 da             	mov    %rbx,%rdx
   16809:	48 89 c7             	mov    %rax,%rdi
   1680c:	e8 d9 18 00 00       	call   180ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   16811:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16815:	c9                   	leave
   16816:	c3                   	ret
   16817:	90                   	nop

0000000000016818 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   16818:	55                   	push   %rbp
   16819:	48 89 e5             	mov    %rsp,%rbp
   1681c:	48 83 ec 20          	sub    $0x20,%rsp
   16820:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   16824:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16828:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1682c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16830:	48 89 d6             	mov    %rdx,%rsi
   16833:	48 89 c7             	mov    %rax,%rdi
   16836:	e8 39 06 00 00       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1683b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1683f:	c9                   	leave
   16840:	c3                   	ret
   16841:	90                   	nop

0000000000016842 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   16842:	55                   	push   %rbp
   16843:	48 89 e5             	mov    %rsp,%rbp
   16846:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   1684a:	90                   	nop
   1684b:	5d                   	pop    %rbp
   1684c:	c3                   	ret
   1684d:	90                   	nop

000000000001684e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   1684e:	55                   	push   %rbp
   1684f:	48 89 e5             	mov    %rsp,%rbp
   16852:	48 83 ec 10          	sub    $0x10,%rsp
   16856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1685a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1685e:	48 83 c0 20          	add    $0x20,%rax
   16862:	48 89 c7             	mov    %rax,%rdi
   16865:	e8 16 19 00 00       	call   18180 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1686a:	c9                   	leave
   1686b:	c3                   	ret

000000000001686c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   1686c:	55                   	push   %rbp
   1686d:	48 89 e5             	mov    %rsp,%rbp
   16870:	48 83 ec 10          	sub    $0x10,%rsp
   16874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16878:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   1687c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16884:	48 89 d6             	mov    %rdx,%rsi
   16887:	48 89 c7             	mov    %rax,%rdi
   1688a:	e8 a1 d7 fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   1688f:	c1 e8 1f             	shr    $0x1f,%eax
   16892:	c9                   	leave
   16893:	c3                   	ret

0000000000016894 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16894:	55                   	push   %rbp
   16895:	48 89 e5             	mov    %rsp,%rbp
   16898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1689c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168a0:	5d                   	pop    %rbp
   168a1:	c3                   	ret

00000000000168a2 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   168a2:	55                   	push   %rbp
   168a3:	48 89 e5             	mov    %rsp,%rbp
   168a6:	53                   	push   %rbx
   168a7:	48 83 ec 18          	sub    $0x18,%rsp
   168ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   168af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   168b3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   168b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   168bb:	48 89 c7             	mov    %rax,%rdi
   168be:	e8 d1 ff ff ff       	call   16894 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   168c3:	48 89 c6             	mov    %rax,%rsi
   168c6:	48 89 df             	mov    %rbx,%rdi
   168c9:	e8 cc 18 00 00       	call   1819a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   168ce:	90                   	nop
   168cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   168d3:	c9                   	leave
   168d4:	c3                   	ret

00000000000168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   168d5:	55                   	push   %rbp
   168d6:	48 89 e5             	mov    %rsp,%rbp
   168d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   168dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168e1:	5d                   	pop    %rbp
   168e2:	c3                   	ret

00000000000168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   168e3:	55                   	push   %rbp
   168e4:	48 89 e5             	mov    %rsp,%rbp
   168e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   168eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168ef:	5d                   	pop    %rbp
   168f0:	c3                   	ret

00000000000168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   168f1:	55                   	push   %rbp
   168f2:	48 89 e5             	mov    %rsp,%rbp
   168f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   168f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168fd:	5d                   	pop    %rbp
   168fe:	c3                   	ret
   168ff:	90                   	nop

0000000000016900 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   16900:	55                   	push   %rbp
   16901:	48 89 e5             	mov    %rsp,%rbp
   16904:	41 54                	push   %r12
   16906:	53                   	push   %rbx
   16907:	48 83 ec 30          	sub    $0x30,%rsp
   1690b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1690f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16913:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16917:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1691b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   1691f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16923:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16927:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   1692a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1692e:	48 89 c7             	mov    %rax,%rdi
   16931:	e8 bb ff ff ff       	call   168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   16936:	49 89 c4             	mov    %rax,%r12
   16939:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1693d:	48 89 c7             	mov    %rax,%rdi
   16940:	e8 9e ff ff ff       	call   168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   16945:	48 89 c3             	mov    %rax,%rbx
   16948:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1694c:	48 89 c7             	mov    %rax,%rdi
   1694f:	e8 81 ff ff ff       	call   168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   16954:	48 89 c6             	mov    %rax,%rsi
   16957:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1695b:	4c 89 e1             	mov    %r12,%rcx
   1695e:	48 89 da             	mov    %rbx,%rdx
   16961:	48 89 c7             	mov    %rax,%rdi
   16964:	e8 65 18 00 00       	call   181ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   16969:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1696d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   16971:	90                   	nop
   16972:	48 83 c4 30          	add    $0x30,%rsp
   16976:	5b                   	pop    %rbx
   16977:	41 5c                	pop    %r12
   16979:	5d                   	pop    %rbp
   1697a:	c3                   	ret
   1697b:	90                   	nop

000000000001697c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   1697c:	55                   	push   %rbp
   1697d:	48 89 e5             	mov    %rsp,%rbp
   16980:	48 83 ec 10          	sub    $0x10,%rsp
   16984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   16988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1698c:	48 8b 40 08          	mov    0x8(%rax),%rax
   16990:	48 85 c0             	test   %rax,%rax
   16993:	74 1a                	je     169af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   16995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16999:	48 8b 00             	mov    (%rax),%rax
   1699c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   169a0:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   169a4:	48 89 d6             	mov    %rdx,%rsi
   169a7:	48 89 c7             	mov    %rax,%rdi
   169aa:	e8 d1 fd ff ff       	call   16780 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   169af:	90                   	nop
   169b0:	c9                   	leave
   169b1:	c3                   	ret

00000000000169b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   169b2:	55                   	push   %rbp
   169b3:	48 89 e5             	mov    %rsp,%rbp
   169b6:	53                   	push   %rbx
   169b7:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   169be:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   169c5:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   169cc:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   169d3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   169da:	48 89 c7             	mov    %rax,%rdi
   169dd:	e8 68 18 00 00       	call   1824a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   169e2:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   169e9:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   169f0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   169f7:	48 89 c7             	mov    %rax,%rdi
   169fa:	e8 d9 16 00 00       	call   180d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   169ff:	48 39 c3             	cmp    %rax,%rbx
   16a02:	0f 94 c0             	sete   %al
   16a05:	84 c0                	test   %al,%al
   16a07:	0f 84 c8 00 00 00    	je     16ad5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   16a0d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16a14:	48 89 c7             	mov    %rax,%rdi
   16a17:	e8 56 18 00 00       	call   18272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   16a1c:	48 85 c0             	test   %rax,%rax
   16a1f:	74 44                	je     16a65 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   16a21:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16a28:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16a2f:	48 89 c7             	mov    %rax,%rdi
   16a32:	e8 4d 18 00 00       	call   18284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   16a37:	48 8b 00             	mov    (%rax),%rax
   16a3a:	48 89 c7             	mov    %rax,%rdi
   16a3d:	e8 54 18 00 00       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16a42:	48 89 c1             	mov    %rax,%rcx
   16a45:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   16a4c:	48 89 c2             	mov    %rax,%rdx
   16a4f:	48 89 ce             	mov    %rcx,%rsi
   16a52:	48 89 df             	mov    %rbx,%rdi
   16a55:	e8 ae df ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16a5a:	84 c0                	test   %al,%al
   16a5c:	74 07                	je     16a65 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   16a5e:	b8 01 00 00 00       	mov    $0x1,%eax
   16a63:	eb 05                	jmp    16a6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   16a65:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   16a6a:	84 c0                	test   %al,%al
   16a6c:	74 49                	je     16ab7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   16a6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16a75:	48 89 c7             	mov    %rax,%rdi
   16a78:	e8 07 18 00 00       	call   18284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   16a7d:	48 89 c2             	mov    %rax,%rdx
   16a80:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   16a87:	00 00 00 00 
   16a8b:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   16a92:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   16a99:	48 89 ce             	mov    %rcx,%rsi
   16a9c:	48 89 c7             	mov    %rax,%rdi
   16a9f:	e8 0c 18 00 00       	call   182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16aa4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   16aab:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   16ab2:	e9 43 03 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   16ab7:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   16abe:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16ac5:	48 89 d6             	mov    %rdx,%rsi
   16ac8:	48 89 c7             	mov    %rax,%rdi
   16acb:	e8 10 18 00 00       	call   182e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   16ad0:	e9 25 03 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   16ad5:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16adc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16ae3:	48 89 c7             	mov    %rax,%rdi
   16ae6:	e8 ab 17 00 00       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16aeb:	48 89 c2             	mov    %rax,%rdx
   16aee:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   16af5:	48 89 c6             	mov    %rax,%rsi
   16af8:	48 89 df             	mov    %rbx,%rdi
   16afb:	e8 08 df ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16b00:	84 c0                	test   %al,%al
   16b02:	0f 84 66 01 00 00    	je     16c6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   16b08:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16b0f:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   16b16:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   16b1d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16b24:	48 89 c7             	mov    %rax,%rdi
   16b27:	e8 2a 19 00 00       	call   18456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   16b2c:	48 8b 00             	mov    (%rax),%rax
   16b2f:	48 39 c3             	cmp    %rax,%rbx
   16b32:	0f 94 c0             	sete   %al
   16b35:	84 c0                	test   %al,%al
   16b37:	74 4c                	je     16b85 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   16b39:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16b40:	48 89 c7             	mov    %rax,%rdi
   16b43:	e8 0e 19 00 00       	call   18456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   16b48:	48 89 c3             	mov    %rax,%rbx
   16b4b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16b52:	48 89 c7             	mov    %rax,%rdi
   16b55:	e8 fc 18 00 00       	call   18456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   16b5a:	48 89 c1             	mov    %rax,%rcx
   16b5d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   16b64:	48 89 da             	mov    %rbx,%rdx
   16b67:	48 89 ce             	mov    %rcx,%rsi
   16b6a:	48 89 c7             	mov    %rax,%rdi
   16b6d:	e8 f6 18 00 00       	call   18468 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   16b72:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   16b79:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   16b80:	e9 75 02 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   16b85:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16b8c:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   16b93:	48 89 c7             	mov    %rax,%rdi
   16b96:	e8 11 19 00 00       	call   184ac <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   16b9b:	48 8b 00             	mov    (%rax),%rax
   16b9e:	48 89 c7             	mov    %rax,%rdi
   16ba1:	e8 f0 16 00 00       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16ba6:	48 89 c1             	mov    %rax,%rcx
   16ba9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   16bb0:	48 89 c2             	mov    %rax,%rdx
   16bb3:	48 89 ce             	mov    %rcx,%rsi
   16bb6:	48 89 df             	mov    %rbx,%rdi
   16bb9:	e8 4a de ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16bbe:	84 c0                	test   %al,%al
   16bc0:	0f 84 8a 00 00 00    	je     16c50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   16bc6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   16bcd:	48 89 c7             	mov    %rax,%rdi
   16bd0:	e8 86 fb ff ff       	call   1675b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   16bd5:	48 85 c0             	test   %rax,%rax
   16bd8:	0f 94 c0             	sete   %al
   16bdb:	84 c0                	test   %al,%al
   16bdd:	74 3e                	je     16c1d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   16bdf:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   16be6:	00 00 00 00 
   16bea:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   16bf1:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   16bf8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   16bff:	48 89 ce             	mov    %rcx,%rsi
   16c02:	48 89 c7             	mov    %rax,%rdi
   16c05:	e8 a6 16 00 00       	call   182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16c0a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   16c11:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   16c18:	e9 dd 01 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   16c1d:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   16c24:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   16c2b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   16c32:	48 89 ce             	mov    %rcx,%rsi
   16c35:	48 89 c7             	mov    %rax,%rdi
   16c38:	e8 2b 18 00 00       	call   18468 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   16c3d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   16c44:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   16c4b:	e9 aa 01 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   16c50:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   16c57:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16c5e:	48 89 d6             	mov    %rdx,%rsi
   16c61:	48 89 c7             	mov    %rax,%rdi
   16c64:	e8 77 16 00 00       	call   182e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   16c69:	e9 8c 01 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   16c6e:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16c75:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16c7c:	48 89 c7             	mov    %rax,%rdi
   16c7f:	e8 12 16 00 00       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16c84:	48 89 c1             	mov    %rax,%rcx
   16c87:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   16c8e:	48 89 c2             	mov    %rax,%rdx
   16c91:	48 89 ce             	mov    %rcx,%rsi
   16c94:	48 89 df             	mov    %rbx,%rdi
   16c97:	e8 6c dd ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16c9c:	84 c0                	test   %al,%al
   16c9e:	0f 84 2c 01 00 00    	je     16dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   16ca4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16cab:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   16cb2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   16cb9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16cc0:	48 89 c7             	mov    %rax,%rdi
   16cc3:	e8 bc 15 00 00       	call   18284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   16cc8:	48 8b 00             	mov    (%rax),%rax
   16ccb:	48 39 c3             	cmp    %rax,%rbx
   16cce:	0f 94 c0             	sete   %al
   16cd1:	84 c0                	test   %al,%al
   16cd3:	74 3a                	je     16d0f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   16cd5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16cdc:	48 89 c7             	mov    %rax,%rdi
   16cdf:	e8 a0 15 00 00       	call   18284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   16ce4:	48 89 c2             	mov    %rax,%rdx
   16ce7:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   16cee:	00 
   16cef:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   16cf3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   16cf7:	48 89 ce             	mov    %rcx,%rsi
   16cfa:	48 89 c7             	mov    %rax,%rdi
   16cfd:	e8 ae 15 00 00       	call   182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16d02:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   16d06:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   16d0a:	e9 eb 00 00 00       	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   16d0f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   16d16:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   16d1d:	48 89 c7             	mov    %rax,%rdi
   16d20:	e8 af 17 00 00       	call   184d4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   16d25:	48 8b 00             	mov    (%rax),%rax
   16d28:	48 89 c7             	mov    %rax,%rdi
   16d2b:	e8 66 15 00 00       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   16d30:	48 89 c2             	mov    %rax,%rdx
   16d33:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   16d3a:	48 89 c6             	mov    %rax,%rsi
   16d3d:	48 89 df             	mov    %rbx,%rdi
   16d40:	e8 c3 dc ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16d45:	84 c0                	test   %al,%al
   16d47:	74 6c                	je     16db5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   16d49:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   16d50:	48 89 c7             	mov    %rax,%rdi
   16d53:	e8 03 fa ff ff       	call   1675b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   16d58:	48 85 c0             	test   %rax,%rax
   16d5b:	0f 94 c0             	sete   %al
   16d5e:	84 c0                	test   %al,%al
   16d60:	74 2c                	je     16d8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   16d62:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   16d69:	00 
   16d6a:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   16d71:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   16d75:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   16d79:	48 89 ce             	mov    %rcx,%rsi
   16d7c:	48 89 c7             	mov    %rax,%rdi
   16d7f:	e8 2c 15 00 00       	call   182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16d84:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16d88:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   16d8c:	eb 6c                	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   16d8e:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   16d95:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   16d9c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   16da0:	48 89 ce             	mov    %rcx,%rsi
   16da3:	48 89 c7             	mov    %rax,%rdi
   16da6:	e8 bd 16 00 00       	call   18468 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   16dab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16daf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16db3:	eb 45                	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   16db5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   16dbc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   16dc3:	48 89 d6             	mov    %rdx,%rsi
   16dc6:	48 89 c7             	mov    %rax,%rdi
   16dc9:	e8 12 15 00 00       	call   182e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   16dce:	eb 2a                	jmp    16dfa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   16dd0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   16dd7:	00 
   16dd8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   16ddc:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   16de3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   16de7:	48 89 ce             	mov    %rcx,%rsi
   16dea:	48 89 c7             	mov    %rax,%rdi
   16ded:	e8 be 14 00 00       	call   182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   16df2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16df6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   16dfa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16dfe:	c9                   	leave
   16dff:	c3                   	ret

0000000000016e00 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   16e00:	55                   	push   %rbp
   16e01:	48 89 e5             	mov    %rsp,%rbp
   16e04:	48 83 ec 10          	sub    $0x10,%rsp
   16e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   16e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e10:	48 8b 40 08          	mov    0x8(%rax),%rax
   16e14:	48 89 c7             	mov    %rax,%rdi
   16e17:	e8 e0 16 00 00       	call   184fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   16e1c:	c9                   	leave
   16e1d:	c3                   	ret

0000000000016e1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   16e1e:	55                   	push   %rbp
   16e1f:	48 89 e5             	mov    %rsp,%rbp
   16e22:	48 83 ec 30          	sub    $0x30,%rsp
   16e26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16e2a:	48 89 d1             	mov    %rdx,%rcx
   16e2d:	48 89 f0             	mov    %rsi,%rax
   16e30:	48 89 fa             	mov    %rdi,%rdx
   16e33:	48 89 ca             	mov    %rcx,%rdx
   16e36:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16e3a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   16e3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e42:	48 8b 00             	mov    (%rax),%rax
   16e45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16e49:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   16e4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16e51:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   16e55:	48 89 c7             	mov    %rax,%rdi
   16e58:	e8 cb 16 00 00       	call   18528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   16e5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   16e61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e65:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   16e6c:	00 
	  return __it;
   16e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   16e71:	c9                   	leave
   16e72:	c3                   	ret
   16e73:	90                   	nop

0000000000016e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   16e74:	55                   	push   %rbp
   16e75:	48 89 e5             	mov    %rsp,%rbp
   16e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   16e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e84:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16e88:	48 89 10             	mov    %rdx,(%rax)
   16e8b:	90                   	nop
   16e8c:	5d                   	pop    %rbp
   16e8d:	c3                   	ret

0000000000016e8e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   16e8e:	55                   	push   %rbp
   16e8f:	48 89 e5             	mov    %rsp,%rbp
   16e92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   16e9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16e9e:	48 8b 10             	mov    (%rax),%rdx
   16ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ea5:	48 89 10             	mov    %rdx,(%rax)
   16ea8:	90                   	nop
   16ea9:	5d                   	pop    %rbp
   16eaa:	c3                   	ret
   16eab:	90                   	nop

0000000000016eac <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   16eac:	55                   	push   %rbp
   16ead:	48 89 e5             	mov    %rsp,%rbp
   16eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   16eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eb8:	5d                   	pop    %rbp
   16eb9:	c3                   	ret

0000000000016eba <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   16eba:	55                   	push   %rbp
   16ebb:	48 89 e5             	mov    %rsp,%rbp
   16ebe:	48 83 ec 10          	sub    $0x10,%rsp
   16ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ec6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   16eca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ece:	48 89 c7             	mov    %rax,%rdi
   16ed1:	e8 16 17 00 00       	call   185ec <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16ed6:	48 89 c2             	mov    %rax,%rdx
   16ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16edd:	48 89 d6             	mov    %rdx,%rsi
   16ee0:	48 89 c7             	mov    %rax,%rdi
   16ee3:	e8 86 3a ff ff       	call   a96e <_ZNSaIP9VkImage_TEC1ERKS1_>
   16ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eec:	c9                   	leave
   16eed:	c3                   	ret

0000000000016eee <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16eee:	55                   	push   %rbp
   16eef:	48 89 e5             	mov    %rsp,%rbp
   16ef2:	48 83 ec 10          	sub    $0x10,%rsp
   16ef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16efa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   16efe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f02:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16f06:	48 89 d6             	mov    %rdx,%rsi
   16f09:	48 89 c7             	mov    %rax,%rdi
   16f0c:	e8 e9 16 00 00       	call   185fa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   16f11:	90                   	nop
   16f12:	c9                   	leave
   16f13:	c3                   	ret

0000000000016f14 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   16f14:	55                   	push   %rbp
   16f15:	48 89 e5             	mov    %rsp,%rbp
   16f18:	48 83 ec 30          	sub    $0x30,%rsp
   16f1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16f20:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   16f24:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16f28:	48 89 c7             	mov    %rax,%rdi
   16f2b:	e8 c0 4e ff ff       	call   bdf0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   16f30:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16f34:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16f38:	48 89 d6             	mov    %rdx,%rsi
   16f3b:	48 89 c7             	mov    %rax,%rdi
   16f3e:	e8 dd 16 00 00       	call   18620 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   16f43:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16f47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f4b:	48 89 d6             	mov    %rdx,%rsi
   16f4e:	48 89 c7             	mov    %rax,%rdi
   16f51:	e8 ca 16 00 00       	call   18620 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   16f56:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   16f5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f5e:	48 89 d6             	mov    %rdx,%rsi
   16f61:	48 89 c7             	mov    %rax,%rdi
   16f64:	e8 b7 16 00 00       	call   18620 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   16f69:	90                   	nop
   16f6a:	c9                   	leave
   16f6b:	c3                   	ret

0000000000016f6c <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   16f6c:	55                   	push   %rbp
   16f6d:	48 89 e5             	mov    %rsp,%rbp
   16f70:	48 83 ec 10          	sub    $0x10,%rsp
   16f74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   16f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f80:	48 89 c7             	mov    %rax,%rdi
   16f83:	e8 d5 16 00 00       	call   1865d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   16f88:	90                   	nop
   16f89:	c9                   	leave
   16f8a:	c3                   	ret
   16f8b:	90                   	nop

0000000000016f8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   16f8c:	55                   	push   %rbp
   16f8d:	48 89 e5             	mov    %rsp,%rbp
   16f90:	48 83 ec 10          	sub    $0x10,%rsp
   16f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   16f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f9c:	48 89 c7             	mov    %rax,%rdi
   16f9f:	e8 0a 17 00 00       	call   186ae <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16fa4:	48 89 c7             	mov    %rax,%rdi
   16fa7:	e8 bf 16 00 00       	call   1866b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   16fac:	c9                   	leave
   16fad:	c3                   	ret

0000000000016fae <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   16fae:	55                   	push   %rbp
   16faf:	48 89 e5             	mov    %rsp,%rbp
   16fb2:	48 83 ec 20          	sub    $0x20,%rsp
   16fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16fbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   16fc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fca:	48 89 d6             	mov    %rdx,%rsi
   16fcd:	48 89 c7             	mov    %rax,%rdi
   16fd0:	e8 e7 16 00 00       	call   186bc <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   16fd5:	c9                   	leave
   16fd6:	c3                   	ret
   16fd7:	90                   	nop

0000000000016fd8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   16fd8:	55                   	push   %rbp
   16fd9:	48 89 e5             	mov    %rsp,%rbp
   16fdc:	53                   	push   %rbx
   16fdd:	48 83 ec 38          	sub    $0x38,%rsp
   16fe1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16fe5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16fe9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   16fed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ff1:	48 89 c7             	mov    %rax,%rdi
   16ff4:	e8 93 ff ff ff       	call   16f8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   16ff9:	48 89 c3             	mov    %rax,%rbx
   16ffc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17000:	48 89 c7             	mov    %rax,%rdi
   17003:	e8 94 c7 ff ff       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   17008:	48 29 c3             	sub    %rax,%rbx
   1700b:	48 89 da             	mov    %rbx,%rdx
   1700e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17012:	48 39 c2             	cmp    %rax,%rdx
   17015:	0f 92 c0             	setb   %al
   17018:	84 c0                	test   %al,%al
   1701a:	74 0c                	je     17028 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1701c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17020:	48 89 c7             	mov    %rax,%rdi
   17023:	e8 b8 d1 fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   17028:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1702c:	48 89 c7             	mov    %rax,%rdi
   1702f:	e8 68 c7 ff ff       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   17034:	48 89 c3             	mov    %rax,%rbx
   17037:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1703b:	48 89 c7             	mov    %rax,%rdi
   1703e:	e8 59 c7 ff ff       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   17043:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17047:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1704b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1704f:	48 89 d6             	mov    %rdx,%rsi
   17052:	48 89 c7             	mov    %rax,%rdi
   17055:	e8 ae 0e 00 00       	call   17f08 <_ZSt3maxImERKT_S2_S2_>
   1705a:	48 8b 00             	mov    (%rax),%rax
   1705d:	48 01 d8             	add    %rbx,%rax
   17060:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   17064:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17068:	48 89 c7             	mov    %rax,%rdi
   1706b:	e8 2c c7 ff ff       	call   1379c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   17070:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17074:	72 12                	jb     17088 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   17076:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1707a:	48 89 c7             	mov    %rax,%rdi
   1707d:	e8 0a ff ff ff       	call   16f8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   17082:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17086:	73 0e                	jae    17096 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   17088:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1708c:	48 89 c7             	mov    %rax,%rdi
   1708f:	e8 f8 fe ff ff       	call   16f8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   17094:	eb 04                	jmp    1709a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   17096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1709a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1709e:	c9                   	leave
   1709f:	c3                   	ret

00000000000170a0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   170a0:	55                   	push   %rbp
   170a1:	48 89 e5             	mov    %rsp,%rbp
   170a4:	48 83 ec 10          	sub    $0x10,%rsp
   170a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   170b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   170b5:	74 15                	je     170cc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   170b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   170bf:	48 89 d6             	mov    %rdx,%rsi
   170c2:	48 89 c7             	mov    %rax,%rdi
   170c5:	e8 1b 16 00 00       	call   186e5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   170ca:	eb 05                	jmp    170d1 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   170cc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   170d1:	c9                   	leave
   170d2:	c3                   	ret

00000000000170d3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   170d3:	55                   	push   %rbp
   170d4:	48 89 e5             	mov    %rsp,%rbp
   170d7:	48 83 ec 20          	sub    $0x20,%rsp
   170db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   170e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   170e7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   170eb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   170ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   170f3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   170f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170fb:	48 89 c7             	mov    %rax,%rdi
   170fe:	e8 0c 16 00 00       	call   1870f <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   17103:	c9                   	leave
   17104:	c3                   	ret

0000000000017105 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   17105:	55                   	push   %rbp
   17106:	48 89 e5             	mov    %rsp,%rbp
   17109:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1710d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   17111:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17115:	48 c1 e0 04          	shl    $0x4,%rax
   17119:	48 89 c2             	mov    %rax,%rdx
   1711c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17120:	48 01 d0             	add    %rdx,%rax
   17123:	5d                   	pop    %rbp
   17124:	c3                   	ret
   17125:	90                   	nop

0000000000017126 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   17126:	55                   	push   %rbp
   17127:	48 89 e5             	mov    %rsp,%rbp
   1712a:	48 83 ec 10          	sub    $0x10,%rsp
   1712e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   17136:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1713a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1713e:	48 89 d6             	mov    %rdx,%rsi
   17141:	48 89 c7             	mov    %rax,%rdi
   17144:	e8 29 16 00 00       	call   18772 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   17149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1714d:	48 89 c7             	mov    %rax,%rdi
   17150:	e8 43 16 00 00       	call   18798 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   17155:	90                   	nop
   17156:	c9                   	leave
   17157:	c3                   	ret

0000000000017158 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   17158:	55                   	push   %rbp
   17159:	48 89 e5             	mov    %rsp,%rbp
   1715c:	48 83 ec 20          	sub    $0x20,%rsp
   17160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17168:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1716c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17171:	74 17                	je     1718a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17177:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1717b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1717f:	48 89 ce             	mov    %rcx,%rsi
   17182:	48 89 c7             	mov    %rax,%rdi
   17185:	e8 3c 16 00 00       	call   187c6 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   1718a:	90                   	nop
   1718b:	c9                   	leave
   1718c:	c3                   	ret
   1718d:	90                   	nop

000000000001718e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   1718e:	55                   	push   %rbp
   1718f:	48 89 e5             	mov    %rsp,%rbp
   17192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1719a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1719e:	5d                   	pop    %rbp
   1719f:	c3                   	ret

00000000000171a0 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   171a0:	55                   	push   %rbp
   171a1:	48 89 e5             	mov    %rsp,%rbp
   171a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   171a8:	90                   	nop
   171a9:	5d                   	pop    %rbp
   171aa:	c3                   	ret

00000000000171ab <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   171ab:	55                   	push   %rbp
   171ac:	48 89 e5             	mov    %rsp,%rbp
   171af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   171b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   171bb:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   171bf:	48 c1 f8 04          	sar    $0x4,%rax
   171c3:	48 89 c2             	mov    %rax,%rdx
   171c6:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   171cd:	e3 38 8e 
   171d0:	48 0f af c2          	imul   %rdx,%rax
    }
   171d4:	5d                   	pop    %rbp
   171d5:	c3                   	ret

00000000000171d6 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   171d6:	55                   	push   %rbp
   171d7:	48 89 e5             	mov    %rsp,%rbp
   171da:	53                   	push   %rbx
   171db:	48 83 ec 28          	sub    $0x28,%rsp
   171df:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   171e3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   171e7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   171eb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   171ef:	48 89 d6             	mov    %rdx,%rsi
   171f2:	48 89 c7             	mov    %rax,%rdi
   171f5:	e8 78 15 00 00       	call   18772 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   171fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   171fe:	48 89 c7             	mov    %rax,%rdi
   17201:	e8 ee 15 00 00       	call   187f4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   17206:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1720a:	0f 92 c3             	setb   %bl
   1720d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17211:	48 89 c7             	mov    %rax,%rdi
   17214:	e8 ef c2 ff ff       	call   13508 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   17219:	84 db                	test   %bl,%bl
   1721b:	74 0f                	je     1722c <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   1721d:	48 8d 05 9c 8f 00 00 	lea    0x8f9c(%rip),%rax        # 201c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   17224:	48 89 c7             	mov    %rax,%rdi
   17227:	e8 b4 cf fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1722c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   17230:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17234:	c9                   	leave
   17235:	c3                   	ret

0000000000017236 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   17236:	55                   	push   %rbp
   17237:	48 89 e5             	mov    %rsp,%rbp
   1723a:	48 83 ec 10          	sub    $0x10,%rsp
   1723e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17242:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   17246:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1724b:	74 15                	je     17262 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   1724d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17251:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17255:	48 89 d6             	mov    %rdx,%rsi
   17258:	48 89 c7             	mov    %rax,%rdi
   1725b:	e8 d6 15 00 00       	call   18836 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   17260:	eb 05                	jmp    17267 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   17262:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   17267:	c9                   	leave
   17268:	c3                   	ret

0000000000017269 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   17269:	55                   	push   %rbp
   1726a:	48 89 e5             	mov    %rsp,%rbp
   1726d:	48 83 ec 20          	sub    $0x20,%rsp
   17271:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17275:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17279:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1727d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   17281:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17285:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17289:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1728d:	48 89 ce             	mov    %rcx,%rsi
   17290:	48 89 c7             	mov    %rax,%rdi
   17293:	e8 c8 15 00 00       	call   18860 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   17298:	c9                   	leave
   17299:	c3                   	ret

000000000001729a <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1729a:	55                   	push   %rbp
   1729b:	48 89 e5             	mov    %rsp,%rbp
   1729e:	48 83 ec 10          	sub    $0x10,%rsp
   172a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   172aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   172ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172b2:	48 89 d6             	mov    %rdx,%rsi
   172b5:	48 89 c7             	mov    %rax,%rdi
   172b8:	e8 d8 15 00 00       	call   18895 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   172bd:	90                   	nop
   172be:	c9                   	leave
   172bf:	c3                   	ret

00000000000172c0 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   172c0:	55                   	push   %rbp
   172c1:	48 89 e5             	mov    %rsp,%rbp
   172c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172c8:	90                   	nop
   172c9:	5d                   	pop    %rbp
   172ca:	c3                   	ret
   172cb:	90                   	nop

00000000000172cc <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   172cc:	55                   	push   %rbp
   172cd:	48 89 e5             	mov    %rsp,%rbp
   172d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172d4:	90                   	nop
   172d5:	5d                   	pop    %rbp
   172d6:	c3                   	ret

00000000000172d7 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   172d7:	55                   	push   %rbp
   172d8:	48 89 e5             	mov    %rsp,%rbp
   172db:	53                   	push   %rbx
   172dc:	48 83 ec 28          	sub    $0x28,%rsp
   172e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   172e4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   172e8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   172ec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   172f0:	48 89 d6             	mov    %rdx,%rsi
   172f3:	48 89 c7             	mov    %rax,%rdi
   172f6:	e8 ff 00 00 00       	call   173fa <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   172fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   172ff:	48 89 c7             	mov    %rax,%rdi
   17302:	e8 9d 15 00 00       	call   188a4 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   17307:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1730b:	0f 92 c3             	setb   %bl
   1730e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17312:	48 89 c7             	mov    %rax,%rdi
   17315:	e8 fc de ff ff       	call   15216 <_ZNSaIP12VkPipeline_TED1Ev>
   1731a:	84 db                	test   %bl,%bl
   1731c:	74 0f                	je     1732d <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1731e:	48 8d 05 9b 8e 00 00 	lea    0x8e9b(%rip),%rax        # 201c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   17325:	48 89 c7             	mov    %rax,%rdi
   17328:	e8 b3 ce fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1732d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   17331:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17335:	c9                   	leave
   17336:	c3                   	ret
   17337:	90                   	nop

0000000000017338 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   17338:	55                   	push   %rbp
   17339:	48 89 e5             	mov    %rsp,%rbp
   1733c:	53                   	push   %rbx
   1733d:	48 83 ec 28          	sub    $0x28,%rsp
   17341:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17345:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17349:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   1734d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17351:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17355:	48 89 d6             	mov    %rdx,%rsi
   17358:	48 89 c7             	mov    %rax,%rdi
   1735b:	e8 86 15 00 00       	call   188e6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   17360:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17364:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17368:	48 89 d6             	mov    %rdx,%rsi
   1736b:	48 89 c7             	mov    %rax,%rdi
   1736e:	e8 a5 15 00 00       	call   18918 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   17373:	eb 1a                	jmp    1738f <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   17375:	48 89 c3             	mov    %rax,%rbx
   17378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1737c:	48 89 c7             	mov    %rax,%rdi
   1737f:	e8 6c c2 ff ff       	call   135f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   17384:	48 89 d8             	mov    %rbx,%rax
   17387:	48 89 c7             	mov    %rax,%rdi
   1738a:	e8 21 d5 fe ff       	call   48b0 <_Unwind_Resume@plt>
   1738f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17393:	c9                   	leave
   17394:	c3                   	ret
   17395:	90                   	nop

0000000000017396 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   17396:	55                   	push   %rbp
   17397:	48 89 e5             	mov    %rsp,%rbp
   1739a:	48 83 ec 10          	sub    $0x10,%rsp
   1739e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   173a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173aa:	48 89 c7             	mov    %rax,%rdi
   173ad:	e8 8c df ff ff       	call   1533e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   173b2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   173b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173b9:	48 8b 00             	mov    (%rax),%rax
   173bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   173c0:	48 89 ce             	mov    %rcx,%rsi
   173c3:	48 89 c7             	mov    %rax,%rdi
   173c6:	e8 a3 15 00 00       	call   1896e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   173cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   173cf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   173d3:	90                   	nop
   173d4:	c9                   	leave
   173d5:	c3                   	ret

00000000000173d6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   173d6:	55                   	push   %rbp
   173d7:	48 89 e5             	mov    %rsp,%rbp
   173da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   173e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173e6:	5d                   	pop    %rbp
   173e7:	c3                   	ret

00000000000173e8 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   173e8:	55                   	push   %rbp
   173e9:	48 89 e5             	mov    %rsp,%rbp
   173ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   173f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173f8:	5d                   	pop    %rbp
   173f9:	c3                   	ret

00000000000173fa <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   173fa:	55                   	push   %rbp
   173fb:	48 89 e5             	mov    %rsp,%rbp
   173fe:	48 83 ec 10          	sub    $0x10,%rsp
   17402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17406:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1740a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1740e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17412:	48 89 d6             	mov    %rdx,%rsi
   17415:	48 89 c7             	mov    %rax,%rdi
   17418:	e8 7b 15 00 00       	call   18998 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   1741d:	90                   	nop
   1741e:	c9                   	leave
   1741f:	c3                   	ret

0000000000017420 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   17420:	55                   	push   %rbp
   17421:	48 89 e5             	mov    %rsp,%rbp
   17424:	48 83 ec 20          	sub    $0x20,%rsp
   17428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1742c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17430:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17434:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17439:	74 17                	je     17452 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1743b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1743f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17443:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17447:	48 89 ce             	mov    %rcx,%rsi
   1744a:	48 89 c7             	mov    %rax,%rdi
   1744d:	e8 55 15 00 00       	call   189a7 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   17452:	90                   	nop
   17453:	c9                   	leave
   17454:	c3                   	ret

0000000000017455 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17455:	55                   	push   %rbp
   17456:	48 89 e5             	mov    %rsp,%rbp
   17459:	48 83 ec 10          	sub    $0x10,%rsp
   1745d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17461:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17465:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1746d:	48 89 d6             	mov    %rdx,%rsi
   17470:	48 89 c7             	mov    %rax,%rdi
   17473:	e8 5d 15 00 00       	call   189d5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   17478:	90                   	nop
   17479:	c9                   	leave
   1747a:	c3                   	ret
   1747b:	90                   	nop

000000000001747c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1747c:	55                   	push   %rbp
   1747d:	48 89 e5             	mov    %rsp,%rbp
   17480:	48 83 ec 10          	sub    $0x10,%rsp
   17484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   17488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1748c:	48 89 c7             	mov    %rax,%rdi
   1748f:	e8 92 15 00 00       	call   18a26 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17494:	48 89 c7             	mov    %rax,%rdi
   17497:	e8 48 15 00 00       	call   189e4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   1749c:	c9                   	leave
   1749d:	c3                   	ret

000000000001749e <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1749e:	55                   	push   %rbp
   1749f:	48 89 e5             	mov    %rsp,%rbp
   174a2:	48 83 ec 20          	sub    $0x20,%rsp
   174a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   174ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   174b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   174b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174ba:	48 89 d6             	mov    %rdx,%rsi
   174bd:	48 89 c7             	mov    %rax,%rdi
   174c0:	e8 6f 15 00 00       	call   18a34 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   174c5:	c9                   	leave
   174c6:	c3                   	ret
   174c7:	90                   	nop

00000000000174c8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   174c8:	55                   	push   %rbp
   174c9:	48 89 e5             	mov    %rsp,%rbp
   174cc:	53                   	push   %rbx
   174cd:	48 83 ec 38          	sub    $0x38,%rsp
   174d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   174d5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   174d9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   174dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174e1:	48 89 c7             	mov    %rax,%rdi
   174e4:	e8 93 ff ff ff       	call   1747c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   174e9:	48 89 c3             	mov    %rax,%rbx
   174ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174f0:	48 89 c7             	mov    %rax,%rdi
   174f3:	e8 7e de ff ff       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   174f8:	48 29 c3             	sub    %rax,%rbx
   174fb:	48 89 da             	mov    %rbx,%rdx
   174fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17502:	48 39 c2             	cmp    %rax,%rdx
   17505:	0f 92 c0             	setb   %al
   17508:	84 c0                	test   %al,%al
   1750a:	74 0c                	je     17518 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1750c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17510:	48 89 c7             	mov    %rax,%rdi
   17513:	e8 c8 cc fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   17518:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1751c:	48 89 c7             	mov    %rax,%rdi
   1751f:	e8 52 de ff ff       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   17524:	48 89 c3             	mov    %rax,%rbx
   17527:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1752b:	48 89 c7             	mov    %rax,%rdi
   1752e:	e8 43 de ff ff       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   17533:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17537:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1753b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1753f:	48 89 d6             	mov    %rdx,%rsi
   17542:	48 89 c7             	mov    %rax,%rdi
   17545:	e8 be 09 00 00       	call   17f08 <_ZSt3maxImERKT_S2_S2_>
   1754a:	48 8b 00             	mov    (%rax),%rax
   1754d:	48 01 d8             	add    %rbx,%rax
   17550:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   17554:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17558:	48 89 c7             	mov    %rax,%rdi
   1755b:	e8 16 de ff ff       	call   15376 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   17560:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17564:	72 12                	jb     17578 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   17566:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1756a:	48 89 c7             	mov    %rax,%rdi
   1756d:	e8 0a ff ff ff       	call   1747c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   17572:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17576:	73 0e                	jae    17586 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   17578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1757c:	48 89 c7             	mov    %rax,%rdi
   1757f:	e8 f8 fe ff ff       	call   1747c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   17584:	eb 04                	jmp    1758a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   17586:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1758a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1758e:	c9                   	leave
   1758f:	c3                   	ret

0000000000017590 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   17590:	55                   	push   %rbp
   17591:	48 89 e5             	mov    %rsp,%rbp
   17594:	48 83 ec 10          	sub    $0x10,%rsp
   17598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1759c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   175a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   175a5:	74 15                	je     175bc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   175a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   175af:	48 89 d6             	mov    %rdx,%rsi
   175b2:	48 89 c7             	mov    %rax,%rdi
   175b5:	e8 a3 14 00 00       	call   18a5d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   175ba:	eb 05                	jmp    175c1 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   175bc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   175c1:	c9                   	leave
   175c2:	c3                   	ret

00000000000175c3 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   175c3:	55                   	push   %rbp
   175c4:	48 89 e5             	mov    %rsp,%rbp
   175c7:	48 83 ec 20          	sub    $0x20,%rsp
   175cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   175cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   175d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   175d7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   175db:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   175df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   175e3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   175e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175eb:	48 89 c7             	mov    %rax,%rdi
   175ee:	e8 94 14 00 00       	call   18a87 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   175f3:	c9                   	leave
   175f4:	c3                   	ret
   175f5:	90                   	nop

00000000000175f6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   175f6:	55                   	push   %rbp
   175f7:	48 89 e5             	mov    %rsp,%rbp
   175fa:	48 83 ec 10          	sub    $0x10,%rsp
   175fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17602:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   17606:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1760a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1760e:	48 89 d6             	mov    %rdx,%rsi
   17611:	48 89 c7             	mov    %rax,%rdi
   17614:	e8 d1 14 00 00       	call   18aea <_ZNSaIP13VkImageView_TEC1ERKS1_>
   17619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1761d:	48 89 c7             	mov    %rax,%rdi
   17620:	e8 6b eb ff ff       	call   16190 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   17625:	90                   	nop
   17626:	c9                   	leave
   17627:	c3                   	ret

0000000000017628 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   17628:	55                   	push   %rbp
   17629:	48 89 e5             	mov    %rsp,%rbp
   1762c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17634:	48 8b 40 08          	mov    0x8(%rax),%rax
   17638:	5d                   	pop    %rbp
   17639:	c3                   	ret

000000000001763a <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1763a:	55                   	push   %rbp
   1763b:	48 89 e5             	mov    %rsp,%rbp
   1763e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17642:	90                   	nop
   17643:	5d                   	pop    %rbp
   17644:	c3                   	ret

0000000000017645 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   17645:	55                   	push   %rbp
   17646:	48 89 e5             	mov    %rsp,%rbp
   17649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1764d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   17651:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17655:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17659:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1765d:	5d                   	pop    %rbp
   1765e:	c3                   	ret

000000000001765f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1765f:	55                   	push   %rbp
   17660:	48 89 e5             	mov    %rsp,%rbp
   17663:	53                   	push   %rbx
   17664:	48 83 ec 28          	sub    $0x28,%rsp
   17668:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1766c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   17670:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17674:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17678:	48 89 d6             	mov    %rdx,%rsi
   1767b:	48 89 c7             	mov    %rax,%rdi
   1767e:	e8 67 14 00 00       	call   18aea <_ZNSaIP13VkImageView_TEC1ERKS1_>
   17683:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17687:	48 89 c7             	mov    %rax,%rdi
   1768a:	e8 dc 0f 00 00       	call   1866b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1768f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17693:	0f 92 c3             	setb   %bl
   17696:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1769a:	48 89 c7             	mov    %rax,%rdi
   1769d:	e8 c0 c1 ff ff       	call   13862 <_ZNSaIP13VkImageView_TED1Ev>
   176a2:	84 db                	test   %bl,%bl
   176a4:	74 0f                	je     176b5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   176a6:	48 8d 05 13 8b 00 00 	lea    0x8b13(%rip),%rax        # 201c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   176ad:	48 89 c7             	mov    %rax,%rdi
   176b0:	e8 2b cb fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   176b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   176b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   176bd:	c9                   	leave
   176be:	c3                   	ret

00000000000176bf <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   176bf:	55                   	push   %rbp
   176c0:	48 89 e5             	mov    %rsp,%rbp
   176c3:	48 83 ec 20          	sub    $0x20,%rsp
   176c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   176cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   176d3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   176d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   176db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   176df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176e3:	48 89 ce             	mov    %rcx,%rsi
   176e6:	48 89 c7             	mov    %rax,%rdi
   176e9:	e8 22 14 00 00       	call   18b10 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   176ee:	c9                   	leave
   176ef:	c3                   	ret

00000000000176f0 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   176f0:	55                   	push   %rbp
   176f1:	48 89 e5             	mov    %rsp,%rbp
   176f4:	48 83 ec 10          	sub    $0x10,%rsp
   176f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17700:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17708:	48 89 d6             	mov    %rdx,%rsi
   1770b:	48 89 c7             	mov    %rax,%rdi
   1770e:	e8 32 14 00 00       	call   18b45 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   17713:	90                   	nop
   17714:	c9                   	leave
   17715:	c3                   	ret

0000000000017716 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   17716:	55                   	push   %rbp
   17717:	48 89 e5             	mov    %rsp,%rbp
   1771a:	48 83 ec 10          	sub    $0x10,%rsp
   1771e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   17726:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1772a:	48 89 c7             	mov    %rax,%rdi
   1772d:	e8 22 14 00 00       	call   18b54 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17732:	48 89 c2             	mov    %rax,%rdx
   17735:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17739:	48 89 d6             	mov    %rdx,%rsi
   1773c:	48 89 c7             	mov    %rax,%rdi
   1773f:	e8 5c e7 fe ff       	call   5ea0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   17744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17748:	c9                   	leave
   17749:	c3                   	ret

000000000001774a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1774a:	55                   	push   %rbp
   1774b:	48 89 e5             	mov    %rsp,%rbp
   1774e:	48 83 ec 10          	sub    $0x10,%rsp
   17752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17756:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   1775a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1775e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17762:	48 89 d6             	mov    %rdx,%rsi
   17765:	48 89 c7             	mov    %rax,%rdi
   17768:	e8 f5 13 00 00       	call   18b62 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   1776d:	90                   	nop
   1776e:	c9                   	leave
   1776f:	c3                   	ret

0000000000017770 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   17770:	55                   	push   %rbp
   17771:	48 89 e5             	mov    %rsp,%rbp
   17774:	48 83 ec 30          	sub    $0x30,%rsp
   17778:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1777c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   17780:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17784:	48 89 c7             	mov    %rax,%rdi
   17787:	e8 e2 e8 fe ff       	call   606e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   1778c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17790:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17794:	48 89 d6             	mov    %rdx,%rsi
   17797:	48 89 c7             	mov    %rax,%rdi
   1779a:	e8 e9 13 00 00       	call   18b88 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   1779f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   177a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   177a7:	48 89 d6             	mov    %rdx,%rsi
   177aa:	48 89 c7             	mov    %rax,%rdi
   177ad:	e8 d6 13 00 00       	call   18b88 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   177b2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   177b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   177ba:	48 89 d6             	mov    %rdx,%rsi
   177bd:	48 89 c7             	mov    %rax,%rdi
   177c0:	e8 c3 13 00 00       	call   18b88 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   177c5:	90                   	nop
   177c6:	c9                   	leave
   177c7:	c3                   	ret

00000000000177c8 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   177c8:	55                   	push   %rbp
   177c9:	48 89 e5             	mov    %rsp,%rbp
   177cc:	48 83 ec 10          	sub    $0x10,%rsp
   177d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   177d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177dc:	48 89 c7             	mov    %rax,%rdi
   177df:	e8 e1 13 00 00       	call   18bc5 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   177e4:	90                   	nop
   177e5:	c9                   	leave
   177e6:	c3                   	ret
   177e7:	90                   	nop

00000000000177e8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   177e8:	55                   	push   %rbp
   177e9:	48 89 e5             	mov    %rsp,%rbp
   177ec:	48 83 ec 10          	sub    $0x10,%rsp
   177f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   177f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177f8:	48 89 c7             	mov    %rax,%rdi
   177fb:	e8 16 14 00 00       	call   18c16 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   17800:	48 89 c7             	mov    %rax,%rdi
   17803:	e8 cb 13 00 00       	call   18bd3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   17808:	c9                   	leave
   17809:	c3                   	ret

000000000001780a <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1780a:	55                   	push   %rbp
   1780b:	48 89 e5             	mov    %rsp,%rbp
   1780e:	48 83 ec 20          	sub    $0x20,%rsp
   17812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17816:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1781a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1781e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17826:	48 89 d6             	mov    %rdx,%rsi
   17829:	48 89 c7             	mov    %rax,%rdi
   1782c:	e8 f3 13 00 00       	call   18c24 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   17831:	c9                   	leave
   17832:	c3                   	ret
   17833:	90                   	nop

0000000000017834 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   17834:	55                   	push   %rbp
   17835:	48 89 e5             	mov    %rsp,%rbp
   17838:	53                   	push   %rbx
   17839:	48 83 ec 38          	sub    $0x38,%rsp
   1783d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17841:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17845:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   17849:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1784d:	48 89 c7             	mov    %rax,%rdi
   17850:	e8 93 ff ff ff       	call   177e8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   17855:	48 89 c3             	mov    %rax,%rbx
   17858:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1785c:	48 89 c7             	mov    %rax,%rdi
   1785f:	e8 a0 c6 ff ff       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   17864:	48 29 c3             	sub    %rax,%rbx
   17867:	48 89 da             	mov    %rbx,%rdx
   1786a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1786e:	48 39 c2             	cmp    %rax,%rdx
   17871:	0f 92 c0             	setb   %al
   17874:	84 c0                	test   %al,%al
   17876:	74 0c                	je     17884 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   17878:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1787c:	48 89 c7             	mov    %rax,%rdi
   1787f:	e8 5c c9 fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   17884:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17888:	48 89 c7             	mov    %rax,%rdi
   1788b:	e8 74 c6 ff ff       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   17890:	48 89 c3             	mov    %rax,%rbx
   17893:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17897:	48 89 c7             	mov    %rax,%rdi
   1789a:	e8 65 c6 ff ff       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1789f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   178a3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   178a7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   178ab:	48 89 d6             	mov    %rdx,%rsi
   178ae:	48 89 c7             	mov    %rax,%rdi
   178b1:	e8 52 06 00 00       	call   17f08 <_ZSt3maxImERKT_S2_S2_>
   178b6:	48 8b 00             	mov    (%rax),%rax
   178b9:	48 01 d8             	add    %rbx,%rax
   178bc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   178c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   178c4:	48 89 c7             	mov    %rax,%rdi
   178c7:	e8 38 c6 ff ff       	call   13f04 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   178cc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   178d0:	72 12                	jb     178e4 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   178d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   178d6:	48 89 c7             	mov    %rax,%rdi
   178d9:	e8 0a ff ff ff       	call   177e8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   178de:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   178e2:	73 0e                	jae    178f2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   178e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   178e8:	48 89 c7             	mov    %rax,%rdi
   178eb:	e8 f8 fe ff ff       	call   177e8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   178f0:	eb 04                	jmp    178f6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   178f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   178f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   178fa:	c9                   	leave
   178fb:	c3                   	ret

00000000000178fc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   178fc:	55                   	push   %rbp
   178fd:	48 89 e5             	mov    %rsp,%rbp
   17900:	48 83 ec 10          	sub    $0x10,%rsp
   17904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17908:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1790c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17911:	74 15                	je     17928 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   17913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17917:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1791b:	48 89 d6             	mov    %rdx,%rsi
   1791e:	48 89 c7             	mov    %rax,%rdi
   17921:	e8 27 13 00 00       	call   18c4d <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   17926:	eb 05                	jmp    1792d <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   17928:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1792d:	c9                   	leave
   1792e:	c3                   	ret

000000000001792f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1792f:	55                   	push   %rbp
   17930:	48 89 e5             	mov    %rsp,%rbp
   17933:	48 83 ec 20          	sub    $0x20,%rsp
   17937:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1793b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1793f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17943:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   17947:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1794b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1794f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17957:	48 89 c7             	mov    %rax,%rdi
   1795a:	e8 18 13 00 00       	call   18c77 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1795f:	c9                   	leave
   17960:	c3                   	ret
   17961:	90                   	nop

0000000000017962 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   17962:	55                   	push   %rbp
   17963:	48 89 e5             	mov    %rsp,%rbp
   17966:	48 83 ec 10          	sub    $0x10,%rsp
   1796a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1796e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17972:	48 89 c7             	mov    %rax,%rdi
   17975:	e8 a2 13 00 00       	call   18d1c <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1797a:	48 89 c7             	mov    %rax,%rdi
   1797d:	e8 58 13 00 00       	call   18cda <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   17982:	c9                   	leave
   17983:	c3                   	ret

0000000000017984 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   17984:	55                   	push   %rbp
   17985:	48 89 e5             	mov    %rsp,%rbp
   17988:	48 83 ec 20          	sub    $0x20,%rsp
   1798c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17994:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   17998:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1799c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179a0:	48 89 d6             	mov    %rdx,%rsi
   179a3:	48 89 c7             	mov    %rax,%rdi
   179a6:	e8 7f 13 00 00       	call   18d2a <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   179ab:	c9                   	leave
   179ac:	c3                   	ret
   179ad:	90                   	nop

00000000000179ae <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   179ae:	55                   	push   %rbp
   179af:	48 89 e5             	mov    %rsp,%rbp
   179b2:	53                   	push   %rbx
   179b3:	48 83 ec 38          	sub    $0x38,%rsp
   179b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   179bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   179bf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   179c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   179c7:	48 89 c7             	mov    %rax,%rdi
   179ca:	e8 93 ff ff ff       	call   17962 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   179cf:	48 89 c3             	mov    %rax,%rbx
   179d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   179d6:	48 89 c7             	mov    %rax,%rdi
   179d9:	e8 5a e1 ff ff       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   179de:	48 29 c3             	sub    %rax,%rbx
   179e1:	48 89 da             	mov    %rbx,%rdx
   179e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   179e8:	48 39 c2             	cmp    %rax,%rdx
   179eb:	0f 92 c0             	setb   %al
   179ee:	84 c0                	test   %al,%al
   179f0:	74 0c                	je     179fe <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   179f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   179f6:	48 89 c7             	mov    %rax,%rdi
   179f9:	e8 e2 c7 fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   179fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a02:	48 89 c7             	mov    %rax,%rdi
   17a05:	e8 2e e1 ff ff       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17a0a:	48 89 c3             	mov    %rax,%rbx
   17a0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a11:	48 89 c7             	mov    %rax,%rdi
   17a14:	e8 1f e1 ff ff       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17a19:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17a1d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   17a21:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17a25:	48 89 d6             	mov    %rdx,%rsi
   17a28:	48 89 c7             	mov    %rax,%rdi
   17a2b:	e8 d8 04 00 00       	call   17f08 <_ZSt3maxImERKT_S2_S2_>
   17a30:	48 8b 00             	mov    (%rax),%rax
   17a33:	48 01 d8             	add    %rbx,%rax
   17a36:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   17a3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a3e:	48 89 c7             	mov    %rax,%rdi
   17a41:	e8 f2 e0 ff ff       	call   15b38 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17a46:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   17a4a:	72 12                	jb     17a5e <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   17a4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a50:	48 89 c7             	mov    %rax,%rdi
   17a53:	e8 0a ff ff ff       	call   17962 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   17a58:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   17a5c:	73 0e                	jae    17a6c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   17a5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a62:	48 89 c7             	mov    %rax,%rdi
   17a65:	e8 f8 fe ff ff       	call   17962 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   17a6a:	eb 04                	jmp    17a70 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   17a6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   17a70:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17a74:	c9                   	leave
   17a75:	c3                   	ret

0000000000017a76 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   17a76:	55                   	push   %rbp
   17a77:	48 89 e5             	mov    %rsp,%rbp
   17a7a:	48 83 ec 10          	sub    $0x10,%rsp
   17a7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   17a86:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17a8b:	74 15                	je     17aa2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   17a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17a95:	48 89 d6             	mov    %rdx,%rsi
   17a98:	48 89 c7             	mov    %rax,%rdi
   17a9b:	e8 b3 12 00 00       	call   18d53 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   17aa0:	eb 05                	jmp    17aa7 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   17aa2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   17aa7:	c9                   	leave
   17aa8:	c3                   	ret

0000000000017aa9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   17aa9:	55                   	push   %rbp
   17aaa:	48 89 e5             	mov    %rsp,%rbp
   17aad:	48 83 ec 20          	sub    $0x20,%rsp
   17ab1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ab5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ab9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17abd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   17ac1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17ac5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ac9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ad1:	48 89 c7             	mov    %rax,%rdi
   17ad4:	e8 a4 12 00 00       	call   18d7d <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   17ad9:	c9                   	leave
   17ada:	c3                   	ret
   17adb:	90                   	nop

0000000000017adc <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   17adc:	55                   	push   %rbp
   17add:	48 89 e5             	mov    %rsp,%rbp
   17ae0:	48 83 ec 10          	sub    $0x10,%rsp
   17ae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ae8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   17aec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17af4:	48 89 d6             	mov    %rdx,%rsi
   17af7:	48 89 c7             	mov    %rax,%rdi
   17afa:	e8 e1 12 00 00       	call   18de0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   17aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b03:	48 89 c7             	mov    %rax,%rdi
   17b06:	e8 ad e7 ff ff       	call   162b8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   17b0b:	90                   	nop
   17b0c:	c9                   	leave
   17b0d:	c3                   	ret

0000000000017b0e <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   17b0e:	55                   	push   %rbp
   17b0f:	48 89 e5             	mov    %rsp,%rbp
   17b12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b1a:	48 8b 40 08          	mov    0x8(%rax),%rax
   17b1e:	5d                   	pop    %rbp
   17b1f:	c3                   	ret

0000000000017b20 <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   17b20:	55                   	push   %rbp
   17b21:	48 89 e5             	mov    %rsp,%rbp
   17b24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17b28:	90                   	nop
   17b29:	5d                   	pop    %rbp
   17b2a:	c3                   	ret

0000000000017b2b <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   17b2b:	55                   	push   %rbp
   17b2c:	48 89 e5             	mov    %rsp,%rbp
   17b2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17b33:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   17b37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b3b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17b3f:	48 c1 f8 03          	sar    $0x3,%rax
    }
   17b43:	5d                   	pop    %rbp
   17b44:	c3                   	ret

0000000000017b45 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   17b45:	55                   	push   %rbp
   17b46:	48 89 e5             	mov    %rsp,%rbp
   17b49:	53                   	push   %rbx
   17b4a:	48 83 ec 28          	sub    $0x28,%rsp
   17b4e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17b52:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   17b56:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17b5a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17b5e:	48 89 d6             	mov    %rdx,%rsi
   17b61:	48 89 c7             	mov    %rax,%rdi
   17b64:	e8 77 12 00 00       	call   18de0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   17b69:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17b6d:	48 89 c7             	mov    %rax,%rdi
   17b70:	e8 5e 10 00 00       	call   18bd3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   17b75:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17b79:	0f 92 c3             	setb   %bl
   17b7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17b80:	48 89 c7             	mov    %rax,%rdi
   17b83:	e8 90 c1 ff ff       	call   13d18 <_ZNSaIP13VkSemaphore_TED1Ev>
   17b88:	84 db                	test   %bl,%bl
   17b8a:	74 0f                	je     17b9b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   17b8c:	48 8d 05 2d 86 00 00 	lea    0x862d(%rip),%rax        # 201c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   17b93:	48 89 c7             	mov    %rax,%rdi
   17b96:	e8 45 c6 fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   17b9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   17b9f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17ba3:	c9                   	leave
   17ba4:	c3                   	ret

0000000000017ba5 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   17ba5:	55                   	push   %rbp
   17ba6:	48 89 e5             	mov    %rsp,%rbp
   17ba9:	48 83 ec 20          	sub    $0x20,%rsp
   17bad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17bb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17bb9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   17bbd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17bc1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bc9:	48 89 ce             	mov    %rcx,%rsi
   17bcc:	48 89 c7             	mov    %rax,%rdi
   17bcf:	e8 32 12 00 00       	call   18e06 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   17bd4:	c9                   	leave
   17bd5:	c3                   	ret

0000000000017bd6 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17bd6:	55                   	push   %rbp
   17bd7:	48 89 e5             	mov    %rsp,%rbp
   17bda:	48 83 ec 10          	sub    $0x10,%rsp
   17bde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17be2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17be6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bee:	48 89 d6             	mov    %rdx,%rsi
   17bf1:	48 89 c7             	mov    %rax,%rdi
   17bf4:	e8 42 12 00 00       	call   18e3b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   17bf9:	90                   	nop
   17bfa:	c9                   	leave
   17bfb:	c3                   	ret

0000000000017bfc <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   17bfc:	55                   	push   %rbp
   17bfd:	48 89 e5             	mov    %rsp,%rbp
   17c00:	48 83 ec 10          	sub    $0x10,%rsp
   17c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   17c0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c14:	48 89 d6             	mov    %rdx,%rsi
   17c17:	48 89 c7             	mov    %rax,%rdi
   17c1a:	e8 2b 12 00 00       	call   18e4a <_ZNSaIjEC1ERKS_>
   17c1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c23:	48 89 c7             	mov    %rax,%rdi
   17c26:	e8 45 12 00 00       	call   18e70 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   17c2b:	90                   	nop
   17c2c:	c9                   	leave
   17c2d:	c3                   	ret

0000000000017c2e <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   17c2e:	55                   	push   %rbp
   17c2f:	48 89 e5             	mov    %rsp,%rbp
   17c32:	48 83 ec 20          	sub    $0x20,%rsp
   17c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   17c42:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17c47:	74 17                	je     17c60 <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   17c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17c51:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17c55:	48 89 ce             	mov    %rcx,%rsi
   17c58:	48 89 c7             	mov    %rax,%rdi
   17c5b:	e8 3e 12 00 00       	call   18e9e <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   17c60:	90                   	nop
   17c61:	c9                   	leave
   17c62:	c3                   	ret
   17c63:	90                   	nop

0000000000017c64 <_ZNKSt16initializer_listIjE4sizeEv>:
   17c64:	55                   	push   %rbp
   17c65:	48 89 e5             	mov    %rsp,%rbp
   17c68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c70:	48 8b 40 08          	mov    0x8(%rax),%rax
   17c74:	5d                   	pop    %rbp
   17c75:	c3                   	ret

0000000000017c76 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   17c76:	55                   	push   %rbp
   17c77:	48 89 e5             	mov    %rsp,%rbp
   17c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17c7e:	90                   	nop
   17c7f:	5d                   	pop    %rbp
   17c80:	c3                   	ret

0000000000017c81 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   17c81:	55                   	push   %rbp
   17c82:	48 89 e5             	mov    %rsp,%rbp
   17c85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   17c8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c91:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17c95:	48 c1 f8 02          	sar    $0x2,%rax
    }
   17c99:	5d                   	pop    %rbp
   17c9a:	c3                   	ret

0000000000017c9b <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   17c9b:	55                   	push   %rbp
   17c9c:	48 89 e5             	mov    %rsp,%rbp
   17c9f:	53                   	push   %rbx
   17ca0:	48 83 ec 28          	sub    $0x28,%rsp
   17ca4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17ca8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   17cac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17cb0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17cb4:	48 89 d6             	mov    %rdx,%rsi
   17cb7:	48 89 c7             	mov    %rax,%rdi
   17cba:	e8 8b 11 00 00       	call   18e4a <_ZNSaIjEC1ERKS_>
   17cbf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17cc3:	48 89 c7             	mov    %rax,%rdi
   17cc6:	e8 01 12 00 00       	call   18ecc <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   17ccb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17ccf:	0f 92 c3             	setb   %bl
   17cd2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17cd6:	48 89 c7             	mov    %rax,%rdi
   17cd9:	e8 3e c1 ff ff       	call   13e1c <_ZNSaIjED1Ev>
   17cde:	84 db                	test   %bl,%bl
   17ce0:	74 0f                	je     17cf1 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   17ce2:	48 8d 05 d7 84 00 00 	lea    0x84d7(%rip),%rax        # 201c0 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   17ce9:	48 89 c7             	mov    %rax,%rdi
   17cec:	e8 ef c4 fe ff       	call   41e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   17cf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   17cf5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17cf9:	c9                   	leave
   17cfa:	c3                   	ret
   17cfb:	90                   	nop

0000000000017cfc <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   17cfc:	55                   	push   %rbp
   17cfd:	48 89 e5             	mov    %rsp,%rbp
   17d00:	48 83 ec 10          	sub    $0x10,%rsp
   17d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   17d0c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17d11:	74 15                	je     17d28 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   17d13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17d1b:	48 89 d6             	mov    %rdx,%rsi
   17d1e:	48 89 c7             	mov    %rax,%rdi
   17d21:	e8 e8 11 00 00       	call   18f0e <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   17d26:	eb 05                	jmp    17d2d <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   17d28:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   17d2d:	c9                   	leave
   17d2e:	c3                   	ret

0000000000017d2f <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   17d2f:	55                   	push   %rbp
   17d30:	48 89 e5             	mov    %rsp,%rbp
   17d33:	48 83 ec 20          	sub    $0x20,%rsp
   17d37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d3f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17d43:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   17d47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17d4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d53:	48 89 ce             	mov    %rcx,%rsi
   17d56:	48 89 c7             	mov    %rax,%rdi
   17d59:	e8 da 11 00 00       	call   18f38 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   17d5e:	c9                   	leave
   17d5f:	c3                   	ret

0000000000017d60 <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17d60:	55                   	push   %rbp
   17d61:	48 89 e5             	mov    %rsp,%rbp
   17d64:	48 83 ec 10          	sub    $0x10,%rsp
   17d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17d70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d78:	48 89 d6             	mov    %rdx,%rsi
   17d7b:	48 89 c7             	mov    %rax,%rdi
   17d7e:	e8 ea 11 00 00       	call   18f6d <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   17d83:	90                   	nop
   17d84:	c9                   	leave
   17d85:	c3                   	ret

0000000000017d86 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17d86:	55                   	push   %rbp
   17d87:	48 89 e5             	mov    %rsp,%rbp
   17d8a:	48 83 ec 20          	sub    $0x20,%rsp
   17d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17d9a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17da6:	48 89 ce             	mov    %rcx,%rsi
   17da9:	48 89 c7             	mov    %rax,%rdi
   17dac:	e8 cb 11 00 00       	call   18f7c <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   17db1:	90                   	nop
   17db2:	c9                   	leave
   17db3:	c3                   	ret

0000000000017db4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   17db4:	55                   	push   %rbp
   17db5:	48 89 e5             	mov    %rsp,%rbp
   17db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dbc:	90                   	nop
   17dbd:	5d                   	pop    %rbp
   17dbe:	c3                   	ret

0000000000017dbf <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17dbf:	55                   	push   %rbp
   17dc0:	48 89 e5             	mov    %rsp,%rbp
   17dc3:	48 83 ec 20          	sub    $0x20,%rsp
   17dc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dcb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17dcf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17dd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17dd7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ddf:	48 89 ce             	mov    %rcx,%rsi
   17de2:	48 89 c7             	mov    %rax,%rdi
   17de5:	e8 c4 11 00 00       	call   18fae <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   17dea:	90                   	nop
   17deb:	c9                   	leave
   17dec:	c3                   	ret

0000000000017ded <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17ded:	55                   	push   %rbp
   17dee:	48 89 e5             	mov    %rsp,%rbp
   17df1:	48 83 ec 10          	sub    $0x10,%rsp
   17df5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17df9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17dfd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e05:	48 89 d6             	mov    %rdx,%rsi
   17e08:	48 89 c7             	mov    %rax,%rdi
   17e0b:	e8 cf 11 00 00       	call   18fdf <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   17e10:	90                   	nop
   17e11:	c9                   	leave
   17e12:	c3                   	ret

0000000000017e13 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17e13:	55                   	push   %rbp
   17e14:	48 89 e5             	mov    %rsp,%rbp
   17e17:	48 83 ec 20          	sub    $0x20,%rsp
   17e1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17e23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17e27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e2b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e33:	48 89 ce             	mov    %rcx,%rsi
   17e36:	48 89 c7             	mov    %rax,%rdi
   17e39:	e8 b0 11 00 00       	call   18fee <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   17e3e:	90                   	nop
   17e3f:	c9                   	leave
   17e40:	c3                   	ret
   17e41:	90                   	nop

0000000000017e42 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
   17e42:	55                   	push   %rbp
   17e43:	48 89 e5             	mov    %rsp,%rbp
   17e46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e4a:	90                   	nop
   17e4b:	5d                   	pop    %rbp
   17e4c:	c3                   	ret

0000000000017e4d <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17e4d:	55                   	push   %rbp
   17e4e:	48 89 e5             	mov    %rsp,%rbp
   17e51:	48 83 ec 20          	sub    $0x20,%rsp
   17e55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17e5d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17e61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17e69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e6d:	48 89 ce             	mov    %rcx,%rsi
   17e70:	48 89 c7             	mov    %rax,%rdi
   17e73:	e8 a8 11 00 00       	call   19020 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   17e78:	90                   	nop
   17e79:	c9                   	leave
   17e7a:	c3                   	ret

0000000000017e7b <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   17e7b:	55                   	push   %rbp
   17e7c:	48 89 e5             	mov    %rsp,%rbp
   17e7f:	48 83 ec 10          	sub    $0x10,%rsp
   17e83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   17e8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e93:	48 89 d6             	mov    %rdx,%rsi
   17e96:	48 89 c7             	mov    %rax,%rdi
   17e99:	e8 b3 11 00 00       	call   19051 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   17e9e:	90                   	nop
   17e9f:	c9                   	leave
   17ea0:	c3                   	ret

0000000000017ea1 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   17ea1:	55                   	push   %rbp
   17ea2:	48 89 e5             	mov    %rsp,%rbp
   17ea5:	48 83 ec 30          	sub    $0x30,%rsp
   17ea9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17ead:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17eb1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   17eb5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   17eb9:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   17ebd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17ec1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17ec5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ec9:	48 89 ce             	mov    %rcx,%rsi
   17ecc:	48 89 c7             	mov    %rax,%rdi
   17ecf:	e8 8c 11 00 00       	call   19060 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   17ed4:	c9                   	leave
   17ed5:	c3                   	ret

0000000000017ed6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   17ed6:	55                   	push   %rbp
   17ed7:	48 89 e5             	mov    %rsp,%rbp
   17eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ee2:	90                   	nop
   17ee3:	5d                   	pop    %rbp
   17ee4:	c3                   	ret
   17ee5:	90                   	nop

0000000000017ee6 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   17ee6:	55                   	push   %rbp
   17ee7:	48 89 e5             	mov    %rsp,%rbp
   17eea:	48 83 ec 10          	sub    $0x10,%rsp
   17eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   17ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ef6:	48 89 c7             	mov    %rax,%rdi
   17ef9:	e8 90 11 00 00       	call   1908e <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   17efe:	48 89 c7             	mov    %rax,%rdi
   17f01:	e8 87 2d ff ff       	call   ac8d <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   17f06:	c9                   	leave
   17f07:	c3                   	ret

0000000000017f08 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   17f08:	55                   	push   %rbp
   17f09:	48 89 e5             	mov    %rsp,%rbp
   17f0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   17f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f18:	48 8b 10             	mov    (%rax),%rdx
   17f1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f1f:	48 8b 00             	mov    (%rax),%rax
   17f22:	48 39 c2             	cmp    %rax,%rdx
   17f25:	73 06                	jae    17f2d <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   17f27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f2b:	eb 04                	jmp    17f31 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   17f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   17f31:	5d                   	pop    %rbp
   17f32:	c3                   	ret

0000000000017f33 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   17f33:	55                   	push   %rbp
   17f34:	48 89 e5             	mov    %rsp,%rbp
   17f37:	41 54                	push   %r12
   17f39:	53                   	push   %rbx
   17f3a:	48 83 ec 20          	sub    $0x20,%rsp
   17f3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17f42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17f46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17f4a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   17f4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17f52:	48 89 c7             	mov    %rax,%rdi
   17f55:	e8 42 11 00 00       	call   1909c <_ZSt12__niter_baseIPPKcET_S3_>
   17f5a:	49 89 c4             	mov    %rax,%r12
   17f5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17f61:	48 89 c7             	mov    %rax,%rdi
   17f64:	e8 33 11 00 00       	call   1909c <_ZSt12__niter_baseIPPKcET_S3_>
   17f69:	48 89 c3             	mov    %rax,%rbx
   17f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f70:	48 89 c7             	mov    %rax,%rdi
   17f73:	e8 24 11 00 00       	call   1909c <_ZSt12__niter_baseIPPKcET_S3_>
   17f78:	48 89 c7             	mov    %rax,%rdi
   17f7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17f7f:	48 89 c1             	mov    %rax,%rcx
   17f82:	4c 89 e2             	mov    %r12,%rdx
   17f85:	48 89 de             	mov    %rbx,%rsi
   17f88:	e8 1d 11 00 00       	call   190aa <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   17f8d:	48 83 c4 20          	add    $0x20,%rsp
   17f91:	5b                   	pop    %rbx
   17f92:	41 5c                	pop    %r12
   17f94:	5d                   	pop    %rbp
   17f95:	c3                   	ret

0000000000017f96 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   17f96:	55                   	push   %rbp
   17f97:	48 89 e5             	mov    %rsp,%rbp
   17f9a:	48 83 ec 10          	sub    $0x10,%rsp
   17f9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fa2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   17fa6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17faa:	48 89 c7             	mov    %rax,%rdi
   17fad:	e8 a6 c7 ff ff       	call   14758 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   17fb2:	48 89 c1             	mov    %rax,%rcx
   17fb5:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   17fb9:	48 8b 01             	mov    (%rcx),%rax
   17fbc:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   17fc0:	48 89 06             	mov    %rax,(%rsi)
   17fc3:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   17fc7:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   17fcb:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   17fcf:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   17fd3:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   17fd7:	90                   	nop
   17fd8:	c9                   	leave
   17fd9:	c3                   	ret

0000000000017fda <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17fda:	55                   	push   %rbp
   17fdb:	48 89 e5             	mov    %rsp,%rbp
   17fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fe6:	5d                   	pop    %rbp
   17fe7:	c3                   	ret

0000000000017fe8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17fe8:	55                   	push   %rbp
   17fe9:	48 89 e5             	mov    %rsp,%rbp
   17fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ff4:	5d                   	pop    %rbp
   17ff5:	c3                   	ret

0000000000017ff6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17ff6:	55                   	push   %rbp
   17ff7:	48 89 e5             	mov    %rsp,%rbp
   17ffa:	53                   	push   %rbx
   17ffb:	48 83 ec 18          	sub    $0x18,%rsp
   17fff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18003:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   18007:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1800b:	48 89 c6             	mov    %rax,%rsi
   1800e:	bf 1c 00 00 00       	mov    $0x1c,%edi
   18013:	e8 87 db fe ff       	call   5b9f <_ZnwmPv>
   18018:	48 89 c3             	mov    %rax,%rbx
   1801b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1801f:	48 89 c7             	mov    %rax,%rdi
   18022:	e8 c1 ff ff ff       	call   17fe8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   18027:	48 89 c1             	mov    %rax,%rcx
   1802a:	48 8b 01             	mov    (%rcx),%rax
   1802d:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   18031:	48 89 03             	mov    %rax,(%rbx)
   18034:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   18038:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1803c:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   18040:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   18044:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   18048:	90                   	nop
   18049:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1804d:	c9                   	leave
   1804e:	c3                   	ret
   1804f:	90                   	nop

0000000000018050 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   18050:	55                   	push   %rbp
   18051:	48 89 e5             	mov    %rsp,%rbp
   18054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   18058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1805c:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   18060:	90                   	nop
   18061:	5d                   	pop    %rbp
   18062:	c3                   	ret
   18063:	90                   	nop

0000000000018064 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   18064:	55                   	push   %rbp
   18065:	48 89 e5             	mov    %rsp,%rbp
   18068:	53                   	push   %rbx
   18069:	48 83 ec 18          	sub    $0x18,%rsp
   1806d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18071:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   18075:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18079:	48 89 c7             	mov    %rax,%rdi
   1807c:	e8 cd e7 ff ff       	call   1684e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   18081:	48 89 c3             	mov    %rax,%rbx
   18084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18088:	48 89 c7             	mov    %rax,%rdi
   1808b:	e8 7e 10 00 00       	call   1910e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   18090:	48 89 de             	mov    %rbx,%rsi
   18093:	48 89 c7             	mov    %rax,%rdi
   18096:	e8 81 10 00 00       	call   1911c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   1809b:	90                   	nop
   1809c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   180a0:	c9                   	leave
   180a1:	c3                   	ret

00000000000180a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   180a2:	55                   	push   %rbp
   180a3:	48 89 e5             	mov    %rsp,%rbp
   180a6:	48 83 ec 10          	sub    $0x10,%rsp
   180aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   180ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   180b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180b6:	48 89 c7             	mov    %rax,%rdi
   180b9:	e8 50 10 00 00       	call   1910e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   180be:	48 89 c1             	mov    %rax,%rcx
   180c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   180c5:	ba 01 00 00 00       	mov    $0x1,%edx
   180ca:	48 89 c6             	mov    %rax,%rsi
   180cd:	48 89 cf             	mov    %rcx,%rdi
   180d0:	e8 6d 10 00 00       	call   19142 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   180d5:	90                   	nop
   180d6:	c9                   	leave
   180d7:	c3                   	ret

00000000000180d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   180d8:	55                   	push   %rbp
   180d9:	48 89 e5             	mov    %rsp,%rbp
   180dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   180e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180e4:	48 83 c0 08          	add    $0x8,%rax
   180e8:	5d                   	pop    %rbp
   180e9:	c3                   	ret

00000000000180ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   180ea:	55                   	push   %rbp
   180eb:	48 89 e5             	mov    %rsp,%rbp
   180ee:	53                   	push   %rbx
   180ef:	48 83 ec 38          	sub    $0x38,%rsp
   180f3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   180f7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   180fb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   180ff:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   18103:	eb 56                	jmp    1815b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   18105:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   18109:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1810d:	48 89 c7             	mov    %rax,%rdi
   18110:	e8 e7 03 00 00       	call   184fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   18115:	48 89 c1             	mov    %rax,%rcx
   18118:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1811c:	48 89 c2             	mov    %rax,%rdx
   1811f:	48 89 ce             	mov    %rcx,%rsi
   18122:	48 89 df             	mov    %rbx,%rdi
   18125:	e8 de c8 ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1812a:	83 f0 01             	xor    $0x1,%eax
   1812d:	84 c0                	test   %al,%al
   1812f:	74 1a                	je     1814b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   18131:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18135:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   18139:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1813d:	48 89 c7             	mov    %rax,%rdi
   18140:	e8 28 e6 ff ff       	call   1676d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   18145:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   18149:	eb 10                	jmp    1815b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   1814b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1814f:	48 89 c7             	mov    %rax,%rdi
   18152:	e8 04 e6 ff ff       	call   1675b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   18157:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   1815b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   18160:	75 a3                	jne    18105 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   18162:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18166:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1816a:	48 89 d6             	mov    %rdx,%rsi
   1816d:	48 89 c7             	mov    %rax,%rdi
   18170:	e8 ff ec ff ff       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   18175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   18179:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1817d:	c9                   	leave
   1817e:	c3                   	ret
   1817f:	90                   	nop

0000000000018180 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   18180:	55                   	push   %rbp
   18181:	48 89 e5             	mov    %rsp,%rbp
   18184:	48 83 ec 10          	sub    $0x10,%rsp
   18188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   1818c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18190:	48 89 c7             	mov    %rax,%rdi
   18193:	e8 d8 0f 00 00       	call   19170 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   18198:	c9                   	leave
   18199:	c3                   	ret

000000000001819a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   1819a:	55                   	push   %rbp
   1819b:	48 89 e5             	mov    %rsp,%rbp
   1819e:	53                   	push   %rbx
   1819f:	48 83 ec 18          	sub    $0x18,%rsp
   181a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   181a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   181ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   181af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   181b3:	48 89 c7             	mov    %rax,%rdi
   181b6:	e8 d9 e6 ff ff       	call   16894 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   181bb:	48 89 c6             	mov    %rax,%rsi
   181be:	48 89 df             	mov    %rbx,%rdi
   181c1:	e8 b8 0f 00 00       	call   1917e <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   181c6:	90                   	nop
   181c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   181cb:	c9                   	leave
   181cc:	c3                   	ret
   181cd:	90                   	nop

00000000000181ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   181ce:	55                   	push   %rbp
   181cf:	48 89 e5             	mov    %rsp,%rbp
   181d2:	41 54                	push   %r12
   181d4:	53                   	push   %rbx
   181d5:	48 83 ec 30          	sub    $0x30,%rsp
   181d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   181dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   181e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   181e5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   181e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181ed:	48 89 c7             	mov    %rax,%rdi
   181f0:	e8 af 0f 00 00       	call   191a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   181f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   181f9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   181fd:	48 89 c7             	mov    %rax,%rdi
   18200:	e8 ec e6 ff ff       	call   168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   18205:	49 89 c4             	mov    %rax,%r12
   18208:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1820c:	48 89 c7             	mov    %rax,%rdi
   1820f:	e8 cf e6 ff ff       	call   168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   18214:	48 89 c3             	mov    %rax,%rbx
   18217:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1821b:	48 89 c7             	mov    %rax,%rdi
   1821e:	e8 b2 e6 ff ff       	call   168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   18223:	48 89 c2             	mov    %rax,%rdx
   18226:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1822a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1822e:	4d 89 e0             	mov    %r12,%r8
   18231:	48 89 d9             	mov    %rbx,%rcx
   18234:	48 89 c7             	mov    %rax,%rdi
   18237:	e8 90 0f 00 00       	call   191cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   1823c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   18240:	48 83 c4 30          	add    $0x30,%rsp
   18244:	5b                   	pop    %rbx
   18245:	41 5c                	pop    %r12
   18247:	5d                   	pop    %rbp
   18248:	c3                   	ret
   18249:	90                   	nop

000000000001824a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1824a:	55                   	push   %rbp
   1824b:	48 89 e5             	mov    %rsp,%rbp
   1824e:	48 83 ec 20          	sub    $0x20,%rsp
   18252:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   18256:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1825a:	48 8b 10             	mov    (%rax),%rdx
   1825d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18261:	48 89 d6             	mov    %rdx,%rsi
   18264:	48 89 c7             	mov    %rax,%rdi
   18267:	e8 08 ec ff ff       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1826c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18270:	c9                   	leave
   18271:	c3                   	ret

0000000000018272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18272:	55                   	push   %rbp
   18273:	48 89 e5             	mov    %rsp,%rbp
   18276:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1827a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1827e:	48 8b 40 28          	mov    0x28(%rax),%rax
   18282:	5d                   	pop    %rbp
   18283:	c3                   	ret

0000000000018284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   18284:	55                   	push   %rbp
   18285:	48 89 e5             	mov    %rsp,%rbp
   18288:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1828c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18290:	48 83 c0 20          	add    $0x20,%rax
   18294:	5d                   	pop    %rbp
   18295:	c3                   	ret

0000000000018296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   18296:	55                   	push   %rbp
   18297:	48 89 e5             	mov    %rsp,%rbp
   1829a:	48 83 ec 10          	sub    $0x10,%rsp
   1829e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   182a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182a6:	48 89 c7             	mov    %rax,%rdi
   182a9:	e8 4e 02 00 00       	call   184fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   182ae:	c9                   	leave
   182af:	c3                   	ret

00000000000182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   182b0:	55                   	push   %rbp
   182b1:	48 89 e5             	mov    %rsp,%rbp
   182b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   182bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   182c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182c4:	48 8b 10             	mov    (%rax),%rdx
   182c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182cb:	48 89 10             	mov    %rdx,(%rax)
   182ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   182d2:	48 8b 10             	mov    (%rax),%rdx
   182d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   182dd:	90                   	nop
   182de:	5d                   	pop    %rbp
   182df:	c3                   	ret

00000000000182e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   182e0:	55                   	push   %rbp
   182e1:	48 89 e5             	mov    %rsp,%rbp
   182e4:	53                   	push   %rbx
   182e5:	48 83 ec 78          	sub    $0x78,%rsp
   182e9:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   182ed:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   182f1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   182f5:	48 89 c7             	mov    %rax,%rdi
   182f8:	e8 29 c6 ff ff       	call   14926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   182fd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   18301:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   18305:	48 89 c7             	mov    %rax,%rdi
   18308:	e8 cb fd ff ff       	call   180d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1830d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   18311:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   18315:	eb 51                	jmp    18368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   18317:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1831b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   1831f:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   18323:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   18327:	48 89 c7             	mov    %rax,%rdi
   1832a:	e8 cd 01 00 00       	call   184fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1832f:	48 89 c2             	mov    %rax,%rdx
   18332:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   18336:	48 89 c6             	mov    %rax,%rsi
   18339:	48 89 df             	mov    %rbx,%rdi
   1833c:	e8 c7 c6 ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   18341:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   18344:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   18348:	74 0e                	je     18358 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   1834a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1834e:	48 89 c7             	mov    %rax,%rdi
   18351:	e8 17 e4 ff ff       	call   1676d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   18356:	eb 0c                	jmp    18364 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   18358:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1835c:	48 89 c7             	mov    %rax,%rdi
   1835f:	e8 f7 e3 ff ff       	call   1675b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   18364:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   18368:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1836c:	48 85 c0             	test   %rax,%rax
   1836f:	75 a6                	jne    18317 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   18371:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   18375:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   18379:	48 89 d6             	mov    %rdx,%rsi
   1837c:	48 89 c7             	mov    %rax,%rdi
   1837f:	e8 f0 ea ff ff       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   18384:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   18388:	74 54                	je     183de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   1838a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1838e:	48 89 c7             	mov    %rax,%rdi
   18391:	e8 08 0f 00 00       	call   1929e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   18396:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1839a:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1839e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   183a2:	48 89 d6             	mov    %rdx,%rsi
   183a5:	48 89 c7             	mov    %rax,%rdi
   183a8:	e8 ff c5 ff ff       	call   149ac <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   183ad:	84 c0                	test   %al,%al
   183af:	74 21                	je     183d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   183b1:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   183b5:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   183b9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   183bd:	48 89 ce             	mov    %rcx,%rsi
   183c0:	48 89 c7             	mov    %rax,%rdi
   183c3:	e8 00 0f 00 00       	call   192c8 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   183c8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   183cc:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   183d0:	eb 7d                	jmp    1844f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   183d2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   183d6:	48 89 c7             	mov    %rax,%rdi
   183d9:	e8 ce 00 00 00       	call   184ac <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   183de:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   183e2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   183e6:	48 89 c7             	mov    %rax,%rdi
   183e9:	e8 a8 fe ff ff       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   183ee:	48 89 c1             	mov    %rax,%rcx
   183f1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   183f5:	48 89 c2             	mov    %rax,%rdx
   183f8:	48 89 ce             	mov    %rcx,%rsi
   183fb:	48 89 df             	mov    %rbx,%rdi
   183fe:	e8 05 c6 ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   18403:	84 c0                	test   %al,%al
   18405:	74 21                	je     18428 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   18407:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1840b:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1840f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   18413:	48 89 ce             	mov    %rcx,%rsi
   18416:	48 89 c7             	mov    %rax,%rdi
   18419:	e8 aa 0e 00 00       	call   192c8 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1841e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18422:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18426:	eb 27                	jmp    1844f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   18428:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1842f:	00 
   18430:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   18434:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   18438:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1843c:	48 89 ce             	mov    %rcx,%rsi
   1843f:	48 89 c7             	mov    %rax,%rdi
   18442:	e8 69 fe ff ff       	call   182b0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   18447:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1844b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1844f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18453:	c9                   	leave
   18454:	c3                   	ret
   18455:	90                   	nop

0000000000018456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   18456:	55                   	push   %rbp
   18457:	48 89 e5             	mov    %rsp,%rbp
   1845a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1845e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18462:	48 83 c0 18          	add    $0x18,%rax
   18466:	5d                   	pop    %rbp
   18467:	c3                   	ret

0000000000018468 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   18468:	55                   	push   %rbp
   18469:	48 89 e5             	mov    %rsp,%rbp
   1846c:	48 83 ec 20          	sub    $0x20,%rsp
   18470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18474:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18478:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1847c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18480:	48 89 c7             	mov    %rax,%rdi
   18483:	e8 84 0e 00 00       	call   1930c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   18488:	48 8b 10             	mov    (%rax),%rdx
   1848b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1848f:	48 89 10             	mov    %rdx,(%rax)
   18492:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18496:	48 89 c7             	mov    %rax,%rdi
   18499:	e8 6e 0e 00 00       	call   1930c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1849e:	48 8b 10             	mov    (%rax),%rdx
   184a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   184a9:	90                   	nop
   184aa:	c9                   	leave
   184ab:	c3                   	ret

00000000000184ac <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   184ac:	55                   	push   %rbp
   184ad:	48 89 e5             	mov    %rsp,%rbp
   184b0:	48 83 ec 10          	sub    $0x10,%rsp
   184b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   184b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184bc:	48 8b 00             	mov    (%rax),%rax
   184bf:	48 89 c7             	mov    %rax,%rdi
   184c2:	e8 f9 bf fe ff       	call   44c0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   184c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   184cb:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   184ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   184d2:	c9                   	leave
   184d3:	c3                   	ret

00000000000184d4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   184d4:	55                   	push   %rbp
   184d5:	48 89 e5             	mov    %rsp,%rbp
   184d8:	48 83 ec 10          	sub    $0x10,%rsp
   184dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   184e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184e4:	48 8b 00             	mov    (%rax),%rax
   184e7:	48 89 c7             	mov    %rax,%rdi
   184ea:	e8 a1 bd fe ff       	call   4290 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   184ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   184f3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   184f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   184fa:	c9                   	leave
   184fb:	c3                   	ret

00000000000184fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   184fc:	55                   	push   %rbp
   184fd:	48 89 e5             	mov    %rsp,%rbp
   18500:	48 83 ec 20          	sub    $0x20,%rsp
   18504:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   18508:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1850c:	48 89 c7             	mov    %rax,%rdi
   1850f:	e8 06 0e 00 00       	call   1931a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   18514:	48 89 c2             	mov    %rax,%rdx
   18517:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1851b:	48 89 d6             	mov    %rdx,%rsi
   1851e:	48 89 c7             	mov    %rax,%rdi
   18521:	e8 12 0e 00 00       	call   19338 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   18526:	c9                   	leave
   18527:	c3                   	ret

0000000000018528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   18528:	55                   	push   %rbp
   18529:	48 89 e5             	mov    %rsp,%rbp
   1852c:	41 54                	push   %r12
   1852e:	53                   	push   %rbx
   1852f:	48 83 ec 30          	sub    $0x30,%rsp
   18533:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18537:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1853b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1853f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   18543:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   18548:	75 43                	jne    1858d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   1854a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1854e:	48 89 c7             	mov    %rax,%rdi
   18551:	e8 82 fb ff ff       	call   180d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   18556:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1855a:	74 31                	je     1858d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1855c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   18560:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18564:	48 89 c7             	mov    %rax,%rdi
   18567:	e8 2a fd ff ff       	call   18296 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1856c:	49 89 c4             	mov    %rax,%r12
   1856f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   18573:	48 89 c7             	mov    %rax,%rdi
   18576:	e8 81 ff ff ff       	call   184fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1857b:	4c 89 e2             	mov    %r12,%rdx
   1857e:	48 89 c6             	mov    %rax,%rsi
   18581:	48 89 df             	mov    %rbx,%rdi
   18584:	e8 7f c4 ff ff       	call   14a08 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   18589:	84 c0                	test   %al,%al
   1858b:	74 07                	je     18594 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1858d:	b8 01 00 00 00       	mov    $0x1,%eax
   18592:	eb 05                	jmp    18599 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   18594:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   18599:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1859c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185a0:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   185a4:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   185a8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   185ac:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   185b0:	89 c7                	mov    %eax,%edi
   185b2:	e8 a9 ba fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   185b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185bb:	48 8b 40 28          	mov    0x28(%rax),%rax
   185bf:	48 8d 50 01          	lea    0x1(%rax),%rdx
   185c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185c7:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   185cb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   185cf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   185d3:	48 89 d6             	mov    %rdx,%rsi
   185d6:	48 89 c7             	mov    %rax,%rdi
   185d9:	e8 96 e8 ff ff       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   185de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   185e2:	48 83 c4 30          	add    $0x30,%rsp
   185e6:	5b                   	pop    %rbx
   185e7:	41 5c                	pop    %r12
   185e9:	5d                   	pop    %rbp
   185ea:	c3                   	ret
   185eb:	90                   	nop

00000000000185ec <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   185ec:	55                   	push   %rbp
   185ed:	48 89 e5             	mov    %rsp,%rbp
   185f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   185f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185f8:	5d                   	pop    %rbp
   185f9:	c3                   	ret

00000000000185fa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   185fa:	55                   	push   %rbp
   185fb:	48 89 e5             	mov    %rsp,%rbp
   185fe:	48 83 ec 10          	sub    $0x10,%rsp
   18602:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18606:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1860a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1860e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18612:	48 89 d6             	mov    %rdx,%rsi
   18615:	48 89 c7             	mov    %rax,%rdi
   18618:	e8 05 2f ff ff       	call   b522 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   1861d:	90                   	nop
   1861e:	c9                   	leave
   1861f:	c3                   	ret

0000000000018620 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   18620:	55                   	push   %rbp
   18621:	48 89 e5             	mov    %rsp,%rbp
   18624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   1862c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18630:	48 8b 10             	mov    (%rax),%rdx
   18633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18637:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1863a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1863e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18646:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1864a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1864e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18656:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1865a:	90                   	nop
   1865b:	5d                   	pop    %rbp
   1865c:	c3                   	ret

000000000001865d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1865d:	55                   	push   %rbp
   1865e:	48 89 e5             	mov    %rsp,%rbp
   18661:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   18665:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18669:	5d                   	pop    %rbp
   1866a:	c3                   	ret

000000000001866b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1866b:	55                   	push   %rbp
   1866c:	48 89 e5             	mov    %rsp,%rbp
   1866f:	48 83 ec 20          	sub    $0x20,%rsp
   18673:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18677:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1867e:	ff ff 0f 
   18681:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   18685:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18689:	48 89 c7             	mov    %rax,%rdi
   1868c:	e8 b9 0c 00 00       	call   1934a <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   18691:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18695:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18699:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1869d:	48 89 d6             	mov    %rdx,%rsi
   186a0:	48 89 c7             	mov    %rax,%rdi
   186a3:	e8 88 cf fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   186a8:	48 8b 00             	mov    (%rax),%rax
      }
   186ab:	c9                   	leave
   186ac:	c3                   	ret
   186ad:	90                   	nop

00000000000186ae <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   186ae:	55                   	push   %rbp
   186af:	48 89 e5             	mov    %rsp,%rbp
   186b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   186b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186ba:	5d                   	pop    %rbp
   186bb:	c3                   	ret

00000000000186bc <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   186bc:	55                   	push   %rbp
   186bd:	48 89 e5             	mov    %rsp,%rbp
   186c0:	48 83 ec 20          	sub    $0x20,%rsp
   186c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   186c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   186cc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   186d0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   186d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   186d8:	48 89 d6             	mov    %rdx,%rsi
   186db:	48 89 c7             	mov    %rax,%rdi
   186de:	e8 81 0c 00 00       	call   19364 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   186e3:	c9                   	leave
   186e4:	c3                   	ret

00000000000186e5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   186e5:	55                   	push   %rbp
   186e6:	48 89 e5             	mov    %rsp,%rbp
   186e9:	48 83 ec 10          	sub    $0x10,%rsp
   186ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   186f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   186f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186fd:	ba 00 00 00 00       	mov    $0x0,%edx
   18702:	48 89 ce             	mov    %rcx,%rsi
   18705:	48 89 c7             	mov    %rax,%rdi
   18708:	e8 b5 0c 00 00       	call   193c2 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   1870d:	c9                   	leave
   1870e:	c3                   	ret

000000000001870f <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1870f:	55                   	push   %rbp
   18710:	48 89 e5             	mov    %rsp,%rbp
   18713:	41 54                	push   %r12
   18715:	53                   	push   %rbx
   18716:	48 83 ec 20          	sub    $0x20,%rsp
   1871a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1871e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18722:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18726:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1872a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1872e:	48 89 c7             	mov    %rax,%rdi
   18731:	e8 ed 0c 00 00       	call   19423 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   18736:	49 89 c4             	mov    %rax,%r12
   18739:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1873d:	48 89 c7             	mov    %rax,%rdi
   18740:	e8 de 0c 00 00       	call   19423 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   18745:	48 89 c3             	mov    %rax,%rbx
   18748:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1874c:	48 89 c7             	mov    %rax,%rdi
   1874f:	e8 cf 0c 00 00       	call   19423 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   18754:	48 89 c7             	mov    %rax,%rdi
   18757:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1875b:	48 89 c1             	mov    %rax,%rcx
   1875e:	4c 89 e2             	mov    %r12,%rdx
   18761:	48 89 de             	mov    %rbx,%rsi
   18764:	e8 c8 0c 00 00       	call   19431 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   18769:	48 83 c4 20          	add    $0x20,%rsp
   1876d:	5b                   	pop    %rbx
   1876e:	41 5c                	pop    %r12
   18770:	5d                   	pop    %rbp
   18771:	c3                   	ret

0000000000018772 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18772:	55                   	push   %rbp
   18773:	48 89 e5             	mov    %rsp,%rbp
   18776:	48 83 ec 10          	sub    $0x10,%rsp
   1877a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1877e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18782:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1878a:	48 89 d6             	mov    %rdx,%rsi
   1878d:	48 89 c7             	mov    %rax,%rdi
   18790:	e8 ff 0c 00 00       	call   19494 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   18795:	90                   	nop
   18796:	c9                   	leave
   18797:	c3                   	ret

0000000000018798 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   18798:	55                   	push   %rbp
   18799:	48 89 e5             	mov    %rsp,%rbp
   1879c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   187a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187a4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   187ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187af:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   187b6:	00 
   187b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187bb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   187c2:	00 
	{ }
   187c3:	90                   	nop
   187c4:	5d                   	pop    %rbp
   187c5:	c3                   	ret

00000000000187c6 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   187c6:	55                   	push   %rbp
   187c7:	48 89 e5             	mov    %rsp,%rbp
   187ca:	48 83 ec 20          	sub    $0x20,%rsp
   187ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   187d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   187da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   187de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   187e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187e6:	48 89 ce             	mov    %rcx,%rsi
   187e9:	48 89 c7             	mov    %rax,%rdi
   187ec:	e8 b3 0c 00 00       	call   194a4 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   187f1:	90                   	nop
   187f2:	c9                   	leave
   187f3:	c3                   	ret

00000000000187f4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   187f4:	55                   	push   %rbp
   187f5:	48 89 e5             	mov    %rsp,%rbp
   187f8:	48 83 ec 20          	sub    $0x20,%rsp
   187fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18800:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   18807:	8e e3 00 
   1880a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1880e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18812:	48 89 c7             	mov    %rax,%rdi
   18815:	e8 c4 0c 00 00       	call   194de <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   1881a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1881e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18822:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18826:	48 89 d6             	mov    %rdx,%rsi
   18829:	48 89 c7             	mov    %rax,%rdi
   1882c:	e8 ff cd fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   18831:	48 8b 00             	mov    (%rax),%rax
      }
   18834:	c9                   	leave
   18835:	c3                   	ret

0000000000018836 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   18836:	55                   	push   %rbp
   18837:	48 89 e5             	mov    %rsp,%rbp
   1883a:	48 83 ec 10          	sub    $0x10,%rsp
   1883e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18846:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1884a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1884e:	ba 00 00 00 00       	mov    $0x0,%edx
   18853:	48 89 ce             	mov    %rcx,%rsi
   18856:	48 89 c7             	mov    %rax,%rdi
   18859:	e8 9a 0c 00 00       	call   194f8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   1885e:	c9                   	leave
   1885f:	c3                   	ret

0000000000018860 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18860:	55                   	push   %rbp
   18861:	48 89 e5             	mov    %rsp,%rbp
   18864:	48 83 ec 30          	sub    $0x30,%rsp
   18868:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1886c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18870:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18874:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18878:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1887c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18880:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18888:	48 89 ce             	mov    %rcx,%rsi
   1888b:	48 89 c7             	mov    %rax,%rdi
   1888e:	e8 d0 0c 00 00       	call   19563 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   18893:	c9                   	leave
   18894:	c3                   	ret

0000000000018895 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   18895:	55                   	push   %rbp
   18896:	48 89 e5             	mov    %rsp,%rbp
   18899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1889d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   188a1:	90                   	nop
   188a2:	5d                   	pop    %rbp
   188a3:	c3                   	ret

00000000000188a4 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   188a4:	55                   	push   %rbp
   188a5:	48 89 e5             	mov    %rsp,%rbp
   188a8:	48 83 ec 20          	sub    $0x20,%rsp
   188ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   188b0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   188b7:	ff ff 0f 
   188ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   188be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188c2:	48 89 c7             	mov    %rax,%rdi
   188c5:	e8 c6 0c 00 00       	call   19590 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   188ca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   188ce:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   188d2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   188d6:	48 89 d6             	mov    %rdx,%rsi
   188d9:	48 89 c7             	mov    %rax,%rdi
   188dc:	e8 4f cd fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   188e1:	48 8b 00             	mov    (%rax),%rax
      }
   188e4:	c9                   	leave
   188e5:	c3                   	ret

00000000000188e6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   188e6:	55                   	push   %rbp
   188e7:	48 89 e5             	mov    %rsp,%rbp
   188ea:	48 83 ec 10          	sub    $0x10,%rsp
   188ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   188f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   188fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188fe:	48 89 d6             	mov    %rdx,%rsi
   18901:	48 89 c7             	mov    %rax,%rdi
   18904:	e8 f1 ea ff ff       	call   173fa <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   18909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1890d:	48 89 c7             	mov    %rax,%rdi
   18910:	e8 95 0c 00 00       	call   195aa <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18915:	90                   	nop
   18916:	c9                   	leave
   18917:	c3                   	ret

0000000000018918 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   18918:	55                   	push   %rbp
   18919:	48 89 e5             	mov    %rsp,%rbp
   1891c:	48 83 ec 10          	sub    $0x10,%rsp
   18920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18924:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   18928:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1892c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18930:	48 89 d6             	mov    %rdx,%rsi
   18933:	48 89 c7             	mov    %rax,%rdi
   18936:	e8 9d 0c 00 00       	call   195d8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   1893b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1893f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   18942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18946:	48 8b 10             	mov    (%rax),%rdx
   18949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1894d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   18951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18955:	48 8b 00             	mov    (%rax),%rax
   18958:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1895c:	48 c1 e2 03          	shl    $0x3,%rdx
   18960:	48 01 c2             	add    %rax,%rdx
   18963:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18967:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1896b:	90                   	nop
   1896c:	c9                   	leave
   1896d:	c3                   	ret

000000000001896e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1896e:	55                   	push   %rbp
   1896f:	48 89 e5             	mov    %rsp,%rbp
   18972:	48 83 ec 20          	sub    $0x20,%rsp
   18976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1897a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1897e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   18982:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1898a:	48 89 d6             	mov    %rdx,%rsi
   1898d:	48 89 c7             	mov    %rax,%rdi
   18990:	e8 76 0c 00 00       	call   1960b <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   18995:	c9                   	leave
   18996:	c3                   	ret
   18997:	90                   	nop

0000000000018998 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   18998:	55                   	push   %rbp
   18999:	48 89 e5             	mov    %rsp,%rbp
   1899c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   189a4:	90                   	nop
   189a5:	5d                   	pop    %rbp
   189a6:	c3                   	ret

00000000000189a7 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   189a7:	55                   	push   %rbp
   189a8:	48 89 e5             	mov    %rsp,%rbp
   189ab:	48 83 ec 20          	sub    $0x20,%rsp
   189af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   189b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   189bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   189bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   189c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189c7:	48 89 ce             	mov    %rcx,%rsi
   189ca:	48 89 c7             	mov    %rax,%rdi
   189cd:	e8 62 0c 00 00       	call   19634 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   189d2:	90                   	nop
   189d3:	c9                   	leave
   189d4:	c3                   	ret

00000000000189d5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   189d5:	55                   	push   %rbp
   189d6:	48 89 e5             	mov    %rsp,%rbp
   189d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   189e1:	90                   	nop
   189e2:	5d                   	pop    %rbp
   189e3:	c3                   	ret

00000000000189e4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   189e4:	55                   	push   %rbp
   189e5:	48 89 e5             	mov    %rsp,%rbp
   189e8:	48 83 ec 20          	sub    $0x20,%rsp
   189ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   189f0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   189f7:	ff ff 0f 
   189fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   189fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a02:	48 89 c7             	mov    %rax,%rdi
   18a05:	e8 5b 0c 00 00       	call   19665 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   18a0a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18a0e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18a12:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18a16:	48 89 d6             	mov    %rdx,%rsi
   18a19:	48 89 c7             	mov    %rax,%rdi
   18a1c:	e8 0f cc fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   18a21:	48 8b 00             	mov    (%rax),%rax
      }
   18a24:	c9                   	leave
   18a25:	c3                   	ret

0000000000018a26 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18a26:	55                   	push   %rbp
   18a27:	48 89 e5             	mov    %rsp,%rbp
   18a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a32:	5d                   	pop    %rbp
   18a33:	c3                   	ret

0000000000018a34 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18a34:	55                   	push   %rbp
   18a35:	48 89 e5             	mov    %rsp,%rbp
   18a38:	48 83 ec 20          	sub    $0x20,%rsp
   18a3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18a40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18a44:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   18a48:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18a4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a50:	48 89 d6             	mov    %rdx,%rsi
   18a53:	48 89 c7             	mov    %rax,%rdi
   18a56:	e8 24 0c 00 00       	call   1967f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   18a5b:	c9                   	leave
   18a5c:	c3                   	ret

0000000000018a5d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   18a5d:	55                   	push   %rbp
   18a5e:	48 89 e5             	mov    %rsp,%rbp
   18a61:	48 83 ec 10          	sub    $0x10,%rsp
   18a65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18a6d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a75:	ba 00 00 00 00       	mov    $0x0,%edx
   18a7a:	48 89 ce             	mov    %rcx,%rsi
   18a7d:	48 89 c7             	mov    %rax,%rdi
   18a80:	e8 57 0c 00 00       	call   196dc <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   18a85:	c9                   	leave
   18a86:	c3                   	ret

0000000000018a87 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18a87:	55                   	push   %rbp
   18a88:	48 89 e5             	mov    %rsp,%rbp
   18a8b:	41 54                	push   %r12
   18a8d:	53                   	push   %rbx
   18a8e:	48 83 ec 20          	sub    $0x20,%rsp
   18a92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18a96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18a9a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18a9e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   18aa2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18aa6:	48 89 c7             	mov    %rax,%rdi
   18aa9:	e8 8f 0c 00 00       	call   1973d <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   18aae:	49 89 c4             	mov    %rax,%r12
   18ab1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18ab5:	48 89 c7             	mov    %rax,%rdi
   18ab8:	e8 80 0c 00 00       	call   1973d <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   18abd:	48 89 c3             	mov    %rax,%rbx
   18ac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18ac4:	48 89 c7             	mov    %rax,%rdi
   18ac7:	e8 71 0c 00 00       	call   1973d <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   18acc:	48 89 c7             	mov    %rax,%rdi
   18acf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18ad3:	48 89 c1             	mov    %rax,%rcx
   18ad6:	4c 89 e2             	mov    %r12,%rdx
   18ad9:	48 89 de             	mov    %rbx,%rsi
   18adc:	e8 6a 0c 00 00       	call   1974b <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   18ae1:	48 83 c4 20          	add    $0x20,%rsp
   18ae5:	5b                   	pop    %rbx
   18ae6:	41 5c                	pop    %r12
   18ae8:	5d                   	pop    %rbp
   18ae9:	c3                   	ret

0000000000018aea <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18aea:	55                   	push   %rbp
   18aeb:	48 89 e5             	mov    %rsp,%rbp
   18aee:	48 83 ec 10          	sub    $0x10,%rsp
   18af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18afa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b02:	48 89 d6             	mov    %rdx,%rsi
   18b05:	48 89 c7             	mov    %rax,%rdi
   18b08:	e8 a1 0c 00 00       	call   197ae <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   18b0d:	90                   	nop
   18b0e:	c9                   	leave
   18b0f:	c3                   	ret

0000000000018b10 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18b10:	55                   	push   %rbp
   18b11:	48 89 e5             	mov    %rsp,%rbp
   18b14:	48 83 ec 30          	sub    $0x30,%rsp
   18b18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18b1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18b20:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18b24:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18b28:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18b2c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18b30:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18b38:	48 89 ce             	mov    %rcx,%rsi
   18b3b:	48 89 c7             	mov    %rax,%rdi
   18b3e:	e8 7a 0c 00 00       	call   197bd <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   18b43:	c9                   	leave
   18b44:	c3                   	ret

0000000000018b45 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   18b45:	55                   	push   %rbp
   18b46:	48 89 e5             	mov    %rsp,%rbp
   18b49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b51:	90                   	nop
   18b52:	5d                   	pop    %rbp
   18b53:	c3                   	ret

0000000000018b54 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18b54:	55                   	push   %rbp
   18b55:	48 89 e5             	mov    %rsp,%rbp
   18b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b60:	5d                   	pop    %rbp
   18b61:	c3                   	ret

0000000000018b62 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   18b62:	55                   	push   %rbp
   18b63:	48 89 e5             	mov    %rsp,%rbp
   18b66:	48 83 ec 10          	sub    $0x10,%rsp
   18b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   18b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18b7a:	48 89 d6             	mov    %rdx,%rsi
   18b7d:	48 89 c7             	mov    %rax,%rdi
   18b80:	e8 b9 d3 fe ff       	call   5f3e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
   18b85:	90                   	nop
   18b86:	c9                   	leave
   18b87:	c3                   	ret

0000000000018b88 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   18b88:	55                   	push   %rbp
   18b89:	48 89 e5             	mov    %rsp,%rbp
   18b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   18b94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18b98:	48 8b 10             	mov    (%rax),%rdx
   18b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b9f:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   18ba2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18ba6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bae:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   18bb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18bb6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bbe:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   18bc2:	90                   	nop
   18bc3:	5d                   	pop    %rbp
   18bc4:	c3                   	ret

0000000000018bc5 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   18bc5:	55                   	push   %rbp
   18bc6:	48 89 e5             	mov    %rsp,%rbp
   18bc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   18bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bd1:	5d                   	pop    %rbp
   18bd2:	c3                   	ret

0000000000018bd3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   18bd3:	55                   	push   %rbp
   18bd4:	48 89 e5             	mov    %rsp,%rbp
   18bd7:	48 83 ec 20          	sub    $0x20,%rsp
   18bdb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18bdf:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   18be6:	ff ff 0f 
   18be9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   18bed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18bf1:	48 89 c7             	mov    %rax,%rdi
   18bf4:	e8 f1 0b 00 00       	call   197ea <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   18bf9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18bfd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18c01:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18c05:	48 89 d6             	mov    %rdx,%rsi
   18c08:	48 89 c7             	mov    %rax,%rdi
   18c0b:	e8 20 ca fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   18c10:	48 8b 00             	mov    (%rax),%rax
      }
   18c13:	c9                   	leave
   18c14:	c3                   	ret
   18c15:	90                   	nop

0000000000018c16 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18c16:	55                   	push   %rbp
   18c17:	48 89 e5             	mov    %rsp,%rbp
   18c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c22:	5d                   	pop    %rbp
   18c23:	c3                   	ret

0000000000018c24 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18c24:	55                   	push   %rbp
   18c25:	48 89 e5             	mov    %rsp,%rbp
   18c28:	48 83 ec 20          	sub    $0x20,%rsp
   18c2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18c30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18c34:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   18c38:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18c3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c40:	48 89 d6             	mov    %rdx,%rsi
   18c43:	48 89 c7             	mov    %rax,%rdi
   18c46:	e8 b9 0b 00 00       	call   19804 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   18c4b:	c9                   	leave
   18c4c:	c3                   	ret

0000000000018c4d <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   18c4d:	55                   	push   %rbp
   18c4e:	48 89 e5             	mov    %rsp,%rbp
   18c51:	48 83 ec 10          	sub    $0x10,%rsp
   18c55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18c5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c65:	ba 00 00 00 00       	mov    $0x0,%edx
   18c6a:	48 89 ce             	mov    %rcx,%rsi
   18c6d:	48 89 c7             	mov    %rax,%rdi
   18c70:	e8 ed 0b 00 00       	call   19862 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   18c75:	c9                   	leave
   18c76:	c3                   	ret

0000000000018c77 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18c77:	55                   	push   %rbp
   18c78:	48 89 e5             	mov    %rsp,%rbp
   18c7b:	41 54                	push   %r12
   18c7d:	53                   	push   %rbx
   18c7e:	48 83 ec 20          	sub    $0x20,%rsp
   18c82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18c86:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18c8a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18c8e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   18c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18c96:	48 89 c7             	mov    %rax,%rdi
   18c99:	e8 25 0c 00 00       	call   198c3 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   18c9e:	49 89 c4             	mov    %rax,%r12
   18ca1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18ca5:	48 89 c7             	mov    %rax,%rdi
   18ca8:	e8 16 0c 00 00       	call   198c3 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   18cad:	48 89 c3             	mov    %rax,%rbx
   18cb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18cb4:	48 89 c7             	mov    %rax,%rdi
   18cb7:	e8 07 0c 00 00       	call   198c3 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   18cbc:	48 89 c7             	mov    %rax,%rdi
   18cbf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18cc3:	48 89 c1             	mov    %rax,%rcx
   18cc6:	4c 89 e2             	mov    %r12,%rdx
   18cc9:	48 89 de             	mov    %rbx,%rsi
   18ccc:	e8 00 0c 00 00       	call   198d1 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   18cd1:	48 83 c4 20          	add    $0x20,%rsp
   18cd5:	5b                   	pop    %rbx
   18cd6:	41 5c                	pop    %r12
   18cd8:	5d                   	pop    %rbp
   18cd9:	c3                   	ret

0000000000018cda <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   18cda:	55                   	push   %rbp
   18cdb:	48 89 e5             	mov    %rsp,%rbp
   18cde:	48 83 ec 20          	sub    $0x20,%rsp
   18ce2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18ce6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   18ced:	ff ff 0f 
   18cf0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   18cf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18cf8:	48 89 c7             	mov    %rax,%rdi
   18cfb:	e8 34 0c 00 00       	call   19934 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   18d00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18d04:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18d08:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18d0c:	48 89 d6             	mov    %rdx,%rsi
   18d0f:	48 89 c7             	mov    %rax,%rdi
   18d12:	e8 19 c9 fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   18d17:	48 8b 00             	mov    (%rax),%rax
      }
   18d1a:	c9                   	leave
   18d1b:	c3                   	ret

0000000000018d1c <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   18d1c:	55                   	push   %rbp
   18d1d:	48 89 e5             	mov    %rsp,%rbp
   18d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   18d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d28:	5d                   	pop    %rbp
   18d29:	c3                   	ret

0000000000018d2a <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18d2a:	55                   	push   %rbp
   18d2b:	48 89 e5             	mov    %rsp,%rbp
   18d2e:	48 83 ec 20          	sub    $0x20,%rsp
   18d32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18d36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18d3a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   18d3e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18d42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d46:	48 89 d6             	mov    %rdx,%rsi
   18d49:	48 89 c7             	mov    %rax,%rdi
   18d4c:	e8 fd 0b 00 00       	call   1994e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   18d51:	c9                   	leave
   18d52:	c3                   	ret

0000000000018d53 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   18d53:	55                   	push   %rbp
   18d54:	48 89 e5             	mov    %rsp,%rbp
   18d57:	48 83 ec 10          	sub    $0x10,%rsp
   18d5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18d63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18d67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d6b:	ba 00 00 00 00       	mov    $0x0,%edx
   18d70:	48 89 ce             	mov    %rcx,%rsi
   18d73:	48 89 c7             	mov    %rax,%rdi
   18d76:	e8 31 0c 00 00       	call   199ac <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   18d7b:	c9                   	leave
   18d7c:	c3                   	ret

0000000000018d7d <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   18d7d:	55                   	push   %rbp
   18d7e:	48 89 e5             	mov    %rsp,%rbp
   18d81:	41 54                	push   %r12
   18d83:	53                   	push   %rbx
   18d84:	48 83 ec 20          	sub    $0x20,%rsp
   18d88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18d8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18d90:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18d94:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   18d98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d9c:	48 89 c7             	mov    %rax,%rdi
   18d9f:	e8 69 0c 00 00       	call   19a0d <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   18da4:	49 89 c4             	mov    %rax,%r12
   18da7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18dab:	48 89 c7             	mov    %rax,%rdi
   18dae:	e8 5a 0c 00 00       	call   19a0d <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   18db3:	48 89 c3             	mov    %rax,%rbx
   18db6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18dba:	48 89 c7             	mov    %rax,%rdi
   18dbd:	e8 4b 0c 00 00       	call   19a0d <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   18dc2:	48 89 c7             	mov    %rax,%rdi
   18dc5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18dc9:	48 89 c1             	mov    %rax,%rcx
   18dcc:	4c 89 e2             	mov    %r12,%rdx
   18dcf:	48 89 de             	mov    %rbx,%rsi
   18dd2:	e8 44 0c 00 00       	call   19a1b <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   18dd7:	48 83 c4 20          	add    $0x20,%rsp
   18ddb:	5b                   	pop    %rbx
   18ddc:	41 5c                	pop    %r12
   18dde:	5d                   	pop    %rbp
   18ddf:	c3                   	ret

0000000000018de0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18de0:	55                   	push   %rbp
   18de1:	48 89 e5             	mov    %rsp,%rbp
   18de4:	48 83 ec 10          	sub    $0x10,%rsp
   18de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18dec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18df0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18df8:	48 89 d6             	mov    %rdx,%rsi
   18dfb:	48 89 c7             	mov    %rax,%rdi
   18dfe:	e8 7b 0c 00 00       	call   19a7e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   18e03:	90                   	nop
   18e04:	c9                   	leave
   18e05:	c3                   	ret

0000000000018e06 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18e06:	55                   	push   %rbp
   18e07:	48 89 e5             	mov    %rsp,%rbp
   18e0a:	48 83 ec 30          	sub    $0x30,%rsp
   18e0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18e12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18e16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18e1a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18e1e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18e22:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18e26:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18e2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18e2e:	48 89 ce             	mov    %rcx,%rsi
   18e31:	48 89 c7             	mov    %rax,%rdi
   18e34:	e8 54 0c 00 00       	call   19a8d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   18e39:	c9                   	leave
   18e3a:	c3                   	ret

0000000000018e3b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   18e3b:	55                   	push   %rbp
   18e3c:	48 89 e5             	mov    %rsp,%rbp
   18e3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18e47:	90                   	nop
   18e48:	5d                   	pop    %rbp
   18e49:	c3                   	ret

0000000000018e4a <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   18e4a:	55                   	push   %rbp
   18e4b:	48 89 e5             	mov    %rsp,%rbp
   18e4e:	48 83 ec 10          	sub    $0x10,%rsp
   18e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   18e5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e62:	48 89 d6             	mov    %rdx,%rsi
   18e65:	48 89 c7             	mov    %rax,%rdi
   18e68:	e8 4d 0c 00 00       	call   19aba <_ZNSt15__new_allocatorIjEC1ERKS0_>
   18e6d:	90                   	nop
   18e6e:	c9                   	leave
   18e6f:	c3                   	ret

0000000000018e70 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   18e70:	55                   	push   %rbp
   18e71:	48 89 e5             	mov    %rsp,%rbp
   18e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   18e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   18e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e87:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   18e8e:	00 
   18e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e93:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   18e9a:	00 
	{ }
   18e9b:	90                   	nop
   18e9c:	5d                   	pop    %rbp
   18e9d:	c3                   	ret

0000000000018e9e <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   18e9e:	55                   	push   %rbp
   18e9f:	48 89 e5             	mov    %rsp,%rbp
   18ea2:	48 83 ec 20          	sub    $0x20,%rsp
   18ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18eae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   18eb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18eb6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ebe:	48 89 ce             	mov    %rcx,%rsi
   18ec1:	48 89 c7             	mov    %rax,%rdi
   18ec4:	e8 01 0c 00 00       	call   19aca <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   18ec9:	90                   	nop
   18eca:	c9                   	leave
   18ecb:	c3                   	ret

0000000000018ecc <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   18ecc:	55                   	push   %rbp
   18ecd:	48 89 e5             	mov    %rsp,%rbp
   18ed0:	48 83 ec 20          	sub    $0x20,%rsp
   18ed4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   18ed8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18edf:	ff ff 1f 
   18ee2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   18ee6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18eea:	48 89 c7             	mov    %rax,%rdi
   18eed:	e8 09 0c 00 00       	call   19afb <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   18ef2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   18ef6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18efa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18efe:	48 89 d6             	mov    %rdx,%rsi
   18f01:	48 89 c7             	mov    %rax,%rdi
   18f04:	e8 27 c7 fe ff       	call   5630 <_ZSt3minImERKT_S2_S2_>
   18f09:	48 8b 00             	mov    (%rax),%rax
      }
   18f0c:	c9                   	leave
   18f0d:	c3                   	ret

0000000000018f0e <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   18f0e:	55                   	push   %rbp
   18f0f:	48 89 e5             	mov    %rsp,%rbp
   18f12:	48 83 ec 10          	sub    $0x10,%rsp
   18f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18f1e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f26:	ba 00 00 00 00       	mov    $0x0,%edx
   18f2b:	48 89 ce             	mov    %rcx,%rsi
   18f2e:	48 89 c7             	mov    %rax,%rdi
   18f31:	e8 e0 0b 00 00       	call   19b16 <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   18f36:	c9                   	leave
   18f37:	c3                   	ret

0000000000018f38 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   18f38:	55                   	push   %rbp
   18f39:	48 89 e5             	mov    %rsp,%rbp
   18f3c:	48 83 ec 30          	sub    $0x30,%rsp
   18f40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18f44:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18f48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   18f4c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   18f50:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   18f54:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18f58:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18f5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f60:	48 89 ce             	mov    %rcx,%rsi
   18f63:	48 89 c7             	mov    %rax,%rdi
   18f66:	e8 0c 0c 00 00       	call   19b77 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   18f6b:	c9                   	leave
   18f6c:	c3                   	ret

0000000000018f6d <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
   18f6d:	55                   	push   %rbp
   18f6e:	48 89 e5             	mov    %rsp,%rbp
   18f71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18f79:	90                   	nop
   18f7a:	5d                   	pop    %rbp
   18f7b:	c3                   	ret

0000000000018f7c <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18f7c:	55                   	push   %rbp
   18f7d:	48 89 e5             	mov    %rsp,%rbp
   18f80:	48 83 ec 20          	sub    $0x20,%rsp
   18f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18f88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18f8c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18f90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f94:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18f9b:	00 
   18f9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18fa0:	48 89 d6             	mov    %rdx,%rsi
   18fa3:	48 89 c7             	mov    %rax,%rdi
   18fa6:	e8 d5 b4 fe ff       	call   4480 <_ZdlPvm@plt>
      }
   18fab:	c9                   	leave
   18fac:	c3                   	ret
   18fad:	90                   	nop

0000000000018fae <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18fae:	55                   	push   %rbp
   18faf:	48 89 e5             	mov    %rsp,%rbp
   18fb2:	48 83 ec 20          	sub    $0x20,%rsp
   18fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18fbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18fc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18fc6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18fcd:	00 
   18fce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18fd2:	48 89 d6             	mov    %rdx,%rsi
   18fd5:	48 89 c7             	mov    %rax,%rdi
   18fd8:	e8 a3 b4 fe ff       	call   4480 <_ZdlPvm@plt>
      }
   18fdd:	c9                   	leave
   18fde:	c3                   	ret

0000000000018fdf <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   18fdf:	55                   	push   %rbp
   18fe0:	48 89 e5             	mov    %rsp,%rbp
   18fe3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fe7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18feb:	90                   	nop
   18fec:	5d                   	pop    %rbp
   18fed:	c3                   	ret

0000000000018fee <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18fee:	55                   	push   %rbp
   18fef:	48 89 e5             	mov    %rsp,%rbp
   18ff2:	48 83 ec 20          	sub    $0x20,%rsp
   18ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ffa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ffe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19002:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19006:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1900d:	00 
   1900e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19012:	48 89 d6             	mov    %rdx,%rsi
   19015:	48 89 c7             	mov    %rax,%rdi
   19018:	e8 63 b4 fe ff       	call   4480 <_ZdlPvm@plt>
      }
   1901d:	c9                   	leave
   1901e:	c3                   	ret
   1901f:	90                   	nop

0000000000019020 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19020:	55                   	push   %rbp
   19021:	48 89 e5             	mov    %rsp,%rbp
   19024:	48 83 ec 20          	sub    $0x20,%rsp
   19028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1902c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19030:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19034:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19038:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1903f:	00 
   19040:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19044:	48 89 d6             	mov    %rdx,%rsi
   19047:	48 89 c7             	mov    %rax,%rdi
   1904a:	e8 31 b4 fe ff       	call   4480 <_ZdlPvm@plt>
      }
   1904f:	c9                   	leave
   19050:	c3                   	ret

0000000000019051 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   19051:	55                   	push   %rbp
   19052:	48 89 e5             	mov    %rsp,%rbp
   19055:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19059:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1905d:	90                   	nop
   1905e:	5d                   	pop    %rbp
   1905f:	c3                   	ret

0000000000019060 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   19060:	55                   	push   %rbp
   19061:	48 89 e5             	mov    %rsp,%rbp
   19064:	48 83 ec 20          	sub    $0x20,%rsp
   19068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1906c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19070:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   19074:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19078:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1907c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19080:	48 89 ce             	mov    %rcx,%rsi
   19083:	48 89 c7             	mov    %rax,%rdi
   19086:	e8 19 0b 00 00       	call   19ba4 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   1908b:	c9                   	leave
   1908c:	c3                   	ret
   1908d:	90                   	nop

000000000001908e <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1908e:	55                   	push   %rbp
   1908f:	48 89 e5             	mov    %rsp,%rbp
   19092:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1909a:	5d                   	pop    %rbp
   1909b:	c3                   	ret

000000000001909c <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   1909c:	55                   	push   %rbp
   1909d:	48 89 e5             	mov    %rsp,%rbp
   190a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   190a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190a8:	5d                   	pop    %rbp
   190a9:	c3                   	ret

00000000000190aa <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   190aa:	55                   	push   %rbp
   190ab:	48 89 e5             	mov    %rsp,%rbp
   190ae:	48 83 ec 30          	sub    $0x30,%rsp
   190b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   190b6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   190ba:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   190be:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   190c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190c6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   190ca:	48 c1 f8 03          	sar    $0x3,%rax
   190ce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   190d2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   190d7:	7e 1f                	jle    190f8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   190d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190dd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   190e4:	00 
   190e5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   190e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   190ed:	48 89 ce             	mov    %rcx,%rsi
   190f0:	48 89 c7             	mov    %rax,%rdi
   190f3:	e8 18 b7 fe ff       	call   4810 <memmove@plt>
      return __result + __count;
   190f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19103:	00 
   19104:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19108:	48 01 d0             	add    %rdx,%rax
    }
   1910b:	c9                   	leave
   1910c:	c3                   	ret
   1910d:	90                   	nop

000000000001910e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1910e:	55                   	push   %rbp
   1910f:	48 89 e5             	mov    %rsp,%rbp
   19112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1911a:	5d                   	pop    %rbp
   1911b:	c3                   	ret

000000000001911c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1911c:	55                   	push   %rbp
   1911d:	48 89 e5             	mov    %rsp,%rbp
   19120:	48 83 ec 10          	sub    $0x10,%rsp
   19124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19128:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1912c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19134:	48 89 d6             	mov    %rdx,%rsi
   19137:	48 89 c7             	mov    %rax,%rdi
   1913a:	e8 cd 0a 00 00       	call   19c0c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   1913f:	90                   	nop
   19140:	c9                   	leave
   19141:	c3                   	ret

0000000000019142 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   19142:	55                   	push   %rbp
   19143:	48 89 e5             	mov    %rsp,%rbp
   19146:	48 83 ec 20          	sub    $0x20,%rsp
   1914a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1914e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19152:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   19156:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1915a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1915e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19162:	48 89 ce             	mov    %rcx,%rsi
   19165:	48 89 c7             	mov    %rax,%rdi
   19168:	e8 bf 0a 00 00       	call   19c2c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   1916d:	90                   	nop
   1916e:	c9                   	leave
   1916f:	c3                   	ret

0000000000019170 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   19170:	55                   	push   %rbp
   19171:	48 89 e5             	mov    %rsp,%rbp
   19174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   19178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1917c:	5d                   	pop    %rbp
   1917d:	c3                   	ret

000000000001917e <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   1917e:	55                   	push   %rbp
   1917f:	48 89 e5             	mov    %rsp,%rbp
   19182:	48 83 ec 10          	sub    $0x10,%rsp
   19186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1918a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   1918e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19192:	48 89 c7             	mov    %rax,%rdi
   19195:	e8 fa d6 ff ff       	call   16894 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1919a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1919e:	48 89 02             	mov    %rax,(%rdx)
   191a1:	90                   	nop
   191a2:	c9                   	leave
   191a3:	c3                   	ret

00000000000191a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   191a4:	55                   	push   %rbp
   191a5:	48 89 e5             	mov    %rsp,%rbp
   191a8:	48 83 ec 10          	sub    $0x10,%rsp
   191ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   191b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191b4:	48 89 c7             	mov    %rax,%rdi
   191b7:	e8 52 ff ff ff       	call   1910e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   191bc:	be 01 00 00 00       	mov    $0x1,%esi
   191c1:	48 89 c7             	mov    %rax,%rdi
   191c4:	e8 9d 0a 00 00       	call   19c66 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   191c9:	c9                   	leave
   191ca:	c3                   	ret
   191cb:	90                   	nop

00000000000191cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   191cc:	55                   	push   %rbp
   191cd:	48 89 e5             	mov    %rsp,%rbp
   191d0:	41 56                	push   %r14
   191d2:	41 55                	push   %r13
   191d4:	41 54                	push   %r12
   191d6:	53                   	push   %rbx
   191d7:	48 83 ec 30          	sub    $0x30,%rsp
   191db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   191df:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   191e3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   191e7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   191eb:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   191ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   191f3:	48 89 c6             	mov    %rax,%rsi
   191f6:	bf 48 00 00 00       	mov    $0x48,%edi
   191fb:	e8 9f c9 fe ff       	call   5b9f <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   19200:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19204:	48 89 c7             	mov    %rax,%rdi
   19207:	e8 e5 d6 ff ff       	call   168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1920c:	49 89 c6             	mov    %rax,%r14
   1920f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19213:	48 89 c7             	mov    %rax,%rdi
   19216:	e8 c8 d6 ff ff       	call   168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1921b:	49 89 c5             	mov    %rax,%r13
   1921e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19222:	48 89 c7             	mov    %rax,%rdi
   19225:	e8 ab d6 ff ff       	call   168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1922a:	49 89 c4             	mov    %rax,%r12
   1922d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19231:	48 89 c7             	mov    %rax,%rdi
   19234:	e8 15 d6 ff ff       	call   1684e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   19239:	48 89 c3             	mov    %rax,%rbx
   1923c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19240:	48 89 c7             	mov    %rax,%rdi
   19243:	e8 c6 fe ff ff       	call   1910e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   19248:	4d 89 f0             	mov    %r14,%r8
   1924b:	4c 89 e9             	mov    %r13,%rcx
   1924e:	4c 89 e2             	mov    %r12,%rdx
   19251:	48 89 de             	mov    %rbx,%rsi
   19254:	48 89 c7             	mov    %rax,%rdi
   19257:	e8 34 0a 00 00       	call   19c90 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   1925c:	eb 33                	jmp    19291 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   1925e:	48 89 c7             	mov    %rax,%rdi
   19261:	e8 ea ae fe ff       	call   4150 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   19266:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1926a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1926e:	48 89 d6             	mov    %rdx,%rsi
   19271:	48 89 c7             	mov    %rax,%rdi
   19274:	e8 29 ee ff ff       	call   180a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   19279:	e8 b2 b4 fe ff       	call   4730 <__cxa_rethrow@plt>
	  __catch(...)
   1927e:	48 89 c3             	mov    %rax,%rbx
   19281:	e8 9a b5 fe ff       	call   4820 <__cxa_end_catch@plt>
   19286:	48 89 d8             	mov    %rbx,%rax
   19289:	48 89 c7             	mov    %rax,%rdi
   1928c:	e8 1f b6 fe ff       	call   48b0 <_Unwind_Resume@plt>
	}
   19291:	48 83 c4 30          	add    $0x30,%rsp
   19295:	5b                   	pop    %rbx
   19296:	41 5c                	pop    %r12
   19298:	41 5d                	pop    %r13
   1929a:	41 5e                	pop    %r14
   1929c:	5d                   	pop    %rbp
   1929d:	c3                   	ret

000000000001929e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1929e:	55                   	push   %rbp
   1929f:	48 89 e5             	mov    %rsp,%rbp
   192a2:	48 83 ec 20          	sub    $0x20,%rsp
   192a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   192aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   192ae:	48 8b 50 18          	mov    0x18(%rax),%rdx
   192b2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   192b6:	48 89 d6             	mov    %rdx,%rsi
   192b9:	48 89 c7             	mov    %rax,%rdi
   192bc:	e8 b3 db ff ff       	call   16e74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   192c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192c5:	c9                   	leave
   192c6:	c3                   	ret
   192c7:	90                   	nop

00000000000192c8 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   192c8:	55                   	push   %rbp
   192c9:	48 89 e5             	mov    %rsp,%rbp
   192cc:	48 83 ec 20          	sub    $0x20,%rsp
   192d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   192d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   192dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192e0:	48 89 c7             	mov    %rax,%rdi
   192e3:	e8 14 0a 00 00       	call   19cfc <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   192e8:	48 8b 10             	mov    (%rax),%rdx
   192eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192ef:	48 89 10             	mov    %rdx,(%rax)
   192f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   192f6:	48 89 c7             	mov    %rax,%rdi
   192f9:	e8 0e 00 00 00       	call   1930c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   192fe:	48 8b 10             	mov    (%rax),%rdx
   19301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19305:	48 89 50 08          	mov    %rdx,0x8(%rax)
   19309:	90                   	nop
   1930a:	c9                   	leave
   1930b:	c3                   	ret

000000000001930c <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1930c:	55                   	push   %rbp
   1930d:	48 89 e5             	mov    %rsp,%rbp
   19310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19318:	5d                   	pop    %rbp
   19319:	c3                   	ret

000000000001931a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   1931a:	55                   	push   %rbp
   1931b:	48 89 e5             	mov    %rsp,%rbp
   1931e:	48 83 ec 10          	sub    $0x10,%rsp
   19322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   19326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1932a:	48 83 c0 20          	add    $0x20,%rax
   1932e:	48 89 c7             	mov    %rax,%rdi
   19331:	e8 d4 09 00 00       	call   19d0a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   19336:	c9                   	leave
   19337:	c3                   	ret

0000000000019338 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   19338:	55                   	push   %rbp
   19339:	48 89 e5             	mov    %rsp,%rbp
   1933c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19340:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   19344:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19348:	5d                   	pop    %rbp
   19349:	c3                   	ret

000000000001934a <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1934a:	55                   	push   %rbp
   1934b:	48 89 e5             	mov    %rsp,%rbp
   1934e:	48 83 ec 10          	sub    $0x10,%rsp
   19352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   19356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1935a:	48 89 c7             	mov    %rax,%rdi
   1935d:	e8 c2 09 00 00       	call   19d24 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   19362:	c9                   	leave
   19363:	c3                   	ret

0000000000019364 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   19364:	55                   	push   %rbp
   19365:	48 89 e5             	mov    %rsp,%rbp
   19368:	48 83 ec 20          	sub    $0x20,%rsp
   1936c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19370:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   19374:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19379:	74 40                	je     193bb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1937b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1937f:	48 89 c7             	mov    %rax,%rdi
   19382:	e8 b7 09 00 00       	call   19d3e <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   19387:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1938b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1938f:	48 89 c7             	mov    %rax,%rdi
   19392:	e8 b5 09 00 00       	call   19d4c <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   19397:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1939c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   193a0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   193a4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   193a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   193ac:	48 89 ce             	mov    %rcx,%rsi
   193af:	48 89 c7             	mov    %rax,%rdi
   193b2:	e8 bc 09 00 00       	call   19d73 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   193b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   193bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   193bf:	c9                   	leave
   193c0:	c3                   	ret
   193c1:	90                   	nop

00000000000193c2 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   193c2:	55                   	push   %rbp
   193c3:	48 89 e5             	mov    %rsp,%rbp
   193c6:	48 83 ec 20          	sub    $0x20,%rsp
   193ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   193ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   193d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   193d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193da:	48 89 c7             	mov    %rax,%rdi
   193dd:	e8 d6 09 00 00       	call   19db8 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   193e2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   193e6:	0f 92 c0             	setb   %al
   193e9:	0f b6 c0             	movzbl %al,%eax
   193ec:	48 85 c0             	test   %rax,%rax
   193ef:	0f 95 c0             	setne  %al
   193f2:	84 c0                	test   %al,%al
   193f4:	74 1a                	je     19410 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   193f6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   193fd:	ff ff 1f 
   19400:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19404:	73 05                	jae    1940b <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19406:	e8 e5 ae fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1940b:	e8 00 ad fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19410:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19414:	48 c1 e0 03          	shl    $0x3,%rax
   19418:	48 89 c7             	mov    %rax,%rdi
   1941b:	e8 40 b0 fe ff       	call   4460 <_Znwm@plt>
   19420:	90                   	nop
      }
   19421:	c9                   	leave
   19422:	c3                   	ret

0000000000019423 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   19423:	55                   	push   %rbp
   19424:	48 89 e5             	mov    %rsp,%rbp
   19427:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1942b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1942f:	5d                   	pop    %rbp
   19430:	c3                   	ret

0000000000019431 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   19431:	55                   	push   %rbp
   19432:	48 89 e5             	mov    %rsp,%rbp
   19435:	48 83 ec 30          	sub    $0x30,%rsp
   19439:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1943d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19441:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19445:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   19449:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1944d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19451:	48 c1 f8 03          	sar    $0x3,%rax
   19455:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   19459:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1945e:	7e 1f                	jle    1947f <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   19460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19464:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1946b:	00 
   1946c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19470:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19474:	48 89 ce             	mov    %rcx,%rsi
   19477:	48 89 c7             	mov    %rax,%rdi
   1947a:	e8 91 b3 fe ff       	call   4810 <memmove@plt>
      return __result + __count;
   1947f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19483:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1948a:	00 
   1948b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1948f:	48 01 d0             	add    %rdx,%rax
    }
   19492:	c9                   	leave
   19493:	c3                   	ret

0000000000019494 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   19494:	55                   	push   %rbp
   19495:	48 89 e5             	mov    %rsp,%rbp
   19498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1949c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   194a0:	90                   	nop
   194a1:	5d                   	pop    %rbp
   194a2:	c3                   	ret
   194a3:	90                   	nop

00000000000194a4 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   194a4:	55                   	push   %rbp
   194a5:	48 89 e5             	mov    %rsp,%rbp
   194a8:	48 83 ec 20          	sub    $0x20,%rsp
   194ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   194b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   194b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   194b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   194bc:	48 89 d0             	mov    %rdx,%rax
   194bf:	48 c1 e0 03          	shl    $0x3,%rax
   194c3:	48 01 d0             	add    %rdx,%rax
   194c6:	48 c1 e0 04          	shl    $0x4,%rax
   194ca:	48 89 c2             	mov    %rax,%rdx
   194cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   194d1:	48 89 d6             	mov    %rdx,%rsi
   194d4:	48 89 c7             	mov    %rax,%rdi
   194d7:	e8 a4 af fe ff       	call   4480 <_ZdlPvm@plt>
      }
   194dc:	c9                   	leave
   194dd:	c3                   	ret

00000000000194de <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   194de:	55                   	push   %rbp
   194df:	48 89 e5             	mov    %rsp,%rbp
   194e2:	48 83 ec 10          	sub    $0x10,%rsp
   194e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   194ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194ee:	48 89 c7             	mov    %rax,%rdi
   194f1:	e8 d6 08 00 00       	call   19dcc <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   194f6:	c9                   	leave
   194f7:	c3                   	ret

00000000000194f8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   194f8:	55                   	push   %rbp
   194f9:	48 89 e5             	mov    %rsp,%rbp
   194fc:	48 83 ec 20          	sub    $0x20,%rsp
   19500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19504:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19508:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1950c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19510:	48 89 c7             	mov    %rax,%rdi
   19513:	e8 ce 08 00 00       	call   19de6 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   19518:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1951c:	0f 92 c0             	setb   %al
   1951f:	0f b6 c0             	movzbl %al,%eax
   19522:	48 85 c0             	test   %rax,%rax
   19525:	0f 95 c0             	setne  %al
   19528:	84 c0                	test   %al,%al
   1952a:	74 1a                	je     19546 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1952c:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   19533:	1c c7 01 
   19536:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1953a:	73 05                	jae    19541 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1953c:	e8 af ad fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   19541:	e8 ca ab fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19546:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1954a:	48 89 d0             	mov    %rdx,%rax
   1954d:	48 c1 e0 03          	shl    $0x3,%rax
   19551:	48 01 d0             	add    %rdx,%rax
   19554:	48 c1 e0 04          	shl    $0x4,%rax
   19558:	48 89 c7             	mov    %rax,%rdi
   1955b:	e8 00 af fe ff       	call   4460 <_Znwm@plt>
   19560:	90                   	nop
      }
   19561:	c9                   	leave
   19562:	c3                   	ret

0000000000019563 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   19563:	55                   	push   %rbp
   19564:	48 89 e5             	mov    %rsp,%rbp
   19567:	48 83 ec 20          	sub    $0x20,%rsp
   1956b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1956f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19573:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   19577:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1957b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1957f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19583:	48 89 ce             	mov    %rcx,%rsi
   19586:	48 89 c7             	mov    %rax,%rdi
   19589:	e8 6c 08 00 00       	call   19dfa <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   1958e:	c9                   	leave
   1958f:	c3                   	ret

0000000000019590 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   19590:	55                   	push   %rbp
   19591:	48 89 e5             	mov    %rsp,%rbp
   19594:	48 83 ec 10          	sub    $0x10,%rsp
   19598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1959c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195a0:	48 89 c7             	mov    %rax,%rdi
   195a3:	e8 9e 08 00 00       	call   19e46 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   195a8:	c9                   	leave
   195a9:	c3                   	ret

00000000000195aa <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   195aa:	55                   	push   %rbp
   195ab:	48 89 e5             	mov    %rsp,%rbp
   195ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   195b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195b6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   195bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195c1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   195c8:	00 
   195c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195cd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   195d4:	00 
	{ }
   195d5:	90                   	nop
   195d6:	5d                   	pop    %rbp
   195d7:	c3                   	ret

00000000000195d8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   195d8:	55                   	push   %rbp
   195d9:	48 89 e5             	mov    %rsp,%rbp
   195dc:	48 83 ec 10          	sub    $0x10,%rsp
   195e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   195e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   195e8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   195ed:	74 15                	je     19604 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   195ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   195f7:	48 89 d6             	mov    %rdx,%rsi
   195fa:	48 89 c7             	mov    %rax,%rdi
   195fd:	e8 5e 08 00 00       	call   19e60 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   19602:	eb 05                	jmp    19609 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   19604:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   19609:	c9                   	leave
   1960a:	c3                   	ret

000000000001960b <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1960b:	55                   	push   %rbp
   1960c:	48 89 e5             	mov    %rsp,%rbp
   1960f:	48 83 ec 20          	sub    $0x20,%rsp
   19613:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19617:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1961b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1961f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19623:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19627:	48 89 d6             	mov    %rdx,%rsi
   1962a:	48 89 c7             	mov    %rax,%rdi
   1962d:	e8 58 08 00 00       	call   19e8a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   19632:	c9                   	leave
   19633:	c3                   	ret

0000000000019634 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19634:	55                   	push   %rbp
   19635:	48 89 e5             	mov    %rsp,%rbp
   19638:	48 83 ec 20          	sub    $0x20,%rsp
   1963c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19640:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19644:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19648:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1964c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19653:	00 
   19654:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19658:	48 89 d6             	mov    %rdx,%rsi
   1965b:	48 89 c7             	mov    %rax,%rdi
   1965e:	e8 1d ae fe ff       	call   4480 <_ZdlPvm@plt>
      }
   19663:	c9                   	leave
   19664:	c3                   	ret

0000000000019665 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   19665:	55                   	push   %rbp
   19666:	48 89 e5             	mov    %rsp,%rbp
   19669:	48 83 ec 10          	sub    $0x10,%rsp
   1966d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   19671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19675:	48 89 c7             	mov    %rax,%rdi
   19678:	e8 6b 08 00 00       	call   19ee8 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   1967d:	c9                   	leave
   1967e:	c3                   	ret

000000000001967f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1967f:	55                   	push   %rbp
   19680:	48 89 e5             	mov    %rsp,%rbp
   19683:	48 83 ec 20          	sub    $0x20,%rsp
   19687:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1968b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1968f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19694:	74 40                	je     196d6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1969a:	48 89 c7             	mov    %rax,%rdi
   1969d:	e8 60 08 00 00       	call   19f02 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   196a2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   196a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196aa:	48 89 c7             	mov    %rax,%rdi
   196ad:	e8 5e 08 00 00       	call   19f10 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   196b2:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   196b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   196bb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   196bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   196c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   196c7:	48 89 ce             	mov    %rcx,%rsi
   196ca:	48 89 c7             	mov    %rax,%rdi
   196cd:	e8 65 08 00 00       	call   19f37 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   196d2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   196d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   196da:	c9                   	leave
   196db:	c3                   	ret

00000000000196dc <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   196dc:	55                   	push   %rbp
   196dd:	48 89 e5             	mov    %rsp,%rbp
   196e0:	48 83 ec 20          	sub    $0x20,%rsp
   196e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   196ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   196f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196f4:	48 89 c7             	mov    %rax,%rdi
   196f7:	e8 80 08 00 00       	call   19f7c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   196fc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19700:	0f 92 c0             	setb   %al
   19703:	0f b6 c0             	movzbl %al,%eax
   19706:	48 85 c0             	test   %rax,%rax
   19709:	0f 95 c0             	setne  %al
   1970c:	84 c0                	test   %al,%al
   1970e:	74 1a                	je     1972a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19710:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   19717:	ff ff 1f 
   1971a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1971e:	73 05                	jae    19725 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19720:	e8 cb ab fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   19725:	e8 e6 a9 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1972a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1972e:	48 c1 e0 03          	shl    $0x3,%rax
   19732:	48 89 c7             	mov    %rax,%rdi
   19735:	e8 26 ad fe ff       	call   4460 <_Znwm@plt>
   1973a:	90                   	nop
      }
   1973b:	c9                   	leave
   1973c:	c3                   	ret

000000000001973d <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   1973d:	55                   	push   %rbp
   1973e:	48 89 e5             	mov    %rsp,%rbp
   19741:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19745:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19749:	5d                   	pop    %rbp
   1974a:	c3                   	ret

000000000001974b <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1974b:	55                   	push   %rbp
   1974c:	48 89 e5             	mov    %rsp,%rbp
   1974f:	48 83 ec 30          	sub    $0x30,%rsp
   19753:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19757:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1975b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1975f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   19763:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19767:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1976b:	48 c1 f8 03          	sar    $0x3,%rax
   1976f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   19773:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19778:	7e 1f                	jle    19799 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1977a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1977e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19785:	00 
   19786:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1978a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1978e:	48 89 ce             	mov    %rcx,%rsi
   19791:	48 89 c7             	mov    %rax,%rdi
   19794:	e8 77 b0 fe ff       	call   4810 <memmove@plt>
      return __result + __count;
   19799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1979d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   197a4:	00 
   197a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   197a9:	48 01 d0             	add    %rdx,%rax
    }
   197ac:	c9                   	leave
   197ad:	c3                   	ret

00000000000197ae <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   197ae:	55                   	push   %rbp
   197af:	48 89 e5             	mov    %rsp,%rbp
   197b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   197ba:	90                   	nop
   197bb:	5d                   	pop    %rbp
   197bc:	c3                   	ret

00000000000197bd <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   197bd:	55                   	push   %rbp
   197be:	48 89 e5             	mov    %rsp,%rbp
   197c1:	48 83 ec 20          	sub    $0x20,%rsp
   197c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   197cd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   197d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   197d5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   197d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197dd:	48 89 ce             	mov    %rcx,%rsi
   197e0:	48 89 c7             	mov    %rax,%rdi
   197e3:	e8 a8 07 00 00       	call   19f90 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   197e8:	c9                   	leave
   197e9:	c3                   	ret

00000000000197ea <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   197ea:	55                   	push   %rbp
   197eb:	48 89 e5             	mov    %rsp,%rbp
   197ee:	48 83 ec 10          	sub    $0x10,%rsp
   197f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   197f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197fa:	48 89 c7             	mov    %rax,%rdi
   197fd:	e8 da 07 00 00       	call   19fdc <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   19802:	c9                   	leave
   19803:	c3                   	ret

0000000000019804 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   19804:	55                   	push   %rbp
   19805:	48 89 e5             	mov    %rsp,%rbp
   19808:	48 83 ec 20          	sub    $0x20,%rsp
   1980c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19810:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   19814:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19819:	74 40                	je     1985b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1981b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1981f:	48 89 c7             	mov    %rax,%rdi
   19822:	e8 cf 07 00 00       	call   19ff6 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   19827:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1982b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1982f:	48 89 c7             	mov    %rax,%rdi
   19832:	e8 cd 07 00 00       	call   1a004 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   19837:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1983c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19840:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   19844:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19848:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1984c:	48 89 ce             	mov    %rcx,%rsi
   1984f:	48 89 c7             	mov    %rax,%rdi
   19852:	e8 d4 07 00 00       	call   1a02b <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   19857:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1985b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1985f:	c9                   	leave
   19860:	c3                   	ret
   19861:	90                   	nop

0000000000019862 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   19862:	55                   	push   %rbp
   19863:	48 89 e5             	mov    %rsp,%rbp
   19866:	48 83 ec 20          	sub    $0x20,%rsp
   1986a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1986e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19872:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   19876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1987a:	48 89 c7             	mov    %rax,%rdi
   1987d:	e8 ee 07 00 00       	call   1a070 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   19882:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19886:	0f 92 c0             	setb   %al
   19889:	0f b6 c0             	movzbl %al,%eax
   1988c:	48 85 c0             	test   %rax,%rax
   1988f:	0f 95 c0             	setne  %al
   19892:	84 c0                	test   %al,%al
   19894:	74 1a                	je     198b0 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19896:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1989d:	ff ff 1f 
   198a0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   198a4:	73 05                	jae    198ab <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   198a6:	e8 45 aa fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   198ab:	e8 60 a8 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   198b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   198b4:	48 c1 e0 03          	shl    $0x3,%rax
   198b8:	48 89 c7             	mov    %rax,%rdi
   198bb:	e8 a0 ab fe ff       	call   4460 <_Znwm@plt>
   198c0:	90                   	nop
      }
   198c1:	c9                   	leave
   198c2:	c3                   	ret

00000000000198c3 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   198c3:	55                   	push   %rbp
   198c4:	48 89 e5             	mov    %rsp,%rbp
   198c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   198cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198cf:	5d                   	pop    %rbp
   198d0:	c3                   	ret

00000000000198d1 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   198d1:	55                   	push   %rbp
   198d2:	48 89 e5             	mov    %rsp,%rbp
   198d5:	48 83 ec 30          	sub    $0x30,%rsp
   198d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   198dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   198e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   198e5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   198e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   198ed:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   198f1:	48 c1 f8 03          	sar    $0x3,%rax
   198f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   198f9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   198fe:	7e 1f                	jle    1991f <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   19900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19904:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1990b:	00 
   1990c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19910:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19914:	48 89 ce             	mov    %rcx,%rsi
   19917:	48 89 c7             	mov    %rax,%rdi
   1991a:	e8 f1 ae fe ff       	call   4810 <memmove@plt>
      return __result + __count;
   1991f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19923:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1992a:	00 
   1992b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1992f:	48 01 d0             	add    %rdx,%rax
    }
   19932:	c9                   	leave
   19933:	c3                   	ret

0000000000019934 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   19934:	55                   	push   %rbp
   19935:	48 89 e5             	mov    %rsp,%rbp
   19938:	48 83 ec 10          	sub    $0x10,%rsp
   1993c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   19940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19944:	48 89 c7             	mov    %rax,%rdi
   19947:	e8 38 07 00 00       	call   1a084 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   1994c:	c9                   	leave
   1994d:	c3                   	ret

000000000001994e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1994e:	55                   	push   %rbp
   1994f:	48 89 e5             	mov    %rsp,%rbp
   19952:	48 83 ec 20          	sub    $0x20,%rsp
   19956:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1995a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1995e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19963:	74 40                	je     199a5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19969:	48 89 c7             	mov    %rax,%rdi
   1996c:	e8 2d 07 00 00       	call   1a09e <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   19971:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   19975:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19979:	48 89 c7             	mov    %rax,%rdi
   1997c:	e8 2b 07 00 00       	call   1a0ac <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   19981:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   19986:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1998a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1998e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19992:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19996:	48 89 ce             	mov    %rcx,%rsi
   19999:	48 89 c7             	mov    %rax,%rdi
   1999c:	e8 32 07 00 00       	call   1a0d3 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   199a1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   199a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   199a9:	c9                   	leave
   199aa:	c3                   	ret
   199ab:	90                   	nop

00000000000199ac <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   199ac:	55                   	push   %rbp
   199ad:	48 89 e5             	mov    %rsp,%rbp
   199b0:	48 83 ec 20          	sub    $0x20,%rsp
   199b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   199bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   199c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199c4:	48 89 c7             	mov    %rax,%rdi
   199c7:	e8 4c 07 00 00       	call   1a118 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   199cc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   199d0:	0f 92 c0             	setb   %al
   199d3:	0f b6 c0             	movzbl %al,%eax
   199d6:	48 85 c0             	test   %rax,%rax
   199d9:	0f 95 c0             	setne  %al
   199dc:	84 c0                	test   %al,%al
   199de:	74 1a                	je     199fa <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   199e0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   199e7:	ff ff 1f 
   199ea:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   199ee:	73 05                	jae    199f5 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   199f0:	e8 fb a8 fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   199f5:	e8 16 a7 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   199fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   199fe:	48 c1 e0 03          	shl    $0x3,%rax
   19a02:	48 89 c7             	mov    %rax,%rdi
   19a05:	e8 56 aa fe ff       	call   4460 <_Znwm@plt>
   19a0a:	90                   	nop
      }
   19a0b:	c9                   	leave
   19a0c:	c3                   	ret

0000000000019a0d <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   19a0d:	55                   	push   %rbp
   19a0e:	48 89 e5             	mov    %rsp,%rbp
   19a11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a19:	5d                   	pop    %rbp
   19a1a:	c3                   	ret

0000000000019a1b <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   19a1b:	55                   	push   %rbp
   19a1c:	48 89 e5             	mov    %rsp,%rbp
   19a1f:	48 83 ec 30          	sub    $0x30,%rsp
   19a23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19a27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19a2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19a2f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   19a33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a37:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19a3b:	48 c1 f8 03          	sar    $0x3,%rax
   19a3f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   19a43:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19a48:	7e 1f                	jle    19a69 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   19a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a4e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19a55:	00 
   19a56:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19a5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a5e:	48 89 ce             	mov    %rcx,%rsi
   19a61:	48 89 c7             	mov    %rax,%rdi
   19a64:	e8 a7 ad fe ff       	call   4810 <memmove@plt>
      return __result + __count;
   19a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a6d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19a74:	00 
   19a75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a79:	48 01 d0             	add    %rdx,%rax
    }
   19a7c:	c9                   	leave
   19a7d:	c3                   	ret

0000000000019a7e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   19a7e:	55                   	push   %rbp
   19a7f:	48 89 e5             	mov    %rsp,%rbp
   19a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a8a:	90                   	nop
   19a8b:	5d                   	pop    %rbp
   19a8c:	c3                   	ret

0000000000019a8d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   19a8d:	55                   	push   %rbp
   19a8e:	48 89 e5             	mov    %rsp,%rbp
   19a91:	48 83 ec 20          	sub    $0x20,%rsp
   19a95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a9d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   19aa1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19aa5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19aad:	48 89 ce             	mov    %rcx,%rsi
   19ab0:	48 89 c7             	mov    %rax,%rdi
   19ab3:	e8 74 06 00 00       	call   1a12c <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   19ab8:	c9                   	leave
   19ab9:	c3                   	ret

0000000000019aba <_ZNSt15__new_allocatorIjEC1ERKS0_>:
   19aba:	55                   	push   %rbp
   19abb:	48 89 e5             	mov    %rsp,%rbp
   19abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ac6:	90                   	nop
   19ac7:	5d                   	pop    %rbp
   19ac8:	c3                   	ret
   19ac9:	90                   	nop

0000000000019aca <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19aca:	55                   	push   %rbp
   19acb:	48 89 e5             	mov    %rsp,%rbp
   19ace:	48 83 ec 20          	sub    $0x20,%rsp
   19ad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ad6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ada:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ae2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   19ae9:	00 
   19aea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19aee:	48 89 d6             	mov    %rdx,%rsi
   19af1:	48 89 c7             	mov    %rax,%rdi
   19af4:	e8 87 a9 fe ff       	call   4480 <_ZdlPvm@plt>
      }
   19af9:	c9                   	leave
   19afa:	c3                   	ret

0000000000019afb <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   19afb:	55                   	push   %rbp
   19afc:	48 89 e5             	mov    %rsp,%rbp
   19aff:	48 83 ec 10          	sub    $0x10,%rsp
   19b03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   19b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b0b:	48 89 c7             	mov    %rax,%rdi
   19b0e:	e8 65 06 00 00       	call   1a178 <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   19b13:	c9                   	leave
   19b14:	c3                   	ret
   19b15:	90                   	nop

0000000000019b16 <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   19b16:	55                   	push   %rbp
   19b17:	48 89 e5             	mov    %rsp,%rbp
   19b1a:	48 83 ec 20          	sub    $0x20,%rsp
   19b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19b26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   19b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b2e:	48 89 c7             	mov    %rax,%rdi
   19b31:	e8 5c 06 00 00       	call   1a192 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   19b36:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19b3a:	0f 92 c0             	setb   %al
   19b3d:	0f b6 c0             	movzbl %al,%eax
   19b40:	48 85 c0             	test   %rax,%rax
   19b43:	0f 95 c0             	setne  %al
   19b46:	84 c0                	test   %al,%al
   19b48:	74 1a                	je     19b64 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19b4a:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   19b51:	ff ff 3f 
   19b54:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19b58:	73 05                	jae    19b5f <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19b5a:	e8 91 a7 fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   19b5f:	e8 ac a5 fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19b64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19b68:	48 c1 e0 02          	shl    $0x2,%rax
   19b6c:	48 89 c7             	mov    %rax,%rdi
   19b6f:	e8 ec a8 fe ff       	call   4460 <_Znwm@plt>
   19b74:	90                   	nop
      }
   19b75:	c9                   	leave
   19b76:	c3                   	ret

0000000000019b77 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   19b77:	55                   	push   %rbp
   19b78:	48 89 e5             	mov    %rsp,%rbp
   19b7b:	48 83 ec 20          	sub    $0x20,%rsp
   19b7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b83:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19b87:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   19b8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19b8f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b97:	48 89 ce             	mov    %rcx,%rsi
   19b9a:	48 89 c7             	mov    %rax,%rdi
   19b9d:	e8 04 06 00 00       	call   1a1a6 <_ZSt4copyIPKjPjET0_T_S4_S3_>
   19ba2:	c9                   	leave
   19ba3:	c3                   	ret

0000000000019ba4 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   19ba4:	55                   	push   %rbp
   19ba5:	48 89 e5             	mov    %rsp,%rbp
   19ba8:	53                   	push   %rbx
   19ba9:	48 83 ec 28          	sub    $0x28,%rsp
   19bad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19bb1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19bb5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19bb9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19bbd:	48 89 c7             	mov    %rax,%rdi
   19bc0:	e8 2c 06 00 00       	call   1a1f1 <_ZSt12__miter_baseIPKPKcET_S4_>
   19bc5:	48 89 c3             	mov    %rax,%rbx
   19bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bcc:	48 89 c7             	mov    %rax,%rdi
   19bcf:	e8 1d 06 00 00       	call   1a1f1 <_ZSt12__miter_baseIPKPKcET_S4_>
   19bd4:	48 89 c1             	mov    %rax,%rcx
   19bd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bdb:	48 89 c2             	mov    %rax,%rdx
   19bde:	48 89 de             	mov    %rbx,%rsi
   19be1:	48 89 cf             	mov    %rcx,%rdi
   19be4:	e8 16 06 00 00       	call   1a1ff <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   19be9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19bed:	c9                   	leave
   19bee:	c3                   	ret
   19bef:	90                   	nop

0000000000019bf0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   19bf0:	55                   	push   %rbp
   19bf1:	48 89 e5             	mov    %rsp,%rbp
   19bf4:	48 83 ec 10          	sub    $0x10,%rsp
   19bf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c00:	48 89 c7             	mov    %rax,%rdi
   19c03:	e8 58 a6 fe ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   19c08:	90                   	nop
   19c09:	c9                   	leave
   19c0a:	c3                   	ret
   19c0b:	90                   	nop

0000000000019c0c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   19c0c:	55                   	push   %rbp
   19c0d:	48 89 e5             	mov    %rsp,%rbp
   19c10:	48 83 ec 10          	sub    $0x10,%rsp
   19c14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   19c1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c20:	48 89 c7             	mov    %rax,%rdi
   19c23:	e8 c8 ff ff ff       	call   19bf0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   19c28:	90                   	nop
   19c29:	c9                   	leave
   19c2a:	c3                   	ret
   19c2b:	90                   	nop

0000000000019c2c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   19c2c:	55                   	push   %rbp
   19c2d:	48 89 e5             	mov    %rsp,%rbp
   19c30:	48 83 ec 20          	sub    $0x20,%rsp
   19c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19c3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   19c40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19c44:	48 89 d0             	mov    %rdx,%rax
   19c47:	48 c1 e0 03          	shl    $0x3,%rax
   19c4b:	48 01 d0             	add    %rdx,%rax
   19c4e:	48 c1 e0 03          	shl    $0x3,%rax
   19c52:	48 89 c2             	mov    %rax,%rdx
   19c55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19c59:	48 89 d6             	mov    %rdx,%rsi
   19c5c:	48 89 c7             	mov    %rax,%rdi
   19c5f:	e8 1c a8 fe ff       	call   4480 <_ZdlPvm@plt>
      }
   19c64:	c9                   	leave
   19c65:	c3                   	ret

0000000000019c66 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   19c66:	55                   	push   %rbp
   19c67:	48 89 e5             	mov    %rsp,%rbp
   19c6a:	48 83 ec 10          	sub    $0x10,%rsp
   19c6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19c72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19c76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c7e:	ba 00 00 00 00       	mov    $0x0,%edx
   19c83:	48 89 ce             	mov    %rcx,%rsi
   19c86:	48 89 c7             	mov    %rax,%rdi
   19c89:	e8 dc 05 00 00       	call   1a26a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   19c8e:	c9                   	leave
   19c8f:	c3                   	ret

0000000000019c90 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   19c90:	55                   	push   %rbp
   19c91:	48 89 e5             	mov    %rsp,%rbp
   19c94:	41 54                	push   %r12
   19c96:	53                   	push   %rbx
   19c97:	48 83 ec 30          	sub    $0x30,%rsp
   19c9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19c9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19ca3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19ca7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   19cab:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   19caf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19cb3:	48 89 c7             	mov    %rax,%rdi
   19cb6:	e8 36 cc ff ff       	call   168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   19cbb:	49 89 c4             	mov    %rax,%r12
   19cbe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19cc2:	48 89 c7             	mov    %rax,%rdi
   19cc5:	e8 19 cc ff ff       	call   168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   19cca:	48 89 c3             	mov    %rax,%rbx
   19ccd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19cd1:	48 89 c7             	mov    %rax,%rdi
   19cd4:	e8 fc cb ff ff       	call   168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   19cd9:	48 89 c2             	mov    %rax,%rdx
   19cdc:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   19ce0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ce4:	4d 89 e0             	mov    %r12,%r8
   19ce7:	48 89 d9             	mov    %rbx,%rcx
   19cea:	48 89 c7             	mov    %rax,%rdi
   19ced:	e8 0a 06 00 00       	call   1a2fc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   19cf2:	90                   	nop
   19cf3:	48 83 c4 30          	add    $0x30,%rsp
   19cf7:	5b                   	pop    %rbx
   19cf8:	41 5c                	pop    %r12
   19cfa:	5d                   	pop    %rbp
   19cfb:	c3                   	ret

0000000000019cfc <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19cfc:	55                   	push   %rbp
   19cfd:	48 89 e5             	mov    %rsp,%rbp
   19d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d08:	5d                   	pop    %rbp
   19d09:	c3                   	ret

0000000000019d0a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   19d0a:	55                   	push   %rbp
   19d0b:	48 89 e5             	mov    %rsp,%rbp
   19d0e:	48 83 ec 10          	sub    $0x10,%rsp
   19d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   19d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d1a:	48 89 c7             	mov    %rax,%rdi
   19d1d:	e8 8a 06 00 00       	call   1a3ac <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   19d22:	c9                   	leave
   19d23:	c3                   	ret

0000000000019d24 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19d24:	55                   	push   %rbp
   19d25:	48 89 e5             	mov    %rsp,%rbp
   19d28:	48 83 ec 10          	sub    $0x10,%rsp
   19d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d34:	48 89 c7             	mov    %rax,%rdi
   19d37:	e8 7c 00 00 00       	call   19db8 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   19d3c:	c9                   	leave
   19d3d:	c3                   	ret

0000000000019d3e <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19d3e:	55                   	push   %rbp
   19d3f:	48 89 e5             	mov    %rsp,%rbp
   19d42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d4a:	5d                   	pop    %rbp
   19d4b:	c3                   	ret

0000000000019d4c <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19d4c:	55                   	push   %rbp
   19d4d:	48 89 e5             	mov    %rsp,%rbp
   19d50:	48 83 ec 10          	sub    $0x10,%rsp
   19d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d5c:	48 89 c6             	mov    %rax,%rsi
   19d5f:	bf 08 00 00 00       	mov    $0x8,%edi
   19d64:	e8 36 be fe ff       	call   5b9f <_ZnwmPv>
   19d69:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19d70:	90                   	nop
   19d71:	c9                   	leave
   19d72:	c3                   	ret

0000000000019d73 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19d73:	55                   	push   %rbp
   19d74:	48 89 e5             	mov    %rsp,%rbp
   19d77:	48 83 ec 20          	sub    $0x20,%rsp
   19d7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19d83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   19d87:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19d8b:	48 89 c7             	mov    %rax,%rdi
   19d8e:	e8 27 06 00 00       	call   1a3ba <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19d93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19d97:	48 89 c7             	mov    %rax,%rdi
   19d9a:	e8 12 be fe ff       	call   5bb1 <_ZSt17__size_to_integerm>
   19d9f:	48 89 c1             	mov    %rax,%rcx
   19da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19da6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19daa:	48 89 ce             	mov    %rcx,%rsi
   19dad:	48 89 c7             	mov    %rax,%rdi
   19db0:	e8 10 06 00 00       	call   1a3c5 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   19db5:	c9                   	leave
   19db6:	c3                   	ret
   19db7:	90                   	nop

0000000000019db8 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19db8:	55                   	push   %rbp
   19db9:	48 89 e5             	mov    %rsp,%rbp
   19dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19dc0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19dc7:	ff ff 0f 
      }
   19dca:	5d                   	pop    %rbp
   19dcb:	c3                   	ret

0000000000019dcc <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19dcc:	55                   	push   %rbp
   19dcd:	48 89 e5             	mov    %rsp,%rbp
   19dd0:	48 83 ec 10          	sub    $0x10,%rsp
   19dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ddc:	48 89 c7             	mov    %rax,%rdi
   19ddf:	e8 02 00 00 00       	call   19de6 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   19de4:	c9                   	leave
   19de5:	c3                   	ret

0000000000019de6 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19de6:	55                   	push   %rbp
   19de7:	48 89 e5             	mov    %rsp,%rbp
   19dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19dee:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   19df5:	8e e3 00 
      }
   19df8:	5d                   	pop    %rbp
   19df9:	c3                   	ret

0000000000019dfa <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   19dfa:	55                   	push   %rbp
   19dfb:	48 89 e5             	mov    %rsp,%rbp
   19dfe:	53                   	push   %rbx
   19dff:	48 83 ec 28          	sub    $0x28,%rsp
   19e03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19e0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19e0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e13:	48 89 c7             	mov    %rax,%rdi
   19e16:	e8 07 06 00 00       	call   1a422 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   19e1b:	48 89 c3             	mov    %rax,%rbx
   19e1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e22:	48 89 c7             	mov    %rax,%rdi
   19e25:	e8 f8 05 00 00       	call   1a422 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   19e2a:	48 89 c1             	mov    %rax,%rcx
   19e2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19e31:	48 89 c2             	mov    %rax,%rdx
   19e34:	48 89 de             	mov    %rbx,%rsi
   19e37:	48 89 cf             	mov    %rcx,%rdi
   19e3a:	e8 f1 05 00 00       	call   1a430 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   19e3f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19e43:	c9                   	leave
   19e44:	c3                   	ret
   19e45:	90                   	nop

0000000000019e46 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19e46:	55                   	push   %rbp
   19e47:	48 89 e5             	mov    %rsp,%rbp
   19e4a:	48 83 ec 10          	sub    $0x10,%rsp
   19e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e56:	48 89 c7             	mov    %rax,%rdi
   19e59:	e8 3c 06 00 00       	call   1a49a <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   19e5e:	c9                   	leave
   19e5f:	c3                   	ret

0000000000019e60 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   19e60:	55                   	push   %rbp
   19e61:	48 89 e5             	mov    %rsp,%rbp
   19e64:	48 83 ec 10          	sub    $0x10,%rsp
   19e68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   19e70:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e78:	ba 00 00 00 00       	mov    $0x0,%edx
   19e7d:	48 89 ce             	mov    %rcx,%rsi
   19e80:	48 89 c7             	mov    %rax,%rdi
   19e83:	e8 26 06 00 00       	call   1a4ae <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   19e88:	c9                   	leave
   19e89:	c3                   	ret

0000000000019e8a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   19e8a:	55                   	push   %rbp
   19e8b:	48 89 e5             	mov    %rsp,%rbp
   19e8e:	48 83 ec 20          	sub    $0x20,%rsp
   19e92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   19e9a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19e9f:	74 40                	je     19ee1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   19ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ea5:	48 89 c7             	mov    %rax,%rdi
   19ea8:	e8 62 06 00 00       	call   1a50f <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   19ead:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   19eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19eb5:	48 89 c7             	mov    %rax,%rdi
   19eb8:	e8 60 06 00 00       	call   1a51d <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   19ebd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   19ec2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ec6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   19eca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19ece:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ed2:	48 89 ce             	mov    %rcx,%rsi
   19ed5:	48 89 c7             	mov    %rax,%rdi
   19ed8:	e8 67 06 00 00       	call   1a544 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   19edd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   19ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   19ee5:	c9                   	leave
   19ee6:	c3                   	ret
   19ee7:	90                   	nop

0000000000019ee8 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19ee8:	55                   	push   %rbp
   19ee9:	48 89 e5             	mov    %rsp,%rbp
   19eec:	48 83 ec 10          	sub    $0x10,%rsp
   19ef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ef8:	48 89 c7             	mov    %rax,%rdi
   19efb:	e8 7c 00 00 00       	call   19f7c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   19f00:	c9                   	leave
   19f01:	c3                   	ret

0000000000019f02 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19f02:	55                   	push   %rbp
   19f03:	48 89 e5             	mov    %rsp,%rbp
   19f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f0e:	5d                   	pop    %rbp
   19f0f:	c3                   	ret

0000000000019f10 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19f10:	55                   	push   %rbp
   19f11:	48 89 e5             	mov    %rsp,%rbp
   19f14:	48 83 ec 10          	sub    $0x10,%rsp
   19f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   19f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f20:	48 89 c6             	mov    %rax,%rsi
   19f23:	bf 08 00 00 00       	mov    $0x8,%edi
   19f28:	e8 72 bc fe ff       	call   5b9f <_ZnwmPv>
   19f2d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19f34:	90                   	nop
   19f35:	c9                   	leave
   19f36:	c3                   	ret

0000000000019f37 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19f37:	55                   	push   %rbp
   19f38:	48 89 e5             	mov    %rsp,%rbp
   19f3b:	48 83 ec 20          	sub    $0x20,%rsp
   19f3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19f43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19f47:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   19f4b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19f4f:	48 89 c7             	mov    %rax,%rdi
   19f52:	e8 31 06 00 00       	call   1a588 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19f57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19f5b:	48 89 c7             	mov    %rax,%rdi
   19f5e:	e8 4e bc fe ff       	call   5bb1 <_ZSt17__size_to_integerm>
   19f63:	48 89 c1             	mov    %rax,%rcx
   19f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19f6e:	48 89 ce             	mov    %rcx,%rsi
   19f71:	48 89 c7             	mov    %rax,%rdi
   19f74:	e8 1a 06 00 00       	call   1a593 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   19f79:	c9                   	leave
   19f7a:	c3                   	ret
   19f7b:	90                   	nop

0000000000019f7c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   19f7c:	55                   	push   %rbp
   19f7d:	48 89 e5             	mov    %rsp,%rbp
   19f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   19f84:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   19f8b:	ff ff 0f 
      }
   19f8e:	5d                   	pop    %rbp
   19f8f:	c3                   	ret

0000000000019f90 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   19f90:	55                   	push   %rbp
   19f91:	48 89 e5             	mov    %rsp,%rbp
   19f94:	53                   	push   %rbx
   19f95:	48 83 ec 28          	sub    $0x28,%rsp
   19f99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19f9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19fa1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   19fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19fa9:	48 89 c7             	mov    %rax,%rdi
   19fac:	e8 3f 06 00 00       	call   1a5f0 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   19fb1:	48 89 c3             	mov    %rax,%rbx
   19fb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19fb8:	48 89 c7             	mov    %rax,%rdi
   19fbb:	e8 30 06 00 00       	call   1a5f0 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   19fc0:	48 89 c1             	mov    %rax,%rcx
   19fc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fc7:	48 89 c2             	mov    %rax,%rdx
   19fca:	48 89 de             	mov    %rbx,%rsi
   19fcd:	48 89 cf             	mov    %rcx,%rdi
   19fd0:	e8 29 06 00 00       	call   1a5fe <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   19fd5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19fd9:	c9                   	leave
   19fda:	c3                   	ret
   19fdb:	90                   	nop

0000000000019fdc <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   19fdc:	55                   	push   %rbp
   19fdd:	48 89 e5             	mov    %rsp,%rbp
   19fe0:	48 83 ec 10          	sub    $0x10,%rsp
   19fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   19fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fec:	48 89 c7             	mov    %rax,%rdi
   19fef:	e8 7c 00 00 00       	call   1a070 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   19ff4:	c9                   	leave
   19ff5:	c3                   	ret

0000000000019ff6 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19ff6:	55                   	push   %rbp
   19ff7:	48 89 e5             	mov    %rsp,%rbp
   19ffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   19ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a002:	5d                   	pop    %rbp
   1a003:	c3                   	ret

000000000001a004 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1a004:	55                   	push   %rbp
   1a005:	48 89 e5             	mov    %rsp,%rbp
   1a008:	48 83 ec 10          	sub    $0x10,%rsp
   1a00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1a010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a014:	48 89 c6             	mov    %rax,%rsi
   1a017:	bf 08 00 00 00       	mov    $0x8,%edi
   1a01c:	e8 7e bb fe ff       	call   5b9f <_ZnwmPv>
   1a021:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1a028:	90                   	nop
   1a029:	c9                   	leave
   1a02a:	c3                   	ret

000000000001a02b <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1a02b:	55                   	push   %rbp
   1a02c:	48 89 e5             	mov    %rsp,%rbp
   1a02f:	48 83 ec 20          	sub    $0x20,%rsp
   1a033:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a037:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a03b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1a03f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a043:	48 89 c7             	mov    %rax,%rdi
   1a046:	e8 1d 06 00 00       	call   1a668 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1a04b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a04f:	48 89 c7             	mov    %rax,%rdi
   1a052:	e8 5a bb fe ff       	call   5bb1 <_ZSt17__size_to_integerm>
   1a057:	48 89 c1             	mov    %rax,%rcx
   1a05a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a05e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a062:	48 89 ce             	mov    %rcx,%rsi
   1a065:	48 89 c7             	mov    %rax,%rdi
   1a068:	e8 06 06 00 00       	call   1a673 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1a06d:	c9                   	leave
   1a06e:	c3                   	ret
   1a06f:	90                   	nop

000000000001a070 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a070:	55                   	push   %rbp
   1a071:	48 89 e5             	mov    %rsp,%rbp
   1a074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a078:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1a07f:	ff ff 0f 
      }
   1a082:	5d                   	pop    %rbp
   1a083:	c3                   	ret

000000000001a084 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1a084:	55                   	push   %rbp
   1a085:	48 89 e5             	mov    %rsp,%rbp
   1a088:	48 83 ec 10          	sub    $0x10,%rsp
   1a08c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1a090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a094:	48 89 c7             	mov    %rax,%rdi
   1a097:	e8 7c 00 00 00       	call   1a118 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   1a09c:	c9                   	leave
   1a09d:	c3                   	ret

000000000001a09e <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1a09e:	55                   	push   %rbp
   1a09f:	48 89 e5             	mov    %rsp,%rbp
   1a0a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1a0a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0aa:	5d                   	pop    %rbp
   1a0ab:	c3                   	ret

000000000001a0ac <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1a0ac:	55                   	push   %rbp
   1a0ad:	48 89 e5             	mov    %rsp,%rbp
   1a0b0:	48 83 ec 10          	sub    $0x10,%rsp
   1a0b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1a0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0bc:	48 89 c6             	mov    %rax,%rsi
   1a0bf:	bf 08 00 00 00       	mov    $0x8,%edi
   1a0c4:	e8 d6 ba fe ff       	call   5b9f <_ZnwmPv>
   1a0c9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1a0d0:	90                   	nop
   1a0d1:	c9                   	leave
   1a0d2:	c3                   	ret

000000000001a0d3 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1a0d3:	55                   	push   %rbp
   1a0d4:	48 89 e5             	mov    %rsp,%rbp
   1a0d7:	48 83 ec 20          	sub    $0x20,%rsp
   1a0db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a0df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a0e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1a0e7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a0eb:	48 89 c7             	mov    %rax,%rdi
   1a0ee:	e8 dd 05 00 00       	call   1a6d0 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1a0f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a0f7:	48 89 c7             	mov    %rax,%rdi
   1a0fa:	e8 b2 ba fe ff       	call   5bb1 <_ZSt17__size_to_integerm>
   1a0ff:	48 89 c1             	mov    %rax,%rcx
   1a102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a106:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a10a:	48 89 ce             	mov    %rcx,%rsi
   1a10d:	48 89 c7             	mov    %rax,%rdi
   1a110:	e8 c6 05 00 00       	call   1a6db <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1a115:	c9                   	leave
   1a116:	c3                   	ret
   1a117:	90                   	nop

000000000001a118 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a118:	55                   	push   %rbp
   1a119:	48 89 e5             	mov    %rsp,%rbp
   1a11c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a120:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1a127:	ff ff 0f 
      }
   1a12a:	5d                   	pop    %rbp
   1a12b:	c3                   	ret

000000000001a12c <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1a12c:	55                   	push   %rbp
   1a12d:	48 89 e5             	mov    %rsp,%rbp
   1a130:	53                   	push   %rbx
   1a131:	48 83 ec 28          	sub    $0x28,%rsp
   1a135:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a139:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a13d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1a141:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a145:	48 89 c7             	mov    %rax,%rdi
   1a148:	e8 eb 05 00 00       	call   1a738 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   1a14d:	48 89 c3             	mov    %rax,%rbx
   1a150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a154:	48 89 c7             	mov    %rax,%rdi
   1a157:	e8 dc 05 00 00       	call   1a738 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   1a15c:	48 89 c1             	mov    %rax,%rcx
   1a15f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a163:	48 89 c2             	mov    %rax,%rdx
   1a166:	48 89 de             	mov    %rbx,%rsi
   1a169:	48 89 cf             	mov    %rcx,%rdi
   1a16c:	e8 d5 05 00 00       	call   1a746 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   1a171:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a175:	c9                   	leave
   1a176:	c3                   	ret
   1a177:	90                   	nop

000000000001a178 <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1a178:	55                   	push   %rbp
   1a179:	48 89 e5             	mov    %rsp,%rbp
   1a17c:	48 83 ec 10          	sub    $0x10,%rsp
   1a180:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1a184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a188:	48 89 c7             	mov    %rax,%rdi
   1a18b:	e8 02 00 00 00       	call   1a192 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   1a190:	c9                   	leave
   1a191:	c3                   	ret

000000000001a192 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a192:	55                   	push   %rbp
   1a193:	48 89 e5             	mov    %rsp,%rbp
   1a196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a19a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a1a1:	ff ff 1f 
      }
   1a1a4:	5d                   	pop    %rbp
   1a1a5:	c3                   	ret

000000000001a1a6 <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   1a1a6:	55                   	push   %rbp
   1a1a7:	48 89 e5             	mov    %rsp,%rbp
   1a1aa:	53                   	push   %rbx
   1a1ab:	48 83 ec 28          	sub    $0x28,%rsp
   1a1af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a1b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a1b7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1a1bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a1bf:	48 89 c7             	mov    %rax,%rdi
   1a1c2:	e8 e9 05 00 00       	call   1a7b0 <_ZSt12__miter_baseIPKjET_S2_>
   1a1c7:	48 89 c3             	mov    %rax,%rbx
   1a1ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a1ce:	48 89 c7             	mov    %rax,%rdi
   1a1d1:	e8 da 05 00 00       	call   1a7b0 <_ZSt12__miter_baseIPKjET_S2_>
   1a1d6:	48 89 c1             	mov    %rax,%rcx
   1a1d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a1dd:	48 89 c2             	mov    %rax,%rdx
   1a1e0:	48 89 de             	mov    %rbx,%rsi
   1a1e3:	48 89 cf             	mov    %rcx,%rdi
   1a1e6:	e8 d3 05 00 00       	call   1a7be <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   1a1eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a1ef:	c9                   	leave
   1a1f0:	c3                   	ret

000000000001a1f1 <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
   1a1f1:	55                   	push   %rbp
   1a1f2:	48 89 e5             	mov    %rsp,%rbp
   1a1f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a1f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a1fd:	5d                   	pop    %rbp
   1a1fe:	c3                   	ret

000000000001a1ff <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a1ff:	55                   	push   %rbp
   1a200:	48 89 e5             	mov    %rsp,%rbp
   1a203:	41 54                	push   %r12
   1a205:	53                   	push   %rbx
   1a206:	48 83 ec 20          	sub    $0x20,%rsp
   1a20a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a20e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a212:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a216:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a21a:	48 89 c7             	mov    %rax,%rdi
   1a21d:	e8 7a ee ff ff       	call   1909c <_ZSt12__niter_baseIPPKcET_S3_>
   1a222:	49 89 c4             	mov    %rax,%r12
   1a225:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a229:	48 89 c7             	mov    %rax,%rdi
   1a22c:	e8 f7 05 00 00       	call   1a828 <_ZSt12__niter_baseIPKPKcET_S4_>
   1a231:	48 89 c3             	mov    %rax,%rbx
   1a234:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a238:	48 89 c7             	mov    %rax,%rdi
   1a23b:	e8 e8 05 00 00       	call   1a828 <_ZSt12__niter_baseIPKPKcET_S4_>
   1a240:	4c 89 e2             	mov    %r12,%rdx
   1a243:	48 89 de             	mov    %rbx,%rsi
   1a246:	48 89 c7             	mov    %rax,%rdi
   1a249:	e8 e8 05 00 00       	call   1a836 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1a24e:	48 89 c2             	mov    %rax,%rdx
   1a251:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a255:	48 89 d6             	mov    %rdx,%rsi
   1a258:	48 89 c7             	mov    %rax,%rdi
   1a25b:	e8 03 06 00 00       	call   1a863 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1a260:	48 83 c4 20          	add    $0x20,%rsp
   1a264:	5b                   	pop    %rbx
   1a265:	41 5c                	pop    %r12
   1a267:	5d                   	pop    %rbp
   1a268:	c3                   	ret
   1a269:	90                   	nop

000000000001a26a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a26a:	55                   	push   %rbp
   1a26b:	48 89 e5             	mov    %rsp,%rbp
   1a26e:	48 83 ec 20          	sub    $0x20,%rsp
   1a272:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a276:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a27a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a27e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a282:	48 89 c7             	mov    %rax,%rdi
   1a285:	e8 ec 05 00 00       	call   1a876 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   1a28a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a28e:	0f 92 c0             	setb   %al
   1a291:	0f b6 c0             	movzbl %al,%eax
   1a294:	48 85 c0             	test   %rax,%rax
   1a297:	0f 95 c0             	setne  %al
   1a29a:	84 c0                	test   %al,%al
   1a29c:	74 1a                	je     1a2b8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a29e:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   1a2a5:	38 8e 03 
   1a2a8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a2ac:	73 05                	jae    1a2b3 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a2ae:	e8 3d a0 fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a2b3:	e8 58 9e fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a2b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a2bc:	48 89 d0             	mov    %rdx,%rax
   1a2bf:	48 c1 e0 03          	shl    $0x3,%rax
   1a2c3:	48 01 d0             	add    %rdx,%rax
   1a2c6:	48 c1 e0 03          	shl    $0x3,%rax
   1a2ca:	48 89 c7             	mov    %rax,%rdi
   1a2cd:	e8 8e a1 fe ff       	call   4460 <_Znwm@plt>
   1a2d2:	90                   	nop
      }
   1a2d3:	c9                   	leave
   1a2d4:	c3                   	ret
   1a2d5:	90                   	nop

000000000001a2d6 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1a2d6:	55                   	push   %rbp
   1a2d7:	48 89 e5             	mov    %rsp,%rbp
   1a2da:	48 83 ec 10          	sub    $0x10,%rsp
   1a2de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a2e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a2e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a2ee:	48 89 d6             	mov    %rdx,%rsi
   1a2f1:	48 89 c7             	mov    %rax,%rdi
   1a2f4:	e8 91 05 00 00       	call   1a88a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1a2f9:	90                   	nop
   1a2fa:	c9                   	leave
   1a2fb:	c3                   	ret

000000000001a2fc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1a2fc:	55                   	push   %rbp
   1a2fd:	48 89 e5             	mov    %rsp,%rbp
   1a300:	41 56                	push   %r14
   1a302:	41 55                	push   %r13
   1a304:	41 54                	push   %r12
   1a306:	53                   	push   %rbx
   1a307:	48 83 ec 40          	sub    $0x40,%rsp
   1a30b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a30f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1a313:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1a317:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1a31b:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1a31f:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   1a323:	48 89 de             	mov    %rbx,%rsi
   1a326:	bf 28 00 00 00       	mov    $0x28,%edi
   1a32b:	e8 6f b8 fe ff       	call   5b9f <_ZnwmPv>
   1a330:	49 89 c4             	mov    %rax,%r12
   1a333:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1a339:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1a33d:	48 89 c7             	mov    %rax,%rdi
   1a340:	e8 ac c5 ff ff       	call   168f1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1a345:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1a349:	48 89 c7             	mov    %rax,%rdi
   1a34c:	e8 92 c5 ff ff       	call   168e3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1a351:	48 89 c2             	mov    %rax,%rdx
   1a354:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a358:	48 89 d6             	mov    %rdx,%rsi
   1a35b:	48 89 c7             	mov    %rax,%rdi
   1a35e:	e8 73 ff ff ff       	call   1a2d6 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1a363:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1a367:	48 89 c7             	mov    %rax,%rdi
   1a36a:	e8 66 c5 ff ff       	call   168d5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1a36f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a373:	48 89 c6             	mov    %rax,%rsi
   1a376:	4c 89 e7             	mov    %r12,%rdi
   1a379:	e8 2a 05 00 00       	call   1a8a8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1a37e:	eb 1e                	jmp    1a39e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   1a380:	49 89 c5             	mov    %rax,%r13
   1a383:	45 84 f6             	test   %r14b,%r14b
   1a386:	74 0b                	je     1a393 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   1a388:	48 89 de             	mov    %rbx,%rsi
   1a38b:	4c 89 e7             	mov    %r12,%rdi
   1a38e:	e8 da 80 ff ff       	call   1246d <_ZdlPvS_>
   1a393:	4c 89 e8             	mov    %r13,%rax
   1a396:	48 89 c7             	mov    %rax,%rdi
   1a399:	e8 12 a5 fe ff       	call   48b0 <_Unwind_Resume@plt>
   1a39e:	48 83 c4 40          	add    $0x40,%rsp
   1a3a2:	5b                   	pop    %rbx
   1a3a3:	41 5c                	pop    %r12
   1a3a5:	41 5d                	pop    %r13
   1a3a7:	41 5e                	pop    %r14
   1a3a9:	5d                   	pop    %rbp
   1a3aa:	c3                   	ret
   1a3ab:	90                   	nop

000000000001a3ac <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1a3ac:	55                   	push   %rbp
   1a3ad:	48 89 e5             	mov    %rsp,%rbp
   1a3b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1a3b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3b8:	5d                   	pop    %rbp
   1a3b9:	c3                   	ret

000000000001a3ba <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a3ba:	55                   	push   %rbp
   1a3bb:	48 89 e5             	mov    %rsp,%rbp
   1a3be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a3c2:	90                   	nop
   1a3c3:	5d                   	pop    %rbp
   1a3c4:	c3                   	ret

000000000001a3c5 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a3c5:	55                   	push   %rbp
   1a3c6:	48 89 e5             	mov    %rsp,%rbp
   1a3c9:	48 83 ec 20          	sub    $0x20,%rsp
   1a3cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a3d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a3d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a3d9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a3de:	75 06                	jne    1a3e6 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a3e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3e4:	eb 3a                	jmp    1a420 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a3e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a3ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a3f1:	00 
   1a3f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a3f6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a3fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a3fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a402:	48 89 ce             	mov    %rcx,%rsi
   1a405:	48 89 c7             	mov    %rax,%rdi
   1a408:	e8 c5 04 00 00       	call   1a8d2 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a40d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a411:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a418:	00 
   1a419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a41d:	48 01 d0             	add    %rdx,%rax
    }
   1a420:	c9                   	leave
   1a421:	c3                   	ret

000000000001a422 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   1a422:	55                   	push   %rbp
   1a423:	48 89 e5             	mov    %rsp,%rbp
   1a426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a42e:	5d                   	pop    %rbp
   1a42f:	c3                   	ret

000000000001a430 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a430:	55                   	push   %rbp
   1a431:	48 89 e5             	mov    %rsp,%rbp
   1a434:	41 54                	push   %r12
   1a436:	53                   	push   %rbx
   1a437:	48 83 ec 20          	sub    $0x20,%rsp
   1a43b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a43f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a443:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a447:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a44b:	48 89 c7             	mov    %rax,%rdi
   1a44e:	e8 bb 04 00 00       	call   1a90e <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   1a453:	49 89 c4             	mov    %rax,%r12
   1a456:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a45a:	48 89 c7             	mov    %rax,%rdi
   1a45d:	e8 9e 04 00 00       	call   1a900 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1a462:	48 89 c3             	mov    %rax,%rbx
   1a465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a469:	48 89 c7             	mov    %rax,%rdi
   1a46c:	e8 8f 04 00 00       	call   1a900 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1a471:	4c 89 e2             	mov    %r12,%rdx
   1a474:	48 89 de             	mov    %rbx,%rsi
   1a477:	48 89 c7             	mov    %rax,%rdi
   1a47a:	e8 9d 04 00 00       	call   1a91c <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1a47f:	48 89 c2             	mov    %rax,%rdx
   1a482:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a486:	48 89 d6             	mov    %rdx,%rsi
   1a489:	48 89 c7             	mov    %rax,%rdi
   1a48c:	e8 b8 04 00 00       	call   1a949 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   1a491:	48 83 c4 20          	add    $0x20,%rsp
   1a495:	5b                   	pop    %rbx
   1a496:	41 5c                	pop    %r12
   1a498:	5d                   	pop    %rbp
   1a499:	c3                   	ret

000000000001a49a <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a49a:	55                   	push   %rbp
   1a49b:	48 89 e5             	mov    %rsp,%rbp
   1a49e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a4a2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1a4a9:	ff ff 0f 
      }
   1a4ac:	5d                   	pop    %rbp
   1a4ad:	c3                   	ret

000000000001a4ae <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1a4ae:	55                   	push   %rbp
   1a4af:	48 89 e5             	mov    %rsp,%rbp
   1a4b2:	48 83 ec 20          	sub    $0x20,%rsp
   1a4b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a4ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a4be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1a4c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a4c6:	48 89 c7             	mov    %rax,%rdi
   1a4c9:	e8 cc ff ff ff       	call   1a49a <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1a4ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a4d2:	0f 92 c0             	setb   %al
   1a4d5:	0f b6 c0             	movzbl %al,%eax
   1a4d8:	48 85 c0             	test   %rax,%rax
   1a4db:	0f 95 c0             	setne  %al
   1a4de:	84 c0                	test   %al,%al
   1a4e0:	74 1a                	je     1a4fc <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1a4e2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1a4e9:	ff ff 1f 
   1a4ec:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1a4f0:	73 05                	jae    1a4f7 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1a4f2:	e8 f9 9d fe ff       	call   42f0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1a4f7:	e8 14 9c fe ff       	call   4110 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1a4fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a500:	48 c1 e0 03          	shl    $0x3,%rax
   1a504:	48 89 c7             	mov    %rax,%rdi
   1a507:	e8 54 9f fe ff       	call   4460 <_Znwm@plt>
   1a50c:	90                   	nop
      }
   1a50d:	c9                   	leave
   1a50e:	c3                   	ret

000000000001a50f <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1a50f:	55                   	push   %rbp
   1a510:	48 89 e5             	mov    %rsp,%rbp
   1a513:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1a517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a51b:	5d                   	pop    %rbp
   1a51c:	c3                   	ret

000000000001a51d <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1a51d:	55                   	push   %rbp
   1a51e:	48 89 e5             	mov    %rsp,%rbp
   1a521:	48 83 ec 10          	sub    $0x10,%rsp
   1a525:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1a529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a52d:	48 89 c6             	mov    %rax,%rsi
   1a530:	bf 08 00 00 00       	mov    $0x8,%edi
   1a535:	e8 65 b6 fe ff       	call   5b9f <_ZnwmPv>
   1a53a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1a541:	90                   	nop
   1a542:	c9                   	leave
   1a543:	c3                   	ret

000000000001a544 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1a544:	55                   	push   %rbp
   1a545:	48 89 e5             	mov    %rsp,%rbp
   1a548:	48 83 ec 20          	sub    $0x20,%rsp
   1a54c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a550:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a554:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1a558:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1a55c:	48 89 c7             	mov    %rax,%rdi
   1a55f:	e8 f7 03 00 00       	call   1a95b <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1a564:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a568:	48 89 c7             	mov    %rax,%rdi
   1a56b:	e8 41 b6 fe ff       	call   5bb1 <_ZSt17__size_to_integerm>
   1a570:	48 89 c1             	mov    %rax,%rcx
   1a573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a577:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a57b:	48 89 ce             	mov    %rcx,%rsi
   1a57e:	48 89 c7             	mov    %rax,%rdi
   1a581:	e8 e0 03 00 00       	call   1a966 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1a586:	c9                   	leave
   1a587:	c3                   	ret

000000000001a588 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a588:	55                   	push   %rbp
   1a589:	48 89 e5             	mov    %rsp,%rbp
   1a58c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a590:	90                   	nop
   1a591:	5d                   	pop    %rbp
   1a592:	c3                   	ret

000000000001a593 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a593:	55                   	push   %rbp
   1a594:	48 89 e5             	mov    %rsp,%rbp
   1a597:	48 83 ec 20          	sub    $0x20,%rsp
   1a59b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a59f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a5a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a5a7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a5ac:	75 06                	jne    1a5b4 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5b2:	eb 3a                	jmp    1a5ee <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a5b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a5b8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5bf:	00 
   1a5c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5c4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a5c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a5cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5d0:	48 89 ce             	mov    %rcx,%rsi
   1a5d3:	48 89 c7             	mov    %rax,%rdi
   1a5d6:	e8 e8 03 00 00       	call   1a9c3 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a5db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a5df:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5e6:	00 
   1a5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5eb:	48 01 d0             	add    %rdx,%rax
    }
   1a5ee:	c9                   	leave
   1a5ef:	c3                   	ret

000000000001a5f0 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   1a5f0:	55                   	push   %rbp
   1a5f1:	48 89 e5             	mov    %rsp,%rbp
   1a5f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a5f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a5fc:	5d                   	pop    %rbp
   1a5fd:	c3                   	ret

000000000001a5fe <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a5fe:	55                   	push   %rbp
   1a5ff:	48 89 e5             	mov    %rsp,%rbp
   1a602:	41 54                	push   %r12
   1a604:	53                   	push   %rbx
   1a605:	48 83 ec 20          	sub    $0x20,%rsp
   1a609:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a60d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a611:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a615:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a619:	48 89 c7             	mov    %rax,%rdi
   1a61c:	e8 02 ee ff ff       	call   19423 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1a621:	49 89 c4             	mov    %rax,%r12
   1a624:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a628:	48 89 c7             	mov    %rax,%rdi
   1a62b:	e8 c1 03 00 00       	call   1a9f1 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1a630:	48 89 c3             	mov    %rax,%rbx
   1a633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a637:	48 89 c7             	mov    %rax,%rdi
   1a63a:	e8 b2 03 00 00       	call   1a9f1 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1a63f:	4c 89 e2             	mov    %r12,%rdx
   1a642:	48 89 de             	mov    %rbx,%rsi
   1a645:	48 89 c7             	mov    %rax,%rdi
   1a648:	e8 b2 03 00 00       	call   1a9ff <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1a64d:	48 89 c2             	mov    %rax,%rdx
   1a650:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a654:	48 89 d6             	mov    %rdx,%rsi
   1a657:	48 89 c7             	mov    %rax,%rdi
   1a65a:	e8 cd 03 00 00       	call   1aa2c <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   1a65f:	48 83 c4 20          	add    $0x20,%rsp
   1a663:	5b                   	pop    %rbx
   1a664:	41 5c                	pop    %r12
   1a666:	5d                   	pop    %rbp
   1a667:	c3                   	ret

000000000001a668 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a668:	55                   	push   %rbp
   1a669:	48 89 e5             	mov    %rsp,%rbp
   1a66c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a670:	90                   	nop
   1a671:	5d                   	pop    %rbp
   1a672:	c3                   	ret

000000000001a673 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a673:	55                   	push   %rbp
   1a674:	48 89 e5             	mov    %rsp,%rbp
   1a677:	48 83 ec 20          	sub    $0x20,%rsp
   1a67b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a67f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a683:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a687:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a68c:	75 06                	jne    1a694 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a68e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a692:	eb 3a                	jmp    1a6ce <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a694:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a698:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a69f:	00 
   1a6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6a4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a6a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a6ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6b0:	48 89 ce             	mov    %rcx,%rsi
   1a6b3:	48 89 c7             	mov    %rax,%rdi
   1a6b6:	e8 83 03 00 00       	call   1aa3e <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a6bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a6bf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a6c6:	00 
   1a6c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6cb:	48 01 d0             	add    %rdx,%rax
    }
   1a6ce:	c9                   	leave
   1a6cf:	c3                   	ret

000000000001a6d0 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a6d0:	55                   	push   %rbp
   1a6d1:	48 89 e5             	mov    %rsp,%rbp
   1a6d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a6d8:	90                   	nop
   1a6d9:	5d                   	pop    %rbp
   1a6da:	c3                   	ret

000000000001a6db <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a6db:	55                   	push   %rbp
   1a6dc:	48 89 e5             	mov    %rsp,%rbp
   1a6df:	48 83 ec 20          	sub    $0x20,%rsp
   1a6e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a6eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a6ef:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a6f4:	75 06                	jne    1a6fc <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a6f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6fa:	eb 3a                	jmp    1a736 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a6fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a700:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a707:	00 
   1a708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a70c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a710:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a718:	48 89 ce             	mov    %rcx,%rsi
   1a71b:	48 89 c7             	mov    %rax,%rdi
   1a71e:	e8 49 03 00 00       	call   1aa6c <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a723:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a727:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a72e:	00 
   1a72f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a733:	48 01 d0             	add    %rdx,%rax
    }
   1a736:	c9                   	leave
   1a737:	c3                   	ret

000000000001a738 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   1a738:	55                   	push   %rbp
   1a739:	48 89 e5             	mov    %rsp,%rbp
   1a73c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a744:	5d                   	pop    %rbp
   1a745:	c3                   	ret

000000000001a746 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a746:	55                   	push   %rbp
   1a747:	48 89 e5             	mov    %rsp,%rbp
   1a74a:	41 54                	push   %r12
   1a74c:	53                   	push   %rbx
   1a74d:	48 83 ec 20          	sub    $0x20,%rsp
   1a751:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a755:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a759:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a75d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a761:	48 89 c7             	mov    %rax,%rdi
   1a764:	e8 5a f1 ff ff       	call   198c3 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1a769:	49 89 c4             	mov    %rax,%r12
   1a76c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a770:	48 89 c7             	mov    %rax,%rdi
   1a773:	e8 22 03 00 00       	call   1aa9a <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1a778:	48 89 c3             	mov    %rax,%rbx
   1a77b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a77f:	48 89 c7             	mov    %rax,%rdi
   1a782:	e8 13 03 00 00       	call   1aa9a <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   1a787:	4c 89 e2             	mov    %r12,%rdx
   1a78a:	48 89 de             	mov    %rbx,%rsi
   1a78d:	48 89 c7             	mov    %rax,%rdi
   1a790:	e8 13 03 00 00       	call   1aaa8 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1a795:	48 89 c2             	mov    %rax,%rdx
   1a798:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a79c:	48 89 d6             	mov    %rdx,%rsi
   1a79f:	48 89 c7             	mov    %rax,%rdi
   1a7a2:	e8 2e 03 00 00       	call   1aad5 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   1a7a7:	48 83 c4 20          	add    $0x20,%rsp
   1a7ab:	5b                   	pop    %rbx
   1a7ac:	41 5c                	pop    %r12
   1a7ae:	5d                   	pop    %rbp
   1a7af:	c3                   	ret

000000000001a7b0 <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   1a7b0:	55                   	push   %rbp
   1a7b1:	48 89 e5             	mov    %rsp,%rbp
   1a7b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a7b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7bc:	5d                   	pop    %rbp
   1a7bd:	c3                   	ret

000000000001a7be <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1a7be:	55                   	push   %rbp
   1a7bf:	48 89 e5             	mov    %rsp,%rbp
   1a7c2:	41 54                	push   %r12
   1a7c4:	53                   	push   %rbx
   1a7c5:	48 83 ec 20          	sub    $0x20,%rsp
   1a7c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a7cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a7d1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1a7d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a7d9:	48 89 c7             	mov    %rax,%rdi
   1a7dc:	e8 14 03 00 00       	call   1aaf5 <_ZSt12__niter_baseIPjET_S1_>
   1a7e1:	49 89 c4             	mov    %rax,%r12
   1a7e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a7e8:	48 89 c7             	mov    %rax,%rdi
   1a7eb:	e8 f7 02 00 00       	call   1aae7 <_ZSt12__niter_baseIPKjET_S2_>
   1a7f0:	48 89 c3             	mov    %rax,%rbx
   1a7f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7f7:	48 89 c7             	mov    %rax,%rdi
   1a7fa:	e8 e8 02 00 00       	call   1aae7 <_ZSt12__niter_baseIPKjET_S2_>
   1a7ff:	4c 89 e2             	mov    %r12,%rdx
   1a802:	48 89 de             	mov    %rbx,%rsi
   1a805:	48 89 c7             	mov    %rax,%rdi
   1a808:	e8 f6 02 00 00       	call   1ab03 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   1a80d:	48 89 c2             	mov    %rax,%rdx
   1a810:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a814:	48 89 d6             	mov    %rdx,%rsi
   1a817:	48 89 c7             	mov    %rax,%rdi
   1a81a:	e8 11 03 00 00       	call   1ab30 <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   1a81f:	48 83 c4 20          	add    $0x20,%rsp
   1a823:	5b                   	pop    %rbx
   1a824:	41 5c                	pop    %r12
   1a826:	5d                   	pop    %rbp
   1a827:	c3                   	ret

000000000001a828 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1a828:	55                   	push   %rbp
   1a829:	48 89 e5             	mov    %rsp,%rbp
   1a82c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a834:	5d                   	pop    %rbp
   1a835:	c3                   	ret

000000000001a836 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a836:	55                   	push   %rbp
   1a837:	48 89 e5             	mov    %rsp,%rbp
   1a83a:	48 83 ec 20          	sub    $0x20,%rsp
   1a83e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a846:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a84a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a84e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a856:	48 89 ce             	mov    %rcx,%rsi
   1a859:	48 89 c7             	mov    %rax,%rdi
   1a85c:	e8 e1 02 00 00       	call   1ab42 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1a861:	c9                   	leave
   1a862:	c3                   	ret

000000000001a863 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a863:	55                   	push   %rbp
   1a864:	48 89 e5             	mov    %rsp,%rbp
   1a867:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a86b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a86f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a873:	5d                   	pop    %rbp
   1a874:	c3                   	ret
   1a875:	90                   	nop

000000000001a876 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1a876:	55                   	push   %rbp
   1a877:	48 89 e5             	mov    %rsp,%rbp
   1a87a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1a87e:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1a885:	1c c7 01 
      }
   1a888:	5d                   	pop    %rbp
   1a889:	c3                   	ret

000000000001a88a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   1a88a:	55                   	push   %rbp
   1a88b:	48 89 e5             	mov    %rsp,%rbp
   1a88e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a892:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1a896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a89a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a89e:	48 8b 12             	mov    (%rdx),%rdx
   1a8a1:	48 89 10             	mov    %rdx,(%rax)
      { }
   1a8a4:	90                   	nop
   1a8a5:	5d                   	pop    %rbp
   1a8a6:	c3                   	ret
   1a8a7:	90                   	nop

000000000001a8a8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1a8a8:	55                   	push   %rbp
   1a8a9:	48 89 e5             	mov    %rsp,%rbp
   1a8ac:	48 83 ec 20          	sub    $0x20,%rsp
   1a8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a8b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1a8b8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1a8bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a8c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a8c4:	48 89 ce             	mov    %rcx,%rsi
   1a8c7:	48 89 c7             	mov    %rax,%rdi
   1a8ca:	e8 a1 02 00 00       	call   1ab70 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1a8cf:	90                   	nop
   1a8d0:	c9                   	leave
   1a8d1:	c3                   	ret

000000000001a8d2 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a8d2:	55                   	push   %rbp
   1a8d3:	48 89 e5             	mov    %rsp,%rbp
   1a8d6:	48 83 ec 20          	sub    $0x20,%rsp
   1a8da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a8de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a8e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a8e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a8ea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a8f2:	48 89 ce             	mov    %rcx,%rsi
   1a8f5:	48 89 c7             	mov    %rax,%rdi
   1a8f8:	e8 bd 02 00 00       	call   1abba <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a8fd:	90                   	nop
   1a8fe:	c9                   	leave
   1a8ff:	c3                   	ret

000000000001a900 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   1a900:	55                   	push   %rbp
   1a901:	48 89 e5             	mov    %rsp,%rbp
   1a904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a90c:	5d                   	pop    %rbp
   1a90d:	c3                   	ret

000000000001a90e <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   1a90e:	55                   	push   %rbp
   1a90f:	48 89 e5             	mov    %rsp,%rbp
   1a912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a91a:	5d                   	pop    %rbp
   1a91b:	c3                   	ret

000000000001a91c <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a91c:	55                   	push   %rbp
   1a91d:	48 89 e5             	mov    %rsp,%rbp
   1a920:	48 83 ec 20          	sub    $0x20,%rsp
   1a924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a928:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a92c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1a930:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a934:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a93c:	48 89 ce             	mov    %rcx,%rsi
   1a93f:	48 89 c7             	mov    %rax,%rdi
   1a942:	e8 ae 02 00 00       	call   1abf5 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1a947:	c9                   	leave
   1a948:	c3                   	ret

000000000001a949 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1a949:	55                   	push   %rbp
   1a94a:	48 89 e5             	mov    %rsp,%rbp
   1a94d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a951:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1a955:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a959:	5d                   	pop    %rbp
   1a95a:	c3                   	ret

000000000001a95b <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1a95b:	55                   	push   %rbp
   1a95c:	48 89 e5             	mov    %rsp,%rbp
   1a95f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1a963:	90                   	nop
   1a964:	5d                   	pop    %rbp
   1a965:	c3                   	ret

000000000001a966 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1a966:	55                   	push   %rbp
   1a967:	48 89 e5             	mov    %rsp,%rbp
   1a96a:	48 83 ec 20          	sub    $0x20,%rsp
   1a96e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a972:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a976:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1a97a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a97f:	75 06                	jne    1a987 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1a981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a985:	eb 3a                	jmp    1a9c1 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1a987:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a98b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a992:	00 
   1a993:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a997:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a99b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9a3:	48 89 ce             	mov    %rcx,%rsi
   1a9a6:	48 89 c7             	mov    %rax,%rdi
   1a9a9:	e8 74 02 00 00       	call   1ac22 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1a9ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a9b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9b9:	00 
   1a9ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9be:	48 01 d0             	add    %rdx,%rax
    }
   1a9c1:	c9                   	leave
   1a9c2:	c3                   	ret

000000000001a9c3 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1a9c3:	55                   	push   %rbp
   1a9c4:	48 89 e5             	mov    %rsp,%rbp
   1a9c7:	48 83 ec 20          	sub    $0x20,%rsp
   1a9cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a9cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a9d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1a9d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a9db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9e3:	48 89 ce             	mov    %rcx,%rsi
   1a9e6:	48 89 c7             	mov    %rax,%rdi
   1a9e9:	e8 62 02 00 00       	call   1ac50 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1a9ee:	90                   	nop
   1a9ef:	c9                   	leave
   1a9f0:	c3                   	ret

000000000001a9f1 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   1a9f1:	55                   	push   %rbp
   1a9f2:	48 89 e5             	mov    %rsp,%rbp
   1a9f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1a9f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a9fd:	5d                   	pop    %rbp
   1a9fe:	c3                   	ret

000000000001a9ff <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1a9ff:	55                   	push   %rbp
   1aa00:	48 89 e5             	mov    %rsp,%rbp
   1aa03:	48 83 ec 20          	sub    $0x20,%rsp
   1aa07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aa0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1aa13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aa17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aa1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa1f:	48 89 ce             	mov    %rcx,%rsi
   1aa22:	48 89 c7             	mov    %rax,%rdi
   1aa25:	e8 61 02 00 00       	call   1ac8b <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1aa2a:	c9                   	leave
   1aa2b:	c3                   	ret

000000000001aa2c <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1aa2c:	55                   	push   %rbp
   1aa2d:	48 89 e5             	mov    %rsp,%rbp
   1aa30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1aa38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aa3c:	5d                   	pop    %rbp
   1aa3d:	c3                   	ret

000000000001aa3e <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1aa3e:	55                   	push   %rbp
   1aa3f:	48 89 e5             	mov    %rsp,%rbp
   1aa42:	48 83 ec 20          	sub    $0x20,%rsp
   1aa46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aa4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1aa52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aa56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aa5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa5e:	48 89 ce             	mov    %rcx,%rsi
   1aa61:	48 89 c7             	mov    %rax,%rdi
   1aa64:	e8 4f 02 00 00       	call   1acb8 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1aa69:	90                   	nop
   1aa6a:	c9                   	leave
   1aa6b:	c3                   	ret

000000000001aa6c <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1aa6c:	55                   	push   %rbp
   1aa6d:	48 89 e5             	mov    %rsp,%rbp
   1aa70:	48 83 ec 20          	sub    $0x20,%rsp
   1aa74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aa7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1aa80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aa84:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aa88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa8c:	48 89 ce             	mov    %rcx,%rsi
   1aa8f:	48 89 c7             	mov    %rax,%rdi
   1aa92:	e8 5c 02 00 00       	call   1acf3 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1aa97:	90                   	nop
   1aa98:	c9                   	leave
   1aa99:	c3                   	ret

000000000001aa9a <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   1aa9a:	55                   	push   %rbp
   1aa9b:	48 89 e5             	mov    %rsp,%rbp
   1aa9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1aaa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aaa6:	5d                   	pop    %rbp
   1aaa7:	c3                   	ret

000000000001aaa8 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1aaa8:	55                   	push   %rbp
   1aaa9:	48 89 e5             	mov    %rsp,%rbp
   1aaac:	48 83 ec 20          	sub    $0x20,%rsp
   1aab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aab4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aab8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1aabc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aac0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aac8:	48 89 ce             	mov    %rcx,%rsi
   1aacb:	48 89 c7             	mov    %rax,%rdi
   1aace:	e8 5b 02 00 00       	call   1ad2e <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   1aad3:	c9                   	leave
   1aad4:	c3                   	ret

000000000001aad5 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1aad5:	55                   	push   %rbp
   1aad6:	48 89 e5             	mov    %rsp,%rbp
   1aad9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aadd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1aae1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aae5:	5d                   	pop    %rbp
   1aae6:	c3                   	ret

000000000001aae7 <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   1aae7:	55                   	push   %rbp
   1aae8:	48 89 e5             	mov    %rsp,%rbp
   1aaeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1aaef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aaf3:	5d                   	pop    %rbp
   1aaf4:	c3                   	ret

000000000001aaf5 <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   1aaf5:	55                   	push   %rbp
   1aaf6:	48 89 e5             	mov    %rsp,%rbp
   1aaf9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1aafd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab01:	5d                   	pop    %rbp
   1ab02:	c3                   	ret

000000000001ab03 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1ab03:	55                   	push   %rbp
   1ab04:	48 89 e5             	mov    %rsp,%rbp
   1ab07:	48 83 ec 20          	sub    $0x20,%rsp
   1ab0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1ab17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ab1b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ab1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab23:	48 89 ce             	mov    %rcx,%rsi
   1ab26:	48 89 c7             	mov    %rax,%rdi
   1ab29:	e8 2d 02 00 00       	call   1ad5b <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   1ab2e:	c9                   	leave
   1ab2f:	c3                   	ret

000000000001ab30 <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1ab30:	55                   	push   %rbp
   1ab31:	48 89 e5             	mov    %rsp,%rbp
   1ab34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1ab3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab40:	5d                   	pop    %rbp
   1ab41:	c3                   	ret

000000000001ab42 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1ab42:	55                   	push   %rbp
   1ab43:	48 89 e5             	mov    %rsp,%rbp
   1ab46:	48 83 ec 20          	sub    $0x20,%rsp
   1ab4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1ab56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ab5a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ab5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab62:	48 89 ce             	mov    %rcx,%rsi
   1ab65:	48 89 c7             	mov    %rax,%rdi
   1ab68:	e8 1b 02 00 00       	call   1ad88 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1ab6d:	c9                   	leave
   1ab6e:	c3                   	ret
   1ab6f:	90                   	nop

000000000001ab70 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1ab70:	55                   	push   %rbp
   1ab71:	48 89 e5             	mov    %rsp,%rbp
   1ab74:	53                   	push   %rbx
   1ab75:	48 83 ec 28          	sub    $0x28,%rsp
   1ab79:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ab7d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ab81:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1ab85:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1ab89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ab8d:	48 89 c7             	mov    %rax,%rdi
   1ab90:	e8 52 02 00 00       	call   1ade7 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1ab95:	48 89 c7             	mov    %rax,%rdi
   1ab98:	e8 64 02 00 00       	call   1ae01 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1ab9d:	48 89 c6             	mov    %rax,%rsi
   1aba0:	48 89 df             	mov    %rbx,%rdi
   1aba3:	e8 a8 96 fe ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1aba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1abac:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   1abb3:	90                   	nop
   1abb4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1abb8:	c9                   	leave
   1abb9:	c3                   	ret

000000000001abba <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1abba:	55                   	push   %rbp
   1abbb:	48 89 e5             	mov    %rsp,%rbp
   1abbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1abc2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1abc6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1abca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1abce:	48 8b 00             	mov    (%rax),%rax
   1abd1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1abd5:	eb 10                	jmp    1abe7 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1abd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1abdb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1abdf:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1abe2:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1abe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1abeb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1abef:	75 e6                	jne    1abd7 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1abf1:	90                   	nop
   1abf2:	90                   	nop
   1abf3:	5d                   	pop    %rbp
   1abf4:	c3                   	ret

000000000001abf5 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1abf5:	55                   	push   %rbp
   1abf6:	48 89 e5             	mov    %rsp,%rbp
   1abf9:	48 83 ec 20          	sub    $0x20,%rsp
   1abfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ac05:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1ac09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ac0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ac11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac15:	48 89 ce             	mov    %rcx,%rsi
   1ac18:	48 89 c7             	mov    %rax,%rdi
   1ac1b:	e8 ef 01 00 00       	call   1ae0f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   1ac20:	c9                   	leave
   1ac21:	c3                   	ret

000000000001ac22 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1ac22:	55                   	push   %rbp
   1ac23:	48 89 e5             	mov    %rsp,%rbp
   1ac26:	48 83 ec 20          	sub    $0x20,%rsp
   1ac2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ac32:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1ac36:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ac3a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ac3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac42:	48 89 ce             	mov    %rcx,%rsi
   1ac45:	48 89 c7             	mov    %rax,%rdi
   1ac48:	e8 44 02 00 00       	call   1ae91 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1ac4d:	90                   	nop
   1ac4e:	c9                   	leave
   1ac4f:	c3                   	ret

000000000001ac50 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1ac50:	55                   	push   %rbp
   1ac51:	48 89 e5             	mov    %rsp,%rbp
   1ac54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ac58:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ac5c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1ac60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ac64:	48 8b 00             	mov    (%rax),%rax
   1ac67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1ac6b:	eb 10                	jmp    1ac7d <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1ac6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ac71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ac75:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1ac78:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1ac7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ac81:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1ac85:	75 e6                	jne    1ac6d <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1ac87:	90                   	nop
   1ac88:	90                   	nop
   1ac89:	5d                   	pop    %rbp
   1ac8a:	c3                   	ret

000000000001ac8b <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1ac8b:	55                   	push   %rbp
   1ac8c:	48 89 e5             	mov    %rsp,%rbp
   1ac8f:	48 83 ec 20          	sub    $0x20,%rsp
   1ac93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ac9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1ac9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aca3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1acab:	48 89 ce             	mov    %rcx,%rsi
   1acae:	48 89 c7             	mov    %rax,%rdi
   1acb1:	e8 16 02 00 00       	call   1aecc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   1acb6:	c9                   	leave
   1acb7:	c3                   	ret

000000000001acb8 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1acb8:	55                   	push   %rbp
   1acb9:	48 89 e5             	mov    %rsp,%rbp
   1acbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1acc0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1acc4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1acc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1accc:	48 8b 00             	mov    (%rax),%rax
   1accf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1acd3:	eb 10                	jmp    1ace5 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1acd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1acd9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1acdd:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1ace0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1ace5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ace9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1aced:	75 e6                	jne    1acd5 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1acef:	90                   	nop
   1acf0:	90                   	nop
   1acf1:	5d                   	pop    %rbp
   1acf2:	c3                   	ret

000000000001acf3 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1acf3:	55                   	push   %rbp
   1acf4:	48 89 e5             	mov    %rsp,%rbp
   1acf7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1acfb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1acff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1ad03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ad07:	48 8b 00             	mov    (%rax),%rax
   1ad0a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1ad0e:	eb 10                	jmp    1ad20 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1ad10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ad18:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1ad1b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1ad20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ad24:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1ad28:	75 e6                	jne    1ad10 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1ad2a:	90                   	nop
   1ad2b:	90                   	nop
   1ad2c:	5d                   	pop    %rbp
   1ad2d:	c3                   	ret

000000000001ad2e <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1ad2e:	55                   	push   %rbp
   1ad2f:	48 89 e5             	mov    %rsp,%rbp
   1ad32:	48 83 ec 20          	sub    $0x20,%rsp
   1ad36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ad3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ad3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1ad42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ad46:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ad4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad4e:	48 89 ce             	mov    %rcx,%rsi
   1ad51:	48 89 c7             	mov    %rax,%rdi
   1ad54:	e8 d2 01 00 00       	call   1af2b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   1ad59:	c9                   	leave
   1ad5a:	c3                   	ret

000000000001ad5b <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1ad5b:	55                   	push   %rbp
   1ad5c:	48 89 e5             	mov    %rsp,%rbp
   1ad5f:	48 83 ec 20          	sub    $0x20,%rsp
   1ad63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ad67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ad6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1ad6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ad73:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ad77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad7b:	48 89 ce             	mov    %rcx,%rsi
   1ad7e:	48 89 c7             	mov    %rax,%rdi
   1ad81:	e8 04 02 00 00       	call   1af8a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   1ad86:	c9                   	leave
   1ad87:	c3                   	ret

000000000001ad88 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1ad88:	55                   	push   %rbp
   1ad89:	48 89 e5             	mov    %rsp,%rbp
   1ad8c:	48 83 ec 30          	sub    $0x30,%rsp
   1ad90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ad94:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ad98:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1ad9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ada0:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1ada4:	48 c1 f8 03          	sar    $0x3,%rax
   1ada8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1adac:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1adb1:	74 1f                	je     1add2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1adb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1adb7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1adbe:	00 
   1adbf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1adc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1adc7:	48 89 ce             	mov    %rcx,%rsi
   1adca:	48 89 c7             	mov    %rax,%rdi
   1adcd:	e8 3e 9a fe ff       	call   4810 <memmove@plt>
	  return __result + _Num;
   1add2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1add6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1addd:	00 
   1adde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ade2:	48 01 d0             	add    %rdx,%rax
	}
   1ade5:	c9                   	leave
   1ade6:	c3                   	ret

000000000001ade7 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   1ade7:	55                   	push   %rbp
   1ade8:	48 89 e5             	mov    %rsp,%rbp
   1adeb:	48 83 ec 10          	sub    $0x10,%rsp
   1adef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1adf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1adf7:	48 89 c7             	mov    %rax,%rdi
   1adfa:	e8 ea 01 00 00       	call   1afe9 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1adff:	c9                   	leave
   1ae00:	c3                   	ret

000000000001ae01 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ae01:	55                   	push   %rbp
   1ae02:	48 89 e5             	mov    %rsp,%rbp
   1ae05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ae09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae0d:	5d                   	pop    %rbp
   1ae0e:	c3                   	ret

000000000001ae0f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1ae0f:	55                   	push   %rbp
   1ae10:	48 89 e5             	mov    %rsp,%rbp
   1ae13:	48 83 ec 30          	sub    $0x30,%rsp
   1ae17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ae1b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ae1f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1ae23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae27:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1ae2b:	48 c1 f8 04          	sar    $0x4,%rax
   1ae2f:	48 89 c2             	mov    %rax,%rdx
   1ae32:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1ae39:	e3 38 8e 
   1ae3c:	48 0f af c2          	imul   %rdx,%rax
   1ae40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1ae44:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1ae49:	74 28                	je     1ae73 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1ae4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ae4f:	48 89 d0             	mov    %rdx,%rax
   1ae52:	48 c1 e0 03          	shl    $0x3,%rax
   1ae56:	48 01 d0             	add    %rdx,%rax
   1ae59:	48 c1 e0 04          	shl    $0x4,%rax
   1ae5d:	48 89 c2             	mov    %rax,%rdx
   1ae60:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1ae64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ae68:	48 89 ce             	mov    %rcx,%rsi
   1ae6b:	48 89 c7             	mov    %rax,%rdi
   1ae6e:	e8 9d 99 fe ff       	call   4810 <memmove@plt>
	  return __result + _Num;
   1ae73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ae77:	48 89 d0             	mov    %rdx,%rax
   1ae7a:	48 c1 e0 03          	shl    $0x3,%rax
   1ae7e:	48 01 d0             	add    %rdx,%rax
   1ae81:	48 c1 e0 04          	shl    $0x4,%rax
   1ae85:	48 89 c2             	mov    %rax,%rdx
   1ae88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ae8c:	48 01 d0             	add    %rdx,%rax
	}
   1ae8f:	c9                   	leave
   1ae90:	c3                   	ret

000000000001ae91 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1ae91:	55                   	push   %rbp
   1ae92:	48 89 e5             	mov    %rsp,%rbp
   1ae95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ae99:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ae9d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1aea1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aea5:	48 8b 00             	mov    (%rax),%rax
   1aea8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1aeac:	eb 10                	jmp    1aebe <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1aeae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aeb2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1aeb6:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1aeb9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1aebe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aec2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1aec6:	75 e6                	jne    1aeae <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1aec8:	90                   	nop
   1aec9:	90                   	nop
   1aeca:	5d                   	pop    %rbp
   1aecb:	c3                   	ret

000000000001aecc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1aecc:	55                   	push   %rbp
   1aecd:	48 89 e5             	mov    %rsp,%rbp
   1aed0:	48 83 ec 30          	sub    $0x30,%rsp
   1aed4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aed8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1aedc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1aee0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aee4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1aee8:	48 c1 f8 03          	sar    $0x3,%rax
   1aeec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1aef0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1aef5:	74 1f                	je     1af16 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1aef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aefb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1af02:	00 
   1af03:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1af07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1af0b:	48 89 ce             	mov    %rcx,%rsi
   1af0e:	48 89 c7             	mov    %rax,%rdi
   1af11:	e8 fa 98 fe ff       	call   4810 <memmove@plt>
	  return __result + _Num;
   1af16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af1a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1af21:	00 
   1af22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1af26:	48 01 d0             	add    %rdx,%rax
	}
   1af29:	c9                   	leave
   1af2a:	c3                   	ret

000000000001af2b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1af2b:	55                   	push   %rbp
   1af2c:	48 89 e5             	mov    %rsp,%rbp
   1af2f:	48 83 ec 30          	sub    $0x30,%rsp
   1af33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1af37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1af3b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1af3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af43:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1af47:	48 c1 f8 03          	sar    $0x3,%rax
   1af4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1af4f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1af54:	74 1f                	je     1af75 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1af56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af5a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1af61:	00 
   1af62:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1af66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1af6a:	48 89 ce             	mov    %rcx,%rsi
   1af6d:	48 89 c7             	mov    %rax,%rdi
   1af70:	e8 9b 98 fe ff       	call   4810 <memmove@plt>
	  return __result + _Num;
   1af75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af79:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1af80:	00 
   1af81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1af85:	48 01 d0             	add    %rdx,%rax
	}
   1af88:	c9                   	leave
   1af89:	c3                   	ret

000000000001af8a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1af8a:	55                   	push   %rbp
   1af8b:	48 89 e5             	mov    %rsp,%rbp
   1af8e:	48 83 ec 30          	sub    $0x30,%rsp
   1af92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1af96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1af9a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1af9e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1afa2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1afa6:	48 c1 f8 02          	sar    $0x2,%rax
   1afaa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1afae:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1afb3:	74 1f                	je     1afd4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1afb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afb9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1afc0:	00 
   1afc1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1afc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1afc9:	48 89 ce             	mov    %rcx,%rsi
   1afcc:	48 89 c7             	mov    %rax,%rdi
   1afcf:	e8 3c 98 fe ff       	call   4810 <memmove@plt>
	  return __result + _Num;
   1afd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1afd8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1afdf:	00 
   1afe0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1afe4:	48 01 d0             	add    %rdx,%rax
	}
   1afe7:	c9                   	leave
   1afe8:	c3                   	ret

000000000001afe9 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1afe9:	55                   	push   %rbp
   1afea:	48 89 e5             	mov    %rsp,%rbp
   1afed:	48 83 ec 10          	sub    $0x10,%rsp
   1aff1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1aff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aff9:	48 89 c7             	mov    %rax,%rdi
   1affc:	e8 02 00 00 00       	call   1b003 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1b001:	c9                   	leave
   1b002:	c3                   	ret

000000000001b003 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1b003:	55                   	push   %rbp
   1b004:	48 89 e5             	mov    %rsp,%rbp
   1b007:	48 83 ec 10          	sub    $0x10,%rsp
   1b00b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b00f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b013:	48 89 c7             	mov    %rax,%rdi
   1b016:	e8 02 00 00 00       	call   1b01d <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   1b01b:	c9                   	leave
   1b01c:	c3                   	ret

000000000001b01d <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   1b01d:	55                   	push   %rbp
   1b01e:	48 89 e5             	mov    %rsp,%rbp
   1b021:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b029:	48 8b 00             	mov    (%rax),%rax
   1b02c:	5d                   	pop    %rbp
   1b02d:	c3                   	ret

000000000001b02e <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   1b02e:	55                   	push   %rbp
   1b02f:	48 89 e5             	mov    %rsp,%rbp
   1b032:	48 83 ec 10          	sub    $0x10,%rsp
   1b036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b03a:	48 8d 15 7f 4c 01 00 	lea    0x14c7f(%rip),%rdx        # 2fcc0 <_ZTVSt19bad_optional_access+0x10>
   1b041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b045:	48 89 10             	mov    %rdx,(%rax)
   1b048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b04c:	48 89 c7             	mov    %rax,%rdi
   1b04f:	e8 9c 98 fe ff       	call   48f0 <_ZNSt9exceptionD2Ev@plt>
   1b054:	90                   	nop
   1b055:	c9                   	leave
   1b056:	c3                   	ret
   1b057:	90                   	nop

000000000001b058 <_ZNSt19bad_optional_accessD0Ev>:
   1b058:	55                   	push   %rbp
   1b059:	48 89 e5             	mov    %rsp,%rbp
   1b05c:	48 83 ec 10          	sub    $0x10,%rsp
   1b060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b068:	48 89 c7             	mov    %rax,%rdi
   1b06b:	e8 be ff ff ff       	call   1b02e <_ZNSt19bad_optional_accessD1Ev>
   1b070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b074:	be 08 00 00 00       	mov    $0x8,%esi
   1b079:	48 89 c7             	mov    %rax,%rdi
   1b07c:	e8 ff 93 fe ff       	call   4480 <_ZdlPvm@plt>
   1b081:	c9                   	leave
   1b082:	c3                   	ret

Disassembly of section .fini:

000000000001b084 <_fini>:
   1b084:	48 83 ec 08          	sub    $0x8,%rsp
   1b088:	48 83 c4 08          	add    $0x8,%rsp
   1b08c:	c3                   	ret
