
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 8f 02 00 	mov    0x28fad(%rip),%rax        # 2cfb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 8f 02 00    	push   0x28fca(%rip)        # 2cff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 8f 02 00    	jmp    *0x28fcc(%rip)        # 2cff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 8f 02 00    	jmp    *0x28fca(%rip)        # 2d000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 8f 02 00    	jmp    *0x28fc2(%rip)        # 2d008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba 8f 02 00    	jmp    *0x28fba(%rip)        # 2d010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 8f 02 00    	jmp    *0x28fb2(%rip)        # 2d018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa 8f 02 00    	jmp    *0x28faa(%rip)        # 2d020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 8f 02 00    	jmp    *0x28fa2(%rip)        # 2d028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4090:	ff 25 9a 8f 02 00    	jmp    *0x28f9a(%rip)        # 2d030 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSolsEm@plt>:
    40a0:	ff 25 92 8f 02 00    	jmp    *0x28f92(%rip)        # 2d038 <_ZNSolsEm@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <vkDeviceWaitIdle@plt>:
    40b0:	ff 25 8a 8f 02 00    	jmp    *0x28f8a(%rip)        # 2d040 <vkDeviceWaitIdle@Base>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40c0:	ff 25 82 8f 02 00    	jmp    *0x28f82(%rip)        # 2d048 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <vkDestroySwapchainKHR@plt>:
    40d0:	ff 25 7a 8f 02 00    	jmp    *0x28f7a(%rip)        # 2d050 <vkDestroySwapchainKHR@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySemaphore@plt>:
    40e0:	ff 25 72 8f 02 00    	jmp    *0x28f72(%rip)        # 2d058 <vkDestroySemaphore@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <glfwDestroyWindow@plt>:
    40f0:	ff 25 6a 8f 02 00    	jmp    *0x28f6a(%rip)        # 2d060 <glfwDestroyWindow@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZSt17__throw_bad_allocv@plt>:
    4100:	ff 25 62 8f 02 00    	jmp    *0x28f62(%rip)        # 2d068 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4110:	ff 25 5a 8f 02 00    	jmp    *0x28f5a(%rip)        # 2d070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <_ZNSt13runtime_errorC1EPKc@plt>:
    4120:	ff 25 52 8f 02 00    	jmp    *0x28f52(%rip)        # 2d078 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkGetPhysicalDeviceProperties@plt>:
    4130:	ff 25 4a 8f 02 00    	jmp    *0x28f4a(%rip)        # 2d080 <vkGetPhysicalDeviceProperties@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <__cxa_begin_catch@plt>:
    4140:	ff 25 42 8f 02 00    	jmp    *0x28f42(%rip)        # 2d088 <__cxa_begin_catch@CXXABI_1.3>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkAcquireNextImageKHR@plt>:
    4150:	ff 25 3a 8f 02 00    	jmp    *0x28f3a(%rip)        # 2d090 <vkAcquireNextImageKHR@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkCreateCommandPool@plt>:
    4160:	ff 25 32 8f 02 00    	jmp    *0x28f32(%rip)        # 2d098 <vkCreateCommandPool@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <strlen@plt>:
    4170:	ff 25 2a 8f 02 00    	jmp    *0x28f2a(%rip)        # 2d0a0 <strlen@GLIBC_2.2.5>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <memcmp@plt>:
    4180:	ff 25 22 8f 02 00    	jmp    *0x28f22(%rip)        # 2d0a8 <memcmp@GLIBC_2.2.5>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkCreateGraphicsPipelines@plt>:
    4190:	ff 25 1a 8f 02 00    	jmp    *0x28f1a(%rip)        # 2d0b0 <vkCreateGraphicsPipelines@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <__cxa_allocate_exception@plt>:
    41a0:	ff 25 12 8f 02 00    	jmp    *0x28f12(%rip)        # 2d0b8 <__cxa_allocate_exception@CXXABI_1.3>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <glfwSetWindowUserPointer@plt>:
    41b0:	ff 25 0a 8f 02 00    	jmp    *0x28f0a(%rip)        # 2d0c0 <glfwSetWindowUserPointer@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <_ZSt20__throw_length_errorPKc@plt>:
    41c0:	ff 25 02 8f 02 00    	jmp    *0x28f02(%rip)        # 2d0c8 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <vkEnumeratePhysicalDevices@plt>:
    41d0:	ff 25 fa 8e 02 00    	jmp    *0x28efa(%rip)        # 2d0d0 <vkEnumeratePhysicalDevices@Base>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <memset@plt>:
    41e0:	ff 25 f2 8e 02 00    	jmp    *0x28ef2(%rip)        # 2d0d8 <memset@GLIBC_2.2.5>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZNSaIcEC1ERKS_@plt>:
    41f0:	ff 25 ea 8e 02 00    	jmp    *0x28eea(%rip)        # 2d0e0 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <vkWaitForFences@plt>:
    4200:	ff 25 e2 8e 02 00    	jmp    *0x28ee2(%rip)        # 2d0e8 <vkWaitForFences@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <glfwWaitEvents@plt>:
    4210:	ff 25 da 8e 02 00    	jmp    *0x28eda(%rip)        # 2d0f0 <glfwWaitEvents@Base>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <vkGetSwapchainImagesKHR@plt>:
    4220:	ff 25 d2 8e 02 00    	jmp    *0x28ed2(%rip)        # 2d0f8 <vkGetSwapchainImagesKHR@Base>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    4230:	ff 25 ca 8e 02 00    	jmp    *0x28eca(%rip)        # 2d100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4240:	ff 25 c2 8e 02 00    	jmp    *0x28ec2(%rip)        # 2d108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <vkCreateRenderPass@plt>:
    4250:	ff 25 ba 8e 02 00    	jmp    *0x28eba(%rip)        # 2d110 <vkCreateRenderPass@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4260:	ff 25 b2 8e 02 00    	jmp    *0x28eb2(%rip)        # 2d118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4270:	ff 25 aa 8e 02 00    	jmp    *0x28eaa(%rip)        # 2d120 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4280:	ff 25 a2 8e 02 00    	jmp    *0x28ea2(%rip)        # 2d128 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZSt19__throw_logic_errorPKc@plt>:
    4290:	ff 25 9a 8e 02 00    	jmp    *0x28e9a(%rip)        # 2d130 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <__cxa_free_exception@plt>:
    42a0:	ff 25 92 8e 02 00    	jmp    *0x28e92(%rip)        # 2d138 <__cxa_free_exception@CXXABI_1.3>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42b0:	ff 25 8a 8e 02 00    	jmp    *0x28e8a(%rip)        # 2d140 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <glfwGetRequiredInstanceExtensions@plt>:
    42c0:	ff 25 82 8e 02 00    	jmp    *0x28e82(%rip)        # 2d148 <glfwGetRequiredInstanceExtensions@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    42d0:	ff 25 7a 8e 02 00    	jmp    *0x28e7a(%rip)        # 2d150 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <vkCreateShaderModule@plt>:
    42e0:	ff 25 72 8e 02 00    	jmp    *0x28e72(%rip)        # 2d158 <vkCreateShaderModule@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    42f0:	ff 25 6a 8e 02 00    	jmp    *0x28e6a(%rip)        # 2d160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <vkDestroyDevice@plt>:
    4300:	ff 25 62 8e 02 00    	jmp    *0x28e62(%rip)        # 2d168 <vkDestroyDevice@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkCreatePipelineLayout@plt>:
    4310:	ff 25 5a 8e 02 00    	jmp    *0x28e5a(%rip)        # 2d170 <vkCreatePipelineLayout@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkEnumerateInstanceExtensionProperties@plt>:
    4320:	ff 25 52 8e 02 00    	jmp    *0x28e52(%rip)        # 2d178 <vkEnumerateInstanceExtensionProperties@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4330:	ff 25 4a 8e 02 00    	jmp    *0x28e4a(%rip)        # 2d180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <glfwWindowHint@plt>:
    4340:	ff 25 42 8e 02 00    	jmp    *0x28e42(%rip)        # 2d188 <glfwWindowHint@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4350:	ff 25 3a 8e 02 00    	jmp    *0x28e3a(%rip)        # 2d190 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkCmdBindPipeline@plt>:
    4360:	ff 25 32 8e 02 00    	jmp    *0x28e32(%rip)        # 2d198 <vkCmdBindPipeline@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <__cxa_atexit@plt>:
    4370:	ff 25 2a 8e 02 00    	jmp    *0x28e2a(%rip)        # 2d1a0 <__cxa_atexit@GLIBC_2.2.5>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4380:	ff 25 22 8e 02 00    	jmp    *0x28e22(%rip)        # 2d1a8 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <vkAllocateCommandBuffers@plt>:
    4390:	ff 25 1a 8e 02 00    	jmp    *0x28e1a(%rip)        # 2d1b0 <vkAllocateCommandBuffers@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkGetPhysicalDeviceProperties2@plt>:
    43a0:	ff 25 12 8e 02 00    	jmp    *0x28e12(%rip)        # 2d1b8 <vkGetPhysicalDeviceProperties2@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkGetInstanceProcAddr@plt>:
    43b0:	ff 25 0a 8e 02 00    	jmp    *0x28e0a(%rip)        # 2d1c0 <vkGetInstanceProcAddr@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <glfwPollEvents@plt>:
    43c0:	ff 25 02 8e 02 00    	jmp    *0x28e02(%rip)        # 2d1c8 <glfwPollEvents@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <vkDestroyRenderPass@plt>:
    43d0:	ff 25 fa 8d 02 00    	jmp    *0x28dfa(%rip)        # 2d1d0 <vkDestroyRenderPass@Base>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    43e0:	ff 25 f2 8d 02 00    	jmp    *0x28df2(%rip)        # 2d1d8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <_Znwm@plt>:
    43f0:	ff 25 ea 8d 02 00    	jmp    *0x28dea(%rip)        # 2d1e0 <_Znwm@GLIBCXX_3.4>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkBeginCommandBuffer@plt>:
    4400:	ff 25 e2 8d 02 00    	jmp    *0x28de2(%rip)        # 2d1e8 <vkBeginCommandBuffer@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZdlPvm@plt>:
    4410:	ff 25 da 8d 02 00    	jmp    *0x28dda(%rip)        # 2d1f0 <_ZdlPvm@CXXABI_1.3.9>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkDestroyInstance@plt>:
    4420:	ff 25 d2 8d 02 00    	jmp    *0x28dd2(%rip)        # 2d1f8 <vkDestroyInstance@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <glfwTerminate@plt>:
    4430:	ff 25 ca 8d 02 00    	jmp    *0x28dca(%rip)        # 2d200 <glfwTerminate@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <vkCreateImageView@plt>:
    4440:	ff 25 c2 8d 02 00    	jmp    *0x28dc2(%rip)        # 2d208 <vkCreateImageView@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4450:	ff 25 ba 8d 02 00    	jmp    *0x28dba(%rip)        # 2d210 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <_ZNSolsEPFRSoS_E@plt>:
    4460:	ff 25 b2 8d 02 00    	jmp    *0x28db2(%rip)        # 2d218 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4470:	ff 25 aa 8d 02 00    	jmp    *0x28daa(%rip)        # 2d220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4480:	ff 25 a2 8d 02 00    	jmp    *0x28da2(%rip)        # 2d228 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4490:	ff 25 9a 8d 02 00    	jmp    *0x28d9a(%rip)        # 2d230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZNSaIcED1Ev@plt>:
    44a0:	ff 25 92 8d 02 00    	jmp    *0x28d92(%rip)        # 2d238 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkDestroyFence@plt>:
    44b0:	ff 25 8a 8d 02 00    	jmp    *0x28d8a(%rip)        # 2d240 <vkDestroyFence@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkDestroyPipeline@plt>:
    44c0:	ff 25 82 8d 02 00    	jmp    *0x28d82(%rip)        # 2d248 <vkDestroyPipeline@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    44d0:	ff 25 7a 8d 02 00    	jmp    *0x28d7a(%rip)        # 2d250 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    44e0:	ff 25 72 8d 02 00    	jmp    *0x28d72(%rip)        # 2d258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <vkEnumerateInstanceLayerProperties@plt>:
    44f0:	ff 25 6a 8d 02 00    	jmp    *0x28d6a(%rip)        # 2d260 <vkEnumerateInstanceLayerProperties@Base>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <glfwInit@plt>:
    4500:	ff 25 62 8d 02 00    	jmp    *0x28d62(%rip)        # 2d268 <glfwInit@Base>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4510:	ff 25 5a 8d 02 00    	jmp    *0x28d5a(%rip)        # 2d270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkCreateSwapchainKHR@plt>:
    4520:	ff 25 52 8d 02 00    	jmp    *0x28d52(%rip)        # 2d278 <vkCreateSwapchainKHR@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    4530:	ff 25 4a 8d 02 00    	jmp    *0x28d4a(%rip)        # 2d280 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkDestroyShaderModule@plt>:
    4540:	ff 25 42 8d 02 00    	jmp    *0x28d42(%rip)        # 2d288 <vkDestroyShaderModule@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkCreateInstance@plt>:
    4550:	ff 25 3a 8d 02 00    	jmp    *0x28d3a(%rip)        # 2d290 <vkCreateInstance@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4560:	ff 25 32 8d 02 00    	jmp    *0x28d32(%rip)        # 2d298 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkCreateFence@plt>:
    4570:	ff 25 2a 8d 02 00    	jmp    *0x28d2a(%rip)        # 2d2a0 <vkCreateFence@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkResetCommandBuffer@plt>:
    4580:	ff 25 22 8d 02 00    	jmp    *0x28d22(%rip)        # 2d2a8 <vkResetCommandBuffer@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkDestroyPipelineLayout@plt>:
    4590:	ff 25 1a 8d 02 00    	jmp    *0x28d1a(%rip)        # 2d2b0 <vkDestroyPipelineLayout@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZNSi4readEPcl@plt>:
    45a0:	ff 25 12 8d 02 00    	jmp    *0x28d12(%rip)        # 2d2b8 <_ZNSi4readEPcl@GLIBCXX_3.4>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    45b0:	ff 25 0a 8d 02 00    	jmp    *0x28d0a(%rip)        # 2d2c0 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    45c0:	ff 25 02 8d 02 00    	jmp    *0x28d02(%rip)        # 2d2c8 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    45d0:	ff 25 fa 8c 02 00    	jmp    *0x28cfa(%rip)        # 2d2d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkQueueSubmit@plt>:
    45e0:	ff 25 f2 8c 02 00    	jmp    *0x28cf2(%rip)        # 2d2d8 <vkQueueSubmit@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkGetDeviceQueue@plt>:
    45f0:	ff 25 ea 8c 02 00    	jmp    *0x28cea(%rip)        # 2d2e0 <vkGetDeviceQueue@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSolsEj@plt>:
    4600:	ff 25 e2 8c 02 00    	jmp    *0x28ce2(%rip)        # 2d2e8 <_ZNSolsEj@GLIBCXX_3.4>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkCreateFramebuffer@plt>:
    4610:	ff 25 da 8c 02 00    	jmp    *0x28cda(%rip)        # 2d2f0 <vkCreateFramebuffer@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <glfwGetWindowUserPointer@plt>:
    4620:	ff 25 d2 8c 02 00    	jmp    *0x28cd2(%rip)        # 2d2f8 <glfwGetWindowUserPointer@Base>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4630:	ff 25 ca 8c 02 00    	jmp    *0x28cca(%rip)        # 2d300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4640:	ff 25 c2 8c 02 00    	jmp    *0x28cc2(%rip)        # 2d308 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <vkEnumerateDeviceExtensionProperties@plt>:
    4650:	ff 25 ba 8c 02 00    	jmp    *0x28cba(%rip)        # 2d310 <vkEnumerateDeviceExtensionProperties@Base>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <vkCreateSemaphore@plt>:
    4660:	ff 25 b2 8c 02 00    	jmp    *0x28cb2(%rip)        # 2d318 <vkCreateSemaphore@Base>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <vkCmdBeginRenderPass@plt>:
    4670:	ff 25 aa 8c 02 00    	jmp    *0x28caa(%rip)        # 2d320 <vkCmdBeginRenderPass@Base>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkDestroyCommandPool@plt>:
    4680:	ff 25 a2 8c 02 00    	jmp    *0x28ca2(%rip)        # 2d328 <vkDestroyCommandPool@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSaIcEC2ERKS_@plt>:
    4690:	ff 25 9a 8c 02 00    	jmp    *0x28c9a(%rip)        # 2d330 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <__cxa_rethrow@plt>:
    46a0:	ff 25 92 8c 02 00    	jmp    *0x28c92(%rip)        # 2d338 <__cxa_rethrow@CXXABI_1.3>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <vkCreateDevice@plt>:
    46b0:	ff 25 8a 8c 02 00    	jmp    *0x28c8a(%rip)        # 2d340 <vkCreateDevice@Base>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <glfwSetFramebufferSizeCallback@plt>:
    46c0:	ff 25 82 8c 02 00    	jmp    *0x28c82(%rip)        # 2d348 <glfwSetFramebufferSizeCallback@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSt8ios_base4InitC1Ev@plt>:
    46d0:	ff 25 7a 8c 02 00    	jmp    *0x28c7a(%rip)        # 2d350 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <glfwCreateWindowSurface@plt>:
    46e0:	ff 25 72 8c 02 00    	jmp    *0x28c72(%rip)        # 2d358 <glfwCreateWindowSurface@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <vkResetFences@plt>:
    46f0:	ff 25 6a 8c 02 00    	jmp    *0x28c6a(%rip)        # 2d360 <vkResetFences@Base>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <glfwCreateWindow@plt>:
    4700:	ff 25 62 8c 02 00    	jmp    *0x28c62(%rip)        # 2d368 <glfwCreateWindow@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4710:	ff 25 5a 8c 02 00    	jmp    *0x28c5a(%rip)        # 2d370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <vkQueuePresentKHR@plt>:
    4720:	ff 25 52 8c 02 00    	jmp    *0x28c52(%rip)        # 2d378 <vkQueuePresentKHR@Base>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <glfwGetFramebufferSize@plt>:
    4730:	ff 25 4a 8c 02 00    	jmp    *0x28c4a(%rip)        # 2d380 <glfwGetFramebufferSize@Base>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4740:	ff 25 42 8c 02 00    	jmp    *0x28c42(%rip)        # 2d388 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4750:	ff 25 3a 8c 02 00    	jmp    *0x28c3a(%rip)        # 2d390 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4760:	ff 25 32 8c 02 00    	jmp    *0x28c32(%rip)        # 2d398 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <memmove@plt>:
    4770:	ff 25 2a 8c 02 00    	jmp    *0x28c2a(%rip)        # 2d3a0 <memmove@GLIBC_2.2.5>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <__cxa_end_catch@plt>:
    4780:	ff 25 22 8c 02 00    	jmp    *0x28c22(%rip)        # 2d3a8 <__cxa_end_catch@CXXABI_1.3>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <vkDestroyFramebuffer@plt>:
    4790:	ff 25 1a 8c 02 00    	jmp    *0x28c1a(%rip)        # 2d3b0 <vkDestroyFramebuffer@Base>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <__cxa_throw@plt>:
    47a0:	ff 25 12 8c 02 00    	jmp    *0x28c12(%rip)        # 2d3b8 <__cxa_throw@CXXABI_1.3>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    47b0:	ff 25 0a 8c 02 00    	jmp    *0x28c0a(%rip)        # 2d3c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    47c0:	ff 25 02 8c 02 00    	jmp    *0x28c02(%rip)        # 2d3c8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <_ZNSolsEi@plt>:
    47d0:	ff 25 fa 8b 02 00    	jmp    *0x28bfa(%rip)        # 2d3d0 <_ZNSolsEi@GLIBCXX_3.4>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <_ZNSi5tellgEv@plt>:
    47e0:	ff 25 f2 8b 02 00    	jmp    *0x28bf2(%rip)        # 2d3d8 <_ZNSi5tellgEv@GLIBCXX_3.4>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <vkDestroySurfaceKHR@plt>:
    47f0:	ff 25 ea 8b 02 00    	jmp    *0x28bea(%rip)        # 2d3e0 <vkDestroySurfaceKHR@Base>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <_Unwind_Resume@plt>:
    4800:	ff 25 e2 8b 02 00    	jmp    *0x28be2(%rip)        # 2d3e8 <_Unwind_Resume@GCC_3.0>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <_ZNSaIcEC1Ev@plt>:
    4810:	ff 25 da 8b 02 00    	jmp    *0x28bda(%rip)        # 2d3f0 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <vkDestroyImageView@plt>:
    4820:	ff 25 d2 8b 02 00    	jmp    *0x28bd2(%rip)        # 2d3f8 <vkDestroyImageView@Base>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4830:	ff 25 ca 8b 02 00    	jmp    *0x28bca(%rip)        # 2d400 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <_ZNSt9exceptionD2Ev@plt>:
    4840:	ff 25 c2 8b 02 00    	jmp    *0x28bc2(%rip)        # 2d408 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <glfwWindowShouldClose@plt>:
    4850:	ff 25 ba 8b 02 00    	jmp    *0x28bba(%rip)        # 2d410 <glfwWindowShouldClose@Base>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <vkEndCommandBuffer@plt>:
    4860:	ff 25 b2 8b 02 00    	jmp    *0x28bb2(%rip)        # 2d418 <vkEndCommandBuffer@Base>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4870:	ff 25 aa 8b 02 00    	jmp    *0x28baa(%rip)        # 2d420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <vkCmdDraw@plt>:
    4880:	ff 25 a2 8b 02 00    	jmp    *0x28ba2(%rip)        # 2d428 <vkCmdDraw@Base>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4890:	ff 25 9a 8b 02 00    	jmp    *0x28b9a(%rip)        # 2d430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

00000000000048a0 <__cxa_finalize@plt>:
    48a0:	ff 25 ea 86 02 00    	jmp    *0x286ea(%rip)        # 2cf90 <__cxa_finalize@GLIBC_2.2.5>
    48a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000048b0 <_start>:
    48b0:	31 ed                	xor    %ebp,%ebp
    48b2:	49 89 d1             	mov    %rdx,%r9
    48b5:	5e                   	pop    %rsi
    48b6:	48 89 e2             	mov    %rsp,%rdx
    48b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    48bd:	50                   	push   %rax
    48be:	54                   	push   %rsp
    48bf:	45 31 c0             	xor    %r8d,%r8d
    48c2:	31 c9                	xor    %ecx,%ecx
    48c4:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4a74 <main>
    48cb:	ff 15 cf 86 02 00    	call   *0x286cf(%rip)        # 2cfa0 <__libc_start_main@GLIBC_2.34>
    48d1:	f4                   	hlt
    48d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    48d9:	00 00 00 
    48dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000048e0 <deregister_tm_clones>:
    48e0:	48 8d 3d 71 8b 02 00 	lea    0x28b71(%rip),%rdi        # 2d458 <__TMC_END__>
    48e7:	48 8d 05 6a 8b 02 00 	lea    0x28b6a(%rip),%rax        # 2d458 <__TMC_END__>
    48ee:	48 39 f8             	cmp    %rdi,%rax
    48f1:	74 15                	je     4908 <deregister_tm_clones+0x28>
    48f3:	48 8b 05 b6 86 02 00 	mov    0x286b6(%rip),%rax        # 2cfb0 <_ITM_deregisterTMCloneTable@Base>
    48fa:	48 85 c0             	test   %rax,%rax
    48fd:	74 09                	je     4908 <deregister_tm_clones+0x28>
    48ff:	ff e0                	jmp    *%rax
    4901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4908:	c3                   	ret
    4909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004910 <register_tm_clones>:
    4910:	48 8d 3d 41 8b 02 00 	lea    0x28b41(%rip),%rdi        # 2d458 <__TMC_END__>
    4917:	48 8d 35 3a 8b 02 00 	lea    0x28b3a(%rip),%rsi        # 2d458 <__TMC_END__>
    491e:	48 29 fe             	sub    %rdi,%rsi
    4921:	48 89 f0             	mov    %rsi,%rax
    4924:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4928:	48 c1 f8 03          	sar    $0x3,%rax
    492c:	48 01 c6             	add    %rax,%rsi
    492f:	48 d1 fe             	sar    %rsi
    4932:	74 14                	je     4948 <register_tm_clones+0x38>
    4934:	48 8b 05 85 86 02 00 	mov    0x28685(%rip),%rax        # 2cfc0 <_ITM_registerTMCloneTable@Base>
    493b:	48 85 c0             	test   %rax,%rax
    493e:	74 08                	je     4948 <register_tm_clones+0x38>
    4940:	ff e0                	jmp    *%rax
    4942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4948:	c3                   	ret
    4949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004950 <__do_global_dtors_aux>:
    4950:	f3 0f 1e fa          	endbr64
    4954:	80 3d 15 8c 02 00 00 	cmpb   $0x0,0x28c15(%rip)        # 2d570 <completed.0>
    495b:	75 2b                	jne    4988 <__do_global_dtors_aux+0x38>
    495d:	55                   	push   %rbp
    495e:	48 83 3d 2a 86 02 00 	cmpq   $0x0,0x2862a(%rip)        # 2cf90 <__cxa_finalize@GLIBC_2.2.5>
    4965:	00 
    4966:	48 89 e5             	mov    %rsp,%rbp
    4969:	74 0c                	je     4977 <__do_global_dtors_aux+0x27>
    496b:	48 8b 3d ce 8a 02 00 	mov    0x28ace(%rip),%rdi        # 2d440 <__dso_handle>
    4972:	e8 29 ff ff ff       	call   48a0 <__cxa_finalize@plt>
    4977:	e8 64 ff ff ff       	call   48e0 <deregister_tm_clones>
    497c:	c6 05 ed 8b 02 00 01 	movb   $0x1,0x28bed(%rip)        # 2d570 <completed.0>
    4983:	5d                   	pop    %rbp
    4984:	c3                   	ret
    4985:	0f 1f 00             	nopl   (%rax)
    4988:	c3                   	ret
    4989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004990 <frame_dummy>:
    4990:	f3 0f 1e fa          	endbr64
    4994:	e9 77 ff ff ff       	jmp    4910 <register_tm_clones>

0000000000004999 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>

int protected_main() {
    4999:	55                   	push   %rbp
    499a:	48 89 e5             	mov    %rsp,%rbp
    499d:	53                   	push   %rbx
    499e:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
  VulkanApp app;
    49a5:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    49ac:	48 89 c7             	mov    %rax,%rdi
    49af:	e8 3e b6 00 00       	call   fff2 <_ZN9VulkanAppC1Ev>
  app.run();
    49b4:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    49bb:	48 89 c7             	mov    %rax,%rdi
    49be:	e8 7d bb 00 00       	call   10540 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    49c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    49c7:	48 89 c7             	mov    %rax,%rdi
    49ca:	e8 41 fe ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    49cf:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    49d3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    49d7:	48 8d 0d 06 5c 01 00 	lea    0x15c06(%rip),%rcx        # 1a5e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    49de:	48 89 ce             	mov    %rcx,%rsi
    49e1:	48 89 c7             	mov    %rax,%rdi
    49e4:	e8 77 02 00 00       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    49e9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    49ed:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    49f4:	48 89 d6             	mov    %rdx,%rsi
    49f7:	48 89 c7             	mov    %rax,%rdi
    49fa:	e8 8b bb 00 00       	call   1058a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    49ff:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a03:	48 89 c7             	mov    %rax,%rdi
    4a06:	e8 35 f8 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4a0b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4a0f:	48 89 c7             	mov    %rax,%rdi
    4a12:	e8 89 fa ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4a17:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4a1c:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    4a23:	48 89 c7             	mov    %rax,%rdi
    4a26:	e8 07 b9 00 00       	call   10332 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    4a2b:	89 d8                	mov    %ebx,%eax
    4a2d:	eb 3f                	jmp    4a6e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    4a2f:	48 89 c3             	mov    %rax,%rbx
    4a32:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a36:	48 89 c7             	mov    %rax,%rdi
    4a39:	e8 02 f8 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4a3e:	eb 03                	jmp    4a43 <_Z14protected_mainv+0xaa>
    4a40:	48 89 c3             	mov    %rax,%rbx
    4a43:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4a47:	48 89 c7             	mov    %rax,%rdi
    4a4a:	e8 51 fa ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    4a4f:	eb 03                	jmp    4a54 <_Z14protected_mainv+0xbb>
}
    4a51:	48 89 c3             	mov    %rax,%rbx
    4a54:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    4a5b:	48 89 c7             	mov    %rax,%rdi
    4a5e:	e8 cf b8 00 00       	call   10332 <_ZN9VulkanAppD1Ev>
    4a63:	48 89 d8             	mov    %rbx,%rax
    4a66:	48 89 c7             	mov    %rax,%rdi
    4a69:	e8 92 fd ff ff       	call   4800 <_Unwind_Resume@plt>
    4a6e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a72:	c9                   	leave
    4a73:	c3                   	ret

0000000000004a74 <main>:

int main() {
    4a74:	55                   	push   %rbp
    4a75:	48 89 e5             	mov    %rsp,%rbp
    4a78:	53                   	push   %rbx
    4a79:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    4a7d:	e8 17 ff ff ff       	call   4999 <_Z14protected_mainv>
    4a82:	e9 aa 00 00 00       	jmp    4b31 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4a87:	b8 01 00 00 00       	mov    $0x1,%eax
    4a8c:	e9 a0 00 00 00       	jmp    4b31 <main+0xbd>
  } catch (const std::exception &e) {
    4a91:	48 83 fa 01          	cmp    $0x1,%rdx
    4a95:	75 49                	jne    4ae0 <main+0x6c>
    4a97:	48 89 c7             	mov    %rax,%rdi
    4a9a:	e8 a1 f6 ff ff       	call   4140 <__cxa_begin_catch@plt>
    4a9f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4aa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4aa7:	48 8b 00             	mov    (%rax),%rax
    4aaa:	48 83 c0 10          	add    $0x10,%rax
    4aae:	48 8b 10             	mov    (%rax),%rdx
    4ab1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ab5:	48 89 c7             	mov    %rax,%rdi
    4ab8:	ff d2                	call   *%rdx
    4aba:	48 89 c6             	mov    %rax,%rsi
    4abd:	48 8d 05 9c 89 02 00 	lea    0x2899c(%rip),%rax        # 2d460 <_ZSt4cerr@GLIBCXX_3.4>
    4ac4:	48 89 c7             	mov    %rax,%rdi
    4ac7:	e8 14 f9 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4acc:	be 0a 00 00 00       	mov    $0xa,%esi
    4ad1:	48 89 c7             	mov    %rax,%rdi
    4ad4:	e8 37 fa ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4ad9:	e8 a2 fc ff ff       	call   4780 <__cxa_end_catch@plt>
    4ade:	eb a7                	jmp    4a87 <main+0x13>
    4ae0:	48 89 c7             	mov    %rax,%rdi
    4ae3:	e8 58 f6 ff ff       	call   4140 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4ae8:	48 8d 05 fe 5a 01 00 	lea    0x15afe(%rip),%rax        # 1a5ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    4aef:	48 89 c6             	mov    %rax,%rsi
    4af2:	48 8d 05 67 89 02 00 	lea    0x28967(%rip),%rax        # 2d460 <_ZSt4cerr@GLIBCXX_3.4>
    4af9:	48 89 c7             	mov    %rax,%rdi
    4afc:	e8 df f8 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4b01:	e8 7a fc ff ff       	call   4780 <__cxa_end_catch@plt>
    4b06:	e9 7c ff ff ff       	jmp    4a87 <main+0x13>
  } catch (...) {
    4b0b:	48 89 c3             	mov    %rax,%rbx
    4b0e:	e8 6d fc ff ff       	call   4780 <__cxa_end_catch@plt>
    4b13:	48 89 d8             	mov    %rbx,%rax
    4b16:	48 89 c7             	mov    %rax,%rdi
    4b19:	e8 e2 fc ff ff       	call   4800 <_Unwind_Resume@plt>
  }
    4b1e:	48 89 c3             	mov    %rax,%rbx
    4b21:	e8 5a fc ff ff       	call   4780 <__cxa_end_catch@plt>
    4b26:	48 89 d8             	mov    %rbx,%rax
    4b29:	48 89 c7             	mov    %rax,%rdi
    4b2c:	e8 cf fc ff ff       	call   4800 <_Unwind_Resume@plt>
    4b31:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b35:	c9                   	leave
    4b36:	c3                   	ret

0000000000004b37 <_Z41__static_initialization_and_destruction_0ii>:
    4b37:	55                   	push   %rbp
    4b38:	48 89 e5             	mov    %rsp,%rbp
    4b3b:	48 83 ec 10          	sub    $0x10,%rsp
    4b3f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4b42:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4b45:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    4b49:	75 3b                	jne    4b86 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    4b4b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4b52:	75 32                	jne    4b86 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4b54:	48 8d 05 16 8a 02 00 	lea    0x28a16(%rip),%rax        # 2d571 <_ZStL8__ioinit>
    4b5b:	48 89 c7             	mov    %rax,%rdi
    4b5e:	e8 6d fb ff ff       	call   46d0 <_ZNSt8ios_base4InitC1Ev@plt>
    4b63:	48 8d 05 d6 88 02 00 	lea    0x288d6(%rip),%rax        # 2d440 <__dso_handle>
    4b6a:	48 89 c2             	mov    %rax,%rdx
    4b6d:	48 8d 05 fd 89 02 00 	lea    0x289fd(%rip),%rax        # 2d571 <_ZStL8__ioinit>
    4b74:	48 89 c6             	mov    %rax,%rsi
    4b77:	48 8b 05 4a 84 02 00 	mov    0x2844a(%rip),%rax        # 2cfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4b7e:	48 89 c7             	mov    %rax,%rdi
    4b81:	e8 ea f7 ff ff       	call   4370 <__cxa_atexit@plt>
    4b86:	90                   	nop
    4b87:	c9                   	leave
    4b88:	c3                   	ret

0000000000004b89 <_GLOBAL__sub_I__Z14protected_mainv>:
    4b89:	55                   	push   %rbp
    4b8a:	48 89 e5             	mov    %rsp,%rbp
    4b8d:	be ff ff 00 00       	mov    $0xffff,%esi
    4b92:	bf 01 00 00 00       	mov    $0x1,%edi
    4b97:	e8 9b ff ff ff       	call   4b37 <_Z41__static_initialization_and_destruction_0ii>
    4b9c:	5d                   	pop    %rbp
    4b9d:	c3                   	ret

0000000000004b9e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4b9e:	55                   	push   %rbp
    4b9f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4ba2:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4ba7:	5d                   	pop    %rbp
    4ba8:	c3                   	ret

0000000000004ba9 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4ba9:	55                   	push   %rbp
    4baa:	48 89 e5             	mov    %rsp,%rbp
    4bad:	48 83 ec 10          	sub    $0x10,%rsp
    4bb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4bb5:	e8 e4 ff ff ff       	call   4b9e <_ZSt23__is_constant_evaluatedv>
    4bba:	84 c0                	test   %al,%al
    4bbc:	74 0e                	je     4bcc <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bc2:	48 89 c7             	mov    %rax,%rdi
    4bc5:	e8 12 00 00 00       	call   4bdc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4bca:	eb 0d                	jmp    4bd9 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd0:	48 89 c7             	mov    %rax,%rdi
    4bd3:	e8 98 f5 ff ff       	call   4170 <strlen@plt>
    4bd8:	90                   	nop
      }
    4bd9:	c9                   	leave
    4bda:	c3                   	ret
    4bdb:	90                   	nop

0000000000004bdc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4bdc:	55                   	push   %rbp
    4bdd:	48 89 e5             	mov    %rsp,%rbp
    4be0:	48 83 ec 20          	sub    $0x20,%rsp
    4be4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4be8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4bef:	00 
      while (!eq(__p[__i], char_type()))
    4bf0:	eb 05                	jmp    4bf7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4bf2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4bf7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4bfb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c03:	48 01 c2             	add    %rax,%rdx
    4c06:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4c0a:	48 89 c6             	mov    %rax,%rsi
    4c0d:	48 89 d7             	mov    %rdx,%rdi
    4c10:	e8 0d 00 00 00       	call   4c22 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4c15:	83 f0 01             	xor    $0x1,%eax
    4c18:	84 c0                	test   %al,%al
    4c1a:	75 d6                	jne    4bf2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4c20:	c9                   	leave
    4c21:	c3                   	ret

0000000000004c22 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4c22:	55                   	push   %rbp
    4c23:	48 89 e5             	mov    %rsp,%rbp
    4c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c32:	0f b6 10             	movzbl (%rax),%edx
    4c35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c39:	0f b6 00             	movzbl (%rax),%eax
    4c3c:	38 c2                	cmp    %al,%dl
    4c3e:	0f 94 c0             	sete   %al
    4c41:	5d                   	pop    %rbp
    4c42:	c3                   	ret
    4c43:	90                   	nop

0000000000004c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4c44:	55                   	push   %rbp
    4c45:	48 89 e5             	mov    %rsp,%rbp
    4c48:	48 83 ec 10          	sub    $0x10,%rsp
    4c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c54:	48 89 c7             	mov    %rax,%rdi
    4c57:	e8 14 f4 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4c5c:	90                   	nop
    4c5d:	c9                   	leave
    4c5e:	c3                   	ret
    4c5f:	90                   	nop

0000000000004c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4c60:	55                   	push   %rbp
    4c61:	48 89 e5             	mov    %rsp,%rbp
    4c64:	53                   	push   %rbx
    4c65:	48 83 ec 38          	sub    $0x38,%rsp
    4c69:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c6d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c71:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4c75:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4c79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c7d:	48 89 c7             	mov    %rax,%rdi
    4c80:	e8 6b f6 ff ff       	call   42f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c85:	48 89 c1             	mov    %rax,%rcx
    4c88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c8c:	48 89 c2             	mov    %rax,%rdx
    4c8f:	48 89 ce             	mov    %rcx,%rsi
    4c92:	48 89 df             	mov    %rbx,%rdi
    4c95:	e8 d6 f7 ff ff       	call   4470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4c9a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4c9f:	75 0f                	jne    4cb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4ca1:	48 8d 05 60 59 01 00 	lea    0x15960(%rip),%rax        # 1a608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4ca8:	48 89 c7             	mov    %rax,%rdi
    4cab:	e8 e0 f5 ff ff       	call   4290 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4cb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4cb4:	48 89 c7             	mov    %rax,%rdi
    4cb7:	e8 ed fe ff ff       	call   4ba9 <_ZNSt11char_traitsIcE6lengthEPKc>
    4cbc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4cc0:	48 01 d0             	add    %rdx,%rax
    4cc3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4cc7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4ccb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4ccf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cd3:	48 89 ce             	mov    %rcx,%rsi
    4cd6:	48 89 c7             	mov    %rax,%rdi
    4cd9:	e8 66 00 00 00       	call   4d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4cde:	eb 1a                	jmp    4cfa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4ce0:	48 89 c3             	mov    %rax,%rbx
    4ce3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ce7:	48 89 c7             	mov    %rax,%rdi
    4cea:	e8 55 ff ff ff       	call   4c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4cef:	48 89 d8             	mov    %rbx,%rax
    4cf2:	48 89 c7             	mov    %rax,%rdi
    4cf5:	e8 06 fb ff ff       	call   4800 <_Unwind_Resume@plt>
    4cfa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cfe:	c9                   	leave
    4cff:	c3                   	ret

0000000000004d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4d00:	55                   	push   %rbp
    4d01:	48 89 e5             	mov    %rsp,%rbp
    4d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d14:	48 89 10             	mov    %rdx,(%rax)
    4d17:	90                   	nop
    4d18:	5d                   	pop    %rbp
    4d19:	c3                   	ret

0000000000004d1a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4d1a:	55                   	push   %rbp
    4d1b:	48 89 e5             	mov    %rsp,%rbp
    4d1e:	48 83 ec 10          	sub    $0x10,%rsp
    4d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2a:	48 8b 00             	mov    (%rax),%rax
    4d2d:	48 85 c0             	test   %rax,%rax
    4d30:	74 0f                	je     4d41 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d36:	48 8b 00             	mov    (%rax),%rax
    4d39:	48 89 c7             	mov    %rax,%rdi
    4d3c:	e8 1f f8 ff ff       	call   4560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4d41:	90                   	nop
    4d42:	c9                   	leave
    4d43:	c3                   	ret

0000000000004d44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4d44:	55                   	push   %rbp
    4d45:	48 89 e5             	mov    %rsp,%rbp
    4d48:	48 83 ec 40          	sub    $0x40,%rsp
    4d4c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d50:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d54:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4d58:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4d5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d60:	48 89 d6             	mov    %rdx,%rsi
    4d63:	48 89 c7             	mov    %rax,%rdi
    4d66:	e8 c0 00 00 00       	call   4e2b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4d6b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4d6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d73:	48 83 f8 0f          	cmp    $0xf,%rax
    4d77:	76 3f                	jbe    4db8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4d79:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4d7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d81:	ba 00 00 00 00       	mov    $0x0,%edx
    4d86:	48 89 ce             	mov    %rcx,%rsi
    4d89:	48 89 c7             	mov    %rax,%rdi
    4d8c:	e8 9f fa ff ff       	call   4830 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4d91:	48 89 c2             	mov    %rax,%rdx
    4d94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d98:	48 89 d6             	mov    %rdx,%rsi
    4d9b:	48 89 c7             	mov    %rax,%rdi
    4d9e:	e8 8d f5 ff ff       	call   4330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4da3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4da7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dab:	48 89 d6             	mov    %rdx,%rsi
    4dae:	48 89 c7             	mov    %rax,%rdi
    4db1:	e8 da fa ff ff       	call   4890 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4db6:	eb 15                	jmp    4dcd <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4db8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dbc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dc4:	48 89 c7             	mov    %rax,%rdi
    4dc7:	e8 24 f5 ff ff       	call   42f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4dcc:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4dcd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4dd1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4dd5:	48 89 d6             	mov    %rdx,%rsi
    4dd8:	48 89 c7             	mov    %rax,%rdi
    4ddb:	e8 20 ff ff ff       	call   4d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4de0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4de4:	48 89 c7             	mov    %rax,%rdi
    4de7:	e8 e4 f6 ff ff       	call   44d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4dec:	48 89 c1             	mov    %rax,%rcx
    4def:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4df3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4df7:	48 89 c6             	mov    %rax,%rsi
    4dfa:	48 89 cf             	mov    %rcx,%rdi
    4dfd:	e8 de f6 ff ff       	call   44e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4e02:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4e09:	00 

	_M_set_length(__dnew);
    4e0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4e0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e12:	48 89 d6             	mov    %rdx,%rsi
    4e15:	48 89 c7             	mov    %rax,%rdi
    4e18:	e8 43 f4 ff ff       	call   4260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4e1d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4e21:	48 89 c7             	mov    %rax,%rdi
    4e24:	e8 f1 fe ff ff       	call   4d1a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4e29:	c9                   	leave
    4e2a:	c3                   	ret

0000000000004e2b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4e2b:	55                   	push   %rbp
    4e2c:	48 89 e5             	mov    %rsp,%rbp
    4e2f:	48 83 ec 10          	sub    $0x10,%rsp
    4e33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4e3b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4e3f:	48 89 c7             	mov    %rax,%rdi
    4e42:	e8 15 00 00 00       	call   4e5c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4e4f:	48 89 d6             	mov    %rdx,%rsi
    4e52:	48 89 c7             	mov    %rax,%rdi
    4e55:	e8 0d 00 00 00       	call   4e67 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4e5a:	c9                   	leave
    4e5b:	c3                   	ret

0000000000004e5c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4e5c:	55                   	push   %rbp
    4e5d:	48 89 e5             	mov    %rsp,%rbp
    4e60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4e64:	90                   	nop
    4e65:	5d                   	pop    %rbp
    4e66:	c3                   	ret

0000000000004e67 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4e67:	55                   	push   %rbp
    4e68:	48 89 e5             	mov    %rsp,%rbp
    4e6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e6f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4e73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e77:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4e7b:	5d                   	pop    %rbp
    4e7c:	c3                   	ret

0000000000004e7d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4e7d:	55                   	push   %rbp
    4e7e:	48 89 e5             	mov    %rsp,%rbp
    4e81:	41 54                	push   %r12
    4e83:	53                   	push   %rbx
    4e84:	48 83 ec 30          	sub    $0x30,%rsp
    4e88:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e8c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4e90:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4e94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4e98:	8b 40 1c             	mov    0x1c(%rax),%eax
    4e9b:	89 c3                	mov    %eax,%ebx
    4e9d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ea1:	48 89 c7             	mov    %rax,%rdi
    4ea4:	e8 1d 02 00 00       	call   50c6 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4ea9:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4ead:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4eb1:	48 89 de             	mov    %rbx,%rsi
    4eb4:	48 89 c7             	mov    %rax,%rdi
    4eb7:	e8 42 02 00 00       	call   50fe <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4ebc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ec0:	48 89 c7             	mov    %rax,%rdi
    4ec3:	e8 1a 02 00 00       	call   50e2 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4ec8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ecc:	48 89 c7             	mov    %rax,%rdi
    4ecf:	e8 e4 02 00 00       	call   51b8 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4ed4:	48 89 c2             	mov    %rax,%rdx
    4ed7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4edb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4edf:	48 89 ce             	mov    %rcx,%rsi
    4ee2:	48 89 c7             	mov    %rax,%rdi
    4ee5:	e8 a6 f4 ff ff       	call   4390 <vkAllocateCommandBuffers@plt>
    4eea:	85 c0                	test   %eax,%eax
    4eec:	0f 95 c0             	setne  %al
    4eef:	84 c0                	test   %al,%al
    4ef1:	74 7f                	je     4f72 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4ef3:	bf 10 00 00 00       	mov    $0x10,%edi
    4ef8:	e8 a3 f2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    4efd:	48 89 c3             	mov    %rax,%rbx
    4f00:	48 8d 05 11 5d 01 00 	lea    0x15d11(%rip),%rax        # 1ac18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4f07:	48 89 c6             	mov    %rax,%rsi
    4f0a:	48 89 df             	mov    %rbx,%rdi
    4f0d:	e8 0e f2 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    4f12:	48 8b 05 8f 80 02 00 	mov    0x2808f(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4f19:	48 89 c2             	mov    %rax,%rdx
    4f1c:	48 8d 05 1d 7e 02 00 	lea    0x27e1d(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4f23:	48 89 c6             	mov    %rax,%rsi
    4f26:	48 89 df             	mov    %rbx,%rdi
    4f29:	e8 72 f8 ff ff       	call   47a0 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4f2e:	48 89 c3             	mov    %rax,%rbx
    4f31:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4f35:	48 89 c7             	mov    %rax,%rdi
    4f38:	e8 a5 01 00 00       	call   50e2 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4f3d:	48 89 d8             	mov    %rbx,%rax
    4f40:	48 89 c7             	mov    %rax,%rdi
    4f43:	e8 b8 f8 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4f48:	49 89 c4             	mov    %rax,%r12
    4f4b:	48 89 df             	mov    %rbx,%rdi
    4f4e:	e8 4d f3 ff ff       	call   42a0 <__cxa_free_exception@plt>
    4f53:	4c 89 e3             	mov    %r12,%rbx
    4f56:	eb 03                	jmp    4f5b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4f58:	48 89 c3             	mov    %rax,%rbx
    4f5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f5f:	48 89 c7             	mov    %rax,%rdi
    4f62:	e8 0d 02 00 00       	call   5174 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f67:	48 89 d8             	mov    %rbx,%rax
    4f6a:	48 89 c7             	mov    %rax,%rdi
    4f6d:	e8 8e f8 ff ff       	call   4800 <_Unwind_Resume@plt>
  return commandBuffers;
    4f72:	90                   	nop
}
    4f73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f77:	48 83 c4 30          	add    $0x30,%rsp
    4f7b:	5b                   	pop    %rbx
    4f7c:	41 5c                	pop    %r12
    4f7e:	5d                   	pop    %rbp
    4f7f:	c3                   	ret

0000000000004f80 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    4f80:	55                   	push   %rbp
    4f81:	48 89 e5             	mov    %rsp,%rbp
    4f84:	41 54                	push   %r12
    4f86:	53                   	push   %rbx
    4f87:	48 83 ec 10          	sub    $0x10,%rsp
    4f8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f8f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    4f93:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4f97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f9b:	48 89 d6             	mov    %rdx,%rsi
    4f9e:	48 89 c7             	mov    %rax,%rdi
    4fa1:	e8 5a f4 ff ff       	call   4400 <vkBeginCommandBuffer@plt>
    4fa6:	85 c0                	test   %eax,%eax
    4fa8:	0f 95 c0             	setne  %al
    4fab:	84 c0                	test   %al,%al
    4fad:	74 51                	je     5000 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    4faf:	bf 10 00 00 00       	mov    $0x10,%edi
    4fb4:	e8 e7 f1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    4fb9:	48 89 c3             	mov    %rax,%rbx
    4fbc:	48 8d 05 7d 5c 01 00 	lea    0x15c7d(%rip),%rax        # 1ac40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    4fc3:	48 89 c6             	mov    %rax,%rsi
    4fc6:	48 89 df             	mov    %rbx,%rdi
    4fc9:	e8 52 f1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    4fce:	48 8b 05 d3 7f 02 00 	mov    0x27fd3(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4fd5:	48 89 c2             	mov    %rax,%rdx
    4fd8:	48 8d 05 61 7d 02 00 	lea    0x27d61(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4fdf:	48 89 c6             	mov    %rax,%rsi
    4fe2:	48 89 df             	mov    %rbx,%rdi
    4fe5:	e8 b6 f7 ff ff       	call   47a0 <__cxa_throw@plt>
    4fea:	49 89 c4             	mov    %rax,%r12
    4fed:	48 89 df             	mov    %rbx,%rdi
    4ff0:	e8 ab f2 ff ff       	call   42a0 <__cxa_free_exception@plt>
    4ff5:	4c 89 e0             	mov    %r12,%rax
    4ff8:	48 89 c7             	mov    %rax,%rdi
    4ffb:	e8 00 f8 ff ff       	call   4800 <_Unwind_Resume@plt>
  }
}
    5000:	90                   	nop
    5001:	48 83 c4 10          	add    $0x10,%rsp
    5005:	5b                   	pop    %rbx
    5006:	41 5c                	pop    %r12
    5008:	5d                   	pop    %rbp
    5009:	c3                   	ret

000000000000500a <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    500a:	55                   	push   %rbp
    500b:	48 89 e5             	mov    %rsp,%rbp
    500e:	41 54                	push   %r12
    5010:	53                   	push   %rbx
    5011:	48 83 ec 10          	sub    $0x10,%rsp
    5015:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    5019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    501d:	48 89 c7             	mov    %rax,%rdi
    5020:	e8 3b f8 ff ff       	call   4860 <vkEndCommandBuffer@plt>
    5025:	85 c0                	test   %eax,%eax
    5027:	0f 95 c0             	setne  %al
    502a:	84 c0                	test   %al,%al
    502c:	74 51                	je     507f <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    502e:	bf 10 00 00 00       	mov    $0x10,%edi
    5033:	e8 68 f1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5038:	48 89 c3             	mov    %rax,%rbx
    503b:	48 8d 05 1e 5c 01 00 	lea    0x15c1e(%rip),%rax        # 1ac60 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5042:	48 89 c6             	mov    %rax,%rsi
    5045:	48 89 df             	mov    %rbx,%rdi
    5048:	e8 d3 f0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    504d:	48 8b 05 54 7f 02 00 	mov    0x27f54(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5054:	48 89 c2             	mov    %rax,%rdx
    5057:	48 8d 05 e2 7c 02 00 	lea    0x27ce2(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    505e:	48 89 c6             	mov    %rax,%rsi
    5061:	48 89 df             	mov    %rbx,%rdi
    5064:	e8 37 f7 ff ff       	call   47a0 <__cxa_throw@plt>
    5069:	49 89 c4             	mov    %rax,%r12
    506c:	48 89 df             	mov    %rbx,%rdi
    506f:	e8 2c f2 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5074:	4c 89 e0             	mov    %r12,%rax
    5077:	48 89 c7             	mov    %rax,%rdi
    507a:	e8 81 f7 ff ff       	call   4800 <_Unwind_Resume@plt>
  }
}
    507f:	90                   	nop
    5080:	48 83 c4 10          	add    $0x10,%rsp
    5084:	5b                   	pop    %rbx
    5085:	41 5c                	pop    %r12
    5087:	5d                   	pop    %rbp
    5088:	c3                   	ret

0000000000005089 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    5089:	55                   	push   %rbp
    508a:	48 89 e5             	mov    %rsp,%rbp
    508d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5091:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5095:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5099:	5d                   	pop    %rbp
    509a:	c3                   	ret

000000000000509b <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    509b:	55                   	push   %rbp
    509c:	48 89 e5             	mov    %rsp,%rbp
    509f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50a7:	5d                   	pop    %rbp
    50a8:	c3                   	ret
    50a9:	90                   	nop

00000000000050aa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    50aa:	55                   	push   %rbp
    50ab:	48 89 e5             	mov    %rsp,%rbp
    50ae:	48 83 ec 10          	sub    $0x10,%rsp
    50b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ba:	48 89 c7             	mov    %rax,%rdi
    50bd:	e8 20 00 00 00       	call   50e2 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    50c2:	90                   	nop
    50c3:	c9                   	leave
    50c4:	c3                   	ret
    50c5:	90                   	nop

00000000000050c6 <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    50c6:	55                   	push   %rbp
    50c7:	48 89 e5             	mov    %rsp,%rbp
    50ca:	48 83 ec 10          	sub    $0x10,%rsp
    50ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50d6:	48 89 c7             	mov    %rax,%rdi
    50d9:	e8 4c 01 00 00       	call   522a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    50de:	90                   	nop
    50df:	c9                   	leave
    50e0:	c3                   	ret
    50e1:	90                   	nop

00000000000050e2 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    50e2:	55                   	push   %rbp
    50e3:	48 89 e5             	mov    %rsp,%rbp
    50e6:	48 83 ec 10          	sub    $0x10,%rsp
    50ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f2:	48 89 c7             	mov    %rax,%rdi
    50f5:	e8 3c 01 00 00       	call   5236 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    50fa:	90                   	nop
    50fb:	c9                   	leave
    50fc:	c3                   	ret
    50fd:	90                   	nop

00000000000050fe <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    50fe:	55                   	push   %rbp
    50ff:	48 89 e5             	mov    %rsp,%rbp
    5102:	53                   	push   %rbx
    5103:	48 83 ec 28          	sub    $0x28,%rsp
    5107:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    510b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    510f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5113:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5117:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    511b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    511f:	48 89 d6             	mov    %rdx,%rsi
    5122:	48 89 c7             	mov    %rax,%rdi
    5125:	e8 17 01 00 00       	call   5241 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    512a:	48 89 c1             	mov    %rax,%rcx
    512d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5131:	48 89 c2             	mov    %rax,%rdx
    5134:	48 89 ce             	mov    %rcx,%rsi
    5137:	48 89 df             	mov    %rbx,%rdi
    513a:	e8 63 01 00 00       	call   52a2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    513f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5143:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5147:	48 89 d6             	mov    %rdx,%rsi
    514a:	48 89 c7             	mov    %rax,%rdi
    514d:	e8 ae 01 00 00       	call   5300 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    5152:	eb 1a                	jmp    516e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    5154:	48 89 c3             	mov    %rax,%rbx
    5157:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    515b:	48 89 c7             	mov    %rax,%rdi
    515e:	e8 79 00 00 00       	call   51dc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5163:	48 89 d8             	mov    %rbx,%rax
    5166:	48 89 c7             	mov    %rax,%rdi
    5169:	e8 92 f6 ff ff       	call   4800 <_Unwind_Resume@plt>
    516e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5172:	c9                   	leave
    5173:	c3                   	ret

0000000000005174 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    5174:	55                   	push   %rbp
    5175:	48 89 e5             	mov    %rsp,%rbp
    5178:	48 83 ec 10          	sub    $0x10,%rsp
    517c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    5180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5184:	48 89 c7             	mov    %rax,%rdi
    5187:	e8 b4 01 00 00       	call   5340 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    518c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    518f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5193:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    519b:	48 8b 00             	mov    (%rax),%rax
    519e:	48 89 ce             	mov    %rcx,%rsi
    51a1:	48 89 c7             	mov    %rax,%rdi
    51a4:	e8 a5 01 00 00       	call   534e <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    51a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ad:	48 89 c7             	mov    %rax,%rdi
    51b0:	e8 27 00 00 00       	call   51dc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    51b5:	90                   	nop
    51b6:	c9                   	leave
    51b7:	c3                   	ret

00000000000051b8 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    51b8:	55                   	push   %rbp
    51b9:	48 89 e5             	mov    %rsp,%rbp
    51bc:	48 83 ec 10          	sub    $0x10,%rsp
    51c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    51c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c8:	48 8b 10             	mov    (%rax),%rdx
    51cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51cf:	48 89 d6             	mov    %rdx,%rsi
    51d2:	48 89 c7             	mov    %rax,%rdi
    51d5:	e8 9e 01 00 00       	call   5378 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    51da:	c9                   	leave
    51db:	c3                   	ret

00000000000051dc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    51dc:	55                   	push   %rbp
    51dd:	48 89 e5             	mov    %rsp,%rbp
    51e0:	48 83 ec 10          	sub    $0x10,%rsp
    51e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    51e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ec:	48 8b 50 10          	mov    0x10(%rax),%rdx
    51f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51f4:	48 8b 00             	mov    (%rax),%rax
    51f7:	48 29 c2             	sub    %rax,%rdx
    51fa:	48 89 d0             	mov    %rdx,%rax
    51fd:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5201:	48 89 c2             	mov    %rax,%rdx
    5204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5208:	48 8b 08             	mov    (%rax),%rcx
    520b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    520f:	48 89 ce             	mov    %rcx,%rsi
    5212:	48 89 c7             	mov    %rax,%rdi
    5215:	e8 96 01 00 00       	call   53b0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    521a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    521e:	48 89 c7             	mov    %rax,%rdi
    5221:	e8 84 fe ff ff       	call   50aa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5226:	90                   	nop
    5227:	c9                   	leave
    5228:	c3                   	ret
    5229:	90                   	nop

000000000000522a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    522a:	55                   	push   %rbp
    522b:	48 89 e5             	mov    %rsp,%rbp
    522e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5232:	90                   	nop
    5233:	5d                   	pop    %rbp
    5234:	c3                   	ret
    5235:	90                   	nop

0000000000005236 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5236:	55                   	push   %rbp
    5237:	48 89 e5             	mov    %rsp,%rbp
    523a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    523e:	90                   	nop
    523f:	5d                   	pop    %rbp
    5240:	c3                   	ret

0000000000005241 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5241:	55                   	push   %rbp
    5242:	48 89 e5             	mov    %rsp,%rbp
    5245:	53                   	push   %rbx
    5246:	48 83 ec 28          	sub    $0x28,%rsp
    524a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    524e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5252:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5256:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    525a:	48 89 d6             	mov    %rdx,%rsi
    525d:	48 89 c7             	mov    %rax,%rdi
    5260:	e8 25 01 00 00       	call   538a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5265:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5269:	48 89 c7             	mov    %rax,%rdi
    526c:	e8 74 01 00 00       	call   53e5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5271:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5275:	0f 92 c3             	setb   %bl
    5278:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    527c:	48 89 c7             	mov    %rax,%rdi
    527f:	e8 5e fe ff ff       	call   50e2 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5284:	84 db                	test   %bl,%bl
    5286:	74 0f                	je     5297 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5288:	48 8d 05 f1 59 01 00 	lea    0x159f1(%rip),%rax        # 1ac80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x70>
    528f:	48 89 c7             	mov    %rax,%rdi
    5292:	e8 29 ef ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    5297:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    529b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    529f:	c9                   	leave
    52a0:	c3                   	ret
    52a1:	90                   	nop

00000000000052a2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    52a2:	55                   	push   %rbp
    52a3:	48 89 e5             	mov    %rsp,%rbp
    52a6:	53                   	push   %rbx
    52a7:	48 83 ec 28          	sub    $0x28,%rsp
    52ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    52af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    52b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    52b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    52bf:	48 89 d6             	mov    %rdx,%rsi
    52c2:	48 89 c7             	mov    %rax,%rdi
    52c5:	e8 5e 01 00 00       	call   5428 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    52ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    52ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52d2:	48 89 d6             	mov    %rdx,%rsi
    52d5:	48 89 c7             	mov    %rax,%rdi
    52d8:	e8 7d 01 00 00       	call   545a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    52dd:	eb 1a                	jmp    52f9 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    52df:	48 89 c3             	mov    %rax,%rbx
    52e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52e6:	48 89 c7             	mov    %rax,%rdi
    52e9:	e8 bc fd ff ff       	call   50aa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    52ee:	48 89 d8             	mov    %rbx,%rax
    52f1:	48 89 c7             	mov    %rax,%rdi
    52f4:	e8 07 f5 ff ff       	call   4800 <_Unwind_Resume@plt>
    52f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52fd:	c9                   	leave
    52fe:	c3                   	ret
    52ff:	90                   	nop

0000000000005300 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5300:	55                   	push   %rbp
    5301:	48 89 e5             	mov    %rsp,%rbp
    5304:	48 83 ec 10          	sub    $0x10,%rsp
    5308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    530c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5314:	48 89 c7             	mov    %rax,%rdi
    5317:	e8 24 00 00 00       	call   5340 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    531c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    531f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5323:	48 8b 00             	mov    (%rax),%rax
    5326:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    532a:	48 89 ce             	mov    %rcx,%rsi
    532d:	48 89 c7             	mov    %rax,%rdi
    5330:	e8 7b 01 00 00       	call   54b0 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5335:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5339:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    533d:	90                   	nop
    533e:	c9                   	leave
    533f:	c3                   	ret

0000000000005340 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5340:	55                   	push   %rbp
    5341:	48 89 e5             	mov    %rsp,%rbp
    5344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    534c:	5d                   	pop    %rbp
    534d:	c3                   	ret

000000000000534e <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    534e:	55                   	push   %rbp
    534f:	48 89 e5             	mov    %rsp,%rbp
    5352:	48 83 ec 20          	sub    $0x20,%rsp
    5356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    535a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    535e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5362:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    536a:	48 89 d6             	mov    %rdx,%rsi
    536d:	48 89 c7             	mov    %rax,%rdi
    5370:	e8 64 01 00 00       	call   54d9 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    5375:	90                   	nop
    5376:	c9                   	leave
    5377:	c3                   	ret

0000000000005378 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5378:	55                   	push   %rbp
    5379:	48 89 e5             	mov    %rsp,%rbp
    537c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5380:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5384:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5388:	5d                   	pop    %rbp
    5389:	c3                   	ret

000000000000538a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    538a:	55                   	push   %rbp
    538b:	48 89 e5             	mov    %rsp,%rbp
    538e:	48 83 ec 10          	sub    $0x10,%rsp
    5392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5396:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    539a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    539e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a2:	48 89 d6             	mov    %rdx,%rsi
    53a5:	48 89 c7             	mov    %rax,%rdi
    53a8:	e8 53 01 00 00       	call   5500 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    53ad:	90                   	nop
    53ae:	c9                   	leave
    53af:	c3                   	ret

00000000000053b0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    53b0:	55                   	push   %rbp
    53b1:	48 89 e5             	mov    %rsp,%rbp
    53b4:	48 83 ec 20          	sub    $0x20,%rsp
    53b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    53c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    53c9:	74 17                	je     53e2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    53cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    53d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    53d7:	48 89 ce             	mov    %rcx,%rsi
    53da:	48 89 c7             	mov    %rax,%rdi
    53dd:	e8 2d 01 00 00       	call   550f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    53e2:	90                   	nop
    53e3:	c9                   	leave
    53e4:	c3                   	ret

00000000000053e5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    53e5:	55                   	push   %rbp
    53e6:	48 89 e5             	mov    %rsp,%rbp
    53e9:	48 83 ec 20          	sub    $0x20,%rsp
    53ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    53f1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    53f8:	ff ff 0f 
    53fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    53ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5403:	48 89 c7             	mov    %rax,%rdi
    5406:	e8 32 01 00 00       	call   553d <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    540b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    540f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5413:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5417:	48 89 d6             	mov    %rdx,%rsi
    541a:	48 89 c7             	mov    %rax,%rdi
    541d:	e8 35 01 00 00       	call   5557 <_ZSt3minImERKT_S2_S2_>
    5422:	48 8b 00             	mov    (%rax),%rax
      }
    5425:	c9                   	leave
    5426:	c3                   	ret
    5427:	90                   	nop

0000000000005428 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5428:	55                   	push   %rbp
    5429:	48 89 e5             	mov    %rsp,%rbp
    542c:	48 83 ec 10          	sub    $0x10,%rsp
    5430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5434:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5438:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    543c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5440:	48 89 d6             	mov    %rdx,%rsi
    5443:	48 89 c7             	mov    %rax,%rdi
    5446:	e8 3f ff ff ff       	call   538a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    544b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    544f:	48 89 c7             	mov    %rax,%rdi
    5452:	e8 2b 01 00 00       	call   5582 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5457:	90                   	nop
    5458:	c9                   	leave
    5459:	c3                   	ret

000000000000545a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    545a:	55                   	push   %rbp
    545b:	48 89 e5             	mov    %rsp,%rbp
    545e:	48 83 ec 10          	sub    $0x10,%rsp
    5462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5466:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    546a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    546e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5472:	48 89 d6             	mov    %rdx,%rsi
    5475:	48 89 c7             	mov    %rax,%rdi
    5478:	e8 33 01 00 00       	call   55b0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    547d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5481:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5488:	48 8b 10             	mov    (%rax),%rdx
    548b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5497:	48 8b 00             	mov    (%rax),%rax
    549a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    549e:	48 c1 e2 03          	shl    $0x3,%rdx
    54a2:	48 01 c2             	add    %rax,%rdx
    54a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54a9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    54ad:	90                   	nop
    54ae:	c9                   	leave
    54af:	c3                   	ret

00000000000054b0 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    54b0:	55                   	push   %rbp
    54b1:	48 89 e5             	mov    %rsp,%rbp
    54b4:	48 83 ec 20          	sub    $0x20,%rsp
    54b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    54c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    54c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54cc:	48 89 d6             	mov    %rdx,%rsi
    54cf:	48 89 c7             	mov    %rax,%rdi
    54d2:	e8 0c 01 00 00       	call   55e3 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    54d7:	c9                   	leave
    54d8:	c3                   	ret

00000000000054d9 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    54d9:	55                   	push   %rbp
    54da:	48 89 e5             	mov    %rsp,%rbp
    54dd:	48 83 ec 10          	sub    $0x10,%rsp
    54e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    54e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    54ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f1:	48 89 d6             	mov    %rdx,%rsi
    54f4:	48 89 c7             	mov    %rax,%rdi
    54f7:	e8 10 01 00 00       	call   560c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    54fc:	90                   	nop
    54fd:	c9                   	leave
    54fe:	c3                   	ret
    54ff:	90                   	nop

0000000000005500 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5500:	55                   	push   %rbp
    5501:	48 89 e5             	mov    %rsp,%rbp
    5504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    550c:	90                   	nop
    550d:	5d                   	pop    %rbp
    550e:	c3                   	ret

000000000000550f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    550f:	55                   	push   %rbp
    5510:	48 89 e5             	mov    %rsp,%rbp
    5513:	48 83 ec 20          	sub    $0x20,%rsp
    5517:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    551b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    551f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5523:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5527:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    552b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    552f:	48 89 ce             	mov    %rcx,%rsi
    5532:	48 89 c7             	mov    %rax,%rdi
    5535:	e8 e2 00 00 00       	call   561c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    553a:	90                   	nop
    553b:	c9                   	leave
    553c:	c3                   	ret

000000000000553d <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    553d:	55                   	push   %rbp
    553e:	48 89 e5             	mov    %rsp,%rbp
    5541:	48 83 ec 10          	sub    $0x10,%rsp
    5545:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    554d:	48 89 c7             	mov    %rax,%rdi
    5550:	e8 f9 00 00 00       	call   564e <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    5555:	c9                   	leave
    5556:	c3                   	ret

0000000000005557 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    5557:	55                   	push   %rbp
    5558:	48 89 e5             	mov    %rsp,%rbp
    555b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    555f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    5563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5567:	48 8b 10             	mov    (%rax),%rdx
    556a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    556e:	48 8b 00             	mov    (%rax),%rax
    5571:	48 39 c2             	cmp    %rax,%rdx
    5574:	73 06                	jae    557c <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    5576:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    557a:	eb 04                	jmp    5580 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    557c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5580:	5d                   	pop    %rbp
    5581:	c3                   	ret

0000000000005582 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5582:	55                   	push   %rbp
    5583:	48 89 e5             	mov    %rsp,%rbp
    5586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    558a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    558e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5599:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    55a0:	00 
    55a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    55ac:	00 
	{ }
    55ad:	90                   	nop
    55ae:	5d                   	pop    %rbp
    55af:	c3                   	ret

00000000000055b0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    55b0:	55                   	push   %rbp
    55b1:	48 89 e5             	mov    %rsp,%rbp
    55b4:	48 83 ec 10          	sub    $0x10,%rsp
    55b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    55c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    55c5:	74 15                	je     55dc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    55c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55cb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    55cf:	48 89 d6             	mov    %rdx,%rsi
    55d2:	48 89 c7             	mov    %rax,%rdi
    55d5:	e8 8e 00 00 00       	call   5668 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    55da:	eb 05                	jmp    55e1 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    55dc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    55e1:	c9                   	leave
    55e2:	c3                   	ret

00000000000055e3 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    55e3:	55                   	push   %rbp
    55e4:	48 89 e5             	mov    %rsp,%rbp
    55e7:	48 83 ec 20          	sub    $0x20,%rsp
    55eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    55f3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    55f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    55fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55ff:	48 89 d6             	mov    %rdx,%rsi
    5602:	48 89 c7             	mov    %rax,%rdi
    5605:	e8 88 00 00 00       	call   5692 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    560a:	c9                   	leave
    560b:	c3                   	ret

000000000000560c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    560c:	55                   	push   %rbp
    560d:	48 89 e5             	mov    %rsp,%rbp
    5610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5614:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5618:	90                   	nop
    5619:	5d                   	pop    %rbp
    561a:	c3                   	ret
    561b:	90                   	nop

000000000000561c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    561c:	55                   	push   %rbp
    561d:	48 89 e5             	mov    %rsp,%rbp
    5620:	48 83 ec 20          	sub    $0x20,%rsp
    5624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    562c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5630:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5634:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    563b:	00 
    563c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5640:	48 89 d6             	mov    %rdx,%rsi
    5643:	48 89 c7             	mov    %rax,%rdi
    5646:	e8 c5 ed ff ff       	call   4410 <_ZdlPvm@plt>
      }
    564b:	c9                   	leave
    564c:	c3                   	ret
    564d:	90                   	nop

000000000000564e <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    564e:	55                   	push   %rbp
    564f:	48 89 e5             	mov    %rsp,%rbp
    5652:	48 83 ec 10          	sub    $0x10,%rsp
    5656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    565a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    565e:	48 89 c7             	mov    %rax,%rdi
    5661:	e8 8a 00 00 00       	call   56f0 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    5666:	c9                   	leave
    5667:	c3                   	ret

0000000000005668 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    5668:	55                   	push   %rbp
    5669:	48 89 e5             	mov    %rsp,%rbp
    566c:	48 83 ec 10          	sub    $0x10,%rsp
    5670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5674:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5678:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    567c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5680:	ba 00 00 00 00       	mov    $0x0,%edx
    5685:	48 89 ce             	mov    %rcx,%rsi
    5688:	48 89 c7             	mov    %rax,%rdi
    568b:	e8 74 00 00 00       	call   5704 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5690:	c9                   	leave
    5691:	c3                   	ret

0000000000005692 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5692:	55                   	push   %rbp
    5693:	48 89 e5             	mov    %rsp,%rbp
    5696:	48 83 ec 20          	sub    $0x20,%rsp
    569a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    569e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    56a2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    56a7:	74 40                	je     56e9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    56a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56ad:	48 89 c7             	mov    %rax,%rdi
    56b0:	e8 b0 00 00 00       	call   5765 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    56b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    56b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56bd:	48 89 c7             	mov    %rax,%rdi
    56c0:	e8 ae 00 00 00       	call   5773 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    56c5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    56ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    56ce:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    56d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    56d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56da:	48 89 ce             	mov    %rcx,%rsi
    56dd:	48 89 c7             	mov    %rax,%rdi
    56e0:	e8 b5 00 00 00       	call   579a <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    56e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    56e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    56ed:	c9                   	leave
    56ee:	c3                   	ret
    56ef:	90                   	nop

00000000000056f0 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    56f0:	55                   	push   %rbp
    56f1:	48 89 e5             	mov    %rsp,%rbp
    56f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    56f8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    56ff:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5702:	5d                   	pop    %rbp
    5703:	c3                   	ret

0000000000005704 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    5704:	55                   	push   %rbp
    5705:	48 89 e5             	mov    %rsp,%rbp
    5708:	48 83 ec 20          	sub    $0x20,%rsp
    570c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5710:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5714:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    571c:	48 89 c7             	mov    %rax,%rdi
    571f:	e8 cc ff ff ff       	call   56f0 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    5724:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5728:	0f 92 c0             	setb   %al
    572b:	0f b6 c0             	movzbl %al,%eax
    572e:	48 85 c0             	test   %rax,%rax
    5731:	0f 95 c0             	setne  %al
    5734:	84 c0                	test   %al,%al
    5736:	74 1a                	je     5752 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5738:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    573f:	ff ff 1f 
    5742:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5746:	73 05                	jae    574d <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5748:	e8 83 eb ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    574d:	e8 ae e9 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5752:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5756:	48 c1 e0 03          	shl    $0x3,%rax
    575a:	48 89 c7             	mov    %rax,%rdi
    575d:	e8 8e ec ff ff       	call   43f0 <_Znwm@plt>
    5762:	90                   	nop
      }
    5763:	c9                   	leave
    5764:	c3                   	ret

0000000000005765 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5765:	55                   	push   %rbp
    5766:	48 89 e5             	mov    %rsp,%rbp
    5769:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    576d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5771:	5d                   	pop    %rbp
    5772:	c3                   	ret

0000000000005773 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5773:	55                   	push   %rbp
    5774:	48 89 e5             	mov    %rsp,%rbp
    5777:	48 83 ec 10          	sub    $0x10,%rsp
    577b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    577f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5783:	48 89 c6             	mov    %rax,%rsi
    5786:	bf 08 00 00 00       	mov    $0x8,%edi
    578b:	e8 f9 f8 ff ff       	call   5089 <_ZnwmPv>
    5790:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    5797:	90                   	nop
    5798:	c9                   	leave
    5799:	c3                   	ret

000000000000579a <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    579a:	55                   	push   %rbp
    579b:	48 89 e5             	mov    %rsp,%rbp
    579e:	48 83 ec 20          	sub    $0x20,%rsp
    57a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    57ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    57b2:	48 89 c7             	mov    %rax,%rdi
    57b5:	e8 24 00 00 00       	call   57de <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    57ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57be:	48 89 c7             	mov    %rax,%rdi
    57c1:	e8 d5 f8 ff ff       	call   509b <_ZSt17__size_to_integerm>
    57c6:	48 89 c1             	mov    %rax,%rcx
    57c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    57d1:	48 89 ce             	mov    %rcx,%rsi
    57d4:	48 89 c7             	mov    %rax,%rdi
    57d7:	e8 0d 00 00 00       	call   57e9 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    57dc:	c9                   	leave
    57dd:	c3                   	ret

00000000000057de <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    57de:	55                   	push   %rbp
    57df:	48 89 e5             	mov    %rsp,%rbp
    57e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    57e6:	90                   	nop
    57e7:	5d                   	pop    %rbp
    57e8:	c3                   	ret

00000000000057e9 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    57e9:	55                   	push   %rbp
    57ea:	48 89 e5             	mov    %rsp,%rbp
    57ed:	48 83 ec 20          	sub    $0x20,%rsp
    57f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    57fd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5802:	75 06                	jne    580a <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5808:	eb 3a                	jmp    5844 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    580a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    580e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5815:	00 
    5816:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    581a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    581e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5826:	48 89 ce             	mov    %rcx,%rsi
    5829:	48 89 c7             	mov    %rax,%rdi
    582c:	e8 15 00 00 00       	call   5846 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5831:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5835:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    583c:	00 
    583d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5841:	48 01 d0             	add    %rdx,%rax
    }
    5844:	c9                   	leave
    5845:	c3                   	ret

0000000000005846 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5846:	55                   	push   %rbp
    5847:	48 89 e5             	mov    %rsp,%rbp
    584a:	48 83 ec 20          	sub    $0x20,%rsp
    584e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5852:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5856:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    585a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    585e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5866:	48 89 ce             	mov    %rcx,%rsi
    5869:	48 89 c7             	mov    %rax,%rdi
    586c:	e8 03 00 00 00       	call   5874 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5871:	90                   	nop
    5872:	c9                   	leave
    5873:	c3                   	ret

0000000000005874 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5874:	55                   	push   %rbp
    5875:	48 89 e5             	mov    %rsp,%rbp
    5878:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    587c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5880:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    5884:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5888:	48 8b 00             	mov    (%rax),%rax
    588b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    588f:	eb 10                	jmp    58a1 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5895:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5899:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    589c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    58a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58a5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    58a9:	75 e6                	jne    5891 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    58ab:	90                   	nop
    58ac:	90                   	nop
    58ad:	5d                   	pop    %rbp
    58ae:	c3                   	ret

00000000000058af <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    58af:	55                   	push   %rbp
    58b0:	48 89 e5             	mov    %rsp,%rbp
    58b3:	48 83 ec 20          	sub    $0x20,%rsp
    58b7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    58ba:	89 75 f8             	mov    %esi,-0x8(%rbp)
    58bd:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    58c1:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    58c5:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    58c9:	be 00 00 00 00       	mov    $0x0,%esi
    58ce:	bf 01 20 02 00       	mov    $0x22001,%edi
    58d3:	e8 68 ea ff ff       	call   4340 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
  return glfwCreateWindow(width, height, title, monitor, share);
    58d8:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    58dc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    58e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58e4:	8b 75 f8             	mov    -0x8(%rbp),%esi
    58e7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    58ea:	49 89 f8             	mov    %rdi,%r8
    58ed:	89 c7                	mov    %eax,%edi
    58ef:	e8 0c ee ff ff       	call   4700 <glfwCreateWindow@plt>
}
    58f4:	c9                   	leave
    58f5:	c3                   	ret

00000000000058f6 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    58f6:	55                   	push   %rbp
    58f7:	48 89 e5             	mov    %rsp,%rbp
    58fa:	41 54                	push   %r12
    58fc:	53                   	push   %rbx
    58fd:	48 83 ec 20          	sub    $0x20,%rsp
    5901:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5905:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    5909:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    590d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5911:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5915:	48 89 ce             	mov    %rcx,%rsi
    5918:	48 89 c7             	mov    %rax,%rdi
    591b:	e8 30 ec ff ff       	call   4550 <vkCreateInstance@plt>
    5920:	85 c0                	test   %eax,%eax
    5922:	0f 95 c0             	setne  %al
    5925:	84 c0                	test   %al,%al
    5927:	74 3b                	je     5964 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    5929:	bf 10 00 00 00       	mov    $0x10,%edi
    592e:	e8 6d e8 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5933:	48 89 c3             	mov    %rax,%rbx
    5936:	48 8d 05 53 59 01 00 	lea    0x15953(%rip),%rax        # 1b290 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    593d:	48 89 c6             	mov    %rax,%rsi
    5940:	48 89 df             	mov    %rbx,%rdi
    5943:	e8 d8 e7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5948:	48 8b 05 59 76 02 00 	mov    0x27659(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    594f:	48 89 c2             	mov    %rax,%rdx
    5952:	48 8d 05 e7 73 02 00 	lea    0x273e7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5959:	48 89 c6             	mov    %rax,%rsi
    595c:	48 89 df             	mov    %rbx,%rdi
    595f:	e8 3c ee ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return instance;
    5964:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5968:	eb 16                	jmp    5980 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    596a:	49 89 c4             	mov    %rax,%r12
    596d:	48 89 df             	mov    %rbx,%rdi
    5970:	e8 2b e9 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5975:	4c 89 e0             	mov    %r12,%rax
    5978:	48 89 c7             	mov    %rax,%rdi
    597b:	e8 80 ee ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5980:	48 83 c4 20          	add    $0x20,%rsp
    5984:	5b                   	pop    %rbx
    5985:	41 5c                	pop    %r12
    5987:	5d                   	pop    %rbp
    5988:	c3                   	ret

0000000000005989 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    5989:	55                   	push   %rbp
    598a:	48 89 e5             	mov    %rsp,%rbp
    598d:	41 54                	push   %r12
    598f:	53                   	push   %rbx
    5990:	48 83 ec 30          	sub    $0x30,%rsp
    5994:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5998:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    599c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    59a0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    59a4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    59a8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    59ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59b0:	48 89 c7             	mov    %rax,%rdi
    59b3:	e8 f8 ec ff ff       	call   46b0 <vkCreateDevice@plt>
    59b8:	85 c0                	test   %eax,%eax
    59ba:	0f 95 c0             	setne  %al
    59bd:	84 c0                	test   %al,%al
    59bf:	74 3b                	je     59fc <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    59c1:	bf 10 00 00 00       	mov    $0x10,%edi
    59c6:	e8 d5 e7 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    59cb:	48 89 c3             	mov    %rax,%rbx
    59ce:	48 8d 05 db 58 01 00 	lea    0x158db(%rip),%rax        # 1b2b0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    59d5:	48 89 c6             	mov    %rax,%rsi
    59d8:	48 89 df             	mov    %rbx,%rdi
    59db:	e8 40 e7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    59e0:	48 8b 05 c1 75 02 00 	mov    0x275c1(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    59e7:	48 89 c2             	mov    %rax,%rdx
    59ea:	48 8d 05 4f 73 02 00 	lea    0x2734f(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    59f1:	48 89 c6             	mov    %rax,%rsi
    59f4:	48 89 df             	mov    %rbx,%rdi
    59f7:	e8 a4 ed ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return device;
    59fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a00:	eb 16                	jmp    5a18 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    5a02:	49 89 c4             	mov    %rax,%r12
    5a05:	48 89 df             	mov    %rbx,%rdi
    5a08:	e8 93 e8 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5a0d:	4c 89 e0             	mov    %r12,%rax
    5a10:	48 89 c7             	mov    %rax,%rdi
    5a13:	e8 e8 ed ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5a18:	48 83 c4 30          	add    $0x30,%rsp
    5a1c:	5b                   	pop    %rbx
    5a1d:	41 5c                	pop    %r12
    5a1f:	5d                   	pop    %rbp
    5a20:	c3                   	ret

0000000000005a21 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    5a21:	55                   	push   %rbp
    5a22:	48 89 e5             	mov    %rsp,%rbp
    5a25:	41 54                	push   %r12
    5a27:	53                   	push   %rbx
    5a28:	48 83 ec 30          	sub    $0x30,%rsp
    5a2c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5a30:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5a34:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    5a38:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5a3c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5a40:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5a44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a48:	48 89 c7             	mov    %rax,%rdi
    5a4b:	e8 90 ec ff ff       	call   46e0 <glfwCreateWindowSurface@plt>
    5a50:	85 c0                	test   %eax,%eax
    5a52:	0f 95 c0             	setne  %al
    5a55:	84 c0                	test   %al,%al
    5a57:	74 3b                	je     5a94 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    5a59:	bf 10 00 00 00       	mov    $0x10,%edi
    5a5e:	e8 3d e7 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5a63:	48 89 c3             	mov    %rax,%rbx
    5a66:	48 8d 05 6b 58 01 00 	lea    0x1586b(%rip),%rax        # 1b2d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5a6d:	48 89 c6             	mov    %rax,%rsi
    5a70:	48 89 df             	mov    %rbx,%rdi
    5a73:	e8 a8 e6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5a78:	48 8b 05 29 75 02 00 	mov    0x27529(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a7f:	48 89 c2             	mov    %rax,%rdx
    5a82:	48 8d 05 b7 72 02 00 	lea    0x272b7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a89:	48 89 c6             	mov    %rax,%rsi
    5a8c:	48 89 df             	mov    %rbx,%rdi
    5a8f:	e8 0c ed ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return surface;
    5a94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a98:	eb 16                	jmp    5ab0 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    5a9a:	49 89 c4             	mov    %rax,%r12
    5a9d:	48 89 df             	mov    %rbx,%rdi
    5aa0:	e8 fb e7 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5aa5:	4c 89 e0             	mov    %r12,%rax
    5aa8:	48 89 c7             	mov    %rax,%rdi
    5aab:	e8 50 ed ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5ab0:	48 83 c4 30          	add    $0x30,%rsp
    5ab4:	5b                   	pop    %rbx
    5ab5:	41 5c                	pop    %r12
    5ab7:	5d                   	pop    %rbp
    5ab8:	c3                   	ret

0000000000005ab9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    5ab9:	55                   	push   %rbp
    5aba:	48 89 e5             	mov    %rsp,%rbp
    5abd:	41 54                	push   %r12
    5abf:	53                   	push   %rbx
    5ac0:	48 83 ec 30          	sub    $0x30,%rsp
    5ac4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ac8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5acc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5ad0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5ad7:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    5ad8:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5adc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5ae0:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5ae4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ae8:	48 89 c7             	mov    %rax,%rdi
    5aeb:	e8 30 ea ff ff       	call   4520 <vkCreateSwapchainKHR@plt>
    5af0:	85 c0                	test   %eax,%eax
    5af2:	0f 95 c0             	setne  %al
    5af5:	84 c0                	test   %al,%al
    5af7:	74 3b                	je     5b34 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    5af9:	bf 10 00 00 00       	mov    $0x10,%edi
    5afe:	e8 9d e6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5b03:	48 89 c3             	mov    %rax,%rbx
    5b06:	48 8d 05 ec 57 01 00 	lea    0x157ec(%rip),%rax        # 1b2f9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    5b0d:	48 89 c6             	mov    %rax,%rsi
    5b10:	48 89 df             	mov    %rbx,%rdi
    5b13:	e8 08 e6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5b18:	48 8b 05 89 74 02 00 	mov    0x27489(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b1f:	48 89 c2             	mov    %rax,%rdx
    5b22:	48 8d 05 17 72 02 00 	lea    0x27217(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b29:	48 89 c6             	mov    %rax,%rsi
    5b2c:	48 89 df             	mov    %rbx,%rdi
    5b2f:	e8 6c ec ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return swapchain;
    5b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b38:	eb 16                	jmp    5b50 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    5b3a:	49 89 c4             	mov    %rax,%r12
    5b3d:	48 89 df             	mov    %rbx,%rdi
    5b40:	e8 5b e7 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5b45:	4c 89 e0             	mov    %r12,%rax
    5b48:	48 89 c7             	mov    %rax,%rdi
    5b4b:	e8 b0 ec ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5b50:	48 83 c4 30          	add    $0x30,%rsp
    5b54:	5b                   	pop    %rbx
    5b55:	41 5c                	pop    %r12
    5b57:	5d                   	pop    %rbp
    5b58:	c3                   	ret

0000000000005b59 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    5b59:	55                   	push   %rbp
    5b5a:	48 89 e5             	mov    %rsp,%rbp
    5b5d:	41 54                	push   %r12
    5b5f:	53                   	push   %rbx
    5b60:	48 83 ec 30          	sub    $0x30,%rsp
    5b64:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5b68:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5b6c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5b70:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5b74:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5b78:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5b7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b80:	48 89 c7             	mov    %rax,%rdi
    5b83:	e8 b8 e8 ff ff       	call   4440 <vkCreateImageView@plt>
    5b88:	85 c0                	test   %eax,%eax
    5b8a:	0f 95 c0             	setne  %al
    5b8d:	84 c0                	test   %al,%al
    5b8f:	74 3b                	je     5bcc <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5b91:	bf 10 00 00 00       	mov    $0x10,%edi
    5b96:	e8 05 e6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5b9b:	48 89 c3             	mov    %rax,%rbx
    5b9e:	48 8d 05 73 57 01 00 	lea    0x15773(%rip),%rax        # 1b318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    5ba5:	48 89 c6             	mov    %rax,%rsi
    5ba8:	48 89 df             	mov    %rbx,%rdi
    5bab:	e8 70 e5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5bb0:	48 8b 05 f1 73 02 00 	mov    0x273f1(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5bb7:	48 89 c2             	mov    %rax,%rdx
    5bba:	48 8d 05 7f 71 02 00 	lea    0x2717f(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5bc1:	48 89 c6             	mov    %rax,%rsi
    5bc4:	48 89 df             	mov    %rbx,%rdi
    5bc7:	e8 d4 eb ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return imageView;
    5bcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5bd0:	eb 16                	jmp    5be8 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5bd2:	49 89 c4             	mov    %rax,%r12
    5bd5:	48 89 df             	mov    %rbx,%rdi
    5bd8:	e8 c3 e6 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5bdd:	4c 89 e0             	mov    %r12,%rax
    5be0:	48 89 c7             	mov    %rax,%rdi
    5be3:	e8 18 ec ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5be8:	48 83 c4 30          	add    $0x30,%rsp
    5bec:	5b                   	pop    %rbx
    5bed:	41 5c                	pop    %r12
    5bef:	5d                   	pop    %rbp
    5bf0:	c3                   	ret

0000000000005bf1 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    5bf1:	55                   	push   %rbp
    5bf2:	48 89 e5             	mov    %rsp,%rbp
    5bf5:	41 54                	push   %r12
    5bf7:	53                   	push   %rbx
    5bf8:	48 83 ec 60          	sub    $0x60,%rsp
    5bfc:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    5c00:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    5c04:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    5c08:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5c0c:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    5c10:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    5c14:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    5c19:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    5c20:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5c24:	48 89 c7             	mov    %rax,%rdi
    5c27:	e8 80 06 00 00       	call   62ac <_ZNKSt6vectorIcSaIcEE4sizeEv>
    5c2c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    5c30:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5c34:	48 89 c7             	mov    %rax,%rdi
    5c37:	e8 90 06 00 00       	call   62cc <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    5c3c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    5c40:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5c47:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5c48:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5c4c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5c50:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5c54:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5c58:	48 89 c7             	mov    %rax,%rdi
    5c5b:	e8 80 e6 ff ff       	call   42e0 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5c60:	85 c0                	test   %eax,%eax
    5c62:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5c65:	84 c0                	test   %al,%al
    5c67:	74 3b                	je     5ca4 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5c69:	bf 10 00 00 00       	mov    $0x10,%edi
    5c6e:	e8 2d e5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5c73:	48 89 c3             	mov    %rax,%rbx
    5c76:	48 8d 05 bb 56 01 00 	lea    0x156bb(%rip),%rax        # 1b338 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5c7d:	48 89 c6             	mov    %rax,%rsi
    5c80:	48 89 df             	mov    %rbx,%rdi
    5c83:	e8 98 e4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5c88:	48 8b 05 19 73 02 00 	mov    0x27319(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5c8f:	48 89 c2             	mov    %rax,%rdx
    5c92:	48 8d 05 a7 70 02 00 	lea    0x270a7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5c99:	48 89 c6             	mov    %rax,%rsi
    5c9c:	48 89 df             	mov    %rbx,%rdi
    5c9f:	e8 fc ea ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return shaderModule;
    5ca4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5ca8:	eb 16                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5caa:	49 89 c4             	mov    %rax,%r12
    5cad:	48 89 df             	mov    %rbx,%rdi
    5cb0:	e8 eb e5 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5cb5:	4c 89 e0             	mov    %r12,%rax
    5cb8:	48 89 c7             	mov    %rax,%rdi
    5cbb:	e8 40 eb ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5cc0:	48 83 c4 60          	add    $0x60,%rsp
    5cc4:	5b                   	pop    %rbx
    5cc5:	41 5c                	pop    %r12
    5cc7:	5d                   	pop    %rbp
    5cc8:	c3                   	ret

0000000000005cc9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5cc9:	55                   	push   %rbp
    5cca:	48 89 e5             	mov    %rsp,%rbp
    5ccd:	41 54                	push   %r12
    5ccf:	53                   	push   %rbx
    5cd0:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5cd7:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5cde:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5ce5:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5cec:	be 04 00 00 00       	mov    $0x4,%esi
    5cf1:	bf 02 00 00 00       	mov    $0x2,%edi
    5cf6:	e8 9e 05 00 00       	call   6299 <_ZStorSt13_Ios_OpenmodeS_>
    5cfb:	89 c2                	mov    %eax,%edx
    5cfd:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5d04:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d0b:	48 89 ce             	mov    %rcx,%rsi
    5d0e:	48 89 c7             	mov    %rax,%rdi
    5d11:	e8 3a ea ff ff       	call   4750 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5d16:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d1d:	48 89 c7             	mov    %rax,%rdi
    5d20:	e8 1b ea ff ff       	call   4740 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5d25:	83 f0 01             	xor    $0x1,%eax
    5d28:	84 c0                	test   %al,%al
    5d2a:	74 61                	je     5d8d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5d2c:	bf 10 00 00 00       	mov    $0x10,%edi
    5d31:	e8 6a e4 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5d36:	48 89 c3             	mov    %rax,%rbx
    5d39:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d3d:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5d44:	48 8d 0d 0d 56 01 00 	lea    0x1560d(%rip),%rcx        # 1b358 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5d4b:	48 89 ce             	mov    %rcx,%rsi
    5d4e:	48 89 c7             	mov    %rax,%rdi
    5d51:	e8 9a 05 00 00       	call   62f0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5d56:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d5a:	48 89 c6             	mov    %rax,%rsi
    5d5d:	48 89 df             	mov    %rbx,%rdi
    5d60:	e8 fb e9 ff ff       	call   4760 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5d65:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d69:	48 89 c7             	mov    %rax,%rdi
    5d6c:	e8 cf e4 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5d71:	48 8b 05 30 72 02 00 	mov    0x27230(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d78:	48 89 c2             	mov    %rax,%rdx
    5d7b:	48 8d 05 be 6f 02 00 	lea    0x26fbe(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d82:	48 89 c6             	mov    %rax,%rsi
    5d85:	48 89 df             	mov    %rbx,%rdi
    5d88:	e8 13 ea ff ff       	call   47a0 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5d8d:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d94:	48 89 c7             	mov    %rax,%rdi
    5d97:	e8 44 ea ff ff       	call   47e0 <_ZNSi5tellgEv@plt>
    5d9c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5da0:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5da4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5da8:	48 89 c7             	mov    %rax,%rdi
    5dab:	e8 42 06 00 00       	call   63f2 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5db0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5db4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5db8:	48 89 c7             	mov    %rax,%rdi
    5dbb:	e8 50 ea ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    5dc0:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5dc4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5dc8:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5dcf:	48 89 ce             	mov    %rcx,%rsi
    5dd2:	48 89 c7             	mov    %rax,%rdi
    5dd5:	e8 2a 06 00 00       	call   6404 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5dda:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5dde:	48 89 c7             	mov    %rax,%rdi
    5de1:	e8 ba e6 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5de6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5dea:	be 00 00 00 00       	mov    $0x0,%esi
    5def:	48 89 c7             	mov    %rax,%rdi
    5df2:	e8 c7 06 00 00       	call   64be <_ZNSt4fposI11__mbstate_tEC1El>
    5df7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5dfb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5dff:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e06:	48 89 ce             	mov    %rcx,%rsi
    5e09:	48 89 c7             	mov    %rax,%rdi
    5e0c:	e8 9f e7 ff ff       	call   45b0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5e11:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5e15:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5e1c:	48 89 c7             	mov    %rax,%rdi
    5e1f:	e8 ca 06 00 00       	call   64ee <_ZNSt6vectorIcSaIcEE4dataEv>
    5e24:	48 89 c1             	mov    %rax,%rcx
    5e27:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e2e:	48 89 da             	mov    %rbx,%rdx
    5e31:	48 89 ce             	mov    %rcx,%rsi
    5e34:	48 89 c7             	mov    %rax,%rdi
    5e37:	e8 64 e7 ff ff       	call   45a0 <_ZNSi4readEPcl@plt>
  file.close();
    5e3c:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e43:	48 89 c7             	mov    %rax,%rdi
    5e46:	e8 35 e2 ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5e4b:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5e52:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5e59:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5e60:	48 89 ce             	mov    %rcx,%rsi
    5e63:	48 89 c7             	mov    %rax,%rdi
    5e66:	e8 86 fd ff ff       	call   5bf1 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5e6b:	48 89 c3             	mov    %rax,%rbx
    5e6e:	90                   	nop
}
    5e6f:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5e76:	48 89 c7             	mov    %rax,%rdi
    5e79:	e8 fc 05 00 00       	call   647a <_ZNSt6vectorIcSaIcEED1Ev>
    5e7e:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e85:	48 89 c7             	mov    %rax,%rdi
    5e88:	e8 33 e2 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5e8d:	48 89 d8             	mov    %rbx,%rax
    5e90:	eb 63                	jmp    5ef5 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5e92:	49 89 c4             	mov    %rax,%r12
    5e95:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5e99:	48 89 c7             	mov    %rax,%rdi
    5e9c:	e8 9f e3 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5ea1:	eb 03                	jmp    5ea6 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5ea3:	49 89 c4             	mov    %rax,%r12
    5ea6:	48 89 df             	mov    %rbx,%rdi
    5ea9:	e8 f2 e3 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5eae:	4c 89 e3             	mov    %r12,%rbx
    5eb1:	eb 28                	jmp    5edb <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5eb3:	48 89 c3             	mov    %rax,%rbx
    5eb6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5eba:	48 89 c7             	mov    %rax,%rdi
    5ebd:	e8 de e5 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    5ec2:	eb 17                	jmp    5edb <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5ec4:	48 89 c3             	mov    %rax,%rbx
    5ec7:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5ece:	48 89 c7             	mov    %rax,%rdi
    5ed1:	e8 a4 05 00 00       	call   647a <_ZNSt6vectorIcSaIcEED1Ev>
    5ed6:	eb 03                	jmp    5edb <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5ed8:	48 89 c3             	mov    %rax,%rbx
    5edb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ee2:	48 89 c7             	mov    %rax,%rdi
    5ee5:	e8 d6 e1 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5eea:	48 89 d8             	mov    %rbx,%rax
    5eed:	48 89 c7             	mov    %rax,%rdi
    5ef0:	e8 0b e9 ff ff       	call   4800 <_Unwind_Resume@plt>
    5ef5:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5efc:	5b                   	pop    %rbx
    5efd:	41 5c                	pop    %r12
    5eff:	5d                   	pop    %rbp
    5f00:	c3                   	ret

0000000000005f01 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5f01:	55                   	push   %rbp
    5f02:	48 89 e5             	mov    %rsp,%rbp
    5f05:	41 54                	push   %r12
    5f07:	53                   	push   %rbx
    5f08:	48 83 ec 30          	sub    $0x30,%rsp
    5f0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5f14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5f18:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5f1c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f20:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5f24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f28:	48 89 c7             	mov    %rax,%rdi
    5f2b:	e8 e0 e3 ff ff       	call   4310 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5f30:	85 c0                	test   %eax,%eax
    5f32:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5f35:	84 c0                	test   %al,%al
    5f37:	74 3b                	je     5f74 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5f39:	bf 10 00 00 00       	mov    $0x10,%edi
    5f3e:	e8 5d e2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5f43:	48 89 c3             	mov    %rax,%rbx
    5f46:	48 8d 05 1b 54 01 00 	lea    0x1541b(%rip),%rax        # 1b368 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5f4d:	48 89 c6             	mov    %rax,%rsi
    5f50:	48 89 df             	mov    %rbx,%rdi
    5f53:	e8 c8 e1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5f58:	48 8b 05 49 70 02 00 	mov    0x27049(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5f5f:	48 89 c2             	mov    %rax,%rdx
    5f62:	48 8d 05 d7 6d 02 00 	lea    0x26dd7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5f69:	48 89 c6             	mov    %rax,%rsi
    5f6c:	48 89 df             	mov    %rbx,%rdi
    5f6f:	e8 2c e8 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f78:	eb 16                	jmp    5f90 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5f7a:	49 89 c4             	mov    %rax,%r12
    5f7d:	48 89 df             	mov    %rbx,%rdi
    5f80:	e8 1b e3 ff ff       	call   42a0 <__cxa_free_exception@plt>
    5f85:	4c 89 e0             	mov    %r12,%rax
    5f88:	48 89 c7             	mov    %rax,%rdi
    5f8b:	e8 70 e8 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    5f90:	48 83 c4 30          	add    $0x30,%rsp
    5f94:	5b                   	pop    %rbx
    5f95:	41 5c                	pop    %r12
    5f97:	5d                   	pop    %rbp
    5f98:	c3                   	ret

0000000000005f99 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5f99:	55                   	push   %rbp
    5f9a:	48 89 e5             	mov    %rsp,%rbp
    5f9d:	41 54                	push   %r12
    5f9f:	53                   	push   %rbx
    5fa0:	48 83 ec 30          	sub    $0x30,%rsp
    5fa4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fa8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5fac:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5fb0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5fb4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5fb8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5fbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fc0:	48 89 c7             	mov    %rax,%rdi
    5fc3:	e8 88 e2 ff ff       	call   4250 <vkCreateRenderPass@plt>
    5fc8:	85 c0                	test   %eax,%eax
    5fca:	0f 95 c0             	setne  %al
    5fcd:	84 c0                	test   %al,%al
    5fcf:	74 3b                	je     600c <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5fd1:	bf 10 00 00 00       	mov    $0x10,%edi
    5fd6:	e8 c5 e1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5fdb:	48 89 c3             	mov    %rax,%rbx
    5fde:	48 8d 05 83 53 01 00 	lea    0x15383(%rip),%rax        # 1b368 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5fe5:	48 89 c6             	mov    %rax,%rsi
    5fe8:	48 89 df             	mov    %rbx,%rdi
    5feb:	e8 30 e1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5ff0:	48 8b 05 b1 6f 02 00 	mov    0x26fb1(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5ff7:	48 89 c2             	mov    %rax,%rdx
    5ffa:	48 8d 05 3f 6d 02 00 	lea    0x26d3f(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6001:	48 89 c6             	mov    %rax,%rsi
    6004:	48 89 df             	mov    %rbx,%rdi
    6007:	e8 94 e7 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return renderPass;
    600c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6010:	eb 16                	jmp    6028 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    6012:	49 89 c4             	mov    %rax,%r12
    6015:	48 89 df             	mov    %rbx,%rdi
    6018:	e8 83 e2 ff ff       	call   42a0 <__cxa_free_exception@plt>
    601d:	4c 89 e0             	mov    %r12,%rax
    6020:	48 89 c7             	mov    %rax,%rdi
    6023:	e8 d8 e7 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    6028:	48 83 c4 30          	add    $0x30,%rsp
    602c:	5b                   	pop    %rbx
    602d:	41 5c                	pop    %r12
    602f:	5d                   	pop    %rbp
    6030:	c3                   	ret

0000000000006031 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6031:	55                   	push   %rbp
    6032:	48 89 e5             	mov    %rsp,%rbp
    6035:	41 54                	push   %r12
    6037:	53                   	push   %rbx
    6038:	48 83 ec 30          	sub    $0x30,%rsp
    603c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6040:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6044:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    6048:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    604c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6050:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6054:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6058:	48 89 c7             	mov    %rax,%rdi
    605b:	e8 b0 e5 ff ff       	call   4610 <vkCreateFramebuffer@plt>
    6060:	85 c0                	test   %eax,%eax
    6062:	0f 95 c0             	setne  %al
    6065:	84 c0                	test   %al,%al
    6067:	74 3b                	je     60a4 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    6069:	bf 10 00 00 00       	mov    $0x10,%edi
    606e:	e8 2d e1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6073:	48 89 c3             	mov    %rax,%rbx
    6076:	48 8d 05 0d 53 01 00 	lea    0x1530d(%rip),%rax        # 1b38a <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x102>
    607d:	48 89 c6             	mov    %rax,%rsi
    6080:	48 89 df             	mov    %rbx,%rdi
    6083:	e8 98 e0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6088:	48 8b 05 19 6f 02 00 	mov    0x26f19(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    608f:	48 89 c2             	mov    %rax,%rdx
    6092:	48 8d 05 a7 6c 02 00 	lea    0x26ca7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6099:	48 89 c6             	mov    %rax,%rsi
    609c:	48 89 df             	mov    %rbx,%rdi
    609f:	e8 fc e6 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return framebuffer;
    60a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60a8:	eb 16                	jmp    60c0 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    60aa:	49 89 c4             	mov    %rax,%r12
    60ad:	48 89 df             	mov    %rbx,%rdi
    60b0:	e8 eb e1 ff ff       	call   42a0 <__cxa_free_exception@plt>
    60b5:	4c 89 e0             	mov    %r12,%rax
    60b8:	48 89 c7             	mov    %rax,%rdi
    60bb:	e8 40 e7 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    60c0:	48 83 c4 30          	add    $0x30,%rsp
    60c4:	5b                   	pop    %rbx
    60c5:	41 5c                	pop    %r12
    60c7:	5d                   	pop    %rbp
    60c8:	c3                   	ret

00000000000060c9 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    60c9:	55                   	push   %rbp
    60ca:	48 89 e5             	mov    %rsp,%rbp
    60cd:	41 54                	push   %r12
    60cf:	53                   	push   %rbx
    60d0:	48 83 ec 30          	sub    $0x30,%rsp
    60d4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    60d8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    60dc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    60e0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    60e7:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    60e8:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    60ec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    60f0:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    60f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60f8:	48 89 c7             	mov    %rax,%rdi
    60fb:	e8 60 e0 ff ff       	call   4160 <vkCreateCommandPool@plt>
    6100:	85 c0                	test   %eax,%eax
    6102:	0f 95 c0             	setne  %al
    6105:	84 c0                	test   %al,%al
    6107:	74 3b                	je     6144 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    6109:	bf 10 00 00 00       	mov    $0x10,%edi
    610e:	e8 8d e0 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6113:	48 89 c3             	mov    %rax,%rbx
    6116:	48 8d 05 8b 52 01 00 	lea    0x1528b(%rip),%rax        # 1b3a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x120>
    611d:	48 89 c6             	mov    %rax,%rsi
    6120:	48 89 df             	mov    %rbx,%rdi
    6123:	e8 f8 df ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6128:	48 8b 05 79 6e 02 00 	mov    0x26e79(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    612f:	48 89 c2             	mov    %rax,%rdx
    6132:	48 8d 05 07 6c 02 00 	lea    0x26c07(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6139:	48 89 c6             	mov    %rax,%rsi
    613c:	48 89 df             	mov    %rbx,%rdi
    613f:	e8 5c e6 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return commandPool;
    6144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6148:	eb 16                	jmp    6160 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    614a:	49 89 c4             	mov    %rax,%r12
    614d:	48 89 df             	mov    %rbx,%rdi
    6150:	e8 4b e1 ff ff       	call   42a0 <__cxa_free_exception@plt>
    6155:	4c 89 e0             	mov    %r12,%rax
    6158:	48 89 c7             	mov    %rax,%rdi
    615b:	e8 a0 e6 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    6160:	48 83 c4 30          	add    $0x30,%rsp
    6164:	5b                   	pop    %rbx
    6165:	41 5c                	pop    %r12
    6167:	5d                   	pop    %rbp
    6168:	c3                   	ret

0000000000006169 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    6169:	55                   	push   %rbp
    616a:	48 89 e5             	mov    %rsp,%rbp
    616d:	41 54                	push   %r12
    616f:	53                   	push   %rbx
    6170:	48 83 ec 30          	sub    $0x30,%rsp
    6174:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6178:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    617c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    6180:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6184:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6188:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    618c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6190:	48 89 c7             	mov    %rax,%rdi
    6193:	e8 c8 e4 ff ff       	call   4660 <vkCreateSemaphore@plt>
    6198:	85 c0                	test   %eax,%eax
    619a:	0f 95 c0             	setne  %al
    619d:	84 c0                	test   %al,%al
    619f:	74 3b                	je     61dc <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    61a1:	bf 10 00 00 00       	mov    $0x10,%edi
    61a6:	e8 f5 df ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    61ab:	48 89 c3             	mov    %rax,%rbx
    61ae:	48 8d 05 12 52 01 00 	lea    0x15212(%rip),%rax        # 1b3c7 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x13f>
    61b5:	48 89 c6             	mov    %rax,%rsi
    61b8:	48 89 df             	mov    %rbx,%rdi
    61bb:	e8 60 df ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    61c0:	48 8b 05 e1 6d 02 00 	mov    0x26de1(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    61c7:	48 89 c2             	mov    %rax,%rdx
    61ca:	48 8d 05 6f 6b 02 00 	lea    0x26b6f(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    61d1:	48 89 c6             	mov    %rax,%rsi
    61d4:	48 89 df             	mov    %rbx,%rdi
    61d7:	e8 c4 e5 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return semaphore;
    61dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61e0:	eb 16                	jmp    61f8 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    61e2:	49 89 c4             	mov    %rax,%r12
    61e5:	48 89 df             	mov    %rbx,%rdi
    61e8:	e8 b3 e0 ff ff       	call   42a0 <__cxa_free_exception@plt>
    61ed:	4c 89 e0             	mov    %r12,%rax
    61f0:	48 89 c7             	mov    %rax,%rdi
    61f3:	e8 08 e6 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    61f8:	48 83 c4 30          	add    $0x30,%rsp
    61fc:	5b                   	pop    %rbx
    61fd:	41 5c                	pop    %r12
    61ff:	5d                   	pop    %rbp
    6200:	c3                   	ret

0000000000006201 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    6201:	55                   	push   %rbp
    6202:	48 89 e5             	mov    %rsp,%rbp
    6205:	41 54                	push   %r12
    6207:	53                   	push   %rbx
    6208:	48 83 ec 30          	sub    $0x30,%rsp
    620c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6210:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6214:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    6218:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    621c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6220:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6224:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6228:	48 89 c7             	mov    %rax,%rdi
    622b:	e8 40 e3 ff ff       	call   4570 <vkCreateFence@plt>
    6230:	85 c0                	test   %eax,%eax
    6232:	0f 95 c0             	setne  %al
    6235:	84 c0                	test   %al,%al
    6237:	74 3b                	je     6274 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    6239:	bf 10 00 00 00       	mov    $0x10,%edi
    623e:	e8 5d df ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6243:	48 89 c3             	mov    %rax,%rbx
    6246:	48 8d 05 96 51 01 00 	lea    0x15196(%rip),%rax        # 1b3e3 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x15b>
    624d:	48 89 c6             	mov    %rax,%rsi
    6250:	48 89 df             	mov    %rbx,%rdi
    6253:	e8 c8 de ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6258:	48 8b 05 49 6d 02 00 	mov    0x26d49(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    625f:	48 89 c2             	mov    %rax,%rdx
    6262:	48 8d 05 d7 6a 02 00 	lea    0x26ad7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6269:	48 89 c6             	mov    %rax,%rsi
    626c:	48 89 df             	mov    %rbx,%rdi
    626f:	e8 2c e5 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return fence;
    6274:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6278:	eb 16                	jmp    6290 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    627a:	49 89 c4             	mov    %rax,%r12
    627d:	48 89 df             	mov    %rbx,%rdi
    6280:	e8 1b e0 ff ff       	call   42a0 <__cxa_free_exception@plt>
    6285:	4c 89 e0             	mov    %r12,%rax
    6288:	48 89 c7             	mov    %rax,%rdi
    628b:	e8 70 e5 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    6290:	48 83 c4 30          	add    $0x30,%rsp
    6294:	5b                   	pop    %rbx
    6295:	41 5c                	pop    %r12
    6297:	5d                   	pop    %rbp
    6298:	c3                   	ret

0000000000006299 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    6299:	55                   	push   %rbp
    629a:	48 89 e5             	mov    %rsp,%rbp
    629d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    62a0:	89 75 f8             	mov    %esi,-0x8(%rbp)
    62a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    62a6:	0b 45 f8             	or     -0x8(%rbp),%eax
    62a9:	5d                   	pop    %rbp
    62aa:	c3                   	ret
    62ab:	90                   	nop

00000000000062ac <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    62ac:	55                   	push   %rbp
    62ad:	48 89 e5             	mov    %rsp,%rbp
    62b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    62b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    62bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62c0:	48 8b 00             	mov    (%rax),%rax
    62c3:	48 29 c2             	sub    %rax,%rdx
    62c6:	48 89 d0             	mov    %rdx,%rax
    62c9:	5d                   	pop    %rbp
    62ca:	c3                   	ret
    62cb:	90                   	nop

00000000000062cc <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    62cc:	55                   	push   %rbp
    62cd:	48 89 e5             	mov    %rsp,%rbp
    62d0:	48 83 ec 10          	sub    $0x10,%rsp
    62d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    62d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62dc:	48 8b 10             	mov    (%rax),%rdx
    62df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e3:	48 89 d6             	mov    %rdx,%rsi
    62e6:	48 89 c7             	mov    %rax,%rdi
    62e9:	e8 24 02 00 00       	call   6512 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    62ee:	c9                   	leave
    62ef:	c3                   	ret

00000000000062f0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    62f0:	55                   	push   %rbp
    62f1:	48 89 e5             	mov    %rsp,%rbp
    62f4:	53                   	push   %rbx
    62f5:	48 83 ec 38          	sub    $0x38,%rsp
    62f9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    62fd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6301:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    6305:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6309:	48 89 c7             	mov    %rax,%rdi
    630c:	e8 98 e8 ff ff       	call   4ba9 <_ZNSt11char_traitsIcE6lengthEPKc>
    6311:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6315:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6319:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    631d:	48 89 d6             	mov    %rdx,%rsi
    6320:	48 89 c7             	mov    %rax,%rdi
    6323:	e8 e8 dd ff ff       	call   4110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    6328:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    632c:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    6330:	48 89 d6             	mov    %rdx,%rsi
    6333:	48 89 c7             	mov    %rax,%rdi
    6336:	e8 e9 01 00 00       	call   6524 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    633b:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    633f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6343:	48 89 d6             	mov    %rdx,%rsi
    6346:	48 89 c7             	mov    %rax,%rdi
    6349:	e8 62 e4 ff ff       	call   47b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    634e:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6352:	48 89 c7             	mov    %rax,%rdi
    6355:	e8 46 e1 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    635a:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    635e:	48 89 c7             	mov    %rax,%rdi
    6361:	e8 3a e1 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    6366:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    636a:	48 89 c7             	mov    %rax,%rdi
    636d:	e8 0e df ff ff       	call   4280 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6372:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6376:	48 01 c2             	add    %rax,%rdx
    6379:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    637d:	48 89 d6             	mov    %rdx,%rsi
    6380:	48 89 c7             	mov    %rax,%rdi
    6383:	e8 88 e3 ff ff       	call   4710 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    6388:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    638c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6390:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6394:	48 89 ce             	mov    %rcx,%rsi
    6397:	48 89 c7             	mov    %rax,%rdi
    639a:	e8 a1 dc ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    639f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    63a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63a7:	48 89 d6             	mov    %rdx,%rsi
    63aa:	48 89 c7             	mov    %rax,%rdi
    63ad:	e8 be e4 ff ff       	call   4870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    63b2:	eb 34                	jmp    63e8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    63b4:	48 89 c3             	mov    %rax,%rbx
    63b7:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    63bb:	48 89 c7             	mov    %rax,%rdi
    63be:	e8 dd e0 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    63c3:	48 89 d8             	mov    %rbx,%rax
    63c6:	48 89 c7             	mov    %rax,%rdi
    63c9:	e8 32 e4 ff ff       	call   4800 <_Unwind_Resume@plt>
    }
    63ce:	48 89 c3             	mov    %rax,%rbx
    63d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63d5:	48 89 c7             	mov    %rax,%rdi
    63d8:	e8 63 de ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    63dd:	48 89 d8             	mov    %rbx,%rax
    63e0:	48 89 c7             	mov    %rax,%rdi
    63e3:	e8 18 e4 ff ff       	call   4800 <_Unwind_Resume@plt>
    63e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63f0:	c9                   	leave
    63f1:	c3                   	ret

00000000000063f2 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    63f2:	55                   	push   %rbp
    63f3:	48 89 e5             	mov    %rsp,%rbp
    63f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63fe:	48 8b 00             	mov    (%rax),%rax
    6401:	5d                   	pop    %rbp
    6402:	c3                   	ret
    6403:	90                   	nop

0000000000006404 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6404:	55                   	push   %rbp
    6405:	48 89 e5             	mov    %rsp,%rbp
    6408:	53                   	push   %rbx
    6409:	48 83 ec 28          	sub    $0x28,%rsp
    640d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6411:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6415:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6419:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    641d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6421:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6425:	48 89 d6             	mov    %rdx,%rsi
    6428:	48 89 c7             	mov    %rax,%rdi
    642b:	e8 1d 01 00 00       	call   654d <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    6430:	48 89 c1             	mov    %rax,%rcx
    6433:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6437:	48 89 c2             	mov    %rax,%rdx
    643a:	48 89 ce             	mov    %rcx,%rsi
    643d:	48 89 df             	mov    %rbx,%rdi
    6440:	e8 85 01 00 00       	call   65ca <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6445:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6449:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    644d:	48 89 d6             	mov    %rdx,%rsi
    6450:	48 89 c7             	mov    %rax,%rdi
    6453:	e8 14 02 00 00       	call   666c <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6458:	eb 1a                	jmp    6474 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    645a:	48 89 c3             	mov    %rax,%rbx
    645d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6461:	48 89 c7             	mov    %rax,%rdi
    6464:	e8 bf 01 00 00       	call   6628 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6469:	48 89 d8             	mov    %rbx,%rax
    646c:	48 89 c7             	mov    %rax,%rdi
    646f:	e8 8c e3 ff ff       	call   4800 <_Unwind_Resume@plt>
    6474:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6478:	c9                   	leave
    6479:	c3                   	ret

000000000000647a <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    647a:	55                   	push   %rbp
    647b:	48 89 e5             	mov    %rsp,%rbp
    647e:	48 83 ec 10          	sub    $0x10,%rsp
    6482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    648a:	48 89 c7             	mov    %rax,%rdi
    648d:	e8 1a 02 00 00       	call   66ac <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6492:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6499:	48 8b 48 08          	mov    0x8(%rax),%rcx
    649d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64a1:	48 8b 00             	mov    (%rax),%rax
    64a4:	48 89 ce             	mov    %rcx,%rsi
    64a7:	48 89 c7             	mov    %rax,%rdi
    64aa:	e8 0b 02 00 00       	call   66ba <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    64af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b3:	48 89 c7             	mov    %rax,%rdi
    64b6:	e8 6d 01 00 00       	call   6628 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    64bb:	90                   	nop
    64bc:	c9                   	leave
    64bd:	c3                   	ret

00000000000064be <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    64be:	55                   	push   %rbp
    64bf:	48 89 e5             	mov    %rsp,%rbp
    64c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    64ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64d2:	48 89 10             	mov    %rdx,(%rax)
    64d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    64e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e4:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    64eb:	90                   	nop
    64ec:	5d                   	pop    %rbp
    64ed:	c3                   	ret

00000000000064ee <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    64ee:	55                   	push   %rbp
    64ef:	48 89 e5             	mov    %rsp,%rbp
    64f2:	48 83 ec 10          	sub    $0x10,%rsp
    64f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    64fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64fe:	48 8b 10             	mov    (%rax),%rdx
    6501:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6505:	48 89 d6             	mov    %rdx,%rsi
    6508:	48 89 c7             	mov    %rax,%rdi
    650b:	e8 02 00 00 00       	call   6512 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    6510:	c9                   	leave
    6511:	c3                   	ret

0000000000006512 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6512:	55                   	push   %rbp
    6513:	48 89 e5             	mov    %rsp,%rbp
    6516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    651a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    651e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6522:	5d                   	pop    %rbp
    6523:	c3                   	ret

0000000000006524 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    6524:	55                   	push   %rbp
    6525:	48 89 e5             	mov    %rsp,%rbp
    6528:	48 83 ec 10          	sub    $0x10,%rsp
    652c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6530:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    6534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6538:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    653c:	48 89 d6             	mov    %rdx,%rsi
    653f:	48 89 c7             	mov    %rax,%rdi
    6542:	e8 a8 01 00 00       	call   66ef <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654b:	c9                   	leave
    654c:	c3                   	ret

000000000000654d <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    654d:	55                   	push   %rbp
    654e:	48 89 e5             	mov    %rsp,%rbp
    6551:	53                   	push   %rbx
    6552:	48 83 ec 28          	sub    $0x28,%rsp
    6556:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    655a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    655e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6562:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6566:	48 89 d6             	mov    %rdx,%rsi
    6569:	48 89 c7             	mov    %rax,%rdi
    656c:	e8 7f dc ff ff       	call   41f0 <_ZNSaIcEC1ERKS_@plt>
    6571:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6575:	48 89 c7             	mov    %rax,%rdi
    6578:	e8 9b 01 00 00       	call   6718 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    657d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6581:	0f 92 c3             	setb   %bl
    6584:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6588:	48 89 c7             	mov    %rax,%rdi
    658b:	e8 10 df ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    6590:	84 db                	test   %bl,%bl
    6592:	74 0f                	je     65a3 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6594:	48 8d 05 65 4e 01 00 	lea    0x14e65(%rip),%rax        # 1b400 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x178>
    659b:	48 89 c7             	mov    %rax,%rdi
    659e:	e8 1d dc ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    65a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    65a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    65ab:	c9                   	leave
    65ac:	c3                   	ret
    65ad:	90                   	nop

00000000000065ae <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    65ae:	55                   	push   %rbp
    65af:	48 89 e5             	mov    %rsp,%rbp
    65b2:	48 83 ec 10          	sub    $0x10,%rsp
    65b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65be:	48 89 c7             	mov    %rax,%rdi
    65c1:	e8 aa da ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    65c6:	90                   	nop
    65c7:	c9                   	leave
    65c8:	c3                   	ret
    65c9:	90                   	nop

00000000000065ca <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    65ca:	55                   	push   %rbp
    65cb:	48 89 e5             	mov    %rsp,%rbp
    65ce:	53                   	push   %rbx
    65cf:	48 83 ec 28          	sub    $0x28,%rsp
    65d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    65db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    65df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    65e7:	48 89 d6             	mov    %rdx,%rsi
    65ea:	48 89 c7             	mov    %rax,%rdi
    65ed:	e8 68 01 00 00       	call   675a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    65f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    65f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65fa:	48 89 d6             	mov    %rdx,%rsi
    65fd:	48 89 c7             	mov    %rax,%rdi
    6600:	e8 87 01 00 00       	call   678c <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    6605:	eb 1a                	jmp    6621 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    6607:	48 89 c3             	mov    %rax,%rbx
    660a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    660e:	48 89 c7             	mov    %rax,%rdi
    6611:	e8 98 ff ff ff       	call   65ae <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6616:	48 89 d8             	mov    %rbx,%rax
    6619:	48 89 c7             	mov    %rax,%rdi
    661c:	e8 df e1 ff ff       	call   4800 <_Unwind_Resume@plt>
    6621:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6625:	c9                   	leave
    6626:	c3                   	ret
    6627:	90                   	nop

0000000000006628 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6628:	55                   	push   %rbp
    6629:	48 89 e5             	mov    %rsp,%rbp
    662c:	48 83 ec 10          	sub    $0x10,%rsp
    6630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6638:	48 8b 50 10          	mov    0x10(%rax),%rdx
    663c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6640:	48 8b 00             	mov    (%rax),%rax
    6643:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    6646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    664a:	48 8b 08             	mov    (%rax),%rcx
    664d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6651:	48 89 ce             	mov    %rcx,%rsi
    6654:	48 89 c7             	mov    %rax,%rdi
    6657:	e8 82 01 00 00       	call   67de <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    665c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6660:	48 89 c7             	mov    %rax,%rdi
    6663:	e8 46 ff ff ff       	call   65ae <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6668:	90                   	nop
    6669:	c9                   	leave
    666a:	c3                   	ret
    666b:	90                   	nop

000000000000666c <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    666c:	55                   	push   %rbp
    666d:	48 89 e5             	mov    %rsp,%rbp
    6670:	48 83 ec 10          	sub    $0x10,%rsp
    6674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6678:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    667c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6680:	48 89 c7             	mov    %rax,%rdi
    6683:	e8 24 00 00 00       	call   66ac <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6688:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    668b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    668f:	48 8b 00             	mov    (%rax),%rax
    6692:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6696:	48 89 ce             	mov    %rcx,%rsi
    6699:	48 89 c7             	mov    %rax,%rdi
    669c:	e8 72 01 00 00       	call   6813 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    66a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    66a5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    66a9:	90                   	nop
    66aa:	c9                   	leave
    66ab:	c3                   	ret

00000000000066ac <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    66ac:	55                   	push   %rbp
    66ad:	48 89 e5             	mov    %rsp,%rbp
    66b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    66b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66b8:	5d                   	pop    %rbp
    66b9:	c3                   	ret

00000000000066ba <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    66ba:	55                   	push   %rbp
    66bb:	48 89 e5             	mov    %rsp,%rbp
    66be:	48 83 ec 20          	sub    $0x20,%rsp
    66c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    66ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d6:	48 89 d6             	mov    %rdx,%rsi
    66d9:	48 89 c7             	mov    %rax,%rdi
    66dc:	e8 5b 01 00 00       	call   683c <_ZSt8_DestroyIPcEvT_S1_>
    }
    66e1:	90                   	nop
    66e2:	c9                   	leave
    66e3:	c3                   	ret

00000000000066e4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    66e4:	55                   	push   %rbp
    66e5:	48 89 e5             	mov    %rsp,%rbp
    66e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    66ec:	90                   	nop
    66ed:	5d                   	pop    %rbp
    66ee:	c3                   	ret

00000000000066ef <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    66ef:	55                   	push   %rbp
    66f0:	48 89 e5             	mov    %rsp,%rbp
    66f3:	48 83 ec 10          	sub    $0x10,%rsp
    66f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    66ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6707:	48 89 d6             	mov    %rdx,%rsi
    670a:	48 89 c7             	mov    %rax,%rdi
    670d:	e8 de da ff ff       	call   41f0 <_ZNSaIcEC1ERKS_@plt>
    6712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6716:	c9                   	leave
    6717:	c3                   	ret

0000000000006718 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6718:	55                   	push   %rbp
    6719:	48 89 e5             	mov    %rsp,%rbp
    671c:	48 83 ec 20          	sub    $0x20,%rsp
    6720:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6724:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    672b:	ff ff 7f 
    672e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6732:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6736:	48 89 c7             	mov    %rax,%rdi
    6739:	e8 52 01 00 00       	call   6890 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    673e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6742:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6746:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    674a:	48 89 d6             	mov    %rdx,%rsi
    674d:	48 89 c7             	mov    %rax,%rdi
    6750:	e8 02 ee ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    6755:	48 8b 00             	mov    (%rax),%rax
      }
    6758:	c9                   	leave
    6759:	c3                   	ret

000000000000675a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    675a:	55                   	push   %rbp
    675b:	48 89 e5             	mov    %rsp,%rbp
    675e:	48 83 ec 10          	sub    $0x10,%rsp
    6762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6766:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    676a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    676e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6772:	48 89 d6             	mov    %rdx,%rsi
    6775:	48 89 c7             	mov    %rax,%rdi
    6778:	e8 13 df ff ff       	call   4690 <_ZNSaIcEC2ERKS_@plt>
    677d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6781:	48 89 c7             	mov    %rax,%rdi
    6784:	e8 21 01 00 00       	call   68aa <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    6789:	90                   	nop
    678a:	c9                   	leave
    678b:	c3                   	ret

000000000000678c <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    678c:	55                   	push   %rbp
    678d:	48 89 e5             	mov    %rsp,%rbp
    6790:	48 83 ec 10          	sub    $0x10,%rsp
    6794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6798:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    679c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a4:	48 89 d6             	mov    %rdx,%rsi
    67a7:	48 89 c7             	mov    %rax,%rdi
    67aa:	e8 29 01 00 00       	call   68d8 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    67af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67b3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    67b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ba:	48 8b 10             	mov    (%rax),%rdx
    67bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    67c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c9:	48 8b 10             	mov    (%rax),%rdx
    67cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67d0:	48 01 c2             	add    %rax,%rdx
    67d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67d7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    67db:	90                   	nop
    67dc:	c9                   	leave
    67dd:	c3                   	ret

00000000000067de <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    67de:	55                   	push   %rbp
    67df:	48 89 e5             	mov    %rsp,%rbp
    67e2:	48 83 ec 20          	sub    $0x20,%rsp
    67e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    67f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    67f7:	74 17                	je     6810 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    67f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6801:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6805:	48 89 ce             	mov    %rcx,%rsi
    6808:	48 89 c7             	mov    %rax,%rdi
    680b:	e8 52 00 00 00       	call   6862 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    6810:	90                   	nop
    6811:	c9                   	leave
    6812:	c3                   	ret

0000000000006813 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6813:	55                   	push   %rbp
    6814:	48 89 e5             	mov    %rsp,%rbp
    6817:	48 83 ec 20          	sub    $0x20,%rsp
    681b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    681f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6823:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6827:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    682b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    682f:	48 89 d6             	mov    %rdx,%rsi
    6832:	48 89 c7             	mov    %rax,%rdi
    6835:	e8 d1 00 00 00       	call   690b <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    683a:	c9                   	leave
    683b:	c3                   	ret

000000000000683c <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    683c:	55                   	push   %rbp
    683d:	48 89 e5             	mov    %rsp,%rbp
    6840:	48 83 ec 10          	sub    $0x10,%rsp
    6844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6848:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    684c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6854:	48 89 d6             	mov    %rdx,%rsi
    6857:	48 89 c7             	mov    %rax,%rdi
    685a:	e8 d5 00 00 00       	call   6934 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    685f:	90                   	nop
    6860:	c9                   	leave
    6861:	c3                   	ret

0000000000006862 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6862:	55                   	push   %rbp
    6863:	48 89 e5             	mov    %rsp,%rbp
    6866:	48 83 ec 20          	sub    $0x20,%rsp
    686a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    686e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6872:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6876:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    687a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    687e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6882:	48 89 ce             	mov    %rcx,%rsi
    6885:	48 89 c7             	mov    %rax,%rdi
    6888:	e8 c5 00 00 00       	call   6952 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    688d:	90                   	nop
    688e:	c9                   	leave
    688f:	c3                   	ret

0000000000006890 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6890:	55                   	push   %rbp
    6891:	48 89 e5             	mov    %rsp,%rbp
    6894:	48 83 ec 10          	sub    $0x10,%rsp
    6898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    689c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68a0:	48 89 c7             	mov    %rax,%rdi
    68a3:	e8 d4 00 00 00       	call   697c <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    68a8:	c9                   	leave
    68a9:	c3                   	ret

00000000000068aa <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    68aa:	55                   	push   %rbp
    68ab:	48 89 e5             	mov    %rsp,%rbp
    68ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    68b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    68bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68c1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    68c8:	00 
    68c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68cd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    68d4:	00 
	{ }
    68d5:	90                   	nop
    68d6:	5d                   	pop    %rbp
    68d7:	c3                   	ret

00000000000068d8 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    68d8:	55                   	push   %rbp
    68d9:	48 89 e5             	mov    %rsp,%rbp
    68dc:	48 83 ec 10          	sub    $0x10,%rsp
    68e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    68e8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    68ed:	74 15                	je     6904 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    68ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68f7:	48 89 d6             	mov    %rdx,%rsi
    68fa:	48 89 c7             	mov    %rax,%rdi
    68fd:	e8 94 00 00 00       	call   6996 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    6902:	eb 05                	jmp    6909 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    6904:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6909:	c9                   	leave
    690a:	c3                   	ret

000000000000690b <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    690b:	55                   	push   %rbp
    690c:	48 89 e5             	mov    %rsp,%rbp
    690f:	48 83 ec 20          	sub    $0x20,%rsp
    6913:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6917:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    691b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    691f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6923:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6927:	48 89 d6             	mov    %rdx,%rsi
    692a:	48 89 c7             	mov    %rax,%rdi
    692d:	e8 8e 00 00 00       	call   69c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    6932:	c9                   	leave
    6933:	c3                   	ret

0000000000006934 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6934:	55                   	push   %rbp
    6935:	48 89 e5             	mov    %rsp,%rbp
    6938:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    693c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6940:	90                   	nop
    6941:	5d                   	pop    %rbp
    6942:	c3                   	ret

0000000000006943 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6943:	55                   	push   %rbp
    6944:	48 89 e5             	mov    %rsp,%rbp
    6947:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    694b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    694f:	5d                   	pop    %rbp
    6950:	c3                   	ret
    6951:	90                   	nop

0000000000006952 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6952:	55                   	push   %rbp
    6953:	48 89 e5             	mov    %rsp,%rbp
    6956:	48 83 ec 20          	sub    $0x20,%rsp
    695a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    695e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6962:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6966:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    696a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    696e:	48 89 d6             	mov    %rdx,%rsi
    6971:	48 89 c7             	mov    %rax,%rdi
    6974:	e8 97 da ff ff       	call   4410 <_ZdlPvm@plt>
      }
    6979:	c9                   	leave
    697a:	c3                   	ret
    697b:	90                   	nop

000000000000697c <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    697c:	55                   	push   %rbp
    697d:	48 89 e5             	mov    %rsp,%rbp
    6980:	48 83 ec 10          	sub    $0x10,%rsp
    6984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    698c:	48 89 c7             	mov    %rax,%rdi
    698f:	e8 8a 00 00 00       	call   6a1e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6994:	c9                   	leave
    6995:	c3                   	ret

0000000000006996 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6996:	55                   	push   %rbp
    6997:	48 89 e5             	mov    %rsp,%rbp
    699a:	48 83 ec 10          	sub    $0x10,%rsp
    699e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    69a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ae:	ba 00 00 00 00       	mov    $0x0,%edx
    69b3:	48 89 ce             	mov    %rcx,%rsi
    69b6:	48 89 c7             	mov    %rax,%rdi
    69b9:	e8 74 00 00 00       	call   6a32 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    69be:	c9                   	leave
    69bf:	c3                   	ret

00000000000069c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    69c0:	55                   	push   %rbp
    69c1:	48 89 e5             	mov    %rsp,%rbp
    69c4:	48 83 ec 20          	sub    $0x20,%rsp
    69c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    69cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    69d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    69d5:	74 40                	je     6a17 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    69d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69db:	48 89 c7             	mov    %rax,%rdi
    69de:	e8 60 ff ff ff       	call   6943 <_ZSt11__addressofIcEPT_RS0_>
    69e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    69e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69eb:	48 89 c7             	mov    %rax,%rdi
    69ee:	e8 87 00 00 00       	call   6a7a <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    69f3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    69f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    69fc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    6a00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a08:	48 89 ce             	mov    %rcx,%rsi
    6a0b:	48 89 c7             	mov    %rax,%rdi
    6a0e:	e8 8a 00 00 00       	call   6a9d <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    6a13:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6a17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6a1b:	c9                   	leave
    6a1c:	c3                   	ret
    6a1d:	90                   	nop

0000000000006a1e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6a1e:	55                   	push   %rbp
    6a1f:	48 89 e5             	mov    %rsp,%rbp
    6a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6a26:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6a2d:	ff ff 7f 
      }
    6a30:	5d                   	pop    %rbp
    6a31:	c3                   	ret

0000000000006a32 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6a32:	55                   	push   %rbp
    6a33:	48 89 e5             	mov    %rsp,%rbp
    6a36:	48 83 ec 20          	sub    $0x20,%rsp
    6a3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a42:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a4a:	48 89 c7             	mov    %rax,%rdi
    6a4d:	e8 cc ff ff ff       	call   6a1e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6a52:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6a56:	0f 92 c0             	setb   %al
    6a59:	0f b6 c0             	movzbl %al,%eax
    6a5c:	48 85 c0             	test   %rax,%rax
    6a5f:	0f 95 c0             	setne  %al
    6a62:	84 c0                	test   %al,%al
    6a64:	74 05                	je     6a6b <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    6a66:	e8 95 d6 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6a6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a6f:	48 89 c7             	mov    %rax,%rdi
    6a72:	e8 79 d9 ff ff       	call   43f0 <_Znwm@plt>
    6a77:	90                   	nop
      }
    6a78:	c9                   	leave
    6a79:	c3                   	ret

0000000000006a7a <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6a7a:	55                   	push   %rbp
    6a7b:	48 89 e5             	mov    %rsp,%rbp
    6a7e:	48 83 ec 10          	sub    $0x10,%rsp
    6a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a8a:	48 89 c6             	mov    %rax,%rsi
    6a8d:	bf 01 00 00 00       	mov    $0x1,%edi
    6a92:	e8 f2 e5 ff ff       	call   5089 <_ZnwmPv>
    6a97:	c6 00 00             	movb   $0x0,(%rax)
    }
    6a9a:	90                   	nop
    6a9b:	c9                   	leave
    6a9c:	c3                   	ret

0000000000006a9d <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6a9d:	55                   	push   %rbp
    6a9e:	48 89 e5             	mov    %rsp,%rbp
    6aa1:	48 83 ec 20          	sub    $0x20,%rsp
    6aa5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aa9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6ab1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6ab5:	48 89 c7             	mov    %rax,%rdi
    6ab8:	e8 27 fc ff ff       	call   66e4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6abd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ac1:	48 89 c7             	mov    %rax,%rdi
    6ac4:	e8 d2 e5 ff ff       	call   509b <_ZSt17__size_to_integerm>
    6ac9:	48 89 c1             	mov    %rax,%rcx
    6acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ad0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ad4:	48 89 ce             	mov    %rcx,%rsi
    6ad7:	48 89 c7             	mov    %rax,%rdi
    6ada:	e8 02 00 00 00       	call   6ae1 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    6adf:	c9                   	leave
    6ae0:	c3                   	ret

0000000000006ae1 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6ae1:	55                   	push   %rbp
    6ae2:	48 89 e5             	mov    %rsp,%rbp
    6ae5:	48 83 ec 20          	sub    $0x20,%rsp
    6ae9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6af1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6af5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6afa:	75 06                	jne    6b02 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b00:	eb 2a                	jmp    6b2c <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    6b02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6b06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b0a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6b0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b16:	48 89 ce             	mov    %rcx,%rsi
    6b19:	48 89 c7             	mov    %rax,%rdi
    6b1c:	e8 0d 00 00 00       	call   6b2e <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    6b21:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b29:	48 01 d0             	add    %rdx,%rax
    }
    6b2c:	c9                   	leave
    6b2d:	c3                   	ret

0000000000006b2e <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6b2e:	55                   	push   %rbp
    6b2f:	48 89 e5             	mov    %rsp,%rbp
    6b32:	48 83 ec 20          	sub    $0x20,%rsp
    6b36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6b42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b46:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b4e:	48 89 ce             	mov    %rcx,%rsi
    6b51:	48 89 c7             	mov    %rax,%rdi
    6b54:	e8 03 00 00 00       	call   6b5c <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    6b59:	90                   	nop
    6b5a:	c9                   	leave
    6b5b:	c3                   	ret

0000000000006b5c <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6b5c:	55                   	push   %rbp
    6b5d:	48 89 e5             	mov    %rsp,%rbp
    6b60:	48 83 ec 30          	sub    $0x30,%rsp
    6b64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6b6c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    6b70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b74:	0f b6 00             	movzbl (%rax),%eax
    6b77:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    6b7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6b7e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6b82:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6b86:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6b8b:	74 19                	je     6ba6 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6b8d:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    6b91:	0f b6 c8             	movzbl %al,%ecx
    6b94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b9c:	89 ce                	mov    %ecx,%esi
    6b9e:	48 89 c7             	mov    %rax,%rdi
    6ba1:	e8 3a d6 ff ff       	call   41e0 <memset@plt>
    }
    6ba6:	90                   	nop
    6ba7:	c9                   	leave
    6ba8:	c3                   	ret

0000000000006ba9 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    6ba9:	55                   	push   %rbp
    6baa:	48 89 e5             	mov    %rsp,%rbp
    6bad:	48 83 ec 10          	sub    $0x10,%rsp
    6bb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bb9:	48 89 c7             	mov    %rax,%rdi
    6bbc:	e8 2f d5 ff ff       	call   40f0 <glfwDestroyWindow@plt>
    6bc1:	90                   	nop
    6bc2:	c9                   	leave
    6bc3:	c3                   	ret

0000000000006bc4 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    6bc4:	55                   	push   %rbp
    6bc5:	48 89 e5             	mov    %rsp,%rbp
    6bc8:	48 83 ec 10          	sub    $0x10,%rsp
    6bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    6bd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bdc:	48 89 d6             	mov    %rdx,%rsi
    6bdf:	48 89 c7             	mov    %rax,%rdi
    6be2:	e8 39 d8 ff ff       	call   4420 <vkDestroyInstance@plt>
}
    6be7:	90                   	nop
    6be8:	c9                   	leave
    6be9:	c3                   	ret

0000000000006bea <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    6bea:	55                   	push   %rbp
    6beb:	48 89 e5             	mov    %rsp,%rbp
    6bee:	48 83 ec 10          	sub    $0x10,%rsp
    6bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    6bfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c02:	48 89 d6             	mov    %rdx,%rsi
    6c05:	48 89 c7             	mov    %rax,%rdi
    6c08:	e8 f3 d6 ff ff       	call   4300 <vkDestroyDevice@plt>
}
    6c0d:	90                   	nop
    6c0e:	c9                   	leave
    6c0f:	c3                   	ret

0000000000006c10 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    6c10:	55                   	push   %rbp
    6c11:	48 89 e5             	mov    %rsp,%rbp
    6c14:	48 83 ec 20          	sub    $0x20,%rsp
    6c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    6c24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c28:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c30:	48 89 ce             	mov    %rcx,%rsi
    6c33:	48 89 c7             	mov    %rax,%rdi
    6c36:	e8 b5 db ff ff       	call   47f0 <vkDestroySurfaceKHR@plt>
}
    6c3b:	90                   	nop
    6c3c:	c9                   	leave
    6c3d:	c3                   	ret

0000000000006c3e <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    6c3e:	55                   	push   %rbp
    6c3f:	48 89 e5             	mov    %rsp,%rbp
    6c42:	48 83 ec 20          	sub    $0x20,%rsp
    6c46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    6c52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c5e:	48 89 ce             	mov    %rcx,%rsi
    6c61:	48 89 c7             	mov    %rax,%rdi
    6c64:	e8 67 d4 ff ff       	call   40d0 <vkDestroySwapchainKHR@plt>
}
    6c69:	90                   	nop
    6c6a:	c9                   	leave
    6c6b:	c3                   	ret

0000000000006c6c <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6c6c:	55                   	push   %rbp
    6c6d:	48 89 e5             	mov    %rsp,%rbp
    6c70:	48 83 ec 20          	sub    $0x20,%rsp
    6c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    6c80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c84:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c8c:	48 89 ce             	mov    %rcx,%rsi
    6c8f:	48 89 c7             	mov    %rax,%rdi
    6c92:	e8 89 db ff ff       	call   4820 <vkDestroyImageView@plt>
}
    6c97:	90                   	nop
    6c98:	c9                   	leave
    6c99:	c3                   	ret

0000000000006c9a <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6c9a:	55                   	push   %rbp
    6c9b:	48 89 e5             	mov    %rsp,%rbp
    6c9e:	48 83 ec 20          	sub    $0x20,%rsp
    6ca2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ca6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6caa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    6cae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6cb2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cba:	48 89 ce             	mov    %rcx,%rsi
    6cbd:	48 89 c7             	mov    %rax,%rdi
    6cc0:	e8 7b d8 ff ff       	call   4540 <vkDestroyShaderModule@plt>
}
    6cc5:	90                   	nop
    6cc6:	c9                   	leave
    6cc7:	c3                   	ret

0000000000006cc8 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    6cc8:	55                   	push   %rbp
    6cc9:	48 89 e5             	mov    %rsp,%rbp
    6ccc:	48 83 ec 20          	sub    $0x20,%rsp
    6cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    6cdc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ce0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ce8:	48 89 ce             	mov    %rcx,%rsi
    6ceb:	48 89 c7             	mov    %rax,%rdi
    6cee:	e8 9d d8 ff ff       	call   4590 <vkDestroyPipelineLayout@plt>
}
    6cf3:	90                   	nop
    6cf4:	c9                   	leave
    6cf5:	c3                   	ret

0000000000006cf6 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    6cf6:	55                   	push   %rbp
    6cf7:	48 89 e5             	mov    %rsp,%rbp
    6cfa:	48 83 ec 20          	sub    $0x20,%rsp
    6cfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    6d0a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6d0e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6d12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d16:	48 89 ce             	mov    %rcx,%rsi
    6d19:	48 89 c7             	mov    %rax,%rdi
    6d1c:	e8 af d6 ff ff       	call   43d0 <vkDestroyRenderPass@plt>
}
    6d21:	90                   	nop
    6d22:	c9                   	leave
    6d23:	c3                   	ret

0000000000006d24 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    6d24:	55                   	push   %rbp
    6d25:	48 89 e5             	mov    %rsp,%rbp
    6d28:	48 83 ec 20          	sub    $0x20,%rsp
    6d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    6d38:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6d3c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d44:	48 89 ce             	mov    %rcx,%rsi
    6d47:	48 89 c7             	mov    %rax,%rdi
    6d4a:	e8 71 d7 ff ff       	call   44c0 <vkDestroyPipeline@plt>
}
    6d4f:	90                   	nop
    6d50:	c9                   	leave
    6d51:	c3                   	ret

0000000000006d52 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    6d52:	55                   	push   %rbp
    6d53:	48 89 e5             	mov    %rsp,%rbp
    6d56:	48 83 ec 40          	sub    $0x40,%rsp
    6d5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d5e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6d62:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6d66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d72:	48 89 c7             	mov    %rax,%rdi
    6d75:	e8 20 01 00 00       	call   6e9a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6d7a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d82:	48 89 c7             	mov    %rax,%rdi
    6d85:	e8 36 01 00 00       	call   6ec0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6d8a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6d8e:	eb 36                	jmp    6dc6 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    6d90:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6d94:	48 89 c7             	mov    %rax,%rdi
    6d97:	e8 a8 01 00 00       	call   6f44 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6d9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    6da0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6da4:	48 8b 08             	mov    (%rax),%rcx
    6da7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6dab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6daf:	48 89 ce             	mov    %rcx,%rsi
    6db2:	48 89 c7             	mov    %rax,%rdi
    6db5:	e8 06 d7 ff ff       	call   44c0 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    6dba:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6dbe:	48 89 c7             	mov    %rax,%rdi
    6dc1:	e8 5e 01 00 00       	call   6f24 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    6dc6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6dca:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6dce:	48 89 d6             	mov    %rdx,%rsi
    6dd1:	48 89 c7             	mov    %rax,%rdi
    6dd4:	e8 10 01 00 00       	call   6ee9 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6dd9:	84 c0                	test   %al,%al
    6ddb:	75 b3                	jne    6d90 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    6ddd:	90                   	nop
    6dde:	90                   	nop
    6ddf:	c9                   	leave
    6de0:	c3                   	ret

0000000000006de1 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    6de1:	55                   	push   %rbp
    6de2:	48 89 e5             	mov    %rsp,%rbp
    6de5:	48 83 ec 20          	sub    $0x20,%rsp
    6de9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ded:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6df1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    6df5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6df9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e01:	48 89 ce             	mov    %rcx,%rsi
    6e04:	48 89 c7             	mov    %rax,%rdi
    6e07:	e8 84 d9 ff ff       	call   4790 <vkDestroyFramebuffer@plt>
}
    6e0c:	90                   	nop
    6e0d:	c9                   	leave
    6e0e:	c3                   	ret

0000000000006e0f <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6e0f:	55                   	push   %rbp
    6e10:	48 89 e5             	mov    %rsp,%rbp
    6e13:	48 83 ec 20          	sub    $0x20,%rsp
    6e17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e1b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e1f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6e23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e27:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e2f:	48 89 ce             	mov    %rcx,%rsi
    6e32:	48 89 c7             	mov    %rax,%rdi
    6e35:	e8 46 d8 ff ff       	call   4680 <vkDestroyCommandPool@plt>
}
    6e3a:	90                   	nop
    6e3b:	c9                   	leave
    6e3c:	c3                   	ret

0000000000006e3d <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    6e3d:	55                   	push   %rbp
    6e3e:	48 89 e5             	mov    %rsp,%rbp
    6e41:	48 83 ec 20          	sub    $0x20,%rsp
    6e45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    6e51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e55:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e5d:	48 89 ce             	mov    %rcx,%rsi
    6e60:	48 89 c7             	mov    %rax,%rdi
    6e63:	e8 78 d2 ff ff       	call   40e0 <vkDestroySemaphore@plt>
}
    6e68:	90                   	nop
    6e69:	c9                   	leave
    6e6a:	c3                   	ret

0000000000006e6b <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    6e6b:	55                   	push   %rbp
    6e6c:	48 89 e5             	mov    %rsp,%rbp
    6e6f:	48 83 ec 20          	sub    $0x20,%rsp
    6e73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e7b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    6e7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e83:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e8b:	48 89 ce             	mov    %rcx,%rsi
    6e8e:	48 89 c7             	mov    %rax,%rdi
    6e91:	e8 1a d6 ff ff       	call   44b0 <vkDestroyFence@plt>
}
    6e96:	90                   	nop
    6e97:	c9                   	leave
    6e98:	c3                   	ret
    6e99:	90                   	nop

0000000000006e9a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6e9a:	55                   	push   %rbp
    6e9b:	48 89 e5             	mov    %rsp,%rbp
    6e9e:	48 83 ec 20          	sub    $0x20,%rsp
    6ea2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6ea6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6eaa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6eae:	48 89 d6             	mov    %rdx,%rsi
    6eb1:	48 89 c7             	mov    %rax,%rdi
    6eb4:	e8 9d 00 00 00       	call   6f56 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ebd:	c9                   	leave
    6ebe:	c3                   	ret
    6ebf:	90                   	nop

0000000000006ec0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6ec0:	55                   	push   %rbp
    6ec1:	48 89 e5             	mov    %rsp,%rbp
    6ec4:	48 83 ec 20          	sub    $0x20,%rsp
    6ec8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6ecc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ed0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6ed4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6ed8:	48 89 d6             	mov    %rdx,%rsi
    6edb:	48 89 c7             	mov    %rax,%rdi
    6ede:	e8 73 00 00 00       	call   6f56 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee7:	c9                   	leave
    6ee8:	c3                   	ret

0000000000006ee9 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6ee9:	55                   	push   %rbp
    6eea:	48 89 e5             	mov    %rsp,%rbp
    6eed:	53                   	push   %rbx
    6eee:	48 83 ec 18          	sub    $0x18,%rsp
    6ef2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6ef6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6efa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6efe:	48 89 c7             	mov    %rax,%rdi
    6f01:	e8 6e 00 00 00       	call   6f74 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6f06:	48 8b 18             	mov    (%rax),%rbx
    6f09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6f0d:	48 89 c7             	mov    %rax,%rdi
    6f10:	e8 5f 00 00 00       	call   6f74 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6f15:	48 8b 00             	mov    (%rax),%rax
    6f18:	48 39 c3             	cmp    %rax,%rbx
    6f1b:	0f 95 c0             	setne  %al
    6f1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f22:	c9                   	leave
    6f23:	c3                   	ret

0000000000006f24 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6f24:	55                   	push   %rbp
    6f25:	48 89 e5             	mov    %rsp,%rbp
    6f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f30:	48 8b 00             	mov    (%rax),%rax
    6f33:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f3b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6f42:	5d                   	pop    %rbp
    6f43:	c3                   	ret

0000000000006f44 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6f44:	55                   	push   %rbp
    6f45:	48 89 e5             	mov    %rsp,%rbp
    6f48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f50:	48 8b 00             	mov    (%rax),%rax
    6f53:	5d                   	pop    %rbp
    6f54:	c3                   	ret
    6f55:	90                   	nop

0000000000006f56 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6f56:	55                   	push   %rbp
    6f57:	48 89 e5             	mov    %rsp,%rbp
    6f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6f62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f66:	48 8b 10             	mov    (%rax),%rdx
    6f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f6d:	48 89 10             	mov    %rdx,(%rax)
    6f70:	90                   	nop
    6f71:	5d                   	pop    %rbp
    6f72:	c3                   	ret
    6f73:	90                   	nop

0000000000006f74 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6f74:	55                   	push   %rbp
    6f75:	48 89 e5             	mov    %rsp,%rbp
    6f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f80:	5d                   	pop    %rbp
    6f81:	c3                   	ret

0000000000006f82 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6f82:	55                   	push   %rbp
    6f83:	48 89 e5             	mov    %rsp,%rbp
    6f86:	53                   	push   %rbx
    6f87:	48 83 ec 28          	sub    $0x28,%rsp
    6f8b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6f8f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f93:	be 00 00 00 00       	mov    $0x0,%esi
    6f98:	48 89 c7             	mov    %rax,%rdi
    6f9b:	e8 50 d5 ff ff       	call   44f0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6fa0:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6fa3:	89 c3                	mov    %eax,%ebx
    6fa5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fa9:	48 89 c7             	mov    %rax,%rdi
    6fac:	e8 47 11 00 00       	call   80f8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    6fb1:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6fb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fb9:	48 89 de             	mov    %rbx,%rsi
    6fbc:	48 89 c7             	mov    %rax,%rdi
    6fbf:	e8 6c 11 00 00       	call   8130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6fc4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fc8:	48 89 c7             	mov    %rax,%rdi
    6fcb:	e8 44 11 00 00       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6fd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fd4:	48 89 c7             	mov    %rax,%rdi
    6fd7:	e8 0e 12 00 00       	call   81ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6fdc:	48 89 c2             	mov    %rax,%rdx
    6fdf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6fe3:	48 89 d6             	mov    %rdx,%rsi
    6fe6:	48 89 c7             	mov    %rax,%rdi
    6fe9:	e8 02 d5 ff ff       	call   44f0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6fee:	eb 34                	jmp    7024 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6ff0:	48 89 c3             	mov    %rax,%rbx
    6ff3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6ff7:	48 89 c7             	mov    %rax,%rdi
    6ffa:	e8 15 11 00 00       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
    6fff:	48 89 d8             	mov    %rbx,%rax
    7002:	48 89 c7             	mov    %rax,%rdi
    7005:	e8 f6 d7 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    700a:	48 89 c3             	mov    %rax,%rbx
    700d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7011:	48 89 c7             	mov    %rax,%rdi
    7014:	e8 8d 11 00 00       	call   81a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7019:	48 89 d8             	mov    %rbx,%rax
    701c:	48 89 c7             	mov    %rax,%rdi
    701f:	e8 dc d7 ff ff       	call   4800 <_Unwind_Resume@plt>
    7024:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7028:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    702c:	c9                   	leave
    702d:	c3                   	ret

000000000000702e <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    702e:	55                   	push   %rbp
    702f:	48 89 e5             	mov    %rsp,%rbp
    7032:	41 54                	push   %r12
    7034:	53                   	push   %rbx
    7035:	48 83 ec 20          	sub    $0x20,%rsp
    7039:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    703d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    7041:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7045:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7049:	ba 00 00 00 00       	mov    $0x0,%edx
    704e:	48 89 ce             	mov    %rcx,%rsi
    7051:	48 89 c7             	mov    %rax,%rdi
    7054:	e8 c7 d2 ff ff       	call   4320 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    7059:	85 c0                	test   %eax,%eax
    705b:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    705e:	84 c0                	test   %al,%al
    7060:	74 3b                	je     709d <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    7062:	bf 10 00 00 00       	mov    $0x10,%edi
    7067:	e8 34 d1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    706c:	48 89 c3             	mov    %rax,%rbx
    706f:	48 8d 05 72 4f 01 00 	lea    0x14f72(%rip),%rax        # 1bfe8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    7076:	48 89 c6             	mov    %rax,%rsi
    7079:	48 89 df             	mov    %rbx,%rdi
    707c:	e8 9f d0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7081:	48 8b 05 20 5f 02 00 	mov    0x25f20(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7088:	48 89 c2             	mov    %rax,%rdx
    708b:	48 8d 05 ae 5c 02 00 	lea    0x25cae(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7092:	48 89 c6             	mov    %rax,%rsi
    7095:	48 89 df             	mov    %rbx,%rdi
    7098:	e8 03 d7 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    709d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    70a0:	89 c3                	mov    %eax,%ebx
    70a2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    70a6:	48 89 c7             	mov    %rax,%rdi
    70a9:	e8 b8 11 00 00       	call   8266 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    70ae:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    70b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70b6:	48 89 de             	mov    %rbx,%rsi
    70b9:	48 89 c7             	mov    %rax,%rdi
    70bc:	e8 dd 11 00 00       	call   829e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    70c1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    70c5:	48 89 c7             	mov    %rax,%rdi
    70c8:	e8 b5 11 00 00       	call   8282 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    70cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70d1:	48 89 c7             	mov    %rax,%rdi
    70d4:	e8 7f 12 00 00       	call   8358 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    70d9:	48 89 c2             	mov    %rax,%rdx
    70dc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    70e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    70e4:	48 89 ce             	mov    %rcx,%rsi
    70e7:	48 89 c7             	mov    %rax,%rdi
    70ea:	e8 31 d2 ff ff       	call   4320 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    70ef:	85 c0                	test   %eax,%eax
    70f1:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    70f4:	84 c0                	test   %al,%al
    70f6:	0f 84 95 00 00 00    	je     7191 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    70fc:	bf 10 00 00 00       	mov    $0x10,%edi
    7101:	e8 9a d0 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7106:	48 89 c3             	mov    %rax,%rbx
    7109:	48 8d 05 d8 4e 01 00 	lea    0x14ed8(%rip),%rax        # 1bfe8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    7110:	48 89 c6             	mov    %rax,%rsi
    7113:	48 89 df             	mov    %rbx,%rdi
    7116:	e8 05 d0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    711b:	48 8b 05 86 5e 02 00 	mov    0x25e86(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7122:	48 89 c2             	mov    %rax,%rdx
    7125:	48 8d 05 14 5c 02 00 	lea    0x25c14(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    712c:	48 89 c6             	mov    %rax,%rsi
    712f:	48 89 df             	mov    %rbx,%rdi
    7132:	e8 69 d6 ff ff       	call   47a0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7137:	49 89 c4             	mov    %rax,%r12
    713a:	48 89 df             	mov    %rbx,%rdi
    713d:	e8 5e d1 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7142:	4c 89 e0             	mov    %r12,%rax
    7145:	48 89 c7             	mov    %rax,%rdi
    7148:	e8 b3 d6 ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    714d:	48 89 c3             	mov    %rax,%rbx
    7150:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7154:	48 89 c7             	mov    %rax,%rdi
    7157:	e8 26 11 00 00       	call   8282 <_ZNSaI21VkExtensionPropertiesED1Ev>
    715c:	48 89 d8             	mov    %rbx,%rax
    715f:	48 89 c7             	mov    %rax,%rdi
    7162:	e8 99 d6 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7167:	49 89 c4             	mov    %rax,%r12
    716a:	48 89 df             	mov    %rbx,%rdi
    716d:	e8 2e d1 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7172:	4c 89 e3             	mov    %r12,%rbx
    7175:	eb 03                	jmp    717a <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    7177:	48 89 c3             	mov    %rax,%rbx
    717a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    717e:	48 89 c7             	mov    %rax,%rdi
    7181:	e8 8e 11 00 00       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7186:	48 89 d8             	mov    %rbx,%rax
    7189:	48 89 c7             	mov    %rax,%rdi
    718c:	e8 6f d6 ff ff       	call   4800 <_Unwind_Resume@plt>
  return instanceExtensions;
    7191:	90                   	nop
}
    7192:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7196:	48 83 c4 20          	add    $0x20,%rsp
    719a:	5b                   	pop    %rbx
    719b:	41 5c                	pop    %r12
    719d:	5d                   	pop    %rbp
    719e:	c3                   	ret

000000000000719f <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    719f:	55                   	push   %rbp
    71a0:	48 89 e5             	mov    %rsp,%rbp
    71a3:	41 54                	push   %r12
    71a5:	53                   	push   %rbx
    71a6:	48 83 ec 30          	sub    $0x30,%rsp
    71aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    71ae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    71b2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    71b6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    71ba:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    71be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    71c2:	b9 00 00 00 00       	mov    $0x0,%ecx
    71c7:	48 89 c7             	mov    %rax,%rdi
    71ca:	e8 81 d4 ff ff       	call   4650 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    71cf:	85 c0                	test   %eax,%eax
    71d1:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    71d4:	84 c0                	test   %al,%al
    71d6:	74 3b                	je     7213 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    71d8:	bf 10 00 00 00       	mov    $0x10,%edi
    71dd:	e8 be cf ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    71e2:	48 89 c3             	mov    %rax,%rbx
    71e5:	48 8d 05 24 4e 01 00 	lea    0x14e24(%rip),%rax        # 1c010 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    71ec:	48 89 c6             	mov    %rax,%rsi
    71ef:	48 89 df             	mov    %rbx,%rdi
    71f2:	e8 29 cf ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    71f7:	48 8b 05 aa 5d 02 00 	mov    0x25daa(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    71fe:	48 89 c2             	mov    %rax,%rdx
    7201:	48 8d 05 38 5b 02 00 	lea    0x25b38(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7208:	48 89 c6             	mov    %rax,%rsi
    720b:	48 89 df             	mov    %rbx,%rdi
    720e:	e8 8d d5 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7213:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7216:	89 c3                	mov    %eax,%ebx
    7218:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    721c:	48 89 c7             	mov    %rax,%rdi
    721f:	e8 42 10 00 00       	call   8266 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    7224:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7228:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    722c:	48 89 de             	mov    %rbx,%rsi
    722f:	48 89 c7             	mov    %rax,%rdi
    7232:	e8 67 10 00 00       	call   829e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    7237:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    723b:	48 89 c7             	mov    %rax,%rdi
    723e:	e8 3f 10 00 00       	call   8282 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    7243:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7247:	48 89 c7             	mov    %rax,%rdi
    724a:	e8 09 11 00 00       	call   8358 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    724f:	48 89 c1             	mov    %rax,%rcx
    7252:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7256:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    725a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    725e:	48 89 c7             	mov    %rax,%rdi
    7261:	e8 ea d3 ff ff       	call   4650 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    7266:	85 c0                	test   %eax,%eax
    7268:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    726b:	84 c0                	test   %al,%al
    726d:	0f 84 95 00 00 00    	je     7308 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    7273:	bf 10 00 00 00       	mov    $0x10,%edi
    7278:	e8 23 cf ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    727d:	48 89 c3             	mov    %rax,%rbx
    7280:	48 8d 05 89 4d 01 00 	lea    0x14d89(%rip),%rax        # 1c010 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    7287:	48 89 c6             	mov    %rax,%rsi
    728a:	48 89 df             	mov    %rbx,%rdi
    728d:	e8 8e ce ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7292:	48 8b 05 0f 5d 02 00 	mov    0x25d0f(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7299:	48 89 c2             	mov    %rax,%rdx
    729c:	48 8d 05 9d 5a 02 00 	lea    0x25a9d(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    72a3:	48 89 c6             	mov    %rax,%rsi
    72a6:	48 89 df             	mov    %rbx,%rdi
    72a9:	e8 f2 d4 ff ff       	call   47a0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    72ae:	49 89 c4             	mov    %rax,%r12
    72b1:	48 89 df             	mov    %rbx,%rdi
    72b4:	e8 e7 cf ff ff       	call   42a0 <__cxa_free_exception@plt>
    72b9:	4c 89 e0             	mov    %r12,%rax
    72bc:	48 89 c7             	mov    %rax,%rdi
    72bf:	e8 3c d5 ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    72c4:	48 89 c3             	mov    %rax,%rbx
    72c7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72cb:	48 89 c7             	mov    %rax,%rdi
    72ce:	e8 af 0f 00 00       	call   8282 <_ZNSaI21VkExtensionPropertiesED1Ev>
    72d3:	48 89 d8             	mov    %rbx,%rax
    72d6:	48 89 c7             	mov    %rax,%rdi
    72d9:	e8 22 d5 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    72de:	49 89 c4             	mov    %rax,%r12
    72e1:	48 89 df             	mov    %rbx,%rdi
    72e4:	e8 b7 cf ff ff       	call   42a0 <__cxa_free_exception@plt>
    72e9:	4c 89 e3             	mov    %r12,%rbx
    72ec:	eb 03                	jmp    72f1 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    72ee:	48 89 c3             	mov    %rax,%rbx
    72f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72f5:	48 89 c7             	mov    %rax,%rdi
    72f8:	e8 17 10 00 00       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    72fd:	48 89 d8             	mov    %rbx,%rax
    7300:	48 89 c7             	mov    %rax,%rdi
    7303:	e8 f8 d4 ff ff       	call   4800 <_Unwind_Resume@plt>
  return deviceExtensions;
    7308:	90                   	nop
}
    7309:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    730d:	48 83 c4 30          	add    $0x30,%rsp
    7311:	5b                   	pop    %rbx
    7312:	41 5c                	pop    %r12
    7314:	5d                   	pop    %rbp
    7315:	c3                   	ret

0000000000007316 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    7316:	55                   	push   %rbp
    7317:	48 89 e5             	mov    %rsp,%rbp
    731a:	53                   	push   %rbx
    731b:	48 83 ec 38          	sub    $0x38,%rsp
    731f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    7323:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7327:	48 89 c7             	mov    %rax,%rdi
    732a:	e8 91 cf ff ff       	call   42c0 <glfwGetRequiredInstanceExtensions@plt>
    732f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7333:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7336:	89 c3                	mov    %eax,%ebx
    7338:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    733c:	48 89 c7             	mov    %rax,%rdi
    733f:	e8 90 10 00 00       	call   83d4 <_ZNSaIPKcEC1Ev>
    7344:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    7348:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    734c:	48 89 de             	mov    %rbx,%rsi
    734f:	48 89 c7             	mov    %rax,%rdi
    7352:	e8 b5 10 00 00       	call   840c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    7357:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    735b:	48 89 c7             	mov    %rax,%rdi
    735e:	e8 8d 10 00 00       	call   83f0 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7363:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    736a:	eb 2e                	jmp    739a <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    736c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    736f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7376:	00 
    7377:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    737b:	48 01 d0             	add    %rdx,%rax
    737e:	48 8b 18             	mov    (%rax),%rbx
    7381:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7384:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7388:	48 89 d6             	mov    %rdx,%rsi
    738b:	48 89 c7             	mov    %rax,%rdi
    738e:	e8 ef 10 00 00       	call   8482 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    7393:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7396:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    739a:	8b 45 d8             	mov    -0x28(%rbp),%eax
    739d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    73a0:	72 ca                	jb     736c <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    73a2:	eb 1a                	jmp    73be <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    73a4:	48 89 c3             	mov    %rax,%rbx
    73a7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    73ab:	48 89 c7             	mov    %rax,%rdi
    73ae:	e8 3d 10 00 00       	call   83f0 <_ZNSaIPKcED1Ev>
    73b3:	48 89 d8             	mov    %rbx,%rax
    73b6:	48 89 c7             	mov    %rax,%rdi
    73b9:	e8 42 d4 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    73be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    73c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    73c6:	c9                   	leave
    73c7:	c3                   	ret

00000000000073c8 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    73c8:	55                   	push   %rbp
    73c9:	48 89 e5             	mov    %rsp,%rbp
    73cc:	53                   	push   %rbx
    73cd:	48 83 ec 28          	sub    $0x28,%rsp
    73d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    73d5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    73d9:	be 00 00 00 00       	mov    $0x0,%esi
    73de:	48 89 c7             	mov    %rax,%rdi
    73e1:	e8 0a d1 ff ff       	call   44f0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    73e6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    73e9:	89 c3                	mov    %eax,%ebx
    73eb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    73ef:	48 89 c7             	mov    %rax,%rdi
    73f2:	e8 01 0d 00 00       	call   80f8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    73f7:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    73fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73ff:	48 89 de             	mov    %rbx,%rsi
    7402:	48 89 c7             	mov    %rax,%rdi
    7405:	e8 26 0d 00 00       	call   8130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    740a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    740e:	48 89 c7             	mov    %rax,%rdi
    7411:	e8 fe 0c 00 00       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    7416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    741a:	48 89 c7             	mov    %rax,%rdi
    741d:	e8 c8 0d 00 00       	call   81ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7422:	48 89 c2             	mov    %rax,%rdx
    7425:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7429:	48 89 d6             	mov    %rdx,%rsi
    742c:	48 89 c7             	mov    %rax,%rdi
    742f:	e8 bc d0 ff ff       	call   44f0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    7434:	eb 34                	jmp    746a <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7436:	48 89 c3             	mov    %rax,%rbx
    7439:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    743d:	48 89 c7             	mov    %rax,%rdi
    7440:	e8 cf 0c 00 00       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
    7445:	48 89 d8             	mov    %rbx,%rax
    7448:	48 89 c7             	mov    %rax,%rdi
    744b:	e8 b0 d3 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    7450:	48 89 c3             	mov    %rax,%rbx
    7453:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7457:	48 89 c7             	mov    %rax,%rdi
    745a:	e8 47 0d 00 00       	call   81a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    745f:	48 89 d8             	mov    %rbx,%rax
    7462:	48 89 c7             	mov    %rax,%rdi
    7465:	e8 96 d3 ff ff       	call   4800 <_Unwind_Resume@plt>
    746a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    746e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7472:	c9                   	leave
    7473:	c3                   	ret

0000000000007474 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    7474:	55                   	push   %rbp
    7475:	48 89 e5             	mov    %rsp,%rbp
    7478:	41 54                	push   %r12
    747a:	53                   	push   %rbx
    747b:	48 83 ec 20          	sub    $0x20,%rsp
    747f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7483:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    7487:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    748b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    748f:	ba 00 00 00 00       	mov    $0x0,%edx
    7494:	48 89 ce             	mov    %rcx,%rsi
    7497:	48 89 c7             	mov    %rax,%rdi
    749a:	e8 31 cd ff ff       	call   41d0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    749f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    74a2:	85 c0                	test   %eax,%eax
    74a4:	75 3b                	jne    74e1 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    74a6:	bf 10 00 00 00       	mov    $0x10,%edi
    74ab:	e8 f0 cc ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    74b0:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    74b3:	48 8d 05 7e 4b 01 00 	lea    0x14b7e(%rip),%rax        # 1c038 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    74ba:	48 89 c6             	mov    %rax,%rsi
    74bd:	48 89 df             	mov    %rbx,%rdi
    74c0:	e8 5b cc ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    74c5:	48 8b 05 dc 5a 02 00 	mov    0x25adc(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    74cc:	48 89 c2             	mov    %rax,%rdx
    74cf:	48 8d 05 6a 58 02 00 	lea    0x2586a(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    74d6:	48 89 c6             	mov    %rax,%rsi
    74d9:	48 89 df             	mov    %rbx,%rdi
    74dc:	e8 bf d2 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    74e1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    74e4:	89 c3                	mov    %eax,%ebx
    74e6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    74ea:	48 89 c7             	mov    %rax,%rdi
    74ed:	e8 fe 0f 00 00       	call   84f0 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    74f2:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    74f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74fa:	48 89 de             	mov    %rbx,%rsi
    74fd:	48 89 c7             	mov    %rax,%rdi
    7500:	e8 23 10 00 00       	call   8528 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7505:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7509:	48 89 c7             	mov    %rax,%rdi
    750c:	e8 fb 0f 00 00       	call   850c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7511:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7515:	48 89 c7             	mov    %rax,%rdi
    7518:	e8 c5 10 00 00       	call   85e2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    751d:	48 89 c2             	mov    %rax,%rdx
    7520:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7524:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7528:	48 89 ce             	mov    %rcx,%rsi
    752b:	48 89 c7             	mov    %rax,%rdi
    752e:	e8 9d cc ff ff       	call   41d0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    7533:	85 c0                	test   %eax,%eax
    7535:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7538:	84 c0                	test   %al,%al
    753a:	0f 84 95 00 00 00    	je     75d5 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    7540:	bf 10 00 00 00       	mov    $0x10,%edi
    7545:	e8 56 cc ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    754a:	48 89 c3             	mov    %rax,%rbx
    754d:	48 8d 05 1c 4b 01 00 	lea    0x14b1c(%rip),%rax        # 1c070 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    7554:	48 89 c6             	mov    %rax,%rsi
    7557:	48 89 df             	mov    %rbx,%rdi
    755a:	e8 c1 cb ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    755f:	48 8b 05 42 5a 02 00 	mov    0x25a42(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7566:	48 89 c2             	mov    %rax,%rdx
    7569:	48 8d 05 d0 57 02 00 	lea    0x257d0(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7570:	48 89 c6             	mov    %rax,%rsi
    7573:	48 89 df             	mov    %rbx,%rdi
    7576:	e8 25 d2 ff ff       	call   47a0 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    757b:	49 89 c4             	mov    %rax,%r12
    757e:	48 89 df             	mov    %rbx,%rdi
    7581:	e8 1a cd ff ff       	call   42a0 <__cxa_free_exception@plt>
    7586:	4c 89 e0             	mov    %r12,%rax
    7589:	48 89 c7             	mov    %rax,%rdi
    758c:	e8 6f d2 ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7591:	48 89 c3             	mov    %rax,%rbx
    7594:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7598:	48 89 c7             	mov    %rax,%rdi
    759b:	e8 6c 0f 00 00       	call   850c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    75a0:	48 89 d8             	mov    %rbx,%rax
    75a3:	48 89 c7             	mov    %rax,%rdi
    75a6:	e8 55 d2 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    75ab:	49 89 c4             	mov    %rax,%r12
    75ae:	48 89 df             	mov    %rbx,%rdi
    75b1:	e8 ea cc ff ff       	call   42a0 <__cxa_free_exception@plt>
    75b6:	4c 89 e3             	mov    %r12,%rbx
    75b9:	eb 03                	jmp    75be <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    75bb:	48 89 c3             	mov    %rax,%rbx
    75be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75c2:	48 89 c7             	mov    %rax,%rdi
    75c5:	e8 d4 0f 00 00       	call   859e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    75ca:	48 89 d8             	mov    %rbx,%rax
    75cd:	48 89 c7             	mov    %rax,%rdi
    75d0:	e8 2b d2 ff ff       	call   4800 <_Unwind_Resume@plt>
  return physicalDevices;
    75d5:	90                   	nop
}
    75d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75da:	48 83 c4 20          	add    $0x20,%rsp
    75de:	5b                   	pop    %rbx
    75df:	41 5c                	pop    %r12
    75e1:	5d                   	pop    %rbp
    75e2:	c3                   	ret

00000000000075e3 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    75e3:	55                   	push   %rbp
    75e4:	48 89 e5             	mov    %rsp,%rbp
    75e7:	48 83 ec 10          	sub    $0x10,%rsp
    75eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    75f3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    75f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75fb:	48 89 d6             	mov    %rdx,%rsi
    75fe:	48 89 c7             	mov    %rax,%rdi
    7601:	e8 2a cb ff ff       	call   4130 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    7606:	90                   	nop
}
    7607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    760b:	c9                   	leave
    760c:	c3                   	ret

000000000000760d <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    760d:	55                   	push   %rbp
    760e:	48 89 e5             	mov    %rsp,%rbp
    7611:	48 83 ec 20          	sub    $0x20,%rsp
    7615:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7619:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    761d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    7621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7625:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    762b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    762f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7633:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    7637:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    763b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    763f:	48 89 d6             	mov    %rdx,%rsi
    7642:	48 89 c7             	mov    %rax,%rdi
    7645:	e8 56 cd ff ff       	call   43a0 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    764a:	90                   	nop
}
    764b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    764f:	c9                   	leave
    7650:	c3                   	ret

0000000000007651 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7651:	55                   	push   %rbp
    7652:	48 89 e5             	mov    %rsp,%rbp
    7655:	53                   	push   %rbx
    7656:	48 83 ec 28          	sub    $0x28,%rsp
    765a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    765e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    7662:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7666:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    766a:	ba 00 00 00 00       	mov    $0x0,%edx
    766f:	48 89 ce             	mov    %rcx,%rsi
    7672:	48 89 c7             	mov    %rax,%rdi
    7675:	e8 36 cc ff ff       	call   42b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    767a:	8b 45 e8             	mov    -0x18(%rbp),%eax
    767d:	89 c3                	mov    %eax,%ebx
    767f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7683:	48 89 c7             	mov    %rax,%rdi
    7686:	e8 c9 0f 00 00       	call   8654 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    768b:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    768f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7693:	48 89 de             	mov    %rbx,%rsi
    7696:	48 89 c7             	mov    %rax,%rdi
    7699:	e8 ee 0f 00 00       	call   868c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    769e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    76a2:	48 89 c7             	mov    %rax,%rdi
    76a5:	e8 c6 0f 00 00       	call   8670 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    76aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76ae:	48 89 c7             	mov    %rax,%rdi
    76b1:	e8 90 10 00 00       	call   8746 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    76b6:	48 89 c2             	mov    %rax,%rdx
    76b9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    76bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76c1:	48 89 ce             	mov    %rcx,%rsi
    76c4:	48 89 c7             	mov    %rax,%rdi
    76c7:	e8 e4 cb ff ff       	call   42b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    76cc:	eb 34                	jmp    7702 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    76ce:	48 89 c3             	mov    %rax,%rbx
    76d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    76d5:	48 89 c7             	mov    %rax,%rdi
    76d8:	e8 93 0f 00 00       	call   8670 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    76dd:	48 89 d8             	mov    %rbx,%rax
    76e0:	48 89 c7             	mov    %rax,%rdi
    76e3:	e8 18 d1 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    76e8:	48 89 c3             	mov    %rax,%rbx
    76eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76ef:	48 89 c7             	mov    %rax,%rdi
    76f2:	e8 0b 10 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    76f7:	48 89 d8             	mov    %rbx,%rax
    76fa:	48 89 c7             	mov    %rax,%rdi
    76fd:	e8 fe d0 ff ff       	call   4800 <_Unwind_Resume@plt>
    7702:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7706:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    770a:	c9                   	leave
    770b:	c3                   	ret

000000000000770c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    770c:	55                   	push   %rbp
    770d:	48 89 e5             	mov    %rsp,%rbp
    7710:	53                   	push   %rbx
    7711:	48 83 ec 68          	sub    $0x68,%rsp
    7715:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    7719:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    771d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7721:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    7725:	48 89 d6             	mov    %rdx,%rsi
    7728:	48 89 c7             	mov    %rax,%rdi
    772b:	e8 21 ff ff ff       	call   7651 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    7730:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7734:	48 89 c7             	mov    %rax,%rdi
    7737:	e8 86 10 00 00       	call   87c2 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    773c:	48 89 c3             	mov    %rax,%rbx
    773f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7743:	48 89 c7             	mov    %rax,%rdi
    7746:	e8 a5 10 00 00       	call   87f0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    774b:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    774f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7753:	48 89 de             	mov    %rbx,%rsi
    7756:	48 89 c7             	mov    %rax,%rdi
    7759:	e8 ca 10 00 00       	call   8828 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    775e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7762:	48 89 c7             	mov    %rax,%rdi
    7765:	e8 a2 10 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    776a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7771:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7772:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7776:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    777a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    777e:	48 89 c7             	mov    %rax,%rdi
    7781:	e8 5c 11 00 00       	call   88e2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7786:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    778a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    778e:	48 89 c7             	mov    %rax,%rdi
    7791:	e8 72 11 00 00       	call   8908 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7796:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    779a:	eb 4e                	jmp    77ea <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    779c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    77a0:	48 89 c7             	mov    %rax,%rdi
    77a3:	e8 e4 11 00 00       	call   898c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    77a8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    77ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77b0:	8b 00                	mov    (%rax),%eax
    77b2:	83 e0 01             	and    $0x1,%eax
    77b5:	85 c0                	test   %eax,%eax
    77b7:	74 25                	je     77de <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    77b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77bd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    77c1:	48 89 d6             	mov    %rdx,%rsi
    77c4:	48 89 c7             	mov    %rax,%rdi
    77c7:	e8 d2 11 00 00       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    77cc:	48 89 c2             	mov    %rax,%rdx
    77cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77d3:	48 89 c6             	mov    %rax,%rsi
    77d6:	48 89 d7             	mov    %rdx,%rdi
    77d9:	e8 ea 11 00 00       	call   89c8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    77de:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    77e2:	48 89 c7             	mov    %rax,%rdi
    77e5:	e8 82 11 00 00       	call   896c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    77ea:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    77ee:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    77f2:	48 89 d6             	mov    %rdx,%rsi
    77f5:	48 89 c7             	mov    %rax,%rdi
    77f8:	e8 34 11 00 00       	call   8931 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    77fd:	84 c0                	test   %al,%al
    77ff:	75 9b                	jne    779c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    7801:	90                   	nop
}
    7802:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7806:	48 89 c7             	mov    %rax,%rdi
    7809:	e8 f4 0e 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    780e:	eb 26                	jmp    7836 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    7810:	48 89 c3             	mov    %rax,%rbx
    7813:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7817:	48 89 c7             	mov    %rax,%rdi
    781a:	e8 ed 0f 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    781f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7823:	48 89 c7             	mov    %rax,%rdi
    7826:	e8 d7 0e 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    782b:	48 89 d8             	mov    %rbx,%rax
    782e:	48 89 c7             	mov    %rax,%rdi
    7831:	e8 ca cf ff ff       	call   4800 <_Unwind_Resume@plt>
    7836:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    783a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    783e:	c9                   	leave
    783f:	c3                   	ret

0000000000007840 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7840:	55                   	push   %rbp
    7841:	48 89 e5             	mov    %rsp,%rbp
    7844:	53                   	push   %rbx
    7845:	48 83 ec 68          	sub    $0x68,%rsp
    7849:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    784d:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7851:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7855:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    7859:	48 89 d6             	mov    %rdx,%rsi
    785c:	48 89 c7             	mov    %rax,%rdi
    785f:	e8 ed fd ff ff       	call   7651 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    7864:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7868:	48 89 c7             	mov    %rax,%rdi
    786b:	e8 52 0f 00 00       	call   87c2 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7870:	48 89 c3             	mov    %rax,%rbx
    7873:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7877:	48 89 c7             	mov    %rax,%rdi
    787a:	e8 71 0f 00 00       	call   87f0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    787f:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7883:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7887:	48 89 de             	mov    %rbx,%rsi
    788a:	48 89 c7             	mov    %rax,%rdi
    788d:	e8 96 0f 00 00       	call   8828 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7892:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7896:	48 89 c7             	mov    %rax,%rdi
    7899:	e8 6e 0f 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    789e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    78a5:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    78a6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    78aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    78ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78b2:	48 89 c7             	mov    %rax,%rdi
    78b5:	e8 28 10 00 00       	call   88e2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    78ba:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    78be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78c2:	48 89 c7             	mov    %rax,%rdi
    78c5:	e8 3e 10 00 00       	call   8908 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    78ca:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    78ce:	eb 53                	jmp    7923 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    78d0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    78d4:	48 89 c7             	mov    %rax,%rdi
    78d7:	e8 b0 10 00 00       	call   898c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    78dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    78e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78e4:	8b 00                	mov    (%rax),%eax
    78e6:	83 e0 02             	and    $0x2,%eax
    78e9:	85 c0                	test   %eax,%eax
    78eb:	74 25                	je     7912 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    78ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78f1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    78f5:	48 89 d6             	mov    %rdx,%rsi
    78f8:	48 89 c7             	mov    %rax,%rdi
    78fb:	e8 9e 10 00 00       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7900:	48 89 c2             	mov    %rax,%rdx
    7903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7907:	48 89 c6             	mov    %rax,%rsi
    790a:	48 89 d7             	mov    %rdx,%rdi
    790d:	e8 b6 10 00 00       	call   89c8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7912:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7917:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    791b:	48 89 c7             	mov    %rax,%rdi
    791e:	e8 49 10 00 00       	call   896c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7923:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7927:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    792b:	48 89 d6             	mov    %rdx,%rsi
    792e:	48 89 c7             	mov    %rax,%rdi
    7931:	e8 fb 0f 00 00       	call   8931 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7936:	84 c0                	test   %al,%al
    7938:	75 96                	jne    78d0 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    793a:	90                   	nop
}
    793b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    793f:	48 89 c7             	mov    %rax,%rdi
    7942:	e8 bb 0d 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    7947:	eb 26                	jmp    796f <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    7949:	48 89 c3             	mov    %rax,%rbx
    794c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7950:	48 89 c7             	mov    %rax,%rdi
    7953:	e8 b4 0e 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7958:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    795c:	48 89 c7             	mov    %rax,%rdi
    795f:	e8 9e 0d 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7964:	48 89 d8             	mov    %rbx,%rax
    7967:	48 89 c7             	mov    %rax,%rdi
    796a:	e8 91 ce ff ff       	call   4800 <_Unwind_Resume@plt>
    796f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7973:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7977:	c9                   	leave
    7978:	c3                   	ret

0000000000007979 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    7979:	55                   	push   %rbp
    797a:	48 89 e5             	mov    %rsp,%rbp
    797d:	53                   	push   %rbx
    797e:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    7985:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    7989:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    798d:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7994:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7998:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    799c:	48 89 d6             	mov    %rdx,%rsi
    799f:	48 89 c7             	mov    %rax,%rdi
    79a2:	e8 aa fc ff ff       	call   7651 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    79a7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    79ab:	48 89 c7             	mov    %rax,%rdi
    79ae:	e8 0f 0e 00 00       	call   87c2 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    79b3:	48 89 c3             	mov    %rax,%rbx
    79b6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    79ba:	48 89 c7             	mov    %rax,%rdi
    79bd:	e8 2e 0e 00 00       	call   87f0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    79c2:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    79c6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    79ca:	48 89 de             	mov    %rbx,%rsi
    79cd:	48 89 c7             	mov    %rax,%rdi
    79d0:	e8 53 0e 00 00       	call   8828 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    79d5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    79d9:	48 89 c7             	mov    %rax,%rdi
    79dc:	e8 2b 0e 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    79e1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    79e8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    79ec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    79f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79f4:	48 89 c7             	mov    %rax,%rdi
    79f7:	e8 e6 0e 00 00       	call   88e2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    79fc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7a00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a04:	48 89 c7             	mov    %rax,%rdi
    7a07:	e8 fc 0e 00 00       	call   8908 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7a0c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7a10:	eb 6c                	jmp    7a7e <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    7a12:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7a16:	48 89 c7             	mov    %rax,%rdi
    7a19:	e8 6e 0f 00 00       	call   898c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7a1e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    7a22:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    7a29:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    7a2d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    7a34:	8b 75 ec             	mov    -0x14(%rbp),%esi
    7a37:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7a3b:	48 89 c7             	mov    %rax,%rdi
    7a3e:	e8 3d ca ff ff       	call   4480 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    7a43:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7a46:	85 c0                	test   %eax,%eax
    7a48:	74 24                	je     7a6e <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    7a4a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7a4d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7a51:	48 89 d6             	mov    %rdx,%rsi
    7a54:	48 89 c7             	mov    %rax,%rdi
    7a57:	e8 42 0f 00 00       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7a5c:	48 89 c2             	mov    %rax,%rdx
    7a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a63:	48 89 c6             	mov    %rax,%rsi
    7a66:	48 89 d7             	mov    %rdx,%rdi
    7a69:	e8 5a 0f 00 00       	call   89c8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7a6e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7a72:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7a76:	48 89 c7             	mov    %rax,%rdi
    7a79:	e8 ee 0e 00 00       	call   896c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7a7e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7a82:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7a86:	48 89 d6             	mov    %rdx,%rsi
    7a89:	48 89 c7             	mov    %rax,%rdi
    7a8c:	e8 a0 0e 00 00       	call   8931 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7a91:	84 c0                	test   %al,%al
    7a93:	0f 85 79 ff ff ff    	jne    7a12 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    7a99:	90                   	nop
}
    7a9a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7a9e:	48 89 c7             	mov    %rax,%rdi
    7aa1:	e8 5c 0c 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    7aa6:	eb 37                	jmp    7adf <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    7aa8:	48 89 c3             	mov    %rax,%rbx
    7aab:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7aaf:	48 89 c7             	mov    %rax,%rdi
    7ab2:	e8 55 0d 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7ab7:	eb 0f                	jmp    7ac8 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    7ab9:	48 89 c3             	mov    %rax,%rbx
    7abc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7ac0:	48 89 c7             	mov    %rax,%rdi
    7ac3:	e8 d6 0d 00 00       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7ac8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7acc:	48 89 c7             	mov    %rax,%rdi
    7acf:	e8 2e 0c 00 00       	call   8702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7ad4:	48 89 d8             	mov    %rbx,%rax
    7ad7:	48 89 c7             	mov    %rax,%rdi
    7ada:	e8 21 cd ff ff       	call   4800 <_Unwind_Resume@plt>
    7adf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7ae3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ae7:	c9                   	leave
    7ae8:	c3                   	ret

0000000000007ae9 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    7ae9:	55                   	push   %rbp
    7aea:	48 89 e5             	mov    %rsp,%rbp
    7aed:	41 54                	push   %r12
    7aef:	53                   	push   %rbx
    7af0:	48 83 ec 20          	sub    $0x20,%rsp
    7af4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7af8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7afc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b04:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7b08:	0f 11 00             	movups %xmm0,(%rax)
    7b0b:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7b0f:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    7b13:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7b18:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b1c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7b20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b24:	48 89 ce             	mov    %rcx,%rsi
    7b27:	48 89 c7             	mov    %rax,%rdi
    7b2a:	e8 21 c8 ff ff       	call   4350 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    7b2f:	85 c0                	test   %eax,%eax
    7b31:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7b34:	84 c0                	test   %al,%al
    7b36:	74 51                	je     7b89 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    7b38:	bf 10 00 00 00       	mov    $0x10,%edi
    7b3d:	e8 5e c6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7b42:	48 89 c3             	mov    %rax,%rbx
    7b45:	48 8d 05 4c 45 01 00 	lea    0x1454c(%rip),%rax        # 1c098 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    7b4c:	48 89 c6             	mov    %rax,%rsi
    7b4f:	48 89 df             	mov    %rbx,%rdi
    7b52:	e8 c9 c5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7b57:	48 8b 05 4a 54 02 00 	mov    0x2544a(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b5e:	48 89 c2             	mov    %rax,%rdx
    7b61:	48 8d 05 d8 51 02 00 	lea    0x251d8(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b68:	48 89 c6             	mov    %rax,%rsi
    7b6b:	48 89 df             	mov    %rbx,%rdi
    7b6e:	e8 2d cc ff ff       	call   47a0 <__cxa_throw@plt>
    7b73:	49 89 c4             	mov    %rax,%r12
    7b76:	48 89 df             	mov    %rbx,%rdi
    7b79:	e8 22 c7 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7b7e:	4c 89 e0             	mov    %r12,%rax
    7b81:	48 89 c7             	mov    %rax,%rdi
    7b84:	e8 77 cc ff ff       	call   4800 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    7b89:	90                   	nop
}
    7b8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b8e:	48 83 c4 20          	add    $0x20,%rsp
    7b92:	5b                   	pop    %rbx
    7b93:	41 5c                	pop    %r12
    7b95:	5d                   	pop    %rbp
    7b96:	c3                   	ret

0000000000007b97 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    7b97:	55                   	push   %rbp
    7b98:	48 89 e5             	mov    %rsp,%rbp
    7b9b:	41 54                	push   %r12
    7b9d:	53                   	push   %rbx
    7b9e:	48 83 ec 30          	sub    $0x30,%rsp
    7ba2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7ba6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7baa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7bae:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7bb2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7bb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7bba:	b9 00 00 00 00       	mov    $0x0,%ecx
    7bbf:	48 89 c7             	mov    %rax,%rdi
    7bc2:	e8 f9 c9 ff ff       	call   45c0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    7bc7:	85 c0                	test   %eax,%eax
    7bc9:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7bcc:	84 c0                	test   %al,%al
    7bce:	74 3b                	je     7c0b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7bd0:	bf 10 00 00 00       	mov    $0x10,%edi
    7bd5:	e8 c6 c5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7bda:	48 89 c3             	mov    %rax,%rbx
    7bdd:	48 8d 05 dc 44 01 00 	lea    0x144dc(%rip),%rax        # 1c0c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7be4:	48 89 c6             	mov    %rax,%rsi
    7be7:	48 89 df             	mov    %rbx,%rdi
    7bea:	e8 31 c5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7bef:	48 8b 05 b2 53 02 00 	mov    0x253b2(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7bf6:	48 89 c2             	mov    %rax,%rdx
    7bf9:	48 8d 05 40 51 02 00 	lea    0x25140(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c00:	48 89 c6             	mov    %rax,%rsi
    7c03:	48 89 df             	mov    %rbx,%rdi
    7c06:	e8 95 cb ff ff       	call   47a0 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7c0b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7c0e:	89 c3                	mov    %eax,%ebx
    7c10:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c14:	48 89 c7             	mov    %rax,%rdi
    7c17:	e8 84 0e 00 00       	call   8aa0 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    7c1c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7c20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c24:	48 89 de             	mov    %rbx,%rsi
    7c27:	48 89 c7             	mov    %rax,%rdi
    7c2a:	e8 a9 0e 00 00       	call   8ad8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    7c2f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c33:	48 89 c7             	mov    %rax,%rdi
    7c36:	e8 81 0e 00 00       	call   8abc <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7c3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c3f:	48 89 c7             	mov    %rax,%rdi
    7c42:	e8 4b 0f 00 00       	call   8b92 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    7c47:	48 89 c1             	mov    %rax,%rcx
    7c4a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7c4e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7c52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c56:	48 89 c7             	mov    %rax,%rdi
    7c59:	e8 62 c9 ff ff       	call   45c0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    7c5e:	85 c0                	test   %eax,%eax
    7c60:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7c63:	84 c0                	test   %al,%al
    7c65:	0f 84 95 00 00 00    	je     7d00 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    7c6b:	bf 10 00 00 00       	mov    $0x10,%edi
    7c70:	e8 2b c5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7c75:	48 89 c3             	mov    %rax,%rbx
    7c78:	48 8d 05 41 44 01 00 	lea    0x14441(%rip),%rax        # 1c0c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7c7f:	48 89 c6             	mov    %rax,%rsi
    7c82:	48 89 df             	mov    %rbx,%rdi
    7c85:	e8 96 c4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7c8a:	48 8b 05 17 53 02 00 	mov    0x25317(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c91:	48 89 c2             	mov    %rax,%rdx
    7c94:	48 8d 05 a5 50 02 00 	lea    0x250a5(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c9b:	48 89 c6             	mov    %rax,%rsi
    7c9e:	48 89 df             	mov    %rbx,%rdi
    7ca1:	e8 fa ca ff ff       	call   47a0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7ca6:	49 89 c4             	mov    %rax,%r12
    7ca9:	48 89 df             	mov    %rbx,%rdi
    7cac:	e8 ef c5 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7cb1:	4c 89 e0             	mov    %r12,%rax
    7cb4:	48 89 c7             	mov    %rax,%rdi
    7cb7:	e8 44 cb ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7cbc:	48 89 c3             	mov    %rax,%rbx
    7cbf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7cc3:	48 89 c7             	mov    %rax,%rdi
    7cc6:	e8 f1 0d 00 00       	call   8abc <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7ccb:	48 89 d8             	mov    %rbx,%rax
    7cce:	48 89 c7             	mov    %rax,%rdi
    7cd1:	e8 2a cb ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7cd6:	49 89 c4             	mov    %rax,%r12
    7cd9:	48 89 df             	mov    %rbx,%rdi
    7cdc:	e8 bf c5 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7ce1:	4c 89 e3             	mov    %r12,%rbx
    7ce4:	eb 03                	jmp    7ce9 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    7ce6:	48 89 c3             	mov    %rax,%rbx
    7ce9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ced:	48 89 c7             	mov    %rax,%rdi
    7cf0:	e8 59 0e 00 00       	call   8b4e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7cf5:	48 89 d8             	mov    %rbx,%rax
    7cf8:	48 89 c7             	mov    %rax,%rdi
    7cfb:	e8 00 cb ff ff       	call   4800 <_Unwind_Resume@plt>
  return surfaceFormats;
    7d00:	90                   	nop
}
    7d01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d05:	48 83 c4 30          	add    $0x30,%rsp
    7d09:	5b                   	pop    %rbx
    7d0a:	41 5c                	pop    %r12
    7d0c:	5d                   	pop    %rbp
    7d0d:	c3                   	ret

0000000000007d0e <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7d0e:	55                   	push   %rbp
    7d0f:	48 89 e5             	mov    %rsp,%rbp
    7d12:	41 54                	push   %r12
    7d14:	53                   	push   %rbx
    7d15:	48 83 ec 30          	sub    $0x30,%rsp
    7d19:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7d1d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7d21:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    7d25:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7d29:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7d2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d31:	b9 00 00 00 00       	mov    $0x0,%ecx
    7d36:	48 89 c7             	mov    %rax,%rdi
    7d39:	e8 92 c8 ff ff       	call   45d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7d3e:	85 c0                	test   %eax,%eax
    7d40:	0f 95 c0             	setne  %al
    7d43:	84 c0                	test   %al,%al
    7d45:	74 3b                	je     7d82 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7d47:	bf 10 00 00 00       	mov    $0x10,%edi
    7d4c:	e8 4f c4 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7d51:	48 89 c3             	mov    %rax,%rbx
    7d54:	48 8d 05 8d 43 01 00 	lea    0x1438d(%rip),%rax        # 1c0e8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7d5b:	48 89 c6             	mov    %rax,%rsi
    7d5e:	48 89 df             	mov    %rbx,%rdi
    7d61:	e8 ba c3 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7d66:	48 8b 05 3b 52 02 00 	mov    0x2523b(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7d6d:	48 89 c2             	mov    %rax,%rdx
    7d70:	48 8d 05 c9 4f 02 00 	lea    0x24fc9(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7d77:	48 89 c6             	mov    %rax,%rsi
    7d7a:	48 89 df             	mov    %rbx,%rdi
    7d7d:	e8 1e ca ff ff       	call   47a0 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7d82:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7d85:	89 c3                	mov    %eax,%ebx
    7d87:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d8b:	48 89 c7             	mov    %rax,%rdi
    7d8e:	e8 71 0e 00 00       	call   8c04 <_ZNSaI16VkPresentModeKHREC1Ev>
    7d93:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7d97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d9b:	48 89 de             	mov    %rbx,%rsi
    7d9e:	48 89 c7             	mov    %rax,%rdi
    7da1:	e8 96 0e 00 00       	call   8c3c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    7da6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7daa:	48 89 c7             	mov    %rax,%rdi
    7dad:	e8 6e 0e 00 00       	call   8c20 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7db2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7db6:	48 89 c7             	mov    %rax,%rdi
    7db9:	e8 38 0f 00 00       	call   8cf6 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7dbe:	48 89 c1             	mov    %rax,%rcx
    7dc1:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7dc5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7dc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7dcd:	48 89 c7             	mov    %rax,%rdi
    7dd0:	e8 fb c7 ff ff       	call   45d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7dd5:	85 c0                	test   %eax,%eax
    7dd7:	0f 95 c0             	setne  %al
    7dda:	84 c0                	test   %al,%al
    7ddc:	0f 84 95 00 00 00    	je     7e77 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7de2:	bf 10 00 00 00       	mov    $0x10,%edi
    7de7:	e8 b4 c3 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7dec:	48 89 c3             	mov    %rax,%rbx
    7def:	48 8d 05 f2 42 01 00 	lea    0x142f2(%rip),%rax        # 1c0e8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7df6:	48 89 c6             	mov    %rax,%rsi
    7df9:	48 89 df             	mov    %rbx,%rdi
    7dfc:	e8 1f c3 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7e01:	48 8b 05 a0 51 02 00 	mov    0x251a0(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7e08:	48 89 c2             	mov    %rax,%rdx
    7e0b:	48 8d 05 2e 4f 02 00 	lea    0x24f2e(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7e12:	48 89 c6             	mov    %rax,%rsi
    7e15:	48 89 df             	mov    %rbx,%rdi
    7e18:	e8 83 c9 ff ff       	call   47a0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7e1d:	49 89 c4             	mov    %rax,%r12
    7e20:	48 89 df             	mov    %rbx,%rdi
    7e23:	e8 78 c4 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7e28:	4c 89 e0             	mov    %r12,%rax
    7e2b:	48 89 c7             	mov    %rax,%rdi
    7e2e:	e8 cd c9 ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7e33:	48 89 c3             	mov    %rax,%rbx
    7e36:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7e3a:	48 89 c7             	mov    %rax,%rdi
    7e3d:	e8 de 0d 00 00       	call   8c20 <_ZNSaI16VkPresentModeKHRED1Ev>
    7e42:	48 89 d8             	mov    %rbx,%rax
    7e45:	48 89 c7             	mov    %rax,%rdi
    7e48:	e8 b3 c9 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7e4d:	49 89 c4             	mov    %rax,%r12
    7e50:	48 89 df             	mov    %rbx,%rdi
    7e53:	e8 48 c4 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7e58:	4c 89 e3             	mov    %r12,%rbx
    7e5b:	eb 03                	jmp    7e60 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    7e5d:	48 89 c3             	mov    %rax,%rbx
    7e60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e64:	48 89 c7             	mov    %rax,%rdi
    7e67:	e8 46 0e 00 00       	call   8cb2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7e6c:	48 89 d8             	mov    %rbx,%rax
    7e6f:	48 89 c7             	mov    %rax,%rdi
    7e72:	e8 89 c9 ff ff       	call   4800 <_Unwind_Resume@plt>
  return presentModes;
    7e77:	90                   	nop
}
    7e78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e7c:	48 83 c4 30          	add    $0x30,%rsp
    7e80:	5b                   	pop    %rbx
    7e81:	41 5c                	pop    %r12
    7e83:	5d                   	pop    %rbp
    7e84:	c3                   	ret

0000000000007e85 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    7e85:	55                   	push   %rbp
    7e86:	48 89 e5             	mov    %rsp,%rbp
    7e89:	41 54                	push   %r12
    7e8b:	53                   	push   %rbx
    7e8c:	48 83 ec 30          	sub    $0x30,%rsp
    7e90:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7e94:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7e98:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7e9c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7ea0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7ea4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ea8:	b9 00 00 00 00       	mov    $0x0,%ecx
    7ead:	48 89 c7             	mov    %rax,%rdi
    7eb0:	e8 6b c3 ff ff       	call   4220 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7eb5:	85 c0                	test   %eax,%eax
    7eb7:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7eba:	84 c0                	test   %al,%al
    7ebc:	74 3b                	je     7ef9 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7ebe:	bf 10 00 00 00       	mov    $0x10,%edi
    7ec3:	e8 d8 c2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7ec8:	48 89 c3             	mov    %rax,%rbx
    7ecb:	48 8d 05 46 42 01 00 	lea    0x14246(%rip),%rax        # 1c118 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7ed2:	48 89 c6             	mov    %rax,%rsi
    7ed5:	48 89 df             	mov    %rbx,%rdi
    7ed8:	e8 43 c2 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7edd:	48 8b 05 c4 50 02 00 	mov    0x250c4(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7ee4:	48 89 c2             	mov    %rax,%rdx
    7ee7:	48 8d 05 52 4e 02 00 	lea    0x24e52(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7eee:	48 89 c6             	mov    %rax,%rsi
    7ef1:	48 89 df             	mov    %rbx,%rdi
    7ef4:	e8 a7 c8 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7ef9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7efc:	89 c3                	mov    %eax,%ebx
    7efe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7f02:	48 89 c7             	mov    %rax,%rdi
    7f05:	e8 5e 0e 00 00       	call   8d68 <_ZNSaIP9VkImage_TEC1Ev>
    7f0a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7f0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f12:	48 89 de             	mov    %rbx,%rsi
    7f15:	48 89 c7             	mov    %rax,%rdi
    7f18:	e8 83 0e 00 00       	call   8da0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7f1d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7f21:	48 89 c7             	mov    %rax,%rdi
    7f24:	e8 5b 0e 00 00       	call   8d84 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7f29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f2d:	48 89 c7             	mov    %rax,%rdi
    7f30:	e8 25 0f 00 00       	call   8e5a <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7f35:	48 89 c1             	mov    %rax,%rcx
    7f38:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7f3c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7f40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f44:	48 89 c7             	mov    %rax,%rdi
    7f47:	e8 d4 c2 ff ff       	call   4220 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7f4c:	85 c0                	test   %eax,%eax
    7f4e:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7f51:	84 c0                	test   %al,%al
    7f53:	0f 84 95 00 00 00    	je     7fee <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7f59:	bf 10 00 00 00       	mov    $0x10,%edi
    7f5e:	e8 3d c2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7f63:	48 89 c3             	mov    %rax,%rbx
    7f66:	48 8d 05 ab 41 01 00 	lea    0x141ab(%rip),%rax        # 1c118 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7f6d:	48 89 c6             	mov    %rax,%rsi
    7f70:	48 89 df             	mov    %rbx,%rdi
    7f73:	e8 a8 c1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7f78:	48 8b 05 29 50 02 00 	mov    0x25029(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7f7f:	48 89 c2             	mov    %rax,%rdx
    7f82:	48 8d 05 b7 4d 02 00 	lea    0x24db7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7f89:	48 89 c6             	mov    %rax,%rsi
    7f8c:	48 89 df             	mov    %rbx,%rdi
    7f8f:	e8 0c c8 ff ff       	call   47a0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7f94:	49 89 c4             	mov    %rax,%r12
    7f97:	48 89 df             	mov    %rbx,%rdi
    7f9a:	e8 01 c3 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7f9f:	4c 89 e0             	mov    %r12,%rax
    7fa2:	48 89 c7             	mov    %rax,%rdi
    7fa5:	e8 56 c8 ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7faa:	48 89 c3             	mov    %rax,%rbx
    7fad:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7fb1:	48 89 c7             	mov    %rax,%rdi
    7fb4:	e8 cb 0d 00 00       	call   8d84 <_ZNSaIP9VkImage_TED1Ev>
    7fb9:	48 89 d8             	mov    %rbx,%rax
    7fbc:	48 89 c7             	mov    %rax,%rdi
    7fbf:	e8 3c c8 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7fc4:	49 89 c4             	mov    %rax,%r12
    7fc7:	48 89 df             	mov    %rbx,%rdi
    7fca:	e8 d1 c2 ff ff       	call   42a0 <__cxa_free_exception@plt>
    7fcf:	4c 89 e3             	mov    %r12,%rbx
    7fd2:	eb 03                	jmp    7fd7 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7fd4:	48 89 c3             	mov    %rax,%rbx
    7fd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fdb:	48 89 c7             	mov    %rax,%rdi
    7fde:	e8 33 0e 00 00       	call   8e16 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7fe3:	48 89 d8             	mov    %rbx,%rax
    7fe6:	48 89 c7             	mov    %rax,%rdi
    7fe9:	e8 12 c8 ff ff       	call   4800 <_Unwind_Resume@plt>
  return swapchainImages;
    7fee:	90                   	nop
}
    7fef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ff3:	48 83 c4 30          	add    $0x30,%rsp
    7ff7:	5b                   	pop    %rbx
    7ff8:	41 5c                	pop    %r12
    7ffa:	5d                   	pop    %rbp
    7ffb:	c3                   	ret

0000000000007ffc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7ffc:	55                   	push   %rbp
    7ffd:	48 89 e5             	mov    %rsp,%rbp
    8000:	48 83 ec 10          	sub    $0x10,%rsp
    8004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800c:	48 89 c7             	mov    %rax,%rdi
    800f:	e8 00 01 00 00       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
    8014:	90                   	nop
    8015:	c9                   	leave
    8016:	c3                   	ret
    8017:	90                   	nop

0000000000008018 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    8018:	55                   	push   %rbp
    8019:	48 89 e5             	mov    %rsp,%rbp
    801c:	48 83 ec 10          	sub    $0x10,%rsp
    8020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8028:	48 89 c7             	mov    %rax,%rdi
    802b:	e8 52 02 00 00       	call   8282 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8030:	90                   	nop
    8031:	c9                   	leave
    8032:	c3                   	ret
    8033:	90                   	nop

0000000000008034 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    8034:	55                   	push   %rbp
    8035:	48 89 e5             	mov    %rsp,%rbp
    8038:	48 83 ec 10          	sub    $0x10,%rsp
    803c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8044:	48 89 c7             	mov    %rax,%rdi
    8047:	e8 a4 03 00 00       	call   83f0 <_ZNSaIPKcED1Ev>
    804c:	90                   	nop
    804d:	c9                   	leave
    804e:	c3                   	ret
    804f:	90                   	nop

0000000000008050 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    8050:	55                   	push   %rbp
    8051:	48 89 e5             	mov    %rsp,%rbp
    8054:	48 83 ec 10          	sub    $0x10,%rsp
    8058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    805c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8060:	48 89 c7             	mov    %rax,%rdi
    8063:	e8 a4 04 00 00       	call   850c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8068:	90                   	nop
    8069:	c9                   	leave
    806a:	c3                   	ret
    806b:	90                   	nop

000000000000806c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    806c:	55                   	push   %rbp
    806d:	48 89 e5             	mov    %rsp,%rbp
    8070:	48 83 ec 10          	sub    $0x10,%rsp
    8074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    807c:	48 89 c7             	mov    %rax,%rdi
    807f:	e8 ec 05 00 00       	call   8670 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8084:	90                   	nop
    8085:	c9                   	leave
    8086:	c3                   	ret
    8087:	90                   	nop

0000000000008088 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    8088:	55                   	push   %rbp
    8089:	48 89 e5             	mov    %rsp,%rbp
    808c:	48 83 ec 10          	sub    $0x10,%rsp
    8090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8098:	48 89 c7             	mov    %rax,%rdi
    809b:	e8 6c 07 00 00       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    80a0:	90                   	nop
    80a1:	c9                   	leave
    80a2:	c3                   	ret
    80a3:	90                   	nop

00000000000080a4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    80a4:	55                   	push   %rbp
    80a5:	48 89 e5             	mov    %rsp,%rbp
    80a8:	48 83 ec 10          	sub    $0x10,%rsp
    80ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b4:	48 89 c7             	mov    %rax,%rdi
    80b7:	e8 00 0a 00 00       	call   8abc <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    80bc:	90                   	nop
    80bd:	c9                   	leave
    80be:	c3                   	ret
    80bf:	90                   	nop

00000000000080c0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    80c0:	55                   	push   %rbp
    80c1:	48 89 e5             	mov    %rsp,%rbp
    80c4:	48 83 ec 10          	sub    $0x10,%rsp
    80c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80d0:	48 89 c7             	mov    %rax,%rdi
    80d3:	e8 48 0b 00 00       	call   8c20 <_ZNSaI16VkPresentModeKHRED1Ev>
    80d8:	90                   	nop
    80d9:	c9                   	leave
    80da:	c3                   	ret
    80db:	90                   	nop

00000000000080dc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    80dc:	55                   	push   %rbp
    80dd:	48 89 e5             	mov    %rsp,%rbp
    80e0:	48 83 ec 10          	sub    $0x10,%rsp
    80e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ec:	48 89 c7             	mov    %rax,%rdi
    80ef:	e8 90 0c 00 00       	call   8d84 <_ZNSaIP9VkImage_TED1Ev>
    80f4:	90                   	nop
    80f5:	c9                   	leave
    80f6:	c3                   	ret
    80f7:	90                   	nop

00000000000080f8 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    80f8:	55                   	push   %rbp
    80f9:	48 89 e5             	mov    %rsp,%rbp
    80fc:	48 83 ec 10          	sub    $0x10,%rsp
    8100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8108:	48 89 c7             	mov    %rax,%rdi
    810b:	e8 bc 0d 00 00       	call   8ecc <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    8110:	90                   	nop
    8111:	c9                   	leave
    8112:	c3                   	ret
    8113:	90                   	nop

0000000000008114 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8114:	55                   	push   %rbp
    8115:	48 89 e5             	mov    %rsp,%rbp
    8118:	48 83 ec 10          	sub    $0x10,%rsp
    811c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8124:	48 89 c7             	mov    %rax,%rdi
    8127:	e8 ac 0d 00 00       	call   8ed8 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    812c:	90                   	nop
    812d:	c9                   	leave
    812e:	c3                   	ret
    812f:	90                   	nop

0000000000008130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8130:	55                   	push   %rbp
    8131:	48 89 e5             	mov    %rsp,%rbp
    8134:	53                   	push   %rbx
    8135:	48 83 ec 28          	sub    $0x28,%rsp
    8139:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    813d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8141:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8145:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8149:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    814d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8151:	48 89 d6             	mov    %rdx,%rsi
    8154:	48 89 c7             	mov    %rax,%rdi
    8157:	e8 87 0d 00 00       	call   8ee3 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    815c:	48 89 c1             	mov    %rax,%rcx
    815f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8163:	48 89 c2             	mov    %rax,%rdx
    8166:	48 89 ce             	mov    %rcx,%rsi
    8169:	48 89 df             	mov    %rbx,%rdi
    816c:	e8 d3 0d 00 00       	call   8f44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8171:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8179:	48 89 d6             	mov    %rdx,%rsi
    817c:	48 89 c7             	mov    %rax,%rdi
    817f:	e8 1e 0e 00 00       	call   8fa2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    8184:	eb 1a                	jmp    81a0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8186:	48 89 c3             	mov    %rax,%rbx
    8189:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    818d:	48 89 c7             	mov    %rax,%rdi
    8190:	e8 79 00 00 00       	call   820e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8195:	48 89 d8             	mov    %rbx,%rax
    8198:	48 89 c7             	mov    %rax,%rdi
    819b:	e8 60 c6 ff ff       	call   4800 <_Unwind_Resume@plt>
    81a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81a4:	c9                   	leave
    81a5:	c3                   	ret

00000000000081a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    81a6:	55                   	push   %rbp
    81a7:	48 89 e5             	mov    %rsp,%rbp
    81aa:	48 83 ec 10          	sub    $0x10,%rsp
    81ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    81b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b6:	48 89 c7             	mov    %rax,%rdi
    81b9:	e8 24 0e 00 00       	call   8fe2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    81be:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    81c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    81c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81cd:	48 8b 00             	mov    (%rax),%rax
    81d0:	48 89 ce             	mov    %rcx,%rsi
    81d3:	48 89 c7             	mov    %rax,%rdi
    81d6:	e8 15 0e 00 00       	call   8ff0 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    81db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81df:	48 89 c7             	mov    %rax,%rdi
    81e2:	e8 27 00 00 00       	call   820e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    81e7:	90                   	nop
    81e8:	c9                   	leave
    81e9:	c3                   	ret

00000000000081ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    81ea:	55                   	push   %rbp
    81eb:	48 89 e5             	mov    %rsp,%rbp
    81ee:	48 83 ec 10          	sub    $0x10,%rsp
    81f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    81f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81fa:	48 8b 10             	mov    (%rax),%rdx
    81fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8201:	48 89 d6             	mov    %rdx,%rsi
    8204:	48 89 c7             	mov    %rax,%rdi
    8207:	e8 0e 0e 00 00       	call   901a <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    820c:	c9                   	leave
    820d:	c3                   	ret

000000000000820e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    820e:	55                   	push   %rbp
    820f:	48 89 e5             	mov    %rsp,%rbp
    8212:	48 83 ec 10          	sub    $0x10,%rsp
    8216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    821a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    821e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8226:	48 8b 00             	mov    (%rax),%rax
    8229:	48 29 c2             	sub    %rax,%rdx
    822c:	48 c1 fa 03          	sar    $0x3,%rdx
    8230:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8237:	fc c0 0f 
    823a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    823e:	48 89 c2             	mov    %rax,%rdx
    8241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8245:	48 8b 08             	mov    (%rax),%rcx
    8248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    824c:	48 89 ce             	mov    %rcx,%rsi
    824f:	48 89 c7             	mov    %rax,%rdi
    8252:	e8 fb 0d 00 00       	call   9052 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    825b:	48 89 c7             	mov    %rax,%rdi
    825e:	e8 99 fd ff ff       	call   7ffc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8263:	90                   	nop
    8264:	c9                   	leave
    8265:	c3                   	ret

0000000000008266 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8266:	55                   	push   %rbp
    8267:	48 89 e5             	mov    %rsp,%rbp
    826a:	48 83 ec 10          	sub    $0x10,%rsp
    826e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8276:	48 89 c7             	mov    %rax,%rdi
    8279:	e8 0a 0e 00 00       	call   9088 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    827e:	90                   	nop
    827f:	c9                   	leave
    8280:	c3                   	ret
    8281:	90                   	nop

0000000000008282 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8282:	55                   	push   %rbp
    8283:	48 89 e5             	mov    %rsp,%rbp
    8286:	48 83 ec 10          	sub    $0x10,%rsp
    828a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    828e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8292:	48 89 c7             	mov    %rax,%rdi
    8295:	e8 fa 0d 00 00       	call   9094 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    829a:	90                   	nop
    829b:	c9                   	leave
    829c:	c3                   	ret
    829d:	90                   	nop

000000000000829e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    829e:	55                   	push   %rbp
    829f:	48 89 e5             	mov    %rsp,%rbp
    82a2:	53                   	push   %rbx
    82a3:	48 83 ec 28          	sub    $0x28,%rsp
    82a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    82b3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    82b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    82bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    82bf:	48 89 d6             	mov    %rdx,%rsi
    82c2:	48 89 c7             	mov    %rax,%rdi
    82c5:	e8 d5 0d 00 00       	call   909f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    82ca:	48 89 c1             	mov    %rax,%rcx
    82cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    82d1:	48 89 c2             	mov    %rax,%rdx
    82d4:	48 89 ce             	mov    %rcx,%rsi
    82d7:	48 89 df             	mov    %rbx,%rdi
    82da:	e8 21 0e 00 00       	call   9100 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    82df:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    82e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82e7:	48 89 d6             	mov    %rdx,%rsi
    82ea:	48 89 c7             	mov    %rax,%rdi
    82ed:	e8 6c 0e 00 00       	call   915e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    82f2:	eb 1a                	jmp    830e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    82f4:	48 89 c3             	mov    %rax,%rbx
    82f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82fb:	48 89 c7             	mov    %rax,%rdi
    82fe:	e8 79 00 00 00       	call   837c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8303:	48 89 d8             	mov    %rbx,%rax
    8306:	48 89 c7             	mov    %rax,%rdi
    8309:	e8 f2 c4 ff ff       	call   4800 <_Unwind_Resume@plt>
    830e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8312:	c9                   	leave
    8313:	c3                   	ret

0000000000008314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8314:	55                   	push   %rbp
    8315:	48 89 e5             	mov    %rsp,%rbp
    8318:	48 83 ec 10          	sub    $0x10,%rsp
    831c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8324:	48 89 c7             	mov    %rax,%rdi
    8327:	e8 72 0e 00 00       	call   919e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    832c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    832f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8333:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    833b:	48 8b 00             	mov    (%rax),%rax
    833e:	48 89 ce             	mov    %rcx,%rsi
    8341:	48 89 c7             	mov    %rax,%rdi
    8344:	e8 63 0e 00 00       	call   91ac <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    834d:	48 89 c7             	mov    %rax,%rdi
    8350:	e8 27 00 00 00       	call   837c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8355:	90                   	nop
    8356:	c9                   	leave
    8357:	c3                   	ret

0000000000008358 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8358:	55                   	push   %rbp
    8359:	48 89 e5             	mov    %rsp,%rbp
    835c:	48 83 ec 10          	sub    $0x10,%rsp
    8360:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8368:	48 8b 10             	mov    (%rax),%rdx
    836b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    836f:	48 89 d6             	mov    %rdx,%rsi
    8372:	48 89 c7             	mov    %rax,%rdi
    8375:	e8 5c 0e 00 00       	call   91d6 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    837a:	c9                   	leave
    837b:	c3                   	ret

000000000000837c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    837c:	55                   	push   %rbp
    837d:	48 89 e5             	mov    %rsp,%rbp
    8380:	48 83 ec 10          	sub    $0x10,%rsp
    8384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    838c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8394:	48 8b 00             	mov    (%rax),%rax
    8397:	48 29 c2             	sub    %rax,%rdx
    839a:	48 c1 fa 02          	sar    $0x2,%rdx
    839e:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    83a5:	fc c0 0f 
    83a8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    83ac:	48 89 c2             	mov    %rax,%rdx
    83af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b3:	48 8b 08             	mov    (%rax),%rcx
    83b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ba:	48 89 ce             	mov    %rcx,%rsi
    83bd:	48 89 c7             	mov    %rax,%rdi
    83c0:	e8 49 0e 00 00       	call   920e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    83c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83c9:	48 89 c7             	mov    %rax,%rdi
    83cc:	e8 47 fc ff ff       	call   8018 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    83d1:	90                   	nop
    83d2:	c9                   	leave
    83d3:	c3                   	ret

00000000000083d4 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    83d4:	55                   	push   %rbp
    83d5:	48 89 e5             	mov    %rsp,%rbp
    83d8:	48 83 ec 10          	sub    $0x10,%rsp
    83dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83e4:	48 89 c7             	mov    %rax,%rdi
    83e7:	e8 58 0e 00 00       	call   9244 <_ZNSt15__new_allocatorIPKcEC1Ev>
    83ec:	90                   	nop
    83ed:	c9                   	leave
    83ee:	c3                   	ret
    83ef:	90                   	nop

00000000000083f0 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    83f0:	55                   	push   %rbp
    83f1:	48 89 e5             	mov    %rsp,%rbp
    83f4:	48 83 ec 10          	sub    $0x10,%rsp
    83f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8400:	48 89 c7             	mov    %rax,%rdi
    8403:	e8 48 0e 00 00       	call   9250 <_ZNSt15__new_allocatorIPKcED1Ev>
    8408:	90                   	nop
    8409:	c9                   	leave
    840a:	c3                   	ret
    840b:	90                   	nop

000000000000840c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    840c:	55                   	push   %rbp
    840d:	48 89 e5             	mov    %rsp,%rbp
    8410:	53                   	push   %rbx
    8411:	48 83 ec 28          	sub    $0x28,%rsp
    8415:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8419:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    841d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8421:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8425:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8429:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    842d:	48 89 d6             	mov    %rdx,%rsi
    8430:	48 89 c7             	mov    %rax,%rdi
    8433:	e8 23 0e 00 00       	call   925b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8438:	48 89 c1             	mov    %rax,%rcx
    843b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    843f:	48 89 c2             	mov    %rax,%rdx
    8442:	48 89 ce             	mov    %rcx,%rsi
    8445:	48 89 df             	mov    %rbx,%rdi
    8448:	e8 6f 0e 00 00       	call   92bc <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    844d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8451:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8455:	48 89 d6             	mov    %rdx,%rsi
    8458:	48 89 c7             	mov    %rax,%rdi
    845b:	e8 ba 0e 00 00       	call   931a <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    8460:	eb 1a                	jmp    847c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    8462:	48 89 c3             	mov    %rax,%rbx
    8465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8469:	48 89 c7             	mov    %rax,%rdi
    846c:	e8 31 00 00 00       	call   84a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    8471:	48 89 d8             	mov    %rbx,%rax
    8474:	48 89 c7             	mov    %rax,%rdi
    8477:	e8 84 c3 ff ff       	call   4800 <_Unwind_Resume@plt>
    847c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8480:	c9                   	leave
    8481:	c3                   	ret

0000000000008482 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8482:	55                   	push   %rbp
    8483:	48 89 e5             	mov    %rsp,%rbp
    8486:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    848a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    848e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8492:	48 8b 00             	mov    (%rax),%rax
    8495:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8499:	48 c1 e2 03          	shl    $0x3,%rdx
    849d:	48 01 d0             	add    %rdx,%rax
      }
    84a0:	5d                   	pop    %rbp
    84a1:	c3                   	ret

00000000000084a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    84a2:	55                   	push   %rbp
    84a3:	48 89 e5             	mov    %rsp,%rbp
    84a6:	48 83 ec 10          	sub    $0x10,%rsp
    84aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    84ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    84b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ba:	48 8b 00             	mov    (%rax),%rax
    84bd:	48 29 c2             	sub    %rax,%rdx
    84c0:	48 89 d0             	mov    %rdx,%rax
    84c3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    84c7:	48 89 c2             	mov    %rax,%rdx
    84ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ce:	48 8b 08             	mov    (%rax),%rcx
    84d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d5:	48 89 ce             	mov    %rcx,%rsi
    84d8:	48 89 c7             	mov    %rax,%rdi
    84db:	e8 ae 0e 00 00       	call   938e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    84e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e4:	48 89 c7             	mov    %rax,%rdi
    84e7:	e8 48 fb ff ff       	call   8034 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    84ec:	90                   	nop
    84ed:	c9                   	leave
    84ee:	c3                   	ret
    84ef:	90                   	nop

00000000000084f0 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    84f0:	55                   	push   %rbp
    84f1:	48 89 e5             	mov    %rsp,%rbp
    84f4:	48 83 ec 10          	sub    $0x10,%rsp
    84f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8500:	48 89 c7             	mov    %rax,%rdi
    8503:	e8 bc 0e 00 00       	call   93c4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    8508:	90                   	nop
    8509:	c9                   	leave
    850a:	c3                   	ret
    850b:	90                   	nop

000000000000850c <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    850c:	55                   	push   %rbp
    850d:	48 89 e5             	mov    %rsp,%rbp
    8510:	48 83 ec 10          	sub    $0x10,%rsp
    8514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851c:	48 89 c7             	mov    %rax,%rdi
    851f:	e8 ac 0e 00 00       	call   93d0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    8524:	90                   	nop
    8525:	c9                   	leave
    8526:	c3                   	ret
    8527:	90                   	nop

0000000000008528 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8528:	55                   	push   %rbp
    8529:	48 89 e5             	mov    %rsp,%rbp
    852c:	53                   	push   %rbx
    852d:	48 83 ec 28          	sub    $0x28,%rsp
    8531:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8535:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8539:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    853d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8541:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8545:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8549:	48 89 d6             	mov    %rdx,%rsi
    854c:	48 89 c7             	mov    %rax,%rdi
    854f:	e8 87 0e 00 00       	call   93db <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8554:	48 89 c1             	mov    %rax,%rcx
    8557:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    855b:	48 89 c2             	mov    %rax,%rdx
    855e:	48 89 ce             	mov    %rcx,%rsi
    8561:	48 89 df             	mov    %rbx,%rdi
    8564:	e8 d3 0e 00 00       	call   943c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8569:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    856d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8571:	48 89 d6             	mov    %rdx,%rsi
    8574:	48 89 c7             	mov    %rax,%rdi
    8577:	e8 1e 0f 00 00       	call   949a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    857c:	eb 1a                	jmp    8598 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    857e:	48 89 c3             	mov    %rax,%rbx
    8581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8585:	48 89 c7             	mov    %rax,%rdi
    8588:	e8 79 00 00 00       	call   8606 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    858d:	48 89 d8             	mov    %rbx,%rax
    8590:	48 89 c7             	mov    %rax,%rdi
    8593:	e8 68 c2 ff ff       	call   4800 <_Unwind_Resume@plt>
    8598:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    859c:	c9                   	leave
    859d:	c3                   	ret

000000000000859e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    859e:	55                   	push   %rbp
    859f:	48 89 e5             	mov    %rsp,%rbp
    85a2:	48 83 ec 10          	sub    $0x10,%rsp
    85a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    85aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85ae:	48 89 c7             	mov    %rax,%rdi
    85b1:	e8 24 0f 00 00       	call   94da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    85b6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    85b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85bd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    85c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c5:	48 8b 00             	mov    (%rax),%rax
    85c8:	48 89 ce             	mov    %rcx,%rsi
    85cb:	48 89 c7             	mov    %rax,%rdi
    85ce:	e8 15 0f 00 00       	call   94e8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    85d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85d7:	48 89 c7             	mov    %rax,%rdi
    85da:	e8 27 00 00 00       	call   8606 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    85df:	90                   	nop
    85e0:	c9                   	leave
    85e1:	c3                   	ret

00000000000085e2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    85e2:	55                   	push   %rbp
    85e3:	48 89 e5             	mov    %rsp,%rbp
    85e6:	48 83 ec 10          	sub    $0x10,%rsp
    85ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    85ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f2:	48 8b 10             	mov    (%rax),%rdx
    85f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f9:	48 89 d6             	mov    %rdx,%rsi
    85fc:	48 89 c7             	mov    %rax,%rdi
    85ff:	e8 0e 0f 00 00       	call   9512 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8604:	c9                   	leave
    8605:	c3                   	ret

0000000000008606 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8606:	55                   	push   %rbp
    8607:	48 89 e5             	mov    %rsp,%rbp
    860a:	48 83 ec 10          	sub    $0x10,%rsp
    860e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8616:	48 8b 50 10          	mov    0x10(%rax),%rdx
    861a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    861e:	48 8b 00             	mov    (%rax),%rax
    8621:	48 29 c2             	sub    %rax,%rdx
    8624:	48 89 d0             	mov    %rdx,%rax
    8627:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    862b:	48 89 c2             	mov    %rax,%rdx
    862e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8632:	48 8b 08             	mov    (%rax),%rcx
    8635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8639:	48 89 ce             	mov    %rcx,%rsi
    863c:	48 89 c7             	mov    %rax,%rdi
    863f:	e8 06 0f 00 00       	call   954a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8648:	48 89 c7             	mov    %rax,%rdi
    864b:	e8 00 fa ff ff       	call   8050 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8650:	90                   	nop
    8651:	c9                   	leave
    8652:	c3                   	ret
    8653:	90                   	nop

0000000000008654 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8654:	55                   	push   %rbp
    8655:	48 89 e5             	mov    %rsp,%rbp
    8658:	48 83 ec 10          	sub    $0x10,%rsp
    865c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8664:	48 89 c7             	mov    %rax,%rdi
    8667:	e8 14 0f 00 00       	call   9580 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    866c:	90                   	nop
    866d:	c9                   	leave
    866e:	c3                   	ret
    866f:	90                   	nop

0000000000008670 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8670:	55                   	push   %rbp
    8671:	48 89 e5             	mov    %rsp,%rbp
    8674:	48 83 ec 10          	sub    $0x10,%rsp
    8678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    867c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8680:	48 89 c7             	mov    %rax,%rdi
    8683:	e8 04 0f 00 00       	call   958c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    8688:	90                   	nop
    8689:	c9                   	leave
    868a:	c3                   	ret
    868b:	90                   	nop

000000000000868c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    868c:	55                   	push   %rbp
    868d:	48 89 e5             	mov    %rsp,%rbp
    8690:	53                   	push   %rbx
    8691:	48 83 ec 28          	sub    $0x28,%rsp
    8695:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8699:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    869d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    86a1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    86a5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    86a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86ad:	48 89 d6             	mov    %rdx,%rsi
    86b0:	48 89 c7             	mov    %rax,%rdi
    86b3:	e8 df 0e 00 00       	call   9597 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    86b8:	48 89 c1             	mov    %rax,%rcx
    86bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    86bf:	48 89 c2             	mov    %rax,%rdx
    86c2:	48 89 ce             	mov    %rcx,%rsi
    86c5:	48 89 df             	mov    %rbx,%rdi
    86c8:	e8 2b 0f 00 00       	call   95f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    86cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    86d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86d5:	48 89 d6             	mov    %rdx,%rsi
    86d8:	48 89 c7             	mov    %rax,%rdi
    86db:	e8 76 0f 00 00       	call   9656 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    86e0:	eb 1a                	jmp    86fc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    86e2:	48 89 c3             	mov    %rax,%rbx
    86e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86e9:	48 89 c7             	mov    %rax,%rdi
    86ec:	e8 79 00 00 00       	call   876a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    86f1:	48 89 d8             	mov    %rbx,%rax
    86f4:	48 89 c7             	mov    %rax,%rdi
    86f7:	e8 04 c1 ff ff       	call   4800 <_Unwind_Resume@plt>
    86fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8700:	c9                   	leave
    8701:	c3                   	ret

0000000000008702 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8702:	55                   	push   %rbp
    8703:	48 89 e5             	mov    %rsp,%rbp
    8706:	48 83 ec 10          	sub    $0x10,%rsp
    870a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    870e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8712:	48 89 c7             	mov    %rax,%rdi
    8715:	e8 7c 0f 00 00       	call   9696 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    871a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    871d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8721:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8729:	48 8b 00             	mov    (%rax),%rax
    872c:	48 89 ce             	mov    %rcx,%rsi
    872f:	48 89 c7             	mov    %rax,%rdi
    8732:	e8 6d 0f 00 00       	call   96a4 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    873b:	48 89 c7             	mov    %rax,%rdi
    873e:	e8 27 00 00 00       	call   876a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8743:	90                   	nop
    8744:	c9                   	leave
    8745:	c3                   	ret

0000000000008746 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8746:	55                   	push   %rbp
    8747:	48 89 e5             	mov    %rsp,%rbp
    874a:	48 83 ec 10          	sub    $0x10,%rsp
    874e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8756:	48 8b 10             	mov    (%rax),%rdx
    8759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    875d:	48 89 d6             	mov    %rdx,%rsi
    8760:	48 89 c7             	mov    %rax,%rdi
    8763:	e8 66 0f 00 00       	call   96ce <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8768:	c9                   	leave
    8769:	c3                   	ret

000000000000876a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    876a:	55                   	push   %rbp
    876b:	48 89 e5             	mov    %rsp,%rbp
    876e:	48 83 ec 10          	sub    $0x10,%rsp
    8772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    877a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    877e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8782:	48 8b 00             	mov    (%rax),%rax
    8785:	48 29 c2             	sub    %rax,%rdx
    8788:	48 c1 fa 03          	sar    $0x3,%rdx
    878c:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8793:	aa aa aa 
    8796:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    879a:	48 89 c2             	mov    %rax,%rdx
    879d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a1:	48 8b 08             	mov    (%rax),%rcx
    87a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a8:	48 89 ce             	mov    %rcx,%rsi
    87ab:	48 89 c7             	mov    %rax,%rdi
    87ae:	e8 53 0f 00 00       	call   9706 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    87b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87b7:	48 89 c7             	mov    %rax,%rdi
    87ba:	e8 ad f8 ff ff       	call   806c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    87bf:	90                   	nop
    87c0:	c9                   	leave
    87c1:	c3                   	ret

00000000000087c2 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    87c2:	55                   	push   %rbp
    87c3:	48 89 e5             	mov    %rsp,%rbp
    87c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    87ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87ce:	48 8b 50 08          	mov    0x8(%rax),%rdx
    87d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d6:	48 8b 00             	mov    (%rax),%rax
    87d9:	48 29 c2             	sub    %rax,%rdx
    87dc:	48 c1 fa 03          	sar    $0x3,%rdx
    87e0:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    87e7:	aa aa aa 
    87ea:	48 0f af c2          	imul   %rdx,%rax
    87ee:	5d                   	pop    %rbp
    87ef:	c3                   	ret

00000000000087f0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    87f0:	55                   	push   %rbp
    87f1:	48 89 e5             	mov    %rsp,%rbp
    87f4:	48 83 ec 10          	sub    $0x10,%rsp
    87f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8800:	48 89 c7             	mov    %rax,%rdi
    8803:	e8 34 0f 00 00       	call   973c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8808:	90                   	nop
    8809:	c9                   	leave
    880a:	c3                   	ret
    880b:	90                   	nop

000000000000880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    880c:	55                   	push   %rbp
    880d:	48 89 e5             	mov    %rsp,%rbp
    8810:	48 83 ec 10          	sub    $0x10,%rsp
    8814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    881c:	48 89 c7             	mov    %rax,%rdi
    881f:	e8 24 0f 00 00       	call   9748 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    8824:	90                   	nop
    8825:	c9                   	leave
    8826:	c3                   	ret
    8827:	90                   	nop

0000000000008828 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8828:	55                   	push   %rbp
    8829:	48 89 e5             	mov    %rsp,%rbp
    882c:	53                   	push   %rbx
    882d:	48 83 ec 28          	sub    $0x28,%rsp
    8831:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8835:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8839:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    883d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8841:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8845:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8849:	48 89 d6             	mov    %rdx,%rsi
    884c:	48 89 c7             	mov    %rax,%rdi
    884f:	e8 ff 0e 00 00       	call   9753 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    8854:	48 89 c1             	mov    %rax,%rcx
    8857:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    885b:	48 89 c2             	mov    %rax,%rdx
    885e:	48 89 ce             	mov    %rcx,%rsi
    8861:	48 89 df             	mov    %rbx,%rdi
    8864:	e8 4b 0f 00 00       	call   97b4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    8869:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    886d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8871:	48 89 d6             	mov    %rdx,%rsi
    8874:	48 89 c7             	mov    %rax,%rdi
    8877:	e8 96 0f 00 00       	call   9812 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    887c:	eb 1a                	jmp    8898 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    887e:	48 89 c3             	mov    %rax,%rbx
    8881:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8885:	48 89 c7             	mov    %rax,%rdi
    8888:	e8 bb 01 00 00       	call   8a48 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    888d:	48 89 d8             	mov    %rbx,%rax
    8890:	48 89 c7             	mov    %rax,%rdi
    8893:	e8 68 bf ff ff       	call   4800 <_Unwind_Resume@plt>
    8898:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    889c:	c9                   	leave
    889d:	c3                   	ret

000000000000889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    889e:	55                   	push   %rbp
    889f:	48 89 e5             	mov    %rsp,%rbp
    88a2:	48 83 ec 10          	sub    $0x10,%rsp
    88a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    88aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88ae:	48 89 c7             	mov    %rax,%rdi
    88b1:	e8 9c 0f 00 00       	call   9852 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    88b6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    88b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88bd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    88c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88c5:	48 8b 00             	mov    (%rax),%rax
    88c8:	48 89 ce             	mov    %rcx,%rsi
    88cb:	48 89 c7             	mov    %rax,%rdi
    88ce:	e8 8d 0f 00 00       	call   9860 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    88d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88d7:	48 89 c7             	mov    %rax,%rdi
    88da:	e8 69 01 00 00       	call   8a48 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    88df:	90                   	nop
    88e0:	c9                   	leave
    88e1:	c3                   	ret

00000000000088e2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    88e2:	55                   	push   %rbp
    88e3:	48 89 e5             	mov    %rsp,%rbp
    88e6:	48 83 ec 20          	sub    $0x20,%rsp
    88ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    88ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    88f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    88f6:	48 89 d6             	mov    %rdx,%rsi
    88f9:	48 89 c7             	mov    %rax,%rdi
    88fc:	e8 89 0f 00 00       	call   988a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8905:	c9                   	leave
    8906:	c3                   	ret
    8907:	90                   	nop

0000000000008908 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8908:	55                   	push   %rbp
    8909:	48 89 e5             	mov    %rsp,%rbp
    890c:	48 83 ec 20          	sub    $0x20,%rsp
    8910:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8914:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8918:	48 8d 50 08          	lea    0x8(%rax),%rdx
    891c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8920:	48 89 d6             	mov    %rdx,%rsi
    8923:	48 89 c7             	mov    %rax,%rdi
    8926:	e8 5f 0f 00 00       	call   988a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    892b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    892f:	c9                   	leave
    8930:	c3                   	ret

0000000000008931 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8931:	55                   	push   %rbp
    8932:	48 89 e5             	mov    %rsp,%rbp
    8935:	53                   	push   %rbx
    8936:	48 83 ec 18          	sub    $0x18,%rsp
    893a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    893e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8946:	48 89 c7             	mov    %rax,%rdi
    8949:	e8 5a 0f 00 00       	call   98a8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    894e:	48 8b 18             	mov    (%rax),%rbx
    8951:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8955:	48 89 c7             	mov    %rax,%rdi
    8958:	e8 4b 0f 00 00       	call   98a8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    895d:	48 8b 00             	mov    (%rax),%rax
    8960:	48 39 c3             	cmp    %rax,%rbx
    8963:	0f 95 c0             	setne  %al
    8966:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    896a:	c9                   	leave
    896b:	c3                   	ret

000000000000896c <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    896c:	55                   	push   %rbp
    896d:	48 89 e5             	mov    %rsp,%rbp
    8970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8978:	48 8b 00             	mov    (%rax),%rax
    897b:	48 8d 50 18          	lea    0x18(%rax),%rdx
    897f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8983:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    898a:	5d                   	pop    %rbp
    898b:	c3                   	ret

000000000000898c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    898c:	55                   	push   %rbp
    898d:	48 89 e5             	mov    %rsp,%rbp
    8990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8998:	48 8b 00             	mov    (%rax),%rax
    899b:	5d                   	pop    %rbp
    899c:	c3                   	ret
    899d:	90                   	nop

000000000000899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    899e:	55                   	push   %rbp
    899f:	48 89 e5             	mov    %rsp,%rbp
    89a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    89aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ae:	48 8b 08             	mov    (%rax),%rcx
    89b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    89b5:	48 89 d0             	mov    %rdx,%rax
    89b8:	48 c1 e0 03          	shl    $0x3,%rax
    89bc:	48 29 d0             	sub    %rdx,%rax
    89bf:	48 c1 e0 02          	shl    $0x2,%rax
    89c3:	48 01 c8             	add    %rcx,%rax
      }
    89c6:	5d                   	pop    %rbp
    89c7:	c3                   	ret

00000000000089c8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    89c8:	55                   	push   %rbp
    89c9:	48 89 e5             	mov    %rsp,%rbp
    89cc:	53                   	push   %rbx
    89cd:	48 83 ec 18          	sub    $0x18,%rsp
    89d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    89d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    89d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89dd:	48 89 c7             	mov    %rax,%rdi
    89e0:	e8 d1 0e 00 00       	call   98b6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    89e5:	84 c0                	test   %al,%al
    89e7:	74 36                	je     8a1f <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    89e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89ed:	48 89 c7             	mov    %rax,%rdi
    89f0:	e8 17 0f 00 00       	call   990c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    89f5:	48 89 c3             	mov    %rax,%rbx
    89f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89fc:	48 89 c7             	mov    %rax,%rdi
    89ff:	e8 c4 0e 00 00       	call   98c8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    8a04:	48 89 c1             	mov    %rax,%rcx
    8a07:	48 8b 03             	mov    (%rbx),%rax
    8a0a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    8a0e:	48 89 01             	mov    %rax,(%rcx)
    8a11:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    8a15:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8a19:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8a1d:	eb 1e                	jmp    8a3d <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    8a1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a23:	48 89 c7             	mov    %rax,%rdi
    8a26:	e8 e1 0e 00 00       	call   990c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8a2b:	48 89 c2             	mov    %rax,%rdx
    8a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a32:	48 89 d6             	mov    %rdx,%rsi
    8a35:	48 89 c7             	mov    %rax,%rdi
    8a38:	e8 dd 0e 00 00       	call   991a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    8a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8a41:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a45:	c9                   	leave
    8a46:	c3                   	ret
    8a47:	90                   	nop

0000000000008a48 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8a48:	55                   	push   %rbp
    8a49:	48 89 e5             	mov    %rsp,%rbp
    8a4c:	48 83 ec 10          	sub    $0x10,%rsp
    8a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a58:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a60:	48 8b 00             	mov    (%rax),%rax
    8a63:	48 29 c2             	sub    %rax,%rdx
    8a66:	48 c1 fa 02          	sar    $0x2,%rdx
    8a6a:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    8a71:	db b6 6d 
    8a74:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8a78:	48 89 c2             	mov    %rax,%rdx
    8a7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a7f:	48 8b 08             	mov    (%rax),%rcx
    8a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a86:	48 89 ce             	mov    %rcx,%rsi
    8a89:	48 89 c7             	mov    %rax,%rdi
    8a8c:	e8 e3 0e 00 00       	call   9974 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    8a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a95:	48 89 c7             	mov    %rax,%rdi
    8a98:	e8 eb f5 ff ff       	call   8088 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    8a9d:	90                   	nop
    8a9e:	c9                   	leave
    8a9f:	c3                   	ret

0000000000008aa0 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8aa0:	55                   	push   %rbp
    8aa1:	48 89 e5             	mov    %rsp,%rbp
    8aa4:	48 83 ec 10          	sub    $0x10,%rsp
    8aa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ab0:	48 89 c7             	mov    %rax,%rdi
    8ab3:	e8 f2 0e 00 00       	call   99aa <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    8ab8:	90                   	nop
    8ab9:	c9                   	leave
    8aba:	c3                   	ret
    8abb:	90                   	nop

0000000000008abc <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8abc:	55                   	push   %rbp
    8abd:	48 89 e5             	mov    %rsp,%rbp
    8ac0:	48 83 ec 10          	sub    $0x10,%rsp
    8ac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8acc:	48 89 c7             	mov    %rax,%rdi
    8acf:	e8 e2 0e 00 00       	call   99b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    8ad4:	90                   	nop
    8ad5:	c9                   	leave
    8ad6:	c3                   	ret
    8ad7:	90                   	nop

0000000000008ad8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8ad8:	55                   	push   %rbp
    8ad9:	48 89 e5             	mov    %rsp,%rbp
    8adc:	53                   	push   %rbx
    8add:	48 83 ec 28          	sub    $0x28,%rsp
    8ae1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ae5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8ae9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8aed:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8af1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8af5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8af9:	48 89 d6             	mov    %rdx,%rsi
    8afc:	48 89 c7             	mov    %rax,%rdi
    8aff:	e8 bd 0e 00 00       	call   99c1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8b04:	48 89 c1             	mov    %rax,%rcx
    8b07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b0b:	48 89 c2             	mov    %rax,%rdx
    8b0e:	48 89 ce             	mov    %rcx,%rsi
    8b11:	48 89 df             	mov    %rbx,%rdi
    8b14:	e8 09 0f 00 00       	call   9a22 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8b19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8b1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b21:	48 89 d6             	mov    %rdx,%rsi
    8b24:	48 89 c7             	mov    %rax,%rdi
    8b27:	e8 54 0f 00 00       	call   9a80 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    8b2c:	eb 1a                	jmp    8b48 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    8b2e:	48 89 c3             	mov    %rax,%rbx
    8b31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b35:	48 89 c7             	mov    %rax,%rdi
    8b38:	e8 79 00 00 00       	call   8bb6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8b3d:	48 89 d8             	mov    %rbx,%rax
    8b40:	48 89 c7             	mov    %rax,%rdi
    8b43:	e8 b8 bc ff ff       	call   4800 <_Unwind_Resume@plt>
    8b48:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b4c:	c9                   	leave
    8b4d:	c3                   	ret

0000000000008b4e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8b4e:	55                   	push   %rbp
    8b4f:	48 89 e5             	mov    %rsp,%rbp
    8b52:	48 83 ec 10          	sub    $0x10,%rsp
    8b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b5e:	48 89 c7             	mov    %rax,%rdi
    8b61:	e8 5a 0f 00 00       	call   9ac0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8b66:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8b69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b6d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8b71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b75:	48 8b 00             	mov    (%rax),%rax
    8b78:	48 89 ce             	mov    %rcx,%rsi
    8b7b:	48 89 c7             	mov    %rax,%rdi
    8b7e:	e8 4b 0f 00 00       	call   9ace <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    8b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b87:	48 89 c7             	mov    %rax,%rdi
    8b8a:	e8 27 00 00 00       	call   8bb6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8b8f:	90                   	nop
    8b90:	c9                   	leave
    8b91:	c3                   	ret

0000000000008b92 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8b92:	55                   	push   %rbp
    8b93:	48 89 e5             	mov    %rsp,%rbp
    8b96:	48 83 ec 10          	sub    $0x10,%rsp
    8b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba2:	48 8b 10             	mov    (%rax),%rdx
    8ba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba9:	48 89 d6             	mov    %rdx,%rsi
    8bac:	48 89 c7             	mov    %rax,%rdi
    8baf:	e8 44 0f 00 00       	call   9af8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8bb4:	c9                   	leave
    8bb5:	c3                   	ret

0000000000008bb6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8bb6:	55                   	push   %rbp
    8bb7:	48 89 e5             	mov    %rsp,%rbp
    8bba:	48 83 ec 10          	sub    $0x10,%rsp
    8bbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8bc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bc6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bce:	48 8b 00             	mov    (%rax),%rax
    8bd1:	48 29 c2             	sub    %rax,%rdx
    8bd4:	48 89 d0             	mov    %rdx,%rax
    8bd7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8bdb:	48 89 c2             	mov    %rax,%rdx
    8bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be2:	48 8b 08             	mov    (%rax),%rcx
    8be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be9:	48 89 ce             	mov    %rcx,%rsi
    8bec:	48 89 c7             	mov    %rax,%rdi
    8bef:	e8 3c 0f 00 00       	call   9b30 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf8:	48 89 c7             	mov    %rax,%rdi
    8bfb:	e8 a4 f4 ff ff       	call   80a4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8c00:	90                   	nop
    8c01:	c9                   	leave
    8c02:	c3                   	ret
    8c03:	90                   	nop

0000000000008c04 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8c04:	55                   	push   %rbp
    8c05:	48 89 e5             	mov    %rsp,%rbp
    8c08:	48 83 ec 10          	sub    $0x10,%rsp
    8c0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c14:	48 89 c7             	mov    %rax,%rdi
    8c17:	e8 4a 0f 00 00       	call   9b66 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    8c1c:	90                   	nop
    8c1d:	c9                   	leave
    8c1e:	c3                   	ret
    8c1f:	90                   	nop

0000000000008c20 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8c20:	55                   	push   %rbp
    8c21:	48 89 e5             	mov    %rsp,%rbp
    8c24:	48 83 ec 10          	sub    $0x10,%rsp
    8c28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c30:	48 89 c7             	mov    %rax,%rdi
    8c33:	e8 3a 0f 00 00       	call   9b72 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    8c38:	90                   	nop
    8c39:	c9                   	leave
    8c3a:	c3                   	ret
    8c3b:	90                   	nop

0000000000008c3c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8c3c:	55                   	push   %rbp
    8c3d:	48 89 e5             	mov    %rsp,%rbp
    8c40:	53                   	push   %rbx
    8c41:	48 83 ec 28          	sub    $0x28,%rsp
    8c45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c4d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8c51:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8c55:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c5d:	48 89 d6             	mov    %rdx,%rsi
    8c60:	48 89 c7             	mov    %rax,%rdi
    8c63:	e8 15 0f 00 00       	call   9b7d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8c68:	48 89 c1             	mov    %rax,%rcx
    8c6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c6f:	48 89 c2             	mov    %rax,%rdx
    8c72:	48 89 ce             	mov    %rcx,%rsi
    8c75:	48 89 df             	mov    %rbx,%rdi
    8c78:	e8 61 0f 00 00       	call   9bde <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8c7d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c85:	48 89 d6             	mov    %rdx,%rsi
    8c88:	48 89 c7             	mov    %rax,%rdi
    8c8b:	e8 ac 0f 00 00       	call   9c3c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    8c90:	eb 1a                	jmp    8cac <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    8c92:	48 89 c3             	mov    %rax,%rbx
    8c95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c99:	48 89 c7             	mov    %rax,%rdi
    8c9c:	e8 79 00 00 00       	call   8d1a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8ca1:	48 89 d8             	mov    %rbx,%rax
    8ca4:	48 89 c7             	mov    %rax,%rdi
    8ca7:	e8 54 bb ff ff       	call   4800 <_Unwind_Resume@plt>
    8cac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cb0:	c9                   	leave
    8cb1:	c3                   	ret

0000000000008cb2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8cb2:	55                   	push   %rbp
    8cb3:	48 89 e5             	mov    %rsp,%rbp
    8cb6:	48 83 ec 10          	sub    $0x10,%rsp
    8cba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc2:	48 89 c7             	mov    %rax,%rdi
    8cc5:	e8 b2 0f 00 00       	call   9c7c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8cca:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8ccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8cd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd9:	48 8b 00             	mov    (%rax),%rax
    8cdc:	48 89 ce             	mov    %rcx,%rsi
    8cdf:	48 89 c7             	mov    %rax,%rdi
    8ce2:	e8 a3 0f 00 00       	call   9c8a <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    8ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ceb:	48 89 c7             	mov    %rax,%rdi
    8cee:	e8 27 00 00 00       	call   8d1a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8cf3:	90                   	nop
    8cf4:	c9                   	leave
    8cf5:	c3                   	ret

0000000000008cf6 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8cf6:	55                   	push   %rbp
    8cf7:	48 89 e5             	mov    %rsp,%rbp
    8cfa:	48 83 ec 10          	sub    $0x10,%rsp
    8cfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8d02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d06:	48 8b 10             	mov    (%rax),%rdx
    8d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d0d:	48 89 d6             	mov    %rdx,%rsi
    8d10:	48 89 c7             	mov    %rax,%rdi
    8d13:	e8 9c 0f 00 00       	call   9cb4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8d18:	c9                   	leave
    8d19:	c3                   	ret

0000000000008d1a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8d1a:	55                   	push   %rbp
    8d1b:	48 89 e5             	mov    %rsp,%rbp
    8d1e:	48 83 ec 10          	sub    $0x10,%rsp
    8d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d2a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d32:	48 8b 00             	mov    (%rax),%rax
    8d35:	48 29 c2             	sub    %rax,%rdx
    8d38:	48 89 d0             	mov    %rdx,%rax
    8d3b:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    8d3f:	48 89 c2             	mov    %rax,%rdx
    8d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d46:	48 8b 08             	mov    (%rax),%rcx
    8d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d4d:	48 89 ce             	mov    %rcx,%rsi
    8d50:	48 89 c7             	mov    %rax,%rdi
    8d53:	e8 94 0f 00 00       	call   9cec <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d5c:	48 89 c7             	mov    %rax,%rdi
    8d5f:	e8 5c f3 ff ff       	call   80c0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    8d64:	90                   	nop
    8d65:	c9                   	leave
    8d66:	c3                   	ret
    8d67:	90                   	nop

0000000000008d68 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8d68:	55                   	push   %rbp
    8d69:	48 89 e5             	mov    %rsp,%rbp
    8d6c:	48 83 ec 10          	sub    $0x10,%rsp
    8d70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d78:	48 89 c7             	mov    %rax,%rdi
    8d7b:	e8 a2 0f 00 00       	call   9d22 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    8d80:	90                   	nop
    8d81:	c9                   	leave
    8d82:	c3                   	ret
    8d83:	90                   	nop

0000000000008d84 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8d84:	55                   	push   %rbp
    8d85:	48 89 e5             	mov    %rsp,%rbp
    8d88:	48 83 ec 10          	sub    $0x10,%rsp
    8d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d94:	48 89 c7             	mov    %rax,%rdi
    8d97:	e8 92 0f 00 00       	call   9d2e <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    8d9c:	90                   	nop
    8d9d:	c9                   	leave
    8d9e:	c3                   	ret
    8d9f:	90                   	nop

0000000000008da0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8da0:	55                   	push   %rbp
    8da1:	48 89 e5             	mov    %rsp,%rbp
    8da4:	53                   	push   %rbx
    8da5:	48 83 ec 28          	sub    $0x28,%rsp
    8da9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8dad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8db1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8db5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8db9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8dbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8dc1:	48 89 d6             	mov    %rdx,%rsi
    8dc4:	48 89 c7             	mov    %rax,%rdi
    8dc7:	e8 6d 0f 00 00       	call   9d39 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8dcc:	48 89 c1             	mov    %rax,%rcx
    8dcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8dd3:	48 89 c2             	mov    %rax,%rdx
    8dd6:	48 89 ce             	mov    %rcx,%rsi
    8dd9:	48 89 df             	mov    %rbx,%rdi
    8ddc:	e8 b9 0f 00 00       	call   9d9a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8de1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8de9:	48 89 d6             	mov    %rdx,%rsi
    8dec:	48 89 c7             	mov    %rax,%rdi
    8def:	e8 04 10 00 00       	call   9df8 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8df4:	eb 1a                	jmp    8e10 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8df6:	48 89 c3             	mov    %rax,%rbx
    8df9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8dfd:	48 89 c7             	mov    %rax,%rdi
    8e00:	e8 79 00 00 00       	call   8e7e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8e05:	48 89 d8             	mov    %rbx,%rax
    8e08:	48 89 c7             	mov    %rax,%rdi
    8e0b:	e8 f0 b9 ff ff       	call   4800 <_Unwind_Resume@plt>
    8e10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e14:	c9                   	leave
    8e15:	c3                   	ret

0000000000008e16 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8e16:	55                   	push   %rbp
    8e17:	48 89 e5             	mov    %rsp,%rbp
    8e1a:	48 83 ec 10          	sub    $0x10,%rsp
    8e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e26:	48 89 c7             	mov    %rax,%rdi
    8e29:	e8 0a 10 00 00       	call   9e38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8e2e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e35:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8e39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e3d:	48 8b 00             	mov    (%rax),%rax
    8e40:	48 89 ce             	mov    %rcx,%rsi
    8e43:	48 89 c7             	mov    %rax,%rdi
    8e46:	e8 fb 0f 00 00       	call   9e46 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    8e4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e4f:	48 89 c7             	mov    %rax,%rdi
    8e52:	e8 27 00 00 00       	call   8e7e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8e57:	90                   	nop
    8e58:	c9                   	leave
    8e59:	c3                   	ret

0000000000008e5a <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8e5a:	55                   	push   %rbp
    8e5b:	48 89 e5             	mov    %rsp,%rbp
    8e5e:	48 83 ec 10          	sub    $0x10,%rsp
    8e62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e6a:	48 8b 10             	mov    (%rax),%rdx
    8e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e71:	48 89 d6             	mov    %rdx,%rsi
    8e74:	48 89 c7             	mov    %rax,%rdi
    8e77:	e8 f4 0f 00 00       	call   9e70 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8e7c:	c9                   	leave
    8e7d:	c3                   	ret

0000000000008e7e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8e7e:	55                   	push   %rbp
    8e7f:	48 89 e5             	mov    %rsp,%rbp
    8e82:	48 83 ec 10          	sub    $0x10,%rsp
    8e86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8e8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e8e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e96:	48 8b 00             	mov    (%rax),%rax
    8e99:	48 29 c2             	sub    %rax,%rdx
    8e9c:	48 89 d0             	mov    %rdx,%rax
    8e9f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8ea3:	48 89 c2             	mov    %rax,%rdx
    8ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eaa:	48 8b 08             	mov    (%rax),%rcx
    8ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eb1:	48 89 ce             	mov    %rcx,%rsi
    8eb4:	48 89 c7             	mov    %rax,%rdi
    8eb7:	e8 ec 0f 00 00       	call   9ea8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8ebc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ec0:	48 89 c7             	mov    %rax,%rdi
    8ec3:	e8 14 f2 ff ff       	call   80dc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8ec8:	90                   	nop
    8ec9:	c9                   	leave
    8eca:	c3                   	ret
    8ecb:	90                   	nop

0000000000008ecc <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ecc:	55                   	push   %rbp
    8ecd:	48 89 e5             	mov    %rsp,%rbp
    8ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ed4:	90                   	nop
    8ed5:	5d                   	pop    %rbp
    8ed6:	c3                   	ret
    8ed7:	90                   	nop

0000000000008ed8 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ed8:	55                   	push   %rbp
    8ed9:	48 89 e5             	mov    %rsp,%rbp
    8edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ee0:	90                   	nop
    8ee1:	5d                   	pop    %rbp
    8ee2:	c3                   	ret

0000000000008ee3 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8ee3:	55                   	push   %rbp
    8ee4:	48 89 e5             	mov    %rsp,%rbp
    8ee7:	53                   	push   %rbx
    8ee8:	48 83 ec 28          	sub    $0x28,%rsp
    8eec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8ef0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8ef4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8ef8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8efc:	48 89 d6             	mov    %rdx,%rsi
    8eff:	48 89 c7             	mov    %rax,%rdi
    8f02:	e8 25 01 00 00       	call   902c <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8f07:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f0b:	48 89 c7             	mov    %rax,%rdi
    8f0e:	e8 ca 0f 00 00       	call   9edd <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8f13:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8f17:	0f 92 c3             	setb   %bl
    8f1a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f1e:	48 89 c7             	mov    %rax,%rdi
    8f21:	e8 ee f1 ff ff       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
    8f26:	84 db                	test   %bl,%bl
    8f28:	74 0f                	je     8f39 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8f2a:	48 8d 05 07 32 01 00 	lea    0x13207(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f31:	48 89 c7             	mov    %rax,%rdi
    8f34:	e8 87 b2 ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8f39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8f3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f41:	c9                   	leave
    8f42:	c3                   	ret
    8f43:	90                   	nop

0000000000008f44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f44:	55                   	push   %rbp
    8f45:	48 89 e5             	mov    %rsp,%rbp
    8f48:	53                   	push   %rbx
    8f49:	48 83 ec 28          	sub    $0x28,%rsp
    8f4d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f51:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f55:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8f59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f5d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f61:	48 89 d6             	mov    %rdx,%rsi
    8f64:	48 89 c7             	mov    %rax,%rdi
    8f67:	e8 b4 0f 00 00       	call   9f20 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8f6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f74:	48 89 d6             	mov    %rdx,%rsi
    8f77:	48 89 c7             	mov    %rax,%rdi
    8f7a:	e8 d3 0f 00 00       	call   9f52 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8f7f:	eb 1a                	jmp    8f9b <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8f81:	48 89 c3             	mov    %rax,%rbx
    8f84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f88:	48 89 c7             	mov    %rax,%rdi
    8f8b:	e8 6c f0 ff ff       	call   7ffc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8f90:	48 89 d8             	mov    %rbx,%rax
    8f93:	48 89 c7             	mov    %rax,%rdi
    8f96:	e8 65 b8 ff ff       	call   4800 <_Unwind_Resume@plt>
    8f9b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f9f:	c9                   	leave
    8fa0:	c3                   	ret
    8fa1:	90                   	nop

0000000000008fa2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8fa2:	55                   	push   %rbp
    8fa3:	48 89 e5             	mov    %rsp,%rbp
    8fa6:	48 83 ec 10          	sub    $0x10,%rsp
    8faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fb6:	48 89 c7             	mov    %rax,%rdi
    8fb9:	e8 24 00 00 00       	call   8fe2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8fbe:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fc5:	48 8b 00             	mov    (%rax),%rax
    8fc8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8fcc:	48 89 ce             	mov    %rcx,%rsi
    8fcf:	48 89 c7             	mov    %rax,%rdi
    8fd2:	e8 dc 0f 00 00       	call   9fb3 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8fd7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8fdb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8fdf:	90                   	nop
    8fe0:	c9                   	leave
    8fe1:	c3                   	ret

0000000000008fe2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8fe2:	55                   	push   %rbp
    8fe3:	48 89 e5             	mov    %rsp,%rbp
    8fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fee:	5d                   	pop    %rbp
    8fef:	c3                   	ret

0000000000008ff0 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8ff0:	55                   	push   %rbp
    8ff1:	48 89 e5             	mov    %rsp,%rbp
    8ff4:	48 83 ec 20          	sub    $0x20,%rsp
    8ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ffc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9000:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9004:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    900c:	48 89 d6             	mov    %rdx,%rsi
    900f:	48 89 c7             	mov    %rax,%rdi
    9012:	e8 c5 0f 00 00       	call   9fdc <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    9017:	90                   	nop
    9018:	c9                   	leave
    9019:	c3                   	ret

000000000000901a <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    901a:	55                   	push   %rbp
    901b:	48 89 e5             	mov    %rsp,%rbp
    901e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9022:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9026:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    902a:	5d                   	pop    %rbp
    902b:	c3                   	ret

000000000000902c <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    902c:	55                   	push   %rbp
    902d:	48 89 e5             	mov    %rsp,%rbp
    9030:	48 83 ec 10          	sub    $0x10,%rsp
    9034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    903c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9044:	48 89 d6             	mov    %rdx,%rsi
    9047:	48 89 c7             	mov    %rax,%rdi
    904a:	e8 b3 0f 00 00       	call   a002 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    904f:	90                   	nop
    9050:	c9                   	leave
    9051:	c3                   	ret

0000000000009052 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9052:	55                   	push   %rbp
    9053:	48 89 e5             	mov    %rsp,%rbp
    9056:	48 83 ec 20          	sub    $0x20,%rsp
    905a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    905e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9062:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9066:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    906b:	74 17                	je     9084 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    906d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9071:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9075:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9079:	48 89 ce             	mov    %rcx,%rsi
    907c:	48 89 c7             	mov    %rax,%rdi
    907f:	e8 8d 0f 00 00       	call   a011 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    9084:	90                   	nop
    9085:	c9                   	leave
    9086:	c3                   	ret
    9087:	90                   	nop

0000000000009088 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9088:	55                   	push   %rbp
    9089:	48 89 e5             	mov    %rsp,%rbp
    908c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9090:	90                   	nop
    9091:	5d                   	pop    %rbp
    9092:	c3                   	ret
    9093:	90                   	nop

0000000000009094 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9094:	55                   	push   %rbp
    9095:	48 89 e5             	mov    %rsp,%rbp
    9098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    909c:	90                   	nop
    909d:	5d                   	pop    %rbp
    909e:	c3                   	ret

000000000000909f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    909f:	55                   	push   %rbp
    90a0:	48 89 e5             	mov    %rsp,%rbp
    90a3:	53                   	push   %rbx
    90a4:	48 83 ec 28          	sub    $0x28,%rsp
    90a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    90ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    90b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    90b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    90b8:	48 89 d6             	mov    %rdx,%rsi
    90bb:	48 89 c7             	mov    %rax,%rdi
    90be:	e8 25 01 00 00       	call   91e8 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    90c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    90c7:	48 89 c7             	mov    %rax,%rdi
    90ca:	e8 70 0f 00 00       	call   a03f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    90cf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    90d3:	0f 92 c3             	setb   %bl
    90d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    90da:	48 89 c7             	mov    %rax,%rdi
    90dd:	e8 a0 f1 ff ff       	call   8282 <_ZNSaI21VkExtensionPropertiesED1Ev>
    90e2:	84 db                	test   %bl,%bl
    90e4:	74 0f                	je     90f5 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    90e6:	48 8d 05 4b 30 01 00 	lea    0x1304b(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    90ed:	48 89 c7             	mov    %rax,%rdi
    90f0:	e8 cb b0 ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    90f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    90f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90fd:	c9                   	leave
    90fe:	c3                   	ret
    90ff:	90                   	nop

0000000000009100 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9100:	55                   	push   %rbp
    9101:	48 89 e5             	mov    %rsp,%rbp
    9104:	53                   	push   %rbx
    9105:	48 83 ec 28          	sub    $0x28,%rsp
    9109:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    910d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9111:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9119:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    911d:	48 89 d6             	mov    %rdx,%rsi
    9120:	48 89 c7             	mov    %rax,%rdi
    9123:	e8 5a 0f 00 00       	call   a082 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9128:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    912c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9130:	48 89 d6             	mov    %rdx,%rsi
    9133:	48 89 c7             	mov    %rax,%rdi
    9136:	e8 79 0f 00 00       	call   a0b4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    913b:	eb 1a                	jmp    9157 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    913d:	48 89 c3             	mov    %rax,%rbx
    9140:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9144:	48 89 c7             	mov    %rax,%rdi
    9147:	e8 cc ee ff ff       	call   8018 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    914c:	48 89 d8             	mov    %rbx,%rax
    914f:	48 89 c7             	mov    %rax,%rdi
    9152:	e8 a9 b6 ff ff       	call   4800 <_Unwind_Resume@plt>
    9157:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    915b:	c9                   	leave
    915c:	c3                   	ret
    915d:	90                   	nop

000000000000915e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    915e:	55                   	push   %rbp
    915f:	48 89 e5             	mov    %rsp,%rbp
    9162:	48 83 ec 10          	sub    $0x10,%rsp
    9166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    916a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    916e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9172:	48 89 c7             	mov    %rax,%rdi
    9175:	e8 24 00 00 00       	call   919e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    917a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    917d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9181:	48 8b 00             	mov    (%rax),%rax
    9184:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9188:	48 89 ce             	mov    %rcx,%rsi
    918b:	48 89 c7             	mov    %rax,%rdi
    918e:	e8 82 0f 00 00       	call   a115 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9193:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9197:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    919b:	90                   	nop
    919c:	c9                   	leave
    919d:	c3                   	ret

000000000000919e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    919e:	55                   	push   %rbp
    919f:	48 89 e5             	mov    %rsp,%rbp
    91a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    91a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91aa:	5d                   	pop    %rbp
    91ab:	c3                   	ret

00000000000091ac <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    91ac:	55                   	push   %rbp
    91ad:	48 89 e5             	mov    %rsp,%rbp
    91b0:	48 83 ec 20          	sub    $0x20,%rsp
    91b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    91c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    91c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c8:	48 89 d6             	mov    %rdx,%rsi
    91cb:	48 89 c7             	mov    %rax,%rdi
    91ce:	e8 6b 0f 00 00       	call   a13e <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    91d3:	90                   	nop
    91d4:	c9                   	leave
    91d5:	c3                   	ret

00000000000091d6 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    91d6:	55                   	push   %rbp
    91d7:	48 89 e5             	mov    %rsp,%rbp
    91da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    91e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91e6:	5d                   	pop    %rbp
    91e7:	c3                   	ret

00000000000091e8 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    91e8:	55                   	push   %rbp
    91e9:	48 89 e5             	mov    %rsp,%rbp
    91ec:	48 83 ec 10          	sub    $0x10,%rsp
    91f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    91f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    91fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9200:	48 89 d6             	mov    %rdx,%rsi
    9203:	48 89 c7             	mov    %rax,%rdi
    9206:	e8 59 0f 00 00       	call   a164 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    920b:	90                   	nop
    920c:	c9                   	leave
    920d:	c3                   	ret

000000000000920e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    920e:	55                   	push   %rbp
    920f:	48 89 e5             	mov    %rsp,%rbp
    9212:	48 83 ec 20          	sub    $0x20,%rsp
    9216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    921a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    921e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9222:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9227:	74 17                	je     9240 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    922d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9231:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9235:	48 89 ce             	mov    %rcx,%rsi
    9238:	48 89 c7             	mov    %rax,%rdi
    923b:	e8 33 0f 00 00       	call   a173 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    9240:	90                   	nop
    9241:	c9                   	leave
    9242:	c3                   	ret
    9243:	90                   	nop

0000000000009244 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9244:	55                   	push   %rbp
    9245:	48 89 e5             	mov    %rsp,%rbp
    9248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    924c:	90                   	nop
    924d:	5d                   	pop    %rbp
    924e:	c3                   	ret
    924f:	90                   	nop

0000000000009250 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9250:	55                   	push   %rbp
    9251:	48 89 e5             	mov    %rsp,%rbp
    9254:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9258:	90                   	nop
    9259:	5d                   	pop    %rbp
    925a:	c3                   	ret

000000000000925b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    925b:	55                   	push   %rbp
    925c:	48 89 e5             	mov    %rsp,%rbp
    925f:	53                   	push   %rbx
    9260:	48 83 ec 28          	sub    $0x28,%rsp
    9264:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9268:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    926c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9270:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9274:	48 89 d6             	mov    %rdx,%rsi
    9277:	48 89 c7             	mov    %rax,%rdi
    927a:	e8 e9 00 00 00       	call   9368 <_ZNSaIPKcEC1ERKS1_>
    927f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9283:	48 89 c7             	mov    %rax,%rdi
    9286:	e8 16 0f 00 00       	call   a1a1 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    928b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    928f:	0f 92 c3             	setb   %bl
    9292:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9296:	48 89 c7             	mov    %rax,%rdi
    9299:	e8 52 f1 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
    929e:	84 db                	test   %bl,%bl
    92a0:	74 0f                	je     92b1 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    92a2:	48 8d 05 8f 2e 01 00 	lea    0x12e8f(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    92a9:	48 89 c7             	mov    %rax,%rdi
    92ac:	e8 0f af ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    92b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    92b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92b9:	c9                   	leave
    92ba:	c3                   	ret
    92bb:	90                   	nop

00000000000092bc <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    92bc:	55                   	push   %rbp
    92bd:	48 89 e5             	mov    %rsp,%rbp
    92c0:	53                   	push   %rbx
    92c1:	48 83 ec 28          	sub    $0x28,%rsp
    92c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    92cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    92d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    92d9:	48 89 d6             	mov    %rdx,%rsi
    92dc:	48 89 c7             	mov    %rax,%rdi
    92df:	e8 00 0f 00 00       	call   a1e4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    92e4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    92e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92ec:	48 89 d6             	mov    %rdx,%rsi
    92ef:	48 89 c7             	mov    %rax,%rdi
    92f2:	e8 1f 0f 00 00       	call   a216 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    92f7:	eb 1a                	jmp    9313 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    92f9:	48 89 c3             	mov    %rax,%rbx
    92fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9300:	48 89 c7             	mov    %rax,%rdi
    9303:	e8 2c ed ff ff       	call   8034 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    9308:	48 89 d8             	mov    %rbx,%rax
    930b:	48 89 c7             	mov    %rax,%rdi
    930e:	e8 ed b4 ff ff       	call   4800 <_Unwind_Resume@plt>
    9313:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9317:	c9                   	leave
    9318:	c3                   	ret
    9319:	90                   	nop

000000000000931a <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    931a:	55                   	push   %rbp
    931b:	48 89 e5             	mov    %rsp,%rbp
    931e:	48 83 ec 10          	sub    $0x10,%rsp
    9322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9326:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    932a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    932e:	48 89 c7             	mov    %rax,%rdi
    9331:	e8 24 00 00 00       	call   935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9336:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    933d:	48 8b 00             	mov    (%rax),%rax
    9340:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9344:	48 89 ce             	mov    %rcx,%rsi
    9347:	48 89 c7             	mov    %rax,%rdi
    934a:	e8 1d 0f 00 00       	call   a26c <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    934f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9353:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9357:	90                   	nop
    9358:	c9                   	leave
    9359:	c3                   	ret

000000000000935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    935a:	55                   	push   %rbp
    935b:	48 89 e5             	mov    %rsp,%rbp
    935e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9366:	5d                   	pop    %rbp
    9367:	c3                   	ret

0000000000009368 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9368:	55                   	push   %rbp
    9369:	48 89 e5             	mov    %rsp,%rbp
    936c:	48 83 ec 10          	sub    $0x10,%rsp
    9370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9374:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9378:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    937c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9380:	48 89 d6             	mov    %rdx,%rsi
    9383:	48 89 c7             	mov    %rax,%rdi
    9386:	e8 0b 0f 00 00       	call   a296 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    938b:	90                   	nop
    938c:	c9                   	leave
    938d:	c3                   	ret

000000000000938e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    938e:	55                   	push   %rbp
    938f:	48 89 e5             	mov    %rsp,%rbp
    9392:	48 83 ec 20          	sub    $0x20,%rsp
    9396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    939a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    939e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    93a2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    93a7:	74 17                	je     93c0 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    93a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    93b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93b5:	48 89 ce             	mov    %rcx,%rsi
    93b8:	48 89 c7             	mov    %rax,%rdi
    93bb:	e8 e5 0e 00 00       	call   a2a5 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    93c0:	90                   	nop
    93c1:	c9                   	leave
    93c2:	c3                   	ret
    93c3:	90                   	nop

00000000000093c4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    93c4:	55                   	push   %rbp
    93c5:	48 89 e5             	mov    %rsp,%rbp
    93c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93cc:	90                   	nop
    93cd:	5d                   	pop    %rbp
    93ce:	c3                   	ret
    93cf:	90                   	nop

00000000000093d0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    93d0:	55                   	push   %rbp
    93d1:	48 89 e5             	mov    %rsp,%rbp
    93d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93d8:	90                   	nop
    93d9:	5d                   	pop    %rbp
    93da:	c3                   	ret

00000000000093db <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    93db:	55                   	push   %rbp
    93dc:	48 89 e5             	mov    %rsp,%rbp
    93df:	53                   	push   %rbx
    93e0:	48 83 ec 28          	sub    $0x28,%rsp
    93e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    93e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    93ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    93f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93f4:	48 89 d6             	mov    %rdx,%rsi
    93f7:	48 89 c7             	mov    %rax,%rdi
    93fa:	e8 25 01 00 00       	call   9524 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    93ff:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9403:	48 89 c7             	mov    %rax,%rdi
    9406:	e8 c8 0e 00 00       	call   a2d3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    940b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    940f:	0f 92 c3             	setb   %bl
    9412:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9416:	48 89 c7             	mov    %rax,%rdi
    9419:	e8 ee f0 ff ff       	call   850c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    941e:	84 db                	test   %bl,%bl
    9420:	74 0f                	je     9431 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9422:	48 8d 05 0f 2d 01 00 	lea    0x12d0f(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9429:	48 89 c7             	mov    %rax,%rdi
    942c:	e8 8f ad ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9431:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9435:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9439:	c9                   	leave
    943a:	c3                   	ret
    943b:	90                   	nop

000000000000943c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    943c:	55                   	push   %rbp
    943d:	48 89 e5             	mov    %rsp,%rbp
    9440:	53                   	push   %rbx
    9441:	48 83 ec 28          	sub    $0x28,%rsp
    9445:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9449:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    944d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9451:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9455:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9459:	48 89 d6             	mov    %rdx,%rsi
    945c:	48 89 c7             	mov    %rax,%rdi
    945f:	e8 b2 0e 00 00       	call   a316 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9464:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    946c:	48 89 d6             	mov    %rdx,%rsi
    946f:	48 89 c7             	mov    %rax,%rdi
    9472:	e8 d1 0e 00 00       	call   a348 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    9477:	eb 1a                	jmp    9493 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    9479:	48 89 c3             	mov    %rax,%rbx
    947c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9480:	48 89 c7             	mov    %rax,%rdi
    9483:	e8 c8 eb ff ff       	call   8050 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9488:	48 89 d8             	mov    %rbx,%rax
    948b:	48 89 c7             	mov    %rax,%rdi
    948e:	e8 6d b3 ff ff       	call   4800 <_Unwind_Resume@plt>
    9493:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9497:	c9                   	leave
    9498:	c3                   	ret
    9499:	90                   	nop

000000000000949a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    949a:	55                   	push   %rbp
    949b:	48 89 e5             	mov    %rsp,%rbp
    949e:	48 83 ec 10          	sub    $0x10,%rsp
    94a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    94aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94ae:	48 89 c7             	mov    %rax,%rdi
    94b1:	e8 24 00 00 00       	call   94da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    94b6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    94b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94bd:	48 8b 00             	mov    (%rax),%rax
    94c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94c4:	48 89 ce             	mov    %rcx,%rsi
    94c7:	48 89 c7             	mov    %rax,%rdi
    94ca:	e8 cf 0e 00 00       	call   a39e <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    94cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    94d3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    94d7:	90                   	nop
    94d8:	c9                   	leave
    94d9:	c3                   	ret

00000000000094da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    94da:	55                   	push   %rbp
    94db:	48 89 e5             	mov    %rsp,%rbp
    94de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    94e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e6:	5d                   	pop    %rbp
    94e7:	c3                   	ret

00000000000094e8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    94e8:	55                   	push   %rbp
    94e9:	48 89 e5             	mov    %rsp,%rbp
    94ec:	48 83 ec 20          	sub    $0x20,%rsp
    94f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    94fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9504:	48 89 d6             	mov    %rdx,%rsi
    9507:	48 89 c7             	mov    %rax,%rdi
    950a:	e8 b8 0e 00 00       	call   a3c7 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    950f:	90                   	nop
    9510:	c9                   	leave
    9511:	c3                   	ret

0000000000009512 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9512:	55                   	push   %rbp
    9513:	48 89 e5             	mov    %rsp,%rbp
    9516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    951a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    951e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9522:	5d                   	pop    %rbp
    9523:	c3                   	ret

0000000000009524 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9524:	55                   	push   %rbp
    9525:	48 89 e5             	mov    %rsp,%rbp
    9528:	48 83 ec 10          	sub    $0x10,%rsp
    952c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9530:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9534:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    953c:	48 89 d6             	mov    %rdx,%rsi
    953f:	48 89 c7             	mov    %rax,%rdi
    9542:	e8 a7 0e 00 00       	call   a3ee <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    9547:	90                   	nop
    9548:	c9                   	leave
    9549:	c3                   	ret

000000000000954a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    954a:	55                   	push   %rbp
    954b:	48 89 e5             	mov    %rsp,%rbp
    954e:	48 83 ec 20          	sub    $0x20,%rsp
    9552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9556:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    955a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    955e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9563:	74 17                	je     957c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9569:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    956d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9571:	48 89 ce             	mov    %rcx,%rsi
    9574:	48 89 c7             	mov    %rax,%rdi
    9577:	e8 81 0e 00 00       	call   a3fd <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    957c:	90                   	nop
    957d:	c9                   	leave
    957e:	c3                   	ret
    957f:	90                   	nop

0000000000009580 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9580:	55                   	push   %rbp
    9581:	48 89 e5             	mov    %rsp,%rbp
    9584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9588:	90                   	nop
    9589:	5d                   	pop    %rbp
    958a:	c3                   	ret
    958b:	90                   	nop

000000000000958c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    958c:	55                   	push   %rbp
    958d:	48 89 e5             	mov    %rsp,%rbp
    9590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9594:	90                   	nop
    9595:	5d                   	pop    %rbp
    9596:	c3                   	ret

0000000000009597 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9597:	55                   	push   %rbp
    9598:	48 89 e5             	mov    %rsp,%rbp
    959b:	53                   	push   %rbx
    959c:	48 83 ec 28          	sub    $0x28,%rsp
    95a0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    95a4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    95a8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    95ac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    95b0:	48 89 d6             	mov    %rdx,%rsi
    95b3:	48 89 c7             	mov    %rax,%rdi
    95b6:	e8 25 01 00 00       	call   96e0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    95bb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    95bf:	48 89 c7             	mov    %rax,%rdi
    95c2:	e8 64 0e 00 00       	call   a42b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    95c7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    95cb:	0f 92 c3             	setb   %bl
    95ce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    95d2:	48 89 c7             	mov    %rax,%rdi
    95d5:	e8 96 f0 ff ff       	call   8670 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    95da:	84 db                	test   %bl,%bl
    95dc:	74 0f                	je     95ed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    95de:	48 8d 05 53 2b 01 00 	lea    0x12b53(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    95e5:	48 89 c7             	mov    %rax,%rdi
    95e8:	e8 d3 ab ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    95ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    95f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95f5:	c9                   	leave
    95f6:	c3                   	ret
    95f7:	90                   	nop

00000000000095f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    95f8:	55                   	push   %rbp
    95f9:	48 89 e5             	mov    %rsp,%rbp
    95fc:	53                   	push   %rbx
    95fd:	48 83 ec 28          	sub    $0x28,%rsp
    9601:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9605:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9609:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    960d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9611:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9615:	48 89 d6             	mov    %rdx,%rsi
    9618:	48 89 c7             	mov    %rax,%rdi
    961b:	e8 4e 0e 00 00       	call   a46e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9620:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9628:	48 89 d6             	mov    %rdx,%rsi
    962b:	48 89 c7             	mov    %rax,%rdi
    962e:	e8 6d 0e 00 00       	call   a4a0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    9633:	eb 1a                	jmp    964f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    9635:	48 89 c3             	mov    %rax,%rbx
    9638:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    963c:	48 89 c7             	mov    %rax,%rdi
    963f:	e8 28 ea ff ff       	call   806c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    9644:	48 89 d8             	mov    %rbx,%rax
    9647:	48 89 c7             	mov    %rax,%rdi
    964a:	e8 b1 b1 ff ff       	call   4800 <_Unwind_Resume@plt>
    964f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9653:	c9                   	leave
    9654:	c3                   	ret
    9655:	90                   	nop

0000000000009656 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9656:	55                   	push   %rbp
    9657:	48 89 e5             	mov    %rsp,%rbp
    965a:	48 83 ec 10          	sub    $0x10,%rsp
    965e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9662:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    966a:	48 89 c7             	mov    %rax,%rdi
    966d:	e8 24 00 00 00       	call   9696 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9672:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9679:	48 8b 00             	mov    (%rax),%rax
    967c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9680:	48 89 ce             	mov    %rcx,%rsi
    9683:	48 89 c7             	mov    %rax,%rdi
    9686:	e8 75 0e 00 00       	call   a500 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    968b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    968f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9693:	90                   	nop
    9694:	c9                   	leave
    9695:	c3                   	ret

0000000000009696 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9696:	55                   	push   %rbp
    9697:	48 89 e5             	mov    %rsp,%rbp
    969a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    969e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96a2:	5d                   	pop    %rbp
    96a3:	c3                   	ret

00000000000096a4 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    96a4:	55                   	push   %rbp
    96a5:	48 89 e5             	mov    %rsp,%rbp
    96a8:	48 83 ec 20          	sub    $0x20,%rsp
    96ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    96b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    96bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96c0:	48 89 d6             	mov    %rdx,%rsi
    96c3:	48 89 c7             	mov    %rax,%rdi
    96c6:	e8 5e 0e 00 00       	call   a529 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    96cb:	90                   	nop
    96cc:	c9                   	leave
    96cd:	c3                   	ret

00000000000096ce <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    96ce:	55                   	push   %rbp
    96cf:	48 89 e5             	mov    %rsp,%rbp
    96d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    96da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96de:	5d                   	pop    %rbp
    96df:	c3                   	ret

00000000000096e0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    96e0:	55                   	push   %rbp
    96e1:	48 89 e5             	mov    %rsp,%rbp
    96e4:	48 83 ec 10          	sub    $0x10,%rsp
    96e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    96f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    96f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96f8:	48 89 d6             	mov    %rdx,%rsi
    96fb:	48 89 c7             	mov    %rax,%rdi
    96fe:	e8 4d 0e 00 00       	call   a550 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    9703:	90                   	nop
    9704:	c9                   	leave
    9705:	c3                   	ret

0000000000009706 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9706:	55                   	push   %rbp
    9707:	48 89 e5             	mov    %rsp,%rbp
    970a:	48 83 ec 20          	sub    $0x20,%rsp
    970e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9712:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9716:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    971a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    971f:	74 17                	je     9738 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9725:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9729:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    972d:	48 89 ce             	mov    %rcx,%rsi
    9730:	48 89 c7             	mov    %rax,%rdi
    9733:	e8 27 0e 00 00       	call   a55f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    9738:	90                   	nop
    9739:	c9                   	leave
    973a:	c3                   	ret
    973b:	90                   	nop

000000000000973c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    973c:	55                   	push   %rbp
    973d:	48 89 e5             	mov    %rsp,%rbp
    9740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9744:	90                   	nop
    9745:	5d                   	pop    %rbp
    9746:	c3                   	ret
    9747:	90                   	nop

0000000000009748 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9748:	55                   	push   %rbp
    9749:	48 89 e5             	mov    %rsp,%rbp
    974c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9750:	90                   	nop
    9751:	5d                   	pop    %rbp
    9752:	c3                   	ret

0000000000009753 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9753:	55                   	push   %rbp
    9754:	48 89 e5             	mov    %rsp,%rbp
    9757:	53                   	push   %rbx
    9758:	48 83 ec 28          	sub    $0x28,%rsp
    975c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9760:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9764:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9768:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    976c:	48 89 d6             	mov    %rdx,%rsi
    976f:	48 89 c7             	mov    %rax,%rdi
    9772:	e8 d7 01 00 00       	call   994e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    9777:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    977b:	48 89 c7             	mov    %rax,%rdi
    977e:	e8 0a 0e 00 00       	call   a58d <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    9783:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9787:	0f 92 c3             	setb   %bl
    978a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    978e:	48 89 c7             	mov    %rax,%rdi
    9791:	e8 76 f0 ff ff       	call   880c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9796:	84 db                	test   %bl,%bl
    9798:	74 0f                	je     97a9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    979a:	48 8d 05 97 29 01 00 	lea    0x12997(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    97a1:	48 89 c7             	mov    %rax,%rdi
    97a4:	e8 17 aa ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    97a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    97ad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    97b1:	c9                   	leave
    97b2:	c3                   	ret
    97b3:	90                   	nop

00000000000097b4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    97b4:	55                   	push   %rbp
    97b5:	48 89 e5             	mov    %rsp,%rbp
    97b8:	53                   	push   %rbx
    97b9:	48 83 ec 28          	sub    $0x28,%rsp
    97bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    97c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    97c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    97c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97cd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    97d1:	48 89 d6             	mov    %rdx,%rsi
    97d4:	48 89 c7             	mov    %rax,%rdi
    97d7:	e8 f4 0d 00 00       	call   a5d0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    97dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    97e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97e4:	48 89 d6             	mov    %rdx,%rsi
    97e7:	48 89 c7             	mov    %rax,%rdi
    97ea:	e8 13 0e 00 00       	call   a602 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    97ef:	eb 1a                	jmp    980b <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    97f1:	48 89 c3             	mov    %rax,%rbx
    97f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97f8:	48 89 c7             	mov    %rax,%rdi
    97fb:	e8 88 e8 ff ff       	call   8088 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9800:	48 89 d8             	mov    %rbx,%rax
    9803:	48 89 c7             	mov    %rax,%rdi
    9806:	e8 f5 af ff ff       	call   4800 <_Unwind_Resume@plt>
    980b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    980f:	c9                   	leave
    9810:	c3                   	ret
    9811:	90                   	nop

0000000000009812 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9812:	55                   	push   %rbp
    9813:	48 89 e5             	mov    %rsp,%rbp
    9816:	48 83 ec 10          	sub    $0x10,%rsp
    981a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    981e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9826:	48 89 c7             	mov    %rax,%rdi
    9829:	e8 24 00 00 00       	call   9852 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    982e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9835:	48 8b 00             	mov    (%rax),%rax
    9838:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    983c:	48 89 ce             	mov    %rcx,%rsi
    983f:	48 89 c7             	mov    %rax,%rdi
    9842:	e8 1c 0e 00 00       	call   a663 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9847:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    984b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    984f:	90                   	nop
    9850:	c9                   	leave
    9851:	c3                   	ret

0000000000009852 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9852:	55                   	push   %rbp
    9853:	48 89 e5             	mov    %rsp,%rbp
    9856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    985a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    985e:	5d                   	pop    %rbp
    985f:	c3                   	ret

0000000000009860 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9860:	55                   	push   %rbp
    9861:	48 89 e5             	mov    %rsp,%rbp
    9864:	48 83 ec 20          	sub    $0x20,%rsp
    9868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    986c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9870:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9874:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    987c:	48 89 d6             	mov    %rdx,%rsi
    987f:	48 89 c7             	mov    %rax,%rdi
    9882:	e8 05 0e 00 00       	call   a68c <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    9887:	90                   	nop
    9888:	c9                   	leave
    9889:	c3                   	ret

000000000000988a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    988a:	55                   	push   %rbp
    988b:	48 89 e5             	mov    %rsp,%rbp
    988e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9892:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9896:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    989a:	48 8b 10             	mov    (%rax),%rdx
    989d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98a1:	48 89 10             	mov    %rdx,(%rax)
    98a4:	90                   	nop
    98a5:	5d                   	pop    %rbp
    98a6:	c3                   	ret
    98a7:	90                   	nop

00000000000098a8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    98a8:	55                   	push   %rbp
    98a9:	48 89 e5             	mov    %rsp,%rbp
    98ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    98b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98b4:	5d                   	pop    %rbp
    98b5:	c3                   	ret

00000000000098b6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    98b6:	55                   	push   %rbp
    98b7:	48 89 e5             	mov    %rsp,%rbp
    98ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    98be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98c2:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    98c6:	5d                   	pop    %rbp
    98c7:	c3                   	ret

00000000000098c8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    98c8:	55                   	push   %rbp
    98c9:	48 89 e5             	mov    %rsp,%rbp
    98cc:	48 83 ec 10          	sub    $0x10,%rsp
    98d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    98d4:	e8 c5 b2 ff ff       	call   4b9e <_ZSt23__is_constant_evaluatedv>
    98d9:	84 c0                	test   %al,%al
    98db:	74 1a                	je     98f7 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    98dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e1:	48 89 c7             	mov    %rax,%rdi
    98e4:	e8 cd ff ff ff       	call   98b6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    98e9:	83 f0 01             	xor    $0x1,%eax
    98ec:	84 c0                	test   %al,%al
    98ee:	74 07                	je     98f7 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    98f0:	b8 01 00 00 00       	mov    $0x1,%eax
    98f5:	eb 05                	jmp    98fc <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    98f7:	b8 00 00 00 00       	mov    $0x0,%eax
    98fc:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    98fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9902:	48 89 c7             	mov    %rax,%rdi
    9905:	e8 a8 0d 00 00       	call   a6b2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    990a:	c9                   	leave
    990b:	c3                   	ret

000000000000990c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    990c:	55                   	push   %rbp
    990d:	48 89 e5             	mov    %rsp,%rbp
    9910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9918:	5d                   	pop    %rbp
    9919:	c3                   	ret

000000000000991a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    991a:	55                   	push   %rbp
    991b:	48 89 e5             	mov    %rsp,%rbp
    991e:	53                   	push   %rbx
    991f:	48 83 ec 18          	sub    $0x18,%rsp
    9923:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9927:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    992b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    992f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9933:	48 89 c7             	mov    %rax,%rdi
    9936:	e8 d1 ff ff ff       	call   990c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    993b:	48 89 c6             	mov    %rax,%rsi
    993e:	48 89 df             	mov    %rbx,%rdi
    9941:	e8 7a 0d 00 00       	call   a6c0 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    9946:	90                   	nop
    9947:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    994b:	c9                   	leave
    994c:	c3                   	ret
    994d:	90                   	nop

000000000000994e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    994e:	55                   	push   %rbp
    994f:	48 89 e5             	mov    %rsp,%rbp
    9952:	48 83 ec 10          	sub    $0x10,%rsp
    9956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    995a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    995e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9966:	48 89 d6             	mov    %rdx,%rsi
    9969:	48 89 c7             	mov    %rax,%rdi
    996c:	e8 95 0d 00 00       	call   a706 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    9971:	90                   	nop
    9972:	c9                   	leave
    9973:	c3                   	ret

0000000000009974 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    9974:	55                   	push   %rbp
    9975:	48 89 e5             	mov    %rsp,%rbp
    9978:	48 83 ec 20          	sub    $0x20,%rsp
    997c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9980:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9984:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9988:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    998d:	74 17                	je     99a6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    998f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9993:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9997:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    999b:	48 89 ce             	mov    %rcx,%rsi
    999e:	48 89 c7             	mov    %rax,%rdi
    99a1:	e8 6f 0d 00 00       	call   a715 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    99a6:	90                   	nop
    99a7:	c9                   	leave
    99a8:	c3                   	ret
    99a9:	90                   	nop

00000000000099aa <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    99aa:	55                   	push   %rbp
    99ab:	48 89 e5             	mov    %rsp,%rbp
    99ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99b2:	90                   	nop
    99b3:	5d                   	pop    %rbp
    99b4:	c3                   	ret
    99b5:	90                   	nop

00000000000099b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    99b6:	55                   	push   %rbp
    99b7:	48 89 e5             	mov    %rsp,%rbp
    99ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99be:	90                   	nop
    99bf:	5d                   	pop    %rbp
    99c0:	c3                   	ret

00000000000099c1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    99c1:	55                   	push   %rbp
    99c2:	48 89 e5             	mov    %rsp,%rbp
    99c5:	53                   	push   %rbx
    99c6:	48 83 ec 28          	sub    $0x28,%rsp
    99ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    99ce:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    99d2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    99d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99da:	48 89 d6             	mov    %rdx,%rsi
    99dd:	48 89 c7             	mov    %rax,%rdi
    99e0:	e8 25 01 00 00       	call   9b0a <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    99e5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99e9:	48 89 c7             	mov    %rax,%rdi
    99ec:	e8 52 0d 00 00       	call   a743 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    99f1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    99f5:	0f 92 c3             	setb   %bl
    99f8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99fc:	48 89 c7             	mov    %rax,%rdi
    99ff:	e8 b8 f0 ff ff       	call   8abc <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    9a04:	84 db                	test   %bl,%bl
    9a06:	74 0f                	je     9a17 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9a08:	48 8d 05 29 27 01 00 	lea    0x12729(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9a0f:	48 89 c7             	mov    %rax,%rdi
    9a12:	e8 a9 a7 ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9a17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9a1b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a1f:	c9                   	leave
    9a20:	c3                   	ret
    9a21:	90                   	nop

0000000000009a22 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9a22:	55                   	push   %rbp
    9a23:	48 89 e5             	mov    %rsp,%rbp
    9a26:	53                   	push   %rbx
    9a27:	48 83 ec 28          	sub    $0x28,%rsp
    9a2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a33:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9a37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9a3f:	48 89 d6             	mov    %rdx,%rsi
    9a42:	48 89 c7             	mov    %rax,%rdi
    9a45:	e8 3c 0d 00 00       	call   a786 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9a4a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a52:	48 89 d6             	mov    %rdx,%rsi
    9a55:	48 89 c7             	mov    %rax,%rdi
    9a58:	e8 5b 0d 00 00       	call   a7b8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    9a5d:	eb 1a                	jmp    9a79 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    9a5f:	48 89 c3             	mov    %rax,%rbx
    9a62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a66:	48 89 c7             	mov    %rax,%rdi
    9a69:	e8 36 e6 ff ff       	call   80a4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    9a6e:	48 89 d8             	mov    %rbx,%rax
    9a71:	48 89 c7             	mov    %rax,%rdi
    9a74:	e8 87 ad ff ff       	call   4800 <_Unwind_Resume@plt>
    9a79:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a7d:	c9                   	leave
    9a7e:	c3                   	ret
    9a7f:	90                   	nop

0000000000009a80 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9a80:	55                   	push   %rbp
    9a81:	48 89 e5             	mov    %rsp,%rbp
    9a84:	48 83 ec 10          	sub    $0x10,%rsp
    9a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a94:	48 89 c7             	mov    %rax,%rdi
    9a97:	e8 24 00 00 00       	call   9ac0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9a9c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa3:	48 8b 00             	mov    (%rax),%rax
    9aa6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9aaa:	48 89 ce             	mov    %rcx,%rsi
    9aad:	48 89 c7             	mov    %rax,%rdi
    9ab0:	e8 59 0d 00 00       	call   a80e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9ab5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9ab9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9abd:	90                   	nop
    9abe:	c9                   	leave
    9abf:	c3                   	ret

0000000000009ac0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9ac0:	55                   	push   %rbp
    9ac1:	48 89 e5             	mov    %rsp,%rbp
    9ac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9acc:	5d                   	pop    %rbp
    9acd:	c3                   	ret

0000000000009ace <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9ace:	55                   	push   %rbp
    9acf:	48 89 e5             	mov    %rsp,%rbp
    9ad2:	48 83 ec 20          	sub    $0x20,%rsp
    9ad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ade:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9ae2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aea:	48 89 d6             	mov    %rdx,%rsi
    9aed:	48 89 c7             	mov    %rax,%rdi
    9af0:	e8 42 0d 00 00       	call   a837 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    9af5:	90                   	nop
    9af6:	c9                   	leave
    9af7:	c3                   	ret

0000000000009af8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9af8:	55                   	push   %rbp
    9af9:	48 89 e5             	mov    %rsp,%rbp
    9afc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9b04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b08:	5d                   	pop    %rbp
    9b09:	c3                   	ret

0000000000009b0a <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9b0a:	55                   	push   %rbp
    9b0b:	48 89 e5             	mov    %rsp,%rbp
    9b0e:	48 83 ec 10          	sub    $0x10,%rsp
    9b12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9b1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b22:	48 89 d6             	mov    %rdx,%rsi
    9b25:	48 89 c7             	mov    %rax,%rdi
    9b28:	e8 31 0d 00 00       	call   a85e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    9b2d:	90                   	nop
    9b2e:	c9                   	leave
    9b2f:	c3                   	ret

0000000000009b30 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9b30:	55                   	push   %rbp
    9b31:	48 89 e5             	mov    %rsp,%rbp
    9b34:	48 83 ec 20          	sub    $0x20,%rsp
    9b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9b44:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9b49:	74 17                	je     9b62 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9b4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b57:	48 89 ce             	mov    %rcx,%rsi
    9b5a:	48 89 c7             	mov    %rax,%rdi
    9b5d:	e8 0b 0d 00 00       	call   a86d <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    9b62:	90                   	nop
    9b63:	c9                   	leave
    9b64:	c3                   	ret
    9b65:	90                   	nop

0000000000009b66 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9b66:	55                   	push   %rbp
    9b67:	48 89 e5             	mov    %rsp,%rbp
    9b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b6e:	90                   	nop
    9b6f:	5d                   	pop    %rbp
    9b70:	c3                   	ret
    9b71:	90                   	nop

0000000000009b72 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9b72:	55                   	push   %rbp
    9b73:	48 89 e5             	mov    %rsp,%rbp
    9b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b7a:	90                   	nop
    9b7b:	5d                   	pop    %rbp
    9b7c:	c3                   	ret

0000000000009b7d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9b7d:	55                   	push   %rbp
    9b7e:	48 89 e5             	mov    %rsp,%rbp
    9b81:	53                   	push   %rbx
    9b82:	48 83 ec 28          	sub    $0x28,%rsp
    9b86:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9b8a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9b8e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b92:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b96:	48 89 d6             	mov    %rdx,%rsi
    9b99:	48 89 c7             	mov    %rax,%rdi
    9b9c:	e8 25 01 00 00       	call   9cc6 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9ba1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9ba5:	48 89 c7             	mov    %rax,%rdi
    9ba8:	e8 ee 0c 00 00       	call   a89b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    9bad:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9bb1:	0f 92 c3             	setb   %bl
    9bb4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9bb8:	48 89 c7             	mov    %rax,%rdi
    9bbb:	e8 60 f0 ff ff       	call   8c20 <_ZNSaI16VkPresentModeKHRED1Ev>
    9bc0:	84 db                	test   %bl,%bl
    9bc2:	74 0f                	je     9bd3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9bc4:	48 8d 05 6d 25 01 00 	lea    0x1256d(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9bcb:	48 89 c7             	mov    %rax,%rdi
    9bce:	e8 ed a5 ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9bd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9bd7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9bdb:	c9                   	leave
    9bdc:	c3                   	ret
    9bdd:	90                   	nop

0000000000009bde <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9bde:	55                   	push   %rbp
    9bdf:	48 89 e5             	mov    %rsp,%rbp
    9be2:	53                   	push   %rbx
    9be3:	48 83 ec 28          	sub    $0x28,%rsp
    9be7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9beb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9bef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9bf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bf7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9bfb:	48 89 d6             	mov    %rdx,%rsi
    9bfe:	48 89 c7             	mov    %rax,%rdi
    9c01:	e8 d8 0c 00 00       	call   a8de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9c06:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c0e:	48 89 d6             	mov    %rdx,%rsi
    9c11:	48 89 c7             	mov    %rax,%rdi
    9c14:	e8 f7 0c 00 00       	call   a910 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    9c19:	eb 1a                	jmp    9c35 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    9c1b:	48 89 c3             	mov    %rax,%rbx
    9c1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c22:	48 89 c7             	mov    %rax,%rdi
    9c25:	e8 96 e4 ff ff       	call   80c0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    9c2a:	48 89 d8             	mov    %rbx,%rax
    9c2d:	48 89 c7             	mov    %rax,%rdi
    9c30:	e8 cb ab ff ff       	call   4800 <_Unwind_Resume@plt>
    9c35:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c39:	c9                   	leave
    9c3a:	c3                   	ret
    9c3b:	90                   	nop

0000000000009c3c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9c3c:	55                   	push   %rbp
    9c3d:	48 89 e5             	mov    %rsp,%rbp
    9c40:	48 83 ec 10          	sub    $0x10,%rsp
    9c44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c50:	48 89 c7             	mov    %rax,%rdi
    9c53:	e8 24 00 00 00       	call   9c7c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9c58:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c5f:	48 8b 00             	mov    (%rax),%rax
    9c62:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c66:	48 89 ce             	mov    %rcx,%rsi
    9c69:	48 89 c7             	mov    %rax,%rdi
    9c6c:	e8 f5 0c 00 00       	call   a966 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9c71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c75:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9c79:	90                   	nop
    9c7a:	c9                   	leave
    9c7b:	c3                   	ret

0000000000009c7c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9c7c:	55                   	push   %rbp
    9c7d:	48 89 e5             	mov    %rsp,%rbp
    9c80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c88:	5d                   	pop    %rbp
    9c89:	c3                   	ret

0000000000009c8a <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9c8a:	55                   	push   %rbp
    9c8b:	48 89 e5             	mov    %rsp,%rbp
    9c8e:	48 83 ec 20          	sub    $0x20,%rsp
    9c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9c9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ca6:	48 89 d6             	mov    %rdx,%rsi
    9ca9:	48 89 c7             	mov    %rax,%rdi
    9cac:	e8 de 0c 00 00       	call   a98f <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9cb1:	90                   	nop
    9cb2:	c9                   	leave
    9cb3:	c3                   	ret

0000000000009cb4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9cb4:	55                   	push   %rbp
    9cb5:	48 89 e5             	mov    %rsp,%rbp
    9cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9cc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cc4:	5d                   	pop    %rbp
    9cc5:	c3                   	ret

0000000000009cc6 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9cc6:	55                   	push   %rbp
    9cc7:	48 89 e5             	mov    %rsp,%rbp
    9cca:	48 83 ec 10          	sub    $0x10,%rsp
    9cce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9cd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cde:	48 89 d6             	mov    %rdx,%rsi
    9ce1:	48 89 c7             	mov    %rax,%rdi
    9ce4:	e8 cd 0c 00 00       	call   a9b6 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    9ce9:	90                   	nop
    9cea:	c9                   	leave
    9ceb:	c3                   	ret

0000000000009cec <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9cec:	55                   	push   %rbp
    9ced:	48 89 e5             	mov    %rsp,%rbp
    9cf0:	48 83 ec 20          	sub    $0x20,%rsp
    9cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9cfc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9d00:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9d05:	74 17                	je     9d1e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d0b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d0f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d13:	48 89 ce             	mov    %rcx,%rsi
    9d16:	48 89 c7             	mov    %rax,%rdi
    9d19:	e8 a7 0c 00 00       	call   a9c5 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9d1e:	90                   	nop
    9d1f:	c9                   	leave
    9d20:	c3                   	ret
    9d21:	90                   	nop

0000000000009d22 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9d22:	55                   	push   %rbp
    9d23:	48 89 e5             	mov    %rsp,%rbp
    9d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d2a:	90                   	nop
    9d2b:	5d                   	pop    %rbp
    9d2c:	c3                   	ret
    9d2d:	90                   	nop

0000000000009d2e <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9d2e:	55                   	push   %rbp
    9d2f:	48 89 e5             	mov    %rsp,%rbp
    9d32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d36:	90                   	nop
    9d37:	5d                   	pop    %rbp
    9d38:	c3                   	ret

0000000000009d39 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9d39:	55                   	push   %rbp
    9d3a:	48 89 e5             	mov    %rsp,%rbp
    9d3d:	53                   	push   %rbx
    9d3e:	48 83 ec 28          	sub    $0x28,%rsp
    9d42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9d46:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9d4a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9d4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d52:	48 89 d6             	mov    %rdx,%rsi
    9d55:	48 89 c7             	mov    %rax,%rdi
    9d58:	e8 25 01 00 00       	call   9e82 <_ZNSaIP9VkImage_TEC1ERKS1_>
    9d5d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d61:	48 89 c7             	mov    %rax,%rdi
    9d64:	e8 8a 0c 00 00       	call   a9f3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    9d69:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9d6d:	0f 92 c3             	setb   %bl
    9d70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d74:	48 89 c7             	mov    %rax,%rdi
    9d77:	e8 08 f0 ff ff       	call   8d84 <_ZNSaIP9VkImage_TED1Ev>
    9d7c:	84 db                	test   %bl,%bl
    9d7e:	74 0f                	je     9d8f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9d80:	48 8d 05 b1 23 01 00 	lea    0x123b1(%rip),%rax        # 1c138 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9d87:	48 89 c7             	mov    %rax,%rdi
    9d8a:	e8 31 a4 ff ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9d8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9d93:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d97:	c9                   	leave
    9d98:	c3                   	ret
    9d99:	90                   	nop

0000000000009d9a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9d9a:	55                   	push   %rbp
    9d9b:	48 89 e5             	mov    %rsp,%rbp
    9d9e:	53                   	push   %rbx
    9d9f:	48 83 ec 28          	sub    $0x28,%rsp
    9da3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9da7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9dab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9daf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9db3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9db7:	48 89 d6             	mov    %rdx,%rsi
    9dba:	48 89 c7             	mov    %rax,%rdi
    9dbd:	e8 74 0c 00 00       	call   aa36 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9dc2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9dc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dca:	48 89 d6             	mov    %rdx,%rsi
    9dcd:	48 89 c7             	mov    %rax,%rdi
    9dd0:	e8 93 0c 00 00       	call   aa68 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9dd5:	eb 1a                	jmp    9df1 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9dd7:	48 89 c3             	mov    %rax,%rbx
    9dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dde:	48 89 c7             	mov    %rax,%rdi
    9de1:	e8 f6 e2 ff ff       	call   80dc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9de6:	48 89 d8             	mov    %rbx,%rax
    9de9:	48 89 c7             	mov    %rax,%rdi
    9dec:	e8 0f aa ff ff       	call   4800 <_Unwind_Resume@plt>
    9df1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9df5:	c9                   	leave
    9df6:	c3                   	ret
    9df7:	90                   	nop

0000000000009df8 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9df8:	55                   	push   %rbp
    9df9:	48 89 e5             	mov    %rsp,%rbp
    9dfc:	48 83 ec 10          	sub    $0x10,%rsp
    9e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9e08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e0c:	48 89 c7             	mov    %rax,%rdi
    9e0f:	e8 24 00 00 00       	call   9e38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9e14:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9e17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1b:	48 8b 00             	mov    (%rax),%rax
    9e1e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e22:	48 89 ce             	mov    %rcx,%rsi
    9e25:	48 89 c7             	mov    %rax,%rdi
    9e28:	e8 91 0c 00 00       	call   aabe <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9e2d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e31:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9e35:	90                   	nop
    9e36:	c9                   	leave
    9e37:	c3                   	ret

0000000000009e38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9e38:	55                   	push   %rbp
    9e39:	48 89 e5             	mov    %rsp,%rbp
    9e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e44:	5d                   	pop    %rbp
    9e45:	c3                   	ret

0000000000009e46 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9e46:	55                   	push   %rbp
    9e47:	48 89 e5             	mov    %rsp,%rbp
    9e4a:	48 83 ec 20          	sub    $0x20,%rsp
    9e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9e5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e62:	48 89 d6             	mov    %rdx,%rsi
    9e65:	48 89 c7             	mov    %rax,%rdi
    9e68:	e8 7a 0c 00 00       	call   aae7 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9e6d:	90                   	nop
    9e6e:	c9                   	leave
    9e6f:	c3                   	ret

0000000000009e70 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9e70:	55                   	push   %rbp
    9e71:	48 89 e5             	mov    %rsp,%rbp
    9e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9e7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e80:	5d                   	pop    %rbp
    9e81:	c3                   	ret

0000000000009e82 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9e82:	55                   	push   %rbp
    9e83:	48 89 e5             	mov    %rsp,%rbp
    9e86:	48 83 ec 10          	sub    $0x10,%rsp
    9e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9e92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9a:	48 89 d6             	mov    %rdx,%rsi
    9e9d:	48 89 c7             	mov    %rax,%rdi
    9ea0:	e8 69 0c 00 00       	call   ab0e <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9ea5:	90                   	nop
    9ea6:	c9                   	leave
    9ea7:	c3                   	ret

0000000000009ea8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9ea8:	55                   	push   %rbp
    9ea9:	48 89 e5             	mov    %rsp,%rbp
    9eac:	48 83 ec 20          	sub    $0x20,%rsp
    9eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9eb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9ebc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9ec1:	74 17                	je     9eda <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9ec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ecb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ecf:	48 89 ce             	mov    %rcx,%rsi
    9ed2:	48 89 c7             	mov    %rax,%rdi
    9ed5:	e8 43 0c 00 00       	call   ab1d <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9eda:	90                   	nop
    9edb:	c9                   	leave
    9edc:	c3                   	ret

0000000000009edd <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9edd:	55                   	push   %rbp
    9ede:	48 89 e5             	mov    %rsp,%rbp
    9ee1:	48 83 ec 20          	sub    $0x20,%rsp
    9ee5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9ee9:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9ef0:	03 3f 00 
    9ef3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9ef7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9efb:	48 89 c7             	mov    %rax,%rdi
    9efe:	e8 48 0c 00 00       	call   ab4b <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9f03:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9f07:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9f0b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f0f:	48 89 d6             	mov    %rdx,%rsi
    9f12:	48 89 c7             	mov    %rax,%rdi
    9f15:	e8 3d b6 ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    9f1a:	48 8b 00             	mov    (%rax),%rax
      }
    9f1d:	c9                   	leave
    9f1e:	c3                   	ret
    9f1f:	90                   	nop

0000000000009f20 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9f20:	55                   	push   %rbp
    9f21:	48 89 e5             	mov    %rsp,%rbp
    9f24:	48 83 ec 10          	sub    $0x10,%rsp
    9f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9f30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f38:	48 89 d6             	mov    %rdx,%rsi
    9f3b:	48 89 c7             	mov    %rax,%rdi
    9f3e:	e8 e9 f0 ff ff       	call   902c <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f47:	48 89 c7             	mov    %rax,%rdi
    9f4a:	e8 17 0c 00 00       	call   ab66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9f4f:	90                   	nop
    9f50:	c9                   	leave
    9f51:	c3                   	ret

0000000000009f52 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9f52:	55                   	push   %rbp
    9f53:	48 89 e5             	mov    %rsp,%rbp
    9f56:	48 83 ec 10          	sub    $0x10,%rsp
    9f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9f62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f6a:	48 89 d6             	mov    %rdx,%rsi
    9f6d:	48 89 c7             	mov    %rax,%rdi
    9f70:	e8 1f 0c 00 00       	call   ab94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9f75:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9f79:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f80:	48 8b 10             	mov    (%rax),%rdx
    9f83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f87:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8f:	48 8b 08             	mov    (%rax),%rcx
    9f92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f96:	48 89 d0             	mov    %rdx,%rax
    9f99:	48 c1 e0 06          	shl    $0x6,%rax
    9f9d:	48 01 d0             	add    %rdx,%rax
    9fa0:	48 c1 e0 03          	shl    $0x3,%rax
    9fa4:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fac:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9fb0:	90                   	nop
    9fb1:	c9                   	leave
    9fb2:	c3                   	ret

0000000000009fb3 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9fb3:	55                   	push   %rbp
    9fb4:	48 89 e5             	mov    %rsp,%rbp
    9fb7:	48 83 ec 20          	sub    $0x20,%rsp
    9fbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fc3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9fc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fcf:	48 89 d6             	mov    %rdx,%rsi
    9fd2:	48 89 c7             	mov    %rax,%rdi
    9fd5:	e8 ed 0b 00 00       	call   abc7 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9fda:	c9                   	leave
    9fdb:	c3                   	ret

0000000000009fdc <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9fdc:	55                   	push   %rbp
    9fdd:	48 89 e5             	mov    %rsp,%rbp
    9fe0:	48 83 ec 10          	sub    $0x10,%rsp
    9fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fe8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9fec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff4:	48 89 d6             	mov    %rdx,%rsi
    9ff7:	48 89 c7             	mov    %rax,%rdi
    9ffa:	e8 f1 0b 00 00       	call   abf0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9fff:	90                   	nop
    a000:	c9                   	leave
    a001:	c3                   	ret

000000000000a002 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    a002:	55                   	push   %rbp
    a003:	48 89 e5             	mov    %rsp,%rbp
    a006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a00a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a00e:	90                   	nop
    a00f:	5d                   	pop    %rbp
    a010:	c3                   	ret

000000000000a011 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a011:	55                   	push   %rbp
    a012:	48 89 e5             	mov    %rsp,%rbp
    a015:	48 83 ec 20          	sub    $0x20,%rsp
    a019:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a01d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a021:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a025:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a029:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a02d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a031:	48 89 ce             	mov    %rcx,%rsi
    a034:	48 89 c7             	mov    %rax,%rdi
    a037:	e8 c4 0b 00 00       	call   ac00 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    a03c:	90                   	nop
    a03d:	c9                   	leave
    a03e:	c3                   	ret

000000000000a03f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a03f:	55                   	push   %rbp
    a040:	48 89 e5             	mov    %rsp,%rbp
    a043:	48 83 ec 20          	sub    $0x20,%rsp
    a047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a04b:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    a052:	07 7e 00 
    a055:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a05d:	48 89 c7             	mov    %rax,%rdi
    a060:	e8 d5 0b 00 00       	call   ac3a <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    a065:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a069:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a06d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a071:	48 89 d6             	mov    %rdx,%rsi
    a074:	48 89 c7             	mov    %rax,%rdi
    a077:	e8 db b4 ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a07c:	48 8b 00             	mov    (%rax),%rax
      }
    a07f:	c9                   	leave
    a080:	c3                   	ret
    a081:	90                   	nop

000000000000a082 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a082:	55                   	push   %rbp
    a083:	48 89 e5             	mov    %rsp,%rbp
    a086:	48 83 ec 10          	sub    $0x10,%rsp
    a08a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a08e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a092:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a09a:	48 89 d6             	mov    %rdx,%rsi
    a09d:	48 89 c7             	mov    %rax,%rdi
    a0a0:	e8 43 f1 ff ff       	call   91e8 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    a0a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a9:	48 89 c7             	mov    %rax,%rdi
    a0ac:	e8 a3 0b 00 00       	call   ac54 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a0b1:	90                   	nop
    a0b2:	c9                   	leave
    a0b3:	c3                   	ret

000000000000a0b4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a0b4:	55                   	push   %rbp
    a0b5:	48 89 e5             	mov    %rsp,%rbp
    a0b8:	48 83 ec 10          	sub    $0x10,%rsp
    a0bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a0c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0cc:	48 89 d6             	mov    %rdx,%rsi
    a0cf:	48 89 c7             	mov    %rax,%rdi
    a0d2:	e8 ab 0b 00 00       	call   ac82 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    a0d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a0db:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a0de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e2:	48 8b 10             	mov    (%rax),%rdx
    a0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a0ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0f1:	48 8b 08             	mov    (%rax),%rcx
    a0f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0f8:	48 89 d0             	mov    %rdx,%rax
    a0fb:	48 c1 e0 06          	shl    $0x6,%rax
    a0ff:	48 01 d0             	add    %rdx,%rax
    a102:	48 c1 e0 02          	shl    $0x2,%rax
    a106:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a10a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a10e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a112:	90                   	nop
    a113:	c9                   	leave
    a114:	c3                   	ret

000000000000a115 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a115:	55                   	push   %rbp
    a116:	48 89 e5             	mov    %rsp,%rbp
    a119:	48 83 ec 20          	sub    $0x20,%rsp
    a11d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a121:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a125:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a129:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a12d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a131:	48 89 d6             	mov    %rdx,%rsi
    a134:	48 89 c7             	mov    %rax,%rdi
    a137:	e8 79 0b 00 00       	call   acb5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    a13c:	c9                   	leave
    a13d:	c3                   	ret

000000000000a13e <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a13e:	55                   	push   %rbp
    a13f:	48 89 e5             	mov    %rsp,%rbp
    a142:	48 83 ec 10          	sub    $0x10,%rsp
    a146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a14a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a14e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a156:	48 89 d6             	mov    %rdx,%rsi
    a159:	48 89 c7             	mov    %rax,%rdi
    a15c:	e8 7d 0b 00 00       	call   acde <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    a161:	90                   	nop
    a162:	c9                   	leave
    a163:	c3                   	ret

000000000000a164 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    a164:	55                   	push   %rbp
    a165:	48 89 e5             	mov    %rsp,%rbp
    a168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a16c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a170:	90                   	nop
    a171:	5d                   	pop    %rbp
    a172:	c3                   	ret

000000000000a173 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a173:	55                   	push   %rbp
    a174:	48 89 e5             	mov    %rsp,%rbp
    a177:	48 83 ec 20          	sub    $0x20,%rsp
    a17b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a17f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a183:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a187:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a18b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a18f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a193:	48 89 ce             	mov    %rcx,%rsi
    a196:	48 89 c7             	mov    %rax,%rdi
    a199:	e8 50 0b 00 00       	call   acee <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    a19e:	90                   	nop
    a19f:	c9                   	leave
    a1a0:	c3                   	ret

000000000000a1a1 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a1a1:	55                   	push   %rbp
    a1a2:	48 89 e5             	mov    %rsp,%rbp
    a1a5:	48 83 ec 20          	sub    $0x20,%rsp
    a1a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a1ad:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a1b4:	ff ff 0f 
    a1b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a1bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1bf:	48 89 c7             	mov    %rax,%rdi
    a1c2:	e8 61 0b 00 00       	call   ad28 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    a1c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a1cb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a1cf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a1d3:	48 89 d6             	mov    %rdx,%rsi
    a1d6:	48 89 c7             	mov    %rax,%rdi
    a1d9:	e8 79 b3 ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a1de:	48 8b 00             	mov    (%rax),%rax
      }
    a1e1:	c9                   	leave
    a1e2:	c3                   	ret
    a1e3:	90                   	nop

000000000000a1e4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a1e4:	55                   	push   %rbp
    a1e5:	48 89 e5             	mov    %rsp,%rbp
    a1e8:	48 83 ec 10          	sub    $0x10,%rsp
    a1ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a1f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1fc:	48 89 d6             	mov    %rdx,%rsi
    a1ff:	48 89 c7             	mov    %rax,%rdi
    a202:	e8 61 f1 ff ff       	call   9368 <_ZNSaIPKcEC1ERKS1_>
    a207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a20b:	48 89 c7             	mov    %rax,%rdi
    a20e:	e8 2f 0b 00 00       	call   ad42 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a213:	90                   	nop
    a214:	c9                   	leave
    a215:	c3                   	ret

000000000000a216 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a216:	55                   	push   %rbp
    a217:	48 89 e5             	mov    %rsp,%rbp
    a21a:	48 83 ec 10          	sub    $0x10,%rsp
    a21e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a222:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a226:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a22a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a22e:	48 89 d6             	mov    %rdx,%rsi
    a231:	48 89 c7             	mov    %rax,%rdi
    a234:	e8 37 0b 00 00       	call   ad70 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    a239:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a23d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a244:	48 8b 10             	mov    (%rax),%rdx
    a247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a24f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a253:	48 8b 00             	mov    (%rax),%rax
    a256:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a25a:	48 c1 e2 03          	shl    $0x3,%rdx
    a25e:	48 01 c2             	add    %rax,%rdx
    a261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a265:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a269:	90                   	nop
    a26a:	c9                   	leave
    a26b:	c3                   	ret

000000000000a26c <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a26c:	55                   	push   %rbp
    a26d:	48 89 e5             	mov    %rsp,%rbp
    a270:	48 83 ec 20          	sub    $0x20,%rsp
    a274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a278:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a27c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a280:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a288:	48 89 d6             	mov    %rdx,%rsi
    a28b:	48 89 c7             	mov    %rax,%rdi
    a28e:	e8 10 0b 00 00       	call   ada3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    a293:	c9                   	leave
    a294:	c3                   	ret
    a295:	90                   	nop

000000000000a296 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    a296:	55                   	push   %rbp
    a297:	48 89 e5             	mov    %rsp,%rbp
    a29a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a29e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2a2:	90                   	nop
    a2a3:	5d                   	pop    %rbp
    a2a4:	c3                   	ret

000000000000a2a5 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a2a5:	55                   	push   %rbp
    a2a6:	48 89 e5             	mov    %rsp,%rbp
    a2a9:	48 83 ec 20          	sub    $0x20,%rsp
    a2ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a2b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a2bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a2c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c5:	48 89 ce             	mov    %rcx,%rsi
    a2c8:	48 89 c7             	mov    %rax,%rdi
    a2cb:	e8 fc 0a 00 00       	call   adcc <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    a2d0:	90                   	nop
    a2d1:	c9                   	leave
    a2d2:	c3                   	ret

000000000000a2d3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a2d3:	55                   	push   %rbp
    a2d4:	48 89 e5             	mov    %rsp,%rbp
    a2d7:	48 83 ec 20          	sub    $0x20,%rsp
    a2db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a2df:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a2e6:	ff ff 0f 
    a2e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a2ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2f1:	48 89 c7             	mov    %rax,%rdi
    a2f4:	e8 04 0b 00 00       	call   adfd <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    a2f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a2fd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a301:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a305:	48 89 d6             	mov    %rdx,%rsi
    a308:	48 89 c7             	mov    %rax,%rdi
    a30b:	e8 47 b2 ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a310:	48 8b 00             	mov    (%rax),%rax
      }
    a313:	c9                   	leave
    a314:	c3                   	ret
    a315:	90                   	nop

000000000000a316 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a316:	55                   	push   %rbp
    a317:	48 89 e5             	mov    %rsp,%rbp
    a31a:	48 83 ec 10          	sub    $0x10,%rsp
    a31e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a322:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a326:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a32a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a32e:	48 89 d6             	mov    %rdx,%rsi
    a331:	48 89 c7             	mov    %rax,%rdi
    a334:	e8 eb f1 ff ff       	call   9524 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    a339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33d:	48 89 c7             	mov    %rax,%rdi
    a340:	e8 d3 0a 00 00       	call   ae18 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a345:	90                   	nop
    a346:	c9                   	leave
    a347:	c3                   	ret

000000000000a348 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a348:	55                   	push   %rbp
    a349:	48 89 e5             	mov    %rsp,%rbp
    a34c:	48 83 ec 10          	sub    $0x10,%rsp
    a350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a358:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a35c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a360:	48 89 d6             	mov    %rdx,%rsi
    a363:	48 89 c7             	mov    %rax,%rdi
    a366:	e8 db 0a 00 00       	call   ae46 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    a36b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a36f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a376:	48 8b 10             	mov    (%rax),%rdx
    a379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a37d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a381:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a385:	48 8b 00             	mov    (%rax),%rax
    a388:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a38c:	48 c1 e2 03          	shl    $0x3,%rdx
    a390:	48 01 c2             	add    %rax,%rdx
    a393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a397:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a39b:	90                   	nop
    a39c:	c9                   	leave
    a39d:	c3                   	ret

000000000000a39e <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a39e:	55                   	push   %rbp
    a39f:	48 89 e5             	mov    %rsp,%rbp
    a3a2:	48 83 ec 20          	sub    $0x20,%rsp
    a3a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a3b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ba:	48 89 d6             	mov    %rdx,%rsi
    a3bd:	48 89 c7             	mov    %rax,%rdi
    a3c0:	e8 b4 0a 00 00       	call   ae79 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    a3c5:	c9                   	leave
    a3c6:	c3                   	ret

000000000000a3c7 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a3c7:	55                   	push   %rbp
    a3c8:	48 89 e5             	mov    %rsp,%rbp
    a3cb:	48 83 ec 10          	sub    $0x10,%rsp
    a3cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a3d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3df:	48 89 d6             	mov    %rdx,%rsi
    a3e2:	48 89 c7             	mov    %rax,%rdi
    a3e5:	e8 b8 0a 00 00       	call   aea2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    a3ea:	90                   	nop
    a3eb:	c9                   	leave
    a3ec:	c3                   	ret
    a3ed:	90                   	nop

000000000000a3ee <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    a3ee:	55                   	push   %rbp
    a3ef:	48 89 e5             	mov    %rsp,%rbp
    a3f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3fa:	90                   	nop
    a3fb:	5d                   	pop    %rbp
    a3fc:	c3                   	ret

000000000000a3fd <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a3fd:	55                   	push   %rbp
    a3fe:	48 89 e5             	mov    %rsp,%rbp
    a401:	48 83 ec 20          	sub    $0x20,%rsp
    a405:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a409:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a40d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a411:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a415:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a41d:	48 89 ce             	mov    %rcx,%rsi
    a420:	48 89 c7             	mov    %rax,%rdi
    a423:	e8 8a 0a 00 00       	call   aeb2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    a428:	90                   	nop
    a429:	c9                   	leave
    a42a:	c3                   	ret

000000000000a42b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a42b:	55                   	push   %rbp
    a42c:	48 89 e5             	mov    %rsp,%rbp
    a42f:	48 83 ec 20          	sub    $0x20,%rsp
    a433:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a437:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a43e:	55 55 05 
    a441:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a449:	48 89 c7             	mov    %rax,%rdi
    a44c:	e8 92 0a 00 00       	call   aee3 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    a451:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a455:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a459:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a45d:	48 89 d6             	mov    %rdx,%rsi
    a460:	48 89 c7             	mov    %rax,%rdi
    a463:	e8 ef b0 ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a468:	48 8b 00             	mov    (%rax),%rax
      }
    a46b:	c9                   	leave
    a46c:	c3                   	ret
    a46d:	90                   	nop

000000000000a46e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a46e:	55                   	push   %rbp
    a46f:	48 89 e5             	mov    %rsp,%rbp
    a472:	48 83 ec 10          	sub    $0x10,%rsp
    a476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a47a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a47e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a486:	48 89 d6             	mov    %rdx,%rsi
    a489:	48 89 c7             	mov    %rax,%rdi
    a48c:	e8 4f f2 ff ff       	call   96e0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a495:	48 89 c7             	mov    %rax,%rdi
    a498:	e8 61 0a 00 00       	call   aefe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a49d:	90                   	nop
    a49e:	c9                   	leave
    a49f:	c3                   	ret

000000000000a4a0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a4a0:	55                   	push   %rbp
    a4a1:	48 89 e5             	mov    %rsp,%rbp
    a4a4:	48 83 ec 10          	sub    $0x10,%rsp
    a4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a4b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b8:	48 89 d6             	mov    %rdx,%rsi
    a4bb:	48 89 c7             	mov    %rax,%rdi
    a4be:	e8 69 0a 00 00       	call   af2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a4c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a4c7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a4ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ce:	48 8b 10             	mov    (%rax),%rdx
    a4d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a4d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4dd:	48 8b 08             	mov    (%rax),%rcx
    a4e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4e4:	48 89 d0             	mov    %rdx,%rax
    a4e7:	48 01 c0             	add    %rax,%rax
    a4ea:	48 01 d0             	add    %rdx,%rax
    a4ed:	48 c1 e0 03          	shl    $0x3,%rax
    a4f1:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a4f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a4fd:	90                   	nop
    a4fe:	c9                   	leave
    a4ff:	c3                   	ret

000000000000a500 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a500:	55                   	push   %rbp
    a501:	48 89 e5             	mov    %rsp,%rbp
    a504:	48 83 ec 20          	sub    $0x20,%rsp
    a508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a50c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a510:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a514:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a51c:	48 89 d6             	mov    %rdx,%rsi
    a51f:	48 89 c7             	mov    %rax,%rdi
    a522:	e8 38 0a 00 00       	call   af5f <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a527:	c9                   	leave
    a528:	c3                   	ret

000000000000a529 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a529:	55                   	push   %rbp
    a52a:	48 89 e5             	mov    %rsp,%rbp
    a52d:	48 83 ec 10          	sub    $0x10,%rsp
    a531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a535:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a539:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a53d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a541:	48 89 d6             	mov    %rdx,%rsi
    a544:	48 89 c7             	mov    %rax,%rdi
    a547:	e8 3c 0a 00 00       	call   af88 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a54c:	90                   	nop
    a54d:	c9                   	leave
    a54e:	c3                   	ret
    a54f:	90                   	nop

000000000000a550 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a550:	55                   	push   %rbp
    a551:	48 89 e5             	mov    %rsp,%rbp
    a554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a558:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a55c:	90                   	nop
    a55d:	5d                   	pop    %rbp
    a55e:	c3                   	ret

000000000000a55f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a55f:	55                   	push   %rbp
    a560:	48 89 e5             	mov    %rsp,%rbp
    a563:	48 83 ec 20          	sub    $0x20,%rsp
    a567:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a56b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a56f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a573:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a577:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a57b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a57f:	48 89 ce             	mov    %rcx,%rsi
    a582:	48 89 c7             	mov    %rax,%rdi
    a585:	e8 0e 0a 00 00       	call   af98 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a58a:	90                   	nop
    a58b:	c9                   	leave
    a58c:	c3                   	ret

000000000000a58d <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a58d:	55                   	push   %rbp
    a58e:	48 89 e5             	mov    %rsp,%rbp
    a591:	48 83 ec 20          	sub    $0x20,%rsp
    a595:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a599:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a5a0:	49 92 04 
    a5a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a5a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5ab:	48 89 c7             	mov    %rax,%rdi
    a5ae:	e8 1e 0a 00 00       	call   afd1 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a5b3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a5b7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a5bb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a5bf:	48 89 d6             	mov    %rdx,%rsi
    a5c2:	48 89 c7             	mov    %rax,%rdi
    a5c5:	e8 8d af ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a5ca:	48 8b 00             	mov    (%rax),%rax
      }
    a5cd:	c9                   	leave
    a5ce:	c3                   	ret
    a5cf:	90                   	nop

000000000000a5d0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a5d0:	55                   	push   %rbp
    a5d1:	48 89 e5             	mov    %rsp,%rbp
    a5d4:	48 83 ec 10          	sub    $0x10,%rsp
    a5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a5e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5e8:	48 89 d6             	mov    %rdx,%rsi
    a5eb:	48 89 c7             	mov    %rax,%rdi
    a5ee:	e8 5b f3 ff ff       	call   994e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a5f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f7:	48 89 c7             	mov    %rax,%rdi
    a5fa:	e8 ed 09 00 00       	call   afec <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a5ff:	90                   	nop
    a600:	c9                   	leave
    a601:	c3                   	ret

000000000000a602 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a602:	55                   	push   %rbp
    a603:	48 89 e5             	mov    %rsp,%rbp
    a606:	48 83 ec 10          	sub    $0x10,%rsp
    a60a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a60e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a612:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a61a:	48 89 d6             	mov    %rdx,%rsi
    a61d:	48 89 c7             	mov    %rax,%rdi
    a620:	e8 f5 09 00 00       	call   b01a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a625:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a629:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a62c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a630:	48 8b 10             	mov    (%rax),%rdx
    a633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a637:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a63b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63f:	48 8b 08             	mov    (%rax),%rcx
    a642:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a646:	48 89 d0             	mov    %rdx,%rax
    a649:	48 c1 e0 03          	shl    $0x3,%rax
    a64d:	48 29 d0             	sub    %rdx,%rax
    a650:	48 c1 e0 02          	shl    $0x2,%rax
    a654:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a65c:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a660:	90                   	nop
    a661:	c9                   	leave
    a662:	c3                   	ret

000000000000a663 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a663:	55                   	push   %rbp
    a664:	48 89 e5             	mov    %rsp,%rbp
    a667:	48 83 ec 20          	sub    $0x20,%rsp
    a66b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a66f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a673:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a677:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a67b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a67f:	48 89 d6             	mov    %rdx,%rsi
    a682:	48 89 c7             	mov    %rax,%rdi
    a685:	e8 c3 09 00 00       	call   b04d <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a68a:	c9                   	leave
    a68b:	c3                   	ret

000000000000a68c <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a68c:	55                   	push   %rbp
    a68d:	48 89 e5             	mov    %rsp,%rbp
    a690:	48 83 ec 10          	sub    $0x10,%rsp
    a694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a698:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a69c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a4:	48 89 d6             	mov    %rdx,%rsi
    a6a7:	48 89 c7             	mov    %rax,%rdi
    a6aa:	e8 c7 09 00 00       	call   b076 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a6af:	90                   	nop
    a6b0:	c9                   	leave
    a6b1:	c3                   	ret

000000000000a6b2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a6b2:	55                   	push   %rbp
    a6b3:	48 89 e5             	mov    %rsp,%rbp
    a6b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a6ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6be:	5d                   	pop    %rbp
    a6bf:	c3                   	ret

000000000000a6c0 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a6c0:	55                   	push   %rbp
    a6c1:	48 89 e5             	mov    %rsp,%rbp
    a6c4:	53                   	push   %rbx
    a6c5:	48 83 ec 18          	sub    $0x18,%rsp
    a6c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a6cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a6d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a6d5:	48 89 c7             	mov    %rax,%rdi
    a6d8:	e8 2f f2 ff ff       	call   990c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a6dd:	48 89 c3             	mov    %rax,%rbx
    a6e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6e4:	48 89 c7             	mov    %rax,%rdi
    a6e7:	e8 99 09 00 00       	call   b085 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a6ec:	48 89 de             	mov    %rbx,%rsi
    a6ef:	48 89 c7             	mov    %rax,%rdi
    a6f2:	e8 9c 09 00 00       	call   b093 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a6f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6fb:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a6ff:	90                   	nop
    a700:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a704:	c9                   	leave
    a705:	c3                   	ret

000000000000a706 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a706:	55                   	push   %rbp
    a707:	48 89 e5             	mov    %rsp,%rbp
    a70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a70e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a712:	90                   	nop
    a713:	5d                   	pop    %rbp
    a714:	c3                   	ret

000000000000a715 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a715:	55                   	push   %rbp
    a716:	48 89 e5             	mov    %rsp,%rbp
    a719:	48 83 ec 20          	sub    $0x20,%rsp
    a71d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a721:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a725:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a729:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a72d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a735:	48 89 ce             	mov    %rcx,%rsi
    a738:	48 89 c7             	mov    %rax,%rdi
    a73b:	e8 a4 09 00 00       	call   b0e4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a740:	90                   	nop
    a741:	c9                   	leave
    a742:	c3                   	ret

000000000000a743 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a743:	55                   	push   %rbp
    a744:	48 89 e5             	mov    %rsp,%rbp
    a747:	48 83 ec 20          	sub    $0x20,%rsp
    a74b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a74f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a756:	ff ff 0f 
    a759:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a75d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a761:	48 89 c7             	mov    %rax,%rdi
    a764:	e8 b5 09 00 00       	call   b11e <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a769:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a76d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a771:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a775:	48 89 d6             	mov    %rdx,%rsi
    a778:	48 89 c7             	mov    %rax,%rdi
    a77b:	e8 d7 ad ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a780:	48 8b 00             	mov    (%rax),%rax
      }
    a783:	c9                   	leave
    a784:	c3                   	ret
    a785:	90                   	nop

000000000000a786 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a786:	55                   	push   %rbp
    a787:	48 89 e5             	mov    %rsp,%rbp
    a78a:	48 83 ec 10          	sub    $0x10,%rsp
    a78e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a792:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a796:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a79a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a79e:	48 89 d6             	mov    %rdx,%rsi
    a7a1:	48 89 c7             	mov    %rax,%rdi
    a7a4:	e8 61 f3 ff ff       	call   9b0a <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a7a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ad:	48 89 c7             	mov    %rax,%rdi
    a7b0:	e8 83 09 00 00       	call   b138 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a7b5:	90                   	nop
    a7b6:	c9                   	leave
    a7b7:	c3                   	ret

000000000000a7b8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a7b8:	55                   	push   %rbp
    a7b9:	48 89 e5             	mov    %rsp,%rbp
    a7bc:	48 83 ec 10          	sub    $0x10,%rsp
    a7c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a7c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d0:	48 89 d6             	mov    %rdx,%rsi
    a7d3:	48 89 c7             	mov    %rax,%rdi
    a7d6:	e8 8b 09 00 00       	call   b166 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a7db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a7df:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a7e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e6:	48 8b 10             	mov    (%rax),%rdx
    a7e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a7f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f5:	48 8b 00             	mov    (%rax),%rax
    a7f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7fc:	48 c1 e2 03          	shl    $0x3,%rdx
    a800:	48 01 c2             	add    %rax,%rdx
    a803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a807:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a80b:	90                   	nop
    a80c:	c9                   	leave
    a80d:	c3                   	ret

000000000000a80e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a80e:	55                   	push   %rbp
    a80f:	48 89 e5             	mov    %rsp,%rbp
    a812:	48 83 ec 20          	sub    $0x20,%rsp
    a816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a81a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a81e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a822:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a82a:	48 89 d6             	mov    %rdx,%rsi
    a82d:	48 89 c7             	mov    %rax,%rdi
    a830:	e8 64 09 00 00       	call   b199 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a835:	c9                   	leave
    a836:	c3                   	ret

000000000000a837 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a837:	55                   	push   %rbp
    a838:	48 89 e5             	mov    %rsp,%rbp
    a83b:	48 83 ec 10          	sub    $0x10,%rsp
    a83f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a843:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a847:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a84b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a84f:	48 89 d6             	mov    %rdx,%rsi
    a852:	48 89 c7             	mov    %rax,%rdi
    a855:	e8 68 09 00 00       	call   b1c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a85a:	90                   	nop
    a85b:	c9                   	leave
    a85c:	c3                   	ret
    a85d:	90                   	nop

000000000000a85e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a85e:	55                   	push   %rbp
    a85f:	48 89 e5             	mov    %rsp,%rbp
    a862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a866:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a86a:	90                   	nop
    a86b:	5d                   	pop    %rbp
    a86c:	c3                   	ret

000000000000a86d <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a86d:	55                   	push   %rbp
    a86e:	48 89 e5             	mov    %rsp,%rbp
    a871:	48 83 ec 20          	sub    $0x20,%rsp
    a875:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a879:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a87d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a881:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a885:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a889:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a88d:	48 89 ce             	mov    %rcx,%rsi
    a890:	48 89 c7             	mov    %rax,%rdi
    a893:	e8 3a 09 00 00       	call   b1d2 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a898:	90                   	nop
    a899:	c9                   	leave
    a89a:	c3                   	ret

000000000000a89b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a89b:	55                   	push   %rbp
    a89c:	48 89 e5             	mov    %rsp,%rbp
    a89f:	48 83 ec 20          	sub    $0x20,%rsp
    a8a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a8a7:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a8ae:	ff ff 1f 
    a8b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a8b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8b9:	48 89 c7             	mov    %rax,%rdi
    a8bc:	e8 42 09 00 00       	call   b203 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a8c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a8c5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a8c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a8cd:	48 89 d6             	mov    %rdx,%rsi
    a8d0:	48 89 c7             	mov    %rax,%rdi
    a8d3:	e8 7f ac ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    a8d8:	48 8b 00             	mov    (%rax),%rax
      }
    a8db:	c9                   	leave
    a8dc:	c3                   	ret
    a8dd:	90                   	nop

000000000000a8de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a8de:	55                   	push   %rbp
    a8df:	48 89 e5             	mov    %rsp,%rbp
    a8e2:	48 83 ec 10          	sub    $0x10,%rsp
    a8e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a8ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f6:	48 89 d6             	mov    %rdx,%rsi
    a8f9:	48 89 c7             	mov    %rax,%rdi
    a8fc:	e8 c5 f3 ff ff       	call   9cc6 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a905:	48 89 c7             	mov    %rax,%rdi
    a908:	e8 11 09 00 00       	call   b21e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a90d:	90                   	nop
    a90e:	c9                   	leave
    a90f:	c3                   	ret

000000000000a910 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a910:	55                   	push   %rbp
    a911:	48 89 e5             	mov    %rsp,%rbp
    a914:	48 83 ec 10          	sub    $0x10,%rsp
    a918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a91c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a920:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a928:	48 89 d6             	mov    %rdx,%rsi
    a92b:	48 89 c7             	mov    %rax,%rdi
    a92e:	e8 19 09 00 00       	call   b24c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a933:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a937:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a93a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a93e:	48 8b 10             	mov    (%rax),%rdx
    a941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a945:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a94d:	48 8b 00             	mov    (%rax),%rax
    a950:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a954:	48 c1 e2 02          	shl    $0x2,%rdx
    a958:	48 01 c2             	add    %rax,%rdx
    a95b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a95f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a963:	90                   	nop
    a964:	c9                   	leave
    a965:	c3                   	ret

000000000000a966 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a966:	55                   	push   %rbp
    a967:	48 89 e5             	mov    %rsp,%rbp
    a96a:	48 83 ec 20          	sub    $0x20,%rsp
    a96e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a972:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a976:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a97a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a97e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a982:	48 89 d6             	mov    %rdx,%rsi
    a985:	48 89 c7             	mov    %rax,%rdi
    a988:	e8 f2 08 00 00       	call   b27f <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a98d:	c9                   	leave
    a98e:	c3                   	ret

000000000000a98f <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a98f:	55                   	push   %rbp
    a990:	48 89 e5             	mov    %rsp,%rbp
    a993:	48 83 ec 10          	sub    $0x10,%rsp
    a997:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a99b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a99f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a7:	48 89 d6             	mov    %rdx,%rsi
    a9aa:	48 89 c7             	mov    %rax,%rdi
    a9ad:	e8 f6 08 00 00       	call   b2a8 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a9b2:	90                   	nop
    a9b3:	c9                   	leave
    a9b4:	c3                   	ret
    a9b5:	90                   	nop

000000000000a9b6 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a9b6:	55                   	push   %rbp
    a9b7:	48 89 e5             	mov    %rsp,%rbp
    a9ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9c2:	90                   	nop
    a9c3:	5d                   	pop    %rbp
    a9c4:	c3                   	ret

000000000000a9c5 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a9c5:	55                   	push   %rbp
    a9c6:	48 89 e5             	mov    %rsp,%rbp
    a9c9:	48 83 ec 20          	sub    $0x20,%rsp
    a9cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a9d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a9dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a9e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9e5:	48 89 ce             	mov    %rcx,%rsi
    a9e8:	48 89 c7             	mov    %rax,%rdi
    a9eb:	e8 c8 08 00 00       	call   b2b8 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a9f0:	90                   	nop
    a9f1:	c9                   	leave
    a9f2:	c3                   	ret

000000000000a9f3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a9f3:	55                   	push   %rbp
    a9f4:	48 89 e5             	mov    %rsp,%rbp
    a9f7:	48 83 ec 20          	sub    $0x20,%rsp
    a9fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a9ff:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    aa06:	ff ff 0f 
    aa09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    aa0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa11:	48 89 c7             	mov    %rax,%rdi
    aa14:	e8 d0 08 00 00       	call   b2e9 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    aa19:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    aa1d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    aa21:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    aa25:	48 89 d6             	mov    %rdx,%rsi
    aa28:	48 89 c7             	mov    %rax,%rdi
    aa2b:	e8 27 ab ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    aa30:	48 8b 00             	mov    (%rax),%rax
      }
    aa33:	c9                   	leave
    aa34:	c3                   	ret
    aa35:	90                   	nop

000000000000aa36 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    aa36:	55                   	push   %rbp
    aa37:	48 89 e5             	mov    %rsp,%rbp
    aa3a:	48 83 ec 10          	sub    $0x10,%rsp
    aa3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    aa46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa4e:	48 89 d6             	mov    %rdx,%rsi
    aa51:	48 89 c7             	mov    %rax,%rdi
    aa54:	e8 29 f4 ff ff       	call   9e82 <_ZNSaIP9VkImage_TEC1ERKS1_>
    aa59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa5d:	48 89 c7             	mov    %rax,%rdi
    aa60:	e8 9f 08 00 00       	call   b304 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    aa65:	90                   	nop
    aa66:	c9                   	leave
    aa67:	c3                   	ret

000000000000aa68 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    aa68:	55                   	push   %rbp
    aa69:	48 89 e5             	mov    %rsp,%rbp
    aa6c:	48 83 ec 10          	sub    $0x10,%rsp
    aa70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    aa78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa80:	48 89 d6             	mov    %rdx,%rsi
    aa83:	48 89 c7             	mov    %rax,%rdi
    aa86:	e8 a7 08 00 00       	call   b332 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    aa8b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aa8f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    aa92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa96:	48 8b 10             	mov    (%rax),%rdx
    aa99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa9d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    aaa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaa5:	48 8b 00             	mov    (%rax),%rax
    aaa8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aaac:	48 c1 e2 03          	shl    $0x3,%rdx
    aab0:	48 01 c2             	add    %rax,%rdx
    aab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aab7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    aabb:	90                   	nop
    aabc:	c9                   	leave
    aabd:	c3                   	ret

000000000000aabe <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    aabe:	55                   	push   %rbp
    aabf:	48 89 e5             	mov    %rsp,%rbp
    aac2:	48 83 ec 20          	sub    $0x20,%rsp
    aac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aace:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    aad2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aada:	48 89 d6             	mov    %rdx,%rsi
    aadd:	48 89 c7             	mov    %rax,%rdi
    aae0:	e8 80 08 00 00       	call   b365 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    aae5:	c9                   	leave
    aae6:	c3                   	ret

000000000000aae7 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    aae7:	55                   	push   %rbp
    aae8:	48 89 e5             	mov    %rsp,%rbp
    aaeb:	48 83 ec 10          	sub    $0x10,%rsp
    aaef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaf3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    aaf7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aafb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaff:	48 89 d6             	mov    %rdx,%rsi
    ab02:	48 89 c7             	mov    %rax,%rdi
    ab05:	e8 84 08 00 00       	call   b38e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    ab0a:	90                   	nop
    ab0b:	c9                   	leave
    ab0c:	c3                   	ret
    ab0d:	90                   	nop

000000000000ab0e <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    ab0e:	55                   	push   %rbp
    ab0f:	48 89 e5             	mov    %rsp,%rbp
    ab12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab1a:	90                   	nop
    ab1b:	5d                   	pop    %rbp
    ab1c:	c3                   	ret

000000000000ab1d <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ab1d:	55                   	push   %rbp
    ab1e:	48 89 e5             	mov    %rsp,%rbp
    ab21:	48 83 ec 20          	sub    $0x20,%rsp
    ab25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab29:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab2d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ab31:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ab39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab3d:	48 89 ce             	mov    %rcx,%rsi
    ab40:	48 89 c7             	mov    %rax,%rdi
    ab43:	e8 56 08 00 00       	call   b39e <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    ab48:	90                   	nop
    ab49:	c9                   	leave
    ab4a:	c3                   	ret

000000000000ab4b <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab4b:	55                   	push   %rbp
    ab4c:	48 89 e5             	mov    %rsp,%rbp
    ab4f:	48 83 ec 10          	sub    $0x10,%rsp
    ab53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ab57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab5b:	48 89 c7             	mov    %rax,%rdi
    ab5e:	e8 6d 08 00 00       	call   b3d0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    ab63:	c9                   	leave
    ab64:	c3                   	ret
    ab65:	90                   	nop

000000000000ab66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab66:	55                   	push   %rbp
    ab67:	48 89 e5             	mov    %rsp,%rbp
    ab6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab72:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab7d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab84:	00 
    ab85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab89:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab90:	00 
	{ }
    ab91:	90                   	nop
    ab92:	5d                   	pop    %rbp
    ab93:	c3                   	ret

000000000000ab94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab94:	55                   	push   %rbp
    ab95:	48 89 e5             	mov    %rsp,%rbp
    ab98:	48 83 ec 10          	sub    $0x10,%rsp
    ab9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aba0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aba4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aba9:	74 15                	je     abc0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    abab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abaf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    abb3:	48 89 d6             	mov    %rdx,%rsi
    abb6:	48 89 c7             	mov    %rax,%rdi
    abb9:	e8 2c 08 00 00       	call   b3ea <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    abbe:	eb 05                	jmp    abc5 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    abc0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    abc5:	c9                   	leave
    abc6:	c3                   	ret

000000000000abc7 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    abc7:	55                   	push   %rbp
    abc8:	48 89 e5             	mov    %rsp,%rbp
    abcb:	48 83 ec 20          	sub    $0x20,%rsp
    abcf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abd3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    abd7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    abdb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abe3:	48 89 d6             	mov    %rdx,%rsi
    abe6:	48 89 c7             	mov    %rax,%rdi
    abe9:	e8 26 08 00 00       	call   b414 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    abee:	c9                   	leave
    abef:	c3                   	ret

000000000000abf0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    abf0:	55                   	push   %rbp
    abf1:	48 89 e5             	mov    %rsp,%rbp
    abf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abfc:	90                   	nop
    abfd:	5d                   	pop    %rbp
    abfe:	c3                   	ret
    abff:	90                   	nop

000000000000ac00 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ac00:	55                   	push   %rbp
    ac01:	48 89 e5             	mov    %rsp,%rbp
    ac04:	48 83 ec 20          	sub    $0x20,%rsp
    ac08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac14:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac18:	48 89 d0             	mov    %rdx,%rax
    ac1b:	48 c1 e0 06          	shl    $0x6,%rax
    ac1f:	48 01 d0             	add    %rdx,%rax
    ac22:	48 c1 e0 03          	shl    $0x3,%rax
    ac26:	48 89 c2             	mov    %rax,%rdx
    ac29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac2d:	48 89 d6             	mov    %rdx,%rsi
    ac30:	48 89 c7             	mov    %rax,%rdi
    ac33:	e8 d8 97 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    ac38:	c9                   	leave
    ac39:	c3                   	ret

000000000000ac3a <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac3a:	55                   	push   %rbp
    ac3b:	48 89 e5             	mov    %rsp,%rbp
    ac3e:	48 83 ec 10          	sub    $0x10,%rsp
    ac42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac4a:	48 89 c7             	mov    %rax,%rdi
    ac4d:	e8 22 08 00 00       	call   b474 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    ac52:	c9                   	leave
    ac53:	c3                   	ret

000000000000ac54 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac54:	55                   	push   %rbp
    ac55:	48 89 e5             	mov    %rsp,%rbp
    ac58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ac5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac60:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ac67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac6b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ac72:	00 
    ac73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac77:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ac7e:	00 
	{ }
    ac7f:	90                   	nop
    ac80:	5d                   	pop    %rbp
    ac81:	c3                   	ret

000000000000ac82 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ac82:	55                   	push   %rbp
    ac83:	48 89 e5             	mov    %rsp,%rbp
    ac86:	48 83 ec 10          	sub    $0x10,%rsp
    ac8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ac92:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ac97:	74 15                	je     acae <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ac99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac9d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aca1:	48 89 d6             	mov    %rdx,%rsi
    aca4:	48 89 c7             	mov    %rax,%rdi
    aca7:	e8 e2 07 00 00       	call   b48e <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    acac:	eb 05                	jmp    acb3 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    acae:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    acb3:	c9                   	leave
    acb4:	c3                   	ret

000000000000acb5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    acb5:	55                   	push   %rbp
    acb6:	48 89 e5             	mov    %rsp,%rbp
    acb9:	48 83 ec 20          	sub    $0x20,%rsp
    acbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    acc5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    acc9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    accd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acd1:	48 89 d6             	mov    %rdx,%rsi
    acd4:	48 89 c7             	mov    %rax,%rdi
    acd7:	e8 dc 07 00 00       	call   b4b8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    acdc:	c9                   	leave
    acdd:	c3                   	ret

000000000000acde <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    acde:	55                   	push   %rbp
    acdf:	48 89 e5             	mov    %rsp,%rbp
    ace2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ace6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acea:	90                   	nop
    aceb:	5d                   	pop    %rbp
    acec:	c3                   	ret
    aced:	90                   	nop

000000000000acee <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    acee:	55                   	push   %rbp
    acef:	48 89 e5             	mov    %rsp,%rbp
    acf2:	48 83 ec 20          	sub    $0x20,%rsp
    acf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acfe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad06:	48 89 d0             	mov    %rdx,%rax
    ad09:	48 c1 e0 06          	shl    $0x6,%rax
    ad0d:	48 01 d0             	add    %rdx,%rax
    ad10:	48 c1 e0 02          	shl    $0x2,%rax
    ad14:	48 89 c2             	mov    %rax,%rdx
    ad17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad1b:	48 89 d6             	mov    %rdx,%rsi
    ad1e:	48 89 c7             	mov    %rax,%rdi
    ad21:	e8 ea 96 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    ad26:	c9                   	leave
    ad27:	c3                   	ret

000000000000ad28 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ad28:	55                   	push   %rbp
    ad29:	48 89 e5             	mov    %rsp,%rbp
    ad2c:	48 83 ec 10          	sub    $0x10,%rsp
    ad30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad38:	48 89 c7             	mov    %rax,%rdi
    ad3b:	e8 d8 07 00 00       	call   b518 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    ad40:	c9                   	leave
    ad41:	c3                   	ret

000000000000ad42 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad42:	55                   	push   %rbp
    ad43:	48 89 e5             	mov    %rsp,%rbp
    ad46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad4e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ad55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad59:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ad60:	00 
    ad61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad65:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ad6c:	00 
	{ }
    ad6d:	90                   	nop
    ad6e:	5d                   	pop    %rbp
    ad6f:	c3                   	ret

000000000000ad70 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ad70:	55                   	push   %rbp
    ad71:	48 89 e5             	mov    %rsp,%rbp
    ad74:	48 83 ec 10          	sub    $0x10,%rsp
    ad78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ad80:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ad85:	74 15                	je     ad9c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    ad87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad8f:	48 89 d6             	mov    %rdx,%rsi
    ad92:	48 89 c7             	mov    %rax,%rdi
    ad95:	e8 98 07 00 00       	call   b532 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    ad9a:	eb 05                	jmp    ada1 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    ad9c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ada1:	c9                   	leave
    ada2:	c3                   	ret

000000000000ada3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ada3:	55                   	push   %rbp
    ada4:	48 89 e5             	mov    %rsp,%rbp
    ada7:	48 83 ec 20          	sub    $0x20,%rsp
    adab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adaf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    adb3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    adb7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    adbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adbf:	48 89 d6             	mov    %rdx,%rsi
    adc2:	48 89 c7             	mov    %rax,%rdi
    adc5:	e8 92 07 00 00       	call   b55c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    adca:	c9                   	leave
    adcb:	c3                   	ret

000000000000adcc <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    adcc:	55                   	push   %rbp
    adcd:	48 89 e5             	mov    %rsp,%rbp
    add0:	48 83 ec 20          	sub    $0x20,%rsp
    add4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    add8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    addc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ade0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ade4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    adeb:	00 
    adec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adf0:	48 89 d6             	mov    %rdx,%rsi
    adf3:	48 89 c7             	mov    %rax,%rdi
    adf6:	e8 15 96 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    adfb:	c9                   	leave
    adfc:	c3                   	ret

000000000000adfd <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    adfd:	55                   	push   %rbp
    adfe:	48 89 e5             	mov    %rsp,%rbp
    ae01:	48 83 ec 10          	sub    $0x10,%rsp
    ae05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ae09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae0d:	48 89 c7             	mov    %rax,%rdi
    ae10:	e8 a5 07 00 00       	call   b5ba <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    ae15:	c9                   	leave
    ae16:	c3                   	ret
    ae17:	90                   	nop

000000000000ae18 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ae18:	55                   	push   %rbp
    ae19:	48 89 e5             	mov    %rsp,%rbp
    ae1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ae20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae24:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ae2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae2f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ae36:	00 
    ae37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ae42:	00 
	{ }
    ae43:	90                   	nop
    ae44:	5d                   	pop    %rbp
    ae45:	c3                   	ret

000000000000ae46 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ae46:	55                   	push   %rbp
    ae47:	48 89 e5             	mov    %rsp,%rbp
    ae4a:	48 83 ec 10          	sub    $0x10,%rsp
    ae4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ae56:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ae5b:	74 15                	je     ae72 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    ae5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae61:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae65:	48 89 d6             	mov    %rdx,%rsi
    ae68:	48 89 c7             	mov    %rax,%rdi
    ae6b:	e8 64 07 00 00       	call   b5d4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    ae70:	eb 05                	jmp    ae77 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    ae72:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ae77:	c9                   	leave
    ae78:	c3                   	ret

000000000000ae79 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ae79:	55                   	push   %rbp
    ae7a:	48 89 e5             	mov    %rsp,%rbp
    ae7d:	48 83 ec 20          	sub    $0x20,%rsp
    ae81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ae85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae89:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae8d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae95:	48 89 d6             	mov    %rdx,%rsi
    ae98:	48 89 c7             	mov    %rax,%rdi
    ae9b:	e8 5e 07 00 00       	call   b5fe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    aea0:	c9                   	leave
    aea1:	c3                   	ret

000000000000aea2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    aea2:	55                   	push   %rbp
    aea3:	48 89 e5             	mov    %rsp,%rbp
    aea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aeae:	90                   	nop
    aeaf:	5d                   	pop    %rbp
    aeb0:	c3                   	ret
    aeb1:	90                   	nop

000000000000aeb2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aeb2:	55                   	push   %rbp
    aeb3:	48 89 e5             	mov    %rsp,%rbp
    aeb6:	48 83 ec 20          	sub    $0x20,%rsp
    aeba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aebe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aec2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aec6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aeca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aed1:	00 
    aed2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aed6:	48 89 d6             	mov    %rdx,%rsi
    aed9:	48 89 c7             	mov    %rax,%rdi
    aedc:	e8 2f 95 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    aee1:	c9                   	leave
    aee2:	c3                   	ret

000000000000aee3 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aee3:	55                   	push   %rbp
    aee4:	48 89 e5             	mov    %rsp,%rbp
    aee7:	48 83 ec 10          	sub    $0x10,%rsp
    aeeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aeef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef3:	48 89 c7             	mov    %rax,%rdi
    aef6:	e8 61 07 00 00       	call   b65c <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    aefb:	c9                   	leave
    aefc:	c3                   	ret
    aefd:	90                   	nop

000000000000aefe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aefe:	55                   	push   %rbp
    aeff:	48 89 e5             	mov    %rsp,%rbp
    af02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    af06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af0a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    af11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af15:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    af1c:	00 
    af1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af21:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    af28:	00 
	{ }
    af29:	90                   	nop
    af2a:	5d                   	pop    %rbp
    af2b:	c3                   	ret

000000000000af2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    af2c:	55                   	push   %rbp
    af2d:	48 89 e5             	mov    %rsp,%rbp
    af30:	48 83 ec 10          	sub    $0x10,%rsp
    af34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    af3c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af41:	74 15                	je     af58 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    af43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af4b:	48 89 d6             	mov    %rdx,%rsi
    af4e:	48 89 c7             	mov    %rax,%rdi
    af51:	e8 20 07 00 00       	call   b676 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    af56:	eb 05                	jmp    af5d <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    af58:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    af5d:	c9                   	leave
    af5e:	c3                   	ret

000000000000af5f <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    af5f:	55                   	push   %rbp
    af60:	48 89 e5             	mov    %rsp,%rbp
    af63:	48 83 ec 20          	sub    $0x20,%rsp
    af67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    af6b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    af6f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    af73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    af77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af7b:	48 89 d6             	mov    %rdx,%rsi
    af7e:	48 89 c7             	mov    %rax,%rdi
    af81:	e8 1a 07 00 00       	call   b6a0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    af86:	c9                   	leave
    af87:	c3                   	ret

000000000000af88 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    af88:	55                   	push   %rbp
    af89:	48 89 e5             	mov    %rsp,%rbp
    af8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af94:	90                   	nop
    af95:	5d                   	pop    %rbp
    af96:	c3                   	ret
    af97:	90                   	nop

000000000000af98 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af98:	55                   	push   %rbp
    af99:	48 89 e5             	mov    %rsp,%rbp
    af9c:	48 83 ec 20          	sub    $0x20,%rsp
    afa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afa8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    afac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    afb0:	48 89 d0             	mov    %rdx,%rax
    afb3:	48 01 c0             	add    %rax,%rax
    afb6:	48 01 d0             	add    %rdx,%rax
    afb9:	48 c1 e0 03          	shl    $0x3,%rax
    afbd:	48 89 c2             	mov    %rax,%rdx
    afc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    afc4:	48 89 d6             	mov    %rdx,%rsi
    afc7:	48 89 c7             	mov    %rax,%rdi
    afca:	e8 41 94 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    afcf:	c9                   	leave
    afd0:	c3                   	ret

000000000000afd1 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    afd1:	55                   	push   %rbp
    afd2:	48 89 e5             	mov    %rsp,%rbp
    afd5:	48 83 ec 10          	sub    $0x10,%rsp
    afd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    afdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afe1:	48 89 c7             	mov    %rax,%rdi
    afe4:	e8 15 07 00 00       	call   b6fe <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    afe9:	c9                   	leave
    afea:	c3                   	ret
    afeb:	90                   	nop

000000000000afec <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    afec:	55                   	push   %rbp
    afed:	48 89 e5             	mov    %rsp,%rbp
    aff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    afff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b003:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b00a:	00 
    b00b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b00f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b016:	00 
	{ }
    b017:	90                   	nop
    b018:	5d                   	pop    %rbp
    b019:	c3                   	ret

000000000000b01a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b01a:	55                   	push   %rbp
    b01b:	48 89 e5             	mov    %rsp,%rbp
    b01e:	48 83 ec 10          	sub    $0x10,%rsp
    b022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b026:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b02a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b02f:	74 15                	je     b046 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    b031:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b035:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b039:	48 89 d6             	mov    %rdx,%rsi
    b03c:	48 89 c7             	mov    %rax,%rdi
    b03f:	e8 d4 06 00 00       	call   b718 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    b044:	eb 05                	jmp    b04b <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    b046:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b04b:	c9                   	leave
    b04c:	c3                   	ret

000000000000b04d <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b04d:	55                   	push   %rbp
    b04e:	48 89 e5             	mov    %rsp,%rbp
    b051:	48 83 ec 20          	sub    $0x20,%rsp
    b055:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b059:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b05d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b061:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b065:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b069:	48 89 d6             	mov    %rdx,%rsi
    b06c:	48 89 c7             	mov    %rax,%rdi
    b06f:	e8 ce 06 00 00       	call   b742 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    b074:	c9                   	leave
    b075:	c3                   	ret

000000000000b076 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    b076:	55                   	push   %rbp
    b077:	48 89 e5             	mov    %rsp,%rbp
    b07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b082:	90                   	nop
    b083:	5d                   	pop    %rbp
    b084:	c3                   	ret

000000000000b085 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b085:	55                   	push   %rbp
    b086:	48 89 e5             	mov    %rsp,%rbp
    b089:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b08d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b091:	5d                   	pop    %rbp
    b092:	c3                   	ret

000000000000b093 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b093:	55                   	push   %rbp
    b094:	48 89 e5             	mov    %rsp,%rbp
    b097:	53                   	push   %rbx
    b098:	48 83 ec 18          	sub    $0x18,%rsp
    b09c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b0a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b0a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0a8:	48 89 c6             	mov    %rax,%rsi
    b0ab:	bf 18 00 00 00       	mov    $0x18,%edi
    b0b0:	e8 d4 9f ff ff       	call   5089 <_ZnwmPv>
    b0b5:	48 89 c3             	mov    %rax,%rbx
    b0b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0bc:	48 89 c7             	mov    %rax,%rdi
    b0bf:	e8 48 e8 ff ff       	call   990c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    b0c4:	48 89 c1             	mov    %rax,%rcx
    b0c7:	48 8b 01             	mov    (%rcx),%rax
    b0ca:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    b0ce:	48 89 03             	mov    %rax,(%rbx)
    b0d1:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    b0d5:	48 8b 41 10          	mov    0x10(%rcx),%rax
    b0d9:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    b0dd:	90                   	nop
    b0de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b0e2:	c9                   	leave
    b0e3:	c3                   	ret

000000000000b0e4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b0e4:	55                   	push   %rbp
    b0e5:	48 89 e5             	mov    %rsp,%rbp
    b0e8:	48 83 ec 20          	sub    $0x20,%rsp
    b0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b0f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b0fc:	48 89 d0             	mov    %rdx,%rax
    b0ff:	48 c1 e0 03          	shl    $0x3,%rax
    b103:	48 29 d0             	sub    %rdx,%rax
    b106:	48 c1 e0 02          	shl    $0x2,%rax
    b10a:	48 89 c2             	mov    %rax,%rdx
    b10d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b111:	48 89 d6             	mov    %rdx,%rsi
    b114:	48 89 c7             	mov    %rax,%rdi
    b117:	e8 f4 92 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    b11c:	c9                   	leave
    b11d:	c3                   	ret

000000000000b11e <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b11e:	55                   	push   %rbp
    b11f:	48 89 e5             	mov    %rsp,%rbp
    b122:	48 83 ec 10          	sub    $0x10,%rsp
    b126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b12a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b12e:	48 89 c7             	mov    %rax,%rdi
    b131:	e8 52 06 00 00       	call   b788 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    b136:	c9                   	leave
    b137:	c3                   	ret

000000000000b138 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b138:	55                   	push   %rbp
    b139:	48 89 e5             	mov    %rsp,%rbp
    b13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b144:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b14b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b14f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b156:	00 
    b157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b15b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b162:	00 
	{ }
    b163:	90                   	nop
    b164:	5d                   	pop    %rbp
    b165:	c3                   	ret

000000000000b166 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b166:	55                   	push   %rbp
    b167:	48 89 e5             	mov    %rsp,%rbp
    b16a:	48 83 ec 10          	sub    $0x10,%rsp
    b16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b176:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b17b:	74 15                	je     b192 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    b17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b181:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b185:	48 89 d6             	mov    %rdx,%rsi
    b188:	48 89 c7             	mov    %rax,%rdi
    b18b:	e8 12 06 00 00       	call   b7a2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    b190:	eb 05                	jmp    b197 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    b192:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b197:	c9                   	leave
    b198:	c3                   	ret

000000000000b199 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b199:	55                   	push   %rbp
    b19a:	48 89 e5             	mov    %rsp,%rbp
    b19d:	48 83 ec 20          	sub    $0x20,%rsp
    b1a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b1a9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b1ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b1b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1b5:	48 89 d6             	mov    %rdx,%rsi
    b1b8:	48 89 c7             	mov    %rax,%rdi
    b1bb:	e8 0c 06 00 00       	call   b7cc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    b1c0:	c9                   	leave
    b1c1:	c3                   	ret

000000000000b1c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    b1c2:	55                   	push   %rbp
    b1c3:	48 89 e5             	mov    %rsp,%rbp
    b1c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b1ce:	90                   	nop
    b1cf:	5d                   	pop    %rbp
    b1d0:	c3                   	ret
    b1d1:	90                   	nop

000000000000b1d2 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b1d2:	55                   	push   %rbp
    b1d3:	48 89 e5             	mov    %rsp,%rbp
    b1d6:	48 83 ec 20          	sub    $0x20,%rsp
    b1da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b1e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b1e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b1f1:	00 
    b1f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b1f6:	48 89 d6             	mov    %rdx,%rsi
    b1f9:	48 89 c7             	mov    %rax,%rdi
    b1fc:	e8 0f 92 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    b201:	c9                   	leave
    b202:	c3                   	ret

000000000000b203 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b203:	55                   	push   %rbp
    b204:	48 89 e5             	mov    %rsp,%rbp
    b207:	48 83 ec 10          	sub    $0x10,%rsp
    b20b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b20f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b213:	48 89 c7             	mov    %rax,%rdi
    b216:	e8 0f 06 00 00       	call   b82a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    b21b:	c9                   	leave
    b21c:	c3                   	ret
    b21d:	90                   	nop

000000000000b21e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b21e:	55                   	push   %rbp
    b21f:	48 89 e5             	mov    %rsp,%rbp
    b222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b22a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b235:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b23c:	00 
    b23d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b241:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b248:	00 
	{ }
    b249:	90                   	nop
    b24a:	5d                   	pop    %rbp
    b24b:	c3                   	ret

000000000000b24c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b24c:	55                   	push   %rbp
    b24d:	48 89 e5             	mov    %rsp,%rbp
    b250:	48 83 ec 10          	sub    $0x10,%rsp
    b254:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b258:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b25c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b261:	74 15                	je     b278 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    b263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b267:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b26b:	48 89 d6             	mov    %rdx,%rsi
    b26e:	48 89 c7             	mov    %rax,%rdi
    b271:	e8 ce 05 00 00       	call   b844 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    b276:	eb 05                	jmp    b27d <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    b278:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b27d:	c9                   	leave
    b27e:	c3                   	ret

000000000000b27f <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b27f:	55                   	push   %rbp
    b280:	48 89 e5             	mov    %rsp,%rbp
    b283:	48 83 ec 20          	sub    $0x20,%rsp
    b287:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b28b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b28f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b293:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b297:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b29b:	48 89 d6             	mov    %rdx,%rsi
    b29e:	48 89 c7             	mov    %rax,%rdi
    b2a1:	e8 c8 05 00 00       	call   b86e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    b2a6:	c9                   	leave
    b2a7:	c3                   	ret

000000000000b2a8 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    b2a8:	55                   	push   %rbp
    b2a9:	48 89 e5             	mov    %rsp,%rbp
    b2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2b4:	90                   	nop
    b2b5:	5d                   	pop    %rbp
    b2b6:	c3                   	ret
    b2b7:	90                   	nop

000000000000b2b8 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b2b8:	55                   	push   %rbp
    b2b9:	48 89 e5             	mov    %rsp,%rbp
    b2bc:	48 83 ec 20          	sub    $0x20,%rsp
    b2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b2cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2d0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    b2d7:	00 
    b2d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b2dc:	48 89 d6             	mov    %rdx,%rsi
    b2df:	48 89 c7             	mov    %rax,%rdi
    b2e2:	e8 29 91 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    b2e7:	c9                   	leave
    b2e8:	c3                   	ret

000000000000b2e9 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b2e9:	55                   	push   %rbp
    b2ea:	48 89 e5             	mov    %rsp,%rbp
    b2ed:	48 83 ec 10          	sub    $0x10,%rsp
    b2f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b2f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2f9:	48 89 c7             	mov    %rax,%rdi
    b2fc:	e8 cb 05 00 00       	call   b8cc <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    b301:	c9                   	leave
    b302:	c3                   	ret
    b303:	90                   	nop

000000000000b304 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b304:	55                   	push   %rbp
    b305:	48 89 e5             	mov    %rsp,%rbp
    b308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b310:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b31b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b322:	00 
    b323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b327:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b32e:	00 
	{ }
    b32f:	90                   	nop
    b330:	5d                   	pop    %rbp
    b331:	c3                   	ret

000000000000b332 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b332:	55                   	push   %rbp
    b333:	48 89 e5             	mov    %rsp,%rbp
    b336:	48 83 ec 10          	sub    $0x10,%rsp
    b33a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b33e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b342:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b347:	74 15                	je     b35e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    b349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b34d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b351:	48 89 d6             	mov    %rdx,%rsi
    b354:	48 89 c7             	mov    %rax,%rdi
    b357:	e8 8a 05 00 00       	call   b8e6 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    b35c:	eb 05                	jmp    b363 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    b35e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b363:	c9                   	leave
    b364:	c3                   	ret

000000000000b365 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b365:	55                   	push   %rbp
    b366:	48 89 e5             	mov    %rsp,%rbp
    b369:	48 83 ec 20          	sub    $0x20,%rsp
    b36d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b371:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b375:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b379:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b37d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b381:	48 89 d6             	mov    %rdx,%rsi
    b384:	48 89 c7             	mov    %rax,%rdi
    b387:	e8 84 05 00 00       	call   b910 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    b38c:	c9                   	leave
    b38d:	c3                   	ret

000000000000b38e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    b38e:	55                   	push   %rbp
    b38f:	48 89 e5             	mov    %rsp,%rbp
    b392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b396:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b39a:	90                   	nop
    b39b:	5d                   	pop    %rbp
    b39c:	c3                   	ret
    b39d:	90                   	nop

000000000000b39e <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b39e:	55                   	push   %rbp
    b39f:	48 89 e5             	mov    %rsp,%rbp
    b3a2:	48 83 ec 20          	sub    $0x20,%rsp
    b3a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b3ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b3b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3b6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b3bd:	00 
    b3be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b3c2:	48 89 d6             	mov    %rdx,%rsi
    b3c5:	48 89 c7             	mov    %rax,%rdi
    b3c8:	e8 43 90 ff ff       	call   4410 <_ZdlPvm@plt>
      }
    b3cd:	c9                   	leave
    b3ce:	c3                   	ret
    b3cf:	90                   	nop

000000000000b3d0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b3d0:	55                   	push   %rbp
    b3d1:	48 89 e5             	mov    %rsp,%rbp
    b3d4:	48 83 ec 10          	sub    $0x10,%rsp
    b3d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b3dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3e0:	48 89 c7             	mov    %rax,%rdi
    b3e3:	e8 86 05 00 00       	call   b96e <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b3e8:	c9                   	leave
    b3e9:	c3                   	ret

000000000000b3ea <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b3ea:	55                   	push   %rbp
    b3eb:	48 89 e5             	mov    %rsp,%rbp
    b3ee:	48 83 ec 10          	sub    $0x10,%rsp
    b3f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b3fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b402:	ba 00 00 00 00       	mov    $0x0,%edx
    b407:	48 89 ce             	mov    %rcx,%rsi
    b40a:	48 89 c7             	mov    %rax,%rdi
    b40d:	e8 70 05 00 00       	call   b982 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    b412:	c9                   	leave
    b413:	c3                   	ret

000000000000b414 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b414:	55                   	push   %rbp
    b415:	48 89 e5             	mov    %rsp,%rbp
    b418:	48 83 ec 20          	sub    $0x20,%rsp
    b41c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b420:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b424:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b429:	74 43                	je     b46e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b42b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b42f:	48 89 c7             	mov    %rax,%rdi
    b432:	e8 b6 05 00 00       	call   b9ed <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    b437:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b43b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b43f:	48 89 c7             	mov    %rax,%rdi
    b442:	e8 b4 05 00 00       	call   b9fb <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b447:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    b44e:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b44f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b453:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b457:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b45b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b45f:	48 89 ce             	mov    %rcx,%rsi
    b462:	48 89 c7             	mov    %rax,%rdi
    b465:	e8 eb 05 00 00       	call   ba55 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    b46a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b46e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b472:	c9                   	leave
    b473:	c3                   	ret

000000000000b474 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b474:	55                   	push   %rbp
    b475:	48 89 e5             	mov    %rsp,%rbp
    b478:	48 83 ec 10          	sub    $0x10,%rsp
    b47c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b484:	48 89 c7             	mov    %rax,%rdi
    b487:	e8 0e 06 00 00       	call   ba9a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b48c:	c9                   	leave
    b48d:	c3                   	ret

000000000000b48e <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b48e:	55                   	push   %rbp
    b48f:	48 89 e5             	mov    %rsp,%rbp
    b492:	48 83 ec 10          	sub    $0x10,%rsp
    b496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b49a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b49e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b4a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4a6:	ba 00 00 00 00       	mov    $0x0,%edx
    b4ab:	48 89 ce             	mov    %rcx,%rsi
    b4ae:	48 89 c7             	mov    %rax,%rdi
    b4b1:	e8 f8 05 00 00       	call   baae <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b4b6:	c9                   	leave
    b4b7:	c3                   	ret

000000000000b4b8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b4b8:	55                   	push   %rbp
    b4b9:	48 89 e5             	mov    %rsp,%rbp
    b4bc:	48 83 ec 20          	sub    $0x20,%rsp
    b4c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b4c8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b4cd:	74 43                	je     b512 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b4cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4d3:	48 89 c7             	mov    %rax,%rdi
    b4d6:	e8 3e 06 00 00       	call   bb19 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b4db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b4df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4e3:	48 89 c7             	mov    %rax,%rdi
    b4e6:	e8 3c 06 00 00       	call   bb27 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b4eb:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b4f2:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b4f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4f7:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b4fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b4ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b503:	48 89 ce             	mov    %rcx,%rsi
    b506:	48 89 c7             	mov    %rax,%rdi
    b509:	e8 73 06 00 00       	call   bb81 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b50e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b512:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b516:	c9                   	leave
    b517:	c3                   	ret

000000000000b518 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b518:	55                   	push   %rbp
    b519:	48 89 e5             	mov    %rsp,%rbp
    b51c:	48 83 ec 10          	sub    $0x10,%rsp
    b520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b528:	48 89 c7             	mov    %rax,%rdi
    b52b:	e8 96 06 00 00       	call   bbc6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b530:	c9                   	leave
    b531:	c3                   	ret

000000000000b532 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b532:	55                   	push   %rbp
    b533:	48 89 e5             	mov    %rsp,%rbp
    b536:	48 83 ec 10          	sub    $0x10,%rsp
    b53a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b53e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b542:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b54a:	ba 00 00 00 00       	mov    $0x0,%edx
    b54f:	48 89 ce             	mov    %rcx,%rsi
    b552:	48 89 c7             	mov    %rax,%rdi
    b555:	e8 80 06 00 00       	call   bbda <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b55a:	c9                   	leave
    b55b:	c3                   	ret

000000000000b55c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b55c:	55                   	push   %rbp
    b55d:	48 89 e5             	mov    %rsp,%rbp
    b560:	48 83 ec 20          	sub    $0x20,%rsp
    b564:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b568:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b56c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b571:	74 40                	je     b5b3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b573:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b577:	48 89 c7             	mov    %rax,%rdi
    b57a:	e8 bc 06 00 00       	call   bc3b <_ZSt11__addressofIPKcEPT_RS2_>
    b57f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b587:	48 89 c7             	mov    %rax,%rdi
    b58a:	e8 ba 06 00 00       	call   bc49 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b58f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b594:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b598:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b59c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b5a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5a4:	48 89 ce             	mov    %rcx,%rsi
    b5a7:	48 89 c7             	mov    %rax,%rdi
    b5aa:	e8 c1 06 00 00       	call   bc70 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b5af:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b5b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b5b7:	c9                   	leave
    b5b8:	c3                   	ret
    b5b9:	90                   	nop

000000000000b5ba <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b5ba:	55                   	push   %rbp
    b5bb:	48 89 e5             	mov    %rsp,%rbp
    b5be:	48 83 ec 10          	sub    $0x10,%rsp
    b5c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b5c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ca:	48 89 c7             	mov    %rax,%rdi
    b5cd:	e8 e2 06 00 00       	call   bcb4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b5d2:	c9                   	leave
    b5d3:	c3                   	ret

000000000000b5d4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b5d4:	55                   	push   %rbp
    b5d5:	48 89 e5             	mov    %rsp,%rbp
    b5d8:	48 83 ec 10          	sub    $0x10,%rsp
    b5dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b5e4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b5e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ec:	ba 00 00 00 00       	mov    $0x0,%edx
    b5f1:	48 89 ce             	mov    %rcx,%rsi
    b5f4:	48 89 c7             	mov    %rax,%rdi
    b5f7:	e8 cc 06 00 00       	call   bcc8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b5fc:	c9                   	leave
    b5fd:	c3                   	ret

000000000000b5fe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b5fe:	55                   	push   %rbp
    b5ff:	48 89 e5             	mov    %rsp,%rbp
    b602:	48 83 ec 20          	sub    $0x20,%rsp
    b606:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b60a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b60e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b613:	74 40                	je     b655 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b615:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b619:	48 89 c7             	mov    %rax,%rdi
    b61c:	e8 08 07 00 00       	call   bd29 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b621:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b629:	48 89 c7             	mov    %rax,%rdi
    b62c:	e8 06 07 00 00       	call   bd37 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b631:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b636:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b63a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b63e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b646:	48 89 ce             	mov    %rcx,%rsi
    b649:	48 89 c7             	mov    %rax,%rdi
    b64c:	e8 0d 07 00 00       	call   bd5e <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b651:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b659:	c9                   	leave
    b65a:	c3                   	ret
    b65b:	90                   	nop

000000000000b65c <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b65c:	55                   	push   %rbp
    b65d:	48 89 e5             	mov    %rsp,%rbp
    b660:	48 83 ec 10          	sub    $0x10,%rsp
    b664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b66c:	48 89 c7             	mov    %rax,%rdi
    b66f:	e8 2e 07 00 00       	call   bda2 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b674:	c9                   	leave
    b675:	c3                   	ret

000000000000b676 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b676:	55                   	push   %rbp
    b677:	48 89 e5             	mov    %rsp,%rbp
    b67a:	48 83 ec 10          	sub    $0x10,%rsp
    b67e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b682:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b686:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b68a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b68e:	ba 00 00 00 00       	mov    $0x0,%edx
    b693:	48 89 ce             	mov    %rcx,%rsi
    b696:	48 89 c7             	mov    %rax,%rdi
    b699:	e8 18 07 00 00       	call   bdb6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b69e:	c9                   	leave
    b69f:	c3                   	ret

000000000000b6a0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b6a0:	55                   	push   %rbp
    b6a1:	48 89 e5             	mov    %rsp,%rbp
    b6a4:	48 83 ec 20          	sub    $0x20,%rsp
    b6a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b6ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b6b0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b6b5:	74 40                	je     b6f7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b6b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6bb:	48 89 c7             	mov    %rax,%rdi
    b6be:	e8 c2 f9 ff ff       	call   b085 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b6c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b6c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6cb:	48 89 c7             	mov    %rax,%rdi
    b6ce:	e8 4d 07 00 00       	call   be20 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b6d3:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b6d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b6dc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b6e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b6e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6e8:	48 89 ce             	mov    %rcx,%rsi
    b6eb:	48 89 c7             	mov    %rax,%rdi
    b6ee:	e8 76 07 00 00       	call   be69 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b6f3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b6f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b6fb:	c9                   	leave
    b6fc:	c3                   	ret
    b6fd:	90                   	nop

000000000000b6fe <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b6fe:	55                   	push   %rbp
    b6ff:	48 89 e5             	mov    %rsp,%rbp
    b702:	48 83 ec 10          	sub    $0x10,%rsp
    b706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b70a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b70e:	48 89 c7             	mov    %rax,%rdi
    b711:	e8 98 07 00 00       	call   beae <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b716:	c9                   	leave
    b717:	c3                   	ret

000000000000b718 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b718:	55                   	push   %rbp
    b719:	48 89 e5             	mov    %rsp,%rbp
    b71c:	48 83 ec 10          	sub    $0x10,%rsp
    b720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b724:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b728:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b72c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b730:	ba 00 00 00 00       	mov    $0x0,%edx
    b735:	48 89 ce             	mov    %rcx,%rsi
    b738:	48 89 c7             	mov    %rax,%rdi
    b73b:	e8 82 07 00 00       	call   bec2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b740:	c9                   	leave
    b741:	c3                   	ret

000000000000b742 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b742:	55                   	push   %rbp
    b743:	48 89 e5             	mov    %rsp,%rbp
    b746:	48 83 ec 20          	sub    $0x20,%rsp
    b74a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b74e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b752:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b756:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b75a:	eb 1e                	jmp    b77a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b760:	48 89 c7             	mov    %rax,%rdi
    b763:	e8 c5 07 00 00       	call   bf2d <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b768:	48 89 c7             	mov    %rax,%rdi
    b76b:	e8 cb 07 00 00       	call   bf3b <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b770:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b775:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b77a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b77f:	75 db                	jne    b75c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b785:	c9                   	leave
    b786:	c3                   	ret
    b787:	90                   	nop

000000000000b788 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b788:	55                   	push   %rbp
    b789:	48 89 e5             	mov    %rsp,%rbp
    b78c:	48 83 ec 10          	sub    $0x10,%rsp
    b790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b798:	48 89 c7             	mov    %rax,%rdi
    b79b:	e8 c4 07 00 00       	call   bf64 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b7a0:	c9                   	leave
    b7a1:	c3                   	ret

000000000000b7a2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b7a2:	55                   	push   %rbp
    b7a3:	48 89 e5             	mov    %rsp,%rbp
    b7a6:	48 83 ec 10          	sub    $0x10,%rsp
    b7aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b7b2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7ba:	ba 00 00 00 00       	mov    $0x0,%edx
    b7bf:	48 89 ce             	mov    %rcx,%rsi
    b7c2:	48 89 c7             	mov    %rax,%rdi
    b7c5:	e8 ae 07 00 00       	call   bf78 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b7ca:	c9                   	leave
    b7cb:	c3                   	ret

000000000000b7cc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b7cc:	55                   	push   %rbp
    b7cd:	48 89 e5             	mov    %rsp,%rbp
    b7d0:	48 83 ec 20          	sub    $0x20,%rsp
    b7d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b7d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b7dc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b7e1:	74 40                	je     b823 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b7e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7e7:	48 89 c7             	mov    %rax,%rdi
    b7ea:	e8 ea 07 00 00       	call   bfd9 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b7ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b7f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f7:	48 89 c7             	mov    %rax,%rdi
    b7fa:	e8 e8 07 00 00       	call   bfe7 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b7ff:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b804:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b808:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b80c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b814:	48 89 ce             	mov    %rcx,%rsi
    b817:	48 89 c7             	mov    %rax,%rdi
    b81a:	e8 f5 07 00 00       	call   c014 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b81f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b823:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b827:	c9                   	leave
    b828:	c3                   	ret
    b829:	90                   	nop

000000000000b82a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b82a:	55                   	push   %rbp
    b82b:	48 89 e5             	mov    %rsp,%rbp
    b82e:	48 83 ec 10          	sub    $0x10,%rsp
    b832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b83a:	48 89 c7             	mov    %rax,%rdi
    b83d:	e8 16 08 00 00       	call   c058 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b842:	c9                   	leave
    b843:	c3                   	ret

000000000000b844 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b844:	55                   	push   %rbp
    b845:	48 89 e5             	mov    %rsp,%rbp
    b848:	48 83 ec 10          	sub    $0x10,%rsp
    b84c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b854:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b85c:	ba 00 00 00 00       	mov    $0x0,%edx
    b861:	48 89 ce             	mov    %rcx,%rsi
    b864:	48 89 c7             	mov    %rax,%rdi
    b867:	e8 00 08 00 00       	call   c06c <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b86c:	c9                   	leave
    b86d:	c3                   	ret

000000000000b86e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b86e:	55                   	push   %rbp
    b86f:	48 89 e5             	mov    %rsp,%rbp
    b872:	48 83 ec 20          	sub    $0x20,%rsp
    b876:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b87a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b87e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b883:	74 40                	je     b8c5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b885:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b889:	48 89 c7             	mov    %rax,%rdi
    b88c:	e8 3c 08 00 00       	call   c0cd <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b891:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b899:	48 89 c7             	mov    %rax,%rdi
    b89c:	e8 3a 08 00 00       	call   c0db <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b8a1:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b8a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b8aa:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b8ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b8b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8b6:	48 89 ce             	mov    %rcx,%rsi
    b8b9:	48 89 c7             	mov    %rax,%rdi
    b8bc:	e8 40 08 00 00       	call   c101 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b8c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b8c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b8c9:	c9                   	leave
    b8ca:	c3                   	ret
    b8cb:	90                   	nop

000000000000b8cc <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b8cc:	55                   	push   %rbp
    b8cd:	48 89 e5             	mov    %rsp,%rbp
    b8d0:	48 83 ec 10          	sub    $0x10,%rsp
    b8d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b8d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8dc:	48 89 c7             	mov    %rax,%rdi
    b8df:	e8 62 08 00 00       	call   c146 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b8e4:	c9                   	leave
    b8e5:	c3                   	ret

000000000000b8e6 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b8e6:	55                   	push   %rbp
    b8e7:	48 89 e5             	mov    %rsp,%rbp
    b8ea:	48 83 ec 10          	sub    $0x10,%rsp
    b8ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b8f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b8fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8fe:	ba 00 00 00 00       	mov    $0x0,%edx
    b903:	48 89 ce             	mov    %rcx,%rsi
    b906:	48 89 c7             	mov    %rax,%rdi
    b909:	e8 4c 08 00 00       	call   c15a <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b90e:	c9                   	leave
    b90f:	c3                   	ret

000000000000b910 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b910:	55                   	push   %rbp
    b911:	48 89 e5             	mov    %rsp,%rbp
    b914:	48 83 ec 20          	sub    $0x20,%rsp
    b918:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b91c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b920:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b925:	74 40                	je     b967 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b927:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b92b:	48 89 c7             	mov    %rax,%rdi
    b92e:	e8 88 08 00 00       	call   c1bb <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b933:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b93b:	48 89 c7             	mov    %rax,%rdi
    b93e:	e8 86 08 00 00       	call   c1c9 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b943:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b948:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b94c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b950:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b954:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b958:	48 89 ce             	mov    %rcx,%rsi
    b95b:	48 89 c7             	mov    %rax,%rdi
    b95e:	e8 8d 08 00 00       	call   c1f0 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b963:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b96b:	c9                   	leave
    b96c:	c3                   	ret
    b96d:	90                   	nop

000000000000b96e <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b96e:	55                   	push   %rbp
    b96f:	48 89 e5             	mov    %rsp,%rbp
    b972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b976:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b97d:	03 3f 00 
      }
    b980:	5d                   	pop    %rbp
    b981:	c3                   	ret

000000000000b982 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b982:	55                   	push   %rbp
    b983:	48 89 e5             	mov    %rsp,%rbp
    b986:	48 83 ec 20          	sub    $0x20,%rsp
    b98a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b98e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b992:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b99a:	48 89 c7             	mov    %rax,%rdi
    b99d:	e8 cc ff ff ff       	call   b96e <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b9a2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b9a6:	0f 92 c0             	setb   %al
    b9a9:	0f b6 c0             	movzbl %al,%eax
    b9ac:	48 85 c0             	test   %rax,%rax
    b9af:	0f 95 c0             	setne  %al
    b9b2:	84 c0                	test   %al,%al
    b9b4:	74 1a                	je     b9d0 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b9b6:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b9bd:	07 7e 00 
    b9c0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b9c4:	73 05                	jae    b9cb <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b9c6:	e8 05 89 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b9cb:	e8 30 87 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b9d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b9d4:	48 89 d0             	mov    %rdx,%rax
    b9d7:	48 c1 e0 06          	shl    $0x6,%rax
    b9db:	48 01 d0             	add    %rdx,%rax
    b9de:	48 c1 e0 03          	shl    $0x3,%rax
    b9e2:	48 89 c7             	mov    %rax,%rdi
    b9e5:	e8 06 8a ff ff       	call   43f0 <_Znwm@plt>
    b9ea:	90                   	nop
      }
    b9eb:	c9                   	leave
    b9ec:	c3                   	ret

000000000000b9ed <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b9ed:	55                   	push   %rbp
    b9ee:	48 89 e5             	mov    %rsp,%rbp
    b9f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b9f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9f9:	5d                   	pop    %rbp
    b9fa:	c3                   	ret

000000000000b9fb <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b9fb:	55                   	push   %rbp
    b9fc:	48 89 e5             	mov    %rsp,%rbp
    b9ff:	48 83 ec 10          	sub    $0x10,%rsp
    ba03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ba07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba0b:	48 89 c6             	mov    %rax,%rsi
    ba0e:	bf 08 02 00 00       	mov    $0x208,%edi
    ba13:	e8 71 96 ff ff       	call   5089 <_ZnwmPv>
    ba18:	b9 08 02 00 00       	mov    $0x208,%ecx
    ba1d:	be 00 00 00 00       	mov    $0x0,%esi
    ba22:	48 89 30             	mov    %rsi,(%rax)
    ba25:	89 ca                	mov    %ecx,%edx
    ba27:	48 01 c2             	add    %rax,%rdx
    ba2a:	48 83 c2 08          	add    $0x8,%rdx
    ba2e:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    ba32:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ba36:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ba3a:	48 29 d0             	sub    %rdx,%rax
    ba3d:	01 c1                	add    %eax,%ecx
    ba3f:	83 e1 f8             	and    $0xfffffff8,%ecx
    ba42:	89 c8                	mov    %ecx,%eax
    ba44:	c1 e8 03             	shr    $0x3,%eax
    ba47:	89 c1                	mov    %eax,%ecx
    ba49:	48 89 d7             	mov    %rdx,%rdi
    ba4c:	48 89 f0             	mov    %rsi,%rax
    ba4f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    ba52:	90                   	nop
    ba53:	c9                   	leave
    ba54:	c3                   	ret

000000000000ba55 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ba55:	55                   	push   %rbp
    ba56:	48 89 e5             	mov    %rsp,%rbp
    ba59:	48 83 ec 20          	sub    $0x20,%rsp
    ba5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba65:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ba69:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ba6d:	48 89 c7             	mov    %rax,%rdi
    ba70:	e8 bf 07 00 00       	call   c234 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ba75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba79:	48 89 c7             	mov    %rax,%rdi
    ba7c:	e8 1a 96 ff ff       	call   509b <_ZSt17__size_to_integerm>
    ba81:	48 89 c1             	mov    %rax,%rcx
    ba84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba88:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba8c:	48 89 ce             	mov    %rcx,%rsi
    ba8f:	48 89 c7             	mov    %rax,%rdi
    ba92:	e8 a8 07 00 00       	call   c23f <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ba97:	c9                   	leave
    ba98:	c3                   	ret
    ba99:	90                   	nop

000000000000ba9a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ba9a:	55                   	push   %rbp
    ba9b:	48 89 e5             	mov    %rsp,%rbp
    ba9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    baa2:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    baa9:	07 7e 00 
      }
    baac:	5d                   	pop    %rbp
    baad:	c3                   	ret

000000000000baae <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    baae:	55                   	push   %rbp
    baaf:	48 89 e5             	mov    %rsp,%rbp
    bab2:	48 83 ec 20          	sub    $0x20,%rsp
    bab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    babe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bac6:	48 89 c7             	mov    %rax,%rdi
    bac9:	e8 cc ff ff ff       	call   ba9a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    bace:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bad2:	0f 92 c0             	setb   %al
    bad5:	0f b6 c0             	movzbl %al,%eax
    bad8:	48 85 c0             	test   %rax,%rax
    badb:	0f 95 c0             	setne  %al
    bade:	84 c0                	test   %al,%al
    bae0:	74 1a                	je     bafc <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bae2:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    bae9:	0f fc 00 
    baec:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    baf0:	73 05                	jae    baf7 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    baf2:	e8 d9 87 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    baf7:	e8 04 86 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bafc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb00:	48 89 d0             	mov    %rdx,%rax
    bb03:	48 c1 e0 06          	shl    $0x6,%rax
    bb07:	48 01 d0             	add    %rdx,%rax
    bb0a:	48 c1 e0 02          	shl    $0x2,%rax
    bb0e:	48 89 c7             	mov    %rax,%rdi
    bb11:	e8 da 88 ff ff       	call   43f0 <_Znwm@plt>
    bb16:	90                   	nop
      }
    bb17:	c9                   	leave
    bb18:	c3                   	ret

000000000000bb19 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb19:	55                   	push   %rbp
    bb1a:	48 89 e5             	mov    %rsp,%rbp
    bb1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb25:	5d                   	pop    %rbp
    bb26:	c3                   	ret

000000000000bb27 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb27:	55                   	push   %rbp
    bb28:	48 89 e5             	mov    %rsp,%rbp
    bb2b:	48 83 ec 10          	sub    $0x10,%rsp
    bb2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb37:	48 89 c6             	mov    %rax,%rsi
    bb3a:	bf 04 01 00 00       	mov    $0x104,%edi
    bb3f:	e8 45 95 ff ff       	call   5089 <_ZnwmPv>
    bb44:	b9 04 01 00 00       	mov    $0x104,%ecx
    bb49:	be 00 00 00 00       	mov    $0x0,%esi
    bb4e:	48 89 30             	mov    %rsi,(%rax)
    bb51:	89 ca                	mov    %ecx,%edx
    bb53:	48 01 c2             	add    %rax,%rdx
    bb56:	48 83 c2 08          	add    $0x8,%rdx
    bb5a:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    bb5e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bb62:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    bb66:	48 29 d0             	sub    %rdx,%rax
    bb69:	01 c1                	add    %eax,%ecx
    bb6b:	83 e1 f8             	and    $0xfffffff8,%ecx
    bb6e:	89 c8                	mov    %ecx,%eax
    bb70:	c1 e8 03             	shr    $0x3,%eax
    bb73:	89 c1                	mov    %eax,%ecx
    bb75:	48 89 d7             	mov    %rdx,%rdi
    bb78:	48 89 f0             	mov    %rsi,%rax
    bb7b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    bb7e:	90                   	nop
    bb7f:	c9                   	leave
    bb80:	c3                   	ret

000000000000bb81 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb81:	55                   	push   %rbp
    bb82:	48 89 e5             	mov    %rsp,%rbp
    bb85:	48 83 ec 20          	sub    $0x20,%rsp
    bb89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb91:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb95:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb99:	48 89 c7             	mov    %rax,%rdi
    bb9c:	e8 0d 07 00 00       	call   c2ae <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bba5:	48 89 c7             	mov    %rax,%rdi
    bba8:	e8 ee 94 ff ff       	call   509b <_ZSt17__size_to_integerm>
    bbad:	48 89 c1             	mov    %rax,%rcx
    bbb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbb8:	48 89 ce             	mov    %rcx,%rsi
    bbbb:	48 89 c7             	mov    %rax,%rdi
    bbbe:	e8 f6 06 00 00       	call   c2b9 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bbc3:	c9                   	leave
    bbc4:	c3                   	ret
    bbc5:	90                   	nop

000000000000bbc6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bbc6:	55                   	push   %rbp
    bbc7:	48 89 e5             	mov    %rsp,%rbp
    bbca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bbce:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bbd5:	ff ff 0f 
      }
    bbd8:	5d                   	pop    %rbp
    bbd9:	c3                   	ret

000000000000bbda <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bbda:	55                   	push   %rbp
    bbdb:	48 89 e5             	mov    %rsp,%rbp
    bbde:	48 83 ec 20          	sub    $0x20,%rsp
    bbe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bbee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf2:	48 89 c7             	mov    %rax,%rdi
    bbf5:	e8 cc ff ff ff       	call   bbc6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    bbfa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbfe:	0f 92 c0             	setb   %al
    bc01:	0f b6 c0             	movzbl %al,%eax
    bc04:	48 85 c0             	test   %rax,%rax
    bc07:	0f 95 c0             	setne  %al
    bc0a:	84 c0                	test   %al,%al
    bc0c:	74 1a                	je     bc28 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc0e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bc15:	ff ff 1f 
    bc18:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc1c:	73 05                	jae    bc23 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc1e:	e8 ad 86 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc23:	e8 d8 84 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc2c:	48 c1 e0 03          	shl    $0x3,%rax
    bc30:	48 89 c7             	mov    %rax,%rdi
    bc33:	e8 b8 87 ff ff       	call   43f0 <_Znwm@plt>
    bc38:	90                   	nop
      }
    bc39:	c9                   	leave
    bc3a:	c3                   	ret

000000000000bc3b <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bc3b:	55                   	push   %rbp
    bc3c:	48 89 e5             	mov    %rsp,%rbp
    bc3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bc43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc47:	5d                   	pop    %rbp
    bc48:	c3                   	ret

000000000000bc49 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bc49:	55                   	push   %rbp
    bc4a:	48 89 e5             	mov    %rsp,%rbp
    bc4d:	48 83 ec 10          	sub    $0x10,%rsp
    bc51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bc55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc59:	48 89 c6             	mov    %rax,%rsi
    bc5c:	bf 08 00 00 00       	mov    $0x8,%edi
    bc61:	e8 23 94 ff ff       	call   5089 <_ZnwmPv>
    bc66:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bc6d:	90                   	nop
    bc6e:	c9                   	leave
    bc6f:	c3                   	ret

000000000000bc70 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc70:	55                   	push   %rbp
    bc71:	48 89 e5             	mov    %rsp,%rbp
    bc74:	48 83 ec 20          	sub    $0x20,%rsp
    bc78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc84:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc88:	48 89 c7             	mov    %rax,%rdi
    bc8b:	e8 98 06 00 00       	call   c328 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc94:	48 89 c7             	mov    %rax,%rdi
    bc97:	e8 ff 93 ff ff       	call   509b <_ZSt17__size_to_integerm>
    bc9c:	48 89 c1             	mov    %rax,%rcx
    bc9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bca7:	48 89 ce             	mov    %rcx,%rsi
    bcaa:	48 89 c7             	mov    %rax,%rdi
    bcad:	e8 81 06 00 00       	call   c333 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bcb2:	c9                   	leave
    bcb3:	c3                   	ret

000000000000bcb4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bcb4:	55                   	push   %rbp
    bcb5:	48 89 e5             	mov    %rsp,%rbp
    bcb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bcbc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bcc3:	ff ff 0f 
      }
    bcc6:	5d                   	pop    %rbp
    bcc7:	c3                   	ret

000000000000bcc8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bcc8:	55                   	push   %rbp
    bcc9:	48 89 e5             	mov    %rsp,%rbp
    bccc:	48 83 ec 20          	sub    $0x20,%rsp
    bcd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bcdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce0:	48 89 c7             	mov    %rax,%rdi
    bce3:	e8 cc ff ff ff       	call   bcb4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    bce8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcec:	0f 92 c0             	setb   %al
    bcef:	0f b6 c0             	movzbl %al,%eax
    bcf2:	48 85 c0             	test   %rax,%rax
    bcf5:	0f 95 c0             	setne  %al
    bcf8:	84 c0                	test   %al,%al
    bcfa:	74 1a                	je     bd16 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bcfc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bd03:	ff ff 1f 
    bd06:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd0a:	73 05                	jae    bd11 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bd0c:	e8 bf 85 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bd11:	e8 ea 83 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bd16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd1a:	48 c1 e0 03          	shl    $0x3,%rax
    bd1e:	48 89 c7             	mov    %rax,%rdi
    bd21:	e8 ca 86 ff ff       	call   43f0 <_Znwm@plt>
    bd26:	90                   	nop
      }
    bd27:	c9                   	leave
    bd28:	c3                   	ret

000000000000bd29 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bd29:	55                   	push   %rbp
    bd2a:	48 89 e5             	mov    %rsp,%rbp
    bd2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bd31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd35:	5d                   	pop    %rbp
    bd36:	c3                   	ret

000000000000bd37 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bd37:	55                   	push   %rbp
    bd38:	48 89 e5             	mov    %rsp,%rbp
    bd3b:	48 83 ec 10          	sub    $0x10,%rsp
    bd3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd47:	48 89 c6             	mov    %rax,%rsi
    bd4a:	bf 08 00 00 00       	mov    $0x8,%edi
    bd4f:	e8 35 93 ff ff       	call   5089 <_ZnwmPv>
    bd54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bd5b:	90                   	nop
    bd5c:	c9                   	leave
    bd5d:	c3                   	ret

000000000000bd5e <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bd5e:	55                   	push   %rbp
    bd5f:	48 89 e5             	mov    %rsp,%rbp
    bd62:	48 83 ec 20          	sub    $0x20,%rsp
    bd66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bd72:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd76:	48 89 c7             	mov    %rax,%rdi
    bd79:	e8 12 06 00 00       	call   c390 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd82:	48 89 c7             	mov    %rax,%rdi
    bd85:	e8 11 93 ff ff       	call   509b <_ZSt17__size_to_integerm>
    bd8a:	48 89 c1             	mov    %rax,%rcx
    bd8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd95:	48 89 ce             	mov    %rcx,%rsi
    bd98:	48 89 c7             	mov    %rax,%rdi
    bd9b:	e8 fb 05 00 00       	call   c39b <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bda0:	c9                   	leave
    bda1:	c3                   	ret

000000000000bda2 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bda2:	55                   	push   %rbp
    bda3:	48 89 e5             	mov    %rsp,%rbp
    bda6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bdaa:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    bdb1:	55 55 05 
      }
    bdb4:	5d                   	pop    %rbp
    bdb5:	c3                   	ret

000000000000bdb6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bdb6:	55                   	push   %rbp
    bdb7:	48 89 e5             	mov    %rsp,%rbp
    bdba:	48 83 ec 20          	sub    $0x20,%rsp
    bdbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdc6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bdca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdce:	48 89 c7             	mov    %rax,%rdi
    bdd1:	e8 cc ff ff ff       	call   bda2 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    bdd6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdda:	0f 92 c0             	setb   %al
    bddd:	0f b6 c0             	movzbl %al,%eax
    bde0:	48 85 c0             	test   %rax,%rax
    bde3:	0f 95 c0             	setne  %al
    bde6:	84 c0                	test   %al,%al
    bde8:	74 1a                	je     be04 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bdea:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    bdf1:	aa aa 0a 
    bdf4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdf8:	73 05                	jae    bdff <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bdfa:	e8 d1 84 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bdff:	e8 fc 82 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    be04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be08:	48 89 d0             	mov    %rdx,%rax
    be0b:	48 01 c0             	add    %rax,%rax
    be0e:	48 01 d0             	add    %rdx,%rax
    be11:	48 c1 e0 03          	shl    $0x3,%rax
    be15:	48 89 c7             	mov    %rax,%rdi
    be18:	e8 d3 85 ff ff       	call   43f0 <_Znwm@plt>
    be1d:	90                   	nop
      }
    be1e:	c9                   	leave
    be1f:	c3                   	ret

000000000000be20 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    be20:	55                   	push   %rbp
    be21:	48 89 e5             	mov    %rsp,%rbp
    be24:	48 83 ec 10          	sub    $0x10,%rsp
    be28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    be2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be30:	48 89 c6             	mov    %rax,%rsi
    be33:	bf 18 00 00 00       	mov    $0x18,%edi
    be38:	e8 4c 92 ff ff       	call   5089 <_ZnwmPv>
    be3d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    be43:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    be4a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    be51:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    be58:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    be5f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    be66:	90                   	nop
    be67:	c9                   	leave
    be68:	c3                   	ret

000000000000be69 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    be69:	55                   	push   %rbp
    be6a:	48 89 e5             	mov    %rsp,%rbp
    be6d:	48 83 ec 20          	sub    $0x20,%rsp
    be71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    be7d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be81:	48 89 c7             	mov    %rax,%rdi
    be84:	e8 6f 05 00 00       	call   c3f8 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    be89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be8d:	48 89 c7             	mov    %rax,%rdi
    be90:	e8 06 92 ff ff       	call   509b <_ZSt17__size_to_integerm>
    be95:	48 89 c1             	mov    %rax,%rcx
    be98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bea0:	48 89 ce             	mov    %rcx,%rsi
    bea3:	48 89 c7             	mov    %rax,%rdi
    bea6:	e8 58 05 00 00       	call   c403 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    beab:	c9                   	leave
    beac:	c3                   	ret
    bead:	90                   	nop

000000000000beae <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    beae:	55                   	push   %rbp
    beaf:	48 89 e5             	mov    %rsp,%rbp
    beb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    beb6:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    bebd:	49 92 04 
      }
    bec0:	5d                   	pop    %rbp
    bec1:	c3                   	ret

000000000000bec2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bec2:	55                   	push   %rbp
    bec3:	48 89 e5             	mov    %rsp,%rbp
    bec6:	48 83 ec 20          	sub    $0x20,%rsp
    beca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bece:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bed2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beda:	48 89 c7             	mov    %rax,%rdi
    bedd:	e8 cc ff ff ff       	call   beae <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    bee2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bee6:	0f 92 c0             	setb   %al
    bee9:	0f b6 c0             	movzbl %al,%eax
    beec:	48 85 c0             	test   %rax,%rax
    beef:	0f 95 c0             	setne  %al
    bef2:	84 c0                	test   %al,%al
    bef4:	74 1a                	je     bf10 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bef6:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    befd:	92 24 09 
    bf00:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf04:	73 05                	jae    bf0b <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bf06:	e8 c5 83 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bf0b:	e8 f0 81 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bf10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf14:	48 89 d0             	mov    %rdx,%rax
    bf17:	48 c1 e0 03          	shl    $0x3,%rax
    bf1b:	48 29 d0             	sub    %rdx,%rax
    bf1e:	48 c1 e0 02          	shl    $0x2,%rax
    bf22:	48 89 c7             	mov    %rax,%rdi
    bf25:	e8 c6 84 ff ff       	call   43f0 <_Znwm@plt>
    bf2a:	90                   	nop
      }
    bf2b:	c9                   	leave
    bf2c:	c3                   	ret

000000000000bf2d <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bf2d:	55                   	push   %rbp
    bf2e:	48 89 e5             	mov    %rsp,%rbp
    bf31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bf35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf39:	5d                   	pop    %rbp
    bf3a:	c3                   	ret

000000000000bf3b <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bf3b:	55                   	push   %rbp
    bf3c:	48 89 e5             	mov    %rsp,%rbp
    bf3f:	48 83 ec 10          	sub    $0x10,%rsp
    bf43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bf47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4b:	48 89 c6             	mov    %rax,%rsi
    bf4e:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bf53:	e8 31 91 ff ff       	call   5089 <_ZnwmPv>
    bf58:	48 89 c7             	mov    %rax,%rdi
    bf5b:	e8 6c 05 00 00       	call   c4cc <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bf60:	90                   	nop
    bf61:	c9                   	leave
    bf62:	c3                   	ret
    bf63:	90                   	nop

000000000000bf64 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bf64:	55                   	push   %rbp
    bf65:	48 89 e5             	mov    %rsp,%rbp
    bf68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bf6c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bf73:	ff ff 0f 
      }
    bf76:	5d                   	pop    %rbp
    bf77:	c3                   	ret

000000000000bf78 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bf78:	55                   	push   %rbp
    bf79:	48 89 e5             	mov    %rsp,%rbp
    bf7c:	48 83 ec 20          	sub    $0x20,%rsp
    bf80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bf8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf90:	48 89 c7             	mov    %rax,%rdi
    bf93:	e8 cc ff ff ff       	call   bf64 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bf98:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf9c:	0f 92 c0             	setb   %al
    bf9f:	0f b6 c0             	movzbl %al,%eax
    bfa2:	48 85 c0             	test   %rax,%rax
    bfa5:	0f 95 c0             	setne  %al
    bfa8:	84 c0                	test   %al,%al
    bfaa:	74 1a                	je     bfc6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bfac:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bfb3:	ff ff 1f 
    bfb6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bfba:	73 05                	jae    bfc1 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bfbc:	e8 0f 83 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bfc1:	e8 3a 81 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bfc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfca:	48 c1 e0 03          	shl    $0x3,%rax
    bfce:	48 89 c7             	mov    %rax,%rdi
    bfd1:	e8 1a 84 ff ff       	call   43f0 <_Znwm@plt>
    bfd6:	90                   	nop
      }
    bfd7:	c9                   	leave
    bfd8:	c3                   	ret

000000000000bfd9 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bfd9:	55                   	push   %rbp
    bfda:	48 89 e5             	mov    %rsp,%rbp
    bfdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bfe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe5:	5d                   	pop    %rbp
    bfe6:	c3                   	ret

000000000000bfe7 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bfe7:	55                   	push   %rbp
    bfe8:	48 89 e5             	mov    %rsp,%rbp
    bfeb:	48 83 ec 10          	sub    $0x10,%rsp
    bfef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bff7:	48 89 c6             	mov    %rax,%rsi
    bffa:	bf 08 00 00 00       	mov    $0x8,%edi
    bfff:	e8 85 90 ff ff       	call   5089 <_ZnwmPv>
    c004:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    c00a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    c011:	90                   	nop
    c012:	c9                   	leave
    c013:	c3                   	ret

000000000000c014 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c014:	55                   	push   %rbp
    c015:	48 89 e5             	mov    %rsp,%rbp
    c018:	48 83 ec 20          	sub    $0x20,%rsp
    c01c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c020:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c024:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c028:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c02c:	48 89 c7             	mov    %rax,%rdi
    c02f:	e8 b3 04 00 00       	call   c4e7 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c034:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c038:	48 89 c7             	mov    %rax,%rdi
    c03b:	e8 5b 90 ff ff       	call   509b <_ZSt17__size_to_integerm>
    c040:	48 89 c1             	mov    %rax,%rcx
    c043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c047:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c04b:	48 89 ce             	mov    %rcx,%rsi
    c04e:	48 89 c7             	mov    %rax,%rdi
    c051:	e8 9c 04 00 00       	call   c4f2 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c056:	c9                   	leave
    c057:	c3                   	ret

000000000000c058 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c058:	55                   	push   %rbp
    c059:	48 89 e5             	mov    %rsp,%rbp
    c05c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c060:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c067:	ff ff 1f 
      }
    c06a:	5d                   	pop    %rbp
    c06b:	c3                   	ret

000000000000c06c <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c06c:	55                   	push   %rbp
    c06d:	48 89 e5             	mov    %rsp,%rbp
    c070:	48 83 ec 20          	sub    $0x20,%rsp
    c074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c078:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c07c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c084:	48 89 c7             	mov    %rax,%rdi
    c087:	e8 cc ff ff ff       	call   c058 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    c08c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c090:	0f 92 c0             	setb   %al
    c093:	0f b6 c0             	movzbl %al,%eax
    c096:	48 85 c0             	test   %rax,%rax
    c099:	0f 95 c0             	setne  %al
    c09c:	84 c0                	test   %al,%al
    c09e:	74 1a                	je     c0ba <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c0a0:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    c0a7:	ff ff 3f 
    c0aa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c0ae:	73 05                	jae    c0b5 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c0b0:	e8 1b 82 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c0b5:	e8 46 80 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c0ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0be:	48 c1 e0 02          	shl    $0x2,%rax
    c0c2:	48 89 c7             	mov    %rax,%rdi
    c0c5:	e8 26 83 ff ff       	call   43f0 <_Znwm@plt>
    c0ca:	90                   	nop
      }
    c0cb:	c9                   	leave
    c0cc:	c3                   	ret

000000000000c0cd <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c0cd:	55                   	push   %rbp
    c0ce:	48 89 e5             	mov    %rsp,%rbp
    c0d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c0d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0d9:	5d                   	pop    %rbp
    c0da:	c3                   	ret

000000000000c0db <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c0db:	55                   	push   %rbp
    c0dc:	48 89 e5             	mov    %rsp,%rbp
    c0df:	48 83 ec 10          	sub    $0x10,%rsp
    c0e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c0e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0eb:	48 89 c6             	mov    %rax,%rsi
    c0ee:	bf 04 00 00 00       	mov    $0x4,%edi
    c0f3:	e8 91 8f ff ff       	call   5089 <_ZnwmPv>
    c0f8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    c0fe:	90                   	nop
    c0ff:	c9                   	leave
    c100:	c3                   	ret

000000000000c101 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c101:	55                   	push   %rbp
    c102:	48 89 e5             	mov    %rsp,%rbp
    c105:	48 83 ec 20          	sub    $0x20,%rsp
    c109:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c10d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c111:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c115:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c119:	48 89 c7             	mov    %rax,%rdi
    c11c:	e8 2e 04 00 00       	call   c54f <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c121:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c125:	48 89 c7             	mov    %rax,%rdi
    c128:	e8 6e 8f ff ff       	call   509b <_ZSt17__size_to_integerm>
    c12d:	48 89 c1             	mov    %rax,%rcx
    c130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c134:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c138:	48 89 ce             	mov    %rcx,%rsi
    c13b:	48 89 c7             	mov    %rax,%rdi
    c13e:	e8 17 04 00 00       	call   c55a <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c143:	c9                   	leave
    c144:	c3                   	ret
    c145:	90                   	nop

000000000000c146 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c146:	55                   	push   %rbp
    c147:	48 89 e5             	mov    %rsp,%rbp
    c14a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c14e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c155:	ff ff 0f 
      }
    c158:	5d                   	pop    %rbp
    c159:	c3                   	ret

000000000000c15a <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c15a:	55                   	push   %rbp
    c15b:	48 89 e5             	mov    %rsp,%rbp
    c15e:	48 83 ec 20          	sub    $0x20,%rsp
    c162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c166:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c16a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c16e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c172:	48 89 c7             	mov    %rax,%rdi
    c175:	e8 cc ff ff ff       	call   c146 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    c17a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c17e:	0f 92 c0             	setb   %al
    c181:	0f b6 c0             	movzbl %al,%eax
    c184:	48 85 c0             	test   %rax,%rax
    c187:	0f 95 c0             	setne  %al
    c18a:	84 c0                	test   %al,%al
    c18c:	74 1a                	je     c1a8 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c18e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c195:	ff ff 1f 
    c198:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c19c:	73 05                	jae    c1a3 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c19e:	e8 2d 81 ff ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c1a3:	e8 58 7f ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c1a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1ac:	48 c1 e0 03          	shl    $0x3,%rax
    c1b0:	48 89 c7             	mov    %rax,%rdi
    c1b3:	e8 38 82 ff ff       	call   43f0 <_Znwm@plt>
    c1b8:	90                   	nop
      }
    c1b9:	c9                   	leave
    c1ba:	c3                   	ret

000000000000c1bb <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c1bb:	55                   	push   %rbp
    c1bc:	48 89 e5             	mov    %rsp,%rbp
    c1bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c1c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1c7:	5d                   	pop    %rbp
    c1c8:	c3                   	ret

000000000000c1c9 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c1c9:	55                   	push   %rbp
    c1ca:	48 89 e5             	mov    %rsp,%rbp
    c1cd:	48 83 ec 10          	sub    $0x10,%rsp
    c1d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c1d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1d9:	48 89 c6             	mov    %rax,%rsi
    c1dc:	bf 08 00 00 00       	mov    $0x8,%edi
    c1e1:	e8 a3 8e ff ff       	call   5089 <_ZnwmPv>
    c1e6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    c1ed:	90                   	nop
    c1ee:	c9                   	leave
    c1ef:	c3                   	ret

000000000000c1f0 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c1f0:	55                   	push   %rbp
    c1f1:	48 89 e5             	mov    %rsp,%rbp
    c1f4:	48 83 ec 20          	sub    $0x20,%rsp
    c1f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c200:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c204:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c208:	48 89 c7             	mov    %rax,%rdi
    c20b:	e8 a7 03 00 00       	call   c5b7 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c210:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c214:	48 89 c7             	mov    %rax,%rdi
    c217:	e8 7f 8e ff ff       	call   509b <_ZSt17__size_to_integerm>
    c21c:	48 89 c1             	mov    %rax,%rcx
    c21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c223:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c227:	48 89 ce             	mov    %rcx,%rsi
    c22a:	48 89 c7             	mov    %rax,%rdi
    c22d:	e8 90 03 00 00       	call   c5c2 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    c232:	c9                   	leave
    c233:	c3                   	ret

000000000000c234 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c234:	55                   	push   %rbp
    c235:	48 89 e5             	mov    %rsp,%rbp
    c238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c23c:	90                   	nop
    c23d:	5d                   	pop    %rbp
    c23e:	c3                   	ret

000000000000c23f <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c23f:	55                   	push   %rbp
    c240:	48 89 e5             	mov    %rsp,%rbp
    c243:	48 83 ec 20          	sub    $0x20,%rsp
    c247:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c24b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c24f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c253:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c258:	75 06                	jne    c260 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c25e:	eb 4c                	jmp    c2ac <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    c260:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c264:	48 89 d0             	mov    %rdx,%rax
    c267:	48 c1 e0 06          	shl    $0x6,%rax
    c26b:	48 01 d0             	add    %rdx,%rax
    c26e:	48 c1 e0 03          	shl    $0x3,%rax
    c272:	48 89 c2             	mov    %rax,%rdx
    c275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c279:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c27d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c285:	48 89 ce             	mov    %rcx,%rsi
    c288:	48 89 c7             	mov    %rax,%rdi
    c28b:	e8 8f 03 00 00       	call   c61f <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c290:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c294:	48 89 d0             	mov    %rdx,%rax
    c297:	48 c1 e0 06          	shl    $0x6,%rax
    c29b:	48 01 d0             	add    %rdx,%rax
    c29e:	48 c1 e0 03          	shl    $0x3,%rax
    c2a2:	48 89 c2             	mov    %rax,%rdx
    c2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a9:	48 01 d0             	add    %rdx,%rax
    }
    c2ac:	c9                   	leave
    c2ad:	c3                   	ret

000000000000c2ae <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c2ae:	55                   	push   %rbp
    c2af:	48 89 e5             	mov    %rsp,%rbp
    c2b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c2b6:	90                   	nop
    c2b7:	5d                   	pop    %rbp
    c2b8:	c3                   	ret

000000000000c2b9 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c2b9:	55                   	push   %rbp
    c2ba:	48 89 e5             	mov    %rsp,%rbp
    c2bd:	48 83 ec 20          	sub    $0x20,%rsp
    c2c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c2cd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c2d2:	75 06                	jne    c2da <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c2d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d8:	eb 4c                	jmp    c326 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    c2da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c2de:	48 89 d0             	mov    %rdx,%rax
    c2e1:	48 c1 e0 06          	shl    $0x6,%rax
    c2e5:	48 01 d0             	add    %rdx,%rax
    c2e8:	48 c1 e0 02          	shl    $0x2,%rax
    c2ec:	48 89 c2             	mov    %rax,%rdx
    c2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c2f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ff:	48 89 ce             	mov    %rcx,%rsi
    c302:	48 89 c7             	mov    %rax,%rdi
    c305:	e8 43 03 00 00       	call   c64d <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c30a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c30e:	48 89 d0             	mov    %rdx,%rax
    c311:	48 c1 e0 06          	shl    $0x6,%rax
    c315:	48 01 d0             	add    %rdx,%rax
    c318:	48 c1 e0 02          	shl    $0x2,%rax
    c31c:	48 89 c2             	mov    %rax,%rdx
    c31f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c323:	48 01 d0             	add    %rdx,%rax
    }
    c326:	c9                   	leave
    c327:	c3                   	ret

000000000000c328 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c328:	55                   	push   %rbp
    c329:	48 89 e5             	mov    %rsp,%rbp
    c32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c330:	90                   	nop
    c331:	5d                   	pop    %rbp
    c332:	c3                   	ret

000000000000c333 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c333:	55                   	push   %rbp
    c334:	48 89 e5             	mov    %rsp,%rbp
    c337:	48 83 ec 20          	sub    $0x20,%rsp
    c33b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c33f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c343:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c347:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c34c:	75 06                	jne    c354 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c34e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c352:	eb 3a                	jmp    c38e <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c354:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c358:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c35f:	00 
    c360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c364:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c368:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c36c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c370:	48 89 ce             	mov    %rcx,%rsi
    c373:	48 89 c7             	mov    %rax,%rdi
    c376:	e8 00 03 00 00       	call   c67b <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    c37b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c37f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c386:	00 
    c387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c38b:	48 01 d0             	add    %rdx,%rax
    }
    c38e:	c9                   	leave
    c38f:	c3                   	ret

000000000000c390 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c390:	55                   	push   %rbp
    c391:	48 89 e5             	mov    %rsp,%rbp
    c394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c398:	90                   	nop
    c399:	5d                   	pop    %rbp
    c39a:	c3                   	ret

000000000000c39b <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c39b:	55                   	push   %rbp
    c39c:	48 89 e5             	mov    %rsp,%rbp
    c39f:	48 83 ec 20          	sub    $0x20,%rsp
    c3a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c3af:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c3b4:	75 06                	jne    c3bc <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ba:	eb 3a                	jmp    c3f6 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c3bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3c0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3c7:	00 
    c3c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3cc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c3d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d8:	48 89 ce             	mov    %rcx,%rsi
    c3db:	48 89 c7             	mov    %rax,%rdi
    c3de:	e8 c6 02 00 00       	call   c6a9 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c3e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3e7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3ee:	00 
    c3ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f3:	48 01 d0             	add    %rdx,%rax
    }
    c3f6:	c9                   	leave
    c3f7:	c3                   	ret

000000000000c3f8 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c3f8:	55                   	push   %rbp
    c3f9:	48 89 e5             	mov    %rsp,%rbp
    c3fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c400:	90                   	nop
    c401:	5d                   	pop    %rbp
    c402:	c3                   	ret

000000000000c403 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c403:	55                   	push   %rbp
    c404:	48 89 e5             	mov    %rsp,%rbp
    c407:	48 83 ec 20          	sub    $0x20,%rsp
    c40b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c40f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c413:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c417:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c41c:	75 06                	jne    c424 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c41e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c422:	eb 4a                	jmp    c46e <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    c424:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c428:	48 89 d0             	mov    %rdx,%rax
    c42b:	48 01 c0             	add    %rax,%rax
    c42e:	48 01 d0             	add    %rdx,%rax
    c431:	48 c1 e0 03          	shl    $0x3,%rax
    c435:	48 89 c2             	mov    %rax,%rdx
    c438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c43c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c440:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c448:	48 89 ce             	mov    %rcx,%rsi
    c44b:	48 89 c7             	mov    %rax,%rdi
    c44e:	e8 84 02 00 00       	call   c6d7 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c453:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c457:	48 89 d0             	mov    %rdx,%rax
    c45a:	48 01 c0             	add    %rax,%rax
    c45d:	48 01 d0             	add    %rdx,%rax
    c460:	48 c1 e0 03          	shl    $0x3,%rax
    c464:	48 89 c2             	mov    %rax,%rdx
    c467:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c46b:	48 01 d0             	add    %rdx,%rax
    }
    c46e:	c9                   	leave
    c46f:	c3                   	ret

000000000000c470 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    c470:	55                   	push   %rbp
    c471:	48 89 e5             	mov    %rsp,%rbp
    c474:	48 83 ec 10          	sub    $0x10,%rsp
    c478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c480:	48 89 c7             	mov    %rax,%rdi
    c483:	e8 7e 02 00 00       	call   c706 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    c488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c48c:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    c490:	90                   	nop
    c491:	c9                   	leave
    c492:	c3                   	ret
    c493:	90                   	nop

000000000000c494 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    c494:	55                   	push   %rbp
    c495:	48 89 e5             	mov    %rsp,%rbp
    c498:	48 83 ec 10          	sub    $0x10,%rsp
    c49c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a4:	48 89 c7             	mov    %rax,%rdi
    c4a7:	e8 c4 ff ff ff       	call   c470 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c4ac:	90                   	nop
    c4ad:	c9                   	leave
    c4ae:	c3                   	ret
    c4af:	90                   	nop

000000000000c4b0 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c4b0:	55                   	push   %rbp
    c4b1:	48 89 e5             	mov    %rsp,%rbp
    c4b4:	48 83 ec 10          	sub    $0x10,%rsp
    c4b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4c0:	48 89 c7             	mov    %rax,%rdi
    c4c3:	e8 cc ff ff ff       	call   c494 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c4c8:	90                   	nop
    c4c9:	c9                   	leave
    c4ca:	c3                   	ret
    c4cb:	90                   	nop

000000000000c4cc <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c4cc:	55                   	push   %rbp
    c4cd:	48 89 e5             	mov    %rsp,%rbp
    c4d0:	48 83 ec 10          	sub    $0x10,%rsp
    c4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4dc:	48 89 c7             	mov    %rax,%rdi
    c4df:	e8 cc ff ff ff       	call   c4b0 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c4e4:	90                   	nop
    c4e5:	c9                   	leave
    c4e6:	c3                   	ret

000000000000c4e7 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c4e7:	55                   	push   %rbp
    c4e8:	48 89 e5             	mov    %rsp,%rbp
    c4eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c4ef:	90                   	nop
    c4f0:	5d                   	pop    %rbp
    c4f1:	c3                   	ret

000000000000c4f2 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c4f2:	55                   	push   %rbp
    c4f3:	48 89 e5             	mov    %rsp,%rbp
    c4f6:	48 83 ec 20          	sub    $0x20,%rsp
    c4fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c502:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c506:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c50b:	75 06                	jne    c513 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c50d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c511:	eb 3a                	jmp    c54d <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c513:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c517:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c51e:	00 
    c51f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c523:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c527:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c52b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c52f:	48 89 ce             	mov    %rcx,%rsi
    c532:	48 89 c7             	mov    %rax,%rdi
    c535:	e8 d7 01 00 00       	call   c711 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c53a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c53e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c545:	00 
    c546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c54a:	48 01 d0             	add    %rdx,%rax
    }
    c54d:	c9                   	leave
    c54e:	c3                   	ret

000000000000c54f <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c54f:	55                   	push   %rbp
    c550:	48 89 e5             	mov    %rsp,%rbp
    c553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c557:	90                   	nop
    c558:	5d                   	pop    %rbp
    c559:	c3                   	ret

000000000000c55a <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c55a:	55                   	push   %rbp
    c55b:	48 89 e5             	mov    %rsp,%rbp
    c55e:	48 83 ec 20          	sub    $0x20,%rsp
    c562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c566:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c56a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c56e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c573:	75 06                	jne    c57b <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c579:	eb 3a                	jmp    c5b5 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c57b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c57f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c586:	00 
    c587:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c58b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c58f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c597:	48 89 ce             	mov    %rcx,%rsi
    c59a:	48 89 c7             	mov    %rax,%rdi
    c59d:	e8 9d 01 00 00       	call   c73f <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c5a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5a6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c5ad:	00 
    c5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b2:	48 01 d0             	add    %rdx,%rax
    }
    c5b5:	c9                   	leave
    c5b6:	c3                   	ret

000000000000c5b7 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c5b7:	55                   	push   %rbp
    c5b8:	48 89 e5             	mov    %rsp,%rbp
    c5bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c5bf:	90                   	nop
    c5c0:	5d                   	pop    %rbp
    c5c1:	c3                   	ret

000000000000c5c2 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c5c2:	55                   	push   %rbp
    c5c3:	48 89 e5             	mov    %rsp,%rbp
    c5c6:	48 83 ec 20          	sub    $0x20,%rsp
    c5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c5d6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c5db:	75 06                	jne    c5e3 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c5dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e1:	eb 3a                	jmp    c61d <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c5e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5e7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c5ee:	00 
    c5ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c5f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ff:	48 89 ce             	mov    %rcx,%rsi
    c602:	48 89 c7             	mov    %rax,%rdi
    c605:	e8 63 01 00 00       	call   c76d <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c60a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c60e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c615:	00 
    c616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c61a:	48 01 d0             	add    %rdx,%rax
    }
    c61d:	c9                   	leave
    c61e:	c3                   	ret

000000000000c61f <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c61f:	55                   	push   %rbp
    c620:	48 89 e5             	mov    %rsp,%rbp
    c623:	48 83 ec 20          	sub    $0x20,%rsp
    c627:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c62b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c62f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c633:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c637:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c63b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c63f:	48 89 ce             	mov    %rcx,%rsi
    c642:	48 89 c7             	mov    %rax,%rdi
    c645:	e8 51 01 00 00       	call   c79b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c64a:	90                   	nop
    c64b:	c9                   	leave
    c64c:	c3                   	ret

000000000000c64d <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c64d:	55                   	push   %rbp
    c64e:	48 89 e5             	mov    %rsp,%rbp
    c651:	48 83 ec 20          	sub    $0x20,%rsp
    c655:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c659:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c65d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c661:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c665:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c66d:	48 89 ce             	mov    %rcx,%rsi
    c670:	48 89 c7             	mov    %rax,%rdi
    c673:	e8 9b 01 00 00       	call   c813 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c678:	90                   	nop
    c679:	c9                   	leave
    c67a:	c3                   	ret

000000000000c67b <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c67b:	55                   	push   %rbp
    c67c:	48 89 e5             	mov    %rsp,%rbp
    c67f:	48 83 ec 20          	sub    $0x20,%rsp
    c683:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c687:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c68b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c68f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c693:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c69b:	48 89 ce             	mov    %rcx,%rsi
    c69e:	48 89 c7             	mov    %rax,%rdi
    c6a1:	e8 e5 01 00 00       	call   c88b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c6a6:	90                   	nop
    c6a7:	c9                   	leave
    c6a8:	c3                   	ret

000000000000c6a9 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c6a9:	55                   	push   %rbp
    c6aa:	48 89 e5             	mov    %rsp,%rbp
    c6ad:	48 83 ec 20          	sub    $0x20,%rsp
    c6b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c6bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c9:	48 89 ce             	mov    %rcx,%rsi
    c6cc:	48 89 c7             	mov    %rax,%rdi
    c6cf:	e8 f2 01 00 00       	call   c8c6 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c6d4:	90                   	nop
    c6d5:	c9                   	leave
    c6d6:	c3                   	ret

000000000000c6d7 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c6d7:	55                   	push   %rbp
    c6d8:	48 89 e5             	mov    %rsp,%rbp
    c6db:	48 83 ec 20          	sub    $0x20,%rsp
    c6df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c6eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f7:	48 89 ce             	mov    %rcx,%rsi
    c6fa:	48 89 c7             	mov    %rax,%rdi
    c6fd:	e8 ff 01 00 00       	call   c901 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c702:	90                   	nop
    c703:	c9                   	leave
    c704:	c3                   	ret
    c705:	90                   	nop

000000000000c706 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c706:	55                   	push   %rbp
    c707:	48 89 e5             	mov    %rsp,%rbp
    c70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c70e:	90                   	nop
    c70f:	5d                   	pop    %rbp
    c710:	c3                   	ret

000000000000c711 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c711:	55                   	push   %rbp
    c712:	48 89 e5             	mov    %rsp,%rbp
    c715:	48 83 ec 20          	sub    $0x20,%rsp
    c719:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c71d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c721:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c725:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c729:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c72d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c731:	48 89 ce             	mov    %rcx,%rsi
    c734:	48 89 c7             	mov    %rax,%rdi
    c737:	e8 08 02 00 00       	call   c944 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c73c:	90                   	nop
    c73d:	c9                   	leave
    c73e:	c3                   	ret

000000000000c73f <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c73f:	55                   	push   %rbp
    c740:	48 89 e5             	mov    %rsp,%rbp
    c743:	48 83 ec 20          	sub    $0x20,%rsp
    c747:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c74b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c74f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c753:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c757:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c75b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c75f:	48 89 ce             	mov    %rcx,%rsi
    c762:	48 89 c7             	mov    %rax,%rdi
    c765:	e8 0d 02 00 00       	call   c977 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c76a:	90                   	nop
    c76b:	c9                   	leave
    c76c:	c3                   	ret

000000000000c76d <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c76d:	55                   	push   %rbp
    c76e:	48 89 e5             	mov    %rsp,%rbp
    c771:	48 83 ec 20          	sub    $0x20,%rsp
    c775:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c779:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c77d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c781:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c785:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c789:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c78d:	48 89 ce             	mov    %rcx,%rsi
    c790:	48 89 c7             	mov    %rax,%rdi
    c793:	e8 10 02 00 00       	call   c9a8 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c798:	90                   	nop
    c799:	c9                   	leave
    c79a:	c3                   	ret

000000000000c79b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c79b:	55                   	push   %rbp
    c79c:	48 89 e5             	mov    %rsp,%rbp
    c79f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c7ab:	eb 58                	jmp    c805 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c7ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7b5:	b9 08 02 00 00       	mov    $0x208,%ecx
    c7ba:	48 8b 32             	mov    (%rdx),%rsi
    c7bd:	48 89 30             	mov    %rsi,(%rax)
    c7c0:	89 ce                	mov    %ecx,%esi
    c7c2:	48 01 c6             	add    %rax,%rsi
    c7c5:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c7c9:	89 ce                	mov    %ecx,%esi
    c7cb:	48 01 d6             	add    %rdx,%rsi
    c7ce:	48 83 c6 08          	add    $0x8,%rsi
    c7d2:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c7d6:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c7da:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c7de:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c7e2:	48 29 f8             	sub    %rdi,%rax
    c7e5:	48 29 c2             	sub    %rax,%rdx
    c7e8:	01 c1                	add    %eax,%ecx
    c7ea:	83 e1 f8             	and    $0xfffffff8,%ecx
    c7ed:	89 c8                	mov    %ecx,%eax
    c7ef:	c1 e8 03             	shr    $0x3,%eax
    c7f2:	89 c0                	mov    %eax,%eax
    c7f4:	48 89 d6             	mov    %rdx,%rsi
    c7f7:	48 89 c1             	mov    %rax,%rcx
    c7fa:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c7fd:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c804:	00 
    c805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c809:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c80d:	75 9e                	jne    c7ad <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c80f:	90                   	nop
    c810:	90                   	nop
    c811:	5d                   	pop    %rbp
    c812:	c3                   	ret

000000000000c813 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c813:	55                   	push   %rbp
    c814:	48 89 e5             	mov    %rsp,%rbp
    c817:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c81b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c81f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c823:	eb 58                	jmp    c87d <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c829:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c82d:	b9 04 01 00 00       	mov    $0x104,%ecx
    c832:	48 8b 32             	mov    (%rdx),%rsi
    c835:	48 89 30             	mov    %rsi,(%rax)
    c838:	89 ce                	mov    %ecx,%esi
    c83a:	48 01 c6             	add    %rax,%rsi
    c83d:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c841:	89 ce                	mov    %ecx,%esi
    c843:	48 01 d6             	add    %rdx,%rsi
    c846:	48 83 c6 08          	add    $0x8,%rsi
    c84a:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c84e:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c852:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c856:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c85a:	48 29 f8             	sub    %rdi,%rax
    c85d:	48 29 c2             	sub    %rax,%rdx
    c860:	01 c1                	add    %eax,%ecx
    c862:	83 e1 f8             	and    $0xfffffff8,%ecx
    c865:	89 c8                	mov    %ecx,%eax
    c867:	c1 e8 03             	shr    $0x3,%eax
    c86a:	89 c0                	mov    %eax,%eax
    c86c:	48 89 d6             	mov    %rdx,%rsi
    c86f:	48 89 c1             	mov    %rax,%rcx
    c872:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c875:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c87c:	00 
    c87d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c881:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c885:	75 9e                	jne    c825 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c887:	90                   	nop
    c888:	90                   	nop
    c889:	5d                   	pop    %rbp
    c88a:	c3                   	ret

000000000000c88b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c88b:	55                   	push   %rbp
    c88c:	48 89 e5             	mov    %rsp,%rbp
    c88f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c893:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c897:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c89b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c89f:	48 8b 00             	mov    (%rax),%rax
    c8a2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c8a6:	eb 10                	jmp    c8b8 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c8a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c8b0:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c8b3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c8b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8bc:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c8c0:	75 e6                	jne    c8a8 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c8c2:	90                   	nop
    c8c3:	90                   	nop
    c8c4:	5d                   	pop    %rbp
    c8c5:	c3                   	ret

000000000000c8c6 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c8c6:	55                   	push   %rbp
    c8c7:	48 89 e5             	mov    %rsp,%rbp
    c8ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c8d2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c8d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8da:	48 8b 00             	mov    (%rax),%rax
    c8dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c8e1:	eb 10                	jmp    c8f3 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c8e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c8eb:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c8ee:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c8f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8f7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c8fb:	75 e6                	jne    c8e3 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c8fd:	90                   	nop
    c8fe:	90                   	nop
    c8ff:	5d                   	pop    %rbp
    c900:	c3                   	ret

000000000000c901 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c901:	55                   	push   %rbp
    c902:	48 89 e5             	mov    %rsp,%rbp
    c905:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c909:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c90d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c911:	eb 23                	jmp    c936 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c913:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c917:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c91b:	48 8b 06             	mov    (%rsi),%rax
    c91e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c922:	48 89 01             	mov    %rax,(%rcx)
    c925:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c929:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c92d:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c931:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c93a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c93e:	75 d3                	jne    c913 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c940:	90                   	nop
    c941:	90                   	nop
    c942:	5d                   	pop    %rbp
    c943:	c3                   	ret

000000000000c944 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c944:	55                   	push   %rbp
    c945:	48 89 e5             	mov    %rsp,%rbp
    c948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c94c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c950:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c954:	eb 13                	jmp    c969 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c95e:	48 8b 12             	mov    (%rdx),%rdx
    c961:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c964:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c96d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c971:	75 e3                	jne    c956 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c973:	90                   	nop
    c974:	90                   	nop
    c975:	5d                   	pop    %rbp
    c976:	c3                   	ret

000000000000c977 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c977:	55                   	push   %rbp
    c978:	48 89 e5             	mov    %rsp,%rbp
    c97b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c97f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c983:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c987:	eb 11                	jmp    c99a <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c98d:	8b 10                	mov    (%rax),%edx
    c98f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c993:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c995:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c99a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c9a2:	75 e5                	jne    c989 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c9a4:	90                   	nop
    c9a5:	90                   	nop
    c9a6:	5d                   	pop    %rbp
    c9a7:	c3                   	ret

000000000000c9a8 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c9a8:	55                   	push   %rbp
    c9a9:	48 89 e5             	mov    %rsp,%rbp
    c9ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c9b4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c9b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9bc:	48 8b 00             	mov    (%rax),%rax
    c9bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c9c3:	eb 10                	jmp    c9d5 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c9c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c9cd:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c9d0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c9d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9d9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c9dd:	75 e6                	jne    c9c5 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c9df:	90                   	nop
    c9e0:	90                   	nop
    c9e1:	5d                   	pop    %rbp
    c9e2:	c3                   	ret

000000000000c9e3 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c9e3:	55                   	push   %rbp
    c9e4:	48 89 e5             	mov    %rsp,%rbp
    c9e7:	53                   	push   %rbx
    c9e8:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c9ec:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c9f0:	be 00 00 00 00       	mov    $0x0,%esi
    c9f5:	48 89 c7             	mov    %rax,%rdi
    c9f8:	e8 f3 7a ff ff       	call   44f0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c9fd:	8b 45 c8             	mov    -0x38(%rbp),%eax
    ca00:	89 c3                	mov    %eax,%ebx
    ca02:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ca06:	48 89 c7             	mov    %rax,%rdi
    ca09:	e8 ea b6 ff ff       	call   80f8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    ca0e:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    ca12:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ca16:	48 89 de             	mov    %rbx,%rsi
    ca19:	48 89 c7             	mov    %rax,%rdi
    ca1c:	e8 0f b7 ff ff       	call   8130 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    ca21:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ca25:	48 89 c7             	mov    %rax,%rdi
    ca28:	e8 e7 b6 ff ff       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    ca2d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ca31:	48 89 c7             	mov    %rax,%rdi
    ca34:	e8 b1 b7 ff ff       	call   81ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    ca39:	48 89 c2             	mov    %rax,%rdx
    ca3c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ca40:	48 89 d6             	mov    %rdx,%rsi
    ca43:	48 89 c7             	mov    %rax,%rdi
    ca46:	e8 a5 7a ff ff       	call   44f0 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    ca4b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ca4f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ca53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca57:	48 89 c7             	mov    %rax,%rdi
    ca5a:	e8 63 04 00 00       	call   cec2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    ca5f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ca63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca67:	48 89 c7             	mov    %rax,%rdi
    ca6a:	e8 79 04 00 00       	call   cee8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    ca6f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ca73:	eb 5b                	jmp    cad0 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    ca75:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    ca79:	48 89 c7             	mov    %rax,%rdi
    ca7c:	e8 ef 04 00 00       	call   cf70 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    ca81:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    ca85:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca89:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ca8d:	48 89 d6             	mov    %rdx,%rsi
    ca90:	48 89 c7             	mov    %rax,%rdi
    ca93:	e8 f8 03 00 00       	call   ce90 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    ca98:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ca9c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    caa0:	48 8b 3d f9 01 02 00 	mov    0x201f9(%rip),%rdi        # 2cca0 <_ZN3vkh19validationLayerNameE>
    caa7:	48 8b 35 fa 01 02 00 	mov    0x201fa(%rip),%rsi        # 2cca8 <_ZN3vkh19validationLayerNameE+0x8>
    caae:	48 89 d1             	mov    %rdx,%rcx
    cab1:	48 89 c2             	mov    %rax,%rdx
    cab4:	e8 da 04 00 00       	call   cf93 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    cab9:	84 c0                	test   %al,%al
    cabb:	74 07                	je     cac4 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    cabd:	bb 01 00 00 00       	mov    $0x1,%ebx
    cac2:	eb 28                	jmp    caec <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    cac4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    cac8:	48 89 c7             	mov    %rax,%rdi
    cacb:	e8 7c 04 00 00       	call   cf4c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    cad0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    cad4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    cad8:	48 89 d6             	mov    %rdx,%rsi
    cadb:	48 89 c7             	mov    %rax,%rdi
    cade:	e8 2e 04 00 00       	call   cf11 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    cae3:	84 c0                	test   %al,%al
    cae5:	75 8e                	jne    ca75 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    cae7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    caec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    caf0:	48 89 c7             	mov    %rax,%rdi
    caf3:	e8 ae b6 ff ff       	call   81a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    caf8:	89 d8                	mov    %ebx,%eax
    cafa:	eb 34                	jmp    cb30 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    cafc:	48 89 c3             	mov    %rax,%rbx
    caff:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    cb03:	48 89 c7             	mov    %rax,%rdi
    cb06:	e8 09 b6 ff ff       	call   8114 <_ZNSaI17VkLayerPropertiesED1Ev>
    cb0b:	48 89 d8             	mov    %rbx,%rax
    cb0e:	48 89 c7             	mov    %rax,%rdi
    cb11:	e8 ea 7c ff ff       	call   4800 <_Unwind_Resume@plt>
}
    cb16:	48 89 c3             	mov    %rax,%rbx
    cb19:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cb1d:	48 89 c7             	mov    %rax,%rdi
    cb20:	e8 81 b6 ff ff       	call   81a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    cb25:	48 89 d8             	mov    %rbx,%rax
    cb28:	48 89 c7             	mov    %rax,%rdi
    cb2b:	e8 d0 7c ff ff       	call   4800 <_Unwind_Resume@plt>
    cb30:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb34:	c9                   	leave
    cb35:	c3                   	ret

000000000000cb36 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    cb36:	55                   	push   %rbp
    cb37:	48 89 e5             	mov    %rsp,%rbp
    cb3a:	48 83 ec 20          	sub    $0x20,%rsp
    cb3e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cb41:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cb44:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    cb48:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    cb4c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cb4f:	83 f8 01             	cmp    $0x1,%eax
    cb52:	7e 3c                	jle    cb90 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    cb54:	be 0a 00 00 00       	mov    $0xa,%esi
    cb59:	48 8d 05 00 09 02 00 	lea    0x20900(%rip),%rax        # 2d460 <_ZSt4cerr@GLIBCXX_3.4>
    cb60:	48 89 c7             	mov    %rax,%rdi
    cb63:	e8 a8 79 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    cb68:	48 89 c2             	mov    %rax,%rdx
    cb6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb6f:	48 8b 40 28          	mov    0x28(%rax),%rax
    cb73:	48 89 c6             	mov    %rax,%rsi
    cb76:	48 89 d7             	mov    %rdx,%rdi
    cb79:	e8 62 78 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cb7e:	48 8b 15 13 04 02 00 	mov    0x20413(%rip),%rdx        # 2cf98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    cb85:	48 89 d6             	mov    %rdx,%rsi
    cb88:	48 89 c7             	mov    %rax,%rdi
    cb8b:	e8 d0 78 ff ff       	call   4460 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    cb90:	b8 00 00 00 00       	mov    $0x0,%eax
}
    cb95:	c9                   	leave
    cb96:	c3                   	ret

000000000000cb97 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    cb97:	55                   	push   %rbp
    cb98:	48 89 e5             	mov    %rsp,%rbp
    cb9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    cb9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cba3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cba7:	0f 11 00             	movups %xmm0,(%rax)
    cbaa:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cbae:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    cbb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb6:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    cbbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc0:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    cbc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbcb:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    cbd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd6:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # cb36 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    cbdd:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    cbe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe5:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    cbec:	00 
}
    cbed:	90                   	nop
    cbee:	5d                   	pop    %rbp
    cbef:	c3                   	ret

000000000000cbf0 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    cbf0:	55                   	push   %rbp
    cbf1:	48 89 e5             	mov    %rsp,%rbp
    cbf4:	48 83 ec 30          	sub    $0x30,%rsp
    cbf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbfc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc00:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    cc04:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    cc08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc0c:	48 8d 15 55 fb 00 00 	lea    0xfb55(%rip),%rdx        # 1c768 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    cc13:	48 89 d6             	mov    %rdx,%rsi
    cc16:	48 89 c7             	mov    %rax,%rdi
    cc19:	e8 92 77 ff ff       	call   43b0 <vkGetInstanceProcAddr@plt>
    cc1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    cc22:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cc27:	75 07                	jne    cc30 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    cc29:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    cc2e:	eb 1b                	jmp    cc4b <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    cc30:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    cc34:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cc38:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cc3c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    cc40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc44:	48 89 c7             	mov    %rax,%rdi
    cc47:	41 ff d0             	call   *%r8
    cc4a:	90                   	nop
}
    cc4b:	c9                   	leave
    cc4c:	c3                   	ret

000000000000cc4d <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    cc4d:	55                   	push   %rbp
    cc4e:	48 89 e5             	mov    %rsp,%rbp
    cc51:	41 54                	push   %r12
    cc53:	53                   	push   %rbx
    cc54:	48 83 ec 50          	sub    $0x50,%rsp
    cc58:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    cc5c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    cc60:	48 89 c7             	mov    %rax,%rdi
    cc63:	e8 2f ff ff ff       	call   cb97 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    cc68:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    cc6f:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    cc70:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    cc74:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    cc78:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cc7c:	48 89 d1             	mov    %rdx,%rcx
    cc7f:	ba 00 00 00 00       	mov    $0x0,%edx
    cc84:	48 89 c7             	mov    %rax,%rdi
    cc87:	e8 64 ff ff ff       	call   cbf0 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    cc8c:	85 c0                	test   %eax,%eax
    cc8e:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    cc91:	84 c0                	test   %al,%al
    cc93:	74 3b                	je     ccd0 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    cc95:	bf 10 00 00 00       	mov    $0x10,%edi
    cc9a:	e8 01 75 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    cc9f:	48 89 c3             	mov    %rax,%rbx
    cca2:	48 8d 05 df fa 00 00 	lea    0xfadf(%rip),%rax        # 1c788 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    cca9:	48 89 c6             	mov    %rax,%rsi
    ccac:	48 89 df             	mov    %rbx,%rdi
    ccaf:	e8 6c 74 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    ccb4:	48 8b 05 ed 02 02 00 	mov    0x202ed(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ccbb:	48 89 c2             	mov    %rax,%rdx
    ccbe:	48 8d 05 7b 00 02 00 	lea    0x2007b(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ccc5:	48 89 c6             	mov    %rax,%rsi
    ccc8:	48 89 df             	mov    %rbx,%rdi
    cccb:	e8 d0 7a ff ff       	call   47a0 <__cxa_throw@plt>
  }
  return debugMessenger;
    ccd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ccd4:	eb 16                	jmp    ccec <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    ccd6:	49 89 c4             	mov    %rax,%r12
    ccd9:	48 89 df             	mov    %rbx,%rdi
    ccdc:	e8 bf 75 ff ff       	call   42a0 <__cxa_free_exception@plt>
    cce1:	4c 89 e0             	mov    %r12,%rax
    cce4:	48 89 c7             	mov    %rax,%rdi
    cce7:	e8 14 7b ff ff       	call   4800 <_Unwind_Resume@plt>
}
    ccec:	48 83 c4 50          	add    $0x50,%rsp
    ccf0:	5b                   	pop    %rbx
    ccf1:	41 5c                	pop    %r12
    ccf3:	5d                   	pop    %rbp
    ccf4:	c3                   	ret

000000000000ccf5 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    ccf5:	55                   	push   %rbp
    ccf6:	48 89 e5             	mov    %rsp,%rbp
    ccf9:	48 83 ec 30          	sub    $0x30,%rsp
    ccfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cd05:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    cd09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd0d:	48 8d 15 94 fa 00 00 	lea    0xfa94(%rip),%rdx        # 1c7a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    cd14:	48 89 d6             	mov    %rdx,%rsi
    cd17:	48 89 c7             	mov    %rax,%rdi
    cd1a:	e8 91 76 ff ff       	call   43b0 <vkGetInstanceProcAddr@plt>
    cd1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    cd23:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cd28:	74 19                	je     cd43 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    cd2a:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    cd2e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cd32:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cd36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd3a:	48 89 ce             	mov    %rcx,%rsi
    cd3d:	48 89 c7             	mov    %rax,%rdi
    cd40:	41 ff d0             	call   *%r8
  }
}
    cd43:	90                   	nop
    cd44:	c9                   	leave
    cd45:	c3                   	ret

000000000000cd46 <_Z41__static_initialization_and_destruction_0ii>:

    cd46:	55                   	push   %rbp
    cd47:	48 89 e5             	mov    %rsp,%rbp
    cd4a:	48 83 ec 10          	sub    $0x10,%rsp
    cd4e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cd51:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cd54:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cd58:	75 3b                	jne    cd95 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd5a:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cd61:	75 32                	jne    cd95 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd63:	48 8d 05 08 08 02 00 	lea    0x20808(%rip),%rax        # 2d572 <_ZStL8__ioinit>
    cd6a:	48 89 c7             	mov    %rax,%rdi
    cd6d:	e8 5e 79 ff ff       	call   46d0 <_ZNSt8ios_base4InitC1Ev@plt>
    cd72:	48 8d 05 c7 06 02 00 	lea    0x206c7(%rip),%rax        # 2d440 <__dso_handle>
    cd79:	48 89 c2             	mov    %rax,%rdx
    cd7c:	48 8d 05 ef 07 02 00 	lea    0x207ef(%rip),%rax        # 2d572 <_ZStL8__ioinit>
    cd83:	48 89 c6             	mov    %rax,%rsi
    cd86:	48 8b 05 3b 02 02 00 	mov    0x2023b(%rip),%rax        # 2cfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cd8d:	48 89 c7             	mov    %rax,%rdi
    cd90:	e8 db 75 ff ff       	call   4370 <__cxa_atexit@plt>
    cd95:	90                   	nop
    cd96:	c9                   	leave
    cd97:	c3                   	ret

000000000000cd98 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    cd98:	55                   	push   %rbp
    cd99:	48 89 e5             	mov    %rsp,%rbp
    cd9c:	be ff ff 00 00       	mov    $0xffff,%esi
    cda1:	bf 01 00 00 00       	mov    $0x1,%edi
    cda6:	e8 9b ff ff ff       	call   cd46 <_Z41__static_initialization_and_destruction_0ii>
    cdab:	5d                   	pop    %rbp
    cdac:	c3                   	ret

000000000000cdad <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    cdad:	55                   	push   %rbp
    cdae:	48 89 e5             	mov    %rsp,%rbp
    cdb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdb5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    cdb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdbd:	0f b6 00             	movzbl (%rax),%eax
    cdc0:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    cdc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cdc6:	0f b6 00             	movzbl (%rax),%eax
    cdc9:	38 c2                	cmp    %al,%dl
    cdcb:	0f 92 c0             	setb   %al
      }
    cdce:	5d                   	pop    %rbp
    cdcf:	c3                   	ret

000000000000cdd0 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    cdd0:	55                   	push   %rbp
    cdd1:	48 89 e5             	mov    %rsp,%rbp
    cdd4:	48 83 ec 30          	sub    $0x30,%rsp
    cdd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cddc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cde0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    cde4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    cde9:	75 0a                	jne    cdf5 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    cdeb:	b8 00 00 00 00       	mov    $0x0,%eax
    cdf0:	e9 99 00 00 00       	jmp    ce8e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    cdf5:	e8 a4 7d ff ff       	call   4b9e <_ZSt23__is_constant_evaluatedv>
    cdfa:	84 c0                	test   %al,%al
    cdfc:	74 78                	je     ce76 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    cdfe:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    ce05:	00 
    ce06:	eb 5d                	jmp    ce65 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    ce08:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ce0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce10:	48 01 c2             	add    %rax,%rdx
    ce13:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    ce17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce1b:	48 01 c8             	add    %rcx,%rax
    ce1e:	48 89 d6             	mov    %rdx,%rsi
    ce21:	48 89 c7             	mov    %rax,%rdi
    ce24:	e8 84 ff ff ff       	call   cdad <_ZNSt11char_traitsIcE2ltERKcS2_>
    ce29:	84 c0                	test   %al,%al
    ce2b:	74 07                	je     ce34 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    ce2d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ce32:	eb 5a                	jmp    ce8e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    ce34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce3c:	48 01 c2             	add    %rax,%rdx
    ce3f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ce43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce47:	48 01 c8             	add    %rcx,%rax
    ce4a:	48 89 d6             	mov    %rdx,%rsi
    ce4d:	48 89 c7             	mov    %rax,%rdi
    ce50:	e8 58 ff ff ff       	call   cdad <_ZNSt11char_traitsIcE2ltERKcS2_>
    ce55:	84 c0                	test   %al,%al
    ce57:	74 07                	je     ce60 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    ce59:	b8 01 00 00 00       	mov    $0x1,%eax
    ce5e:	eb 2e                	jmp    ce8e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    ce60:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    ce65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce69:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ce6d:	72 99                	jb     ce08 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    ce6f:	b8 00 00 00 00       	mov    $0x0,%eax
    ce74:	eb 18                	jmp    ce8e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    ce76:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ce7a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ce7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce82:	48 89 ce             	mov    %rcx,%rsi
    ce85:	48 89 c7             	mov    %rax,%rdi
    ce88:	e8 f3 72 ff ff       	call   4180 <memcmp@plt>
    ce8d:	90                   	nop
      }
    ce8e:	c9                   	leave
    ce8f:	c3                   	ret

000000000000ce90 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    ce90:	55                   	push   %rbp
    ce91:	48 89 e5             	mov    %rsp,%rbp
    ce94:	48 83 ec 10          	sub    $0x10,%rsp
    ce98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    cea0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cea4:	48 89 c7             	mov    %rax,%rdi
    cea7:	e8 fd 7c ff ff       	call   4ba9 <_ZNSt11char_traitsIcE6lengthEPKc>
    ceac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ceb0:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    ceb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cebb:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    cebf:	90                   	nop
    cec0:	c9                   	leave
    cec1:	c3                   	ret

000000000000cec2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cec2:	55                   	push   %rbp
    cec3:	48 89 e5             	mov    %rsp,%rbp
    cec6:	48 83 ec 20          	sub    $0x20,%rsp
    ceca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cece:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ced2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ced6:	48 89 d6             	mov    %rdx,%rsi
    ced9:	48 89 c7             	mov    %rax,%rdi
    cedc:	e8 27 01 00 00       	call   d008 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cee5:	c9                   	leave
    cee6:	c3                   	ret
    cee7:	90                   	nop

000000000000cee8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cee8:	55                   	push   %rbp
    cee9:	48 89 e5             	mov    %rsp,%rbp
    ceec:	48 83 ec 20          	sub    $0x20,%rsp
    cef0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cef4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cef8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cefc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cf00:	48 89 d6             	mov    %rdx,%rsi
    cf03:	48 89 c7             	mov    %rax,%rdi
    cf06:	e8 fd 00 00 00       	call   d008 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cf0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf0f:	c9                   	leave
    cf10:	c3                   	ret

000000000000cf11 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cf11:	55                   	push   %rbp
    cf12:	48 89 e5             	mov    %rsp,%rbp
    cf15:	53                   	push   %rbx
    cf16:	48 83 ec 18          	sub    $0x18,%rsp
    cf1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cf1e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cf22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf26:	48 89 c7             	mov    %rax,%rdi
    cf29:	e8 f8 00 00 00       	call   d026 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cf2e:	48 8b 18             	mov    (%rax),%rbx
    cf31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf35:	48 89 c7             	mov    %rax,%rdi
    cf38:	e8 e9 00 00 00       	call   d026 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cf3d:	48 8b 00             	mov    (%rax),%rax
    cf40:	48 39 c3             	cmp    %rax,%rbx
    cf43:	0f 95 c0             	setne  %al
    cf46:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cf4a:	c9                   	leave
    cf4b:	c3                   	ret

000000000000cf4c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cf4c:	55                   	push   %rbp
    cf4d:	48 89 e5             	mov    %rsp,%rbp
    cf50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cf54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf58:	48 8b 00             	mov    (%rax),%rax
    cf5b:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cf62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf66:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cf69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cf6d:	5d                   	pop    %rbp
    cf6e:	c3                   	ret
    cf6f:	90                   	nop

000000000000cf70 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cf70:	55                   	push   %rbp
    cf71:	48 89 e5             	mov    %rsp,%rbp
    cf74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cf78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf7c:	48 8b 00             	mov    (%rax),%rax
    cf7f:	5d                   	pop    %rbp
    cf80:	c3                   	ret
    cf81:	90                   	nop

000000000000cf82 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    cf82:	55                   	push   %rbp
    cf83:	48 89 e5             	mov    %rsp,%rbp
    cf86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    cf8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8e:	48 8b 00             	mov    (%rax),%rax
    cf91:	5d                   	pop    %rbp
    cf92:	c3                   	ret

000000000000cf93 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    cf93:	55                   	push   %rbp
    cf94:	48 89 e5             	mov    %rsp,%rbp
    cf97:	53                   	push   %rbx
    cf98:	48 83 ec 28          	sub    $0x28,%rsp
    cf9c:	48 89 f0             	mov    %rsi,%rax
    cf9f:	49 89 f8             	mov    %rdi,%r8
    cfa2:	4c 89 c6             	mov    %r8,%rsi
    cfa5:	4c 89 cf             	mov    %r9,%rdi
    cfa8:	48 89 c7             	mov    %rax,%rdi
    cfab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cfaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cfb3:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cfb7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cfbb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cfbf:	48 89 c7             	mov    %rax,%rdi
    cfc2:	e8 bb ff ff ff       	call   cf82 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cfc7:	48 89 c3             	mov    %rax,%rbx
    cfca:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cfce:	48 89 c7             	mov    %rax,%rdi
    cfd1:	e8 ac ff ff ff       	call   cf82 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cfd6:	48 39 c3             	cmp    %rax,%rbx
    cfd9:	75 22                	jne    cffd <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cfdb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cfdf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cfe3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cfe7:	48 89 ce             	mov    %rcx,%rsi
    cfea:	48 89 c7             	mov    %rax,%rdi
    cfed:	e8 42 00 00 00       	call   d034 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cff2:	85 c0                	test   %eax,%eax
    cff4:	75 07                	jne    cffd <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cff6:	b8 01 00 00 00       	mov    $0x1,%eax
    cffb:	eb 05                	jmp    d002 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cffd:	b8 00 00 00 00       	mov    $0x0,%eax
    d002:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d006:	c9                   	leave
    d007:	c3                   	ret

000000000000d008 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d008:	55                   	push   %rbp
    d009:	48 89 e5             	mov    %rsp,%rbp
    d00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d014:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d018:	48 8b 10             	mov    (%rax),%rdx
    d01b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d01f:	48 89 10             	mov    %rdx,(%rax)
    d022:	90                   	nop
    d023:	5d                   	pop    %rbp
    d024:	c3                   	ret
    d025:	90                   	nop

000000000000d026 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d026:	55                   	push   %rbp
    d027:	48 89 e5             	mov    %rsp,%rbp
    d02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d032:	5d                   	pop    %rbp
    d033:	c3                   	ret

000000000000d034 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    d034:	55                   	push   %rbp
    d035:	48 89 e5             	mov    %rsp,%rbp
    d038:	48 83 ec 30          	sub    $0x30,%rsp
    d03c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d040:	48 89 d1             	mov    %rdx,%rcx
    d043:	48 89 f0             	mov    %rsi,%rax
    d046:	48 89 fa             	mov    %rdi,%rdx
    d049:	48 89 ca             	mov    %rcx,%rdx
    d04c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d050:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    d054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d058:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    d05c:	48 89 d6             	mov    %rdx,%rsi
    d05f:	48 89 c7             	mov    %rax,%rdi
    d062:	e8 f0 84 ff ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
    d067:	48 8b 00             	mov    (%rax),%rax
    d06a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    d06e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    d072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d076:	48 8b 40 08          	mov    0x8(%rax),%rax
    d07a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d07e:	48 89 ce             	mov    %rcx,%rsi
    d081:	48 89 c7             	mov    %rax,%rdi
    d084:	e8 47 fd ff ff       	call   cdd0 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    d089:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    d08c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    d090:	75 19                	jne    d0ab <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    d092:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d09a:	48 8b 00             	mov    (%rax),%rax
    d09d:	48 89 d6             	mov    %rdx,%rsi
    d0a0:	48 89 c7             	mov    %rax,%rdi
    d0a3:	e8 08 00 00 00       	call   d0b0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    d0a8:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    d0ab:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    d0ae:	c9                   	leave
    d0af:	c3                   	ret

000000000000d0b0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    d0b0:	55                   	push   %rbp
    d0b1:	48 89 e5             	mov    %rsp,%rbp
    d0b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d0b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    d0bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0c0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    d0c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    d0c8:	b8 00 00 00 80       	mov    $0x80000000,%eax
    d0cd:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    d0d1:	7c 07                	jl     d0da <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    d0d3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    d0d8:	eb 1b                	jmp    d0f5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    d0da:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    d0e1:	ff ff ff 
    d0e4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    d0e8:	7f 07                	jg     d0f1 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    d0ea:	b8 00 00 00 80       	mov    $0x80000000,%eax
    d0ef:	eb 04                	jmp    d0f5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    d0f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d0f5:	5d                   	pop    %rbp
    d0f6:	c3                   	ret

000000000000d0f7 <_Z41__static_initialization_and_destruction_0ii>:
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};

} /* namespace vkh */
    d0f7:	55                   	push   %rbp
    d0f8:	48 89 e5             	mov    %rsp,%rbp
    d0fb:	48 83 ec 10          	sub    $0x10,%rsp
    d0ff:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d102:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d105:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    d109:	75 3b                	jne    d146 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d10b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    d112:	75 32                	jne    d146 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d114:	48 8d 05 58 04 02 00 	lea    0x20458(%rip),%rax        # 2d573 <_ZStL8__ioinit>
    d11b:	48 89 c7             	mov    %rax,%rdi
    d11e:	e8 ad 75 ff ff       	call   46d0 <_ZNSt8ios_base4InitC1Ev@plt>
    d123:	48 8d 05 16 03 02 00 	lea    0x20316(%rip),%rax        # 2d440 <__dso_handle>
    d12a:	48 89 c2             	mov    %rax,%rdx
    d12d:	48 8d 05 3f 04 02 00 	lea    0x2043f(%rip),%rax        # 2d573 <_ZStL8__ioinit>
    d134:	48 89 c6             	mov    %rax,%rsi
    d137:	48 8b 05 8a fe 01 00 	mov    0x1fe8a(%rip),%rax        # 2cfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    d13e:	48 89 c7             	mov    %rax,%rdi
    d141:	e8 2a 72 ff ff       	call   4370 <__cxa_atexit@plt>
    d146:	90                   	nop
    d147:	c9                   	leave
    d148:	c3                   	ret

000000000000d149 <_GLOBAL__sub_I_vkh.cpp>:
    d149:	55                   	push   %rbp
    d14a:	48 89 e5             	mov    %rsp,%rbp
    d14d:	be ff ff 00 00       	mov    $0xffff,%esi
    d152:	bf 01 00 00 00       	mov    $0x1,%edi
    d157:	e8 9b ff ff ff       	call   d0f7 <_Z41__static_initialization_and_destruction_0ii>
    d15c:	5d                   	pop    %rbp
    d15d:	c3                   	ret

000000000000d15e <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    d15e:	55                   	push   %rbp
    d15f:	48 89 e5             	mov    %rsp,%rbp
    d162:	48 83 ec 10          	sub    $0x10,%rsp
    d166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    d16a:	e8 91 73 ff ff       	call   4500 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    d16f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d175:	b9 00 00 00 00       	mov    $0x0,%ecx
    d17a:	48 8d 05 27 08 01 00 	lea    0x10827(%rip),%rax        # 1d9a8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    d181:	48 89 c2             	mov    %rax,%rdx
    d184:	be 58 02 00 00       	mov    $0x258,%esi
    d189:	bf 20 03 00 00       	mov    $0x320,%edi
    d18e:	e8 1c 87 ff ff       	call   58af <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    d193:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d197:	48 89 02             	mov    %rax,(%rdx)
  glfwSetWindowUserPointer(window, this);
    d19a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d19e:	48 8b 00             	mov    (%rax),%rax
    d1a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d1a5:	48 89 d6             	mov    %rdx,%rsi
    d1a8:	48 89 c7             	mov    %rax,%rdi
    d1ab:	e8 00 70 ff ff       	call   41b0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    d1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1b4:	48 8b 00             	mov    (%rax),%rax
    d1b7:	48 8d 15 40 23 00 00 	lea    0x2340(%rip),%rdx        # f4fe <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>
    d1be:	48 89 d6             	mov    %rdx,%rsi
    d1c1:	48 89 c7             	mov    %rax,%rdi
    d1c4:	e8 f7 74 ff ff       	call   46c0 <glfwSetFramebufferSizeCallback@plt>
}
    d1c9:	90                   	nop
    d1ca:	c9                   	leave
    d1cb:	c3                   	ret

000000000000d1cc <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    d1cc:	55                   	push   %rbp
    d1cd:	48 89 e5             	mov    %rsp,%rbp
    d1d0:	53                   	push   %rbx
    d1d1:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    d1d8:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    d1df:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d1e3:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    d1e7:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    d1eb:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    d1ef:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    d1f6:	48 8d 05 ab 07 01 00 	lea    0x107ab(%rip),%rax        # 1d9a8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    d1fd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    d201:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    d208:	48 8d 05 ac 07 01 00 	lea    0x107ac(%rip),%rax        # 1d9bb <_ZN6__pstl9execution2v1L5unseqE+0x14>
    d20f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    d213:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    d21a:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    d221:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d225:	48 89 c7             	mov    %rax,%rdi
    d228:	e8 e9 a0 ff ff       	call   7316 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    d22d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d231:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d235:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d239:	48 89 c7             	mov    %rax,%rdi
    d23c:	e8 ef 47 00 00       	call   11a30 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d241:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    d248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d24c:	48 89 c7             	mov    %rax,%rdi
    d24f:	e8 02 48 00 00       	call   11a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d254:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    d25b:	eb 3c                	jmp    d299 <_ZN9VulkanApp14createInstanceEv+0xcd>
    d25d:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d264:	48 89 c7             	mov    %rax,%rdi
    d267:	e8 6e 48 00 00       	call   11ada <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d26c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    d270:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d277:	48 8d 50 10          	lea    0x10(%rax),%rdx
    d27b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d27f:	48 89 c6             	mov    %rax,%rsi
    d282:	48 89 d7             	mov    %rdx,%rdi
    d285:	e8 62 48 00 00       	call   11aec <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    d28a:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d291:	48 89 c7             	mov    %rax,%rdi
    d294:	e8 21 48 00 00       	call   11aba <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d299:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    d2a0:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d2a7:	48 89 d6             	mov    %rdx,%rsi
    d2aa:	48 89 c7             	mov    %rax,%rdi
    d2ad:	e8 cd 47 00 00       	call   11a7f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d2b2:	84 c0                	test   %al,%al
    d2b4:	75 a7                	jne    d25d <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    d2b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d2ba:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d2c1:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d2c8:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    d2cc:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d2d3:	48 89 c7             	mov    %rax,%rdi
    d2d6:	e8 bc f8 ff ff       	call   cb97 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    d2db:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    d2e2:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    d2e5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d2ec:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    d2f3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d2f7:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    d2fe:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d305:	48 83 c0 28          	add    $0x28,%rax
    d309:	48 89 c7             	mov    %rax,%rdi
    d30c:	e8 7f 48 00 00       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d311:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    d317:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d31e:	48 83 c0 28          	add    $0x28,%rax
    d322:	48 89 c7             	mov    %rax,%rdi
    d325:	e8 8a 48 00 00       	call   11bb4 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d32a:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    d331:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d338:	48 83 c0 10          	add    $0x10,%rax
    d33c:	48 89 c7             	mov    %rax,%rdi
    d33f:	e8 4c 48 00 00       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    d344:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    d34a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d351:	48 83 c0 10          	add    $0x10,%rax
    d355:	48 89 c7             	mov    %rax,%rdi
    d358:	e8 7b 48 00 00       	call   11bd8 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d35d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    d364:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d36b:	be 00 00 00 00       	mov    $0x0,%esi
    d370:	48 89 c7             	mov    %rax,%rdi
    d373:	e8 7e 85 ff ff       	call   58f6 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    d378:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d37f:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    d383:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d387:	48 89 c7             	mov    %rax,%rdi
    d38a:	e8 5d 46 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d38f:	eb 1a                	jmp    d3ab <_ZN9VulkanApp14createInstanceEv+0x1df>
    d391:	48 89 c3             	mov    %rax,%rbx
    d394:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d398:	48 89 c7             	mov    %rax,%rdi
    d39b:	e8 4c 46 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d3a0:	48 89 d8             	mov    %rbx,%rax
    d3a3:	48 89 c7             	mov    %rax,%rdi
    d3a6:	e8 55 74 ff ff       	call   4800 <_Unwind_Resume@plt>
    d3ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d3af:	c9                   	leave
    d3b0:	c3                   	ret
    d3b1:	90                   	nop

000000000000d3b2 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    d3b2:	55                   	push   %rbp
    d3b3:	48 89 e5             	mov    %rsp,%rbp
    d3b6:	41 54                	push   %r12
    d3b8:	53                   	push   %rbx
    d3b9:	48 83 ec 10          	sub    $0x10,%rsp
    d3bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    d3c1:	e8 1d f6 ff ff       	call   c9e3 <_ZN3vkh27checkValidationLayerSupportEv>
    d3c6:	0f b6 c0             	movzbl %al,%eax
    d3c9:	85 c0                	test   %eax,%eax
    d3cb:	0f 94 c0             	sete   %al
    d3ce:	84 c0                	test   %al,%al
    d3d0:	74 3b                	je     d40d <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    d3d2:	bf 10 00 00 00       	mov    $0x10,%edi
    d3d7:	e8 c4 6d ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    d3dc:	48 89 c3             	mov    %rax,%rbx
    d3df:	48 8d 05 e2 05 01 00 	lea    0x105e2(%rip),%rax        # 1d9c8 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    d3e6:	48 89 c6             	mov    %rax,%rsi
    d3e9:	48 89 df             	mov    %rbx,%rdi
    d3ec:	e8 2f 6d ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    d3f1:	48 8b 05 b0 fb 01 00 	mov    0x1fbb0(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d3f8:	48 89 c2             	mov    %rax,%rdx
    d3fb:	48 8d 05 3e f9 01 00 	lea    0x1f93e(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d402:	48 89 c6             	mov    %rax,%rsi
    d405:	48 89 df             	mov    %rbx,%rdi
    d408:	e8 93 73 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    d40d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d411:	48 8b 40 08          	mov    0x8(%rax),%rax
    d415:	48 89 c7             	mov    %rax,%rdi
    d418:	e8 30 f8 ff ff       	call   cc4d <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    d41d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d421:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    d425:	eb 16                	jmp    d43d <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    d427:	49 89 c4             	mov    %rax,%r12
    d42a:	48 89 df             	mov    %rbx,%rdi
    d42d:	e8 6e 6e ff ff       	call   42a0 <__cxa_free_exception@plt>
    d432:	4c 89 e0             	mov    %r12,%rax
    d435:	48 89 c7             	mov    %rax,%rdi
    d438:	e8 c3 73 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    d43d:	48 83 c4 10          	add    $0x10,%rsp
    d441:	5b                   	pop    %rbx
    d442:	41 5c                	pop    %r12
    d444:	5d                   	pop    %rbp
    d445:	c3                   	ret

000000000000d446 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    d446:	55                   	push   %rbp
    d447:	48 89 e5             	mov    %rsp,%rbp
    d44a:	48 83 ec 10          	sub    $0x10,%rsp
    d44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    d452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d456:	48 8b 08             	mov    (%rax),%rcx
    d459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d45d:	48 8b 40 08          	mov    0x8(%rax),%rax
    d461:	ba 00 00 00 00       	mov    $0x0,%edx
    d466:	48 89 ce             	mov    %rcx,%rsi
    d469:	48 89 c7             	mov    %rax,%rdi
    d46c:	e8 b0 85 ff ff       	call   5a21 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    d471:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d475:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    d479:	90                   	nop
    d47a:	c9                   	leave
    d47b:	c3                   	ret

000000000000d47c <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    d47c:	55                   	push   %rbp
    d47d:	48 89 e5             	mov    %rsp,%rbp
    d480:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    d487:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    d48e:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    d495:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    d49c:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    d4a3:	48 89 d6             	mov    %rdx,%rsi
    d4a6:	48 89 c7             	mov    %rax,%rdi
    d4a9:	e8 35 a1 ff ff       	call   75e3 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    d4ae:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    d4b4:	83 f8 02             	cmp    $0x2,%eax
    d4b7:	0f 94 c0             	sete   %al
}
    d4ba:	c9                   	leave
    d4bb:	c3                   	ret

000000000000d4bc <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    d4bc:	55                   	push   %rbp
    d4bd:	48 89 e5             	mov    %rsp,%rbp
    d4c0:	53                   	push   %rbx
    d4c1:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    d4c8:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d4cf:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d4d6:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d4dd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d4e1:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d4e8:	48 89 d6             	mov    %rdx,%rsi
    d4eb:	48 89 c7             	mov    %rax,%rdi
    d4ee:	e8 19 a2 ff ff       	call   770c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d4f3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d4f7:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d4fe:	48 89 d6             	mov    %rdx,%rsi
    d501:	48 89 c7             	mov    %rax,%rdi
    d504:	e8 37 a3 ff ff       	call   7840 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d509:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d510:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d514:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d51b:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d522:	48 89 ce             	mov    %rcx,%rsi
    d525:	48 89 c7             	mov    %rax,%rdi
    d528:	e8 4c a4 ff ff       	call   7979 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d52d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d534:	00 
    d535:	e9 c5 00 00 00       	jmp    d5ff <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d53a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d53e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d542:	48 89 d6             	mov    %rdx,%rsi
    d545:	48 89 c7             	mov    %rax,%rdi
    d548:	e8 51 b4 ff ff       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d54d:	48 89 c7             	mov    %rax,%rdi
    d550:	e8 d5 46 00 00       	call   11c2a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d555:	84 c0                	test   %al,%al
    d557:	74 48                	je     d5a1 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d559:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d55d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d561:	48 89 d6             	mov    %rdx,%rsi
    d564:	48 89 c7             	mov    %rax,%rdi
    d567:	e8 32 b4 ff ff       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d56c:	48 89 c7             	mov    %rax,%rdi
    d56f:	e8 b6 46 00 00       	call   11c2a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d574:	84 c0                	test   %al,%al
    d576:	74 29                	je     d5a1 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d578:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d57c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d583:	48 89 d6             	mov    %rdx,%rsi
    d586:	48 89 c7             	mov    %rax,%rdi
    d589:	e8 10 b4 ff ff       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d58e:	48 89 c7             	mov    %rax,%rdi
    d591:	e8 94 46 00 00       	call   11c2a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d596:	84 c0                	test   %al,%al
    d598:	74 07                	je     d5a1 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d59a:	b8 01 00 00 00       	mov    $0x1,%eax
    d59f:	eb 05                	jmp    d5a6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d5a1:	b8 00 00 00 00       	mov    $0x0,%eax
    d5a6:	84 c0                	test   %al,%al
    d5a8:	74 50                	je     d5fa <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d5aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5ae:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d5b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d5b5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d5b9:	48 89 d6             	mov    %rdx,%rsi
    d5bc:	48 89 c7             	mov    %rax,%rdi
    d5bf:	e8 da b3 ff ff       	call   899e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d5c4:	48 89 c7             	mov    %rax,%rdi
    d5c7:	e8 78 46 00 00       	call   11c44 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d5cc:	48 89 c2             	mov    %rax,%rdx
    d5cf:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d5d3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d5d7:	48 89 ce             	mov    %rcx,%rsi
    d5da:	48 89 c7             	mov    %rax,%rdi
    d5dd:	e8 94 46 00 00       	call   11c76 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d5e2:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d5e6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d5ed:	48 89 d6             	mov    %rdx,%rsi
    d5f0:	48 89 c7             	mov    %rax,%rdi
    d5f3:	e8 d4 46 00 00       	call   11ccc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d5f8:	eb 2f                	jmp    d629 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d5fa:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d5ff:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d603:	48 89 c7             	mov    %rax,%rdi
    d606:	e8 f1 45 00 00       	call   11bfc <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d60b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d60f:	0f 92 c0             	setb   %al
    d612:	84 c0                	test   %al,%al
    d614:	0f 85 20 ff ff ff    	jne    d53a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d61a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d621:	48 89 c7             	mov    %rax,%rdi
    d624:	e8 df 3e 00 00       	call   11508 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d629:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d630:	48 89 c7             	mov    %rax,%rdi
    d633:	e8 66 b2 ff ff       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d638:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d63c:	48 89 c7             	mov    %rax,%rdi
    d63f:	e8 5a b2 ff ff       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d644:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d648:	48 89 c7             	mov    %rax,%rdi
    d64b:	e8 4e b2 ff ff       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d650:	eb 3f                	jmp    d691 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d652:	48 89 c3             	mov    %rax,%rbx
    d655:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d65c:	48 89 c7             	mov    %rax,%rdi
    d65f:	e8 3a b2 ff ff       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d664:	eb 03                	jmp    d669 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d666:	48 89 c3             	mov    %rax,%rbx
    d669:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d66d:	48 89 c7             	mov    %rax,%rdi
    d670:	e8 29 b2 ff ff       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d675:	eb 03                	jmp    d67a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d677:	48 89 c3             	mov    %rax,%rbx
    d67a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d67e:	48 89 c7             	mov    %rax,%rdi
    d681:	e8 18 b2 ff ff       	call   889e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d686:	48 89 d8             	mov    %rbx,%rax
    d689:	48 89 c7             	mov    %rax,%rdi
    d68c:	e8 6f 71 ff ff       	call   4800 <_Unwind_Resume@plt>
    d691:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d698:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d69c:	c9                   	leave
    d69d:	c3                   	ret

000000000000d69e <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d69e:	55                   	push   %rbp
    d69f:	48 89 e5             	mov    %rsp,%rbp
    d6a2:	41 54                	push   %r12
    d6a4:	53                   	push   %rbx
    d6a5:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d6ac:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d6b3:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d6ba:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d6be:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d6c2:	48 89 d6             	mov    %rdx,%rsi
    d6c5:	48 89 c7             	mov    %rax,%rdi
    d6c8:	e8 a7 9d ff ff       	call   7474 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d6cd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d6d4:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d6d5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d6d9:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d6dd:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d6e1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d6e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d6e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6ed:	48 89 c7             	mov    %rax,%rdi
    d6f0:	e8 0b 46 00 00       	call   11d00 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d6f5:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d6fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d700:	48 89 c7             	mov    %rax,%rdi
    d703:	e8 1e 46 00 00       	call   11d26 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d708:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d70f:	e9 dd 00 00 00       	jmp    d7f1 <_ZN9VulkanApp12createDeviceEv+0x153>
    d714:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d71b:	48 89 c7             	mov    %rax,%rdi
    d71e:	e8 87 46 00 00       	call   11daa <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d723:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d727:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d72b:	48 8b 10             	mov    (%rax),%rdx
    d72e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d735:	48 89 d6             	mov    %rdx,%rsi
    d738:	48 89 c7             	mov    %rax,%rdi
    d73b:	e8 3c fd ff ff       	call   d47c <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d740:	84 c0                	test   %al,%al
    d742:	74 41                	je     d785 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d744:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d748:	48 8b 10             	mov    (%rax),%rdx
    d74b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d752:	48 89 d6             	mov    %rdx,%rsi
    d755:	48 89 c7             	mov    %rax,%rdi
    d758:	e8 f9 02 00 00       	call   da56 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d75d:	84 c0                	test   %al,%al
    d75f:	74 24                	je     d785 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d761:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d765:	48 8b 10             	mov    (%rax),%rdx
    d768:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d76f:	48 89 d6             	mov    %rdx,%rsi
    d772:	48 89 c7             	mov    %rax,%rdi
    d775:	e8 16 06 00 00       	call   dd90 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d77a:	84 c0                	test   %al,%al
    d77c:	74 07                	je     d785 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d77e:	b8 01 00 00 00       	mov    $0x1,%eax
    d783:	eb 05                	jmp    d78a <_ZN9VulkanApp12createDeviceEv+0xec>
    d785:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d78a:	84 c0                	test   %al,%al
    d78c:	74 54                	je     d7e2 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d78e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d792:	48 8b 10             	mov    (%rax),%rdx
    d795:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d79c:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d7a3:	48 89 ce             	mov    %rcx,%rsi
    d7a6:	48 89 c7             	mov    %rax,%rdi
    d7a9:	e8 0e fd ff ff       	call   d4bc <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d7ae:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d7b5:	48 89 c7             	mov    %rax,%rdi
    d7b8:	e8 ff 45 00 00       	call   11dbc <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d7bd:	84 c0                	test   %al,%al
    d7bf:	74 21                	je     d7e2 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d7c1:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d7c8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d7cc:	48 89 d6             	mov    %rdx,%rsi
    d7cf:	48 89 c7             	mov    %rax,%rdi
    d7d2:	e8 83 3d 00 00       	call   1155a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d7d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d7db:	48 8b 00             	mov    (%rax),%rax
    d7de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d7e2:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d7e9:	48 89 c7             	mov    %rax,%rdi
    d7ec:	e8 99 45 00 00       	call   11d8a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d7f1:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d7f8:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d7ff:	48 89 d6             	mov    %rdx,%rsi
    d802:	48 89 c7             	mov    %rax,%rdi
    d805:	e8 45 45 00 00       	call   11d4f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d80a:	84 c0                	test   %al,%al
    d80c:	0f 85 02 ff ff ff    	jne    d714 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d812:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d817:	75 3b                	jne    d854 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d819:	bf 10 00 00 00       	mov    $0x10,%edi
    d81e:	e8 7d 69 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    d823:	48 89 c3             	mov    %rax,%rbx
    d826:	48 8d 05 c3 01 01 00 	lea    0x101c3(%rip),%rax        # 1d9f0 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d82d:	48 89 c6             	mov    %rax,%rsi
    d830:	48 89 df             	mov    %rbx,%rdi
    d833:	e8 e8 68 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    d838:	48 8b 05 69 f7 01 00 	mov    0x1f769(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d83f:	48 89 c2             	mov    %rax,%rdx
    d842:	48 8d 05 f7 f4 01 00 	lea    0x1f4f7(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d849:	48 89 c6             	mov    %rax,%rsi
    d84c:	48 89 df             	mov    %rbx,%rdi
    d84f:	e8 4c 6f ff ff       	call   47a0 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d854:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d858:	48 89 c7             	mov    %rax,%rdi
    d85b:	e8 24 3d 00 00       	call   11584 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d860:	8b 00                	mov    (%rax),%eax
    d862:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d865:	f3 0f 10 05 23 06 01 	movss  0x10623(%rip),%xmm0        # 1de90 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    d86c:	00 
    d86d:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d872:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d876:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d87d:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d884:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d889:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d890:	00 00 00 
  queueInfo.pNext = nullptr;
    d893:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d89a:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d89e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d8a1:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d8a7:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d8ae:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d8b1:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d8b5:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d8b9:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d8c0:	b8 00 00 00 00       	mov    $0x0,%eax
    d8c5:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d8ca:	48 89 d7             	mov    %rdx,%rdi
    d8cd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d8d0:	48 89 fa             	mov    %rdi,%rdx
    d8d3:	89 02                	mov    %eax,(%rdx)
    d8d5:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d8d9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d8dd:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d8e4:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d8eb:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d8f2:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d8f9:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d900:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d901:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d908:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d90b:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d912:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d916:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d91d:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d920:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d927:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d92e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d935:	48 05 90 00 00 00    	add    $0x90,%rax
    d93b:	48 89 c7             	mov    %rax,%rdi
    d93e:	e8 4d 42 00 00       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d943:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d949:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d950:	48 05 90 00 00 00    	add    $0x90,%rax
    d956:	48 89 c7             	mov    %rax,%rdi
    d959:	e8 7a 42 00 00       	call   11bd8 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d95e:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d965:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d96c:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d973:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d97a:	48 83 c0 28          	add    $0x28,%rax
    d97e:	48 89 c7             	mov    %rax,%rdi
    d981:	e8 0a 42 00 00       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d986:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d98c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d993:	48 83 c0 28          	add    $0x28,%rax
    d997:	48 89 c7             	mov    %rax,%rdi
    d99a:	e8 15 42 00 00       	call   11bb4 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d99f:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d9a6:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d9ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9b1:	ba 00 00 00 00       	mov    $0x0,%edx
    d9b6:	48 89 ce             	mov    %rcx,%rsi
    d9b9:	48 89 c7             	mov    %rax,%rdi
    d9bc:	e8 c8 7f ff ff       	call   5989 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d9c1:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d9c8:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d9cc:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d9d3:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d9d7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d9de:	48 8b 40 50          	mov    0x50(%rax),%rax
    d9e2:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d9e5:	48 89 d1             	mov    %rdx,%rcx
    d9e8:	ba 00 00 00 00       	mov    $0x0,%edx
    d9ed:	48 89 c7             	mov    %rax,%rdi
    d9f0:	e8 fb 6b ff ff       	call   45f0 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d9f5:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d9fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da00:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    da04:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    da0b:	8b 55 dc             	mov    -0x24(%rbp),%edx
    da0e:	89 50 68             	mov    %edx,0x68(%rax)
}
    da11:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    da15:	48 89 c7             	mov    %rax,%rdi
    da18:	e8 81 ab ff ff       	call   859e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    da1d:	eb 2a                	jmp    da49 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    da1f:	49 89 c4             	mov    %rax,%r12
    da22:	48 89 df             	mov    %rbx,%rdi
    da25:	e8 76 68 ff ff       	call   42a0 <__cxa_free_exception@plt>
    da2a:	4c 89 e3             	mov    %r12,%rbx
    da2d:	eb 03                	jmp    da32 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    da2f:	48 89 c3             	mov    %rax,%rbx
    da32:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    da36:	48 89 c7             	mov    %rax,%rdi
    da39:	e8 60 ab ff ff       	call   859e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    da3e:	48 89 d8             	mov    %rbx,%rax
    da41:	48 89 c7             	mov    %rax,%rdi
    da44:	e8 b7 6d ff ff       	call   4800 <_Unwind_Resume@plt>
    da49:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    da50:	5b                   	pop    %rbx
    da51:	41 5c                	pop    %r12
    da53:	5d                   	pop    %rbp
    da54:	c3                   	ret
    da55:	90                   	nop

000000000000da56 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    da56:	55                   	push   %rbp
    da57:	48 89 e5             	mov    %rsp,%rbp
    da5a:	53                   	push   %rbx
    da5b:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    da62:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    da69:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    da70:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    da77:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    da7e:	ba 00 00 00 00       	mov    $0x0,%edx
    da83:	48 89 ce             	mov    %rcx,%rsi
    da86:	48 89 c7             	mov    %rax,%rdi
    da89:	e8 11 97 ff ff       	call   719f <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    da8e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    da95:	48 89 c7             	mov    %rax,%rdi
    da98:	e8 63 3b 00 00       	call   11600 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    da9d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    daa4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    daa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daac:	48 89 c7             	mov    %rax,%rdi
    daaf:	e8 1e 44 00 00       	call   11ed2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    dab4:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    dabb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dabf:	48 89 c7             	mov    %rax,%rdi
    dac2:	e8 31 44 00 00       	call   11ef8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    dac7:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    dace:	e9 8c 00 00 00       	jmp    db5f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    dad3:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    dada:	48 89 c7             	mov    %rax,%rdi
    dadd:	e8 9e 44 00 00       	call   11f80 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    dae2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    dae6:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    daed:	48 89 c7             	mov    %rax,%rdi
    daf0:	e8 1b 6d ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    daf5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    daf9:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    db00:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    db07:	48 89 ce             	mov    %rcx,%rsi
    db0a:	48 89 c7             	mov    %rax,%rdi
    db0d:	e8 4e 71 ff ff       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    db12:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    db19:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    db20:	48 89 d6             	mov    %rdx,%rsi
    db23:	48 89 c7             	mov    %rax,%rdi
    db26:	e8 67 44 00 00       	call   11f92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    db2b:	8b 10                	mov    (%rax),%edx
    db2d:	83 c2 01             	add    $0x1,%edx
    db30:	89 10                	mov    %edx,(%rax)
    db32:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    db39:	48 89 c7             	mov    %rax,%rdi
    db3c:	e8 ff 66 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    db41:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    db48:	48 89 c7             	mov    %rax,%rdi
    db4b:	e8 50 69 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    db50:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    db57:	48 89 c7             	mov    %rax,%rdi
    db5a:	e8 fd 43 00 00       	call   11f5c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    db5f:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    db66:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    db6d:	48 89 d6             	mov    %rdx,%rsi
    db70:	48 89 c7             	mov    %rax,%rdi
    db73:	e8 a9 43 00 00       	call   11f21 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    db78:	84 c0                	test   %al,%al
    db7a:	0f 85 53 ff ff ff    	jne    dad3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    db80:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    db87:	48 05 90 00 00 00    	add    $0x90,%rax
    db8d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    db91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db95:	48 89 c7             	mov    %rax,%rdi
    db98:	e8 93 3e 00 00       	call   11a30 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    db9d:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    dba4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dba8:	48 89 c7             	mov    %rax,%rdi
    dbab:	e8 a6 3e 00 00       	call   11a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    dbb0:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    dbb7:	e9 ed 00 00 00       	jmp    dca9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    dbbc:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    dbc3:	48 89 c7             	mov    %rax,%rdi
    dbc6:	e8 0f 3f 00 00       	call   11ada <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    dbcb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    dbcf:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    dbd3:	48 89 c7             	mov    %rax,%rdi
    dbd6:	e8 35 6c ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    dbdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbdf:	48 8b 08             	mov    (%rax),%rcx
    dbe2:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    dbe6:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    dbed:	48 89 ce             	mov    %rcx,%rsi
    dbf0:	48 89 c7             	mov    %rax,%rdi
    dbf3:	e8 68 70 ff ff       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    dbf8:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    dbff:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dc06:	48 89 d6             	mov    %rdx,%rsi
    dc09:	48 89 c7             	mov    %rax,%rdi
    dc0c:	e8 81 43 00 00       	call   11f92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    dc11:	8b 10                	mov    (%rax),%edx
    dc13:	83 c2 01             	add    $0x1,%edx
    dc16:	89 10                	mov    %edx,(%rax)
    dc18:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    dc1f:	48 89 c7             	mov    %rax,%rdi
    dc22:	e8 19 66 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dc27:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    dc2b:	48 89 c7             	mov    %rax,%rdi
    dc2e:	e8 6d 68 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    dc33:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dc37:	48 89 c7             	mov    %rax,%rdi
    dc3a:	e8 d1 6b ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    dc3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dc43:	48 8b 08             	mov    (%rax),%rcx
    dc46:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    dc4a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dc4e:	48 89 ce             	mov    %rcx,%rsi
    dc51:	48 89 c7             	mov    %rax,%rdi
    dc54:	e8 07 70 ff ff       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    dc59:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    dc5d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dc64:	48 89 d6             	mov    %rdx,%rsi
    dc67:	48 89 c7             	mov    %rax,%rdi
    dc6a:	e8 23 43 00 00       	call   11f92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    dc6f:	8b 00                	mov    (%rax),%eax
    dc71:	83 f8 01             	cmp    $0x1,%eax
    dc74:	0f 96 c3             	setbe  %bl
    dc77:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dc7b:	48 89 c7             	mov    %rax,%rdi
    dc7e:	e8 bd 65 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dc83:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dc87:	48 89 c7             	mov    %rax,%rdi
    dc8a:	e8 11 68 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    dc8f:	84 db                	test   %bl,%bl
    dc91:	74 07                	je     dc9a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    dc93:	bb 00 00 00 00       	mov    $0x0,%ebx
    dc98:	eb 35                	jmp    dccf <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    dc9a:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    dca1:	48 89 c7             	mov    %rax,%rdi
    dca4:	e8 11 3e 00 00       	call   11aba <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    dca9:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    dcb0:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    dcb7:	48 89 d6             	mov    %rdx,%rsi
    dcba:	48 89 c7             	mov    %rax,%rdi
    dcbd:	e8 bd 3d 00 00       	call   11a7f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    dcc2:	84 c0                	test   %al,%al
    dcc4:	0f 85 f2 fe ff ff    	jne    dbbc <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    dcca:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    dccf:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dcd6:	48 89 c7             	mov    %rax,%rdi
    dcd9:	e8 3e 39 00 00       	call   1161c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    dcde:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    dce5:	48 89 c7             	mov    %rax,%rdi
    dce8:	e8 27 a6 ff ff       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    dced:	89 d8                	mov    %ebx,%eax
    dcef:	e9 96 00 00 00       	jmp    dd8a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    dcf4:	48 89 c3             	mov    %rax,%rbx
    dcf7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dcfe:	48 89 c7             	mov    %rax,%rdi
    dd01:	e8 3a 65 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dd06:	eb 03                	jmp    dd0b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    dd08:	48 89 c3             	mov    %rax,%rbx
    dd0b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    dd12:	48 89 c7             	mov    %rax,%rdi
    dd15:	e8 86 67 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    dd1a:	eb 45                	jmp    dd61 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    dd1c:	48 89 c3             	mov    %rax,%rbx
    dd1f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    dd26:	48 89 c7             	mov    %rax,%rdi
    dd29:	e8 12 65 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dd2e:	eb 03                	jmp    dd33 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    dd30:	48 89 c3             	mov    %rax,%rbx
    dd33:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    dd37:	48 89 c7             	mov    %rax,%rdi
    dd3a:	e8 61 67 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    dd3f:	eb 20                	jmp    dd61 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    dd41:	48 89 c3             	mov    %rax,%rbx
    dd44:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dd48:	48 89 c7             	mov    %rax,%rdi
    dd4b:	e8 f0 64 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dd50:	eb 03                	jmp    dd55 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    dd52:	48 89 c3             	mov    %rax,%rbx
    dd55:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dd59:	48 89 c7             	mov    %rax,%rdi
    dd5c:	e8 3f 67 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
}
    dd61:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dd68:	48 89 c7             	mov    %rax,%rdi
    dd6b:	e8 ac 38 00 00       	call   1161c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    dd70:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    dd77:	48 89 c7             	mov    %rax,%rdi
    dd7a:	e8 95 a5 ff ff       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    dd7f:	48 89 d8             	mov    %rbx,%rax
    dd82:	48 89 c7             	mov    %rax,%rdi
    dd85:	e8 76 6a ff ff       	call   4800 <_Unwind_Resume@plt>
    dd8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dd8e:	c9                   	leave
    dd8f:	c3                   	ret

000000000000dd90 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    dd90:	55                   	push   %rbp
    dd91:	48 89 e5             	mov    %rsp,%rbp
    dd94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    dd9c:	b8 01 00 00 00       	mov    $0x1,%eax
}
    dda1:	5d                   	pop    %rbp
    dda2:	c3                   	ret
    dda3:	90                   	nop

000000000000dda4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    dda4:	55                   	push   %rbp
    dda5:	48 89 e5             	mov    %rsp,%rbp
    dda8:	41 54                	push   %r12
    ddaa:	53                   	push   %rbx
    ddab:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    ddb2:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    ddb9:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    ddc0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ddc7:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ddcb:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ddd2:	48 8b 48 58          	mov    0x58(%rax),%rcx
    ddd6:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ddda:	48 89 ce             	mov    %rcx,%rsi
    dddd:	48 89 c7             	mov    %rax,%rdi
    dde0:	e8 04 9d ff ff       	call   7ae9 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    dde5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ddec:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ddf0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ddf7:	48 8b 48 58          	mov    0x58(%rax),%rcx
    ddfb:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    de02:	48 89 ce             	mov    %rcx,%rsi
    de05:	48 89 c7             	mov    %rax,%rdi
    de08:	e8 8a 9d ff ff       	call   7b97 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    de0d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    de14:	48 8b 50 48          	mov    0x48(%rax),%rdx
    de18:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    de1f:	48 8b 48 58          	mov    0x58(%rax),%rcx
    de23:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    de2a:	48 89 ce             	mov    %rcx,%rsi
    de2d:	48 89 c7             	mov    %rax,%rdi
    de30:	e8 d9 9e ff ff       	call   7d0e <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    de35:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de3c:	48 89 c6             	mov    %rax,%rsi
    de3f:	b8 00 00 00 00       	mov    $0x0,%eax
    de44:	ba 0d 00 00 00       	mov    $0xd,%edx
    de49:	48 89 f7             	mov    %rsi,%rdi
    de4c:	48 89 d1             	mov    %rdx,%rcx
    de4f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    de52:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de59:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    de5f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de66:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    de6d:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    de6e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    de75:	48 8b 50 48          	mov    0x48(%rax),%rdx
    de79:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de80:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    de84:	8b 45 80             	mov    -0x80(%rbp),%eax
    de87:	83 c0 01             	add    $0x1,%eax
    de8a:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    de8d:	8b 45 84             	mov    -0x7c(%rbp),%eax
    de90:	85 c0                	test   %eax,%eax
    de92:	74 0e                	je     dea2 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    de94:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    de97:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    de9a:	73 06                	jae    dea2 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    de9c:	8b 45 84             	mov    -0x7c(%rbp),%eax
    de9f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    dea2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dea9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    deac:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    deaf:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    deb6:	48 89 c7             	mov    %rax,%rdi
    deb9:	e8 d8 41 00 00       	call   12096 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    debe:	84 c0                	test   %al,%al
    dec0:	74 3b                	je     defd <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    dec2:	bf 10 00 00 00       	mov    $0x10,%edi
    dec7:	e8 d4 62 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    decc:	48 89 c3             	mov    %rax,%rbx
    decf:	48 8d 05 3e fb 00 00 	lea    0xfb3e(%rip),%rax        # 1da14 <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    ded6:	48 89 c6             	mov    %rax,%rsi
    ded9:	48 89 df             	mov    %rbx,%rdi
    dedc:	e8 3f 62 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    dee1:	48 8b 05 c0 f0 01 00 	mov    0x1f0c0(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dee8:	48 89 c2             	mov    %rax,%rdx
    deeb:	48 8d 05 4e ee 01 00 	lea    0x1ee4e(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    def2:	48 89 c6             	mov    %rax,%rsi
    def5:	48 89 df             	mov    %rbx,%rdi
    def8:	e8 a3 68 ff ff       	call   47a0 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    defd:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    df04:	be 00 00 00 00       	mov    $0x0,%esi
    df09:	48 89 c7             	mov    %rax,%rdi
    df0c:	e8 c7 41 00 00       	call   120d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    df11:	8b 10                	mov    (%rax),%edx
    df13:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df1a:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    df1d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    df24:	be 00 00 00 00       	mov    $0x0,%esi
    df29:	48 89 c7             	mov    %rax,%rdi
    df2c:	e8 a7 41 00 00       	call   120d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    df31:	8b 50 04             	mov    0x4(%rax),%edx
    df34:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df3b:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    df3e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    df45:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    df49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df4d:	48 89 c7             	mov    %rax,%rdi
    df50:	e8 a3 41 00 00       	call   120f8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    df55:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    df5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df60:	48 89 c7             	mov    %rax,%rdi
    df63:	e8 b6 41 00 00       	call   1211e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    df68:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    df6f:	eb 5b                	jmp    dfcc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    df71:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    df78:	48 89 c7             	mov    %rax,%rdi
    df7b:	e8 22 42 00 00       	call   121a2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    df80:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    df84:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df88:	8b 00                	mov    (%rax),%eax
    df8a:	83 f8 2b             	cmp    $0x2b,%eax
    df8d:	75 2e                	jne    dfbd <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    df8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df93:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    df96:	85 c0                	test   %eax,%eax
    df98:	75 23                	jne    dfbd <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    df9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df9e:	8b 10                	mov    (%rax),%edx
    dfa0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dfa7:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    dfaa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dfae:	8b 50 04             	mov    0x4(%rax),%edx
    dfb1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dfb8:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    dfbb:	eb 2c                	jmp    dfe9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    dfbd:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dfc4:	48 89 c7             	mov    %rax,%rdi
    dfc7:	e8 b6 41 00 00       	call   12182 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    dfcc:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    dfd3:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dfda:	48 89 d6             	mov    %rdx,%rsi
    dfdd:	48 89 c7             	mov    %rax,%rdi
    dfe0:	e8 62 41 00 00       	call   12147 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dfe5:	84 c0                	test   %al,%al
    dfe7:	75 88                	jne    df71 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    dfe9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dff0:	8b 50 24             	mov    0x24(%rax),%edx
    dff3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dffa:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    dffd:	8b 45 88             	mov    -0x78(%rbp),%eax
    e000:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    e003:	8b 45 8c             	mov    -0x74(%rbp),%eax
    e006:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    e009:	8b 45 98             	mov    -0x68(%rbp),%eax
    e00c:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    e00f:	73 06                	jae    e017 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    e011:	8b 45 98             	mov    -0x68(%rbp),%eax
    e014:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    e017:	8b 45 9c             	mov    -0x64(%rbp),%eax
    e01a:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    e01d:	73 06                	jae    e025 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    e01f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    e022:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    e025:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e02c:	8b 55 e8             	mov    -0x18(%rbp),%edx
    e02f:	89 50 2c             	mov    %edx,0x2c(%rax)
    e032:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e039:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    e03c:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    e03f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e046:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    e04d:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    e051:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    e055:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e05c:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    e063:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e06a:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  // auto  = VK_PRESENT_MODE_IMMEDIATE_KHR;
  for (const auto &presentMode : surfacePresentModes) {
    e071:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e078:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e07c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e080:	48 89 c7             	mov    %rax,%rdi
    e083:	e8 2c 41 00 00       	call   121b4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    e088:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    e08f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e093:	48 89 c7             	mov    %rax,%rdi
    e096:	e8 3f 41 00 00       	call   121da <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    e09b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    e0a2:	eb 52                	jmp    e0f6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x352>
    e0a4:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    e0ab:	48 89 c7             	mov    %rax,%rdi
    e0ae:	e8 ab 41 00 00       	call   1225e <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    e0b3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (presentMode == preferredPresentMode) {
    e0b7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0bb:	8b 10                	mov    (%rax),%edx
    e0bd:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e0c4:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    e0ca:	39 c2                	cmp    %eax,%edx
    e0cc:	75 19                	jne    e0e7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    e0ce:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    e0d5:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
    e0db:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e0e2:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    e0e5:	eb 2c                	jmp    e113 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x36f>
  for (const auto &presentMode : surfacePresentModes) {
    e0e7:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    e0ee:	48 89 c7             	mov    %rax,%rdi
    e0f1:	e8 48 41 00 00       	call   1223e <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    e0f6:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    e0fd:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    e104:	48 89 d6             	mov    %rdx,%rsi
    e107:	48 89 c7             	mov    %rax,%rdi
    e10a:	e8 f4 40 00 00       	call   12203 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e10f:	84 c0                	test   %al,%al
    e111:	75 91                	jne    e0a4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x300>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    e113:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e11a:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    e121:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e128:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    e12f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e136:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    e13d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e144:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    e14b:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    e14c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    e14f:	83 e0 01             	and    $0x1,%eax
    e152:	85 c0                	test   %eax,%eax
    e154:	74 1e                	je     e174 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d0>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    e156:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e15d:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    e164:	8b 45 ac             	mov    -0x54(%rbp),%eax
    e167:	83 e0 01             	and    $0x1,%eax
    e16a:	85 c0                	test   %eax,%eax
    e16c:	0f 84 9b 00 00 00    	je     e20d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x469>
    e172:	eb 3b                	jmp    e1af <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x40b>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    e174:	bf 10 00 00 00       	mov    $0x10,%edi
    e179:	e8 22 60 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    e17e:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    e181:	48 8d 05 b0 f8 00 00 	lea    0xf8b0(%rip),%rax        # 1da38 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    e188:	48 89 c6             	mov    %rax,%rsi
    e18b:	48 89 df             	mov    %rbx,%rdi
    e18e:	e8 8d 5f ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    e193:	48 8b 05 0e ee 01 00 	mov    0x1ee0e(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e19a:	48 89 c2             	mov    %rax,%rdx
    e19d:	48 8d 05 9c eb 01 00 	lea    0x1eb9c(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e1a4:	48 89 c6             	mov    %rax,%rsi
    e1a7:	48 89 df             	mov    %rbx,%rdi
    e1aa:	e8 f1 65 ff ff       	call   47a0 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    e1af:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e1b6:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    e1bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e1c4:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    e1cb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e1d2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e1d9:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    e1da:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e1e1:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    e1e8:	00 

  return swapchainCreateInfo;
    e1e9:	90                   	nop
}
    e1ea:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e1f1:	48 89 c7             	mov    %rax,%rdi
    e1f4:	e8 b9 aa ff ff       	call   8cb2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    e1f9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e200:	48 89 c7             	mov    %rax,%rdi
    e203:	e8 46 a9 ff ff       	call   8b4e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    e208:	e9 9c 00 00 00       	jmp    e2a9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x505>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    e20d:	bf 10 00 00 00       	mov    $0x10,%edi
    e212:	e8 89 5f ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    e217:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    e21a:	48 8d 05 4f f8 00 00 	lea    0xf84f(%rip),%rax        # 1da70 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    e221:	48 89 c6             	mov    %rax,%rsi
    e224:	48 89 df             	mov    %rbx,%rdi
    e227:	e8 f4 5e ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    e22c:	48 8b 05 75 ed 01 00 	mov    0x1ed75(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e233:	48 89 c2             	mov    %rax,%rdx
    e236:	48 8d 05 03 eb 01 00 	lea    0x1eb03(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e23d:	48 89 c6             	mov    %rax,%rsi
    e240:	48 89 df             	mov    %rbx,%rdi
    e243:	e8 58 65 ff ff       	call   47a0 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    e248:	49 89 c4             	mov    %rax,%r12
    e24b:	48 89 df             	mov    %rbx,%rdi
    e24e:	e8 4d 60 ff ff       	call   42a0 <__cxa_free_exception@plt>
    e253:	4c 89 e3             	mov    %r12,%rbx
    e256:	eb 23                	jmp    e27b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    e258:	49 89 c4             	mov    %rax,%r12
    e25b:	48 89 df             	mov    %rbx,%rdi
    e25e:	e8 3d 60 ff ff       	call   42a0 <__cxa_free_exception@plt>
    e263:	4c 89 e3             	mov    %r12,%rbx
    e266:	eb 13                	jmp    e27b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    e268:	49 89 c4             	mov    %rax,%r12
    e26b:	48 89 df             	mov    %rbx,%rdi
    e26e:	e8 2d 60 ff ff       	call   42a0 <__cxa_free_exception@plt>
    e273:	4c 89 e3             	mov    %r12,%rbx
    e276:	eb 03                	jmp    e27b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
}
    e278:	48 89 c3             	mov    %rax,%rbx
    e27b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e282:	48 89 c7             	mov    %rax,%rdi
    e285:	e8 28 aa ff ff       	call   8cb2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    e28a:	eb 03                	jmp    e28f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4eb>
    e28c:	48 89 c3             	mov    %rax,%rbx
    e28f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e296:	48 89 c7             	mov    %rax,%rdi
    e299:	e8 b0 a8 ff ff       	call   8b4e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    e29e:	48 89 d8             	mov    %rbx,%rax
    e2a1:	48 89 c7             	mov    %rax,%rdi
    e2a4:	e8 57 65 ff ff       	call   4800 <_Unwind_Resume@plt>
    e2a9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e2b0:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    e2b7:	5b                   	pop    %rbx
    e2b8:	41 5c                	pop    %r12
    e2ba:	5d                   	pop    %rbp
    e2bb:	c3                   	ret

000000000000e2bc <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    e2bc:	55                   	push   %rbp
    e2bd:	48 89 e5             	mov    %rsp,%rbp
    e2c0:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e2c4:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    e2c8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e2cc:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e2d0:	48 89 d6             	mov    %rdx,%rsi
    e2d3:	48 89 c7             	mov    %rax,%rdi
    e2d6:	e8 c9 fa ff ff       	call   dda4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    e2db:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e2df:	48 8b 40 50          	mov    0x50(%rax),%rax
    e2e3:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e2e7:	ba 00 00 00 00       	mov    $0x0,%edx
    e2ec:	48 89 ce             	mov    %rcx,%rsi
    e2ef:	48 89 c7             	mov    %rax,%rdi
    e2f2:	e8 c2 77 ff ff       	call   5ab9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    e2f7:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e2fb:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    e2ff:	90                   	nop
    e300:	c9                   	leave
    e301:	c3                   	ret

000000000000e302 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    e302:	55                   	push   %rbp
    e303:	48 89 e5             	mov    %rsp,%rbp
    e306:	53                   	push   %rbx
    e307:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    e30e:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    e315:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e31c:	48 8b 50 70          	mov    0x70(%rax),%rdx
    e320:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e327:	48 8b 48 50          	mov    0x50(%rax),%rcx
    e32b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e32f:	48 89 ce             	mov    %rcx,%rsi
    e332:	48 89 c7             	mov    %rax,%rdi
    e335:	e8 4b 9b ff ff       	call   7e85 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    e33a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e341:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    e348:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e34c:	48 89 c6             	mov    %rax,%rsi
    e34f:	48 89 d7             	mov    %rdx,%rdi
    e352:	e8 19 3f 00 00       	call   12270 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    e357:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e35b:	48 89 c7             	mov    %rax,%rdi
    e35e:	e8 b3 aa ff ff       	call   8e16 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    e363:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e36a:	48 05 c0 00 00 00    	add    $0xc0,%rax
    e370:	48 89 c7             	mov    %rax,%rdi
    e373:	e8 30 3f 00 00       	call   122a8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e378:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    e37c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e383:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    e38a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e38e:	48 89 c6             	mov    %rax,%rsi
    e391:	48 89 d7             	mov    %rdx,%rdi
    e394:	e8 33 3f 00 00       	call   122cc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    e399:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e3a0:	00 
    e3a1:	e9 f1 00 00 00       	jmp    e497 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    e3a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3aa:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e3b1:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    e3b5:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    e3b9:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    e3bd:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    e3c1:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    e3c8:	00 00 00 
    imageViewInfo.pNext = nullptr;
    e3cb:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    e3d2:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    e3d6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e3dd:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    e3e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3e8:	48 89 c6             	mov    %rax,%rsi
    e3eb:	48 89 d7             	mov    %rdx,%rdi
    e3ee:	e8 5f 3f 00 00       	call   12352 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    e3f3:	48 8b 00             	mov    (%rax),%rax
    e3f6:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    e3fa:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    e401:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e408:	8b 40 78             	mov    0x78(%rax),%eax
    e40b:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    e40e:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    e415:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    e41c:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    e423:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    e42a:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    e431:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    e438:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    e43f:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    e446:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    e44d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e454:	48 8b 40 50          	mov    0x50(%rax),%rax
    e458:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    e45f:	ba 00 00 00 00       	mov    $0x0,%edx
    e464:	48 89 ce             	mov    %rcx,%rsi
    e467:	48 89 c7             	mov    %rax,%rdi
    e46a:	e8 ea 76 ff ff       	call   5b59 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    e46f:	48 89 c3             	mov    %rax,%rbx
    e472:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e479:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    e480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e484:	48 89 c6             	mov    %rax,%rsi
    e487:	48 89 d7             	mov    %rdx,%rdi
    e48a:	e8 e3 3e 00 00       	call   12372 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    e48f:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    e492:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e497:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e49b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e49f:	0f 82 01 ff ff ff    	jb     e3a6 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    e4a5:	90                   	nop
    e4a6:	90                   	nop
    e4a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e4ab:	c9                   	leave
    e4ac:	c3                   	ret
    e4ad:	90                   	nop

000000000000e4ae <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    e4ae:	55                   	push   %rbp
    e4af:	48 89 e5             	mov    %rsp,%rbp
    e4b2:	41 55                	push   %r13
    e4b4:	41 54                	push   %r12
    e4b6:	53                   	push   %rbx
    e4b7:	48 81 ec 48 05 00 00 	sub    $0x548,%rsp
    e4be:	48 89 bd a8 fa ff ff 	mov    %rdi,-0x558(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    e4c5:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    e4cc:	00 00 00 00 
    e4d0:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    e4d7:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    e4db:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e4e2:	48 89 c7             	mov    %rax,%rdi
    e4e5:	e8 26 63 ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    e4ea:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    e4f1:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e4f8:	48 8d 0d a9 f5 00 00 	lea    0xf5a9(%rip),%rcx        # 1daa8 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e4ff:	48 89 ce             	mov    %rcx,%rsi
    e502:	48 89 c7             	mov    %rax,%rdi
    e505:	e8 56 67 ff ff       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e50a:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e511:	48 8b 40 50          	mov    0x50(%rax),%rax
    e515:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    e51c:	ba 00 00 00 00       	mov    $0x0,%edx
    e521:	48 89 ce             	mov    %rcx,%rsi
    e524:	48 89 c7             	mov    %rax,%rdi
    e527:	e8 9d 77 ff ff       	call   5cc9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e52c:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    e533:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e53a:	48 89 c7             	mov    %rax,%rdi
    e53d:	e8 fe 5c ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e542:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e549:	48 89 c7             	mov    %rax,%rdi
    e54c:	e8 4f 5f ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    e551:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e558:	48 89 c7             	mov    %rax,%rdi
    e55b:	e8 b0 62 ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
    e560:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    e567:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e56e:	48 8d 0d 53 f5 00 00 	lea    0xf553(%rip),%rcx        # 1dac8 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e575:	48 89 ce             	mov    %rcx,%rsi
    e578:	48 89 c7             	mov    %rax,%rdi
    e57b:	e8 e0 66 ff ff       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e580:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e587:	48 8b 40 50          	mov    0x50(%rax),%rax
    e58b:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    e592:	ba 00 00 00 00       	mov    $0x0,%edx
    e597:	48 89 ce             	mov    %rcx,%rsi
    e59a:	48 89 c7             	mov    %rax,%rdi
    e59d:	e8 27 77 ff ff       	call   5cc9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e5a2:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    e5a9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e5b0:	48 89 c7             	mov    %rax,%rdi
    e5b3:	e8 88 5c ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e5b8:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e5bf:	48 89 c7             	mov    %rax,%rdi
    e5c2:	e8 d9 5e ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e5c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5cb:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    e5d2:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    e5d9:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    e5e0:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    e5e7:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e5ea:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    e5f1:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    e5f4:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e5fb:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    e602:	48 8d 05 df f4 00 00 	lea    0xf4df(%rip),%rax        # 1dae8 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e609:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    e610:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    e617:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e61b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e61f:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e626:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e62d:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    e634:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    e63b:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e63e:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    e645:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    e648:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e64f:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    e656:	48 8d 05 8b f4 00 00 	lea    0xf48b(%rip),%rax        # 1dae8 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e65d:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    e664:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    e66b:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    e66f:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    e676:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    e67d:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e684:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e68b:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    e692:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    e699:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e6a0:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e6a7:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    e6ae:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e6b5:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e6bc:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e6c3:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    e6ca:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    e6d1:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e6d8:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e6df:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    e6e6:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    e6ed:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e6f4:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e6fb:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    e702:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    e709:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e710:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e717:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e71b:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e722:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e729:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
  vertInputInfo.sType =
    e730:	c7 85 c0 fd ff ff 13 	movl   $0x13,-0x240(%rbp)
    e737:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 0;
    e73a:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
    e741:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = nullptr;
    e744:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    e74b:	00 00 00 00 
  vertInputInfo.vertexAttributeDescriptionCount = 0;
    e74f:	c7 85 e0 fd ff ff 00 	movl   $0x0,-0x220(%rbp)
    e756:	00 00 00 
  vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e759:	48 c7 85 e8 fd ff ff 	movq   $0x0,-0x218(%rbp)
    e760:	00 00 00 00 

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e764:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e768:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    e76f:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  inputAssemblyInfo.sType =
    e776:	c7 85 a0 fd ff ff 14 	movl   $0x14,-0x260(%rbp)
    e77d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e780:	c7 85 b4 fd ff ff 03 	movl   $0x3,-0x24c(%rbp)
    e787:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e78a:	c7 85 b8 fd ff ff 00 	movl   $0x0,-0x248(%rbp)
    e791:	00 00 00 

  /*  */
  VkViewport viewport{};
    e794:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e798:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e79f:	66 0f d6 85 90 fd ff 	movq   %xmm0,-0x270(%rbp)
    e7a6:	ff 
  viewport.x = 0.0f;
    e7a7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7ab:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    e7b2:	ff 
  viewport.y = 0.0f;
    e7b3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7b7:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    e7be:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    e7bf:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e7c6:	8b 40 7c             	mov    0x7c(%rax),%eax
    e7c9:	89 c0                	mov    %eax,%eax
    e7cb:	48 85 c0             	test   %rax,%rax
    e7ce:	78 0b                	js     e7db <_ZN9VulkanApp22createGraphicsPipelineEv+0x32d>
    e7d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7d4:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e7d9:	eb 19                	jmp    e7f4 <_ZN9VulkanApp22createGraphicsPipelineEv+0x346>
    e7db:	48 89 c2             	mov    %rax,%rdx
    e7de:	48 d1 ea             	shr    %rdx
    e7e1:	83 e0 01             	and    $0x1,%eax
    e7e4:	48 09 c2             	or     %rax,%rdx
    e7e7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7eb:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e7f0:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e7f4:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    e7fb:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    e7fc:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e803:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e809:	89 c0                	mov    %eax,%eax
    e80b:	48 85 c0             	test   %rax,%rax
    e80e:	78 0b                	js     e81b <_ZN9VulkanApp22createGraphicsPipelineEv+0x36d>
    e810:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e814:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e819:	eb 19                	jmp    e834 <_ZN9VulkanApp22createGraphicsPipelineEv+0x386>
    e81b:	48 89 c2             	mov    %rax,%rdx
    e81e:	48 d1 ea             	shr    %rdx
    e821:	83 e0 01             	and    $0x1,%eax
    e824:	48 09 c2             	or     %rax,%rdx
    e827:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e82b:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e830:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e834:	f3 0f 11 85 8c fd ff 	movss  %xmm0,-0x274(%rbp)
    e83b:	ff 
  viewport.minDepth = 0.0f;
    e83c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e840:	f3 0f 11 85 90 fd ff 	movss  %xmm0,-0x270(%rbp)
    e847:	ff 
  viewport.maxDepth = 1.0f;
    e848:	f3 0f 10 05 40 f6 00 	movss  0xf640(%rip),%xmm0        # 1de90 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    e84f:	00 
    e850:	f3 0f 11 85 94 fd ff 	movss  %xmm0,-0x26c(%rbp)
    e857:	ff 

  VkRect2D scissor{};
    e858:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    e85f:	00 00 00 00 
    e863:	48 c7 85 78 fd ff ff 	movq   $0x0,-0x288(%rbp)
    e86a:	00 00 00 00 
  scissor.offset = {0, 0};
    e86e:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
    e875:	00 00 00 
    e878:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
    e87f:	00 00 00 
  scissor.extent = swapchain.extent;
    e882:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e889:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e88d:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e894:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e898:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e89f:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e8a6:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
  viewportStateInfo.sType =
    e8ad:	c7 85 40 fd ff ff 16 	movl   $0x16,-0x2c0(%rbp)
    e8b4:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    e8b7:	c7 85 54 fd ff ff 01 	movl   $0x1,-0x2ac(%rbp)
    e8be:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    e8c1:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    e8c8:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  viewportStateInfo.scissorCount = 1;
    e8cf:	c7 85 60 fd ff ff 01 	movl   $0x1,-0x2a0(%rbp)
    e8d6:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    e8d9:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    e8e0:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e8e7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e8eb:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    e8f2:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e8f9:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e900:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  rastStateInfo.sType =
    e907:	c7 85 00 fd ff ff 17 	movl   $0x17,-0x300(%rbp)
    e90e:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    e911:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    e918:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    e91c:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    e923:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e926:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    e92d:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e930:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
    e937:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    e93a:	f3 0f 10 05 4e f5 00 	movss  0xf54e(%rip),%xmm0        # 1de90 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    e941:	00 
    e942:	f3 0f 11 85 38 fd ff 	movss  %xmm0,-0x2c8(%rbp)
    e949:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e94a:	c7 85 20 fd ff ff 02 	movl   $0x2,-0x2e0(%rbp)
    e951:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e954:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e95b:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    e95e:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e965:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    e968:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e96c:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e973:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    e974:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e978:	f3 0f 11 85 30 fd ff 	movss  %xmm0,-0x2d0(%rbp)
    e97f:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e980:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e984:	f3 0f 11 85 34 fd ff 	movss  %xmm0,-0x2cc(%rbp)
    e98b:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e98c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e990:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    e997:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e99e:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
  multisampleStateInfo.sType =
    e9a5:	c7 85 d0 fc ff ff 18 	movl   $0x18,-0x330(%rbp)
    e9ac:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e9af:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    e9b6:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e9b9:	c7 85 e4 fc ff ff 01 	movl   $0x1,-0x31c(%rbp)
    e9c0:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    e9c3:	f3 0f 10 05 c5 f4 00 	movss  0xf4c5(%rip),%xmm0        # 1de90 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    e9ca:	00 
    e9cb:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    e9d2:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    e9d3:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
    e9da:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e9de:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    e9e5:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e9e8:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
    e9ef:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e9f2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e9f6:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e9fd:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  colorBlendAttachment.colorWriteMask =
    ea04:	c7 85 cc fc ff ff 0f 	movl   $0xf,-0x334(%rbp)
    ea0b:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    ea0e:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
    ea15:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    ea18:	c7 85 b4 fc ff ff 06 	movl   $0x6,-0x34c(%rbp)
    ea1f:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    ea22:	c7 85 b8 fc ff ff 07 	movl   $0x7,-0x348(%rbp)
    ea29:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    ea2c:	c7 85 bc fc ff ff 00 	movl   $0x0,-0x344(%rbp)
    ea33:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    ea36:	c7 85 c0 fc ff ff 01 	movl   $0x1,-0x340(%rbp)
    ea3d:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    ea40:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    ea47:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    ea4a:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    ea51:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    ea54:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea58:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    ea5f:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    ea66:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    ea6d:	66 0f d6 85 a0 fc ff 	movq   %xmm0,-0x360(%rbp)
    ea74:	ff 
  colorBlendState.sType =
    ea75:	c7 85 70 fc ff ff 1a 	movl   $0x1a,-0x390(%rbp)
    ea7c:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    ea7f:	c7 85 84 fc ff ff 00 	movl   $0x0,-0x37c(%rbp)
    ea86:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    ea89:	c7 85 88 fc ff ff 03 	movl   $0x3,-0x378(%rbp)
    ea90:	00 00 00 
  colorBlendState.attachmentCount = 1;
    ea93:	c7 85 8c fc ff ff 01 	movl   $0x1,-0x374(%rbp)
    ea9a:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    ea9d:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    eaa4:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    eaab:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eaaf:	f3 0f 11 85 98 fc ff 	movss  %xmm0,-0x368(%rbp)
    eab6:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    eab7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eabb:	f3 0f 11 85 9c fc ff 	movss  %xmm0,-0x364(%rbp)
    eac2:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    eac3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eac7:	f3 0f 11 85 a0 fc ff 	movss  %xmm0,-0x360(%rbp)
    eace:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    eacf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ead3:	f3 0f 11 85 a4 fc ff 	movss  %xmm0,-0x35c(%rbp)
    eada:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    eadb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eadf:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    eae6:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    eaed:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    eaf4:	c7 85 40 fc ff ff 1e 	movl   $0x1e,-0x3c0(%rbp)
    eafb:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    eafe:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    eb05:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    eb08:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
    eb0f:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    eb13:	c7 85 60 fc ff ff 00 	movl   $0x0,-0x3a0(%rbp)
    eb1a:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    eb1d:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    eb24:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    eb28:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    eb2f:	48 8b 40 50          	mov    0x50(%rax),%rax
    eb33:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
    eb3a:	ba 00 00 00 00       	mov    $0x0,%edx
    eb3f:	48 89 ce             	mov    %rcx,%rsi
    eb42:	48 89 c7             	mov    %rax,%rdi
    eb45:	e8 b7 73 ff ff       	call   5f01 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    eb4a:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    eb51:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    eb58:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eb5c:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    eb63:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    eb6a:	66 0f 7e 85 30 fc ff 	movd   %xmm0,-0x3d0(%rbp)
    eb71:	ff 
  colorAttachment.format = swapchain.format;
    eb72:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    eb79:	8b 40 78             	mov    0x78(%rax),%eax
    eb7c:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    eb82:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
    eb89:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    eb8c:	c7 85 1c fc ff ff 01 	movl   $0x1,-0x3e4(%rbp)
    eb93:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    eb96:	c7 85 20 fc ff ff 00 	movl   $0x0,-0x3e0(%rbp)
    eb9d:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    eba0:	c7 85 24 fc ff ff 02 	movl   $0x2,-0x3dc(%rbp)
    eba7:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    ebaa:	c7 85 28 fc ff ff 01 	movl   $0x1,-0x3d8(%rbp)
    ebb1:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    ebb4:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
    ebbb:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    ebbe:	c7 85 30 fc ff ff ea 	movl   $0x3b9acdea,-0x3d0(%rbp)
    ebc5:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    ebc8:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
    ebcf:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    ebd3:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    ebda:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    ebdd:	c7 85 0c fc ff ff 02 	movl   $0x2,-0x3f4(%rbp)
    ebe4:	00 00 00 

  VkSubpassDescription subpass{};
    ebe7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ebeb:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    ebf2:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
    ebf9:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    ec00:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    ec07:	66 0f d6 85 00 fc ff 	movq   %xmm0,-0x400(%rbp)
    ec0e:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    ec0f:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    ec16:	00 00 00 
  subpass.colorAttachmentCount = 1;
    ec19:	c7 85 d8 fb ff ff 01 	movl   $0x1,-0x428(%rbp)
    ec20:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    ec23:	48 8d 85 08 fc ff ff 	lea    -0x3f8(%rbp),%rax
    ec2a:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
    ec31:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ec35:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    ec3c:	0f 11 85 ac fb ff ff 	movups %xmm0,-0x454(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
    ec43:	c7 85 a0 fb ff ff ff 	movl   $0xffffffff,-0x460(%rbp)
    ec4a:	ff ff ff 
  subPassDep.dstSubpass = 0;
    ec4d:	c7 85 a4 fb ff ff 00 	movl   $0x0,-0x45c(%rbp)
    ec54:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    ec57:	c7 85 a8 fb ff ff 00 	movl   $0x400,-0x458(%rbp)
    ec5e:	04 00 00 
  subPassDep.srcAccessMask = 0;
    ec61:	c7 85 b0 fb ff ff 00 	movl   $0x0,-0x450(%rbp)
    ec68:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    ec6b:	c7 85 ac fb ff ff 00 	movl   $0x400,-0x454(%rbp)
    ec72:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    ec75:	c7 85 b4 fb ff ff 00 	movl   $0x100,-0x44c(%rbp)
    ec7c:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
    ec7f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ec83:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
    ec8a:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
    ec91:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
    ec98:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    ec9f:	c7 85 60 fb ff ff 26 	movl   $0x26,-0x4a0(%rbp)
    eca6:	00 00 00 
  renderPassInfo.pNext = nullptr;
    eca9:	48 c7 85 68 fb ff ff 	movq   $0x0,-0x498(%rbp)
    ecb0:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    ecb4:	c7 85 74 fb ff ff 01 	movl   $0x1,-0x48c(%rbp)
    ecbb:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    ecbe:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    ecc5:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  renderPassInfo.subpassCount = 1;
    eccc:	c7 85 80 fb ff ff 01 	movl   $0x1,-0x480(%rbp)
    ecd3:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    ecd6:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
    ecdd:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  renderPassInfo.dependencyCount = 1;
    ece4:	c7 85 90 fb ff ff 01 	movl   $0x1,-0x470(%rbp)
    eceb:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
    ecee:	48 8d 85 a0 fb ff ff 	lea    -0x460(%rbp),%rax
    ecf5:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    ecfc:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ed03:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed07:	48 8d 8d 60 fb ff ff 	lea    -0x4a0(%rbp),%rcx
    ed0e:	ba 00 00 00 00       	mov    $0x0,%edx
    ed13:	48 89 ce             	mov    %rcx,%rsi
    ed16:	48 89 c7             	mov    %rax,%rdi
    ed19:	e8 7b 72 ff ff       	call   5f99 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    ed1e:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    ed25:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    ed2c:	48 8d 95 d0 fa ff ff 	lea    -0x530(%rbp),%rdx
    ed33:	b8 00 00 00 00       	mov    $0x0,%eax
    ed38:	b9 12 00 00 00       	mov    $0x12,%ecx
    ed3d:	48 89 d7             	mov    %rdx,%rdi
    ed40:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    ed43:	c7 85 d0 fa ff ff 1c 	movl   $0x1c,-0x530(%rbp)
    ed4a:	00 00 00 
  pipelineInfo.pNext = nullptr;
    ed4d:	48 c7 85 d8 fa ff ff 	movq   $0x0,-0x528(%rbp)
    ed54:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    ed58:	c7 85 e4 fa ff ff 02 	movl   $0x2,-0x51c(%rbp)
    ed5f:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    ed62:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    ed69:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    ed70:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    ed77:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    ed7e:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    ed85:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    ed8c:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    ed93:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    ed9a:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    eda1:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    eda8:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    edaf:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    edb6:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
    edbd:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    edc1:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    edc8:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    edcf:	48 c7 85 30 fb ff ff 	movq   $0x0,-0x4d0(%rbp)
    edd6:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    edda:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ede1:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
    ede8:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    edef:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    edf6:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    edfd:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  pipelineInfo.subpass = 0;
    ee04:	c7 85 48 fb ff ff 00 	movl   $0x0,-0x4b8(%rbp)
    ee0b:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    ee0e:	48 c7 85 50 fb ff ff 	movq   $0x0,-0x4b0(%rbp)
    ee15:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    ee19:	c7 85 58 fb ff ff ff 	movl   $0xffffffff,-0x4a8(%rbp)
    ee20:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    ee23:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
    ee2a:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
    ee31:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    ee38:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    ee3f:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
    ee46:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
    ee4d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    ee54:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    ee5b:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    ee62:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    ee69:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    ee70:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    ee77:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    ee7e:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    ee85:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ee8c:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    ee93:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    ee9a:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    eea1:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    eea8:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    eeaf:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    eeb6:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    eebd:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    eec4:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    eecb:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    eed2:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
    eed9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    eedd:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    eee1:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
    eee8:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
    eeef:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    eef3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    eef7:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    eefe:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    ef05:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ef09:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    ef0d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ef14:	49 89 c4             	mov    %rax,%r12
    ef17:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ef1d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ef21:	48 89 c7             	mov    %rax,%rdi
    ef24:	e8 69 34 00 00       	call   12392 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    ef29:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    ef2d:	4c 89 e6             	mov    %r12,%rsi
    ef30:	4c 89 ef             	mov    %r13,%rdi
    ef33:	4c 89 e1             	mov    %r12,%rcx
    ef36:	4c 89 eb             	mov    %r13,%rbx
    ef39:	48 89 df             	mov    %rbx,%rdi
    ef3c:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    ef43:	48 89 d1             	mov    %rdx,%rcx
    ef46:	48 89 fa             	mov    %rdi,%rdx
    ef49:	48 89 c7             	mov    %rax,%rdi
    ef4c:	e8 79 34 00 00       	call   123ca <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    ef51:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ef55:	48 89 c7             	mov    %rax,%rdi
    ef58:	e8 51 34 00 00       	call   123ae <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    ef5d:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ef64:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
    ef6b:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ef72:	48 8b 70 50          	mov    0x50(%rax),%rsi
    ef76:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ef7a:	48 8d 8d b0 fa ff ff 	lea    -0x550(%rbp),%rcx
    ef81:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ef87:	48 89 c7             	mov    %rax,%rdi
    ef8a:	e8 22 35 00 00       	call   124b1 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    ef8f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ef93:	be 00 00 00 00       	mov    $0x0,%esi
    ef98:	48 89 c7             	mov    %rax,%rdi
    ef9b:	e8 82 36 00 00       	call   12622 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    efa0:	48 8b 10             	mov    (%rax),%rdx
    efa3:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    efaa:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
    efb1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    efb5:	48 89 c7             	mov    %rax,%rdi
    efb8:	e8 21 36 00 00       	call   125de <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    efbd:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    efc4:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    efcb:	48 8b 40 50          	mov    0x50(%rax),%rax
    efcf:	ba 00 00 00 00       	mov    $0x0,%edx
    efd4:	48 89 ce             	mov    %rcx,%rsi
    efd7:	48 89 c7             	mov    %rax,%rdi
    efda:	e8 bb 7c ff ff       	call   6c9a <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    efdf:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    efe6:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    efed:	48 8b 40 50          	mov    0x50(%rax),%rax
    eff1:	ba 00 00 00 00       	mov    $0x0,%edx
    eff6:	48 89 ce             	mov    %rcx,%rsi
    eff9:	48 89 c7             	mov    %rax,%rdi
    effc:	e8 99 7c ff ff       	call   6c9a <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    f001:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    f008:	48 89 c7             	mov    %rax,%rdi
    f00b:	e8 42 34 00 00       	call   12452 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    f010:	e9 99 00 00 00       	jmp    f0ae <_ZN9VulkanApp22createGraphicsPipelineEv+0xc00>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    f015:	48 89 c3             	mov    %rax,%rbx
    f018:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    f01f:	48 89 c7             	mov    %rax,%rdi
    f022:	e8 19 52 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f027:	eb 03                	jmp    f02c <_ZN9VulkanApp22createGraphicsPipelineEv+0xb7e>
    f029:	48 89 c3             	mov    %rax,%rbx
    f02c:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    f033:	48 89 c7             	mov    %rax,%rdi
    f036:	e8 65 54 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    f03b:	48 89 d8             	mov    %rbx,%rax
    f03e:	48 89 c7             	mov    %rax,%rdi
    f041:	e8 ba 57 ff ff       	call   4800 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    f046:	48 89 c3             	mov    %rax,%rbx
    f049:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    f050:	48 89 c7             	mov    %rax,%rdi
    f053:	e8 e8 51 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f058:	eb 03                	jmp    f05d <_ZN9VulkanApp22createGraphicsPipelineEv+0xbaf>
    f05a:	48 89 c3             	mov    %rax,%rbx
    f05d:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    f064:	48 89 c7             	mov    %rax,%rdi
    f067:	e8 34 54 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
    f06c:	48 89 d8             	mov    %rbx,%rax
    f06f:	48 89 c7             	mov    %rax,%rdi
    f072:	e8 89 57 ff ff       	call   4800 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    f077:	48 89 c3             	mov    %rax,%rbx
    f07a:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f07e:	48 89 c7             	mov    %rax,%rdi
    f081:	e8 28 33 00 00       	call   123ae <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    f086:	48 89 d8             	mov    %rbx,%rax
    f089:	48 89 c7             	mov    %rax,%rdi
    f08c:	e8 6f 57 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    f091:	48 89 c3             	mov    %rax,%rbx
    f094:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    f09b:	48 89 c7             	mov    %rax,%rdi
    f09e:	e8 af 33 00 00       	call   12452 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    f0a3:	48 89 d8             	mov    %rbx,%rax
    f0a6:	48 89 c7             	mov    %rax,%rdi
    f0a9:	e8 52 57 ff ff       	call   4800 <_Unwind_Resume@plt>
    f0ae:	48 81 c4 48 05 00 00 	add    $0x548,%rsp
    f0b5:	5b                   	pop    %rbx
    f0b6:	41 5c                	pop    %r12
    f0b8:	41 5d                	pop    %r13
    f0ba:	5d                   	pop    %rbp
    f0bb:	c3                   	ret

000000000000f0bc <_ZN9VulkanApp18createFramebuffersEv>:

void VulkanApp::createFramebuffers() {
    f0bc:	55                   	push   %rbp
    f0bd:	48 89 e5             	mov    %rsp,%rbp
    f0c0:	41 55                	push   %r13
    f0c2:	41 54                	push   %r12
    f0c4:	53                   	push   %rbx
    f0c5:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    f0cc:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
    f0d3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f0da:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
    f0e1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f0e8:	48 05 a8 00 00 00    	add    $0xa8,%rax
    f0ee:	48 89 c7             	mov    %rax,%rdi
    f0f1:	e8 4c 35 00 00       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f0f6:	48 89 c6             	mov    %rax,%rsi
    f0f9:	48 89 df             	mov    %rbx,%rdi
    f0fc:	e8 65 35 00 00       	call   12666 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    f101:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    f108:	00 
    f109:	e9 3a 01 00 00       	jmp    f248 <_ZN9VulkanApp18createFramebuffersEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
    f10e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f115:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    f11c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f120:	48 89 c6             	mov    %rax,%rsi
    f123:	48 89 d7             	mov    %rdx,%rdi
    f126:	e8 47 32 00 00       	call   12372 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    f12b:	48 8b 00             	mov    (%rax),%rax
    f12e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f132:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f136:	49 89 c4             	mov    %rax,%r12
    f139:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    f13f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f143:	48 89 c7             	mov    %rax,%rdi
    f146:	e8 a1 35 00 00       	call   126ec <_ZNSaIP13VkImageView_TEC1Ev>
    f14b:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    f14f:	4c 89 e6             	mov    %r12,%rsi
    f152:	4c 89 ef             	mov    %r13,%rdi
    f155:	4c 89 e1             	mov    %r12,%rcx
    f158:	4c 89 eb             	mov    %r13,%rbx
    f15b:	48 89 df             	mov    %rbx,%rdi
    f15e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f162:	48 89 d1             	mov    %rdx,%rcx
    f165:	48 89 fa             	mov    %rdi,%rdx
    f168:	48 89 c7             	mov    %rax,%rdi
    f16b:	e8 b4 35 00 00       	call   12724 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f170:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f174:	48 89 c7             	mov    %rax,%rdi
    f177:	e8 8c 35 00 00       	call   12708 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
    f17c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f180:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    f187:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    f18b:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f18f:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    f193:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
    f19a:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
    f19d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f1a4:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    f1ab:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
    f1af:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f1b3:	48 89 c7             	mov    %rax,%rdi
    f1b6:	e8 87 34 00 00       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f1bb:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
    f1be:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f1c2:	48 89 c7             	mov    %rax,%rdi
    f1c5:	e8 26 36 00 00       	call   127f0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
    f1ca:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
    f1ce:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f1d5:	8b 40 7c             	mov    0x7c(%rax),%eax
    f1d8:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
    f1db:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f1e2:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    f1e8:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
    f1eb:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
    f1f2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f1f9:	48 8b 40 50          	mov    0x50(%rax),%rax
    f1fd:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    f204:	ba 00 00 00 00       	mov    $0x0,%edx
    f209:	48 89 ce             	mov    %rcx,%rsi
    f20c:	48 89 c7             	mov    %rax,%rdi
    f20f:	e8 1d 6e ff ff       	call   6031 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
    f214:	48 89 c3             	mov    %rax,%rbx
    f217:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f21e:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    f225:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f229:	48 89 c6             	mov    %rax,%rsi
    f22c:	48 89 d7             	mov    %rdx,%rdi
    f22f:	e8 e0 35 00 00       	call   12814 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    f234:	48 89 18             	mov    %rbx,(%rax)
  }
    f237:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f23b:	48 89 c7             	mov    %rax,%rdi
    f23e:	e8 69 35 00 00       	call   127ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    f243:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    f248:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f24f:	48 05 a8 00 00 00    	add    $0xa8,%rax
    f255:	48 89 c7             	mov    %rax,%rdi
    f258:	e8 e5 33 00 00       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f25d:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    f261:	0f 92 c0             	setb   %al
    f264:	84 c0                	test   %al,%al
    f266:	0f 85 a2 fe ff ff    	jne    f10e <_ZN9VulkanApp18createFramebuffersEv+0x52>
}
    f26c:	eb 34                	jmp    f2a2 <_ZN9VulkanApp18createFramebuffersEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
    f26e:	48 89 c3             	mov    %rax,%rbx
    f271:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f275:	48 89 c7             	mov    %rax,%rdi
    f278:	e8 8b 34 00 00       	call   12708 <_ZNSaIP13VkImageView_TED1Ev>
    f27d:	48 89 d8             	mov    %rbx,%rax
    f280:	48 89 c7             	mov    %rax,%rdi
    f283:	e8 78 55 ff ff       	call   4800 <_Unwind_Resume@plt>
  }
    f288:	48 89 c3             	mov    %rax,%rbx
    f28b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f28f:	48 89 c7             	mov    %rax,%rdi
    f292:	e8 15 35 00 00       	call   127ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f297:	48 89 d8             	mov    %rbx,%rax
    f29a:	48 89 c7             	mov    %rax,%rdi
    f29d:	e8 5e 55 ff ff       	call   4800 <_Unwind_Resume@plt>
}
    f2a2:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    f2a9:	5b                   	pop    %rbx
    f2aa:	41 5c                	pop    %r12
    f2ac:	41 5d                	pop    %r13
    f2ae:	5d                   	pop    %rbp
    f2af:	c3                   	ret

000000000000f2b0 <_ZN9VulkanApp17recreateSwapchainEv>:

void VulkanApp::recreateSwapchain() {
    f2b0:	55                   	push   %rbp
    f2b1:	48 89 e5             	mov    %rsp,%rbp
    f2b4:	48 83 ec 20          	sub    $0x20,%rsp
    f2b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  int width = 0, heigth = 0;
    f2bc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    f2c3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &width, &heigth);
    f2ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2ce:	48 8b 00             	mov    (%rax),%rax
    f2d1:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f2d5:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    f2d9:	48 89 ce             	mov    %rcx,%rsi
    f2dc:	48 89 c7             	mov    %rax,%rdi
    f2df:	e8 4c 54 ff ff       	call   4730 <glfwGetFramebufferSize@plt>
  while (width == 0 || heigth == 0) {
    f2e4:	eb 1f                	jmp    f305 <_ZN9VulkanApp17recreateSwapchainEv+0x55>
    glfwGetFramebufferSize(window, &width, &heigth);
    f2e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2ea:	48 8b 00             	mov    (%rax),%rax
    f2ed:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f2f1:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    f2f5:	48 89 ce             	mov    %rcx,%rsi
    f2f8:	48 89 c7             	mov    %rax,%rdi
    f2fb:	e8 30 54 ff ff       	call   4730 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
    f300:	e8 0b 4f ff ff       	call   4210 <glfwWaitEvents@plt>
  while (width == 0 || heigth == 0) {
    f305:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f308:	85 c0                	test   %eax,%eax
    f30a:	74 da                	je     f2e6 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
    f30c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    f30f:	85 c0                	test   %eax,%eax
    f311:	74 d3                	je     f2e6 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
  }

  vkDeviceWaitIdle(device);
    f313:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f317:	48 8b 40 50          	mov    0x50(%rax),%rax
    f31b:	48 89 c7             	mov    %rax,%rdi
    f31e:	e8 8d 4d ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
  cleanupSwapchain();
    f323:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f327:	48 89 c7             	mov    %rax,%rdi
    f32a:	e8 33 00 00 00       	call   f362 <_ZN9VulkanApp16cleanupSwapchainEv>
  createSwapchain();
    f32f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f333:	48 89 c7             	mov    %rax,%rdi
    f336:	e8 81 ef ff ff       	call   e2bc <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    f33b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f33f:	48 89 c7             	mov    %rax,%rdi
    f342:	e8 bb ef ff ff       	call   e302 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    f347:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f34b:	48 89 c7             	mov    %rax,%rdi
    f34e:	e8 5b f1 ff ff       	call   e4ae <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
    f353:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f357:	48 89 c7             	mov    %rax,%rdi
    f35a:	e8 5d fd ff ff       	call   f0bc <_ZN9VulkanApp18createFramebuffersEv>
}
    f35f:	90                   	nop
    f360:	c9                   	leave
    f361:	c3                   	ret

000000000000f362 <_ZN9VulkanApp16cleanupSwapchainEv>:

void VulkanApp::cleanupSwapchain() {
    f362:	55                   	push   %rbp
    f363:	48 89 e5             	mov    %rsp,%rbp
    f366:	48 83 ec 50          	sub    $0x50,%rsp
    f36a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  for (auto &framebuffer : framebuffers) {
    f36e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f372:	48 05 00 01 00 00    	add    $0x100,%rax
    f378:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f37c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f380:	48 89 c7             	mov    %rax,%rdi
    f383:	e8 ac 34 00 00       	call   12834 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    f388:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f38c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f390:	48 89 c7             	mov    %rax,%rdi
    f393:	e8 c2 34 00 00       	call   1285a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    f398:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f39c:	eb 3b                	jmp    f3d9 <_ZN9VulkanApp16cleanupSwapchainEv+0x77>
    f39e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f3a2:	48 89 c7             	mov    %rax,%rdi
    f3a5:	e8 34 35 00 00       	call   128de <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    f3aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
    f3ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f3b2:	48 8b 08             	mov    (%rax),%rcx
    f3b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3b9:	48 8b 40 50          	mov    0x50(%rax),%rax
    f3bd:	ba 00 00 00 00       	mov    $0x0,%edx
    f3c2:	48 89 ce             	mov    %rcx,%rsi
    f3c5:	48 89 c7             	mov    %rax,%rdi
    f3c8:	e8 14 7a ff ff       	call   6de1 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    f3cd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f3d1:	48 89 c7             	mov    %rax,%rdi
    f3d4:	e8 e5 34 00 00       	call   128be <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    f3d9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f3dd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f3e1:	48 89 d6             	mov    %rdx,%rsi
    f3e4:	48 89 c7             	mov    %rax,%rdi
    f3e7:	e8 97 34 00 00       	call   12883 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f3ec:	84 c0                	test   %al,%al
    f3ee:	75 ae                	jne    f39e <_ZN9VulkanApp16cleanupSwapchainEv+0x3c>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
    f3f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3f4:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    f3fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3ff:	48 8b 40 50          	mov    0x50(%rax),%rax
    f403:	ba 00 00 00 00       	mov    $0x0,%edx
    f408:	48 89 ce             	mov    %rcx,%rsi
    f40b:	48 89 c7             	mov    %rax,%rdi
    f40e:	e8 11 79 ff ff       	call   6d24 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    f413:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f417:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
    f41e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f422:	48 8b 40 50          	mov    0x50(%rax),%rax
    f426:	ba 00 00 00 00       	mov    $0x0,%edx
    f42b:	48 89 ce             	mov    %rcx,%rsi
    f42e:	48 89 c7             	mov    %rax,%rdi
    f431:	e8 92 78 ff ff       	call   6cc8 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    f436:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f43a:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    f441:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f445:	48 8b 40 50          	mov    0x50(%rax),%rax
    f449:	ba 00 00 00 00       	mov    $0x0,%edx
    f44e:	48 89 ce             	mov    %rcx,%rsi
    f451:	48 89 c7             	mov    %rax,%rdi
    f454:	e8 9d 78 ff ff       	call   6cf6 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f459:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f45d:	48 05 a8 00 00 00    	add    $0xa8,%rax
    f463:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f467:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f46b:	48 89 c7             	mov    %rax,%rdi
    f46e:	e8 7d 34 00 00       	call   128f0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    f473:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f477:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f47b:	48 89 c7             	mov    %rax,%rdi
    f47e:	e8 93 34 00 00       	call   12916 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    f483:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f487:	eb 3b                	jmp    f4c4 <_ZN9VulkanApp16cleanupSwapchainEv+0x162>
    f489:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f48d:	48 89 c7             	mov    %rax,%rdi
    f490:	e8 05 35 00 00       	call   1299a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    f495:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
    f499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f49d:	48 8b 08             	mov    (%rax),%rcx
    f4a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4a4:	48 8b 40 50          	mov    0x50(%rax),%rax
    f4a8:	ba 00 00 00 00       	mov    $0x0,%edx
    f4ad:	48 89 ce             	mov    %rcx,%rsi
    f4b0:	48 89 c7             	mov    %rax,%rdi
    f4b3:	e8 b4 77 ff ff       	call   6c6c <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f4b8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f4bc:	48 89 c7             	mov    %rax,%rdi
    f4bf:	e8 b6 34 00 00       	call   1297a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    f4c4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f4c8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f4cc:	48 89 d6             	mov    %rdx,%rsi
    f4cf:	48 89 c7             	mov    %rax,%rdi
    f4d2:	e8 68 34 00 00       	call   1293f <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f4d7:	84 c0                	test   %al,%al
    f4d9:	75 ae                	jne    f489 <_ZN9VulkanApp16cleanupSwapchainEv+0x127>
  }
  vkh::destroySwapchain(device, swapchain.self);
    f4db:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4df:	48 8b 48 70          	mov    0x70(%rax),%rcx
    f4e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4e7:	48 8b 40 50          	mov    0x50(%rax),%rax
    f4eb:	ba 00 00 00 00       	mov    $0x0,%edx
    f4f0:	48 89 ce             	mov    %rcx,%rsi
    f4f3:	48 89 c7             	mov    %rax,%rdi
    f4f6:	e8 43 77 ff ff       	call   6c3e <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
}
    f4fb:	90                   	nop
    f4fc:	c9                   	leave
    f4fd:	c3                   	ret

000000000000f4fe <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>:

void VulkanApp::framebufferResizeCallback(GLFWwindow *windowInstance,
                                          [[maybe_unused]] int width,
                                          [[maybe_unused]] int height) {
    f4fe:	55                   	push   %rbp
    f4ff:	48 89 e5             	mov    %rsp,%rbp
    f502:	48 83 ec 20          	sub    $0x20,%rsp
    f506:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f50a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    f50d:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app =
      reinterpret_cast<VulkanApp *>(glfwGetWindowUserPointer(windowInstance));
    f510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f514:	48 89 c7             	mov    %rax,%rdi
    f517:	e8 04 51 ff ff       	call   4620 <glfwGetWindowUserPointer@plt>
    f51c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->framebufferResized = true;
    f520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f524:	c6 80 18 01 00 00 01 	movb   $0x1,0x118(%rax)
}
    f52b:	90                   	nop
    f52c:	c9                   	leave
    f52d:	c3                   	ret

000000000000f52e <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    f52e:	55                   	push   %rbp
    f52f:	48 89 e5             	mov    %rsp,%rbp
    f532:	48 83 ec 30          	sub    $0x30,%rsp
    f536:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    f53a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f53e:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    f542:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    f547:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    f54e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f555:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    f556:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    f55d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f561:	8b 40 68             	mov    0x68(%rax),%eax
    f564:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    f567:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f56b:	48 8b 40 50          	mov    0x50(%rax),%rax
    f56f:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    f573:	ba 00 00 00 00       	mov    $0x0,%edx
    f578:	48 89 ce             	mov    %rcx,%rsi
    f57b:	48 89 c7             	mov    %rax,%rdi
    f57e:	e8 46 6b ff ff       	call   60c9 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    f583:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f587:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
    f58e:	90                   	nop
    f58f:	c9                   	leave
    f590:	c3                   	ret
    f591:	90                   	nop

000000000000f592 <_ZN9VulkanApp19createCommandBufferEv>:

void VulkanApp::createCommandBuffer() {
    f592:	55                   	push   %rbp
    f593:	48 89 e5             	mov    %rsp,%rbp
    f596:	48 83 ec 50          	sub    $0x50,%rsp
    f59a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
    f59e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f5a2:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    f5a6:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    f5aa:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
    f5b1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5b5:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
    f5bc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    f5c0:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount =
      static_cast<uint32_t>(maxFramesInFlight);
    f5c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5cb:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  cmdBufferAllocInfo.commandBufferCount =
    f5d2:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffers = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
    f5d5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5d9:	48 8b 48 50          	mov    0x50(%rax),%rcx
    f5dd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f5e1:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f5e5:	48 89 ce             	mov    %rcx,%rsi
    f5e8:	48 89 c7             	mov    %rax,%rdi
    f5eb:	e8 8d 58 ff ff       	call   4e7d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
    f5f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5f4:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    f5fb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f5ff:	48 89 c6             	mov    %rax,%rsi
    f602:	48 89 d7             	mov    %rdx,%rdi
    f605:	e8 a2 33 00 00       	call   129ac <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>
    f60a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f60e:	48 89 c7             	mov    %rax,%rdi
    f611:	e8 5e 5b ff ff       	call   5174 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
    f616:	90                   	nop
    f617:	c9                   	leave
    f618:	c3                   	ret
    f619:	90                   	nop

000000000000f61a <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
    f61a:	55                   	push   %rbp
    f61b:	48 89 e5             	mov    %rsp,%rbp
    f61e:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    f625:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    f629:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    f62d:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  /* Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
    f633:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f637:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    f63b:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    f63f:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
    f646:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
    f64d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f654:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
    f655:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    f659:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f65d:	48 89 d6             	mov    %rdx,%rsi
    f660:	48 89 c7             	mov    %rax,%rdi
    f663:	e8 18 59 ff ff       	call   4f80 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
    f668:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f66c:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    f671:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f675:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    f67a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f67e:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    f683:	f3 0f 10 05 05 e8 00 	movss  0xe805(%rip),%xmm0        # 1de90 <_ZZN9VulkanApp6renderEvE11submitCount+0x390>
    f68a:	00 
    f68b:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
    f690:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f694:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f698:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    f69c:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    f6a0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    f6a4:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
    f6ab:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f6af:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    f6b6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
    f6ba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f6be:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    f6c5:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    f6cb:	48 89 c6             	mov    %rax,%rsi
    f6ce:	48 89 d7             	mov    %rdx,%rdi
    f6d1:	e8 3e 31 00 00       	call   12814 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    f6d6:	48 8b 00             	mov    (%rax),%rax
    f6d9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
    f6dd:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    f6e4:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
    f6eb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f6ef:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    f6f3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
    f6f7:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
    f6fe:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f702:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
    f706:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    f70a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f70e:	ba 00 00 00 00       	mov    $0x0,%edx
    f713:	48 89 ce             	mov    %rcx,%rsi
    f716:	48 89 c7             	mov    %rax,%rdi
    f719:	e8 52 4f ff ff       	call   4670 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
    f71e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f722:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
    f729:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f72d:	be 00 00 00 00       	mov    $0x0,%esi
    f732:	48 89 c7             	mov    %rax,%rdi
    f735:	e8 26 4c ff ff       	call   4360 <vkCmdBindPipeline@plt>

  static const uint32_t vertexCount = 3;
  static const uint32_t instanceCount = 1;
  static const uint32_t firstVertex = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDraw(cmdBuffer, vertexCount, instanceCount, firstVertex, firstInstance);
    f73a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f73e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f744:	b9 00 00 00 00       	mov    $0x0,%ecx
    f749:	ba 01 00 00 00       	mov    $0x1,%edx
    f74e:	be 03 00 00 00       	mov    $0x3,%esi
    f753:	48 89 c7             	mov    %rax,%rdi
    f756:	e8 25 51 ff ff       	call   4880 <vkCmdDraw@plt>

  /* End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
    f75b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f75f:	48 89 c7             	mov    %rax,%rdi
    f762:	e8 e9 48 ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
    f767:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f76b:	48 89 c7             	mov    %rax,%rdi
    f76e:	e8 97 58 ff ff       	call   500a <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
    f773:	90                   	nop
    f774:	c9                   	leave
    f775:	c3                   	ret

000000000000f776 <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
    f776:	55                   	push   %rbp
    f777:	48 89 e5             	mov    %rsp,%rbp
    f77a:	53                   	push   %rbx
    f77b:	48 83 ec 58          	sub    $0x58,%rsp
    f77f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
    f783:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f787:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    f78b:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    f790:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
    f797:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f79b:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    f79f:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    f7a4:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    f7ab:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  sync.imageAvailableSemaphore.resize(maxFramesInFlight);
    f7b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7b6:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
    f7bd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7c1:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    f7c8:	48 89 c6             	mov    %rax,%rsi
    f7cb:	48 89 d7             	mov    %rdx,%rdi
    f7ce:	e8 11 32 00 00       	call   129e4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.renderFinisedSemaphore.resize(maxFramesInFlight);
    f7d3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7d7:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
    f7de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7e2:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    f7e9:	48 89 c6             	mov    %rax,%rsi
    f7ec:	48 89 d7             	mov    %rdx,%rdi
    f7ef:	e8 f0 31 00 00       	call   129e4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.inFlightFence.resize(maxFramesInFlight);
    f7f4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7f8:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
    f7ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f803:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    f80a:	48 89 c6             	mov    %rax,%rsi
    f80d:	48 89 d7             	mov    %rdx,%rdi
    f810:	e8 55 32 00 00       	call   12a6a <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
    f815:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f81c:	00 
    f81d:	e9 b9 00 00 00       	jmp    f8db <_ZN9VulkanApp28createSynchronizationObjectsEv+0x165>
    sync.imageAvailableSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
    f822:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f826:	48 8b 40 50          	mov    0x50(%rax),%rax
    f82a:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    f82e:	ba 00 00 00 00       	mov    $0x0,%edx
    f833:	48 89 ce             	mov    %rcx,%rsi
    f836:	48 89 c7             	mov    %rax,%rdi
    f839:	e8 2b 69 ff ff       	call   6169 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
    f83e:	48 89 c3             	mov    %rax,%rbx
    sync.imageAvailableSemaphore[i] =
    f841:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f845:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
    f84c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f850:	48 89 c6             	mov    %rax,%rsi
    f853:	48 89 d7             	mov    %rdx,%rdi
    f856:	e8 95 32 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    f85b:	48 89 18             	mov    %rbx,(%rax)
    sync.renderFinisedSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
    f85e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f862:	48 8b 40 50          	mov    0x50(%rax),%rax
    f866:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    f86a:	ba 00 00 00 00       	mov    $0x0,%edx
    f86f:	48 89 ce             	mov    %rcx,%rsi
    f872:	48 89 c7             	mov    %rax,%rdi
    f875:	e8 ef 68 ff ff       	call   6169 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
    f87a:	48 89 c3             	mov    %rax,%rbx
    sync.renderFinisedSemaphore[i] =
    f87d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f881:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
    f888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f88c:	48 89 c6             	mov    %rax,%rsi
    f88f:	48 89 d7             	mov    %rdx,%rdi
    f892:	e8 59 32 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    f897:	48 89 18             	mov    %rbx,(%rax)
    sync.inFlightFence[i] = vkh::createFence(device, &fenceInfo);
    f89a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f89e:	48 8b 40 50          	mov    0x50(%rax),%rax
    f8a2:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    f8a6:	ba 00 00 00 00       	mov    $0x0,%edx
    f8ab:	48 89 ce             	mov    %rcx,%rsi
    f8ae:	48 89 c7             	mov    %rax,%rdi
    f8b1:	e8 4b 69 ff ff       	call   6201 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
    f8b6:	48 89 c3             	mov    %rax,%rbx
    f8b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f8bd:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
    f8c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8c8:	48 89 c6             	mov    %rax,%rsi
    f8cb:	48 89 d7             	mov    %rdx,%rdi
    f8ce:	e8 3d 32 00 00       	call   12b10 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    f8d3:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
    f8d6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    f8db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f8df:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    f8e6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    f8ea:	0f 82 32 ff ff ff    	jb     f822 <_ZN9VulkanApp28createSynchronizationObjectsEv+0xac>
  }
}
    f8f0:	90                   	nop
    f8f1:	90                   	nop
    f8f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f8f6:	c9                   	leave
    f8f7:	c3                   	ret

000000000000f8f8 <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
    f8f8:	55                   	push   %rbp
    f8f9:	48 89 e5             	mov    %rsp,%rbp
    f8fc:	41 57                	push   %r15
    f8fe:	41 56                	push   %r14
    f900:	41 55                	push   %r13
    f902:	41 54                	push   %r12
    f904:	53                   	push   %rbx
    f905:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
    f90c:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence[sync.currentFrame], VK_TRUE,
    f913:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f91a:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
    f921:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f928:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    f92f:	48 89 c6             	mov    %rax,%rsi
    f932:	48 89 d7             	mov    %rdx,%rdi
    f935:	e8 d6 31 00 00       	call   12b10 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    f93a:	48 89 c2             	mov    %rax,%rdx
    f93d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f944:	48 8b 40 50          	mov    0x50(%rax),%rax
    f948:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    f94f:	b9 01 00 00 00       	mov    $0x1,%ecx
    f954:	be 01 00 00 00       	mov    $0x1,%esi
    f959:	48 89 c7             	mov    %rax,%rdi
    f95c:	e8 9f 48 ff ff       	call   4200 <vkWaitForFences@plt>

  /* Acquire an image frome the swapchain */
  uint32_t imageIndex;
  VkResult result =
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
                            sync.imageAvailableSemaphore[sync.currentFrame],
    f961:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f968:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
    f96f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f976:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    f97d:	48 89 c6             	mov    %rax,%rsi
    f980:	48 89 d7             	mov    %rdx,%rdi
    f983:	e8 68 31 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
    f988:	48 8b 10             	mov    (%rax),%rdx
    f98b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f992:	48 8b 70 70          	mov    0x70(%rax),%rsi
    f996:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f99d:	48 8b 40 50          	mov    0x50(%rax),%rax
    f9a1:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
    f9a5:	49 89 c9             	mov    %rcx,%r9
    f9a8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f9ae:	48 89 d1             	mov    %rdx,%rcx
    f9b1:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    f9b8:	48 89 c7             	mov    %rax,%rdi
    f9bb:	e8 90 47 ff ff       	call   4150 <vkAcquireNextImageKHR@plt>
    f9c0:	89 45 cc             	mov    %eax,-0x34(%rbp)
                            VK_NULL_HANDLE, &imageIndex);
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR) {
    f9c3:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
    f9ca:	74 09                	je     f9d5 <_ZN9VulkanApp6renderEv+0xdd>
    f9cc:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    f9d3:	75 14                	jne    f9e9 <_ZN9VulkanApp6renderEv+0xf1>
    recreateSwapchain();
    f9d5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f9dc:	48 89 c7             	mov    %rax,%rdi
    f9df:	e8 cc f8 ff ff       	call   f2b0 <_ZN9VulkanApp17recreateSwapchainEv>
    throw std::runtime_error("Failed to present swapchain image.");
  }

  /* Set up the next frame */
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
}
    f9e4:	e9 f6 05 00 00       	jmp    ffdf <_ZN9VulkanApp6renderEv+0x6e7>
  } else if (result != VK_SUCCESS) {
    f9e9:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    f9ed:	74 3b                	je     fa2a <_ZN9VulkanApp6renderEv+0x132>
    throw std::runtime_error("Failed to acquire swapchain image.");
    f9ef:	bf 10 00 00 00       	mov    $0x10,%edi
    f9f4:	e8 a7 47 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    f9f9:	48 89 c3             	mov    %rax,%rbx
    f9fc:	48 8d 05 05 e1 00 00 	lea    0xe105(%rip),%rax        # 1db08 <_ZZN9VulkanApp6renderEvE11submitCount+0x8>
    fa03:	48 89 c6             	mov    %rax,%rsi
    fa06:	48 89 df             	mov    %rbx,%rdi
    fa09:	e8 12 47 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    fa0e:	48 8b 05 93 d5 01 00 	mov    0x1d593(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fa15:	48 89 c2             	mov    %rax,%rdx
    fa18:	48 8d 05 21 d3 01 00 	lea    0x1d321(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fa1f:	48 89 c6             	mov    %rax,%rsi
    fa22:	48 89 df             	mov    %rbx,%rdi
    fa25:	e8 76 4d ff ff       	call   47a0 <__cxa_throw@plt>
  vkResetFences(device, 1, &sync.inFlightFence[sync.currentFrame]);
    fa2a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fa31:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
    fa38:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fa3f:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fa46:	48 89 c6             	mov    %rax,%rsi
    fa49:	48 89 d7             	mov    %rdx,%rdi
    fa4c:	e8 bf 30 00 00       	call   12b10 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    fa51:	48 89 c2             	mov    %rax,%rdx
    fa54:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fa5b:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa5f:	be 01 00 00 00       	mov    $0x1,%esi
    fa64:	48 89 c7             	mov    %rax,%rdi
    fa67:	e8 84 4c ff ff       	call   46f0 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[sync.currentFrame], 0);
    fa6c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fa73:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    fa7a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fa81:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fa88:	48 89 c6             	mov    %rax,%rsi
    fa8b:	48 89 d7             	mov    %rdx,%rdi
    fa8e:	e8 9d 30 00 00       	call   12b30 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    fa93:	48 8b 00             	mov    (%rax),%rax
    fa96:	be 00 00 00 00       	mov    $0x0,%esi
    fa9b:	48 89 c7             	mov    %rax,%rdi
    fa9e:	e8 dd 4a ff ff       	call   4580 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[sync.currentFrame], imageIndex);
    faa3:	8b 5d a4             	mov    -0x5c(%rbp),%ebx
    faa6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    faad:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    fab4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fabb:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fac2:	48 89 c6             	mov    %rax,%rsi
    fac5:	48 89 d7             	mov    %rdx,%rdi
    fac8:	e8 63 30 00 00       	call   12b30 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    facd:	48 8b 08             	mov    (%rax),%rcx
    fad0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fad7:	89 da                	mov    %ebx,%edx
    fad9:	48 89 ce             	mov    %rcx,%rsi
    fadc:	48 89 c7             	mov    %rax,%rdi
    fadf:	e8 36 fb ff ff       	call   f61a <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>
      sync.imageAvailableSemaphore[sync.currentFrame]};
    fae4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    faeb:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
    faf2:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    faf9:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fb00:	48 89 c6             	mov    %rax,%rsi
    fb03:	48 89 d7             	mov    %rdx,%rdi
    fb06:	e8 e5 2f 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    fb0b:	48 8b 00             	mov    (%rax),%rax
    fb0e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    fb12:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    fb16:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    fb1d:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
    fb24:	01 00 00 00 
    fb28:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
    fb2c:	48 89 c7             	mov    %rax,%rdi
    fb2f:	e8 1c 30 00 00       	call   12b50 <_ZNSaIP13VkSemaphore_TEC1Ev>
    fb34:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
    fb38:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
    fb3f:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
    fb46:	48 89 ce             	mov    %rcx,%rsi
    fb49:	48 89 df             	mov    %rbx,%rdi
    fb4c:	48 89 df             	mov    %rbx,%rdi
    fb4f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fb53:	48 89 d1             	mov    %rdx,%rcx
    fb56:	48 89 fa             	mov    %rdi,%rdx
    fb59:	48 89 c7             	mov    %rax,%rdi
    fb5c:	e8 27 30 00 00       	call   12b88 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fb61:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
    fb65:	48 89 c7             	mov    %rax,%rdi
    fb68:	e8 ff 2f 00 00       	call   12b6c <_ZNSaIP13VkSemaphore_TED1Ev>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
    fb6d:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
    fb74:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    fb78:	49 89 c6             	mov    %rax,%r14
    fb7b:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    fb81:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    fb85:	48 89 c7             	mov    %rax,%rdi
    fb88:	e8 c7 30 00 00       	call   12c54 <_ZNSaIjEC1Ev>
    fb8d:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    fb91:	4c 89 f6             	mov    %r14,%rsi
    fb94:	4c 89 ff             	mov    %r15,%rdi
    fb97:	4c 89 f1             	mov    %r14,%rcx
    fb9a:	4c 89 fb             	mov    %r15,%rbx
    fb9d:	48 89 df             	mov    %rbx,%rdi
    fba0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fba7:	48 89 d1             	mov    %rdx,%rcx
    fbaa:	48 89 fa             	mov    %rdi,%rdx
    fbad:	48 89 c7             	mov    %rax,%rdi
    fbb0:	e8 bb 30 00 00       	call   12c70 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
    fbb5:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    fbb9:	48 89 c7             	mov    %rax,%rdi
    fbbc:	e8 f5 1c 00 00       	call   118b6 <_ZNSaIjED1Ev>
      sync.renderFinisedSemaphore[sync.currentFrame]};
    fbc1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fbc8:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
    fbcf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fbd6:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fbdd:	48 89 c6             	mov    %rax,%rsi
    fbe0:	48 89 d7             	mov    %rdx,%rdi
    fbe3:	e8 08 2f 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    fbe8:	48 8b 00             	mov    (%rax),%rax
    fbeb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    fbef:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fbf3:	49 89 c4             	mov    %rax,%r12
    fbf6:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    fbfc:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    fc00:	48 89 c7             	mov    %rax,%rdi
    fc03:	e8 48 2f 00 00       	call   12b50 <_ZNSaIP13VkSemaphore_TEC1Ev>
    fc08:	48 8d 55 cb          	lea    -0x35(%rbp),%rdx
    fc0c:	4c 89 e6             	mov    %r12,%rsi
    fc0f:	4c 89 ef             	mov    %r13,%rdi
    fc12:	4c 89 e1             	mov    %r12,%rcx
    fc15:	4c 89 eb             	mov    %r13,%rbx
    fc18:	48 89 df             	mov    %rbx,%rdi
    fc1b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fc22:	48 89 d1             	mov    %rdx,%rcx
    fc25:	48 89 fa             	mov    %rdi,%rdx
    fc28:	48 89 c7             	mov    %rax,%rdi
    fc2b:	e8 58 2f 00 00       	call   12b88 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fc30:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    fc34:	48 89 c7             	mov    %rax,%rdi
    fc37:	e8 30 2f 00 00       	call   12b6c <_ZNSaIP13VkSemaphore_TED1Ev>
  VkSubmitInfo submitInfo{};
    fc3c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fc40:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    fc47:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    fc4e:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    fc55:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    fc5c:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
    fc63:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    fc64:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
    fc6b:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
    fc6e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fc72:	48 89 c7             	mov    %rax,%rdi
    fc75:	e8 7e 30 00 00       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    fc7a:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
    fc80:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fc84:	48 89 c7             	mov    %rax,%rdi
    fc87:	e8 90 30 00 00       	call   12d1c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
    fc8c:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
    fc93:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fc9a:	48 89 c7             	mov    %rax,%rdi
    fc9d:	e8 9e 30 00 00       	call   12d40 <_ZNSt6vectorIjSaIjEE4dataEv>
    fca2:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = 1;
    fca9:	c7 85 18 ff ff ff 01 	movl   $0x1,-0xe8(%rbp)
    fcb0:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffers[sync.currentFrame];
    fcb3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fcba:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    fcc1:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fcc8:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fccf:	48 89 c6             	mov    %rax,%rsi
    fcd2:	48 89 d7             	mov    %rdx,%rdi
    fcd5:	e8 56 2e 00 00       	call   12b30 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    fcda:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
      static_cast<uint32_t>(signalSemaphores.size());
    fce1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fce8:	48 89 c7             	mov    %rax,%rdi
    fceb:	e8 08 30 00 00       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
    fcf0:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
    fcf6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fcfd:	48 89 c7             	mov    %rax,%rdi
    fd00:	e8 17 30 00 00       	call   12d1c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
    fd05:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
    fd0c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fd13:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
    fd1a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fd21:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fd28:	48 89 c6             	mov    %rax,%rsi
    fd2b:	48 89 d7             	mov    %rdx,%rdi
    fd2e:	e8 dd 2d 00 00       	call   12b10 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
    fd33:	48 8b 08             	mov    (%rax),%rcx
    fd36:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fd3d:	48 8b 40 60          	mov    0x60(%rax),%rax
    fd41:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    fd48:	be 01 00 00 00       	mov    $0x1,%esi
    fd4d:	48 89 c7             	mov    %rax,%rdi
    fd50:	e8 8b 48 ff ff       	call   45e0 <vkQueueSubmit@plt>
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
    fd55:	85 c0                	test   %eax,%eax
    fd57:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
    fd5a:	84 c0                	test   %al,%al
    fd5c:	74 3b                	je     fd99 <_ZN9VulkanApp6renderEv+0x4a1>
    throw std::runtime_error("Failed to submit draw command buffer.");
    fd5e:	bf 10 00 00 00       	mov    $0x10,%edi
    fd63:	e8 38 44 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    fd68:	48 89 c3             	mov    %rax,%rbx
    fd6b:	48 8d 05 be dd 00 00 	lea    0xddbe(%rip),%rax        # 1db30 <_ZZN9VulkanApp6renderEvE11submitCount+0x30>
    fd72:	48 89 c6             	mov    %rax,%rsi
    fd75:	48 89 df             	mov    %rbx,%rdi
    fd78:	e8 a3 43 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    fd7d:	48 8b 05 24 d2 01 00 	mov    0x1d224(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fd84:	48 89 c2             	mov    %rax,%rdx
    fd87:	48 8d 05 b2 cf 01 00 	lea    0x1cfb2(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fd8e:	48 89 c6             	mov    %rax,%rsi
    fd91:	48 89 df             	mov    %rbx,%rdi
    fd94:	e8 07 4a ff ff       	call   47a0 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
    fd99:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd9d:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    fda4:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
    fdab:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    fdb2:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
    fdb9:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
    fdc0:	cd 9a 3b 
      static_cast<uint32_t>(signalSemaphores.size());
    fdc3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fdca:	48 89 c7             	mov    %rax,%rdi
    fdcd:	e8 26 2f 00 00       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
    fdd2:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
    fdd8:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fddf:	48 89 c7             	mov    %rax,%rdi
    fde2:	e8 35 2f 00 00       	call   12d1c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
    fde7:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
    fdee:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fdf5:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
    fdfb:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
    fe01:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fe08:	48 83 c0 70          	add    $0x70,%rax
    fe0c:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
    fe13:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
    fe17:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
    fe1e:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
    fe25:	00 00 00 00 
  result = vkQueuePresentKHR(queue, &presentInfo);
    fe29:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fe30:	48 8b 40 60          	mov    0x60(%rax),%rax
    fe34:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
    fe3b:	48 89 d6             	mov    %rdx,%rsi
    fe3e:	48 89 c7             	mov    %rax,%rdi
    fe41:	e8 da 48 ff ff       	call   4720 <vkQueuePresentKHR@plt>
    fe46:	89 45 cc             	mov    %eax,-0x34(%rbp)
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
    fe49:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
    fe50:	74 1b                	je     fe6d <_ZN9VulkanApp6renderEv+0x575>
    fe52:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    fe59:	74 12                	je     fe6d <_ZN9VulkanApp6renderEv+0x575>
      framebufferResized) {
    fe5b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fe62:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
    fe69:	84 c0                	test   %al,%al
    fe6b:	74 1f                	je     fe8c <_ZN9VulkanApp6renderEv+0x594>
    framebufferResized = false;
    fe6d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fe74:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
    recreateSwapchain();
    fe7b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fe82:	48 89 c7             	mov    %rax,%rdi
    fe85:	e8 26 f4 ff ff       	call   f2b0 <_ZN9VulkanApp17recreateSwapchainEv>
    fe8a:	eb 41                	jmp    fecd <_ZN9VulkanApp6renderEv+0x5d5>
  } else if (result != VK_SUCCESS) {
    fe8c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    fe90:	74 3b                	je     fecd <_ZN9VulkanApp6renderEv+0x5d5>
    throw std::runtime_error("Failed to present swapchain image.");
    fe92:	bf 10 00 00 00       	mov    $0x10,%edi
    fe97:	e8 04 43 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    fe9c:	48 89 c3             	mov    %rax,%rbx
    fe9f:	48 8d 05 b2 dc 00 00 	lea    0xdcb2(%rip),%rax        # 1db58 <_ZZN9VulkanApp6renderEvE11submitCount+0x58>
    fea6:	48 89 c6             	mov    %rax,%rsi
    fea9:	48 89 df             	mov    %rbx,%rdi
    feac:	e8 6f 42 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    feb1:	48 8b 05 f0 d0 01 00 	mov    0x1d0f0(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    feb8:	48 89 c2             	mov    %rax,%rdx
    febb:	48 8d 05 7e ce 01 00 	lea    0x1ce7e(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fec2:	48 89 c6             	mov    %rax,%rsi
    fec5:	48 89 df             	mov    %rbx,%rdi
    fec8:	e8 d3 48 ff ff       	call   47a0 <__cxa_throw@plt>
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
    fecd:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fed4:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    fedb:	48 8d 50 01          	lea    0x1(%rax),%rdx
    fedf:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    fee6:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
    feed:	48 89 d0             	mov    %rdx,%rax
    fef0:	ba 00 00 00 00       	mov    $0x0,%edx
    fef5:	48 f7 f1             	div    %rcx
    fef8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    feff:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
}
    ff06:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ff0d:	48 89 c7             	mov    %rax,%rdi
    ff10:	e8 fb 2c 00 00       	call   12c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    ff15:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ff1c:	48 89 c7             	mov    %rax,%rdi
    ff1f:	e8 fc 19 00 00       	call   11920 <_ZNSt6vectorIjSaIjEED1Ev>
    ff24:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ff28:	48 89 c7             	mov    %rax,%rdi
    ff2b:	e8 e0 2c 00 00       	call   12c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    ff30:	e9 aa 00 00 00       	jmp    ffdf <_ZN9VulkanApp6renderEv+0x6e7>
    throw std::runtime_error("Failed to acquire swapchain image.");
    ff35:	49 89 c4             	mov    %rax,%r12
    ff38:	48 89 df             	mov    %rbx,%rdi
    ff3b:	e8 60 43 ff ff       	call   42a0 <__cxa_free_exception@plt>
    ff40:	4c 89 e0             	mov    %r12,%rax
    ff43:	48 89 c7             	mov    %rax,%rdi
    ff46:	e8 b5 48 ff ff       	call   4800 <_Unwind_Resume@plt>
      sync.imageAvailableSemaphore[sync.currentFrame]};
    ff4b:	48 89 c3             	mov    %rax,%rbx
    ff4e:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
    ff52:	48 89 c7             	mov    %rax,%rdi
    ff55:	e8 12 2c 00 00       	call   12b6c <_ZNSaIP13VkSemaphore_TED1Ev>
    ff5a:	48 89 d8             	mov    %rbx,%rax
    ff5d:	48 89 c7             	mov    %rax,%rdi
    ff60:	e8 9b 48 ff ff       	call   4800 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
    ff65:	48 89 c3             	mov    %rax,%rbx
    ff68:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ff6c:	48 89 c7             	mov    %rax,%rdi
    ff6f:	e8 42 19 00 00       	call   118b6 <_ZNSaIjED1Ev>
    ff74:	eb 52                	jmp    ffc8 <_ZN9VulkanApp6renderEv+0x6d0>
      sync.renderFinisedSemaphore[sync.currentFrame]};
    ff76:	48 89 c3             	mov    %rax,%rbx
    ff79:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    ff7d:	48 89 c7             	mov    %rax,%rdi
    ff80:	e8 e7 2b 00 00       	call   12b6c <_ZNSaIP13VkSemaphore_TED1Ev>
    ff85:	eb 32                	jmp    ffb9 <_ZN9VulkanApp6renderEv+0x6c1>
    throw std::runtime_error("Failed to submit draw command buffer.");
    ff87:	49 89 c4             	mov    %rax,%r12
    ff8a:	48 89 df             	mov    %rbx,%rdi
    ff8d:	e8 0e 43 ff ff       	call   42a0 <__cxa_free_exception@plt>
    ff92:	4c 89 e3             	mov    %r12,%rbx
    ff95:	eb 13                	jmp    ffaa <_ZN9VulkanApp6renderEv+0x6b2>
    throw std::runtime_error("Failed to present swapchain image.");
    ff97:	49 89 c4             	mov    %rax,%r12
    ff9a:	48 89 df             	mov    %rbx,%rdi
    ff9d:	e8 fe 42 ff ff       	call   42a0 <__cxa_free_exception@plt>
    ffa2:	4c 89 e3             	mov    %r12,%rbx
    ffa5:	eb 03                	jmp    ffaa <_ZN9VulkanApp6renderEv+0x6b2>
}
    ffa7:	48 89 c3             	mov    %rax,%rbx
    ffaa:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ffb1:	48 89 c7             	mov    %rax,%rdi
    ffb4:	e8 57 2c 00 00       	call   12c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    ffb9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ffc0:	48 89 c7             	mov    %rax,%rdi
    ffc3:	e8 58 19 00 00       	call   11920 <_ZNSt6vectorIjSaIjEED1Ev>
    ffc8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ffcc:	48 89 c7             	mov    %rax,%rdi
    ffcf:	e8 3c 2c 00 00       	call   12c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    ffd4:	48 89 d8             	mov    %rbx,%rax
    ffd7:	48 89 c7             	mov    %rax,%rdi
    ffda:	e8 21 48 ff ff       	call   4800 <_Unwind_Resume@plt>
    ffdf:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
    ffe6:	5b                   	pop    %rbx
    ffe7:	41 5c                	pop    %r12
    ffe9:	41 5d                	pop    %r13
    ffeb:	41 5e                	pop    %r14
    ffed:	41 5f                	pop    %r15
    ffef:	5d                   	pop    %rbp
    fff0:	c3                   	ret
    fff1:	90                   	nop

000000000000fff2 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    fff2:	55                   	push   %rbp
    fff3:	48 89 e5             	mov    %rsp,%rbp
    fff6:	41 57                	push   %r15
    fff8:	41 56                	push   %r14
    fffa:	41 55                	push   %r13
    fffc:	41 54                	push   %r12
    fffe:	53                   	push   %rbx
    ffff:	48 83 ec 38          	sub    $0x38,%rsp
   10003:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10007:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1000b:	48 8d 58 10          	lea    0x10(%rax),%rbx
   1000f:	48 8d 05 65 db 00 00 	lea    0xdb65(%rip),%rax        # 1db7b <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   10016:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1001a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1001e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10022:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
   10029:	00 
   1002a:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   1002e:	48 89 c7             	mov    %rax,%rdi
   10031:	e8 9e 83 ff ff       	call   83d4 <_ZNSaIPKcEC1Ev>
   10036:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   1003a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   1003e:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   10042:	49 89 f0             	mov    %rsi,%r8
   10045:	49 89 f9             	mov    %rdi,%r9
   10048:	48 89 fa             	mov    %rdi,%rdx
   1004b:	48 89 c1             	mov    %rax,%rcx
   1004e:	4c 89 c6             	mov    %r8,%rsi
   10051:	48 89 df             	mov    %rbx,%rdi
   10054:	e8 0b 19 00 00       	call   11964 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10059:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   1005d:	48 89 c7             	mov    %rax,%rdi
   10060:	e8 8b 83 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
   10065:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10069:	48 8d 58 28          	lea    0x28(%rax),%rbx
   1006d:	4c 8d 35 6c cc 01 00 	lea    0x1cc6c(%rip),%r14        # 2cce0 <C.144.0>
   10074:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   1007a:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   1007e:	48 89 c7             	mov    %rax,%rdi
   10081:	e8 4e 83 ff ff       	call   83d4 <_ZNSaIPKcEC1Ev>
   10086:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   1008a:	4d 89 f0             	mov    %r14,%r8
   1008d:	4d 89 f9             	mov    %r15,%r9
   10090:	4c 89 f6             	mov    %r14,%rsi
   10093:	4c 89 ff             	mov    %r15,%rdi
   10096:	48 89 fa             	mov    %rdi,%rdx
   10099:	48 89 c1             	mov    %rax,%rcx
   1009c:	4c 89 c6             	mov    %r8,%rsi
   1009f:	48 89 df             	mov    %rbx,%rdi
   100a2:	e8 bd 18 00 00       	call   11964 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   100a7:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   100ab:	48 89 c7             	mov    %rax,%rdi
   100ae:	e8 3d 83 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
   100b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   100b7:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%rax)
   100be:	00 00 00 
   100c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   100c5:	c7 80 8c 00 00 00 01 	movl   $0x1,0x8c(%rax)
   100cc:	00 00 00 
   100cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   100d3:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
   100da:	4c 8d 25 0f cc 01 00 	lea    0x1cc0f(%rip),%r12        # 2ccf0 <C.145.1>
   100e1:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   100e7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   100eb:	48 89 c7             	mov    %rax,%rdi
   100ee:	e8 e1 82 ff ff       	call   83d4 <_ZNSaIPKcEC1Ev>
   100f3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   100f7:	4d 89 e0             	mov    %r12,%r8
   100fa:	4d 89 e9             	mov    %r13,%r9
   100fd:	4c 89 e6             	mov    %r12,%rsi
   10100:	4c 89 ef             	mov    %r13,%rdi
   10103:	48 89 fa             	mov    %rdi,%rdx
   10106:	48 89 c1             	mov    %rax,%rcx
   10109:	4c 89 c6             	mov    %r8,%rsi
   1010c:	48 89 df             	mov    %rbx,%rdi
   1010f:	e8 50 18 00 00       	call   11964 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   10114:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10118:	48 89 c7             	mov    %rax,%rdi
   1011b:	e8 d0 82 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
   10120:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10124:	48 05 a8 00 00 00    	add    $0xa8,%rax
   1012a:	48 89 c7             	mov    %rax,%rdi
   1012d:	e8 3e 15 00 00       	call   11670 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
   10132:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10136:	48 05 c0 00 00 00    	add    $0xc0,%rax
   1013c:	48 89 c7             	mov    %rax,%rdi
   1013f:	e8 64 15 00 00       	call   116a8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
   10144:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10148:	48 05 d8 00 00 00    	add    $0xd8,%rax
   1014e:	48 89 c7             	mov    %rax,%rdi
   10151:	e8 6e 15 00 00       	call   116c4 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
   10156:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1015a:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
   10161:	00 00 00 
   10164:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10168:	48 05 00 01 00 00    	add    $0x100,%rax
   1016e:	48 89 c7             	mov    %rax,%rdi
   10171:	e8 c0 15 00 00       	call   11736 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
   10176:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1017a:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
   10181:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10185:	48 c7 80 20 01 00 00 	movq   $0x2,0x120(%rax)
   1018c:	02 00 00 00 
   10190:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10194:	48 05 28 01 00 00    	add    $0x128,%rax
   1019a:	48 89 c7             	mov    %rax,%rdi
   1019d:	e8 cc 15 00 00       	call   1176e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   101a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101a6:	48 05 48 01 00 00    	add    $0x148,%rax
   101ac:	48 89 c7             	mov    %rax,%rdi
   101af:	e8 7e 16 00 00       	call   11832 <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
   101b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101b8:	48 89 c7             	mov    %rax,%rdi
   101bb:	e8 9e cf ff ff       	call   d15e <_ZN9VulkanApp12createWindowEv>
  createInstance();
   101c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101c4:	48 89 c7             	mov    %rax,%rdi
   101c7:	e8 00 d0 ff ff       	call   d1cc <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
   101cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101d0:	48 89 c7             	mov    %rax,%rdi
   101d3:	e8 da d1 ff ff       	call   d3b2 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
   101d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101dc:	48 89 c7             	mov    %rax,%rdi
   101df:	e8 62 d2 ff ff       	call   d446 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
   101e4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101e8:	48 89 c7             	mov    %rax,%rdi
   101eb:	e8 ae d4 ff ff       	call   d69e <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
   101f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   101f4:	48 89 c7             	mov    %rax,%rdi
   101f7:	e8 c0 e0 ff ff       	call   e2bc <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   101fc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10200:	48 89 c7             	mov    %rax,%rdi
   10203:	e8 fa e0 ff ff       	call   e302 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   10208:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1020c:	48 89 c7             	mov    %rax,%rdi
   1020f:	e8 9a e2 ff ff       	call   e4ae <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   10214:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10218:	48 89 c7             	mov    %rax,%rdi
   1021b:	e8 9c ee ff ff       	call   f0bc <_ZN9VulkanApp18createFramebuffersEv>
  createCommandPool();
   10220:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10224:	48 89 c7             	mov    %rax,%rdi
   10227:	e8 02 f3 ff ff       	call   f52e <_ZN9VulkanApp17createCommandPoolEv>
  createCommandBuffer();
   1022c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10230:	48 89 c7             	mov    %rax,%rdi
   10233:	e8 5a f3 ff ff       	call   f592 <_ZN9VulkanApp19createCommandBufferEv>
  createSynchronizationObjects();
   10238:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1023c:	48 89 c7             	mov    %rax,%rdi
   1023f:	e8 32 f5 ff ff       	call   f776 <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
   10244:	e9 d9 00 00 00       	jmp    10322 <_ZN9VulkanAppC1Ev+0x330>
VulkanApp::VulkanApp() {
   10249:	48 89 c3             	mov    %rax,%rbx
   1024c:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   10250:	48 89 c7             	mov    %rax,%rdi
   10253:	e8 98 81 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
   10258:	48 89 d8             	mov    %rbx,%rax
   1025b:	48 89 c7             	mov    %rax,%rdi
   1025e:	e8 9d 45 ff ff       	call   4800 <_Unwind_Resume@plt>
   10263:	48 89 c3             	mov    %rax,%rbx
   10266:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   1026a:	48 89 c7             	mov    %rax,%rdi
   1026d:	e8 7e 81 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
   10272:	e9 90 00 00 00       	jmp    10307 <_ZN9VulkanAppC1Ev+0x315>
   10277:	48 89 c3             	mov    %rax,%rbx
   1027a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1027e:	48 89 c7             	mov    %rax,%rdi
   10281:	e8 6a 81 ff ff       	call   83f0 <_ZNSaIPKcED1Ev>
   10286:	eb 6f                	jmp    102f7 <_ZN9VulkanAppC1Ev+0x305>
}
   10288:	48 89 c3             	mov    %rax,%rbx
   1028b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1028f:	48 05 48 01 00 00    	add    $0x148,%rax
   10295:	48 89 c7             	mov    %rax,%rdi
   10298:	e8 dd 15 00 00       	call   1187a <_ZN9VulkanApp11SyncWrapperD1Ev>
   1029d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102a1:	48 05 28 01 00 00    	add    $0x128,%rax
   102a7:	48 89 c7             	mov    %rax,%rdi
   102aa:	e8 c5 4e ff ff       	call   5174 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   102af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102b3:	48 05 00 01 00 00    	add    $0x100,%rax
   102b9:	48 89 c7             	mov    %rax,%rdi
   102bc:	e8 d3 2b 00 00       	call   12e94 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   102c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102c5:	48 05 c0 00 00 00    	add    $0xc0,%rax
   102cb:	48 89 c7             	mov    %rax,%rdi
   102ce:	e8 43 8b ff ff       	call   8e16 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   102d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102d7:	48 05 a8 00 00 00    	add    $0xa8,%rax
   102dd:	48 89 c7             	mov    %rax,%rdi
   102e0:	e8 c7 24 00 00       	call   127ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   102e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102e9:	48 05 90 00 00 00    	add    $0x90,%rax
   102ef:	48 89 c7             	mov    %rax,%rdi
   102f2:	e8 f5 16 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
   102f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   102fb:	48 83 c0 28          	add    $0x28,%rax
}
   102ff:	48 89 c7             	mov    %rax,%rdi
   10302:	e8 e5 16 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   10307:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1030b:	48 83 c0 10          	add    $0x10,%rax
   1030f:	48 89 c7             	mov    %rax,%rdi
   10312:	e8 d5 16 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   10317:	48 89 d8             	mov    %rbx,%rax
   1031a:	48 89 c7             	mov    %rax,%rdi
   1031d:	e8 de 44 ff ff       	call   4800 <_Unwind_Resume@plt>
   10322:	48 83 c4 38          	add    $0x38,%rsp
   10326:	5b                   	pop    %rbx
   10327:	41 5c                	pop    %r12
   10329:	41 5d                	pop    %r13
   1032b:	41 5e                	pop    %r14
   1032d:	41 5f                	pop    %r15
   1032f:	5d                   	pop    %rbp
   10330:	c3                   	ret
   10331:	90                   	nop

0000000000010332 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
   10332:	55                   	push   %rbp
   10333:	48 89 e5             	mov    %rsp,%rbp
   10336:	48 83 ec 20          	sub    $0x20,%rsp
   1033a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1033e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   10345:	00 
   10346:	e9 a4 00 00 00       	jmp    103ef <_ZN9VulkanAppD1Ev+0xbd>
    vkh::destroySemaphore(device, sync.imageAvailableSemaphore[i]);
   1034b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1034f:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   10356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1035a:	48 89 c6             	mov    %rax,%rsi
   1035d:	48 89 d7             	mov    %rdx,%rdi
   10360:	e8 8b 27 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   10365:	48 8b 08             	mov    (%rax),%rcx
   10368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1036c:	48 8b 40 50          	mov    0x50(%rax),%rax
   10370:	ba 00 00 00 00       	mov    $0x0,%edx
   10375:	48 89 ce             	mov    %rcx,%rsi
   10378:	48 89 c7             	mov    %rax,%rdi
   1037b:	e8 bd 6a ff ff       	call   6e3d <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroySemaphore(device, sync.renderFinisedSemaphore[i]);
   10380:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10384:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   1038b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1038f:	48 89 c6             	mov    %rax,%rsi
   10392:	48 89 d7             	mov    %rdx,%rdi
   10395:	e8 56 27 00 00       	call   12af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1039a:	48 8b 08             	mov    (%rax),%rcx
   1039d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103a1:	48 8b 40 50          	mov    0x50(%rax),%rax
   103a5:	ba 00 00 00 00       	mov    $0x0,%edx
   103aa:	48 89 ce             	mov    %rcx,%rsi
   103ad:	48 89 c7             	mov    %rax,%rdi
   103b0:	e8 88 6a ff ff       	call   6e3d <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroyFence(device, sync.inFlightFence[i]);
   103b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103b9:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   103c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103c4:	48 89 c6             	mov    %rax,%rsi
   103c7:	48 89 d7             	mov    %rdx,%rdi
   103ca:	e8 41 27 00 00       	call   12b10 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   103cf:	48 8b 08             	mov    (%rax),%rcx
   103d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103d6:	48 8b 40 50          	mov    0x50(%rax),%rax
   103da:	ba 00 00 00 00       	mov    $0x0,%edx
   103df:	48 89 ce             	mov    %rcx,%rsi
   103e2:	48 89 c7             	mov    %rax,%rdi
   103e5:	e8 81 6a ff ff       	call   6e6b <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   103ea:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   103ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103f3:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   103fa:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   103fe:	0f 82 47 ff ff ff    	jb     1034b <_ZN9VulkanAppD1Ev+0x19>
  }
  vkh::destroyCommandPool(device, commandPool);
   10404:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10408:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
   1040f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10413:	48 8b 40 50          	mov    0x50(%rax),%rax
   10417:	ba 00 00 00 00       	mov    $0x0,%edx
   1041c:	48 89 ce             	mov    %rcx,%rsi
   1041f:	48 89 c7             	mov    %rax,%rdi
   10422:	e8 e8 69 ff ff       	call   6e0f <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  cleanupSwapchain();
   10427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1042b:	48 89 c7             	mov    %rax,%rdi
   1042e:	e8 2f ef ff ff       	call   f362 <_ZN9VulkanApp16cleanupSwapchainEv>
  vkh::destroyDevice(device);
   10433:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10437:	48 8b 40 50          	mov    0x50(%rax),%rax
   1043b:	be 00 00 00 00       	mov    $0x0,%esi
   10440:	48 89 c7             	mov    %rax,%rdi
   10443:	e8 a2 67 ff ff       	call   6bea <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
   10448:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1044c:	48 8b 48 40          	mov    0x40(%rax),%rcx
   10450:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10454:	48 8b 40 08          	mov    0x8(%rax),%rax
   10458:	ba 00 00 00 00       	mov    $0x0,%edx
   1045d:	48 89 ce             	mov    %rcx,%rsi
   10460:	48 89 c7             	mov    %rax,%rdi
   10463:	e8 8d c8 ff ff       	call   ccf5 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
   10468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1046c:	48 8b 48 48          	mov    0x48(%rax),%rcx
   10470:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10474:	48 8b 40 08          	mov    0x8(%rax),%rax
   10478:	ba 00 00 00 00       	mov    $0x0,%edx
   1047d:	48 89 ce             	mov    %rcx,%rsi
   10480:	48 89 c7             	mov    %rax,%rdi
   10483:	e8 88 67 ff ff       	call   6c10 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
   10488:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1048c:	48 8b 40 08          	mov    0x8(%rax),%rax
   10490:	be 00 00 00 00       	mov    $0x0,%esi
   10495:	48 89 c7             	mov    %rax,%rdi
   10498:	e8 27 67 ff ff       	call   6bc4 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
   1049d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104a1:	48 8b 00             	mov    (%rax),%rax
   104a4:	48 89 c7             	mov    %rax,%rdi
   104a7:	e8 fd 66 ff ff       	call   6ba9 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
   104ac:	e8 7f 3f ff ff       	call   4430 <glfwTerminate@plt>
}
   104b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104b5:	48 05 48 01 00 00    	add    $0x148,%rax
   104bb:	48 89 c7             	mov    %rax,%rdi
   104be:	e8 b7 13 00 00       	call   1187a <_ZN9VulkanApp11SyncWrapperD1Ev>
   104c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104c7:	48 05 28 01 00 00    	add    $0x128,%rax
   104cd:	48 89 c7             	mov    %rax,%rdi
   104d0:	e8 9f 4c ff ff       	call   5174 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   104d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104d9:	48 05 00 01 00 00    	add    $0x100,%rax
   104df:	48 89 c7             	mov    %rax,%rdi
   104e2:	e8 ad 29 00 00       	call   12e94 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   104e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104eb:	48 05 c0 00 00 00    	add    $0xc0,%rax
   104f1:	48 89 c7             	mov    %rax,%rdi
   104f4:	e8 1d 89 ff ff       	call   8e16 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   104f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104fd:	48 05 a8 00 00 00    	add    $0xa8,%rax
   10503:	48 89 c7             	mov    %rax,%rdi
   10506:	e8 a1 22 00 00       	call   127ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   1050b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1050f:	48 05 90 00 00 00    	add    $0x90,%rax
   10515:	48 89 c7             	mov    %rax,%rdi
   10518:	e8 cf 14 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
   1051d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10521:	48 83 c0 28          	add    $0x28,%rax
}
   10525:	48 89 c7             	mov    %rax,%rdi
   10528:	e8 bf 14 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   1052d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10531:	48 83 c0 10          	add    $0x10,%rax
   10535:	48 89 c7             	mov    %rax,%rdi
   10538:	e8 af 14 00 00       	call   119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   1053d:	90                   	nop
   1053e:	c9                   	leave
   1053f:	c3                   	ret

0000000000010540 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
   10540:	55                   	push   %rbp
   10541:	48 89 e5             	mov    %rsp,%rbp
   10544:	48 83 ec 10          	sub    $0x10,%rsp
   10548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
   1054c:	eb 11                	jmp    1055f <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
   1054e:	e8 6d 3e ff ff       	call   43c0 <glfwPollEvents@plt>
    render();
   10553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10557:	48 89 c7             	mov    %rax,%rdi
   1055a:	e8 99 f3 ff ff       	call   f8f8 <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   1055f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10563:	48 8b 00             	mov    (%rax),%rax
   10566:	48 89 c7             	mov    %rax,%rdi
   10569:	e8 e2 42 ff ff       	call   4850 <glfwWindowShouldClose@plt>
   1056e:	85 c0                	test   %eax,%eax
   10570:	0f 94 c0             	sete   %al
   10573:	84 c0                	test   %al,%al
   10575:	75 d7                	jne    1054e <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   10577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1057b:	48 8b 40 50          	mov    0x50(%rax),%rax
   1057f:	48 89 c7             	mov    %rax,%rdi
   10582:	e8 29 3b ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
}
   10587:	90                   	nop
   10588:	c9                   	leave
   10589:	c3                   	ret

000000000001058a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   1058a:	55                   	push   %rbp
   1058b:	48 89 e5             	mov    %rsp,%rbp
   1058e:	41 54                	push   %r12
   10590:	53                   	push   %rbx
   10591:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   10598:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   1059f:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   105a6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   105ad:	48 89 c7             	mov    %rax,%rdi
   105b0:	e8 7b 3f ff ff       	call   4530 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   105b5:	be 10 00 00 00       	mov    $0x10,%esi
   105ba:	bf 08 00 00 00       	mov    $0x8,%edi
   105bf:	e8 d5 5c ff ff       	call   6299 <_ZStorSt13_Ios_OpenmodeS_>
   105c4:	89 c2                	mov    %eax,%edx
   105c6:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   105cd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   105d4:	48 89 ce             	mov    %rcx,%rsi
   105d7:	48 89 c7             	mov    %rax,%rdi
   105da:	e8 61 40 ff ff       	call   4640 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   105df:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   105e6:	48 89 c7             	mov    %rax,%rdi
   105e9:	e8 d2 41 ff ff       	call   47c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   105ee:	83 f0 01             	xor    $0x1,%eax
   105f1:	84 c0                	test   %al,%al
   105f3:	0f 84 97 00 00 00    	je     10690 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   105f9:	bf 10 00 00 00       	mov    $0x10,%edi
   105fe:	e8 9d 3b ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   10603:	48 89 c3             	mov    %rax,%rbx
   10606:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1060d:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   10614:	48 8d 0d 73 d5 00 00 	lea    0xd573(%rip),%rcx        # 1db8e <_ZZN9VulkanApp6renderEvE11submitCount+0x8e>
   1061b:	48 89 ce             	mov    %rcx,%rsi
   1061e:	48 89 c7             	mov    %rax,%rdi
   10621:	e8 ca 5c ff ff       	call   62f0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   10626:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1062d:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   10634:	ba 0a 00 00 00       	mov    $0xa,%edx
   10639:	48 89 ce             	mov    %rcx,%rsi
   1063c:	48 89 c7             	mov    %rax,%rdi
   1063f:	e8 08 2a 00 00       	call   1304c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   10644:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1064b:	48 89 c6             	mov    %rax,%rsi
   1064e:	48 89 df             	mov    %rbx,%rdi
   10651:	e8 0a 41 ff ff       	call   4760 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   10656:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1065d:	48 89 c7             	mov    %rax,%rdi
   10660:	e8 db 3b ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10665:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1066c:	48 89 c7             	mov    %rax,%rdi
   1066f:	e8 cc 3b ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10674:	48 8b 05 2d c9 01 00 	mov    0x1c92d(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1067b:	48 89 c2             	mov    %rax,%rdx
   1067e:	48 8d 05 bb c6 01 00 	lea    0x1c6bb(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10685:	48 89 c6             	mov    %rax,%rsi
   10688:	48 89 df             	mov    %rbx,%rdi
   1068b:	e8 10 41 ff ff       	call   47a0 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   10690:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10697:	48 83 c0 10          	add    $0x10,%rax
   1069b:	48 8d 15 fc d4 00 00 	lea    0xd4fc(%rip),%rdx        # 1db9e <_ZZN9VulkanApp6renderEvE11submitCount+0x9e>
   106a2:	48 89 d6             	mov    %rdx,%rsi
   106a5:	48 89 c7             	mov    %rax,%rdi
   106a8:	e8 33 3d ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   106ad:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   106b4:	48 83 c0 10          	add    $0x10,%rax
   106b8:	48 8d 15 f8 d4 00 00 	lea    0xd4f8(%rip),%rdx        # 1dbb7 <_ZZN9VulkanApp6renderEvE11submitCount+0xb7>
   106bf:	48 89 d6             	mov    %rdx,%rsi
   106c2:	48 89 c7             	mov    %rax,%rdi
   106c5:	e8 16 3d ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   106ca:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   106d1:	be 00 00 00 00       	mov    $0x0,%esi
   106d6:	48 89 c7             	mov    %rax,%rdi
   106d9:	e8 50 69 ff ff       	call   702e <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   106de:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   106e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   106e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   106ed:	48 89 c7             	mov    %rax,%rdi
   106f0:	e8 dd 17 00 00       	call   11ed2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   106f5:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   106fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10700:	48 89 c7             	mov    %rax,%rdi
   10703:	e8 f0 17 00 00       	call   11ef8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   10708:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   1070f:	eb 64                	jmp    10775 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   10711:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   10718:	48 89 c7             	mov    %rax,%rdi
   1071b:	e8 60 18 00 00       	call   11f80 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   10720:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   10727:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1072e:	48 83 c0 10          	add    $0x10,%rax
   10732:	48 8d 15 8f d4 00 00 	lea    0xd48f(%rip),%rdx        # 1dbc8 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   10739:	48 89 d6             	mov    %rdx,%rsi
   1073c:	48 89 c7             	mov    %rax,%rdi
   1073f:	e8 9c 3c ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10744:	48 89 c2             	mov    %rax,%rdx
   10747:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1074e:	48 89 c6             	mov    %rax,%rsi
   10751:	48 89 d7             	mov    %rdx,%rdi
   10754:	e8 87 3c ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10759:	be 0a 00 00 00       	mov    $0xa,%esi
   1075e:	48 89 c7             	mov    %rax,%rdi
   10761:	e8 aa 3d ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   10766:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   1076d:	48 89 c7             	mov    %rax,%rdi
   10770:	e8 e7 17 00 00       	call   11f5c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10775:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   1077c:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   10783:	48 89 d6             	mov    %rdx,%rsi
   10786:	48 89 c7             	mov    %rax,%rdi
   10789:	e8 93 17 00 00       	call   11f21 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1078e:	84 c0                	test   %al,%al
   10790:	0f 85 7b ff ff ff    	jne    10711 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   10796:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1079d:	48 83 c0 10          	add    $0x10,%rax
   107a1:	48 8d 15 23 d4 00 00 	lea    0xd423(%rip),%rdx        # 1dbcb <_ZZN9VulkanApp6renderEvE11submitCount+0xcb>
   107a8:	48 89 d6             	mov    %rdx,%rsi
   107ab:	48 89 c7             	mov    %rax,%rdi
   107ae:	e8 2d 3c ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   107b3:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   107ba:	48 83 c0 10          	add    $0x10,%rax
   107be:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   107c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   107c6:	48 89 c7             	mov    %rax,%rdi
   107c9:	e8 62 12 00 00       	call   11a30 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   107ce:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   107d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   107d9:	48 89 c7             	mov    %rax,%rdi
   107dc:	e8 75 12 00 00       	call   11a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   107e1:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   107e8:	eb 67                	jmp    10851 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   107ea:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   107f1:	48 89 c7             	mov    %rax,%rdi
   107f4:	e8 e1 12 00 00       	call   11ada <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   107f9:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   10800:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10807:	48 83 c0 10          	add    $0x10,%rax
   1080b:	48 8d 15 b6 d3 00 00 	lea    0xd3b6(%rip),%rdx        # 1dbc8 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   10812:	48 89 d6             	mov    %rdx,%rsi
   10815:	48 89 c7             	mov    %rax,%rdi
   10818:	e8 c3 3b ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1081d:	48 89 c2             	mov    %rax,%rdx
   10820:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   10827:	48 8b 00             	mov    (%rax),%rax
   1082a:	48 89 c6             	mov    %rax,%rsi
   1082d:	48 89 d7             	mov    %rdx,%rdi
   10830:	e8 ab 3b ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10835:	be 0a 00 00 00       	mov    $0xa,%esi
   1083a:	48 89 c7             	mov    %rax,%rdi
   1083d:	e8 ce 3c ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   10842:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   10849:	48 89 c7             	mov    %rax,%rdi
   1084c:	e8 69 12 00 00       	call   11aba <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   10851:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   10858:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   1085f:	48 89 d6             	mov    %rdx,%rsi
   10862:	48 89 c7             	mov    %rax,%rdi
   10865:	e8 15 12 00 00       	call   11a7f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   1086a:	84 c0                	test   %al,%al
   1086c:	0f 85 78 ff ff ff    	jne    107ea <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   10872:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10879:	48 83 c0 10          	add    $0x10,%rax
   1087d:	be 0a 00 00 00       	mov    $0xa,%esi
   10882:	48 89 c7             	mov    %rax,%rdi
   10885:	e8 86 3c ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   1088a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10891:	48 83 c0 10          	add    $0x10,%rax
   10895:	48 8d 15 3f d3 00 00 	lea    0xd33f(%rip),%rdx        # 1dbdb <_ZZN9VulkanApp6renderEvE11submitCount+0xdb>
   1089c:	48 89 d6             	mov    %rdx,%rsi
   1089f:	48 89 c7             	mov    %rax,%rdi
   108a2:	e8 39 3b ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   108a7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   108ae:	48 83 c0 10          	add    $0x10,%rax
   108b2:	48 8d 15 37 d3 00 00 	lea    0xd337(%rip),%rdx        # 1dbf0 <_ZZN9VulkanApp6renderEvE11submitCount+0xf0>
   108b9:	48 89 d6             	mov    %rdx,%rsi
   108bc:	48 89 c7             	mov    %rax,%rdi
   108bf:	e8 1c 3b ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   108c4:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   108cb:	48 89 c7             	mov    %rax,%rdi
   108ce:	e8 f5 6a ff ff       	call   73c8 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   108d3:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   108da:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   108de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108e2:	48 89 c7             	mov    %rax,%rdi
   108e5:	e8 d8 c5 ff ff       	call   cec2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   108ea:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   108f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108f5:	48 89 c7             	mov    %rax,%rdi
   108f8:	e8 eb c5 ff ff       	call   cee8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   108fd:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   10904:	eb 5e                	jmp    10964 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   10906:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   1090d:	48 89 c7             	mov    %rax,%rdi
   10910:	e8 5b c6 ff ff       	call   cf70 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   10915:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   10919:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10920:	48 83 c0 10          	add    $0x10,%rax
   10924:	48 8d 15 9d d2 00 00 	lea    0xd29d(%rip),%rdx        # 1dbc8 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   1092b:	48 89 d6             	mov    %rdx,%rsi
   1092e:	48 89 c7             	mov    %rax,%rdi
   10931:	e8 aa 3a ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10936:	48 89 c2             	mov    %rax,%rdx
   10939:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1093d:	48 89 c6             	mov    %rax,%rsi
   10940:	48 89 d7             	mov    %rdx,%rdi
   10943:	e8 98 3a ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10948:	be 0a 00 00 00       	mov    $0xa,%esi
   1094d:	48 89 c7             	mov    %rax,%rdi
   10950:	e8 bb 3b ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   10955:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   1095c:	48 89 c7             	mov    %rax,%rdi
   1095f:	e8 e8 c5 ff ff       	call   cf4c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10964:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   1096b:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   10972:	48 89 d6             	mov    %rdx,%rsi
   10975:	48 89 c7             	mov    %rax,%rdi
   10978:	e8 94 c5 ff ff       	call   cf11 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1097d:	84 c0                	test   %al,%al
   1097f:	75 85                	jne    10906 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   10981:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10988:	48 83 c0 10          	add    $0x10,%rax
   1098c:	48 8d 15 6e d2 00 00 	lea    0xd26e(%rip),%rdx        # 1dc01 <_ZZN9VulkanApp6renderEvE11submitCount+0x101>
   10993:	48 89 d6             	mov    %rdx,%rsi
   10996:	48 89 c7             	mov    %rax,%rdi
   10999:	e8 42 3a ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   1099e:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   109a5:	48 83 c0 28          	add    $0x28,%rax
   109a9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   109ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   109b1:	48 89 c7             	mov    %rax,%rdi
   109b4:	e8 dd 26 00 00       	call   13096 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   109b9:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   109c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   109c4:	48 89 c7             	mov    %rax,%rdi
   109c7:	e8 f0 26 00 00       	call   130bc <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   109cc:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   109d3:	eb 61                	jmp    10a36 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   109d5:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   109dc:	48 89 c7             	mov    %rax,%rdi
   109df:	e8 5c 27 00 00       	call   13140 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   109e4:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   109e8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   109ef:	48 83 c0 10          	add    $0x10,%rax
   109f3:	48 8d 15 ce d1 00 00 	lea    0xd1ce(%rip),%rdx        # 1dbc8 <_ZZN9VulkanApp6renderEvE11submitCount+0xc8>
   109fa:	48 89 d6             	mov    %rdx,%rsi
   109fd:	48 89 c7             	mov    %rax,%rdi
   10a00:	e8 db 39 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10a05:	48 89 c2             	mov    %rax,%rdx
   10a08:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10a0c:	48 8b 00             	mov    (%rax),%rax
   10a0f:	48 89 c6             	mov    %rax,%rsi
   10a12:	48 89 d7             	mov    %rdx,%rdi
   10a15:	e8 c6 39 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10a1a:	be 0a 00 00 00       	mov    $0xa,%esi
   10a1f:	48 89 c7             	mov    %rax,%rdi
   10a22:	e8 e9 3a ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   10a27:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   10a2e:	48 89 c7             	mov    %rax,%rdi
   10a31:	e8 ea 26 00 00       	call   13120 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   10a36:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   10a3d:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   10a44:	48 89 d6             	mov    %rdx,%rsi
   10a47:	48 89 c7             	mov    %rax,%rdi
   10a4a:	e8 96 26 00 00       	call   130e5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   10a4f:	84 c0                	test   %al,%al
   10a51:	75 82                	jne    109d5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   10a53:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10a5a:	48 83 c0 10          	add    $0x10,%rax
   10a5e:	be 0a 00 00 00       	mov    $0xa,%esi
   10a63:	48 89 c7             	mov    %rax,%rdi
   10a66:	e8 a5 3a ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   10a6b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10a72:	48 83 c0 10          	add    $0x10,%rax
   10a76:	48 8d 15 94 d1 00 00 	lea    0xd194(%rip),%rdx        # 1dc11 <_ZZN9VulkanApp6renderEvE11submitCount+0x111>
   10a7d:	48 89 d6             	mov    %rdx,%rsi
   10a80:	48 89 c7             	mov    %rax,%rdi
   10a83:	e8 58 39 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   10a88:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   10a8f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10a93:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   10a9a:	48 89 d6             	mov    %rdx,%rsi
   10a9d:	48 89 c7             	mov    %rax,%rdi
   10aa0:	e8 cf 69 ff ff       	call   7474 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   10aa5:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   10aac:	48 8b 50 58          	mov    0x58(%rax),%rdx
   10ab0:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   10ab7:	48 89 d6             	mov    %rdx,%rsi
   10aba:	48 89 c7             	mov    %rax,%rdi
   10abd:	e8 21 6b ff ff       	call   75e3 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   10ac2:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   10ac9:	00 
  size_t selectedDeviceIndex = 0;
   10aca:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   10ad1:	00 
  for (const auto &physDev : physicalDeviceList) {
   10ad2:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   10ad9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10add:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10ae1:	48 89 c7             	mov    %rax,%rdi
   10ae4:	e8 17 12 00 00       	call   11d00 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   10ae9:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   10af0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10af4:	48 89 c7             	mov    %rax,%rdi
   10af7:	e8 2a 12 00 00       	call   11d26 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   10afc:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   10b03:	e9 c7 06 00 00       	jmp    111cf <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   10b08:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   10b0f:	48 89 c7             	mov    %rax,%rdi
   10b12:	e8 93 12 00 00       	call   11daa <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   10b17:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   10b1b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   10b22:	48 89 c7             	mov    %rax,%rdi
   10b25:	e8 e6 3c ff ff       	call   4810 <_ZNSaIcEC1Ev@plt>
   10b2a:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   10b31:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   10b38:	48 8d 0d e8 d0 00 00 	lea    0xd0e8(%rip),%rcx        # 1dc27 <_ZZN9VulkanApp6renderEvE11submitCount+0x127>
   10b3f:	48 89 ce             	mov    %rcx,%rsi
   10b42:	48 89 c7             	mov    %rax,%rdi
   10b45:	e8 16 41 ff ff       	call   4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   10b4a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   10b51:	48 89 c7             	mov    %rax,%rdi
   10b54:	e8 47 39 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   10b59:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   10b60:	b8 00 00 00 00       	mov    $0x0,%eax
   10b65:	b9 0e 00 00 00       	mov    $0xe,%ecx
   10b6a:	48 89 d7             	mov    %rdx,%rdi
   10b6d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   10b70:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   10b77:	00 00 00 
    vk11Props.pNext = nullptr;
   10b7a:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   10b81:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   10b85:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   10b8c:	b8 00 00 00 00       	mov    $0x0,%eax
   10b91:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   10b96:	48 89 d7             	mov    %rdx,%rdi
   10b99:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   10b9c:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   10ba3:	00 00 00 
    vk12Props.pNext = &vk11Props;
   10ba6:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   10bad:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   10bb4:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   10bbb:	b8 00 00 00 00       	mov    $0x0,%eax
   10bc0:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   10bc5:	48 89 d7             	mov    %rdx,%rdi
   10bc8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   10bcb:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   10bd2:	00 00 00 
    vk13Props.pNext = &vk12Props;
   10bd5:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   10bdc:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   10be3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10be7:	48 8b 08             	mov    (%rax),%rcx
   10bea:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   10bf1:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   10bf8:	48 89 ce             	mov    %rcx,%rsi
   10bfb:	48 89 c7             	mov    %rax,%rdi
   10bfe:	e8 0a 6a ff ff       	call   760d <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   10c03:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   10c09:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   10c0f:	39 c2                	cmp    %eax,%edx
   10c11:	75 08                	jne    10c1b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   10c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c17:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   10c1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c1f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10c23:	75 19                	jne    10c3e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   10c25:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   10c2c:	48 8d 15 f5 cf 00 00 	lea    0xcff5(%rip),%rdx        # 1dc28 <_ZZN9VulkanApp6renderEvE11submitCount+0x128>
   10c33:	48 89 d6             	mov    %rdx,%rsi
   10c36:	48 89 c7             	mov    %rax,%rdi
   10c39:	e8 f2 39 ff ff       	call   4630 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   10c3e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10c45:	48 83 c0 10          	add    $0x10,%rax
   10c49:	48 8d 15 e4 cf 00 00 	lea    0xcfe4(%rip),%rdx        # 1dc34 <_ZZN9VulkanApp6renderEvE11submitCount+0x134>
   10c50:	48 89 d6             	mov    %rdx,%rsi
   10c53:	48 89 c7             	mov    %rax,%rdi
   10c56:	e8 85 37 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10c5b:	48 89 c2             	mov    %rax,%rdx
   10c5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c62:	48 89 c6             	mov    %rax,%rsi
   10c65:	48 89 d7             	mov    %rdx,%rdi
   10c68:	e8 33 34 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10c6d:	48 89 c2             	mov    %rax,%rdx
   10c70:	48 8d 05 c1 cf 00 00 	lea    0xcfc1(%rip),%rax        # 1dc38 <_ZZN9VulkanApp6renderEvE11submitCount+0x138>
   10c77:	48 89 c6             	mov    %rax,%rsi
   10c7a:	48 89 d7             	mov    %rdx,%rdi
   10c7d:	e8 5e 37 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10c82:	48 89 c2             	mov    %rax,%rdx
   10c85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c89:	48 89 c6             	mov    %rax,%rsi
   10c8c:	48 89 d7             	mov    %rdx,%rdi
   10c8f:	e8 0c 34 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10c94:	48 89 c2             	mov    %rax,%rdx
   10c97:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   10c9e:	48 89 c6             	mov    %rax,%rsi
   10ca1:	48 89 d7             	mov    %rdx,%rdi
   10ca4:	e8 d7 36 ff ff       	call   4380 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   10ca9:	48 89 c2             	mov    %rax,%rdx
   10cac:	48 8d 05 8e cf 00 00 	lea    0xcf8e(%rip),%rax        # 1dc41 <_ZZN9VulkanApp6renderEvE11submitCount+0x141>
   10cb3:	48 89 c6             	mov    %rax,%rsi
   10cb6:	48 89 d7             	mov    %rdx,%rdi
   10cb9:	e8 22 37 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   10cbe:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10cc5:	48 83 c0 10          	add    $0x10,%rax
   10cc9:	48 8d 15 74 cf 00 00 	lea    0xcf74(%rip),%rdx        # 1dc44 <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   10cd0:	48 89 d6             	mov    %rdx,%rsi
   10cd3:	48 89 c7             	mov    %rax,%rdi
   10cd6:	e8 05 37 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10cdb:	48 89 c2             	mov    %rax,%rdx
   10cde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ce2:	48 89 c6             	mov    %rax,%rsi
   10ce5:	48 89 d7             	mov    %rdx,%rdi
   10ce8:	e8 b3 33 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10ced:	48 89 c2             	mov    %rax,%rdx
   10cf0:	48 8d 05 52 cf 00 00 	lea    0xcf52(%rip),%rax        # 1dc49 <_ZZN9VulkanApp6renderEvE11submitCount+0x149>
   10cf7:	48 89 c6             	mov    %rax,%rsi
   10cfa:	48 89 d7             	mov    %rdx,%rdi
   10cfd:	e8 de 36 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   10d02:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10d09:	48 83 c0 10          	add    $0x10,%rax
   10d0d:	48 8d 15 4c cf 00 00 	lea    0xcf4c(%rip),%rdx        # 1dc60 <_ZZN9VulkanApp6renderEvE11submitCount+0x160>
   10d14:	48 89 d6             	mov    %rdx,%rsi
   10d17:	48 89 c7             	mov    %rax,%rdi
   10d1a:	e8 c1 36 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10d1f:	48 89 c2             	mov    %rax,%rdx
   10d22:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   10d28:	89 c6                	mov    %eax,%esi
   10d2a:	48 89 d7             	mov    %rdx,%rdi
   10d2d:	e8 ce 38 ff ff       	call   4600 <_ZNSolsEj@plt>
   10d32:	be 0a 00 00 00       	mov    $0xa,%esi
   10d37:	48 89 c7             	mov    %rax,%rdi
   10d3a:	e8 d1 37 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   10d3f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10d46:	48 83 c0 10          	add    $0x10,%rax
   10d4a:	48 8d 15 1e cf 00 00 	lea    0xcf1e(%rip),%rdx        # 1dc6f <_ZZN9VulkanApp6renderEvE11submitCount+0x16f>
   10d51:	48 89 d6             	mov    %rdx,%rsi
   10d54:	48 89 c7             	mov    %rax,%rdi
   10d57:	e8 84 36 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10d5c:	48 89 c2             	mov    %rax,%rdx
   10d5f:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   10d66:	48 83 c0 24          	add    $0x24,%rax
   10d6a:	48 89 c6             	mov    %rax,%rsi
   10d6d:	48 89 d7             	mov    %rdx,%rdi
   10d70:	e8 6b 36 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10d75:	be 0a 00 00 00       	mov    $0xa,%esi
   10d7a:	48 89 c7             	mov    %rax,%rdi
   10d7d:	e8 8e 37 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   10d82:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10d89:	48 83 c0 10          	add    $0x10,%rax
   10d8d:	48 8d 15 ec ce 00 00 	lea    0xceec(%rip),%rdx        # 1dc80 <_ZZN9VulkanApp6renderEvE11submitCount+0x180>
   10d94:	48 89 d6             	mov    %rdx,%rsi
   10d97:	48 89 c7             	mov    %rax,%rdi
   10d9a:	e8 41 36 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   10d9f:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   10da5:	83 f8 04             	cmp    $0x4,%eax
   10da8:	0f 84 80 00 00 00    	je     10e2e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   10dae:	83 f8 04             	cmp    $0x4,%eax
   10db1:	0f 8f 96 00 00 00    	jg     10e4d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   10db7:	83 f8 03             	cmp    $0x3,%eax
   10dba:	74 53                	je     10e0f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   10dbc:	83 f8 03             	cmp    $0x3,%eax
   10dbf:	0f 8f 88 00 00 00    	jg     10e4d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   10dc5:	83 f8 01             	cmp    $0x1,%eax
   10dc8:	74 07                	je     10dd1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   10dca:	83 f8 02             	cmp    $0x2,%eax
   10dcd:	74 21                	je     10df0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   10dcf:	eb 7c                	jmp    10e4d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   10dd1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10dd8:	48 83 c0 10          	add    $0x10,%rax
   10ddc:	48 8d 15 ae ce 00 00 	lea    0xceae(%rip),%rdx        # 1dc91 <_ZZN9VulkanApp6renderEvE11submitCount+0x191>
   10de3:	48 89 d6             	mov    %rdx,%rsi
   10de6:	48 89 c7             	mov    %rax,%rdi
   10de9:	e8 f2 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10dee:	eb 7b                	jmp    10e6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   10df0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10df7:	48 83 c0 10          	add    $0x10,%rax
   10dfb:	48 8d 15 9f ce 00 00 	lea    0xce9f(%rip),%rdx        # 1dca1 <_ZZN9VulkanApp6renderEvE11submitCount+0x1a1>
   10e02:	48 89 d6             	mov    %rdx,%rsi
   10e05:	48 89 c7             	mov    %rax,%rdi
   10e08:	e8 d3 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10e0d:	eb 5c                	jmp    10e6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   10e0f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10e16:	48 83 c0 10          	add    $0x10,%rax
   10e1a:	48 8d 15 8e ce 00 00 	lea    0xce8e(%rip),%rdx        # 1dcaf <_ZZN9VulkanApp6renderEvE11submitCount+0x1af>
   10e21:	48 89 d6             	mov    %rdx,%rsi
   10e24:	48 89 c7             	mov    %rax,%rdi
   10e27:	e8 b4 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10e2c:	eb 3d                	jmp    10e6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   10e2e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10e35:	48 83 c0 10          	add    $0x10,%rax
   10e39:	48 8d 15 7c ce 00 00 	lea    0xce7c(%rip),%rdx        # 1dcbc <_ZZN9VulkanApp6renderEvE11submitCount+0x1bc>
   10e40:	48 89 d6             	mov    %rdx,%rsi
   10e43:	48 89 c7             	mov    %rax,%rdi
   10e46:	e8 95 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10e4b:	eb 1e                	jmp    10e6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   10e4d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10e54:	48 83 c0 10          	add    $0x10,%rax
   10e58:	48 8d 15 62 ce 00 00 	lea    0xce62(%rip),%rdx        # 1dcc1 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c1>
   10e5f:	48 89 d6             	mov    %rdx,%rsi
   10e62:	48 89 c7             	mov    %rax,%rdi
   10e65:	e8 76 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10e6a:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   10e6b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10e72:	48 83 c0 10          	add    $0x10,%rax
   10e76:	48 8d 15 4b ce 00 00 	lea    0xce4b(%rip),%rdx        # 1dcc8 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c8>
   10e7d:	48 89 d6             	mov    %rdx,%rsi
   10e80:	48 89 c7             	mov    %rax,%rdi
   10e83:	e8 58 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10e88:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   10e8e:	89 d6                	mov    %edx,%esi
   10e90:	48 89 c7             	mov    %rax,%rdi
   10e93:	e8 38 39 ff ff       	call   47d0 <_ZNSolsEi@plt>
   10e98:	be 0a 00 00 00       	mov    $0xa,%esi
   10e9d:	48 89 c7             	mov    %rax,%rdi
   10ea0:	e8 6b 36 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   10ea5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10eac:	48 83 c0 10          	add    $0x10,%rax
   10eb0:	48 8d 15 20 ce 00 00 	lea    0xce20(%rip),%rdx        # 1dcd7 <_ZZN9VulkanApp6renderEvE11submitCount+0x1d7>
   10eb7:	48 89 d6             	mov    %rdx,%rsi
   10eba:	48 89 c7             	mov    %rax,%rdi
   10ebd:	e8 1e 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10ec2:	48 89 c2             	mov    %rax,%rdx
   10ec5:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   10ecc:	48 83 c0 14          	add    $0x14,%rax
   10ed0:	48 89 c6             	mov    %rax,%rsi
   10ed3:	48 89 d7             	mov    %rdx,%rdi
   10ed6:	e8 05 35 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10edb:	be 0a 00 00 00       	mov    $0xa,%esi
   10ee0:	48 89 c7             	mov    %rax,%rdi
   10ee3:	e8 28 36 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   10ee8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10eef:	48 83 c0 10          	add    $0x10,%rax
   10ef3:	48 8d 15 ee cd 00 00 	lea    0xcdee(%rip),%rdx        # 1dce8 <_ZZN9VulkanApp6renderEvE11submitCount+0x1e8>
   10efa:	48 89 d6             	mov    %rdx,%rsi
   10efd:	48 89 c7             	mov    %rax,%rdi
   10f00:	e8 db 34 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10f05:	48 89 c2             	mov    %rax,%rdx
   10f08:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   10f0f:	48 05 14 01 00 00    	add    $0x114,%rax
   10f15:	48 89 c6             	mov    %rax,%rsi
   10f18:	48 89 d7             	mov    %rdx,%rdi
   10f1b:	e8 c0 34 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10f20:	be 0a 00 00 00       	mov    $0xa,%esi
   10f25:	48 89 c7             	mov    %rax,%rdi
   10f28:	e8 e3 35 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   10f2d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10f34:	48 83 c0 10          	add    $0x10,%rax
   10f38:	48 8d 15 c1 cd 00 00 	lea    0xcdc1(%rip),%rdx        # 1dd00 <_ZZN9VulkanApp6renderEvE11submitCount+0x200>
   10f3f:	48 89 d6             	mov    %rdx,%rsi
   10f42:	48 89 c7             	mov    %rax,%rdi
   10f45:	e8 96 34 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10f4a:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   10f4d:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   10f54:	48 89 c6             	mov    %rax,%rsi
   10f57:	48 89 d7             	mov    %rdx,%rdi
   10f5a:	e8 41 31 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10f5f:	be 0a 00 00 00       	mov    $0xa,%esi
   10f64:	48 89 c7             	mov    %rax,%rdi
   10f67:	e8 a4 35 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   10f6c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10f73:	48 83 c0 10          	add    $0x10,%rax
   10f77:	48 8d 15 c6 cc 00 00 	lea    0xccc6(%rip),%rdx        # 1dc44 <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   10f7e:	48 89 d6             	mov    %rdx,%rsi
   10f81:	48 89 c7             	mov    %rax,%rdi
   10f84:	e8 57 34 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10f89:	48 89 c2             	mov    %rax,%rdx
   10f8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f90:	48 89 c6             	mov    %rax,%rsi
   10f93:	48 89 d7             	mov    %rdx,%rdi
   10f96:	e8 05 31 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10f9b:	48 89 c2             	mov    %rax,%rdx
   10f9e:	48 8d 05 83 cd 00 00 	lea    0xcd83(%rip),%rax        # 1dd28 <_ZZN9VulkanApp6renderEvE11submitCount+0x228>
   10fa5:	48 89 c6             	mov    %rax,%rsi
   10fa8:	48 89 d7             	mov    %rdx,%rdi
   10fab:	e8 30 34 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   10fb0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10fb4:	48 8b 08             	mov    (%rax),%rcx
   10fb7:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   10fbe:	ba 00 00 00 00       	mov    $0x0,%edx
   10fc3:	48 89 ce             	mov    %rcx,%rsi
   10fc6:	48 89 c7             	mov    %rax,%rdi
   10fc9:	e8 d1 61 ff ff       	call   719f <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   10fce:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   10fd5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10fd9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10fdd:	48 89 c7             	mov    %rax,%rdi
   10fe0:	e8 ed 0e 00 00       	call   11ed2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   10fe5:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   10fec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10ff0:	48 89 c7             	mov    %rax,%rdi
   10ff3:	e8 00 0f 00 00       	call   11ef8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   10ff8:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   10fff:	eb 5e                	jmp    1105f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   11001:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11008:	48 89 c7             	mov    %rax,%rdi
   1100b:	e8 70 0f 00 00       	call   11f80 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   11010:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   11014:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1101b:	48 83 c0 10          	add    $0x10,%rax
   1101f:	48 8d 15 23 cd 00 00 	lea    0xcd23(%rip),%rdx        # 1dd49 <_ZZN9VulkanApp6renderEvE11submitCount+0x249>
   11026:	48 89 d6             	mov    %rdx,%rsi
   11029:	48 89 c7             	mov    %rax,%rdi
   1102c:	e8 af 33 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11031:	48 89 c2             	mov    %rax,%rdx
   11034:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   11038:	48 89 c6             	mov    %rax,%rsi
   1103b:	48 89 d7             	mov    %rdx,%rdi
   1103e:	e8 9d 33 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11043:	be 0a 00 00 00       	mov    $0xa,%esi
   11048:	48 89 c7             	mov    %rax,%rdi
   1104b:	e8 c0 34 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   11050:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   11057:	48 89 c7             	mov    %rax,%rdi
   1105a:	e8 fd 0e 00 00       	call   11f5c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   1105f:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   11066:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   1106d:	48 89 d6             	mov    %rdx,%rsi
   11070:	48 89 c7             	mov    %rax,%rdi
   11073:	e8 a9 0e 00 00       	call   11f21 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   11078:	84 c0                	test   %al,%al
   1107a:	75 85                	jne    11001 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   1107c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11080:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11084:	0f 85 fb 00 00 00    	jne    11185 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   1108a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11091:	48 83 c0 10          	add    $0x10,%rax
   11095:	48 8d 15 a8 cb 00 00 	lea    0xcba8(%rip),%rdx        # 1dc44 <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   1109c:	48 89 d6             	mov    %rdx,%rsi
   1109f:	48 89 c7             	mov    %rax,%rdi
   110a2:	e8 39 33 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   110a7:	48 89 c2             	mov    %rax,%rdx
   110aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110ae:	48 89 c6             	mov    %rax,%rsi
   110b1:	48 89 d7             	mov    %rdx,%rdi
   110b4:	e8 e7 2f ff ff       	call   40a0 <_ZNSolsEm@plt>
   110b9:	48 89 c2             	mov    %rax,%rdx
   110bc:	48 8d 05 8d cc 00 00 	lea    0xcc8d(%rip),%rax        # 1dd50 <_ZZN9VulkanApp6renderEvE11submitCount+0x250>
   110c3:	48 89 c6             	mov    %rax,%rsi
   110c6:	48 89 d7             	mov    %rdx,%rdi
   110c9:	e8 12 33 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   110ce:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   110d5:	48 05 90 00 00 00    	add    $0x90,%rax
   110db:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   110df:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   110e3:	48 89 c7             	mov    %rax,%rdi
   110e6:	e8 45 09 00 00       	call   11a30 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   110eb:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   110f2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   110f6:	48 89 c7             	mov    %rax,%rdi
   110f9:	e8 58 09 00 00       	call   11a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   110fe:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   11105:	eb 61                	jmp    11168 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   11107:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   1110e:	48 89 c7             	mov    %rax,%rdi
   11111:	e8 c4 09 00 00       	call   11ada <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   11116:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   1111a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11121:	48 83 c0 10          	add    $0x10,%rax
   11125:	48 8d 15 1d cc 00 00 	lea    0xcc1d(%rip),%rdx        # 1dd49 <_ZZN9VulkanApp6renderEvE11submitCount+0x249>
   1112c:	48 89 d6             	mov    %rdx,%rsi
   1112f:	48 89 c7             	mov    %rax,%rdi
   11132:	e8 a9 32 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   11137:	48 89 c2             	mov    %rax,%rdx
   1113a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1113e:	48 8b 00             	mov    (%rax),%rax
   11141:	48 89 c6             	mov    %rax,%rsi
   11144:	48 89 d7             	mov    %rdx,%rdi
   11147:	e8 94 32 ff ff       	call   43e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1114c:	be 0a 00 00 00       	mov    $0xa,%esi
   11151:	48 89 c7             	mov    %rax,%rdi
   11154:	e8 b7 33 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   11159:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   11160:	48 89 c7             	mov    %rax,%rdi
   11163:	e8 52 09 00 00       	call   11aba <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   11168:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   1116f:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   11176:	48 89 d6             	mov    %rdx,%rsi
   11179:	48 89 c7             	mov    %rax,%rdi
   1117c:	e8 fe 08 00 00       	call   11a7f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11181:	84 c0                	test   %al,%al
   11183:	75 82                	jne    11107 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   11185:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1118c:	48 83 c0 10          	add    $0x10,%rax
   11190:	be 0a 00 00 00       	mov    $0xa,%esi
   11195:	48 89 c7             	mov    %rax,%rdi
   11198:	e8 73 33 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   1119d:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   111a2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   111a9:	48 89 c7             	mov    %rax,%rdi
   111ac:	e8 63 71 ff ff       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   111b1:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   111b8:	48 89 c7             	mov    %rax,%rdi
   111bb:	e8 80 30 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   111c0:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   111c7:	48 89 c7             	mov    %rax,%rdi
   111ca:	e8 bb 0b 00 00       	call   11d8a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   111cf:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   111d6:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   111dd:	48 89 d6             	mov    %rdx,%rsi
   111e0:	48 89 c7             	mov    %rax,%rdi
   111e3:	e8 67 0b 00 00       	call   11d4f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   111e8:	84 c0                	test   %al,%al
   111ea:	0f 85 18 f9 ff ff    	jne    10b08 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   111f0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   111f7:	48 83 c0 10          	add    $0x10,%rax
   111fb:	be 0a 00 00 00       	mov    $0xa,%esi
   11200:	48 89 c7             	mov    %rax,%rdi
   11203:	e8 08 33 ff ff       	call   4510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   11208:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   1120f:	48 89 c7             	mov    %rax,%rdi
   11212:	e8 87 73 ff ff       	call   859e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   11217:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1121e:	48 89 c7             	mov    %rax,%rdi
   11221:	e8 80 6f ff ff       	call   81a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   11226:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1122d:	48 89 c7             	mov    %rax,%rdi
   11230:	e8 df 70 ff ff       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   11235:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1123c:	48 89 c7             	mov    %rax,%rdi
   1123f:	e8 4c 2e ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   11244:	e9 cd 00 00 00       	jmp    11316 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   11249:	49 89 c4             	mov    %rax,%r12
   1124c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   11253:	48 89 c7             	mov    %rax,%rdi
   11256:	e8 e5 2f ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1125b:	eb 03                	jmp    11260 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   1125d:	49 89 c4             	mov    %rax,%r12
   11260:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11267:	48 89 c7             	mov    %rax,%rdi
   1126a:	e8 d1 2f ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1126f:	eb 03                	jmp    11274 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   11271:	49 89 c4             	mov    %rax,%r12
   11274:	48 89 df             	mov    %rbx,%rdi
   11277:	e8 24 30 ff ff       	call   42a0 <__cxa_free_exception@plt>
   1127c:	4c 89 e3             	mov    %r12,%rbx
   1127f:	eb 7b                	jmp    112fc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   11281:	48 89 c3             	mov    %rax,%rbx
   11284:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1128b:	48 89 c7             	mov    %rax,%rdi
   1128e:	e8 0d 32 ff ff       	call   44a0 <_ZNSaIcED1Ev@plt>
   11293:	eb 2b                	jmp    112c0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   11295:	48 89 c3             	mov    %rax,%rbx
   11298:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   1129f:	48 89 c7             	mov    %rax,%rdi
   112a2:	e8 6d 70 ff ff       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   112a7:	eb 03                	jmp    112ac <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   112a9:	48 89 c3             	mov    %rax,%rbx
   112ac:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   112b3:	48 89 c7             	mov    %rax,%rdi
   112b6:	e8 85 2f ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   112bb:	eb 03                	jmp    112c0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   112bd:	48 89 c3             	mov    %rax,%rbx
   112c0:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   112c7:	48 89 c7             	mov    %rax,%rdi
   112ca:	e8 cf 72 ff ff       	call   859e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   112cf:	eb 03                	jmp    112d4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   112d1:	48 89 c3             	mov    %rax,%rbx
   112d4:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   112db:	48 89 c7             	mov    %rax,%rdi
   112de:	e8 c3 6e ff ff       	call   81a6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   112e3:	eb 03                	jmp    112e8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   112e5:	48 89 c3             	mov    %rax,%rbx
   112e8:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   112ef:	48 89 c7             	mov    %rax,%rdi
   112f2:	e8 1d 70 ff ff       	call   8314 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   112f7:	eb 03                	jmp    112fc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   112f9:	48 89 c3             	mov    %rax,%rbx
   112fc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   11303:	48 89 c7             	mov    %rax,%rdi
   11306:	e8 85 2d ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   1130b:	48 89 d8             	mov    %rbx,%rax
   1130e:	48 89 c7             	mov    %rax,%rdi
   11311:	e8 ea 34 ff ff       	call   4800 <_Unwind_Resume@plt>
   11316:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   1131d:	5b                   	pop    %rbx
   1131e:	41 5c                	pop    %r12
   11320:	5d                   	pop    %rbp
   11321:	c3                   	ret

0000000000011322 <_Z41__static_initialization_and_destruction_0ii>:
   11322:	55                   	push   %rbp
   11323:	48 89 e5             	mov    %rsp,%rbp
   11326:	48 83 ec 10          	sub    $0x10,%rsp
   1132a:	89 7d fc             	mov    %edi,-0x4(%rbp)
   1132d:	89 75 f8             	mov    %esi,-0x8(%rbp)
   11330:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   11334:	75 3b                	jne    11371 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   11336:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   1133d:	75 32                	jne    11371 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   1133f:	48 8d 05 2e c2 01 00 	lea    0x1c22e(%rip),%rax        # 2d574 <_ZStL8__ioinit>
   11346:	48 89 c7             	mov    %rax,%rdi
   11349:	e8 82 33 ff ff       	call   46d0 <_ZNSt8ios_base4InitC1Ev@plt>
   1134e:	48 8d 05 eb c0 01 00 	lea    0x1c0eb(%rip),%rax        # 2d440 <__dso_handle>
   11355:	48 89 c2             	mov    %rax,%rdx
   11358:	48 8d 05 15 c2 01 00 	lea    0x1c215(%rip),%rax        # 2d574 <_ZStL8__ioinit>
   1135f:	48 89 c6             	mov    %rax,%rsi
   11362:	48 8b 05 5f bc 01 00 	mov    0x1bc5f(%rip),%rax        # 2cfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   11369:	48 89 c7             	mov    %rax,%rdi
   1136c:	e8 ff 2f ff ff       	call   4370 <__cxa_atexit@plt>
   11371:	90                   	nop
   11372:	c9                   	leave
   11373:	c3                   	ret

0000000000011374 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   11374:	55                   	push   %rbp
   11375:	48 89 e5             	mov    %rsp,%rbp
   11378:	be ff ff 00 00       	mov    $0xffff,%esi
   1137d:	bf 01 00 00 00       	mov    $0x1,%edi
   11382:	e8 9b ff ff ff       	call   11322 <_Z41__static_initialization_and_destruction_0ii>
   11387:	5d                   	pop    %rbp
   11388:	c3                   	ret
   11389:	90                   	nop

000000000001138a <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   1138a:	55                   	push   %rbp
   1138b:	48 89 e5             	mov    %rsp,%rbp
   1138e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11392:	48 8d 15 77 b9 01 00 	lea    0x1b977(%rip),%rdx        # 2cd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   11399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1139d:	48 89 10             	mov    %rdx,(%rax)
   113a0:	90                   	nop
   113a1:	5d                   	pop    %rbp
   113a2:	c3                   	ret

00000000000113a3 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   113a3:	55                   	push   %rbp
   113a4:	48 89 e5             	mov    %rsp,%rbp
   113a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   113ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   113af:	90                   	nop
   113b0:	5d                   	pop    %rbp
   113b1:	c3                   	ret

00000000000113b2 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   113b2:	55                   	push   %rbp
   113b3:	48 89 e5             	mov    %rsp,%rbp
   113b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   113ba:	48 8d 05 cf c5 00 00 	lea    0xc5cf(%rip),%rax        # 1d990 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
   113c1:	5d                   	pop    %rbp
   113c2:	c3                   	ret
   113c3:	90                   	nop

00000000000113c4 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   113c4:	55                   	push   %rbp
   113c5:	48 89 e5             	mov    %rsp,%rbp
   113c8:	48 83 ec 10          	sub    $0x10,%rsp
   113cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   113d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113d4:	48 89 c7             	mov    %rax,%rdi
   113d7:	e8 ae ff ff ff       	call   1138a <_ZNSt9exceptionC1Ev>
   113dc:	48 8d 15 dd b8 01 00 	lea    0x1b8dd(%rip),%rdx        # 2ccc0 <_ZTVSt19bad_optional_access+0x10>
   113e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113e7:	48 89 10             	mov    %rdx,(%rax)
   113ea:	90                   	nop
   113eb:	c9                   	leave
   113ec:	c3                   	ret

00000000000113ed <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   113ed:	55                   	push   %rbp
   113ee:	48 89 e5             	mov    %rsp,%rbp
   113f1:	53                   	push   %rbx
   113f2:	48 83 ec 08          	sub    $0x8,%rsp
   113f6:	bf 08 00 00 00       	mov    $0x8,%edi
   113fb:	e8 a0 2d ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   11400:	48 89 c3             	mov    %rax,%rbx
   11403:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1140a:	48 89 df             	mov    %rbx,%rdi
   1140d:	e8 b2 ff ff ff       	call   113c4 <_ZNSt19bad_optional_accessC1Ev>
   11412:	48 8d 05 49 89 00 00 	lea    0x8949(%rip),%rax        # 19d62 <_ZNSt19bad_optional_accessD1Ev>
   11419:	48 89 c2             	mov    %rax,%rdx
   1141c:	48 8d 05 35 b9 01 00 	lea    0x1b935(%rip),%rax        # 2cd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   11423:	48 89 c6             	mov    %rax,%rsi
   11426:	48 89 df             	mov    %rbx,%rdi
   11429:	e8 72 33 ff ff       	call   47a0 <__cxa_throw@plt>

000000000001142e <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   1142e:	55                   	push   %rbp
   1142f:	48 89 e5             	mov    %rsp,%rbp
   11432:	48 83 ec 10          	sub    $0x10,%rsp
   11436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1143a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1143e:	48 89 c7             	mov    %rax,%rdi
   11441:	e8 70 04 00 00       	call   118b6 <_ZNSaIjED1Ev>
   11446:	90                   	nop
   11447:	c9                   	leave
   11448:	c3                   	ret
   11449:	90                   	nop

000000000001144a <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   1144a:	55                   	push   %rbp
   1144b:	48 89 e5             	mov    %rsp,%rbp
   1144e:	48 83 ec 10          	sub    $0x10,%rsp
   11452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   11456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1145a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   11460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11464:	48 89 c7             	mov    %rax,%rdi
   11467:	e8 04 00 00 00       	call   11470 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   1146c:	90                   	nop
   1146d:	c9                   	leave
   1146e:	c3                   	ret
   1146f:	90                   	nop

0000000000011470 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   11470:	55                   	push   %rbp
   11471:	48 89 e5             	mov    %rsp,%rbp
   11474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   11478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1147c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11483:	00 
      _M_header._M_left = &_M_header;
   11484:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1148c:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   11490:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11498:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   1149c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114a0:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   114a7:	00 
    }
   114a8:	90                   	nop
   114a9:	5d                   	pop    %rbp
   114aa:	c3                   	ret
   114ab:	90                   	nop

00000000000114ac <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   114ac:	55                   	push   %rbp
   114ad:	48 89 e5             	mov    %rsp,%rbp
   114b0:	48 83 ec 10          	sub    $0x10,%rsp
   114b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114bc:	48 89 c7             	mov    %rax,%rdi
   114bf:	e8 60 00 00 00       	call   11524 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   114c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114c8:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   114cc:	90                   	nop
   114cd:	c9                   	leave
   114ce:	c3                   	ret
   114cf:	90                   	nop

00000000000114d0 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   114d0:	55                   	push   %rbp
   114d1:	48 89 e5             	mov    %rsp,%rbp
   114d4:	48 83 ec 10          	sub    $0x10,%rsp
   114d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e0:	48 89 c7             	mov    %rax,%rdi
   114e3:	e8 c4 ff ff ff       	call   114ac <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   114e8:	90                   	nop
   114e9:	c9                   	leave
   114ea:	c3                   	ret
   114eb:	90                   	nop

00000000000114ec <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   114ec:	55                   	push   %rbp
   114ed:	48 89 e5             	mov    %rsp,%rbp
   114f0:	48 83 ec 10          	sub    $0x10,%rsp
   114f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114fc:	48 89 c7             	mov    %rax,%rdi
   114ff:	e8 cc ff ff ff       	call   114d0 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   11504:	90                   	nop
   11505:	c9                   	leave
   11506:	c3                   	ret
   11507:	90                   	nop

0000000000011508 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   11508:	55                   	push   %rbp
   11509:	48 89 e5             	mov    %rsp,%rbp
   1150c:	48 83 ec 10          	sub    $0x10,%rsp
   11510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11518:	48 89 c7             	mov    %rax,%rdi
   1151b:	e8 cc ff ff ff       	call   114ec <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   11520:	90                   	nop
   11521:	c9                   	leave
   11522:	c3                   	ret
   11523:	90                   	nop

0000000000011524 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   11524:	55                   	push   %rbp
   11525:	48 89 e5             	mov    %rsp,%rbp
   11528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1152c:	90                   	nop
   1152d:	5d                   	pop    %rbp
   1152e:	c3                   	ret
   1152f:	90                   	nop

0000000000011530 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   11530:	55                   	push   %rbp
   11531:	48 89 e5             	mov    %rsp,%rbp
   11534:	48 83 ec 10          	sub    $0x10,%rsp
   11538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1153c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11540:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11548:	48 89 d6             	mov    %rdx,%rsi
   1154b:	48 89 c7             	mov    %rax,%rdi
   1154e:	e8 83 08 00 00       	call   11dd6 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   11553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11557:	c9                   	leave
   11558:	c3                   	ret
   11559:	90                   	nop

000000000001155a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   1155a:	55                   	push   %rbp
   1155b:	48 89 e5             	mov    %rsp,%rbp
   1155e:	48 83 ec 10          	sub    $0x10,%rsp
   11562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11566:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1156a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1156e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11572:	48 89 d6             	mov    %rdx,%rsi
   11575:	48 89 c7             	mov    %rax,%rdi
   11578:	e8 b3 ff ff ff       	call   11530 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   1157d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11581:	c9                   	leave
   11582:	c3                   	ret
   11583:	90                   	nop

0000000000011584 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   11584:	55                   	push   %rbp
   11585:	48 89 e5             	mov    %rsp,%rbp
   11588:	48 83 ec 10          	sub    $0x10,%rsp
   1158c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   11590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11594:	48 89 c7             	mov    %rax,%rdi
   11597:	e8 1a 00 00 00       	call   115b6 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1159c:	84 c0                	test   %al,%al
   1159e:	74 0e                	je     115ae <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   115a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115a4:	48 89 c7             	mov    %rax,%rdi
   115a7:	e8 54 08 00 00       	call   11e00 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   115ac:	eb 05                	jmp    115b3 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   115ae:	e8 3a fe ff ff       	call   113ed <_ZSt27__throw_bad_optional_accessv>
      }
   115b3:	c9                   	leave
   115b4:	c3                   	ret
   115b5:	90                   	nop

00000000000115b6 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   115b6:	55                   	push   %rbp
   115b7:	48 89 e5             	mov    %rsp,%rbp
   115ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   115be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115c2:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   115c6:	5d                   	pop    %rbp
   115c7:	c3                   	ret

00000000000115c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   115c8:	55                   	push   %rbp
   115c9:	48 89 e5             	mov    %rsp,%rbp
   115cc:	48 83 ec 10          	sub    $0x10,%rsp
   115d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115d8:	48 89 c7             	mov    %rax,%rdi
   115db:	e8 9c 08 00 00       	call   11e7c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   115e0:	90                   	nop
   115e1:	c9                   	leave
   115e2:	c3                   	ret
   115e3:	90                   	nop

00000000000115e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   115e4:	55                   	push   %rbp
   115e5:	48 89 e5             	mov    %rsp,%rbp
   115e8:	48 83 ec 10          	sub    $0x10,%rsp
   115ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115f4:	48 89 c7             	mov    %rax,%rdi
   115f7:	e8 48 08 00 00       	call   11e44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   115fc:	90                   	nop
   115fd:	c9                   	leave
   115fe:	c3                   	ret
   115ff:	90                   	nop

0000000000011600 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   11600:	55                   	push   %rbp
   11601:	48 89 e5             	mov    %rsp,%rbp
   11604:	48 83 ec 10          	sub    $0x10,%rsp
   11608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1160c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11610:	48 89 c7             	mov    %rax,%rdi
   11613:	e8 cc ff ff ff       	call   115e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   11618:	90                   	nop
   11619:	c9                   	leave
   1161a:	c3                   	ret
   1161b:	90                   	nop

000000000001161c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   1161c:	55                   	push   %rbp
   1161d:	48 89 e5             	mov    %rsp,%rbp
   11620:	48 83 ec 10          	sub    $0x10,%rsp
   11624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1162c:	48 89 c7             	mov    %rax,%rdi
   1162f:	e8 64 08 00 00       	call   11e98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   11634:	90                   	nop
   11635:	c9                   	leave
   11636:	c3                   	ret
   11637:	90                   	nop

0000000000011638 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
   11638:	55                   	push   %rbp
   11639:	48 89 e5             	mov    %rsp,%rbp
   1163c:	48 83 ec 10          	sub    $0x10,%rsp
   11640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11648:	48 89 c7             	mov    %rax,%rdi
   1164b:	e8 b8 10 00 00       	call   12708 <_ZNSaIP13VkImageView_TED1Ev>
   11650:	90                   	nop
   11651:	c9                   	leave
   11652:	c3                   	ret
   11653:	90                   	nop

0000000000011654 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   11654:	55                   	push   %rbp
   11655:	48 89 e5             	mov    %rsp,%rbp
   11658:	48 83 ec 10          	sub    $0x10,%rsp
   1165c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11664:	48 89 c7             	mov    %rax,%rdi
   11667:	e8 f8 16 00 00       	call   12d64 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   1166c:	90                   	nop
   1166d:	c9                   	leave
   1166e:	c3                   	ret
   1166f:	90                   	nop

0000000000011670 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   11670:	55                   	push   %rbp
   11671:	48 89 e5             	mov    %rsp,%rbp
   11674:	48 83 ec 10          	sub    $0x10,%rsp
   11678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1167c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11680:	48 89 c7             	mov    %rax,%rdi
   11683:	e8 cc ff ff ff       	call   11654 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   11688:	90                   	nop
   11689:	c9                   	leave
   1168a:	c3                   	ret
   1168b:	90                   	nop

000000000001168c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1168c:	55                   	push   %rbp
   1168d:	48 89 e5             	mov    %rsp,%rbp
   11690:	48 83 ec 10          	sub    $0x10,%rsp
   11694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1169c:	48 89 c7             	mov    %rax,%rdi
   1169f:	e8 36 17 00 00       	call   12dda <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   116a4:	90                   	nop
   116a5:	c9                   	leave
   116a6:	c3                   	ret
   116a7:	90                   	nop

00000000000116a8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   116a8:	55                   	push   %rbp
   116a9:	48 89 e5             	mov    %rsp,%rbp
   116ac:	48 83 ec 10          	sub    $0x10,%rsp
   116b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116b8:	48 89 c7             	mov    %rax,%rdi
   116bb:	e8 cc ff ff ff       	call   1168c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   116c0:	90                   	nop
   116c1:	c9                   	leave
   116c2:	c3                   	ret
   116c3:	90                   	nop

00000000000116c4 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   116c4:	55                   	push   %rbp
   116c5:	48 89 e5             	mov    %rsp,%rbp
   116c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   116d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116db:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   116e2:	00 
   116e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116e7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   116ee:	00 
   116ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116f3:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   116fa:	00 
   116fb:	90                   	nop
   116fc:	5d                   	pop    %rbp
   116fd:	c3                   	ret

00000000000116fe <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   116fe:	55                   	push   %rbp
   116ff:	48 89 e5             	mov    %rsp,%rbp
   11702:	48 83 ec 10          	sub    $0x10,%rsp
   11706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1170a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1170e:	48 89 c7             	mov    %rax,%rdi
   11711:	e8 14 17 00 00       	call   12e2a <_ZNSaIP15VkFramebuffer_TED1Ev>
   11716:	90                   	nop
   11717:	c9                   	leave
   11718:	c3                   	ret
   11719:	90                   	nop

000000000001171a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1171a:	55                   	push   %rbp
   1171b:	48 89 e5             	mov    %rsp,%rbp
   1171e:	48 83 ec 10          	sub    $0x10,%rsp
   11722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1172a:	48 89 c7             	mov    %rax,%rdi
   1172d:	e8 d0 16 00 00       	call   12e02 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   11732:	90                   	nop
   11733:	c9                   	leave
   11734:	c3                   	ret
   11735:	90                   	nop

0000000000011736 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   11736:	55                   	push   %rbp
   11737:	48 89 e5             	mov    %rsp,%rbp
   1173a:	48 83 ec 10          	sub    $0x10,%rsp
   1173e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11746:	48 89 c7             	mov    %rax,%rdi
   11749:	e8 cc ff ff ff       	call   1171a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   1174e:	90                   	nop
   1174f:	c9                   	leave
   11750:	c3                   	ret
   11751:	90                   	nop

0000000000011752 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   11752:	55                   	push   %rbp
   11753:	48 89 e5             	mov    %rsp,%rbp
   11756:	48 83 ec 10          	sub    $0x10,%rsp
   1175a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1175e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11762:	48 89 c7             	mov    %rax,%rdi
   11765:	e8 6e 17 00 00       	call   12ed8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
   1176a:	90                   	nop
   1176b:	c9                   	leave
   1176c:	c3                   	ret
   1176d:	90                   	nop

000000000001176e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   1176e:	55                   	push   %rbp
   1176f:	48 89 e5             	mov    %rsp,%rbp
   11772:	48 83 ec 10          	sub    $0x10,%rsp
   11776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1177a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1177e:	48 89 c7             	mov    %rax,%rdi
   11781:	e8 cc ff ff ff       	call   11752 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   11786:	90                   	nop
   11787:	c9                   	leave
   11788:	c3                   	ret
   11789:	90                   	nop

000000000001178a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1178a:	55                   	push   %rbp
   1178b:	48 89 e5             	mov    %rsp,%rbp
   1178e:	48 83 ec 10          	sub    $0x10,%rsp
   11792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1179a:	48 89 c7             	mov    %rax,%rdi
   1179d:	e8 ca 13 00 00       	call   12b6c <_ZNSaIP13VkSemaphore_TED1Ev>
   117a2:	90                   	nop
   117a3:	c9                   	leave
   117a4:	c3                   	ret
   117a5:	90                   	nop

00000000000117a6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   117a6:	55                   	push   %rbp
   117a7:	48 89 e5             	mov    %rsp,%rbp
   117aa:	48 83 ec 10          	sub    $0x10,%rsp
   117ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117b6:	48 89 c7             	mov    %rax,%rdi
   117b9:	e8 42 17 00 00       	call   12f00 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
   117be:	90                   	nop
   117bf:	c9                   	leave
   117c0:	c3                   	ret
   117c1:	90                   	nop

00000000000117c2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
   117c2:	55                   	push   %rbp
   117c3:	48 89 e5             	mov    %rsp,%rbp
   117c6:	48 83 ec 10          	sub    $0x10,%rsp
   117ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117d2:	48 89 c7             	mov    %rax,%rdi
   117d5:	e8 cc ff ff ff       	call   117a6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
   117da:	90                   	nop
   117db:	c9                   	leave
   117dc:	c3                   	ret
   117dd:	90                   	nop

00000000000117de <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   117de:	55                   	push   %rbp
   117df:	48 89 e5             	mov    %rsp,%rbp
   117e2:	48 83 ec 10          	sub    $0x10,%rsp
   117e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117ee:	48 89 c7             	mov    %rax,%rdi
   117f1:	e8 a8 17 00 00       	call   12f9e <_ZNSaIP9VkFence_TED1Ev>
   117f6:	90                   	nop
   117f7:	c9                   	leave
   117f8:	c3                   	ret
   117f9:	90                   	nop

00000000000117fa <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   117fa:	55                   	push   %rbp
   117fb:	48 89 e5             	mov    %rsp,%rbp
   117fe:	48 83 ec 10          	sub    $0x10,%rsp
   11802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1180a:	48 89 c7             	mov    %rax,%rdi
   1180d:	e8 64 17 00 00       	call   12f76 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
   11812:	90                   	nop
   11813:	c9                   	leave
   11814:	c3                   	ret
   11815:	90                   	nop

0000000000011816 <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
   11816:	55                   	push   %rbp
   11817:	48 89 e5             	mov    %rsp,%rbp
   1181a:	48 83 ec 10          	sub    $0x10,%rsp
   1181e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11826:	48 89 c7             	mov    %rax,%rdi
   11829:	e8 cc ff ff ff       	call   117fa <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
   1182e:	90                   	nop
   1182f:	c9                   	leave
   11830:	c3                   	ret
   11831:	90                   	nop

0000000000011832 <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffer();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 11: Synchronization and cache control */
  struct SyncWrapper {
   11832:	55                   	push   %rbp
   11833:	48 89 e5             	mov    %rsp,%rbp
   11836:	48 83 ec 10          	sub    $0x10,%rsp
   1183a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1183e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11842:	48 89 c7             	mov    %rax,%rdi
   11845:	e8 78 ff ff ff       	call   117c2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   1184a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1184e:	48 83 c0 18          	add    $0x18,%rax
   11852:	48 89 c7             	mov    %rax,%rdi
   11855:	e8 68 ff ff ff       	call   117c2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   1185a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1185e:	48 83 c0 30          	add    $0x30,%rax
   11862:	48 89 c7             	mov    %rax,%rdi
   11865:	e8 ac ff ff ff       	call   11816 <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
   1186a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1186e:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   11875:	00 
   11876:	90                   	nop
   11877:	c9                   	leave
   11878:	c3                   	ret
   11879:	90                   	nop

000000000001187a <_ZN9VulkanApp11SyncWrapperD1Ev>:
   1187a:	55                   	push   %rbp
   1187b:	48 89 e5             	mov    %rsp,%rbp
   1187e:	48 83 ec 10          	sub    $0x10,%rsp
   11882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1188a:	48 83 c0 30          	add    $0x30,%rax
   1188e:	48 89 c7             	mov    %rax,%rdi
   11891:	e8 72 17 00 00       	call   13008 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
   11896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1189a:	48 83 c0 18          	add    $0x18,%rax
   1189e:	48 89 c7             	mov    %rax,%rdi
   118a1:	e8 6a 13 00 00       	call   12c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   118a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118aa:	48 89 c7             	mov    %rax,%rdi
   118ad:	e8 5e 13 00 00       	call   12c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   118b2:	90                   	nop
   118b3:	c9                   	leave
   118b4:	c3                   	ret
   118b5:	90                   	nop

00000000000118b6 <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   118b6:	55                   	push   %rbp
   118b7:	48 89 e5             	mov    %rsp,%rbp
   118ba:	48 83 ec 10          	sub    $0x10,%rsp
   118be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118c6:	48 89 c7             	mov    %rax,%rdi
   118c9:	e8 c0 18 00 00       	call   1318e <_ZNSt15__new_allocatorIjED1Ev>
   118ce:	90                   	nop
   118cf:	c9                   	leave
   118d0:	c3                   	ret
   118d1:	90                   	nop

00000000000118d2 <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   118d2:	55                   	push   %rbp
   118d3:	48 89 e5             	mov    %rsp,%rbp
   118d6:	48 83 ec 10          	sub    $0x10,%rsp
   118da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   118de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   118e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118ea:	48 8b 00             	mov    (%rax),%rax
   118ed:	48 29 c2             	sub    %rax,%rdx
   118f0:	48 89 d0             	mov    %rdx,%rax
   118f3:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   118f7:	48 89 c2             	mov    %rax,%rdx
   118fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118fe:	48 8b 08             	mov    (%rax),%rcx
   11901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11905:	48 89 ce             	mov    %rcx,%rsi
   11908:	48 89 c7             	mov    %rax,%rdi
   1190b:	e8 8a 18 00 00       	call   1319a <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   11910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11914:	48 89 c7             	mov    %rax,%rdi
   11917:	e8 12 fb ff ff       	call   1142e <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   1191c:	90                   	nop
   1191d:	c9                   	leave
   1191e:	c3                   	ret
   1191f:	90                   	nop

0000000000011920 <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11920:	55                   	push   %rbp
   11921:	48 89 e5             	mov    %rsp,%rbp
   11924:	48 83 ec 10          	sub    $0x10,%rsp
   11928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1192c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11930:	48 89 c7             	mov    %rax,%rdi
   11933:	e8 98 18 00 00       	call   131d0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   11938:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1193b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1193f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11947:	48 8b 00             	mov    (%rax),%rax
   1194a:	48 89 ce             	mov    %rcx,%rsi
   1194d:	48 89 c7             	mov    %rax,%rdi
   11950:	e8 89 18 00 00       	call   131de <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   11955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11959:	48 89 c7             	mov    %rax,%rdi
   1195c:	e8 71 ff ff ff       	call   118d2 <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   11961:	90                   	nop
   11962:	c9                   	leave
   11963:	c3                   	ret

0000000000011964 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   11964:	55                   	push   %rbp
   11965:	48 89 e5             	mov    %rsp,%rbp
   11968:	53                   	push   %rbx
   11969:	48 83 ec 38          	sub    $0x38,%rsp
   1196d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11971:	48 89 f0             	mov    %rsi,%rax
   11974:	48 89 d6             	mov    %rdx,%rsi
   11977:	48 89 f2             	mov    %rsi,%rdx
   1197a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1197e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11982:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   11986:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1198a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1198e:	48 89 d6             	mov    %rdx,%rsi
   11991:	48 89 c7             	mov    %rax,%rdi
   11994:	e8 6f 18 00 00       	call   13208 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   11999:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1199d:	48 89 c7             	mov    %rax,%rdi
   119a0:	e8 9b 18 00 00       	call   13240 <_ZNKSt16initializer_listIPKcE3endEv>
   119a5:	48 89 c3             	mov    %rax,%rbx
   119a8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   119ac:	48 89 c7             	mov    %rax,%rdi
   119af:	e8 7a 18 00 00       	call   1322e <_ZNKSt16initializer_listIPKcE5beginEv>
   119b4:	48 89 c1             	mov    %rax,%rcx
   119b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119bb:	48 89 da             	mov    %rbx,%rdx
   119be:	48 89 ce             	mov    %rcx,%rsi
   119c1:	48 89 c7             	mov    %rax,%rdi
   119c4:	e8 dd 18 00 00       	call   132a6 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   119c9:	eb 1a                	jmp    119e5 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   119cb:	48 89 c3             	mov    %rax,%rbx
   119ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119d2:	48 89 c7             	mov    %rax,%rdi
   119d5:	e8 c8 6a ff ff       	call   84a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   119da:	48 89 d8             	mov    %rbx,%rax
   119dd:	48 89 c7             	mov    %rax,%rdi
   119e0:	e8 1b 2e ff ff       	call   4800 <_Unwind_Resume@plt>
   119e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   119e9:	c9                   	leave
   119ea:	c3                   	ret
   119eb:	90                   	nop

00000000000119ec <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   119ec:	55                   	push   %rbp
   119ed:	48 89 e5             	mov    %rsp,%rbp
   119f0:	48 83 ec 10          	sub    $0x10,%rsp
   119f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   119f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119fc:	48 89 c7             	mov    %rax,%rdi
   119ff:	e8 56 79 ff ff       	call   935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11a04:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a0b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a13:	48 8b 00             	mov    (%rax),%rax
   11a16:	48 89 ce             	mov    %rcx,%rsi
   11a19:	48 89 c7             	mov    %rax,%rdi
   11a1c:	e8 34 19 00 00       	call   13355 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   11a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a25:	48 89 c7             	mov    %rax,%rdi
   11a28:	e8 75 6a ff ff       	call   84a2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   11a2d:	90                   	nop
   11a2e:	c9                   	leave
   11a2f:	c3                   	ret

0000000000011a30 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11a30:	55                   	push   %rbp
   11a31:	48 89 e5             	mov    %rsp,%rbp
   11a34:	48 83 ec 20          	sub    $0x20,%rsp
   11a38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11a3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11a40:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11a44:	48 89 d6             	mov    %rdx,%rsi
   11a47:	48 89 c7             	mov    %rax,%rdi
   11a4a:	e8 31 19 00 00       	call   13380 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a53:	c9                   	leave
   11a54:	c3                   	ret
   11a55:	90                   	nop

0000000000011a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11a56:	55                   	push   %rbp
   11a57:	48 89 e5             	mov    %rsp,%rbp
   11a5a:	48 83 ec 20          	sub    $0x20,%rsp
   11a5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11a62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a66:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11a6a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11a6e:	48 89 d6             	mov    %rdx,%rsi
   11a71:	48 89 c7             	mov    %rax,%rdi
   11a74:	e8 07 19 00 00       	call   13380 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a7d:	c9                   	leave
   11a7e:	c3                   	ret

0000000000011a7f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11a7f:	55                   	push   %rbp
   11a80:	48 89 e5             	mov    %rsp,%rbp
   11a83:	53                   	push   %rbx
   11a84:	48 83 ec 18          	sub    $0x18,%rsp
   11a88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11a8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11a90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a94:	48 89 c7             	mov    %rax,%rdi
   11a97:	e8 02 19 00 00       	call   1339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11a9c:	48 8b 18             	mov    (%rax),%rbx
   11a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11aa3:	48 89 c7             	mov    %rax,%rdi
   11aa6:	e8 f3 18 00 00       	call   1339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11aab:	48 8b 00             	mov    (%rax),%rax
   11aae:	48 39 c3             	cmp    %rax,%rbx
   11ab1:	0f 95 c0             	setne  %al
   11ab4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11ab8:	c9                   	leave
   11ab9:	c3                   	ret

0000000000011aba <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11aba:	55                   	push   %rbp
   11abb:	48 89 e5             	mov    %rsp,%rbp
   11abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac6:	48 8b 00             	mov    (%rax),%rax
   11ac9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ad1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11ad8:	5d                   	pop    %rbp
   11ad9:	c3                   	ret

0000000000011ada <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11ada:	55                   	push   %rbp
   11adb:	48 89 e5             	mov    %rsp,%rbp
   11ade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ae6:	48 8b 00             	mov    (%rax),%rax
   11ae9:	5d                   	pop    %rbp
   11aea:	c3                   	ret
   11aeb:	90                   	nop

0000000000011aec <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   11aec:	55                   	push   %rbp
   11aed:	48 89 e5             	mov    %rsp,%rbp
   11af0:	53                   	push   %rbx
   11af1:	48 83 ec 18          	sub    $0x18,%rsp
   11af5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11af9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   11afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b01:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11b05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b09:	48 8b 40 10          	mov    0x10(%rax),%rax
   11b0d:	48 39 c2             	cmp    %rax,%rdx
   11b10:	74 3c                	je     11b4e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   11b12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b16:	48 89 c7             	mov    %rax,%rdi
   11b19:	e8 8e 18 00 00       	call   133ac <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11b1e:	48 89 c2             	mov    %rax,%rdx
   11b21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b25:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b2d:	48 89 ce             	mov    %rcx,%rsi
   11b30:	48 89 c7             	mov    %rax,%rdi
   11b33:	e8 82 18 00 00       	call   133ba <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   11b38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b3c:	48 8b 40 08          	mov    0x8(%rax),%rax
   11b40:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b48:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11b4c:	eb 30                	jmp    11b7e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   11b4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b52:	48 89 c7             	mov    %rax,%rdi
   11b55:	e8 52 18 00 00       	call   133ac <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11b5a:	48 89 c3             	mov    %rax,%rbx
   11b5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b61:	48 89 c7             	mov    %rax,%rdi
   11b64:	e8 ed fe ff ff       	call   11a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11b69:	48 89 c1             	mov    %rax,%rcx
   11b6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b70:	48 89 da             	mov    %rbx,%rdx
   11b73:	48 89 ce             	mov    %rcx,%rsi
   11b76:	48 89 c7             	mov    %rax,%rdi
   11b79:	e8 76 18 00 00       	call   133f4 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   11b7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b82:	48 89 c7             	mov    %rax,%rdi
   11b85:	e8 fc 19 00 00       	call   13586 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   11b8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11b8e:	c9                   	leave
   11b8f:	c3                   	ret

0000000000011b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11b90:	55                   	push   %rbp
   11b91:	48 89 e5             	mov    %rsp,%rbp
   11b94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b9c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ba4:	48 8b 00             	mov    (%rax),%rax
   11ba7:	48 29 c2             	sub    %rax,%rdx
   11baa:	48 89 d0             	mov    %rdx,%rax
   11bad:	48 c1 f8 03          	sar    $0x3,%rax
   11bb1:	5d                   	pop    %rbp
   11bb2:	c3                   	ret
   11bb3:	90                   	nop

0000000000011bb4 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   11bb4:	55                   	push   %rbp
   11bb5:	48 89 e5             	mov    %rsp,%rbp
   11bb8:	48 83 ec 10          	sub    $0x10,%rsp
   11bbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   11bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bc4:	48 8b 10             	mov    (%rax),%rdx
   11bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bcb:	48 89 d6             	mov    %rdx,%rsi
   11bce:	48 89 c7             	mov    %rax,%rdi
   11bd1:	e8 f0 19 00 00       	call   135c6 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   11bd6:	c9                   	leave
   11bd7:	c3                   	ret

0000000000011bd8 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   11bd8:	55                   	push   %rbp
   11bd9:	48 89 e5             	mov    %rsp,%rbp
   11bdc:	48 83 ec 10          	sub    $0x10,%rsp
   11be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   11be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11be8:	48 8b 10             	mov    (%rax),%rdx
   11beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bef:	48 89 d6             	mov    %rdx,%rsi
   11bf2:	48 89 c7             	mov    %rax,%rdi
   11bf5:	e8 cc 19 00 00       	call   135c6 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   11bfa:	c9                   	leave
   11bfb:	c3                   	ret

0000000000011bfc <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11bfc:	55                   	push   %rbp
   11bfd:	48 89 e5             	mov    %rsp,%rbp
   11c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c08:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c10:	48 8b 00             	mov    (%rax),%rax
   11c13:	48 29 c2             	sub    %rax,%rdx
   11c16:	48 c1 fa 02          	sar    $0x2,%rdx
   11c1a:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   11c21:	db b6 6d 
   11c24:	48 0f af c2          	imul   %rdx,%rax
   11c28:	5d                   	pop    %rbp
   11c29:	c3                   	ret

0000000000011c2a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   11c2a:	55                   	push   %rbp
   11c2b:	48 89 e5             	mov    %rsp,%rbp
   11c2e:	48 83 ec 10          	sub    $0x10,%rsp
   11c32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   11c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c3a:	48 89 c7             	mov    %rax,%rdi
   11c3d:	e8 74 7c ff ff       	call   98b6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   11c42:	c9                   	leave
   11c43:	c3                   	ret

0000000000011c44 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   11c44:	55                   	push   %rbp
   11c45:	48 89 e5             	mov    %rsp,%rbp
   11c48:	48 83 ec 10          	sub    $0x10,%rsp
   11c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   11c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c54:	48 89 c7             	mov    %rax,%rdi
   11c57:	e8 5a 7c ff ff       	call   98b6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   11c5c:	84 c0                	test   %al,%al
   11c5e:	74 0e                	je     11c6e <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   11c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c64:	48 89 c7             	mov    %rax,%rdi
   11c67:	e8 5c 7c ff ff       	call   98c8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   11c6c:	eb 05                	jmp    11c73 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   11c6e:	e8 7a f7 ff ff       	call   113ed <_ZSt27__throw_bad_optional_accessv>
      }
   11c73:	c9                   	leave
   11c74:	c3                   	ret
   11c75:	90                   	nop

0000000000011c76 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   11c76:	55                   	push   %rbp
   11c77:	48 89 e5             	mov    %rsp,%rbp
   11c7a:	48 83 ec 20          	sub    $0x20,%rsp
   11c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11c86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   11c8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c8e:	48 89 c7             	mov    %rax,%rdi
   11c91:	e8 42 19 00 00       	call   135d8 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   11c96:	8b 10                	mov    (%rax),%edx
   11c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c9c:	89 10                	mov    %edx,(%rax)
   11c9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ca2:	48 89 c7             	mov    %rax,%rdi
   11ca5:	e8 3c 19 00 00       	call   135e6 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   11caa:	48 89 c1             	mov    %rax,%rcx
   11cad:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   11cb1:	48 8b 01             	mov    (%rcx),%rax
   11cb4:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   11cb8:	48 89 46 04          	mov    %rax,0x4(%rsi)
   11cbc:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   11cc0:	48 8b 41 10          	mov    0x10(%rcx),%rax
   11cc4:	48 89 46 14          	mov    %rax,0x14(%rsi)
   11cc8:	90                   	nop
   11cc9:	c9                   	leave
   11cca:	c3                   	ret
   11ccb:	90                   	nop

0000000000011ccc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   11ccc:	55                   	push   %rbp
   11ccd:	48 89 e5             	mov    %rsp,%rbp
   11cd0:	53                   	push   %rbx
   11cd1:	48 83 ec 18          	sub    $0x18,%rsp
   11cd5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11cd9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   11cdd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11ce1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ce5:	48 89 c7             	mov    %rax,%rdi
   11ce8:	e8 07 19 00 00       	call   135f4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   11ced:	48 89 c6             	mov    %rax,%rsi
   11cf0:	48 89 df             	mov    %rbx,%rdi
   11cf3:	e8 30 19 00 00       	call   13628 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   11cf8:	90                   	nop
   11cf9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11cfd:	c9                   	leave
   11cfe:	c3                   	ret
   11cff:	90                   	nop

0000000000011d00 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11d00:	55                   	push   %rbp
   11d01:	48 89 e5             	mov    %rsp,%rbp
   11d04:	48 83 ec 20          	sub    $0x20,%rsp
   11d08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11d0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11d10:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11d14:	48 89 d6             	mov    %rdx,%rsi
   11d17:	48 89 c7             	mov    %rax,%rdi
   11d1a:	e8 3d 19 00 00       	call   1365c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d23:	c9                   	leave
   11d24:	c3                   	ret
   11d25:	90                   	nop

0000000000011d26 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11d26:	55                   	push   %rbp
   11d27:	48 89 e5             	mov    %rsp,%rbp
   11d2a:	48 83 ec 20          	sub    $0x20,%rsp
   11d2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11d32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d36:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11d3a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11d3e:	48 89 d6             	mov    %rdx,%rsi
   11d41:	48 89 c7             	mov    %rax,%rdi
   11d44:	e8 13 19 00 00       	call   1365c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d4d:	c9                   	leave
   11d4e:	c3                   	ret

0000000000011d4f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11d4f:	55                   	push   %rbp
   11d50:	48 89 e5             	mov    %rsp,%rbp
   11d53:	53                   	push   %rbx
   11d54:	48 83 ec 18          	sub    $0x18,%rsp
   11d58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11d5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11d60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d64:	48 89 c7             	mov    %rax,%rdi
   11d67:	e8 0e 19 00 00       	call   1367a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11d6c:	48 8b 18             	mov    (%rax),%rbx
   11d6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11d73:	48 89 c7             	mov    %rax,%rdi
   11d76:	e8 ff 18 00 00       	call   1367a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11d7b:	48 8b 00             	mov    (%rax),%rax
   11d7e:	48 39 c3             	cmp    %rax,%rbx
   11d81:	0f 95 c0             	setne  %al
   11d84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11d88:	c9                   	leave
   11d89:	c3                   	ret

0000000000011d8a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11d8a:	55                   	push   %rbp
   11d8b:	48 89 e5             	mov    %rsp,%rbp
   11d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d96:	48 8b 00             	mov    (%rax),%rax
   11d99:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11da1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11da8:	5d                   	pop    %rbp
   11da9:	c3                   	ret

0000000000011daa <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11daa:	55                   	push   %rbp
   11dab:	48 89 e5             	mov    %rsp,%rbp
   11dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11db6:	48 8b 00             	mov    (%rax),%rax
   11db9:	5d                   	pop    %rbp
   11dba:	c3                   	ret
   11dbb:	90                   	nop

0000000000011dbc <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   11dbc:	55                   	push   %rbp
   11dbd:	48 89 e5             	mov    %rsp,%rbp
   11dc0:	48 83 ec 10          	sub    $0x10,%rsp
   11dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   11dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dcc:	48 89 c7             	mov    %rax,%rdi
   11dcf:	e8 e2 f7 ff ff       	call   115b6 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   11dd4:	c9                   	leave
   11dd5:	c3                   	ret

0000000000011dd6 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   11dd6:	55                   	push   %rbp
   11dd7:	48 89 e5             	mov    %rsp,%rbp
   11dda:	48 83 ec 10          	sub    $0x10,%rsp
   11dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11de2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   11de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11dee:	48 89 d6             	mov    %rdx,%rsi
   11df1:	48 89 c7             	mov    %rax,%rdi
   11df4:	e8 8f 18 00 00       	call   13688 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   11df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11dfd:	c9                   	leave
   11dfe:	c3                   	ret
   11dff:	90                   	nop

0000000000011e00 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   11e00:	55                   	push   %rbp
   11e01:	48 89 e5             	mov    %rsp,%rbp
   11e04:	48 83 ec 10          	sub    $0x10,%rsp
   11e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   11e0c:	e8 8d 2d ff ff       	call   4b9e <_ZSt23__is_constant_evaluatedv>
   11e11:	84 c0                	test   %al,%al
   11e13:	74 1a                	je     11e2f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   11e15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e19:	48 89 c7             	mov    %rax,%rdi
   11e1c:	e8 95 f7 ff ff       	call   115b6 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   11e21:	83 f0 01             	xor    $0x1,%eax
   11e24:	84 c0                	test   %al,%al
   11e26:	74 07                	je     11e2f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   11e28:	b8 01 00 00 00       	mov    $0x1,%eax
   11e2d:	eb 05                	jmp    11e34 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   11e2f:	b8 00 00 00 00       	mov    $0x0,%eax
   11e34:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   11e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e3a:	48 89 c7             	mov    %rax,%rdi
   11e3d:	e8 d8 18 00 00       	call   1371a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   11e42:	c9                   	leave
   11e43:	c3                   	ret

0000000000011e44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   11e44:	55                   	push   %rbp
   11e45:	48 89 e5             	mov    %rsp,%rbp
   11e48:	48 83 ec 10          	sub    $0x10,%rsp
   11e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   11e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e54:	48 89 c7             	mov    %rax,%rdi
   11e57:	e8 cc 18 00 00       	call   13728 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   11e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e60:	48 89 c7             	mov    %rax,%rdi
   11e63:	e8 dc 18 00 00       	call   13744 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   11e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e6c:	48 83 c0 08          	add    $0x8,%rax
   11e70:	48 89 c7             	mov    %rax,%rdi
   11e73:	e8 d2 f5 ff ff       	call   1144a <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   11e78:	90                   	nop
   11e79:	c9                   	leave
   11e7a:	c3                   	ret
   11e7b:	90                   	nop

0000000000011e7c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
   11e7c:	55                   	push   %rbp
   11e7d:	48 89 e5             	mov    %rsp,%rbp
   11e80:	48 83 ec 10          	sub    $0x10,%rsp
   11e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e8c:	48 89 c7             	mov    %rax,%rdi
   11e8f:	e8 bc 18 00 00       	call   13750 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   11e94:	90                   	nop
   11e95:	c9                   	leave
   11e96:	c3                   	ret
   11e97:	90                   	nop

0000000000011e98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   11e98:	55                   	push   %rbp
   11e99:	48 89 e5             	mov    %rsp,%rbp
   11e9c:	48 83 ec 10          	sub    $0x10,%rsp
   11ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   11ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ea8:	48 89 c7             	mov    %rax,%rdi
   11eab:	e8 12 19 00 00       	call   137c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   11eb0:	48 89 c2             	mov    %rax,%rdx
   11eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11eb7:	48 89 d6             	mov    %rdx,%rsi
   11eba:	48 89 c7             	mov    %rax,%rdi
   11ebd:	e8 9a 18 00 00       	call   1375c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   11ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ec6:	48 89 c7             	mov    %rax,%rdi
   11ec9:	e8 fa f6 ff ff       	call   115c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   11ece:	90                   	nop
   11ecf:	c9                   	leave
   11ed0:	c3                   	ret
   11ed1:	90                   	nop

0000000000011ed2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11ed2:	55                   	push   %rbp
   11ed3:	48 89 e5             	mov    %rsp,%rbp
   11ed6:	48 83 ec 20          	sub    $0x20,%rsp
   11eda:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11ede:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11ee2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11ee6:	48 89 d6             	mov    %rdx,%rsi
   11ee9:	48 89 c7             	mov    %rax,%rdi
   11eec:	e8 eb 18 00 00       	call   137dc <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11ef1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ef5:	c9                   	leave
   11ef6:	c3                   	ret
   11ef7:	90                   	nop

0000000000011ef8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11ef8:	55                   	push   %rbp
   11ef9:	48 89 e5             	mov    %rsp,%rbp
   11efc:	48 83 ec 20          	sub    $0x20,%rsp
   11f00:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11f04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f08:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11f0c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11f10:	48 89 d6             	mov    %rdx,%rsi
   11f13:	48 89 c7             	mov    %rax,%rdi
   11f16:	e8 c1 18 00 00       	call   137dc <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f1f:	c9                   	leave
   11f20:	c3                   	ret

0000000000011f21 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11f21:	55                   	push   %rbp
   11f22:	48 89 e5             	mov    %rsp,%rbp
   11f25:	53                   	push   %rbx
   11f26:	48 83 ec 18          	sub    $0x18,%rsp
   11f2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11f2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11f32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f36:	48 89 c7             	mov    %rax,%rdi
   11f39:	e8 bc 18 00 00       	call   137fa <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   11f3e:	48 8b 18             	mov    (%rax),%rbx
   11f41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11f45:	48 89 c7             	mov    %rax,%rdi
   11f48:	e8 ad 18 00 00       	call   137fa <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   11f4d:	48 8b 00             	mov    (%rax),%rax
   11f50:	48 39 c3             	cmp    %rax,%rbx
   11f53:	0f 95 c0             	setne  %al
   11f56:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11f5a:	c9                   	leave
   11f5b:	c3                   	ret

0000000000011f5c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11f5c:	55                   	push   %rbp
   11f5d:	48 89 e5             	mov    %rsp,%rbp
   11f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f68:	48 8b 00             	mov    (%rax),%rax
   11f6b:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   11f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f76:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11f7d:	5d                   	pop    %rbp
   11f7e:	c3                   	ret
   11f7f:	90                   	nop

0000000000011f80 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11f80:	55                   	push   %rbp
   11f81:	48 89 e5             	mov    %rsp,%rbp
   11f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f8c:	48 8b 00             	mov    (%rax),%rax
   11f8f:	5d                   	pop    %rbp
   11f90:	c3                   	ret
   11f91:	90                   	nop

0000000000011f92 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   11f92:	55                   	push   %rbp
   11f93:	48 89 e5             	mov    %rsp,%rbp
   11f96:	53                   	push   %rbx
   11f97:	48 83 ec 48          	sub    $0x48,%rsp
   11f9b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11f9f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   11fa3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   11fa7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fab:	48 89 d6             	mov    %rdx,%rsi
   11fae:	48 89 c7             	mov    %rax,%rdi
   11fb1:	e8 52 18 00 00       	call   13808 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   11fb6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   11fba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fbe:	48 89 c7             	mov    %rax,%rdi
   11fc1:	e8 68 18 00 00       	call   1382e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   11fc6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11fca:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   11fce:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11fd2:	48 89 d6             	mov    %rdx,%rsi
   11fd5:	48 89 c7             	mov    %rax,%rdi
   11fd8:	e8 6b 18 00 00       	call   13848 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   11fdd:	84 c0                	test   %al,%al
   11fdf:	75 32                	jne    12013 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   11fe1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fe5:	48 89 c7             	mov    %rax,%rdi
   11fe8:	e8 7d 18 00 00       	call   1386a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   11fed:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11ff1:	48 89 c7             	mov    %rax,%rdi
   11ff4:	e8 8d 18 00 00       	call   13886 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   11ff9:	48 89 c2             	mov    %rax,%rdx
   11ffc:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   12000:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   12004:	48 89 ce             	mov    %rcx,%rsi
   12007:	48 89 c7             	mov    %rax,%rdi
   1200a:	e8 95 18 00 00       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1200f:	84 c0                	test   %al,%al
   12011:	74 07                	je     1201a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   12013:	b8 01 00 00 00       	mov    $0x1,%eax
   12018:	eb 05                	jmp    1201f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   1201a:	b8 00 00 00 00       	mov    $0x0,%eax
   1201f:	84 c0                	test   %al,%al
   12021:	74 5d                	je     12080 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   12023:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   12027:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1202b:	48 89 c7             	mov    %rax,%rdi
   1202e:	e8 1e 11 00 00       	call   13151 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   12033:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   12036:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1203a:	48 89 d6             	mov    %rdx,%rsi
   1203d:	48 89 c7             	mov    %rax,%rdi
   12040:	e8 88 18 00 00       	call   138cd <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   12045:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   12049:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1204d:	48 89 d6             	mov    %rdx,%rsi
   12050:	48 89 c7             	mov    %rax,%rdi
   12053:	e8 aa 18 00 00       	call   13902 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   12058:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   1205c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   12060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12064:	49 89 c8             	mov    %rcx,%r8
   12067:	48 89 d1             	mov    %rdx,%rcx
   1206a:	48 8d 15 23 be 00 00 	lea    0xbe23(%rip),%rdx        # 1de94 <_ZSt19piecewise_construct>
   12071:	48 89 c6             	mov    %rax,%rsi
   12074:	48 89 df             	mov    %rbx,%rdi
   12077:	e8 a4 18 00 00       	call   13920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   1207c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   12080:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12084:	48 89 c7             	mov    %rax,%rdi
   12087:	e8 fa 17 00 00       	call   13886 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   1208c:	48 83 c0 20          	add    $0x20,%rax
      }
   12090:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12094:	c9                   	leave
   12095:	c3                   	ret

0000000000012096 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   12096:	55                   	push   %rbp
   12097:	48 89 e5             	mov    %rsp,%rbp
   1209a:	48 83 ec 20          	sub    $0x20,%rsp
   1209e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   120a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120a6:	48 89 c7             	mov    %rax,%rdi
   120a9:	e8 94 19 00 00       	call   13a42 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   120ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   120b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120b6:	48 89 c7             	mov    %rax,%rdi
   120b9:	e8 5e 19 00 00       	call   13a1c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   120be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   120c2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   120c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   120ca:	48 89 d6             	mov    %rdx,%rsi
   120cd:	48 89 c7             	mov    %rax,%rdi
   120d0:	e8 96 19 00 00       	call   13a6b <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   120d5:	c9                   	leave
   120d6:	c3                   	ret
   120d7:	90                   	nop

00000000000120d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   120d8:	55                   	push   %rbp
   120d9:	48 89 e5             	mov    %rsp,%rbp
   120dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   120e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120e8:	48 8b 00             	mov    (%rax),%rax
   120eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   120ef:	48 c1 e2 03          	shl    $0x3,%rdx
   120f3:	48 01 d0             	add    %rdx,%rax
      }
   120f6:	5d                   	pop    %rbp
   120f7:	c3                   	ret

00000000000120f8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   120f8:	55                   	push   %rbp
   120f9:	48 89 e5             	mov    %rsp,%rbp
   120fc:	48 83 ec 20          	sub    $0x20,%rsp
   12100:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12104:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12108:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1210c:	48 89 d6             	mov    %rdx,%rsi
   1210f:	48 89 c7             	mov    %rax,%rdi
   12112:	e8 8f 19 00 00       	call   13aa6 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1211b:	c9                   	leave
   1211c:	c3                   	ret
   1211d:	90                   	nop

000000000001211e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1211e:	55                   	push   %rbp
   1211f:	48 89 e5             	mov    %rsp,%rbp
   12122:	48 83 ec 20          	sub    $0x20,%rsp
   12126:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1212a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1212e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12132:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12136:	48 89 d6             	mov    %rdx,%rsi
   12139:	48 89 c7             	mov    %rax,%rdi
   1213c:	e8 65 19 00 00       	call   13aa6 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12145:	c9                   	leave
   12146:	c3                   	ret

0000000000012147 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12147:	55                   	push   %rbp
   12148:	48 89 e5             	mov    %rsp,%rbp
   1214b:	53                   	push   %rbx
   1214c:	48 83 ec 18          	sub    $0x18,%rsp
   12150:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12154:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12158:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1215c:	48 89 c7             	mov    %rax,%rdi
   1215f:	e8 60 19 00 00       	call   13ac4 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12164:	48 8b 18             	mov    (%rax),%rbx
   12167:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1216b:	48 89 c7             	mov    %rax,%rdi
   1216e:	e8 51 19 00 00       	call   13ac4 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12173:	48 8b 00             	mov    (%rax),%rax
   12176:	48 39 c3             	cmp    %rax,%rbx
   12179:	0f 95 c0             	setne  %al
   1217c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12180:	c9                   	leave
   12181:	c3                   	ret

0000000000012182 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12182:	55                   	push   %rbp
   12183:	48 89 e5             	mov    %rsp,%rbp
   12186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1218a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1218e:	48 8b 00             	mov    (%rax),%rax
   12191:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12199:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1219c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   121a0:	5d                   	pop    %rbp
   121a1:	c3                   	ret

00000000000121a2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   121a2:	55                   	push   %rbp
   121a3:	48 89 e5             	mov    %rsp,%rbp
   121a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   121aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121ae:	48 8b 00             	mov    (%rax),%rax
   121b1:	5d                   	pop    %rbp
   121b2:	c3                   	ret
   121b3:	90                   	nop

00000000000121b4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   121b4:	55                   	push   %rbp
   121b5:	48 89 e5             	mov    %rsp,%rbp
   121b8:	48 83 ec 20          	sub    $0x20,%rsp
   121bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   121c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   121c4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   121c8:	48 89 d6             	mov    %rdx,%rsi
   121cb:	48 89 c7             	mov    %rax,%rdi
   121ce:	e8 ff 18 00 00       	call   13ad2 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   121d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121d7:	c9                   	leave
   121d8:	c3                   	ret
   121d9:	90                   	nop

00000000000121da <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   121da:	55                   	push   %rbp
   121db:	48 89 e5             	mov    %rsp,%rbp
   121de:	48 83 ec 20          	sub    $0x20,%rsp
   121e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   121e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121ea:	48 8d 50 08          	lea    0x8(%rax),%rdx
   121ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   121f2:	48 89 d6             	mov    %rdx,%rsi
   121f5:	48 89 c7             	mov    %rax,%rdi
   121f8:	e8 d5 18 00 00       	call   13ad2 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   121fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12201:	c9                   	leave
   12202:	c3                   	ret

0000000000012203 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12203:	55                   	push   %rbp
   12204:	48 89 e5             	mov    %rsp,%rbp
   12207:	53                   	push   %rbx
   12208:	48 83 ec 18          	sub    $0x18,%rsp
   1220c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12210:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12218:	48 89 c7             	mov    %rax,%rdi
   1221b:	e8 d0 18 00 00       	call   13af0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12220:	48 8b 18             	mov    (%rax),%rbx
   12223:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12227:	48 89 c7             	mov    %rax,%rdi
   1222a:	e8 c1 18 00 00       	call   13af0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1222f:	48 8b 00             	mov    (%rax),%rax
   12232:	48 39 c3             	cmp    %rax,%rbx
   12235:	0f 95 c0             	setne  %al
   12238:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1223c:	c9                   	leave
   1223d:	c3                   	ret

000000000001223e <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1223e:	55                   	push   %rbp
   1223f:	48 89 e5             	mov    %rsp,%rbp
   12242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1224a:	48 8b 00             	mov    (%rax),%rax
   1224d:	48 8d 50 04          	lea    0x4(%rax),%rdx
   12251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12255:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1225c:	5d                   	pop    %rbp
   1225d:	c3                   	ret

000000000001225e <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1225e:	55                   	push   %rbp
   1225f:	48 89 e5             	mov    %rsp,%rbp
   12262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   12266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1226a:	48 8b 00             	mov    (%rax),%rax
   1226d:	5d                   	pop    %rbp
   1226e:	c3                   	ret
   1226f:	90                   	nop

0000000000012270 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   12270:	55                   	push   %rbp
   12271:	48 89 e5             	mov    %rsp,%rbp
   12274:	48 83 ec 20          	sub    $0x20,%rsp
   12278:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1227c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   12280:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   12284:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12288:	48 89 c7             	mov    %rax,%rdi
   1228b:	e8 6e 18 00 00       	call   13afe <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   12290:	48 89 c2             	mov    %rax,%rdx
   12293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12297:	48 89 d6             	mov    %rdx,%rsi
   1229a:	48 89 c7             	mov    %rax,%rdi
   1229d:	e8 6a 18 00 00       	call   13b0c <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   122a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   122a6:	c9                   	leave
   122a7:	c3                   	ret

00000000000122a8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   122a8:	55                   	push   %rbp
   122a9:	48 89 e5             	mov    %rsp,%rbp
   122ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   122b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122b4:	48 8b 50 08          	mov    0x8(%rax),%rdx
   122b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122bc:	48 8b 00             	mov    (%rax),%rax
   122bf:	48 29 c2             	sub    %rax,%rdx
   122c2:	48 89 d0             	mov    %rdx,%rax
   122c5:	48 c1 f8 03          	sar    $0x3,%rax
   122c9:	5d                   	pop    %rbp
   122ca:	c3                   	ret
   122cb:	90                   	nop

00000000000122cc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   122cc:	55                   	push   %rbp
   122cd:	48 89 e5             	mov    %rsp,%rbp
   122d0:	48 83 ec 10          	sub    $0x10,%rsp
   122d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   122dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122e0:	48 89 c7             	mov    %rax,%rdi
   122e3:	e8 5a 03 00 00       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   122e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   122ec:	0f 92 c0             	setb   %al
   122ef:	84 c0                	test   %al,%al
   122f1:	74 24                	je     12317 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   122f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122f7:	48 89 c7             	mov    %rax,%rdi
   122fa:	e8 43 03 00 00       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   122ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12303:	48 29 c2             	sub    %rax,%rdx
   12306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1230a:	48 89 d6             	mov    %rdx,%rsi
   1230d:	48 89 c7             	mov    %rax,%rdi
   12310:	e8 99 18 00 00       	call   13bae <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   12315:	eb 38                	jmp    1234f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   12317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1231b:	48 89 c7             	mov    %rax,%rdi
   1231e:	e8 1f 03 00 00       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12323:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12327:	0f 92 c0             	setb   %al
   1232a:	84 c0                	test   %al,%al
   1232c:	74 21                	je     1234f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   1232e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12332:	48 8b 00             	mov    (%rax),%rax
   12335:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12339:	48 c1 e2 03          	shl    $0x3,%rdx
   1233d:	48 01 c2             	add    %rax,%rdx
   12340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12344:	48 89 d6             	mov    %rdx,%rsi
   12347:	48 89 c7             	mov    %rax,%rdi
   1234a:	e8 69 1a 00 00       	call   13db8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   1234f:	90                   	nop
   12350:	c9                   	leave
   12351:	c3                   	ret

0000000000012352 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12352:	55                   	push   %rbp
   12353:	48 89 e5             	mov    %rsp,%rbp
   12356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1235a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1235e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12362:	48 8b 00             	mov    (%rax),%rax
   12365:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12369:	48 c1 e2 03          	shl    $0x3,%rdx
   1236d:	48 01 d0             	add    %rdx,%rax
      }
   12370:	5d                   	pop    %rbp
   12371:	c3                   	ret

0000000000012372 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12372:	55                   	push   %rbp
   12373:	48 89 e5             	mov    %rsp,%rbp
   12376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1237a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1237e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12382:	48 8b 00             	mov    (%rax),%rax
   12385:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12389:	48 c1 e2 03          	shl    $0x3,%rdx
   1238d:	48 01 d0             	add    %rdx,%rax
      }
   12390:	5d                   	pop    %rbp
   12391:	c3                   	ret

0000000000012392 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12392:	55                   	push   %rbp
   12393:	48 89 e5             	mov    %rsp,%rbp
   12396:	48 83 ec 10          	sub    $0x10,%rsp
   1239a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1239e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123a2:	48 89 c7             	mov    %rax,%rdi
   123a5:	e8 6e 1a 00 00       	call   13e18 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   123aa:	90                   	nop
   123ab:	c9                   	leave
   123ac:	c3                   	ret
   123ad:	90                   	nop

00000000000123ae <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   123ae:	55                   	push   %rbp
   123af:	48 89 e5             	mov    %rsp,%rbp
   123b2:	48 83 ec 10          	sub    $0x10,%rsp
   123b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123be:	48 89 c7             	mov    %rax,%rdi
   123c1:	e8 5e 1a 00 00       	call   13e24 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   123c6:	90                   	nop
   123c7:	c9                   	leave
   123c8:	c3                   	ret
   123c9:	90                   	nop

00000000000123ca <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   123ca:	55                   	push   %rbp
   123cb:	48 89 e5             	mov    %rsp,%rbp
   123ce:	53                   	push   %rbx
   123cf:	48 83 ec 38          	sub    $0x38,%rsp
   123d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   123d7:	48 89 f0             	mov    %rsi,%rax
   123da:	48 89 d6             	mov    %rdx,%rsi
   123dd:	48 89 f2             	mov    %rsi,%rdx
   123e0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   123e4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   123e8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   123ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123f0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   123f4:	48 89 d6             	mov    %rdx,%rsi
   123f7:	48 89 c7             	mov    %rax,%rdi
   123fa:	e8 4d 1a 00 00       	call   13e4c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   123ff:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12403:	48 89 c7             	mov    %rax,%rdi
   12406:	e8 d1 1a 00 00       	call   13edc <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   1240b:	48 89 c3             	mov    %rax,%rbx
   1240e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12412:	48 89 c7             	mov    %rax,%rdi
   12415:	e8 b0 1a 00 00       	call   13eca <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   1241a:	48 89 c1             	mov    %rax,%rcx
   1241d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12421:	48 89 da             	mov    %rbx,%rdx
   12424:	48 89 ce             	mov    %rcx,%rsi
   12427:	48 89 c7             	mov    %rax,%rdi
   1242a:	e8 21 1b 00 00       	call   13f50 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   1242f:	eb 1a                	jmp    1244b <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   12431:	48 89 c3             	mov    %rax,%rbx
   12434:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12438:	48 89 c7             	mov    %rax,%rdi
   1243b:	e8 32 1a 00 00       	call   13e72 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   12440:	48 89 d8             	mov    %rbx,%rax
   12443:	48 89 c7             	mov    %rax,%rdi
   12446:	e8 b5 23 ff ff       	call   4800 <_Unwind_Resume@plt>
   1244b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1244f:	c9                   	leave
   12450:	c3                   	ret
   12451:	90                   	nop

0000000000012452 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12452:	55                   	push   %rbp
   12453:	48 89 e5             	mov    %rsp,%rbp
   12456:	48 83 ec 10          	sub    $0x10,%rsp
   1245a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1245e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12462:	48 89 c7             	mov    %rax,%rdi
   12465:	e8 a0 1b 00 00       	call   1400a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   1246a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1246d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12471:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12479:	48 8b 00             	mov    (%rax),%rax
   1247c:	48 89 ce             	mov    %rcx,%rsi
   1247f:	48 89 c7             	mov    %rax,%rdi
   12482:	e8 91 1b 00 00       	call   14018 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   12487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1248b:	48 89 c7             	mov    %rax,%rdi
   1248e:	e8 df 19 00 00       	call   13e72 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   12493:	90                   	nop
   12494:	c9                   	leave
   12495:	c3                   	ret

0000000000012496 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12496:	55                   	push   %rbp
   12497:	48 89 e5             	mov    %rsp,%rbp
   1249a:	48 83 ec 10          	sub    $0x10,%rsp
   1249e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124a6:	48 89 c7             	mov    %rax,%rdi
   124a9:	e8 de 1b 00 00       	call   1408c <_ZNSaIP12VkPipeline_TED1Ev>
   124ae:	90                   	nop
   124af:	c9                   	leave
   124b0:	c3                   	ret

00000000000124b1 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   124b1:	55                   	push   %rbp
   124b2:	48 89 e5             	mov    %rsp,%rbp
   124b5:	41 54                	push   %r12
   124b7:	53                   	push   %rbx
   124b8:	48 83 ec 40          	sub    $0x40,%rsp
   124bc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   124c0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   124c4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   124c8:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   124cc:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   124d0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   124d4:	48 89 c7             	mov    %rax,%rdi
   124d7:	e8 66 1b 00 00       	call   14042 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   124dc:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   124df:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   124e2:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   124e6:	48 89 c7             	mov    %rax,%rdi
   124e9:	e8 82 1b 00 00       	call   14070 <_ZNSaIP12VkPipeline_TEC1Ev>
   124ee:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   124f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   124f6:	48 89 de             	mov    %rbx,%rsi
   124f9:	48 89 c7             	mov    %rax,%rdi
   124fc:	e8 a7 1b 00 00       	call   140a8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   12501:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   12505:	48 89 c7             	mov    %rax,%rdi
   12508:	e8 7f 1b 00 00       	call   1408c <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   1250d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12511:	48 89 c7             	mov    %rax,%rdi
   12514:	e8 29 1c 00 00       	call   14142 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   12519:	48 89 c3             	mov    %rax,%rbx
   1251c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12520:	48 89 c7             	mov    %rax,%rdi
   12523:	e8 f6 1b 00 00       	call   1411e <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   12528:	48 89 c1             	mov    %rax,%rcx
   1252b:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1252f:	8b 55 ec             	mov    -0x14(%rbp),%edx
   12532:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   12536:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1253a:	49 89 d9             	mov    %rbx,%r9
   1253d:	49 89 f8             	mov    %rdi,%r8
   12540:	48 89 c7             	mov    %rax,%rdi
   12543:	e8 48 1c ff ff       	call   4190 <vkCreateGraphicsPipelines@plt>
   12548:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   1254b:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   1254f:	74 7f                	je     125d0 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   12551:	bf 10 00 00 00       	mov    $0x10,%edi
   12556:	e8 45 1c ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   1255b:	48 89 c3             	mov    %rax,%rbx
   1255e:	48 8d 05 3d b8 00 00 	lea    0xb83d(%rip),%rax        # 1dda2 <_ZZN9VulkanApp6renderEvE11submitCount+0x2a2>
   12565:	48 89 c6             	mov    %rax,%rsi
   12568:	48 89 df             	mov    %rbx,%rdi
   1256b:	e8 b0 1b ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   12570:	48 8b 05 31 aa 01 00 	mov    0x1aa31(%rip),%rax        # 2cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   12577:	48 89 c2             	mov    %rax,%rdx
   1257a:	48 8d 05 bf a7 01 00 	lea    0x1a7bf(%rip),%rax        # 2cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   12581:	48 89 c6             	mov    %rax,%rsi
   12584:	48 89 df             	mov    %rbx,%rdi
   12587:	e8 14 22 ff ff       	call   47a0 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   1258c:	48 89 c3             	mov    %rax,%rbx
   1258f:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   12593:	48 89 c7             	mov    %rax,%rdi
   12596:	e8 f1 1a 00 00       	call   1408c <_ZNSaIP12VkPipeline_TED1Ev>
   1259b:	48 89 d8             	mov    %rbx,%rax
   1259e:	48 89 c7             	mov    %rax,%rdi
   125a1:	e8 5a 22 ff ff       	call   4800 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   125a6:	49 89 c4             	mov    %rax,%r12
   125a9:	48 89 df             	mov    %rbx,%rdi
   125ac:	e8 ef 1c ff ff       	call   42a0 <__cxa_free_exception@plt>
   125b1:	4c 89 e3             	mov    %r12,%rbx
   125b4:	eb 03                	jmp    125b9 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   125b6:	48 89 c3             	mov    %rax,%rbx
   125b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125bd:	48 89 c7             	mov    %rax,%rdi
   125c0:	e8 19 00 00 00       	call   125de <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   125c5:	48 89 d8             	mov    %rbx,%rax
   125c8:	48 89 c7             	mov    %rax,%rdi
   125cb:	e8 30 22 ff ff       	call   4800 <_Unwind_Resume@plt>
  return pipelines;
   125d0:	90                   	nop
}
   125d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125d5:	48 83 c4 40          	add    $0x40,%rsp
   125d9:	5b                   	pop    %rbx
   125da:	41 5c                	pop    %r12
   125dc:	5d                   	pop    %rbp
   125dd:	c3                   	ret

00000000000125de <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   125de:	55                   	push   %rbp
   125df:	48 89 e5             	mov    %rsp,%rbp
   125e2:	48 83 ec 10          	sub    $0x10,%rsp
   125e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   125ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125ee:	48 89 c7             	mov    %rax,%rdi
   125f1:	e8 be 1b 00 00       	call   141b4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   125f6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   125f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125fd:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12605:	48 8b 00             	mov    (%rax),%rax
   12608:	48 89 ce             	mov    %rcx,%rsi
   1260b:	48 89 c7             	mov    %rax,%rdi
   1260e:	e8 af 1b 00 00       	call   141c2 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   12613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12617:	48 89 c7             	mov    %rax,%rdi
   1261a:	e8 47 1b 00 00       	call   14166 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   1261f:	90                   	nop
   12620:	c9                   	leave
   12621:	c3                   	ret

0000000000012622 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12622:	55                   	push   %rbp
   12623:	48 89 e5             	mov    %rsp,%rbp
   12626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1262a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1262e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12632:	48 8b 00             	mov    (%rax),%rax
   12635:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12639:	48 c1 e2 03          	shl    $0x3,%rdx
   1263d:	48 01 d0             	add    %rdx,%rax
      }
   12640:	5d                   	pop    %rbp
   12641:	c3                   	ret

0000000000012642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12642:	55                   	push   %rbp
   12643:	48 89 e5             	mov    %rsp,%rbp
   12646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1264a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1264e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12656:	48 8b 00             	mov    (%rax),%rax
   12659:	48 29 c2             	sub    %rax,%rdx
   1265c:	48 89 d0             	mov    %rdx,%rax
   1265f:	48 c1 f8 03          	sar    $0x3,%rax
   12663:	5d                   	pop    %rbp
   12664:	c3                   	ret
   12665:	90                   	nop

0000000000012666 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   12666:	55                   	push   %rbp
   12667:	48 89 e5             	mov    %rsp,%rbp
   1266a:	48 83 ec 10          	sub    $0x10,%rsp
   1266e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   12676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1267a:	48 89 c7             	mov    %rax,%rdi
   1267d:	e8 6a 1b 00 00       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12682:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12686:	0f 92 c0             	setb   %al
   12689:	84 c0                	test   %al,%al
   1268b:	74 24                	je     126b1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1268d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12691:	48 89 c7             	mov    %rax,%rdi
   12694:	e8 53 1b 00 00       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12699:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1269d:	48 29 c2             	sub    %rax,%rdx
   126a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126a4:	48 89 d6             	mov    %rdx,%rsi
   126a7:	48 89 c7             	mov    %rax,%rdi
   126aa:	e8 61 1b 00 00       	call   14210 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   126af:	eb 38                	jmp    126e9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   126b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126b5:	48 89 c7             	mov    %rax,%rdi
   126b8:	e8 2f 1b 00 00       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   126bd:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   126c1:	0f 92 c0             	setb   %al
   126c4:	84 c0                	test   %al,%al
   126c6:	74 21                	je     126e9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   126c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126cc:	48 8b 00             	mov    (%rax),%rax
   126cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126d3:	48 c1 e2 03          	shl    $0x3,%rdx
   126d7:	48 01 c2             	add    %rax,%rdx
   126da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126de:	48 89 d6             	mov    %rdx,%rsi
   126e1:	48 89 c7             	mov    %rax,%rdi
   126e4:	e8 31 1d 00 00       	call   1441a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   126e9:	90                   	nop
   126ea:	c9                   	leave
   126eb:	c3                   	ret

00000000000126ec <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   126ec:	55                   	push   %rbp
   126ed:	48 89 e5             	mov    %rsp,%rbp
   126f0:	48 83 ec 10          	sub    $0x10,%rsp
   126f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126fc:	48 89 c7             	mov    %rax,%rdi
   126ff:	e8 76 1d 00 00       	call   1447a <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   12704:	90                   	nop
   12705:	c9                   	leave
   12706:	c3                   	ret
   12707:	90                   	nop

0000000000012708 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12708:	55                   	push   %rbp
   12709:	48 89 e5             	mov    %rsp,%rbp
   1270c:	48 83 ec 10          	sub    $0x10,%rsp
   12710:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12718:	48 89 c7             	mov    %rax,%rdi
   1271b:	e8 66 1d 00 00       	call   14486 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   12720:	90                   	nop
   12721:	c9                   	leave
   12722:	c3                   	ret
   12723:	90                   	nop

0000000000012724 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   12724:	55                   	push   %rbp
   12725:	48 89 e5             	mov    %rsp,%rbp
   12728:	53                   	push   %rbx
   12729:	48 83 ec 38          	sub    $0x38,%rsp
   1272d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12731:	48 89 f0             	mov    %rsi,%rax
   12734:	48 89 d6             	mov    %rdx,%rsi
   12737:	48 89 f2             	mov    %rsi,%rdx
   1273a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1273e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12742:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   12746:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1274a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1274e:	48 89 d6             	mov    %rdx,%rsi
   12751:	48 89 c7             	mov    %rax,%rdi
   12754:	e8 39 1d 00 00       	call   14492 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   12759:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1275d:	48 89 c7             	mov    %rax,%rdi
   12760:	e8 65 1d 00 00       	call   144ca <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   12765:	48 89 c3             	mov    %rax,%rbx
   12768:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1276c:	48 89 c7             	mov    %rax,%rdi
   1276f:	e8 44 1d 00 00       	call   144b8 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   12774:	48 89 c1             	mov    %rax,%rcx
   12777:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1277b:	48 89 da             	mov    %rbx,%rdx
   1277e:	48 89 ce             	mov    %rcx,%rsi
   12781:	48 89 c7             	mov    %rax,%rdi
   12784:	e8 a7 1d 00 00       	call   14530 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   12789:	eb 1a                	jmp    127a5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   1278b:	48 89 c3             	mov    %rax,%rbx
   1278e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12792:	48 89 c7             	mov    %rax,%rdi
   12795:	e8 f2 05 00 00       	call   12d8c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   1279a:	48 89 d8             	mov    %rbx,%rax
   1279d:	48 89 c7             	mov    %rax,%rdi
   127a0:	e8 5b 20 ff ff       	call   4800 <_Unwind_Resume@plt>
   127a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   127a9:	c9                   	leave
   127aa:	c3                   	ret
   127ab:	90                   	nop

00000000000127ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   127ac:	55                   	push   %rbp
   127ad:	48 89 e5             	mov    %rsp,%rbp
   127b0:	48 83 ec 10          	sub    $0x10,%rsp
   127b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   127b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127bc:	48 89 c7             	mov    %rax,%rdi
   127bf:	e8 1c 1e 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   127c4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   127c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127cb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   127cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127d3:	48 8b 00             	mov    (%rax),%rax
   127d6:	48 89 ce             	mov    %rcx,%rsi
   127d9:	48 89 c7             	mov    %rax,%rdi
   127dc:	e8 0d 1e 00 00       	call   145ee <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   127e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127e5:	48 89 c7             	mov    %rax,%rdi
   127e8:	e8 9f 05 00 00       	call   12d8c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   127ed:	90                   	nop
   127ee:	c9                   	leave
   127ef:	c3                   	ret

00000000000127f0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   127f0:	55                   	push   %rbp
   127f1:	48 89 e5             	mov    %rsp,%rbp
   127f4:	48 83 ec 10          	sub    $0x10,%rsp
   127f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   127fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12800:	48 8b 10             	mov    (%rax),%rdx
   12803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12807:	48 89 d6             	mov    %rdx,%rsi
   1280a:	48 89 c7             	mov    %rax,%rdi
   1280d:	e8 06 1e 00 00       	call   14618 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12812:	c9                   	leave
   12813:	c3                   	ret

0000000000012814 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12814:	55                   	push   %rbp
   12815:	48 89 e5             	mov    %rsp,%rbp
   12818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1281c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12824:	48 8b 00             	mov    (%rax),%rax
   12827:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1282b:	48 c1 e2 03          	shl    $0x3,%rdx
   1282f:	48 01 d0             	add    %rdx,%rax
      }
   12832:	5d                   	pop    %rbp
   12833:	c3                   	ret

0000000000012834 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12834:	55                   	push   %rbp
   12835:	48 89 e5             	mov    %rsp,%rbp
   12838:	48 83 ec 20          	sub    $0x20,%rsp
   1283c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12840:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12844:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12848:	48 89 d6             	mov    %rdx,%rsi
   1284b:	48 89 c7             	mov    %rax,%rdi
   1284e:	e8 d7 1d 00 00       	call   1462a <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12857:	c9                   	leave
   12858:	c3                   	ret
   12859:	90                   	nop

000000000001285a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1285a:	55                   	push   %rbp
   1285b:	48 89 e5             	mov    %rsp,%rbp
   1285e:	48 83 ec 20          	sub    $0x20,%rsp
   12862:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12866:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1286a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1286e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12872:	48 89 d6             	mov    %rdx,%rsi
   12875:	48 89 c7             	mov    %rax,%rdi
   12878:	e8 ad 1d 00 00       	call   1462a <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1287d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12881:	c9                   	leave
   12882:	c3                   	ret

0000000000012883 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12883:	55                   	push   %rbp
   12884:	48 89 e5             	mov    %rsp,%rbp
   12887:	53                   	push   %rbx
   12888:	48 83 ec 18          	sub    $0x18,%rsp
   1288c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12890:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12894:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12898:	48 89 c7             	mov    %rax,%rdi
   1289b:	e8 a8 1d 00 00       	call   14648 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   128a0:	48 8b 18             	mov    (%rax),%rbx
   128a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   128a7:	48 89 c7             	mov    %rax,%rdi
   128aa:	e8 99 1d 00 00       	call   14648 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   128af:	48 8b 00             	mov    (%rax),%rax
   128b2:	48 39 c3             	cmp    %rax,%rbx
   128b5:	0f 95 c0             	setne  %al
   128b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   128bc:	c9                   	leave
   128bd:	c3                   	ret

00000000000128be <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   128be:	55                   	push   %rbp
   128bf:	48 89 e5             	mov    %rsp,%rbp
   128c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   128c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128ca:	48 8b 00             	mov    (%rax),%rax
   128cd:	48 8d 50 08          	lea    0x8(%rax),%rdx
   128d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128d5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   128d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   128dc:	5d                   	pop    %rbp
   128dd:	c3                   	ret

00000000000128de <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   128de:	55                   	push   %rbp
   128df:	48 89 e5             	mov    %rsp,%rbp
   128e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   128e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128ea:	48 8b 00             	mov    (%rax),%rax
   128ed:	5d                   	pop    %rbp
   128ee:	c3                   	ret
   128ef:	90                   	nop

00000000000128f0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   128f0:	55                   	push   %rbp
   128f1:	48 89 e5             	mov    %rsp,%rbp
   128f4:	48 83 ec 20          	sub    $0x20,%rsp
   128f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   128fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12900:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12904:	48 89 d6             	mov    %rdx,%rsi
   12907:	48 89 c7             	mov    %rax,%rdi
   1290a:	e8 47 1d 00 00       	call   14656 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1290f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12913:	c9                   	leave
   12914:	c3                   	ret
   12915:	90                   	nop

0000000000012916 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12916:	55                   	push   %rbp
   12917:	48 89 e5             	mov    %rsp,%rbp
   1291a:	48 83 ec 20          	sub    $0x20,%rsp
   1291e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12922:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12926:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1292a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1292e:	48 89 d6             	mov    %rdx,%rsi
   12931:	48 89 c7             	mov    %rax,%rdi
   12934:	e8 1d 1d 00 00       	call   14656 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1293d:	c9                   	leave
   1293e:	c3                   	ret

000000000001293f <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1293f:	55                   	push   %rbp
   12940:	48 89 e5             	mov    %rsp,%rbp
   12943:	53                   	push   %rbx
   12944:	48 83 ec 18          	sub    $0x18,%rsp
   12948:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1294c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12954:	48 89 c7             	mov    %rax,%rdi
   12957:	e8 18 1d 00 00       	call   14674 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1295c:	48 8b 18             	mov    (%rax),%rbx
   1295f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12963:	48 89 c7             	mov    %rax,%rdi
   12966:	e8 09 1d 00 00       	call   14674 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1296b:	48 8b 00             	mov    (%rax),%rax
   1296e:	48 39 c3             	cmp    %rax,%rbx
   12971:	0f 95 c0             	setne  %al
   12974:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12978:	c9                   	leave
   12979:	c3                   	ret

000000000001297a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1297a:	55                   	push   %rbp
   1297b:	48 89 e5             	mov    %rsp,%rbp
   1297e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12986:	48 8b 00             	mov    (%rax),%rax
   12989:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1298d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12991:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   12994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12998:	5d                   	pop    %rbp
   12999:	c3                   	ret

000000000001299a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1299a:	55                   	push   %rbp
   1299b:	48 89 e5             	mov    %rsp,%rbp
   1299e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   129a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129a6:	48 8b 00             	mov    (%rax),%rax
   129a9:	5d                   	pop    %rbp
   129aa:	c3                   	ret
   129ab:	90                   	nop

00000000000129ac <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   129ac:	55                   	push   %rbp
   129ad:	48 89 e5             	mov    %rsp,%rbp
   129b0:	48 83 ec 20          	sub    $0x20,%rsp
   129b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   129bc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   129c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   129c4:	48 89 c7             	mov    %rax,%rdi
   129c7:	e8 b6 1c 00 00       	call   14682 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   129cc:	48 89 c2             	mov    %rax,%rdx
   129cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129d3:	48 89 d6             	mov    %rdx,%rsi
   129d6:	48 89 c7             	mov    %rax,%rdi
   129d9:	e8 b2 1c 00 00       	call   14690 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   129de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   129e2:	c9                   	leave
   129e3:	c3                   	ret

00000000000129e4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   129e4:	55                   	push   %rbp
   129e5:	48 89 e5             	mov    %rsp,%rbp
   129e8:	48 83 ec 10          	sub    $0x10,%rsp
   129ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   129f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129f8:	48 89 c7             	mov    %rax,%rdi
   129fb:	e8 f8 02 00 00       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12a00:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12a04:	0f 92 c0             	setb   %al
   12a07:	84 c0                	test   %al,%al
   12a09:	74 24                	je     12a2f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   12a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a0f:	48 89 c7             	mov    %rax,%rdi
   12a12:	e8 e1 02 00 00       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12a17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a1b:	48 29 c2             	sub    %rax,%rdx
   12a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a22:	48 89 d6             	mov    %rdx,%rsi
   12a25:	48 89 c7             	mov    %rax,%rdi
   12a28:	e8 05 1d 00 00       	call   14732 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
   12a2d:	eb 38                	jmp    12a67 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   12a2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a33:	48 89 c7             	mov    %rax,%rdi
   12a36:	e8 bd 02 00 00       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12a3b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12a3f:	0f 92 c0             	setb   %al
   12a42:	84 c0                	test   %al,%al
   12a44:	74 21                	je     12a67 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   12a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a4a:	48 8b 00             	mov    (%rax),%rax
   12a4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a51:	48 c1 e2 03          	shl    $0x3,%rdx
   12a55:	48 01 c2             	add    %rax,%rdx
   12a58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a5c:	48 89 d6             	mov    %rdx,%rsi
   12a5f:	48 89 c7             	mov    %rax,%rdi
   12a62:	e8 d5 1e 00 00       	call   1493c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   12a67:	90                   	nop
   12a68:	c9                   	leave
   12a69:	c3                   	ret

0000000000012a6a <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   12a6a:	55                   	push   %rbp
   12a6b:	48 89 e5             	mov    %rsp,%rbp
   12a6e:	48 83 ec 10          	sub    $0x10,%rsp
   12a72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   12a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a7e:	48 89 c7             	mov    %rax,%rdi
   12a81:	e8 16 1f 00 00       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12a86:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12a8a:	0f 92 c0             	setb   %al
   12a8d:	84 c0                	test   %al,%al
   12a8f:	74 24                	je     12ab5 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   12a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a95:	48 89 c7             	mov    %rax,%rdi
   12a98:	e8 ff 1e 00 00       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12a9d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12aa1:	48 29 c2             	sub    %rax,%rdx
   12aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aa8:	48 89 d6             	mov    %rdx,%rsi
   12aab:	48 89 c7             	mov    %rax,%rdi
   12aae:	e8 0d 1f 00 00       	call   149c0 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
   12ab3:	eb 38                	jmp    12aed <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   12ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ab9:	48 89 c7             	mov    %rax,%rdi
   12abc:	e8 db 1e 00 00       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12ac1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   12ac5:	0f 92 c0             	setb   %al
   12ac8:	84 c0                	test   %al,%al
   12aca:	74 21                	je     12aed <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   12acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ad0:	48 8b 00             	mov    (%rax),%rax
   12ad3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12ad7:	48 c1 e2 03          	shl    $0x3,%rdx
   12adb:	48 01 c2             	add    %rax,%rdx
   12ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ae2:	48 89 d6             	mov    %rdx,%rsi
   12ae5:	48 89 c7             	mov    %rax,%rdi
   12ae8:	e8 dd 20 00 00       	call   14bca <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   12aed:	90                   	nop
   12aee:	c9                   	leave
   12aef:	c3                   	ret

0000000000012af0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12af0:	55                   	push   %rbp
   12af1:	48 89 e5             	mov    %rsp,%rbp
   12af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12af8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b00:	48 8b 00             	mov    (%rax),%rax
   12b03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b07:	48 c1 e2 03          	shl    $0x3,%rdx
   12b0b:	48 01 d0             	add    %rdx,%rax
      }
   12b0e:	5d                   	pop    %rbp
   12b0f:	c3                   	ret

0000000000012b10 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12b10:	55                   	push   %rbp
   12b11:	48 89 e5             	mov    %rsp,%rbp
   12b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b20:	48 8b 00             	mov    (%rax),%rax
   12b23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b27:	48 c1 e2 03          	shl    $0x3,%rdx
   12b2b:	48 01 d0             	add    %rdx,%rax
      }
   12b2e:	5d                   	pop    %rbp
   12b2f:	c3                   	ret

0000000000012b30 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12b30:	55                   	push   %rbp
   12b31:	48 89 e5             	mov    %rsp,%rbp
   12b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   12b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b40:	48 8b 00             	mov    (%rax),%rax
   12b43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b47:	48 c1 e2 03          	shl    $0x3,%rdx
   12b4b:	48 01 d0             	add    %rdx,%rax
      }
   12b4e:	5d                   	pop    %rbp
   12b4f:	c3                   	ret

0000000000012b50 <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12b50:	55                   	push   %rbp
   12b51:	48 89 e5             	mov    %rsp,%rbp
   12b54:	48 83 ec 10          	sub    $0x10,%rsp
   12b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b60:	48 89 c7             	mov    %rax,%rdi
   12b63:	e8 c2 20 00 00       	call   14c2a <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   12b68:	90                   	nop
   12b69:	c9                   	leave
   12b6a:	c3                   	ret
   12b6b:	90                   	nop

0000000000012b6c <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12b6c:	55                   	push   %rbp
   12b6d:	48 89 e5             	mov    %rsp,%rbp
   12b70:	48 83 ec 10          	sub    $0x10,%rsp
   12b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b7c:	48 89 c7             	mov    %rax,%rdi
   12b7f:	e8 b2 20 00 00       	call   14c36 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   12b84:	90                   	nop
   12b85:	c9                   	leave
   12b86:	c3                   	ret
   12b87:	90                   	nop

0000000000012b88 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   12b88:	55                   	push   %rbp
   12b89:	48 89 e5             	mov    %rsp,%rbp
   12b8c:	53                   	push   %rbx
   12b8d:	48 83 ec 38          	sub    $0x38,%rsp
   12b91:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12b95:	48 89 f0             	mov    %rsi,%rax
   12b98:	48 89 d6             	mov    %rdx,%rsi
   12b9b:	48 89 f2             	mov    %rsi,%rdx
   12b9e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12ba2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12ba6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   12baa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12bb2:	48 89 d6             	mov    %rdx,%rsi
   12bb5:	48 89 c7             	mov    %rax,%rdi
   12bb8:	e8 85 20 00 00       	call   14c42 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   12bbd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12bc1:	48 89 c7             	mov    %rax,%rdi
   12bc4:	e8 b1 20 00 00       	call   14c7a <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   12bc9:	48 89 c3             	mov    %rax,%rbx
   12bcc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12bd0:	48 89 c7             	mov    %rax,%rdi
   12bd3:	e8 90 20 00 00       	call   14c68 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   12bd8:	48 89 c1             	mov    %rax,%rcx
   12bdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bdf:	48 89 da             	mov    %rbx,%rdx
   12be2:	48 89 ce             	mov    %rcx,%rsi
   12be5:	48 89 c7             	mov    %rax,%rdi
   12be8:	e8 f3 20 00 00       	call   14ce0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   12bed:	eb 1a                	jmp    12c09 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   12bef:	48 89 c3             	mov    %rax,%rbx
   12bf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bf6:	48 89 c7             	mov    %rax,%rdi
   12bf9:	e8 2a 03 00 00       	call   12f28 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   12bfe:	48 89 d8             	mov    %rbx,%rax
   12c01:	48 89 c7             	mov    %rax,%rdi
   12c04:	e8 f7 1b ff ff       	call   4800 <_Unwind_Resume@plt>
   12c09:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12c0d:	c9                   	leave
   12c0e:	c3                   	ret
   12c0f:	90                   	nop

0000000000012c10 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12c10:	55                   	push   %rbp
   12c11:	48 89 e5             	mov    %rsp,%rbp
   12c14:	48 83 ec 10          	sub    $0x10,%rsp
   12c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   12c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c20:	48 89 c7             	mov    %rax,%rdi
   12c23:	e8 68 21 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12c28:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   12c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c2f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c37:	48 8b 00             	mov    (%rax),%rax
   12c3a:	48 89 ce             	mov    %rcx,%rsi
   12c3d:	48 89 c7             	mov    %rax,%rdi
   12c40:	e8 59 21 00 00       	call   14d9e <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   12c45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c49:	48 89 c7             	mov    %rax,%rdi
   12c4c:	e8 d7 02 00 00       	call   12f28 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   12c51:	90                   	nop
   12c52:	c9                   	leave
   12c53:	c3                   	ret

0000000000012c54 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12c54:	55                   	push   %rbp
   12c55:	48 89 e5             	mov    %rsp,%rbp
   12c58:	48 83 ec 10          	sub    $0x10,%rsp
   12c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c64:	48 89 c7             	mov    %rax,%rdi
   12c67:	e8 5c 21 00 00       	call   14dc8 <_ZNSt15__new_allocatorIjEC1Ev>
   12c6c:	90                   	nop
   12c6d:	c9                   	leave
   12c6e:	c3                   	ret
   12c6f:	90                   	nop

0000000000012c70 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   12c70:	55                   	push   %rbp
   12c71:	48 89 e5             	mov    %rsp,%rbp
   12c74:	53                   	push   %rbx
   12c75:	48 83 ec 38          	sub    $0x38,%rsp
   12c79:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12c7d:	48 89 f0             	mov    %rsi,%rax
   12c80:	48 89 d6             	mov    %rdx,%rsi
   12c83:	48 89 f2             	mov    %rsi,%rdx
   12c86:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12c8a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12c8e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   12c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c96:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12c9a:	48 89 d6             	mov    %rdx,%rsi
   12c9d:	48 89 c7             	mov    %rax,%rdi
   12ca0:	e8 2f 21 00 00       	call   14dd4 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   12ca5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12ca9:	48 89 c7             	mov    %rax,%rdi
   12cac:	e8 5b 21 00 00       	call   14e0c <_ZNKSt16initializer_listIjE3endEv>
   12cb1:	48 89 c3             	mov    %rax,%rbx
   12cb4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12cb8:	48 89 c7             	mov    %rax,%rdi
   12cbb:	e8 3a 21 00 00       	call   14dfa <_ZNKSt16initializer_listIjE5beginEv>
   12cc0:	48 89 c1             	mov    %rax,%rcx
   12cc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cc7:	48 89 da             	mov    %rbx,%rdx
   12cca:	48 89 ce             	mov    %rcx,%rsi
   12ccd:	48 89 c7             	mov    %rax,%rdi
   12cd0:	e8 9d 21 00 00       	call   14e72 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   12cd5:	eb 1a                	jmp    12cf1 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   12cd7:	48 89 c3             	mov    %rax,%rbx
   12cda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cde:	48 89 c7             	mov    %rax,%rdi
   12ce1:	e8 ec eb ff ff       	call   118d2 <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   12ce6:	48 89 d8             	mov    %rbx,%rax
   12ce9:	48 89 c7             	mov    %rax,%rdi
   12cec:	e8 0f 1b ff ff       	call   4800 <_Unwind_Resume@plt>
   12cf1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12cf5:	c9                   	leave
   12cf6:	c3                   	ret
   12cf7:	90                   	nop

0000000000012cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12cf8:	55                   	push   %rbp
   12cf9:	48 89 e5             	mov    %rsp,%rbp
   12cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d04:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d0c:	48 8b 00             	mov    (%rax),%rax
   12d0f:	48 29 c2             	sub    %rax,%rdx
   12d12:	48 89 d0             	mov    %rdx,%rax
   12d15:	48 c1 f8 03          	sar    $0x3,%rax
   12d19:	5d                   	pop    %rbp
   12d1a:	c3                   	ret
   12d1b:	90                   	nop

0000000000012d1c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   12d1c:	55                   	push   %rbp
   12d1d:	48 89 e5             	mov    %rsp,%rbp
   12d20:	48 83 ec 10          	sub    $0x10,%rsp
   12d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d2c:	48 8b 10             	mov    (%rax),%rdx
   12d2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d33:	48 89 d6             	mov    %rdx,%rsi
   12d36:	48 89 c7             	mov    %rax,%rdi
   12d39:	e8 e4 21 00 00       	call   14f22 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12d3e:	c9                   	leave
   12d3f:	c3                   	ret

0000000000012d40 <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   12d40:	55                   	push   %rbp
   12d41:	48 89 e5             	mov    %rsp,%rbp
   12d44:	48 83 ec 10          	sub    $0x10,%rsp
   12d48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d50:	48 8b 10             	mov    (%rax),%rdx
   12d53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d57:	48 89 d6             	mov    %rdx,%rsi
   12d5a:	48 89 c7             	mov    %rax,%rdi
   12d5d:	e8 d2 21 00 00       	call   14f34 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   12d62:	c9                   	leave
   12d63:	c3                   	ret

0000000000012d64 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12d64:	55                   	push   %rbp
   12d65:	48 89 e5             	mov    %rsp,%rbp
   12d68:	48 83 ec 10          	sub    $0x10,%rsp
   12d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d74:	48 89 c7             	mov    %rax,%rdi
   12d77:	e8 70 f9 ff ff       	call   126ec <_ZNSaIP13VkImageView_TEC1Ev>
   12d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d80:	48 89 c7             	mov    %rax,%rdi
   12d83:	e8 be 21 00 00       	call   14f46 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12d88:	90                   	nop
   12d89:	c9                   	leave
   12d8a:	c3                   	ret
   12d8b:	90                   	nop

0000000000012d8c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12d8c:	55                   	push   %rbp
   12d8d:	48 89 e5             	mov    %rsp,%rbp
   12d90:	48 83 ec 10          	sub    $0x10,%rsp
   12d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d9c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12da4:	48 8b 00             	mov    (%rax),%rax
   12da7:	48 29 c2             	sub    %rax,%rdx
   12daa:	48 89 d0             	mov    %rdx,%rax
   12dad:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12db1:	48 89 c2             	mov    %rax,%rdx
   12db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12db8:	48 8b 08             	mov    (%rax),%rcx
   12dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dbf:	48 89 ce             	mov    %rcx,%rsi
   12dc2:	48 89 c7             	mov    %rax,%rdi
   12dc5:	e8 aa 21 00 00       	call   14f74 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dce:	48 89 c7             	mov    %rax,%rdi
   12dd1:	e8 62 e8 ff ff       	call   11638 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   12dd6:	90                   	nop
   12dd7:	c9                   	leave
   12dd8:	c3                   	ret
   12dd9:	90                   	nop

0000000000012dda <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12dda:	55                   	push   %rbp
   12ddb:	48 89 e5             	mov    %rsp,%rbp
   12dde:	48 83 ec 10          	sub    $0x10,%rsp
   12de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dea:	48 89 c7             	mov    %rax,%rdi
   12ded:	e8 76 5f ff ff       	call   8d68 <_ZNSaIP9VkImage_TEC1Ev>
   12df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12df6:	48 89 c7             	mov    %rax,%rdi
   12df9:	e8 06 85 ff ff       	call   b304 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12dfe:	90                   	nop
   12dff:	c9                   	leave
   12e00:	c3                   	ret
   12e01:	90                   	nop

0000000000012e02 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12e02:	55                   	push   %rbp
   12e03:	48 89 e5             	mov    %rsp,%rbp
   12e06:	48 83 ec 10          	sub    $0x10,%rsp
   12e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e12:	48 89 c7             	mov    %rax,%rdi
   12e15:	e8 90 21 00 00       	call   14faa <_ZNSaIP15VkFramebuffer_TEC1Ev>
   12e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e1e:	48 89 c7             	mov    %rax,%rdi
   12e21:	e8 a0 21 00 00       	call   14fc6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12e26:	90                   	nop
   12e27:	c9                   	leave
   12e28:	c3                   	ret
   12e29:	90                   	nop

0000000000012e2a <_ZNSaIP15VkFramebuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12e2a:	55                   	push   %rbp
   12e2b:	48 89 e5             	mov    %rsp,%rbp
   12e2e:	48 83 ec 10          	sub    $0x10,%rsp
   12e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e3a:	48 89 c7             	mov    %rax,%rdi
   12e3d:	e8 b2 21 00 00       	call   14ff4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   12e42:	90                   	nop
   12e43:	c9                   	leave
   12e44:	c3                   	ret
   12e45:	90                   	nop

0000000000012e46 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12e46:	55                   	push   %rbp
   12e47:	48 89 e5             	mov    %rsp,%rbp
   12e4a:	48 83 ec 10          	sub    $0x10,%rsp
   12e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e56:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e5e:	48 8b 00             	mov    (%rax),%rax
   12e61:	48 29 c2             	sub    %rax,%rdx
   12e64:	48 89 d0             	mov    %rdx,%rax
   12e67:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12e6b:	48 89 c2             	mov    %rax,%rdx
   12e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e72:	48 8b 08             	mov    (%rax),%rcx
   12e75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e79:	48 89 ce             	mov    %rcx,%rsi
   12e7c:	48 89 c7             	mov    %rax,%rdi
   12e7f:	e8 7c 21 00 00       	call   15000 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e88:	48 89 c7             	mov    %rax,%rdi
   12e8b:	e8 6e e8 ff ff       	call   116fe <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   12e90:	90                   	nop
   12e91:	c9                   	leave
   12e92:	c3                   	ret
   12e93:	90                   	nop

0000000000012e94 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12e94:	55                   	push   %rbp
   12e95:	48 89 e5             	mov    %rsp,%rbp
   12e98:	48 83 ec 10          	sub    $0x10,%rsp
   12e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   12ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ea4:	48 89 c7             	mov    %rax,%rdi
   12ea7:	e8 8a 21 00 00       	call   15036 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12eac:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   12eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12eb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ebb:	48 8b 00             	mov    (%rax),%rax
   12ebe:	48 89 ce             	mov    %rcx,%rsi
   12ec1:	48 89 c7             	mov    %rax,%rdi
   12ec4:	e8 7b 21 00 00       	call   15044 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   12ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ecd:	48 89 c7             	mov    %rax,%rdi
   12ed0:	e8 71 ff ff ff       	call   12e46 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   12ed5:	90                   	nop
   12ed6:	c9                   	leave
   12ed7:	c3                   	ret

0000000000012ed8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12ed8:	55                   	push   %rbp
   12ed9:	48 89 e5             	mov    %rsp,%rbp
   12edc:	48 83 ec 10          	sub    $0x10,%rsp
   12ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ee8:	48 89 c7             	mov    %rax,%rdi
   12eeb:	e8 d6 21 ff ff       	call   50c6 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   12ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ef4:	48 89 c7             	mov    %rax,%rdi
   12ef7:	e8 86 26 ff ff       	call   5582 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12efc:	90                   	nop
   12efd:	c9                   	leave
   12efe:	c3                   	ret
   12eff:	90                   	nop

0000000000012f00 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12f00:	55                   	push   %rbp
   12f01:	48 89 e5             	mov    %rsp,%rbp
   12f04:	48 83 ec 10          	sub    $0x10,%rsp
   12f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f10:	48 89 c7             	mov    %rax,%rdi
   12f13:	e8 38 fc ff ff       	call   12b50 <_ZNSaIP13VkSemaphore_TEC1Ev>
   12f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f1c:	48 89 c7             	mov    %rax,%rdi
   12f1f:	e8 4a 21 00 00       	call   1506e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12f24:	90                   	nop
   12f25:	c9                   	leave
   12f26:	c3                   	ret
   12f27:	90                   	nop

0000000000012f28 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12f28:	55                   	push   %rbp
   12f29:	48 89 e5             	mov    %rsp,%rbp
   12f2c:	48 83 ec 10          	sub    $0x10,%rsp
   12f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f38:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f40:	48 8b 00             	mov    (%rax),%rax
   12f43:	48 29 c2             	sub    %rax,%rdx
   12f46:	48 89 d0             	mov    %rdx,%rax
   12f49:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12f4d:	48 89 c2             	mov    %rax,%rdx
   12f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f54:	48 8b 08             	mov    (%rax),%rcx
   12f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f5b:	48 89 ce             	mov    %rcx,%rsi
   12f5e:	48 89 c7             	mov    %rax,%rdi
   12f61:	e8 36 21 00 00       	call   1509c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f6a:	48 89 c7             	mov    %rax,%rdi
   12f6d:	e8 18 e8 ff ff       	call   1178a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   12f72:	90                   	nop
   12f73:	c9                   	leave
   12f74:	c3                   	ret
   12f75:	90                   	nop

0000000000012f76 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12f76:	55                   	push   %rbp
   12f77:	48 89 e5             	mov    %rsp,%rbp
   12f7a:	48 83 ec 10          	sub    $0x10,%rsp
   12f7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f86:	48 89 c7             	mov    %rax,%rdi
   12f89:	e8 44 21 00 00       	call   150d2 <_ZNSaIP9VkFence_TEC1Ev>
   12f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f92:	48 89 c7             	mov    %rax,%rdi
   12f95:	e8 54 21 00 00       	call   150ee <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12f9a:	90                   	nop
   12f9b:	c9                   	leave
   12f9c:	c3                   	ret
   12f9d:	90                   	nop

0000000000012f9e <_ZNSaIP9VkFence_TED1Ev>:
   12f9e:	55                   	push   %rbp
   12f9f:	48 89 e5             	mov    %rsp,%rbp
   12fa2:	48 83 ec 10          	sub    $0x10,%rsp
   12fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fae:	48 89 c7             	mov    %rax,%rdi
   12fb1:	e8 66 21 00 00       	call   1511c <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
   12fb6:	90                   	nop
   12fb7:	c9                   	leave
   12fb8:	c3                   	ret
   12fb9:	90                   	nop

0000000000012fba <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12fba:	55                   	push   %rbp
   12fbb:	48 89 e5             	mov    %rsp,%rbp
   12fbe:	48 83 ec 10          	sub    $0x10,%rsp
   12fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fca:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fd2:	48 8b 00             	mov    (%rax),%rax
   12fd5:	48 29 c2             	sub    %rax,%rdx
   12fd8:	48 89 d0             	mov    %rdx,%rax
   12fdb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12fdf:	48 89 c2             	mov    %rax,%rdx
   12fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fe6:	48 8b 08             	mov    (%rax),%rcx
   12fe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fed:	48 89 ce             	mov    %rcx,%rsi
   12ff0:	48 89 c7             	mov    %rax,%rdi
   12ff3:	e8 30 21 00 00       	call   15128 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ffc:	48 89 c7             	mov    %rax,%rdi
   12fff:	e8 da e7 ff ff       	call   117de <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
   13004:	90                   	nop
   13005:	c9                   	leave
   13006:	c3                   	ret
   13007:	90                   	nop

0000000000013008 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   13008:	55                   	push   %rbp
   13009:	48 89 e5             	mov    %rsp,%rbp
   1300c:	48 83 ec 10          	sub    $0x10,%rsp
   13010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   13014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13018:	48 89 c7             	mov    %rax,%rdi
   1301b:	e8 3e 21 00 00       	call   1515e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13020:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   13023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13027:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1302b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1302f:	48 8b 00             	mov    (%rax),%rax
   13032:	48 89 ce             	mov    %rcx,%rsi
   13035:	48 89 c7             	mov    %rax,%rdi
   13038:	e8 2f 21 00 00       	call   1516c <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
   1303d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13041:	48 89 c7             	mov    %rax,%rdi
   13044:	e8 71 ff ff ff       	call   12fba <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
   13049:	90                   	nop
   1304a:	c9                   	leave
   1304b:	c3                   	ret

000000000001304c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   1304c:	55                   	push   %rbp
   1304d:	48 89 e5             	mov    %rsp,%rbp
   13050:	48 83 ec 20          	sub    $0x20,%rsp
   13054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13058:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1305c:	89 d0                	mov    %edx,%eax
   1305e:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   13061:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   13065:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13069:	be 01 00 00 00       	mov    $0x1,%esi
   1306e:	48 89 c7             	mov    %rax,%rdi
   13071:	e8 1a 14 ff ff       	call   4490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   13076:	48 89 c7             	mov    %rax,%rdi
   13079:	e8 d3 00 00 00       	call   13151 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1307e:	48 89 c2             	mov    %rax,%rdx
   13081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13085:	48 89 d6             	mov    %rdx,%rsi
   13088:	48 89 c7             	mov    %rax,%rdi
   1308b:	e8 a0 11 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   13090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13094:	c9                   	leave
   13095:	c3                   	ret

0000000000013096 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   13096:	55                   	push   %rbp
   13097:	48 89 e5             	mov    %rsp,%rbp
   1309a:	48 83 ec 20          	sub    $0x20,%rsp
   1309e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   130a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   130a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   130aa:	48 89 d6             	mov    %rdx,%rsi
   130ad:	48 89 c7             	mov    %rax,%rdi
   130b0:	e8 e1 20 00 00       	call   15196 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   130b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130b9:	c9                   	leave
   130ba:	c3                   	ret
   130bb:	90                   	nop

00000000000130bc <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   130bc:	55                   	push   %rbp
   130bd:	48 89 e5             	mov    %rsp,%rbp
   130c0:	48 83 ec 20          	sub    $0x20,%rsp
   130c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   130c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130cc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   130d0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   130d4:	48 89 d6             	mov    %rdx,%rsi
   130d7:	48 89 c7             	mov    %rax,%rdi
   130da:	e8 b7 20 00 00       	call   15196 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   130df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130e3:	c9                   	leave
   130e4:	c3                   	ret

00000000000130e5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   130e5:	55                   	push   %rbp
   130e6:	48 89 e5             	mov    %rsp,%rbp
   130e9:	53                   	push   %rbx
   130ea:	48 83 ec 18          	sub    $0x18,%rsp
   130ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   130f2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   130f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130fa:	48 89 c7             	mov    %rax,%rdi
   130fd:	e8 b2 20 00 00       	call   151b4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13102:	48 8b 18             	mov    (%rax),%rbx
   13105:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13109:	48 89 c7             	mov    %rax,%rdi
   1310c:	e8 a3 20 00 00       	call   151b4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13111:	48 8b 00             	mov    (%rax),%rax
   13114:	48 39 c3             	cmp    %rax,%rbx
   13117:	0f 95 c0             	setne  %al
   1311a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1311e:	c9                   	leave
   1311f:	c3                   	ret

0000000000013120 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13120:	55                   	push   %rbp
   13121:	48 89 e5             	mov    %rsp,%rbp
   13124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   13128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1312c:	48 8b 00             	mov    (%rax),%rax
   1312f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13137:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1313a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1313e:	5d                   	pop    %rbp
   1313f:	c3                   	ret

0000000000013140 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13140:	55                   	push   %rbp
   13141:	48 89 e5             	mov    %rsp,%rbp
   13144:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   13148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1314c:	48 8b 00             	mov    (%rax),%rax
   1314f:	5d                   	pop    %rbp
   13150:	c3                   	ret

0000000000013151 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   13151:	55                   	push   %rbp
   13152:	48 89 e5             	mov    %rsp,%rbp
   13155:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   13159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1315d:	5d                   	pop    %rbp
   1315e:	c3                   	ret
   1315f:	90                   	nop

0000000000013160 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   13160:	55                   	push   %rbp
   13161:	48 89 e5             	mov    %rsp,%rbp
   13164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1316c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13177:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1317e:	00 
   1317f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13183:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1318a:	00 
	{ }
   1318b:	90                   	nop
   1318c:	5d                   	pop    %rbp
   1318d:	c3                   	ret

000000000001318e <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1318e:	55                   	push   %rbp
   1318f:	48 89 e5             	mov    %rsp,%rbp
   13192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13196:	90                   	nop
   13197:	5d                   	pop    %rbp
   13198:	c3                   	ret
   13199:	90                   	nop

000000000001319a <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   1319a:	55                   	push   %rbp
   1319b:	48 89 e5             	mov    %rsp,%rbp
   1319e:	48 83 ec 20          	sub    $0x20,%rsp
   131a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   131ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   131b3:	74 17                	je     131cc <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   131b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   131c1:	48 89 ce             	mov    %rcx,%rsi
   131c4:	48 89 c7             	mov    %rax,%rdi
   131c7:	e8 f6 1f 00 00       	call   151c2 <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   131cc:	90                   	nop
   131cd:	c9                   	leave
   131ce:	c3                   	ret
   131cf:	90                   	nop

00000000000131d0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   131d0:	55                   	push   %rbp
   131d1:	48 89 e5             	mov    %rsp,%rbp
   131d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   131d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131dc:	5d                   	pop    %rbp
   131dd:	c3                   	ret

00000000000131de <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   131de:	55                   	push   %rbp
   131df:	48 89 e5             	mov    %rsp,%rbp
   131e2:	48 83 ec 20          	sub    $0x20,%rsp
   131e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   131f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   131f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131fa:	48 89 d6             	mov    %rdx,%rsi
   131fd:	48 89 c7             	mov    %rax,%rdi
   13200:	e8 eb 1f 00 00       	call   151f0 <_ZSt8_DestroyIPjEvT_S1_>
    }
   13205:	90                   	nop
   13206:	c9                   	leave
   13207:	c3                   	ret

0000000000013208 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13208:	55                   	push   %rbp
   13209:	48 89 e5             	mov    %rsp,%rbp
   1320c:	48 83 ec 10          	sub    $0x10,%rsp
   13210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1321c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13220:	48 89 d6             	mov    %rdx,%rsi
   13223:	48 89 c7             	mov    %rax,%rdi
   13226:	e8 b9 6f ff ff       	call   a1e4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   1322b:	90                   	nop
   1322c:	c9                   	leave
   1322d:	c3                   	ret

000000000001322e <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   1322e:	55                   	push   %rbp
   1322f:	48 89 e5             	mov    %rsp,%rbp
   13232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1323a:	48 8b 00             	mov    (%rax),%rax
   1323d:	5d                   	pop    %rbp
   1323e:	c3                   	ret
   1323f:	90                   	nop

0000000000013240 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   13240:	55                   	push   %rbp
   13241:	48 89 e5             	mov    %rsp,%rbp
   13244:	53                   	push   %rbx
   13245:	48 83 ec 18          	sub    $0x18,%rsp
   13249:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1324d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13251:	48 89 c7             	mov    %rax,%rdi
   13254:	e8 d5 ff ff ff       	call   1322e <_ZNKSt16initializer_listIPKcE5beginEv>
   13259:	48 89 c3             	mov    %rax,%rbx
   1325c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13260:	48 89 c7             	mov    %rax,%rdi
   13263:	e8 ae 1f 00 00       	call   15216 <_ZNKSt16initializer_listIPKcE4sizeEv>
   13268:	48 c1 e0 03          	shl    $0x3,%rax
   1326c:	48 01 d8             	add    %rbx,%rax
   1326f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13273:	c9                   	leave
   13274:	c3                   	ret

0000000000013275 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   13275:	55                   	push   %rbp
   13276:	48 89 e5             	mov    %rsp,%rbp
   13279:	48 83 ec 10          	sub    $0x10,%rsp
   1327d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13281:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13285:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13289:	48 89 c7             	mov    %rax,%rdi
   1328c:	e8 97 1f 00 00       	call   15228 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   13291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13295:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13299:	48 89 d6             	mov    %rdx,%rsi
   1329c:	48 89 c7             	mov    %rax,%rdi
   1329f:	e8 8f 1f 00 00       	call   15233 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   132a4:	c9                   	leave
   132a5:	c3                   	ret

00000000000132a6 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   132a6:	55                   	push   %rbp
   132a7:	48 89 e5             	mov    %rsp,%rbp
   132aa:	53                   	push   %rbx
   132ab:	48 83 ec 38          	sub    $0x38,%rsp
   132af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   132b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   132b7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   132bb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   132bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   132c3:	48 89 d6             	mov    %rdx,%rsi
   132c6:	48 89 c7             	mov    %rax,%rdi
   132c9:	e8 a7 ff ff ff       	call   13275 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   132ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   132d2:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   132d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132da:	48 89 c7             	mov    %rax,%rdi
   132dd:	e8 78 60 ff ff       	call   935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   132e2:	48 89 c2             	mov    %rax,%rdx
   132e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132e9:	48 89 d6             	mov    %rdx,%rsi
   132ec:	48 89 c7             	mov    %rax,%rdi
   132ef:	e8 67 5f ff ff       	call   925b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   132f4:	48 89 c6             	mov    %rax,%rsi
   132f7:	48 89 df             	mov    %rbx,%rdi
   132fa:	e8 71 7a ff ff       	call   ad70 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   132ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13303:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   13306:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1330a:	48 8b 00             	mov    (%rax),%rax
   1330d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13311:	48 c1 e2 03          	shl    $0x3,%rdx
   13315:	48 01 c2             	add    %rax,%rdx
   13318:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1331c:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   13320:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13324:	48 89 c7             	mov    %rax,%rdi
   13327:	e8 2e 60 ff ff       	call   935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1332c:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1332f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13333:	48 8b 10             	mov    (%rax),%rdx
   13336:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1333a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1333e:	48 89 c7             	mov    %rax,%rdi
   13341:	e8 07 1f 00 00       	call   1524d <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   13346:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1334a:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1334e:	90                   	nop
   1334f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13353:	c9                   	leave
   13354:	c3                   	ret

0000000000013355 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   13355:	55                   	push   %rbp
   13356:	48 89 e5             	mov    %rsp,%rbp
   13359:	48 83 ec 20          	sub    $0x20,%rsp
   1335d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13361:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13365:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   13369:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1336d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13371:	48 89 d6             	mov    %rdx,%rsi
   13374:	48 89 c7             	mov    %rax,%rdi
   13377:	e8 02 1f 00 00       	call   1527e <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   1337c:	90                   	nop
   1337d:	c9                   	leave
   1337e:	c3                   	ret
   1337f:	90                   	nop

0000000000013380 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13380:	55                   	push   %rbp
   13381:	48 89 e5             	mov    %rsp,%rbp
   13384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13388:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1338c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13390:	48 8b 10             	mov    (%rax),%rdx
   13393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13397:	48 89 10             	mov    %rdx,(%rax)
   1339a:	90                   	nop
   1339b:	5d                   	pop    %rbp
   1339c:	c3                   	ret
   1339d:	90                   	nop

000000000001339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1339e:	55                   	push   %rbp
   1339f:	48 89 e5             	mov    %rsp,%rbp
   133a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   133a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133aa:	5d                   	pop    %rbp
   133ab:	c3                   	ret

00000000000133ac <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   133ac:	55                   	push   %rbp
   133ad:	48 89 e5             	mov    %rsp,%rbp
   133b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   133b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133b8:	5d                   	pop    %rbp
   133b9:	c3                   	ret

00000000000133ba <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   133ba:	55                   	push   %rbp
   133bb:	48 89 e5             	mov    %rsp,%rbp
   133be:	48 83 ec 20          	sub    $0x20,%rsp
   133c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   133ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   133ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133d2:	48 89 c7             	mov    %rax,%rdi
   133d5:	e8 d2 ff ff ff       	call   133ac <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   133da:	48 89 c2             	mov    %rax,%rdx
   133dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   133e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133e5:	48 89 ce             	mov    %rcx,%rsi
   133e8:	48 89 c7             	mov    %rax,%rdi
   133eb:	e8 b4 1e 00 00       	call   152a4 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   133f0:	90                   	nop
   133f1:	c9                   	leave
   133f2:	c3                   	ret
   133f3:	90                   	nop

00000000000133f4 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   133f4:	55                   	push   %rbp
   133f5:	48 89 e5             	mov    %rsp,%rbp
   133f8:	53                   	push   %rbx
   133f9:	48 83 ec 68          	sub    $0x68,%rsp
   133fd:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   13401:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   13405:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   13409:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1340d:	48 8d 15 aa a9 00 00 	lea    0xa9aa(%rip),%rdx        # 1ddbe <_ZZN9VulkanApp6renderEvE11submitCount+0x2be>
   13414:	be 01 00 00 00       	mov    $0x1,%esi
   13419:	48 89 c7             	mov    %rax,%rdi
   1341c:	e8 c5 1e 00 00       	call   152e6 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   13421:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   13425:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13429:	48 8b 00             	mov    (%rax),%rax
   1342c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   13430:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13434:	48 8b 40 08          	mov    0x8(%rax),%rax
   13438:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   1343c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13440:	48 89 c7             	mov    %rax,%rdi
   13443:	e8 e8 e5 ff ff       	call   11a30 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   13448:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1344c:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   13450:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13454:	48 89 d6             	mov    %rdx,%rsi
   13457:	48 89 c7             	mov    %rax,%rdi
   1345a:	e8 4f 1f 00 00       	call   153ae <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   1345f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   13463:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13467:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1346b:	48 89 d6             	mov    %rdx,%rsi
   1346e:	48 89 c7             	mov    %rax,%rdi
   13471:	e8 fa 78 ff ff       	call   ad70 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   13476:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   1347a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1347e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   13482:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13486:	48 89 c7             	mov    %rax,%rdi
   13489:	e8 1e ff ff ff       	call   133ac <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1348e:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   13491:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13495:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1349c:	00 
	  _Alloc_traits::construct(this->_M_impl,
   1349d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   134a1:	48 01 c1             	add    %rax,%rcx
   134a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   134a8:	48 89 ce             	mov    %rcx,%rsi
   134ab:	48 89 c7             	mov    %rax,%rdi
   134ae:	e8 07 ff ff ff       	call   133ba <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   134b3:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   134ba:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   134bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   134bf:	48 89 c7             	mov    %rax,%rdi
   134c2:	e8 93 5e ff ff       	call   935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   134c7:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   134ca:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   134ce:	48 89 c7             	mov    %rax,%rdi
   134d1:	e8 c8 fe ff ff       	call   1339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   134d6:	48 8b 30             	mov    (%rax),%rsi
   134d9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   134dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   134e1:	48 89 d9             	mov    %rbx,%rcx
   134e4:	48 89 c7             	mov    %rax,%rdi
   134e7:	e8 04 1f 00 00       	call   153f0 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   134ec:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   134f0:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   134f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   134f9:	48 89 c7             	mov    %rax,%rdi
   134fc:	e8 59 5e ff ff       	call   935a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   13501:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   13504:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13508:	48 89 c7             	mov    %rax,%rdi
   1350b:	e8 8e fe ff ff       	call   1339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13510:	48 8b 00             	mov    (%rax),%rax
   13513:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13517:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1351b:	48 89 d9             	mov    %rbx,%rcx
   1351e:	48 89 c7             	mov    %rax,%rdi
   13521:	e8 ca 1e 00 00       	call   153f0 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   13526:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   1352a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   1352e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13532:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   13536:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   1353a:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   1353e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13542:	48 89 ce             	mov    %rcx,%rsi
   13545:	48 89 c7             	mov    %rax,%rdi
   13548:	e8 41 5e ff ff       	call   938e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   1354d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13551:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13555:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   13558:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1355c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13560:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   13564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13568:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1356f:	00 
   13570:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13574:	48 01 c2             	add    %rax,%rdx
   13577:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1357b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1357f:	90                   	nop
   13580:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13584:	c9                   	leave
   13585:	c3                   	ret

0000000000013586 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   13586:	55                   	push   %rbp
   13587:	48 89 e5             	mov    %rsp,%rbp
   1358a:	48 83 ec 20          	sub    $0x20,%rsp
   1358e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   13592:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13596:	48 89 c7             	mov    %rax,%rdi
   13599:	e8 b8 e4 ff ff       	call   11a56 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1359e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   135a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   135a6:	be 01 00 00 00       	mov    $0x1,%esi
   135ab:	48 89 c7             	mov    %rax,%rdi
   135ae:	e8 6f 1e 00 00       	call   15422 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   135b3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   135b7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   135bb:	48 89 c7             	mov    %rax,%rdi
   135be:	e8 17 e5 ff ff       	call   11ada <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   135c3:	c9                   	leave
   135c4:	c3                   	ret
   135c5:	90                   	nop

00000000000135c6 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   135c6:	55                   	push   %rbp
   135c7:	48 89 e5             	mov    %rsp,%rbp
   135ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   135d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   135d6:	5d                   	pop    %rbp
   135d7:	c3                   	ret

00000000000135d8 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   135d8:	55                   	push   %rbp
   135d9:	48 89 e5             	mov    %rsp,%rbp
   135dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   135e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135e4:	5d                   	pop    %rbp
   135e5:	c3                   	ret

00000000000135e6 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   135e6:	55                   	push   %rbp
   135e7:	48 89 e5             	mov    %rsp,%rbp
   135ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   135ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135f2:	5d                   	pop    %rbp
   135f3:	c3                   	ret

00000000000135f4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   135f4:	55                   	push   %rbp
   135f5:	48 89 e5             	mov    %rsp,%rbp
   135f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   135fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13600:	5d                   	pop    %rbp
   13601:	c3                   	ret

0000000000013602 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   13602:	55                   	push   %rbp
   13603:	48 89 e5             	mov    %rsp,%rbp
   13606:	48 83 ec 20          	sub    $0x20,%rsp
   1360a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1360e:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   13612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13616:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1361a:	48 89 d6             	mov    %rdx,%rsi
   1361d:	48 89 c7             	mov    %rax,%rdi
   13620:	e8 3f 1e 00 00       	call   15464 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   13625:	90                   	nop
   13626:	c9                   	leave
   13627:	c3                   	ret

0000000000013628 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   13628:	55                   	push   %rbp
   13629:	48 89 e5             	mov    %rsp,%rbp
   1362c:	53                   	push   %rbx
   1362d:	48 83 ec 18          	sub    $0x18,%rsp
   13631:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13635:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   13639:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1363d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13641:	48 89 c7             	mov    %rax,%rdi
   13644:	e8 ab ff ff ff       	call   135f4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13649:	48 89 c6             	mov    %rax,%rsi
   1364c:	48 89 df             	mov    %rbx,%rdi
   1364f:	e8 ae ff ff ff       	call   13602 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   13654:	90                   	nop
   13655:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13659:	c9                   	leave
   1365a:	c3                   	ret
   1365b:	90                   	nop

000000000001365c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1365c:	55                   	push   %rbp
   1365d:	48 89 e5             	mov    %rsp,%rbp
   13660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13664:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13668:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1366c:	48 8b 10             	mov    (%rax),%rdx
   1366f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13673:	48 89 10             	mov    %rdx,(%rax)
   13676:	90                   	nop
   13677:	5d                   	pop    %rbp
   13678:	c3                   	ret
   13679:	90                   	nop

000000000001367a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1367a:	55                   	push   %rbp
   1367b:	48 89 e5             	mov    %rsp,%rbp
   1367e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13686:	5d                   	pop    %rbp
   13687:	c3                   	ret

0000000000013688 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   13688:	55                   	push   %rbp
   13689:	48 89 e5             	mov    %rsp,%rbp
   1368c:	53                   	push   %rbx
   1368d:	48 83 ec 18          	sub    $0x18,%rsp
   13691:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13695:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   13699:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1369d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   136a1:	84 c0                	test   %al,%al
   136a3:	74 35                	je     136da <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   136a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136a9:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   136ad:	84 c0                	test   %al,%al
   136af:	74 29                	je     136da <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   136b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136b5:	48 89 c7             	mov    %rax,%rdi
   136b8:	e8 e3 1d 00 00       	call   154a0 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   136bd:	48 89 c3             	mov    %rax,%rbx
   136c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136c4:	48 89 c7             	mov    %rax,%rdi
   136c7:	e8 4e 00 00 00       	call   1371a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   136cc:	48 89 de             	mov    %rbx,%rsi
   136cf:	48 89 c7             	mov    %rax,%rdi
   136d2:	e8 d7 1d 00 00       	call   154ae <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   136d7:	90                   	nop
      }
   136d8:	eb 38                	jmp    13712 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   136da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136de:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   136e2:	84 c0                	test   %al,%al
   136e4:	74 20                	je     13706 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   136e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   136ea:	48 89 c7             	mov    %rax,%rdi
   136ed:	e8 ae 1d 00 00       	call   154a0 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   136f2:	48 89 c2             	mov    %rax,%rdx
   136f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136f9:	48 89 d6             	mov    %rdx,%rsi
   136fc:	48 89 c7             	mov    %rax,%rdi
   136ff:	e8 e8 1d 00 00       	call   154ec <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   13704:	eb 0c                	jmp    13712 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   13706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1370a:	48 89 c7             	mov    %rax,%rdi
   1370d:	e8 20 1e 00 00       	call   15532 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   13712:	90                   	nop
   13713:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13717:	c9                   	leave
   13718:	c3                   	ret
   13719:	90                   	nop

000000000001371a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   1371a:	55                   	push   %rbp
   1371b:	48 89 e5             	mov    %rsp,%rbp
   1371e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   13722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13726:	5d                   	pop    %rbp
   13727:	c3                   	ret

0000000000013728 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13728:	55                   	push   %rbp
   13729:	48 89 e5             	mov    %rsp,%rbp
   1372c:	48 83 ec 10          	sub    $0x10,%rsp
   13730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13738:	48 89 c7             	mov    %rax,%rdi
   1373b:	e8 1a 1e 00 00       	call   1555a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   13740:	90                   	nop
   13741:	c9                   	leave
   13742:	c3                   	ret
   13743:	90                   	nop

0000000000013744 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   13744:	55                   	push   %rbp
   13745:	48 89 e5             	mov    %rsp,%rbp
   13748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   1374c:	90                   	nop
   1374d:	5d                   	pop    %rbp
   1374e:	c3                   	ret
   1374f:	90                   	nop

0000000000013750 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
   13750:	55                   	push   %rbp
   13751:	48 89 e5             	mov    %rsp,%rbp
   13754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13758:	90                   	nop
   13759:	5d                   	pop    %rbp
   1375a:	c3                   	ret
   1375b:	90                   	nop

000000000001375c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1375c:	55                   	push   %rbp
   1375d:	48 89 e5             	mov    %rsp,%rbp
   13760:	48 83 ec 20          	sub    $0x20,%rsp
   13764:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13768:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1376c:	eb 49                	jmp    137b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1376e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13772:	48 89 c7             	mov    %rax,%rdi
   13775:	e8 eb 1d 00 00       	call   15565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1377a:	48 89 c2             	mov    %rax,%rdx
   1377d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13781:	48 89 d6             	mov    %rdx,%rsi
   13784:	48 89 c7             	mov    %rax,%rdi
   13787:	e8 d0 ff ff ff       	call   1375c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   1378c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13790:	48 89 c7             	mov    %rax,%rdi
   13793:	e8 df 1d 00 00       	call   15577 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13798:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   1379c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   137a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137a4:	48 89 d6             	mov    %rdx,%rsi
   137a7:	48 89 c7             	mov    %rax,%rdi
   137aa:	e8 db 1d 00 00       	call   1558a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   137af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137b3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   137b7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   137bc:	75 b0                	jne    1376e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   137be:	90                   	nop
   137bf:	90                   	nop
   137c0:	c9                   	leave
   137c1:	c3                   	ret

00000000000137c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   137c2:	55                   	push   %rbp
   137c3:	48 89 e5             	mov    %rsp,%rbp
   137c6:	48 83 ec 10          	sub    $0x10,%rsp
   137ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   137ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137d2:	48 89 c7             	mov    %rax,%rdi
   137d5:	e8 ea 1d 00 00       	call   155c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   137da:	c9                   	leave
   137db:	c3                   	ret

00000000000137dc <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   137dc:	55                   	push   %rbp
   137dd:	48 89 e5             	mov    %rsp,%rbp
   137e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   137e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   137ec:	48 8b 10             	mov    (%rax),%rdx
   137ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137f3:	48 89 10             	mov    %rdx,(%rax)
   137f6:	90                   	nop
   137f7:	5d                   	pop    %rbp
   137f8:	c3                   	ret
   137f9:	90                   	nop

00000000000137fa <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   137fa:	55                   	push   %rbp
   137fb:	48 89 e5             	mov    %rsp,%rbp
   137fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13806:	5d                   	pop    %rbp
   13807:	c3                   	ret

0000000000013808 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   13808:	55                   	push   %rbp
   13809:	48 89 e5             	mov    %rsp,%rbp
   1380c:	48 83 ec 10          	sub    $0x10,%rsp
   13810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13814:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   13818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1381c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13820:	48 89 d6             	mov    %rdx,%rsi
   13823:	48 89 c7             	mov    %rax,%rdi
   13826:	e8 ab 1d 00 00       	call   155d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   1382b:	c9                   	leave
   1382c:	c3                   	ret
   1382d:	90                   	nop

000000000001382e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1382e:	55                   	push   %rbp
   1382f:	48 89 e5             	mov    %rsp,%rbp
   13832:	48 83 ec 10          	sub    $0x10,%rsp
   13836:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1383a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1383e:	48 89 c7             	mov    %rax,%rdi
   13841:	e8 dc 1d 00 00       	call   15622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   13846:	c9                   	leave
   13847:	c3                   	ret

0000000000013848 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   13848:	55                   	push   %rbp
   13849:	48 89 e5             	mov    %rsp,%rbp
   1384c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   13854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13858:	48 8b 10             	mov    (%rax),%rdx
   1385b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1385f:	48 8b 00             	mov    (%rax),%rax
   13862:	48 39 c2             	cmp    %rax,%rdx
   13865:	0f 94 c0             	sete   %al
   13868:	5d                   	pop    %rbp
   13869:	c3                   	ret

000000000001386a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   1386a:	55                   	push   %rbp
   1386b:	48 89 e5             	mov    %rsp,%rbp
   1386e:	48 83 ec 10          	sub    $0x10,%rsp
   13872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   13876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1387a:	48 89 c7             	mov    %rax,%rdi
   1387d:	e8 ca 1d 00 00       	call   1564c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   13882:	90                   	nop
   13883:	c9                   	leave
   13884:	c3                   	ret
   13885:	90                   	nop

0000000000013886 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   13886:	55                   	push   %rbp
   13887:	48 89 e5             	mov    %rsp,%rbp
   1388a:	48 83 ec 10          	sub    $0x10,%rsp
   1388e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   13892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13896:	48 8b 00             	mov    (%rax),%rax
   13899:	48 89 c7             	mov    %rax,%rdi
   1389c:	e8 b7 1d 00 00       	call   15658 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   138a1:	c9                   	leave
   138a2:	c3                   	ret
   138a3:	90                   	nop

00000000000138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   138a4:	55                   	push   %rbp
   138a5:	48 89 e5             	mov    %rsp,%rbp
   138a8:	48 83 ec 20          	sub    $0x20,%rsp
   138ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   138b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   138b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   138bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   138c0:	48 89 d6             	mov    %rdx,%rsi
   138c3:	48 89 c7             	mov    %rax,%rdi
   138c6:	e8 ab 1d 00 00       	call   15676 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   138cb:	c9                   	leave
   138cc:	c3                   	ret

00000000000138cd <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   138cd:	55                   	push   %rbp
   138ce:	48 89 e5             	mov    %rsp,%rbp
   138d1:	48 83 ec 10          	sub    $0x10,%rsp
   138d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   138dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   138e1:	48 89 c7             	mov    %rax,%rdi
   138e4:	e8 b5 1d 00 00       	call   1569e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   138e9:	48 89 c2             	mov    %rax,%rdx
   138ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138f0:	48 89 d6             	mov    %rdx,%rsi
   138f3:	48 89 c7             	mov    %rax,%rdi
   138f6:	e8 b1 1d 00 00       	call   156ac <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   138fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ff:	c9                   	leave
   13900:	c3                   	ret
   13901:	90                   	nop

0000000000013902 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   13902:	55                   	push   %rbp
   13903:	48 89 e5             	mov    %rsp,%rbp
   13906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1390a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   1390e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13912:	48 8b 10             	mov    (%rax),%rdx
   13915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13919:	48 89 10             	mov    %rdx,(%rax)
   1391c:	90                   	nop
   1391d:	5d                   	pop    %rbp
   1391e:	c3                   	ret
   1391f:	90                   	nop

0000000000013920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13920:	55                   	push   %rbp
   13921:	48 89 e5             	mov    %rsp,%rbp
   13924:	41 54                	push   %r12
   13926:	53                   	push   %rbx
   13927:	48 83 ec 60          	sub    $0x60,%rsp
   1392b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1392f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   13933:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   13937:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1393b:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   1393f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13943:	48 89 c7             	mov    %rax,%rdi
   13946:	e8 b0 1d 00 00       	call   156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1394b:	49 89 c4             	mov    %rax,%r12
   1394e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13952:	48 89 c7             	mov    %rax,%rdi
   13955:	e8 93 1d 00 00       	call   156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1395a:	48 89 c3             	mov    %rax,%rbx
   1395d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13961:	48 89 c7             	mov    %rax,%rdi
   13964:	e8 76 1d 00 00       	call   156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   13969:	48 89 c2             	mov    %rax,%rdx
   1396c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   13970:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13974:	4d 89 e0             	mov    %r12,%r8
   13977:	48 89 d9             	mov    %rbx,%rcx
   1397a:	48 89 c7             	mov    %rax,%rdi
   1397d:	e8 88 1d 00 00       	call   1570a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   13982:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13986:	48 89 c7             	mov    %rax,%rdi
   13989:	e8 7c 22 00 00       	call   15c0a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   1398e:	48 89 c2             	mov    %rax,%rdx
   13991:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   13995:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13999:	48 89 ce             	mov    %rcx,%rsi
   1399c:	48 89 c7             	mov    %rax,%rdi
   1399f:	e8 18 1e 00 00       	call   157bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   139a4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   139a8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   139ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139b0:	48 85 c0             	test   %rax,%rax
   139b3:	74 1c                	je     139d1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   139b5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   139b9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139bd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   139c1:	48 89 ce             	mov    %rcx,%rsi
   139c4:	48 89 c7             	mov    %rax,%rdi
   139c7:	e8 5c 22 00 00       	call   15c28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   139cc:	48 89 c3             	mov    %rax,%rbx
   139cf:	eb 17                	jmp    139e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   139d1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   139d5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   139d9:	48 89 d6             	mov    %rdx,%rsi
   139dc:	48 89 c7             	mov    %rax,%rdi
   139df:	e8 9a 22 00 00       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   139e4:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   139e8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   139ec:	48 89 c7             	mov    %rax,%rdi
   139ef:	e8 92 1d 00 00       	call   15786 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   139f4:	48 89 d8             	mov    %rbx,%rax
   139f7:	eb 1a                	jmp    13a13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   139f9:	48 89 c3             	mov    %rax,%rbx
   139fc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13a00:	48 89 c7             	mov    %rax,%rdi
   13a03:	e8 7e 1d 00 00       	call   15786 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   13a08:	48 89 d8             	mov    %rbx,%rax
   13a0b:	48 89 c7             	mov    %rax,%rdi
   13a0e:	e8 ed 0d ff ff       	call   4800 <_Unwind_Resume@plt>
   13a13:	48 83 c4 60          	add    $0x60,%rsp
   13a17:	5b                   	pop    %rbx
   13a18:	41 5c                	pop    %r12
   13a1a:	5d                   	pop    %rbp
   13a1b:	c3                   	ret

0000000000013a1c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   13a1c:	55                   	push   %rbp
   13a1d:	48 89 e5             	mov    %rsp,%rbp
   13a20:	48 83 ec 20          	sub    $0x20,%rsp
   13a24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   13a28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a2c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a30:	48 89 d6             	mov    %rdx,%rsi
   13a33:	48 89 c7             	mov    %rax,%rdi
   13a36:	e8 5d 22 00 00       	call   15c98 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   13a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a3f:	c9                   	leave
   13a40:	c3                   	ret
   13a41:	90                   	nop

0000000000013a42 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   13a42:	55                   	push   %rbp
   13a43:	48 89 e5             	mov    %rsp,%rbp
   13a46:	48 83 ec 20          	sub    $0x20,%rsp
   13a4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   13a4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a52:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13a56:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a5a:	48 89 d6             	mov    %rdx,%rsi
   13a5d:	48 89 c7             	mov    %rax,%rdi
   13a60:	e8 33 22 00 00       	call   15c98 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   13a65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a69:	c9                   	leave
   13a6a:	c3                   	ret

0000000000013a6b <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   13a6b:	55                   	push   %rbp
   13a6c:	48 89 e5             	mov    %rsp,%rbp
   13a6f:	53                   	push   %rbx
   13a70:	48 83 ec 18          	sub    $0x18,%rsp
   13a74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13a78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   13a7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a80:	48 89 c7             	mov    %rax,%rdi
   13a83:	e8 2e 22 00 00       	call   15cb6 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   13a88:	48 8b 18             	mov    (%rax),%rbx
   13a8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13a8f:	48 89 c7             	mov    %rax,%rdi
   13a92:	e8 1f 22 00 00       	call   15cb6 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   13a97:	48 8b 00             	mov    (%rax),%rax
   13a9a:	48 39 c3             	cmp    %rax,%rbx
   13a9d:	0f 94 c0             	sete   %al
   13aa0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13aa4:	c9                   	leave
   13aa5:	c3                   	ret

0000000000013aa6 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13aa6:	55                   	push   %rbp
   13aa7:	48 89 e5             	mov    %rsp,%rbp
   13aaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13aae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13ab2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ab6:	48 8b 10             	mov    (%rax),%rdx
   13ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13abd:	48 89 10             	mov    %rdx,(%rax)
   13ac0:	90                   	nop
   13ac1:	5d                   	pop    %rbp
   13ac2:	c3                   	ret
   13ac3:	90                   	nop

0000000000013ac4 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13ac4:	55                   	push   %rbp
   13ac5:	48 89 e5             	mov    %rsp,%rbp
   13ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ad0:	5d                   	pop    %rbp
   13ad1:	c3                   	ret

0000000000013ad2 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13ad2:	55                   	push   %rbp
   13ad3:	48 89 e5             	mov    %rsp,%rbp
   13ad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13ade:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ae2:	48 8b 10             	mov    (%rax),%rdx
   13ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ae9:	48 89 10             	mov    %rdx,(%rax)
   13aec:	90                   	nop
   13aed:	5d                   	pop    %rbp
   13aee:	c3                   	ret
   13aef:	90                   	nop

0000000000013af0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13af0:	55                   	push   %rbp
   13af1:	48 89 e5             	mov    %rsp,%rbp
   13af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13afc:	5d                   	pop    %rbp
   13afd:	c3                   	ret

0000000000013afe <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   13afe:	55                   	push   %rbp
   13aff:	48 89 e5             	mov    %rsp,%rbp
   13b02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   13b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b0a:	5d                   	pop    %rbp
   13b0b:	c3                   	ret

0000000000013b0c <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   13b0c:	55                   	push   %rbp
   13b0d:	48 89 e5             	mov    %rsp,%rbp
   13b10:	53                   	push   %rbx
   13b11:	48 83 ec 38          	sub    $0x38,%rsp
   13b15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13b19:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   13b1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13b21:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13b25:	48 89 d6             	mov    %rdx,%rsi
   13b28:	48 89 c7             	mov    %rax,%rdi
   13b2b:	e8 94 21 00 00       	call   15cc4 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   13b30:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   13b34:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13b38:	48 89 d6             	mov    %rdx,%rsi
   13b3b:	48 89 c7             	mov    %rax,%rdi
   13b3e:	e8 b5 21 00 00       	call   15cf8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   13b43:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13b47:	48 89 c7             	mov    %rax,%rdi
   13b4a:	e8 35 52 ff ff       	call   8d84 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   13b4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b53:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13b57:	48 89 d6             	mov    %rdx,%rsi
   13b5a:	48 89 c7             	mov    %rax,%rdi
   13b5d:	e8 bc 21 00 00       	call   15d1e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   13b62:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13b66:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13b6a:	48 89 d6             	mov    %rdx,%rsi
   13b6d:	48 89 c7             	mov    %rax,%rdi
   13b70:	e8 a9 21 00 00       	call   15d1e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   13b75:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13b79:	48 89 c7             	mov    %rax,%rdi
   13b7c:	e8 b7 62 ff ff       	call   9e38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13b81:	48 89 c3             	mov    %rax,%rbx
   13b84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b88:	48 89 c7             	mov    %rax,%rdi
   13b8b:	e8 a8 62 ff ff       	call   9e38 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13b90:	48 89 de             	mov    %rbx,%rsi
   13b93:	48 89 c7             	mov    %rax,%rdi
   13b96:	e8 db 21 00 00       	call   15d76 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   13b9b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13b9f:	48 89 c7             	mov    %rax,%rdi
   13ba2:	e8 6f 52 ff ff       	call   8e16 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   13ba7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13bab:	c9                   	leave
   13bac:	c3                   	ret
   13bad:	90                   	nop

0000000000013bae <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   13bae:	55                   	push   %rbp
   13baf:	48 89 e5             	mov    %rsp,%rbp
   13bb2:	53                   	push   %rbx
   13bb3:	48 83 ec 38          	sub    $0x38,%rsp
   13bb7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13bbb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   13bbf:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   13bc4:	0f 84 e7 01 00 00    	je     13db1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   13bca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bce:	48 89 c7             	mov    %rax,%rdi
   13bd1:	e8 6c ea ff ff       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13bd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   13bda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bde:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   13be2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13be6:	48 8b 40 08          	mov    0x8(%rax),%rax
   13bea:	48 29 c2             	sub    %rax,%rdx
   13bed:	48 89 d0             	mov    %rdx,%rax
   13bf0:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   13bf4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   13bf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bfc:	48 89 c7             	mov    %rax,%rdi
   13bff:	e8 92 21 00 00       	call   15d96 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13c04:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13c08:	72 16                	jb     13c20 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   13c0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c0e:	48 89 c7             	mov    %rax,%rdi
   13c11:	e8 80 21 00 00       	call   15d96 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13c16:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   13c1a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   13c1e:	73 07                	jae    13c27 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   13c20:	b8 01 00 00 00       	mov    $0x1,%eax
   13c25:	eb 05                	jmp    13c2c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   13c27:	b8 00 00 00 00       	mov    $0x0,%eax
   13c2c:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   13c2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c32:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   13c36:	72 33                	jb     13c6b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   13c38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c3c:	48 89 c7             	mov    %rax,%rdi
   13c3f:	e8 9c 09 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13c44:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   13c47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c4b:	48 8b 40 08          	mov    0x8(%rax),%rax
   13c4f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   13c53:	48 89 ce             	mov    %rcx,%rsi
   13c56:	48 89 c7             	mov    %rax,%rdi
   13c59:	e8 5a 21 00 00       	call   15db8 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   13c5e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13c62:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   13c66:	e9 46 01 00 00       	jmp    13db1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   13c6b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   13c6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c73:	48 8d 15 5e a1 00 00 	lea    0xa15e(%rip),%rdx        # 1ddd8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   13c7a:	48 89 ce             	mov    %rcx,%rsi
   13c7d:	48 89 c7             	mov    %rax,%rdi
   13c80:	e8 5d 21 00 00       	call   15de2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   13c85:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   13c89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c8d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13c91:	48 89 d6             	mov    %rdx,%rsi
   13c94:	48 89 c7             	mov    %rax,%rdi
   13c97:	e8 0e 22 00 00       	call   15eaa <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   13c9c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   13ca0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ca4:	48 89 c7             	mov    %rax,%rdi
   13ca7:	e8 34 09 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13cac:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   13caf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13cb3:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   13cba:	00 
   13cbb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13cbf:	48 01 c1             	add    %rax,%rcx
   13cc2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13cc6:	48 89 c6             	mov    %rax,%rsi
   13cc9:	48 89 cf             	mov    %rcx,%rdi
   13ccc:	e8 e7 20 00 00       	call   15db8 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   13cd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cd5:	48 89 c7             	mov    %rax,%rdi
   13cd8:	e8 03 09 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13cdd:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   13ce0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ce4:	48 8b 70 08          	mov    0x8(%rax),%rsi
   13ce8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cec:	48 8b 00             	mov    (%rax),%rax
   13cef:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13cf3:	48 89 c7             	mov    %rax,%rdi
   13cf6:	e8 e2 21 00 00       	call   15edd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   13cfb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   13cff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13d03:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   13d07:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13d0b:	48 8b 12             	mov    (%rdx),%rdx
   13d0e:	48 29 d1             	sub    %rdx,%rcx
   13d11:	48 c1 f9 03          	sar    $0x3,%rcx
   13d15:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   13d18:	48 89 d6             	mov    %rdx,%rsi
   13d1b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13d1f:	48 8b 0a             	mov    (%rdx),%rcx
   13d22:	48 89 f2             	mov    %rsi,%rdx
   13d25:	48 89 ce             	mov    %rcx,%rsi
   13d28:	48 89 c7             	mov    %rax,%rdi
   13d2b:	e8 44 12 00 00       	call   14f74 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   13d30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d34:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13d38:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   13d3b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13d3f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13d43:	48 01 d0             	add    %rdx,%rax
   13d46:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13d4d:	00 
   13d4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d52:	48 01 c2             	add    %rax,%rdx
   13d55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d59:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   13d5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d61:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13d68:	00 
   13d69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d6d:	48 01 c2             	add    %rax,%rdx
   13d70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d74:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   13d78:	eb 37                	jmp    13db1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   13d7a:	48 89 c7             	mov    %rax,%rdi
   13d7d:	e8 be 03 ff ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   13d82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d86:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13d8a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   13d8e:	48 89 ce             	mov    %rcx,%rsi
   13d91:	48 89 c7             	mov    %rax,%rdi
   13d94:	e8 db 11 00 00       	call   14f74 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   13d99:	e8 02 09 ff ff       	call   46a0 <__cxa_rethrow@plt>
		  __catch(...)
   13d9e:	48 89 c3             	mov    %rax,%rbx
   13da1:	e8 da 09 ff ff       	call   4780 <__cxa_end_catch@plt>
   13da6:	48 89 d8             	mov    %rbx,%rax
   13da9:	48 89 c7             	mov    %rax,%rdi
   13dac:	e8 4f 0a ff ff       	call   4800 <_Unwind_Resume@plt>
    }
   13db1:	90                   	nop
   13db2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13db6:	c9                   	leave
   13db7:	c3                   	ret

0000000000013db8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   13db8:	55                   	push   %rbp
   13db9:	48 89 e5             	mov    %rsp,%rbp
   13dbc:	48 83 ec 20          	sub    $0x20,%rsp
   13dc0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13dc4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   13dc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13dcc:	48 8b 40 08          	mov    0x8(%rax),%rax
   13dd0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   13dd4:	48 c1 f8 03          	sar    $0x3,%rax
   13dd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13ddc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13de1:	74 32                	je     13e15 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   13de3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13de7:	48 89 c7             	mov    %rax,%rdi
   13dea:	e8 f1 07 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13def:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   13df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13df6:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13dfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13dfe:	48 89 ce             	mov    %rcx,%rsi
   13e01:	48 89 c7             	mov    %rax,%rdi
   13e04:	e8 e5 07 00 00       	call   145ee <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   13e09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e0d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13e11:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   13e15:	90                   	nop
   13e16:	c9                   	leave
   13e17:	c3                   	ret

0000000000013e18 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13e18:	55                   	push   %rbp
   13e19:	48 89 e5             	mov    %rsp,%rbp
   13e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e20:	90                   	nop
   13e21:	5d                   	pop    %rbp
   13e22:	c3                   	ret
   13e23:	90                   	nop

0000000000013e24 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13e24:	55                   	push   %rbp
   13e25:	48 89 e5             	mov    %rsp,%rbp
   13e28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e2c:	90                   	nop
   13e2d:	5d                   	pop    %rbp
   13e2e:	c3                   	ret
   13e2f:	90                   	nop

0000000000013e30 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13e30:	55                   	push   %rbp
   13e31:	48 89 e5             	mov    %rsp,%rbp
   13e34:	48 83 ec 10          	sub    $0x10,%rsp
   13e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e40:	48 89 c7             	mov    %rax,%rdi
   13e43:	e8 66 e5 ff ff       	call   123ae <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   13e48:	90                   	nop
   13e49:	c9                   	leave
   13e4a:	c3                   	ret
   13e4b:	90                   	nop

0000000000013e4c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13e4c:	55                   	push   %rbp
   13e4d:	48 89 e5             	mov    %rsp,%rbp
   13e50:	48 83 ec 10          	sub    $0x10,%rsp
   13e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13e64:	48 89 d6             	mov    %rdx,%rsi
   13e67:	48 89 c7             	mov    %rax,%rdi
   13e6a:	e8 a1 20 00 00       	call   15f10 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   13e6f:	90                   	nop
   13e70:	c9                   	leave
   13e71:	c3                   	ret

0000000000013e72 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13e72:	55                   	push   %rbp
   13e73:	48 89 e5             	mov    %rsp,%rbp
   13e76:	48 83 ec 10          	sub    $0x10,%rsp
   13e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e82:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e8a:	48 8b 00             	mov    (%rax),%rax
   13e8d:	48 29 c2             	sub    %rax,%rdx
   13e90:	48 c1 fa 04          	sar    $0x4,%rdx
   13e94:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   13e9b:	e3 38 8e 
   13e9e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   13ea2:	48 89 c2             	mov    %rax,%rdx
   13ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ea9:	48 8b 08             	mov    (%rax),%rcx
   13eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eb0:	48 89 ce             	mov    %rcx,%rsi
   13eb3:	48 89 c7             	mov    %rax,%rdi
   13eb6:	e8 87 20 00 00       	call   15f42 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   13ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ebf:	48 89 c7             	mov    %rax,%rdi
   13ec2:	e8 69 ff ff ff       	call   13e30 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   13ec7:	90                   	nop
   13ec8:	c9                   	leave
   13ec9:	c3                   	ret

0000000000013eca <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   13eca:	55                   	push   %rbp
   13ecb:	48 89 e5             	mov    %rsp,%rbp
   13ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ed6:	48 8b 00             	mov    (%rax),%rax
   13ed9:	5d                   	pop    %rbp
   13eda:	c3                   	ret
   13edb:	90                   	nop

0000000000013edc <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   13edc:	55                   	push   %rbp
   13edd:	48 89 e5             	mov    %rsp,%rbp
   13ee0:	53                   	push   %rbx
   13ee1:	48 83 ec 18          	sub    $0x18,%rsp
   13ee5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13eed:	48 89 c7             	mov    %rax,%rdi
   13ef0:	e8 d5 ff ff ff       	call   13eca <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   13ef5:	48 89 c3             	mov    %rax,%rbx
   13ef8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13efc:	48 89 c7             	mov    %rax,%rdi
   13eff:	e8 74 20 00 00       	call   15f78 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   13f04:	48 89 c2             	mov    %rax,%rdx
   13f07:	48 89 d0             	mov    %rdx,%rax
   13f0a:	48 c1 e0 03          	shl    $0x3,%rax
   13f0e:	48 01 d0             	add    %rdx,%rax
   13f11:	48 c1 e0 04          	shl    $0x4,%rax
   13f15:	48 01 d8             	add    %rbx,%rax
   13f18:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13f1c:	c9                   	leave
   13f1d:	c3                   	ret

0000000000013f1e <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   13f1e:	55                   	push   %rbp
   13f1f:	48 89 e5             	mov    %rsp,%rbp
   13f22:	48 83 ec 10          	sub    $0x10,%rsp
   13f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13f2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13f32:	48 89 c7             	mov    %rax,%rdi
   13f35:	e8 50 20 00 00       	call   15f8a <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   13f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f42:	48 89 d6             	mov    %rdx,%rsi
   13f45:	48 89 c7             	mov    %rax,%rdi
   13f48:	e8 48 20 00 00       	call   15f95 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   13f4d:	c9                   	leave
   13f4e:	c3                   	ret
   13f4f:	90                   	nop

0000000000013f50 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   13f50:	55                   	push   %rbp
   13f51:	48 89 e5             	mov    %rsp,%rbp
   13f54:	53                   	push   %rbx
   13f55:	48 83 ec 38          	sub    $0x38,%rsp
   13f59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13f5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13f61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   13f65:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13f69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13f6d:	48 89 d6             	mov    %rdx,%rsi
   13f70:	48 89 c7             	mov    %rax,%rdi
   13f73:	e8 a6 ff ff ff       	call   13f1e <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   13f78:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   13f7c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13f80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f84:	48 89 c7             	mov    %rax,%rdi
   13f87:	e8 7e 00 00 00       	call   1400a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   13f8c:	48 89 c2             	mov    %rax,%rdx
   13f8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f93:	48 89 d6             	mov    %rdx,%rsi
   13f96:	48 89 c7             	mov    %rax,%rdi
   13f99:	e8 22 20 00 00       	call   15fc0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   13f9e:	48 89 c6             	mov    %rax,%rsi
   13fa1:	48 89 df             	mov    %rbx,%rdi
   13fa4:	e8 77 20 00 00       	call   16020 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   13fa9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13fad:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   13fb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fb4:	48 8b 08             	mov    (%rax),%rcx
   13fb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13fbb:	48 89 d0             	mov    %rdx,%rax
   13fbe:	48 c1 e0 03          	shl    $0x3,%rax
   13fc2:	48 01 d0             	add    %rdx,%rax
   13fc5:	48 c1 e0 04          	shl    $0x4,%rax
   13fc9:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   13fcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fd1:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   13fd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fd9:	48 89 c7             	mov    %rax,%rdi
   13fdc:	e8 29 00 00 00       	call   1400a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   13fe1:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   13fe4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fe8:	48 8b 10             	mov    (%rax),%rdx
   13feb:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   13fef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13ff3:	48 89 c7             	mov    %rax,%rdi
   13ff6:	e8 58 20 00 00       	call   16053 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   13ffb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13fff:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   14003:	90                   	nop
   14004:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14008:	c9                   	leave
   14009:	c3                   	ret

000000000001400a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1400a:	55                   	push   %rbp
   1400b:	48 89 e5             	mov    %rsp,%rbp
   1400e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14016:	5d                   	pop    %rbp
   14017:	c3                   	ret

0000000000014018 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   14018:	55                   	push   %rbp
   14019:	48 89 e5             	mov    %rsp,%rbp
   1401c:	48 83 ec 20          	sub    $0x20,%rsp
   14020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14024:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14028:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1402c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14030:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14034:	48 89 d6             	mov    %rdx,%rsi
   14037:	48 89 c7             	mov    %rax,%rdi
   1403a:	e8 45 20 00 00       	call   16084 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   1403f:	90                   	nop
   14040:	c9                   	leave
   14041:	c3                   	ret

0000000000014042 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14042:	55                   	push   %rbp
   14043:	48 89 e5             	mov    %rsp,%rbp
   14046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1404a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1404e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14056:	48 8b 00             	mov    (%rax),%rax
   14059:	48 29 c2             	sub    %rax,%rdx
   1405c:	48 c1 fa 04          	sar    $0x4,%rdx
   14060:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   14067:	e3 38 8e 
   1406a:	48 0f af c2          	imul   %rdx,%rax
   1406e:	5d                   	pop    %rbp
   1406f:	c3                   	ret

0000000000014070 <_ZNSaIP12VkPipeline_TEC1Ev>:
   14070:	55                   	push   %rbp
   14071:	48 89 e5             	mov    %rsp,%rbp
   14074:	48 83 ec 10          	sub    $0x10,%rsp
   14078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1407c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14080:	48 89 c7             	mov    %rax,%rdi
   14083:	e8 22 20 00 00       	call   160aa <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   14088:	90                   	nop
   14089:	c9                   	leave
   1408a:	c3                   	ret
   1408b:	90                   	nop

000000000001408c <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1408c:	55                   	push   %rbp
   1408d:	48 89 e5             	mov    %rsp,%rbp
   14090:	48 83 ec 10          	sub    $0x10,%rsp
   14094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1409c:	48 89 c7             	mov    %rax,%rdi
   1409f:	e8 12 20 00 00       	call   160b6 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   140a4:	90                   	nop
   140a5:	c9                   	leave
   140a6:	c3                   	ret
   140a7:	90                   	nop

00000000000140a8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   140a8:	55                   	push   %rbp
   140a9:	48 89 e5             	mov    %rsp,%rbp
   140ac:	53                   	push   %rbx
   140ad:	48 83 ec 28          	sub    $0x28,%rsp
   140b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   140b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   140b9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   140bd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   140c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   140c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   140c9:	48 89 d6             	mov    %rdx,%rsi
   140cc:	48 89 c7             	mov    %rax,%rdi
   140cf:	e8 ed 1f 00 00       	call   160c1 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   140d4:	48 89 c1             	mov    %rax,%rcx
   140d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140db:	48 89 c2             	mov    %rax,%rdx
   140de:	48 89 ce             	mov    %rcx,%rsi
   140e1:	48 89 df             	mov    %rbx,%rdi
   140e4:	e8 39 20 00 00       	call   16122 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   140e9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   140ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140f1:	48 89 d6             	mov    %rdx,%rsi
   140f4:	48 89 c7             	mov    %rax,%rdi
   140f7:	e8 84 20 00 00       	call   16180 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   140fc:	eb 1a                	jmp    14118 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   140fe:	48 89 c3             	mov    %rax,%rbx
   14101:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14105:	48 89 c7             	mov    %rax,%rdi
   14108:	e8 59 00 00 00       	call   14166 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   1410d:	48 89 d8             	mov    %rbx,%rax
   14110:	48 89 c7             	mov    %rax,%rdi
   14113:	e8 e8 06 ff ff       	call   4800 <_Unwind_Resume@plt>
   14118:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1411c:	c9                   	leave
   1411d:	c3                   	ret

000000000001411e <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   1411e:	55                   	push   %rbp
   1411f:	48 89 e5             	mov    %rsp,%rbp
   14122:	48 83 ec 10          	sub    $0x10,%rsp
   14126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1412a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1412e:	48 8b 10             	mov    (%rax),%rdx
   14131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14135:	48 89 d6             	mov    %rdx,%rsi
   14138:	48 89 c7             	mov    %rax,%rdi
   1413b:	e8 80 20 00 00       	call   161c0 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   14140:	c9                   	leave
   14141:	c3                   	ret

0000000000014142 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   14142:	55                   	push   %rbp
   14143:	48 89 e5             	mov    %rsp,%rbp
   14146:	48 83 ec 10          	sub    $0x10,%rsp
   1414a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1414e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14152:	48 8b 10             	mov    (%rax),%rdx
   14155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14159:	48 89 d6             	mov    %rdx,%rsi
   1415c:	48 89 c7             	mov    %rax,%rdi
   1415f:	e8 6e 20 00 00       	call   161d2 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   14164:	c9                   	leave
   14165:	c3                   	ret

0000000000014166 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   14166:	55                   	push   %rbp
   14167:	48 89 e5             	mov    %rsp,%rbp
   1416a:	48 83 ec 10          	sub    $0x10,%rsp
   1416e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   14172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14176:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1417a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1417e:	48 8b 00             	mov    (%rax),%rax
   14181:	48 29 c2             	sub    %rax,%rdx
   14184:	48 89 d0             	mov    %rdx,%rax
   14187:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1418b:	48 89 c2             	mov    %rax,%rdx
   1418e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14192:	48 8b 08             	mov    (%rax),%rcx
   14195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14199:	48 89 ce             	mov    %rcx,%rsi
   1419c:	48 89 c7             	mov    %rax,%rdi
   1419f:	e8 66 20 00 00       	call   1620a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   141a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141a8:	48 89 c7             	mov    %rax,%rdi
   141ab:	e8 e6 e2 ff ff       	call   12496 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   141b0:	90                   	nop
   141b1:	c9                   	leave
   141b2:	c3                   	ret
   141b3:	90                   	nop

00000000000141b4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   141b4:	55                   	push   %rbp
   141b5:	48 89 e5             	mov    %rsp,%rbp
   141b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   141bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141c0:	5d                   	pop    %rbp
   141c1:	c3                   	ret

00000000000141c2 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   141c2:	55                   	push   %rbp
   141c3:	48 89 e5             	mov    %rsp,%rbp
   141c6:	48 83 ec 20          	sub    $0x20,%rsp
   141ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   141d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   141d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   141da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141de:	48 89 d6             	mov    %rdx,%rsi
   141e1:	48 89 c7             	mov    %rax,%rdi
   141e4:	e8 56 20 00 00       	call   1623f <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   141e9:	90                   	nop
   141ea:	c9                   	leave
   141eb:	c3                   	ret

00000000000141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   141ec:	55                   	push   %rbp
   141ed:	48 89 e5             	mov    %rsp,%rbp
   141f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   141f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   141fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14200:	48 8b 00             	mov    (%rax),%rax
   14203:	48 29 c2             	sub    %rax,%rdx
   14206:	48 89 d0             	mov    %rdx,%rax
   14209:	48 c1 f8 03          	sar    $0x3,%rax
   1420d:	5d                   	pop    %rbp
   1420e:	c3                   	ret
   1420f:	90                   	nop

0000000000014210 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   14210:	55                   	push   %rbp
   14211:	48 89 e5             	mov    %rsp,%rbp
   14214:	53                   	push   %rbx
   14215:	48 83 ec 38          	sub    $0x38,%rsp
   14219:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1421d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   14221:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   14226:	0f 84 e7 01 00 00    	je     14413 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1422c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14230:	48 89 c7             	mov    %rax,%rdi
   14233:	e8 b4 ff ff ff       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14238:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1423c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14240:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   14244:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14248:	48 8b 40 08          	mov    0x8(%rax),%rax
   1424c:	48 29 c2             	sub    %rax,%rdx
   1424f:	48 89 d0             	mov    %rdx,%rax
   14252:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14256:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1425a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1425e:	48 89 c7             	mov    %rax,%rdi
   14261:	e8 00 20 00 00       	call   16266 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   14266:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1426a:	72 16                	jb     14282 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   1426c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14270:	48 89 c7             	mov    %rax,%rdi
   14273:	e8 ee 1f 00 00       	call   16266 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   14278:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1427c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   14280:	73 07                	jae    14289 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   14282:	b8 01 00 00 00       	mov    $0x1,%eax
   14287:	eb 05                	jmp    1428e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   14289:	b8 00 00 00 00       	mov    $0x0,%eax
   1428e:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   14290:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14294:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   14298:	72 33                	jb     142cd <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1429a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1429e:	48 89 c7             	mov    %rax,%rdi
   142a1:	e8 90 0d 00 00       	call   15036 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   142a6:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   142a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   142ad:	48 8b 40 08          	mov    0x8(%rax),%rax
   142b1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   142b5:	48 89 ce             	mov    %rcx,%rsi
   142b8:	48 89 c7             	mov    %rax,%rdi
   142bb:	e8 c8 1f 00 00       	call   16288 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   142c0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   142c4:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   142c8:	e9 46 01 00 00       	jmp    14413 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   142cd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   142d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   142d5:	48 8d 15 fc 9a 00 00 	lea    0x9afc(%rip),%rdx        # 1ddd8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   142dc:	48 89 ce             	mov    %rcx,%rsi
   142df:	48 89 c7             	mov    %rax,%rdi
   142e2:	e8 cb 1f 00 00       	call   162b2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   142e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   142eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   142ef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   142f3:	48 89 d6             	mov    %rdx,%rsi
   142f6:	48 89 c7             	mov    %rax,%rdi
   142f9:	e8 7c 20 00 00       	call   1637a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   142fe:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   14302:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14306:	48 89 c7             	mov    %rax,%rdi
   14309:	e8 28 0d 00 00       	call   15036 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1430e:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   14311:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14315:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1431c:	00 
   1431d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14321:	48 01 c1             	add    %rax,%rcx
   14324:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14328:	48 89 c6             	mov    %rax,%rsi
   1432b:	48 89 cf             	mov    %rcx,%rdi
   1432e:	e8 55 1f 00 00       	call   16288 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   14333:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14337:	48 89 c7             	mov    %rax,%rdi
   1433a:	e8 f7 0c 00 00       	call   15036 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1433f:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   14342:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14346:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1434a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1434e:	48 8b 00             	mov    (%rax),%rax
   14351:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14355:	48 89 c7             	mov    %rax,%rdi
   14358:	e8 50 20 00 00       	call   163ad <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1435d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   14361:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14365:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   14369:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1436d:	48 8b 12             	mov    (%rdx),%rdx
   14370:	48 29 d1             	sub    %rdx,%rcx
   14373:	48 c1 f9 03          	sar    $0x3,%rcx
   14377:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1437a:	48 89 d6             	mov    %rdx,%rsi
   1437d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14381:	48 8b 0a             	mov    (%rdx),%rcx
   14384:	48 89 f2             	mov    %rsi,%rdx
   14387:	48 89 ce             	mov    %rcx,%rsi
   1438a:	48 89 c7             	mov    %rax,%rdi
   1438d:	e8 6e 0c 00 00       	call   15000 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   14392:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14396:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1439a:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1439d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   143a1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   143a5:	48 01 d0             	add    %rdx,%rax
   143a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   143af:	00 
   143b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143b4:	48 01 c2             	add    %rax,%rdx
   143b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   143bb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   143bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143c3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   143ca:	00 
   143cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143cf:	48 01 c2             	add    %rax,%rdx
   143d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   143d6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   143da:	eb 37                	jmp    14413 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   143dc:	48 89 c7             	mov    %rax,%rdi
   143df:	e8 5c fd fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   143e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   143e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   143ec:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   143f0:	48 89 ce             	mov    %rcx,%rsi
   143f3:	48 89 c7             	mov    %rax,%rdi
   143f6:	e8 05 0c 00 00       	call   15000 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   143fb:	e8 a0 02 ff ff       	call   46a0 <__cxa_rethrow@plt>
		  __catch(...)
   14400:	48 89 c3             	mov    %rax,%rbx
   14403:	e8 78 03 ff ff       	call   4780 <__cxa_end_catch@plt>
   14408:	48 89 d8             	mov    %rbx,%rax
   1440b:	48 89 c7             	mov    %rax,%rdi
   1440e:	e8 ed 03 ff ff       	call   4800 <_Unwind_Resume@plt>
    }
   14413:	90                   	nop
   14414:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14418:	c9                   	leave
   14419:	c3                   	ret

000000000001441a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1441a:	55                   	push   %rbp
   1441b:	48 89 e5             	mov    %rsp,%rbp
   1441e:	48 83 ec 20          	sub    $0x20,%rsp
   14422:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14426:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1442a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1442e:	48 8b 40 08          	mov    0x8(%rax),%rax
   14432:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   14436:	48 c1 f8 03          	sar    $0x3,%rax
   1443a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1443e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14443:	74 32                	je     14477 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   14445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14449:	48 89 c7             	mov    %rax,%rdi
   1444c:	e8 e5 0b 00 00       	call   15036 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14451:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   14454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14458:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1445c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14460:	48 89 ce             	mov    %rcx,%rsi
   14463:	48 89 c7             	mov    %rax,%rdi
   14466:	e8 d9 0b 00 00       	call   15044 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1446b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1446f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14473:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   14477:	90                   	nop
   14478:	c9                   	leave
   14479:	c3                   	ret

000000000001447a <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1447a:	55                   	push   %rbp
   1447b:	48 89 e5             	mov    %rsp,%rbp
   1447e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14482:	90                   	nop
   14483:	5d                   	pop    %rbp
   14484:	c3                   	ret
   14485:	90                   	nop

0000000000014486 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14486:	55                   	push   %rbp
   14487:	48 89 e5             	mov    %rsp,%rbp
   1448a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1448e:	90                   	nop
   1448f:	5d                   	pop    %rbp
   14490:	c3                   	ret
   14491:	90                   	nop

0000000000014492 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14492:	55                   	push   %rbp
   14493:	48 89 e5             	mov    %rsp,%rbp
   14496:	48 83 ec 10          	sub    $0x10,%rsp
   1449a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1449e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   144a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   144aa:	48 89 d6             	mov    %rdx,%rsi
   144ad:	48 89 c7             	mov    %rax,%rdi
   144b0:	e8 2b 1f 00 00       	call   163e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   144b5:	90                   	nop
   144b6:	c9                   	leave
   144b7:	c3                   	ret

00000000000144b8 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   144b8:	55                   	push   %rbp
   144b9:	48 89 e5             	mov    %rsp,%rbp
   144bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144c4:	48 8b 00             	mov    (%rax),%rax
   144c7:	5d                   	pop    %rbp
   144c8:	c3                   	ret
   144c9:	90                   	nop

00000000000144ca <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   144ca:	55                   	push   %rbp
   144cb:	48 89 e5             	mov    %rsp,%rbp
   144ce:	53                   	push   %rbx
   144cf:	48 83 ec 18          	sub    $0x18,%rsp
   144d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   144d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144db:	48 89 c7             	mov    %rax,%rdi
   144de:	e8 d5 ff ff ff       	call   144b8 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   144e3:	48 89 c3             	mov    %rax,%rbx
   144e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144ea:	48 89 c7             	mov    %rax,%rdi
   144ed:	e8 20 1f 00 00       	call   16412 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   144f2:	48 c1 e0 03          	shl    $0x3,%rax
   144f6:	48 01 d8             	add    %rbx,%rax
   144f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   144fd:	c9                   	leave
   144fe:	c3                   	ret

00000000000144ff <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   144ff:	55                   	push   %rbp
   14500:	48 89 e5             	mov    %rsp,%rbp
   14503:	48 83 ec 10          	sub    $0x10,%rsp
   14507:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1450b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1450f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14513:	48 89 c7             	mov    %rax,%rdi
   14516:	e8 09 1f 00 00       	call   16424 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   1451b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1451f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14523:	48 89 d6             	mov    %rdx,%rsi
   14526:	48 89 c7             	mov    %rax,%rdi
   14529:	e8 01 1f 00 00       	call   1642f <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   1452e:	c9                   	leave
   1452f:	c3                   	ret

0000000000014530 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   14530:	55                   	push   %rbp
   14531:	48 89 e5             	mov    %rsp,%rbp
   14534:	53                   	push   %rbx
   14535:	48 83 ec 38          	sub    $0x38,%rsp
   14539:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1453d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14541:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   14545:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14549:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1454d:	48 89 d6             	mov    %rdx,%rsi
   14550:	48 89 c7             	mov    %rax,%rdi
   14553:	e8 a7 ff ff ff       	call   144ff <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   14558:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1455c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14560:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14564:	48 89 c7             	mov    %rax,%rdi
   14567:	e8 74 00 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1456c:	48 89 c2             	mov    %rax,%rdx
   1456f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14573:	48 89 d6             	mov    %rdx,%rsi
   14576:	48 89 c7             	mov    %rax,%rdi
   14579:	e8 cb 1e 00 00       	call   16449 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   1457e:	48 89 c6             	mov    %rax,%rsi
   14581:	48 89 df             	mov    %rbx,%rdi
   14584:	e8 21 19 00 00       	call   15eaa <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   14589:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1458d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   14590:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14594:	48 8b 00             	mov    (%rax),%rax
   14597:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1459b:	48 c1 e2 03          	shl    $0x3,%rdx
   1459f:	48 01 c2             	add    %rax,%rdx
   145a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145a6:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   145aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145ae:	48 89 c7             	mov    %rax,%rdi
   145b1:	e8 2a 00 00 00       	call   145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   145b6:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   145b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145bd:	48 8b 10             	mov    (%rax),%rdx
   145c0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   145c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   145c8:	48 89 c7             	mov    %rax,%rdi
   145cb:	e8 d9 1e 00 00       	call   164a9 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   145d0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   145d4:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   145d8:	90                   	nop
   145d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   145dd:	c9                   	leave
   145de:	c3                   	ret
   145df:	90                   	nop

00000000000145e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   145e0:	55                   	push   %rbp
   145e1:	48 89 e5             	mov    %rsp,%rbp
   145e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   145e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145ec:	5d                   	pop    %rbp
   145ed:	c3                   	ret

00000000000145ee <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   145ee:	55                   	push   %rbp
   145ef:	48 89 e5             	mov    %rsp,%rbp
   145f2:	48 83 ec 20          	sub    $0x20,%rsp
   145f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   145fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   14602:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14606:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1460a:	48 89 d6             	mov    %rdx,%rsi
   1460d:	48 89 c7             	mov    %rax,%rdi
   14610:	e8 c5 1e 00 00       	call   164da <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   14615:	90                   	nop
   14616:	c9                   	leave
   14617:	c3                   	ret

0000000000014618 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   14618:	55                   	push   %rbp
   14619:	48 89 e5             	mov    %rsp,%rbp
   1461c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14620:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   14624:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14628:	5d                   	pop    %rbp
   14629:	c3                   	ret

000000000001462a <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1462a:	55                   	push   %rbp
   1462b:	48 89 e5             	mov    %rsp,%rbp
   1462e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14632:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14636:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1463a:	48 8b 10             	mov    (%rax),%rdx
   1463d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14641:	48 89 10             	mov    %rdx,(%rax)
   14644:	90                   	nop
   14645:	5d                   	pop    %rbp
   14646:	c3                   	ret
   14647:	90                   	nop

0000000000014648 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14648:	55                   	push   %rbp
   14649:	48 89 e5             	mov    %rsp,%rbp
   1464c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14654:	5d                   	pop    %rbp
   14655:	c3                   	ret

0000000000014656 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14656:	55                   	push   %rbp
   14657:	48 89 e5             	mov    %rsp,%rbp
   1465a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1465e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14662:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14666:	48 8b 10             	mov    (%rax),%rdx
   14669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1466d:	48 89 10             	mov    %rdx,(%rax)
   14670:	90                   	nop
   14671:	5d                   	pop    %rbp
   14672:	c3                   	ret
   14673:	90                   	nop

0000000000014674 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14674:	55                   	push   %rbp
   14675:	48 89 e5             	mov    %rsp,%rbp
   14678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1467c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14680:	5d                   	pop    %rbp
   14681:	c3                   	ret

0000000000014682 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   14682:	55                   	push   %rbp
   14683:	48 89 e5             	mov    %rsp,%rbp
   14686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1468a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1468e:	5d                   	pop    %rbp
   1468f:	c3                   	ret

0000000000014690 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   14690:	55                   	push   %rbp
   14691:	48 89 e5             	mov    %rsp,%rbp
   14694:	53                   	push   %rbx
   14695:	48 83 ec 38          	sub    $0x38,%rsp
   14699:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1469d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   146a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   146a5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   146a9:	48 89 d6             	mov    %rdx,%rsi
   146ac:	48 89 c7             	mov    %rax,%rdi
   146af:	e8 4c 1e 00 00       	call   16500 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>
   146b4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   146b8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   146bc:	48 89 d6             	mov    %rdx,%rsi
   146bf:	48 89 c7             	mov    %rax,%rdi
   146c2:	e8 6d 1e 00 00       	call   16534 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   146c7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   146cb:	48 89 c7             	mov    %rax,%rdi
   146ce:	e8 0f 0a ff ff       	call   50e2 <_ZNSaIP17VkCommandBuffer_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   146d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146d7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   146db:	48 89 d6             	mov    %rdx,%rsi
   146de:	48 89 c7             	mov    %rax,%rdi
   146e1:	e8 74 1e 00 00       	call   1655a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   146e6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   146ea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   146ee:	48 89 d6             	mov    %rdx,%rsi
   146f1:	48 89 c7             	mov    %rax,%rdi
   146f4:	e8 61 1e 00 00       	call   1655a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   146f9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   146fd:	48 89 c7             	mov    %rax,%rdi
   14700:	e8 3b 0c ff ff       	call   5340 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14705:	48 89 c3             	mov    %rax,%rbx
   14708:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1470c:	48 89 c7             	mov    %rax,%rdi
   1470f:	e8 2c 0c ff ff       	call   5340 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14714:	48 89 de             	mov    %rbx,%rsi
   14717:	48 89 c7             	mov    %rax,%rdi
   1471a:	e8 93 1e 00 00       	call   165b2 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>
      }
   1471f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14723:	48 89 c7             	mov    %rax,%rdi
   14726:	e8 49 0a ff ff       	call   5174 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   1472b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1472f:	c9                   	leave
   14730:	c3                   	ret
   14731:	90                   	nop

0000000000014732 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   14732:	55                   	push   %rbp
   14733:	48 89 e5             	mov    %rsp,%rbp
   14736:	53                   	push   %rbx
   14737:	48 83 ec 38          	sub    $0x38,%rsp
   1473b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1473f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   14743:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   14748:	0f 84 e7 01 00 00    	je     14935 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1474e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14752:	48 89 c7             	mov    %rax,%rdi
   14755:	e8 9e e5 ff ff       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1475a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1475e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14762:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   14766:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1476a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1476e:	48 29 c2             	sub    %rax,%rdx
   14771:	48 89 d0             	mov    %rdx,%rax
   14774:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14778:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1477c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14780:	48 89 c7             	mov    %rax,%rdi
   14783:	e8 4a 1e 00 00       	call   165d2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   14788:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1478c:	72 16                	jb     147a4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   1478e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14792:	48 89 c7             	mov    %rax,%rdi
   14795:	e8 38 1e 00 00       	call   165d2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1479a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1479e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   147a2:	73 07                	jae    147ab <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   147a4:	b8 01 00 00 00       	mov    $0x1,%eax
   147a9:	eb 05                	jmp    147b0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   147ab:	b8 00 00 00 00       	mov    $0x0,%eax
   147b0:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   147b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   147b6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   147ba:	72 33                	jb     147ef <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   147bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147c0:	48 89 c7             	mov    %rax,%rdi
   147c3:	e8 c8 05 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   147c8:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   147cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147cf:	48 8b 40 08          	mov    0x8(%rax),%rax
   147d3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   147d7:	48 89 ce             	mov    %rcx,%rsi
   147da:	48 89 c7             	mov    %rax,%rdi
   147dd:	e8 12 1e 00 00       	call   165f4 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   147e2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   147e6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   147ea:	e9 46 01 00 00       	jmp    14935 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   147ef:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   147f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147f7:	48 8d 15 da 95 00 00 	lea    0x95da(%rip),%rdx        # 1ddd8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   147fe:	48 89 ce             	mov    %rcx,%rsi
   14801:	48 89 c7             	mov    %rax,%rdi
   14804:	e8 15 1e 00 00       	call   1661e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   14809:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1480d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14811:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14815:	48 89 d6             	mov    %rdx,%rsi
   14818:	48 89 c7             	mov    %rax,%rdi
   1481b:	e8 c6 1e 00 00       	call   166e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   14820:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   14824:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14828:	48 89 c7             	mov    %rax,%rdi
   1482b:	e8 60 05 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14830:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   14833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14837:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1483e:	00 
   1483f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14843:	48 01 c1             	add    %rax,%rcx
   14846:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1484a:	48 89 c6             	mov    %rax,%rsi
   1484d:	48 89 cf             	mov    %rcx,%rdi
   14850:	e8 9f 1d 00 00       	call   165f4 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   14855:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14859:	48 89 c7             	mov    %rax,%rdi
   1485c:	e8 2f 05 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14861:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   14864:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14868:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1486c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14870:	48 8b 00             	mov    (%rax),%rax
   14873:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14877:	48 89 c7             	mov    %rax,%rdi
   1487a:	e8 9a 1e 00 00       	call   16719 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1487f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   14883:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14887:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1488b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1488f:	48 8b 12             	mov    (%rdx),%rdx
   14892:	48 29 d1             	sub    %rdx,%rcx
   14895:	48 c1 f9 03          	sar    $0x3,%rcx
   14899:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1489c:	48 89 d6             	mov    %rdx,%rsi
   1489f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   148a3:	48 8b 0a             	mov    (%rdx),%rcx
   148a6:	48 89 f2             	mov    %rsi,%rdx
   148a9:	48 89 ce             	mov    %rcx,%rsi
   148ac:	48 89 c7             	mov    %rax,%rdi
   148af:	e8 e8 07 00 00       	call   1509c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   148b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   148bc:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   148bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   148c3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   148c7:	48 01 d0             	add    %rdx,%rax
   148ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   148d1:	00 
   148d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148d6:	48 01 c2             	add    %rax,%rdx
   148d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   148e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   148e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   148ec:	00 
   148ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148f1:	48 01 c2             	add    %rax,%rdx
   148f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   148fc:	eb 37                	jmp    14935 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   148fe:	48 89 c7             	mov    %rax,%rdi
   14901:	e8 3a f8 fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   14906:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1490a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1490e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   14912:	48 89 ce             	mov    %rcx,%rsi
   14915:	48 89 c7             	mov    %rax,%rdi
   14918:	e8 7f 07 00 00       	call   1509c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1491d:	e8 7e fd fe ff       	call   46a0 <__cxa_rethrow@plt>
		  __catch(...)
   14922:	48 89 c3             	mov    %rax,%rbx
   14925:	e8 56 fe fe ff       	call   4780 <__cxa_end_catch@plt>
   1492a:	48 89 d8             	mov    %rbx,%rax
   1492d:	48 89 c7             	mov    %rax,%rdi
   14930:	e8 cb fe fe ff       	call   4800 <_Unwind_Resume@plt>
    }
   14935:	90                   	nop
   14936:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1493a:	c9                   	leave
   1493b:	c3                   	ret

000000000001493c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1493c:	55                   	push   %rbp
   1493d:	48 89 e5             	mov    %rsp,%rbp
   14940:	48 83 ec 20          	sub    $0x20,%rsp
   14944:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14948:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1494c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14950:	48 8b 40 08          	mov    0x8(%rax),%rax
   14954:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   14958:	48 c1 f8 03          	sar    $0x3,%rax
   1495c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14960:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14965:	74 32                	je     14999 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   14967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1496b:	48 89 c7             	mov    %rax,%rdi
   1496e:	e8 1d 04 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14973:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   14976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1497a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1497e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14982:	48 89 ce             	mov    %rcx,%rsi
   14985:	48 89 c7             	mov    %rax,%rdi
   14988:	e8 11 04 00 00       	call   14d9e <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1498d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14991:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14995:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   14999:	90                   	nop
   1499a:	c9                   	leave
   1499b:	c3                   	ret

000000000001499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1499c:	55                   	push   %rbp
   1499d:	48 89 e5             	mov    %rsp,%rbp
   149a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   149a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149a8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   149ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149b0:	48 8b 00             	mov    (%rax),%rax
   149b3:	48 29 c2             	sub    %rax,%rdx
   149b6:	48 89 d0             	mov    %rdx,%rax
   149b9:	48 c1 f8 03          	sar    $0x3,%rax
   149bd:	5d                   	pop    %rbp
   149be:	c3                   	ret
   149bf:	90                   	nop

00000000000149c0 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   149c0:	55                   	push   %rbp
   149c1:	48 89 e5             	mov    %rsp,%rbp
   149c4:	53                   	push   %rbx
   149c5:	48 83 ec 38          	sub    $0x38,%rsp
   149c9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   149cd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   149d1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   149d6:	0f 84 e7 01 00 00    	je     14bc3 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   149dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149e0:	48 89 c7             	mov    %rax,%rdi
   149e3:	e8 b4 ff ff ff       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   149e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   149ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   149f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149f8:	48 8b 40 08          	mov    0x8(%rax),%rax
   149fc:	48 29 c2             	sub    %rax,%rdx
   149ff:	48 89 d0             	mov    %rdx,%rax
   14a02:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   14a06:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   14a0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a0e:	48 89 c7             	mov    %rax,%rdi
   14a11:	e8 36 1d 00 00       	call   1674c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   14a16:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14a1a:	72 16                	jb     14a32 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   14a1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a20:	48 89 c7             	mov    %rax,%rdi
   14a23:	e8 24 1d 00 00       	call   1674c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   14a28:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14a2c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   14a30:	73 07                	jae    14a39 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   14a32:	b8 01 00 00 00       	mov    $0x1,%eax
   14a37:	eb 05                	jmp    14a3e <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   14a39:	b8 00 00 00 00       	mov    $0x0,%eax
   14a3e:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   14a40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a44:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   14a48:	72 33                	jb     14a7d <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   14a4a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a4e:	48 89 c7             	mov    %rax,%rdi
   14a51:	e8 08 07 00 00       	call   1515e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14a56:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   14a59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a5d:	48 8b 40 08          	mov    0x8(%rax),%rax
   14a61:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   14a65:	48 89 ce             	mov    %rcx,%rsi
   14a68:	48 89 c7             	mov    %rax,%rdi
   14a6b:	e8 fe 1c 00 00       	call   1676e <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   14a70:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14a74:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   14a78:	e9 46 01 00 00       	jmp    14bc3 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   14a7d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   14a81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a85:	48 8d 15 4c 93 00 00 	lea    0x934c(%rip),%rdx        # 1ddd8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2d8>
   14a8c:	48 89 ce             	mov    %rcx,%rsi
   14a8f:	48 89 c7             	mov    %rax,%rdi
   14a92:	e8 01 1d 00 00       	call   16798 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   14a97:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   14a9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a9f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14aa3:	48 89 d6             	mov    %rdx,%rsi
   14aa6:	48 89 c7             	mov    %rax,%rdi
   14aa9:	e8 b2 1d 00 00       	call   16860 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   14aae:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   14ab2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ab6:	48 89 c7             	mov    %rax,%rdi
   14ab9:	e8 a0 06 00 00       	call   1515e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14abe:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   14ac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ac5:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   14acc:	00 
   14acd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ad1:	48 01 c1             	add    %rax,%rcx
   14ad4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14ad8:	48 89 c6             	mov    %rax,%rsi
   14adb:	48 89 cf             	mov    %rcx,%rdi
   14ade:	e8 8b 1c 00 00       	call   1676e <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   14ae3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ae7:	48 89 c7             	mov    %rax,%rdi
   14aea:	e8 6f 06 00 00       	call   1515e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14aef:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   14af2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14af6:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14afa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14afe:	48 8b 00             	mov    (%rax),%rax
   14b01:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14b05:	48 89 c7             	mov    %rax,%rdi
   14b08:	e8 86 1d 00 00       	call   16893 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   14b0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   14b11:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14b15:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   14b19:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14b1d:	48 8b 12             	mov    (%rdx),%rdx
   14b20:	48 29 d1             	sub    %rdx,%rcx
   14b23:	48 c1 f9 03          	sar    $0x3,%rcx
   14b27:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   14b2a:	48 89 d6             	mov    %rdx,%rsi
   14b2d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14b31:	48 8b 0a             	mov    (%rdx),%rcx
   14b34:	48 89 f2             	mov    %rsi,%rdx
   14b37:	48 89 ce             	mov    %rcx,%rsi
   14b3a:	48 89 c7             	mov    %rax,%rdi
   14b3d:	e8 e6 05 00 00       	call   15128 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   14b42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14b46:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14b4a:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   14b4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14b51:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14b55:	48 01 d0             	add    %rdx,%rax
   14b58:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14b5f:	00 
   14b60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14b64:	48 01 c2             	add    %rax,%rdx
   14b67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14b6b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   14b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14b73:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14b7a:	00 
   14b7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14b7f:	48 01 c2             	add    %rax,%rdx
   14b82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14b86:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   14b8a:	eb 37                	jmp    14bc3 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   14b8c:	48 89 c7             	mov    %rax,%rdi
   14b8f:	e8 ac f5 fe ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   14b94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14b98:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14b9c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   14ba0:	48 89 ce             	mov    %rcx,%rsi
   14ba3:	48 89 c7             	mov    %rax,%rdi
   14ba6:	e8 7d 05 00 00       	call   15128 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   14bab:	e8 f0 fa fe ff       	call   46a0 <__cxa_rethrow@plt>
		  __catch(...)
   14bb0:	48 89 c3             	mov    %rax,%rbx
   14bb3:	e8 c8 fb fe ff       	call   4780 <__cxa_end_catch@plt>
   14bb8:	48 89 d8             	mov    %rbx,%rax
   14bbb:	48 89 c7             	mov    %rax,%rdi
   14bbe:	e8 3d fc fe ff       	call   4800 <_Unwind_Resume@plt>
    }
   14bc3:	90                   	nop
   14bc4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14bc8:	c9                   	leave
   14bc9:	c3                   	ret

0000000000014bca <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   14bca:	55                   	push   %rbp
   14bcb:	48 89 e5             	mov    %rsp,%rbp
   14bce:	48 83 ec 20          	sub    $0x20,%rsp
   14bd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14bd6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   14bda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bde:	48 8b 40 08          	mov    0x8(%rax),%rax
   14be2:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   14be6:	48 c1 f8 03          	sar    $0x3,%rax
   14bea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14bee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14bf3:	74 32                	je     14c27 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   14bf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bf9:	48 89 c7             	mov    %rax,%rdi
   14bfc:	e8 5d 05 00 00       	call   1515e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14c01:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   14c04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c08:	48 8b 48 08          	mov    0x8(%rax),%rcx
   14c0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c10:	48 89 ce             	mov    %rcx,%rsi
   14c13:	48 89 c7             	mov    %rax,%rdi
   14c16:	e8 51 05 00 00       	call   1516c <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   14c1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c1f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14c23:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   14c27:	90                   	nop
   14c28:	c9                   	leave
   14c29:	c3                   	ret

0000000000014c2a <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14c2a:	55                   	push   %rbp
   14c2b:	48 89 e5             	mov    %rsp,%rbp
   14c2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c32:	90                   	nop
   14c33:	5d                   	pop    %rbp
   14c34:	c3                   	ret
   14c35:	90                   	nop

0000000000014c36 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14c36:	55                   	push   %rbp
   14c37:	48 89 e5             	mov    %rsp,%rbp
   14c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c3e:	90                   	nop
   14c3f:	5d                   	pop    %rbp
   14c40:	c3                   	ret
   14c41:	90                   	nop

0000000000014c42 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14c42:	55                   	push   %rbp
   14c43:	48 89 e5             	mov    %rsp,%rbp
   14c46:	48 83 ec 10          	sub    $0x10,%rsp
   14c4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14c5a:	48 89 d6             	mov    %rdx,%rsi
   14c5d:	48 89 c7             	mov    %rax,%rdi
   14c60:	e8 61 1c 00 00       	call   168c6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   14c65:	90                   	nop
   14c66:	c9                   	leave
   14c67:	c3                   	ret

0000000000014c68 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   14c68:	55                   	push   %rbp
   14c69:	48 89 e5             	mov    %rsp,%rbp
   14c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c74:	48 8b 00             	mov    (%rax),%rax
   14c77:	5d                   	pop    %rbp
   14c78:	c3                   	ret
   14c79:	90                   	nop

0000000000014c7a <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   14c7a:	55                   	push   %rbp
   14c7b:	48 89 e5             	mov    %rsp,%rbp
   14c7e:	53                   	push   %rbx
   14c7f:	48 83 ec 18          	sub    $0x18,%rsp
   14c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c8b:	48 89 c7             	mov    %rax,%rdi
   14c8e:	e8 d5 ff ff ff       	call   14c68 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   14c93:	48 89 c3             	mov    %rax,%rbx
   14c96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c9a:	48 89 c7             	mov    %rax,%rdi
   14c9d:	e8 56 1c 00 00       	call   168f8 <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   14ca2:	48 c1 e0 03          	shl    $0x3,%rax
   14ca6:	48 01 d8             	add    %rbx,%rax
   14ca9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14cad:	c9                   	leave
   14cae:	c3                   	ret

0000000000014caf <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   14caf:	55                   	push   %rbp
   14cb0:	48 89 e5             	mov    %rsp,%rbp
   14cb3:	48 83 ec 10          	sub    $0x10,%rsp
   14cb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cbb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   14cbf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14cc3:	48 89 c7             	mov    %rax,%rdi
   14cc6:	e8 3f 1c 00 00       	call   1690a <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   14ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ccf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14cd3:	48 89 d6             	mov    %rdx,%rsi
   14cd6:	48 89 c7             	mov    %rax,%rdi
   14cd9:	e8 37 1c 00 00       	call   16915 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   14cde:	c9                   	leave
   14cdf:	c3                   	ret

0000000000014ce0 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   14ce0:	55                   	push   %rbp
   14ce1:	48 89 e5             	mov    %rsp,%rbp
   14ce4:	53                   	push   %rbx
   14ce5:	48 83 ec 38          	sub    $0x38,%rsp
   14ce9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14ced:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14cf1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   14cf5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14cf9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14cfd:	48 89 d6             	mov    %rdx,%rsi
   14d00:	48 89 c7             	mov    %rax,%rdi
   14d03:	e8 a7 ff ff ff       	call   14caf <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   14d08:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   14d0c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14d10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d14:	48 89 c7             	mov    %rax,%rdi
   14d17:	e8 74 00 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14d1c:	48 89 c2             	mov    %rax,%rdx
   14d1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d23:	48 89 d6             	mov    %rdx,%rsi
   14d26:	48 89 c7             	mov    %rax,%rdi
   14d29:	e8 01 1c 00 00       	call   1692f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   14d2e:	48 89 c6             	mov    %rax,%rsi
   14d31:	48 89 df             	mov    %rbx,%rdi
   14d34:	e8 ad 19 00 00       	call   166e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   14d39:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14d3d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   14d40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d44:	48 8b 00             	mov    (%rax),%rax
   14d47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14d4b:	48 c1 e2 03          	shl    $0x3,%rdx
   14d4f:	48 01 c2             	add    %rax,%rdx
   14d52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d56:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   14d5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d5e:	48 89 c7             	mov    %rax,%rdi
   14d61:	e8 2a 00 00 00       	call   14d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14d66:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   14d69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d6d:	48 8b 10             	mov    (%rax),%rdx
   14d70:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   14d74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d78:	48 89 c7             	mov    %rax,%rdi
   14d7b:	e8 0f 1c 00 00       	call   1698f <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   14d80:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14d84:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   14d88:	90                   	nop
   14d89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14d8d:	c9                   	leave
   14d8e:	c3                   	ret
   14d8f:	90                   	nop

0000000000014d90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   14d90:	55                   	push   %rbp
   14d91:	48 89 e5             	mov    %rsp,%rbp
   14d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d9c:	5d                   	pop    %rbp
   14d9d:	c3                   	ret

0000000000014d9e <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   14d9e:	55                   	push   %rbp
   14d9f:	48 89 e5             	mov    %rsp,%rbp
   14da2:	48 83 ec 20          	sub    $0x20,%rsp
   14da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14daa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14dae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   14db2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dba:	48 89 d6             	mov    %rdx,%rsi
   14dbd:	48 89 c7             	mov    %rax,%rdi
   14dc0:	e8 fb 1b 00 00       	call   169c0 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   14dc5:	90                   	nop
   14dc6:	c9                   	leave
   14dc7:	c3                   	ret

0000000000014dc8 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14dc8:	55                   	push   %rbp
   14dc9:	48 89 e5             	mov    %rsp,%rbp
   14dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14dd0:	90                   	nop
   14dd1:	5d                   	pop    %rbp
   14dd2:	c3                   	ret
   14dd3:	90                   	nop

0000000000014dd4 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14dd4:	55                   	push   %rbp
   14dd5:	48 89 e5             	mov    %rsp,%rbp
   14dd8:	48 83 ec 10          	sub    $0x10,%rsp
   14ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14de0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14de8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14dec:	48 89 d6             	mov    %rdx,%rsi
   14def:	48 89 c7             	mov    %rax,%rdi
   14df2:	e8 ef 1b 00 00       	call   169e6 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   14df7:	90                   	nop
   14df8:	c9                   	leave
   14df9:	c3                   	ret

0000000000014dfa <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   14dfa:	55                   	push   %rbp
   14dfb:	48 89 e5             	mov    %rsp,%rbp
   14dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e06:	48 8b 00             	mov    (%rax),%rax
   14e09:	5d                   	pop    %rbp
   14e0a:	c3                   	ret
   14e0b:	90                   	nop

0000000000014e0c <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   14e0c:	55                   	push   %rbp
   14e0d:	48 89 e5             	mov    %rsp,%rbp
   14e10:	53                   	push   %rbx
   14e11:	48 83 ec 18          	sub    $0x18,%rsp
   14e15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14e19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e1d:	48 89 c7             	mov    %rax,%rdi
   14e20:	e8 d5 ff ff ff       	call   14dfa <_ZNKSt16initializer_listIjE5beginEv>
   14e25:	48 89 c3             	mov    %rax,%rbx
   14e28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e2c:	48 89 c7             	mov    %rax,%rdi
   14e2f:	e8 e4 1b 00 00       	call   16a18 <_ZNKSt16initializer_listIjE4sizeEv>
   14e34:	48 c1 e0 02          	shl    $0x2,%rax
   14e38:	48 01 d8             	add    %rbx,%rax
   14e3b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14e3f:	c9                   	leave
   14e40:	c3                   	ret

0000000000014e41 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   14e41:	55                   	push   %rbp
   14e42:	48 89 e5             	mov    %rsp,%rbp
   14e45:	48 83 ec 10          	sub    $0x10,%rsp
   14e49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   14e51:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14e55:	48 89 c7             	mov    %rax,%rdi
   14e58:	e8 cd 1b 00 00       	call   16a2a <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   14e5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e61:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14e65:	48 89 d6             	mov    %rdx,%rsi
   14e68:	48 89 c7             	mov    %rax,%rdi
   14e6b:	e8 c5 1b 00 00       	call   16a35 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   14e70:	c9                   	leave
   14e71:	c3                   	ret

0000000000014e72 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   14e72:	55                   	push   %rbp
   14e73:	48 89 e5             	mov    %rsp,%rbp
   14e76:	53                   	push   %rbx
   14e77:	48 83 ec 38          	sub    $0x38,%rsp
   14e7b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14e7f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14e83:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   14e87:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14e8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14e8f:	48 89 d6             	mov    %rdx,%rsi
   14e92:	48 89 c7             	mov    %rax,%rdi
   14e95:	e8 a7 ff ff ff       	call   14e41 <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   14e9a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   14e9e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14ea2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ea6:	48 89 c7             	mov    %rax,%rdi
   14ea9:	e8 22 e3 ff ff       	call   131d0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   14eae:	48 89 c2             	mov    %rax,%rdx
   14eb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14eb5:	48 89 d6             	mov    %rdx,%rsi
   14eb8:	48 89 c7             	mov    %rax,%rdi
   14ebb:	e8 8f 1b 00 00       	call   16a4f <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   14ec0:	48 89 c6             	mov    %rax,%rsi
   14ec3:	48 89 df             	mov    %rbx,%rdi
   14ec6:	e8 e5 1b 00 00       	call   16ab0 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   14ecb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14ecf:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   14ed2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ed6:	48 8b 00             	mov    (%rax),%rax
   14ed9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14edd:	48 c1 e2 02          	shl    $0x2,%rdx
   14ee1:	48 01 c2             	add    %rax,%rdx
   14ee4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ee8:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   14eec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ef0:	48 89 c7             	mov    %rax,%rdi
   14ef3:	e8 d8 e2 ff ff       	call   131d0 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   14ef8:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   14efb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14eff:	48 8b 10             	mov    (%rax),%rdx
   14f02:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   14f06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14f0a:	48 89 c7             	mov    %rax,%rdi
   14f0d:	e8 d1 1b 00 00       	call   16ae3 <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   14f12:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14f16:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   14f1a:	90                   	nop
   14f1b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14f1f:	c9                   	leave
   14f20:	c3                   	ret
   14f21:	90                   	nop

0000000000014f22 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   14f22:	55                   	push   %rbp
   14f23:	48 89 e5             	mov    %rsp,%rbp
   14f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   14f2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f32:	5d                   	pop    %rbp
   14f33:	c3                   	ret

0000000000014f34 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   14f34:	55                   	push   %rbp
   14f35:	48 89 e5             	mov    %rsp,%rbp
   14f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   14f40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f44:	5d                   	pop    %rbp
   14f45:	c3                   	ret

0000000000014f46 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14f46:	55                   	push   %rbp
   14f47:	48 89 e5             	mov    %rsp,%rbp
   14f4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f52:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f5d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14f64:	00 
   14f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f69:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14f70:	00 
	{ }
   14f71:	90                   	nop
   14f72:	5d                   	pop    %rbp
   14f73:	c3                   	ret

0000000000014f74 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   14f74:	55                   	push   %rbp
   14f75:	48 89 e5             	mov    %rsp,%rbp
   14f78:	48 83 ec 20          	sub    $0x20,%rsp
   14f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   14f88:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14f8d:	74 17                	je     14fa6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   14f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f93:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14f97:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14f9b:	48 89 ce             	mov    %rcx,%rsi
   14f9e:	48 89 c7             	mov    %rax,%rdi
   14fa1:	e8 6e 1b 00 00       	call   16b14 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   14fa6:	90                   	nop
   14fa7:	c9                   	leave
   14fa8:	c3                   	ret
   14fa9:	90                   	nop

0000000000014faa <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14faa:	55                   	push   %rbp
   14fab:	48 89 e5             	mov    %rsp,%rbp
   14fae:	48 83 ec 10          	sub    $0x10,%rsp
   14fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fba:	48 89 c7             	mov    %rax,%rdi
   14fbd:	e8 80 1b 00 00       	call   16b42 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   14fc2:	90                   	nop
   14fc3:	c9                   	leave
   14fc4:	c3                   	ret
   14fc5:	90                   	nop

0000000000014fc6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14fc6:	55                   	push   %rbp
   14fc7:	48 89 e5             	mov    %rsp,%rbp
   14fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14fd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fdd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14fe4:	00 
   14fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fe9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14ff0:	00 
	{ }
   14ff1:	90                   	nop
   14ff2:	5d                   	pop    %rbp
   14ff3:	c3                   	ret

0000000000014ff4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14ff4:	55                   	push   %rbp
   14ff5:	48 89 e5             	mov    %rsp,%rbp
   14ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ffc:	90                   	nop
   14ffd:	5d                   	pop    %rbp
   14ffe:	c3                   	ret
   14fff:	90                   	nop

0000000000015000 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15000:	55                   	push   %rbp
   15001:	48 89 e5             	mov    %rsp,%rbp
   15004:	48 83 ec 20          	sub    $0x20,%rsp
   15008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1500c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15010:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15014:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15019:	74 17                	je     15032 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1501b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1501f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15023:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15027:	48 89 ce             	mov    %rcx,%rsi
   1502a:	48 89 c7             	mov    %rax,%rdi
   1502d:	e8 1b 1b 00 00       	call   16b4d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   15032:	90                   	nop
   15033:	c9                   	leave
   15034:	c3                   	ret
   15035:	90                   	nop

0000000000015036 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   15036:	55                   	push   %rbp
   15037:	48 89 e5             	mov    %rsp,%rbp
   1503a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1503e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15042:	5d                   	pop    %rbp
   15043:	c3                   	ret

0000000000015044 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   15044:	55                   	push   %rbp
   15045:	48 89 e5             	mov    %rsp,%rbp
   15048:	48 83 ec 20          	sub    $0x20,%rsp
   1504c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15050:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15054:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15058:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1505c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15060:	48 89 d6             	mov    %rdx,%rsi
   15063:	48 89 c7             	mov    %rax,%rdi
   15066:	e8 10 1b 00 00       	call   16b7b <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   1506b:	90                   	nop
   1506c:	c9                   	leave
   1506d:	c3                   	ret

000000000001506e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1506e:	55                   	push   %rbp
   1506f:	48 89 e5             	mov    %rsp,%rbp
   15072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   15076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1507a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15085:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1508c:	00 
   1508d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15091:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15098:	00 
	{ }
   15099:	90                   	nop
   1509a:	5d                   	pop    %rbp
   1509b:	c3                   	ret

000000000001509c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1509c:	55                   	push   %rbp
   1509d:	48 89 e5             	mov    %rsp,%rbp
   150a0:	48 83 ec 20          	sub    $0x20,%rsp
   150a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   150ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   150b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   150b5:	74 17                	je     150ce <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   150b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   150bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   150c3:	48 89 ce             	mov    %rcx,%rsi
   150c6:	48 89 c7             	mov    %rax,%rdi
   150c9:	e8 d3 1a 00 00       	call   16ba1 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   150ce:	90                   	nop
   150cf:	c9                   	leave
   150d0:	c3                   	ret
   150d1:	90                   	nop

00000000000150d2 <_ZNSaIP9VkFence_TEC1Ev>:
   150d2:	55                   	push   %rbp
   150d3:	48 89 e5             	mov    %rsp,%rbp
   150d6:	48 83 ec 10          	sub    $0x10,%rsp
   150da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150e2:	48 89 c7             	mov    %rax,%rdi
   150e5:	e8 e6 1a 00 00       	call   16bd0 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
   150ea:	90                   	nop
   150eb:	c9                   	leave
   150ec:	c3                   	ret
   150ed:	90                   	nop

00000000000150ee <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   150ee:	55                   	push   %rbp
   150ef:	48 89 e5             	mov    %rsp,%rbp
   150f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   150f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150fa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15105:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1510c:	00 
   1510d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15111:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15118:	00 
	{ }
   15119:	90                   	nop
   1511a:	5d                   	pop    %rbp
   1511b:	c3                   	ret

000000000001511c <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
   1511c:	55                   	push   %rbp
   1511d:	48 89 e5             	mov    %rsp,%rbp
   15120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15124:	90                   	nop
   15125:	5d                   	pop    %rbp
   15126:	c3                   	ret
   15127:	90                   	nop

0000000000015128 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15128:	55                   	push   %rbp
   15129:	48 89 e5             	mov    %rsp,%rbp
   1512c:	48 83 ec 20          	sub    $0x20,%rsp
   15130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15134:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15138:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1513c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15141:	74 17                	je     1515a <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15147:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1514b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1514f:	48 89 ce             	mov    %rcx,%rsi
   15152:	48 89 c7             	mov    %rax,%rdi
   15155:	e8 81 1a 00 00       	call   16bdb <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
   1515a:	90                   	nop
   1515b:	c9                   	leave
   1515c:	c3                   	ret
   1515d:	90                   	nop

000000000001515e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1515e:	55                   	push   %rbp
   1515f:	48 89 e5             	mov    %rsp,%rbp
   15162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1516a:	5d                   	pop    %rbp
   1516b:	c3                   	ret

000000000001516c <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1516c:	55                   	push   %rbp
   1516d:	48 89 e5             	mov    %rsp,%rbp
   15170:	48 83 ec 20          	sub    $0x20,%rsp
   15174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15178:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1517c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   15180:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15188:	48 89 d6             	mov    %rdx,%rsi
   1518b:	48 89 c7             	mov    %rax,%rdi
   1518e:	e8 76 1a 00 00       	call   16c09 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
   15193:	90                   	nop
   15194:	c9                   	leave
   15195:	c3                   	ret

0000000000015196 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15196:	55                   	push   %rbp
   15197:	48 89 e5             	mov    %rsp,%rbp
   1519a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1519e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   151a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151a6:	48 8b 10             	mov    (%rax),%rdx
   151a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ad:	48 89 10             	mov    %rdx,(%rax)
   151b0:	90                   	nop
   151b1:	5d                   	pop    %rbp
   151b2:	c3                   	ret
   151b3:	90                   	nop

00000000000151b4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   151b4:	55                   	push   %rbp
   151b5:	48 89 e5             	mov    %rsp,%rbp
   151b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   151bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151c0:	5d                   	pop    %rbp
   151c1:	c3                   	ret

00000000000151c2 <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   151c2:	55                   	push   %rbp
   151c3:	48 89 e5             	mov    %rsp,%rbp
   151c6:	48 83 ec 20          	sub    $0x20,%rsp
   151ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   151d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   151d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   151da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   151de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151e2:	48 89 ce             	mov    %rcx,%rsi
   151e5:	48 89 c7             	mov    %rax,%rdi
   151e8:	e8 43 1a 00 00       	call   16c30 <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   151ed:	90                   	nop
   151ee:	c9                   	leave
   151ef:	c3                   	ret

00000000000151f0 <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   151f0:	55                   	push   %rbp
   151f1:	48 89 e5             	mov    %rsp,%rbp
   151f4:	48 83 ec 10          	sub    $0x10,%rsp
   151f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   15200:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15208:	48 89 d6             	mov    %rdx,%rsi
   1520b:	48 89 c7             	mov    %rax,%rdi
   1520e:	e8 4e 1a 00 00       	call   16c61 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   15213:	90                   	nop
   15214:	c9                   	leave
   15215:	c3                   	ret

0000000000015216 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   15216:	55                   	push   %rbp
   15217:	48 89 e5             	mov    %rsp,%rbp
   1521a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1521e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15222:	48 8b 40 08          	mov    0x8(%rax),%rax
   15226:	5d                   	pop    %rbp
   15227:	c3                   	ret

0000000000015228 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   15228:	55                   	push   %rbp
   15229:	48 89 e5             	mov    %rsp,%rbp
   1522c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   15230:	90                   	nop
   15231:	5d                   	pop    %rbp
   15232:	c3                   	ret

0000000000015233 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   15233:	55                   	push   %rbp
   15234:	48 89 e5             	mov    %rsp,%rbp
   15237:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1523b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1523f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15243:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   15247:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1524b:	5d                   	pop    %rbp
   1524c:	c3                   	ret

000000000001524d <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1524d:	55                   	push   %rbp
   1524e:	48 89 e5             	mov    %rsp,%rbp
   15251:	48 83 ec 20          	sub    $0x20,%rsp
   15255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15259:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1525d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15261:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   15265:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15269:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1526d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15271:	48 89 ce             	mov    %rcx,%rsi
   15274:	48 89 c7             	mov    %rax,%rdi
   15277:	e8 1f 1a 00 00       	call   16c9b <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   1527c:	c9                   	leave
   1527d:	c3                   	ret

000000000001527e <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1527e:	55                   	push   %rbp
   1527f:	48 89 e5             	mov    %rsp,%rbp
   15282:	48 83 ec 10          	sub    $0x10,%rsp
   15286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1528a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1528e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15296:	48 89 d6             	mov    %rdx,%rsi
   15299:	48 89 c7             	mov    %rax,%rdi
   1529c:	e8 2f 1a 00 00       	call   16cd0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   152a1:	90                   	nop
   152a2:	c9                   	leave
   152a3:	c3                   	ret

00000000000152a4 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   152a4:	55                   	push   %rbp
   152a5:	48 89 e5             	mov    %rsp,%rbp
   152a8:	53                   	push   %rbx
   152a9:	48 83 ec 28          	sub    $0x28,%rsp
   152ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   152b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   152b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   152b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   152bd:	48 89 c6             	mov    %rax,%rsi
   152c0:	bf 08 00 00 00       	mov    $0x8,%edi
   152c5:	e8 bf fd fe ff       	call   5089 <_ZnwmPv>
   152ca:	48 89 c3             	mov    %rax,%rbx
   152cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152d1:	48 89 c7             	mov    %rax,%rdi
   152d4:	e8 d3 e0 ff ff       	call   133ac <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   152d9:	48 8b 00             	mov    (%rax),%rax
   152dc:	48 89 03             	mov    %rax,(%rbx)
   152df:	90                   	nop
   152e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   152e4:	c9                   	leave
   152e5:	c3                   	ret

00000000000152e6 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   152e6:	55                   	push   %rbp
   152e7:	48 89 e5             	mov    %rsp,%rbp
   152ea:	53                   	push   %rbx
   152eb:	48 83 ec 38          	sub    $0x38,%rsp
   152ef:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   152f3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   152f7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   152fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152ff:	48 89 c7             	mov    %rax,%rdi
   15302:	e8 d9 19 00 00       	call   16ce0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   15307:	48 89 c3             	mov    %rax,%rbx
   1530a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1530e:	48 89 c7             	mov    %rax,%rdi
   15311:	e8 7a c8 ff ff       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   15316:	48 29 c3             	sub    %rax,%rbx
   15319:	48 89 da             	mov    %rbx,%rdx
   1531c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15320:	48 39 c2             	cmp    %rax,%rdx
   15323:	0f 92 c0             	setb   %al
   15326:	84 c0                	test   %al,%al
   15328:	74 0c                	je     15336 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   1532a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1532e:	48 89 c7             	mov    %rax,%rdi
   15331:	e8 8a ee fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   15336:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1533a:	48 89 c7             	mov    %rax,%rdi
   1533d:	e8 4e c8 ff ff       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   15342:	48 89 c3             	mov    %rax,%rbx
   15345:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15349:	48 89 c7             	mov    %rax,%rdi
   1534c:	e8 3f c8 ff ff       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   15351:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15355:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   15359:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1535d:	48 89 d6             	mov    %rdx,%rsi
   15360:	48 89 c7             	mov    %rax,%rdi
   15363:	e8 08 19 00 00       	call   16c70 <_ZSt3maxImERKT_S2_S2_>
   15368:	48 8b 00             	mov    (%rax),%rax
   1536b:	48 01 d8             	add    %rbx,%rax
   1536e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   15372:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15376:	48 89 c7             	mov    %rax,%rdi
   15379:	e8 12 c8 ff ff       	call   11b90 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1537e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   15382:	72 12                	jb     15396 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   15384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15388:	48 89 c7             	mov    %rax,%rdi
   1538b:	e8 50 19 00 00       	call   16ce0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   15390:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15394:	73 0e                	jae    153a4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   15396:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1539a:	48 89 c7             	mov    %rax,%rdi
   1539d:	e8 3e 19 00 00       	call   16ce0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   153a2:	eb 04                	jmp    153a8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   153a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   153a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   153ac:	c9                   	leave
   153ad:	c3                   	ret

00000000000153ae <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   153ae:	55                   	push   %rbp
   153af:	48 89 e5             	mov    %rsp,%rbp
   153b2:	53                   	push   %rbx
   153b3:	48 83 ec 18          	sub    $0x18,%rsp
   153b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   153bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153c3:	48 89 c7             	mov    %rax,%rdi
   153c6:	e8 d3 df ff ff       	call   1339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   153cb:	48 8b 18             	mov    (%rax),%rbx
   153ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   153d2:	48 89 c7             	mov    %rax,%rdi
   153d5:	e8 c4 df ff ff       	call   1339e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   153da:	48 8b 00             	mov    (%rax),%rax
   153dd:	48 89 da             	mov    %rbx,%rdx
   153e0:	48 29 c2             	sub    %rax,%rdx
   153e3:	48 89 d0             	mov    %rdx,%rax
   153e6:	48 c1 f8 03          	sar    $0x3,%rax
   153ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   153ee:	c9                   	leave
   153ef:	c3                   	ret

00000000000153f0 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   153f0:	55                   	push   %rbp
   153f1:	48 89 e5             	mov    %rsp,%rbp
   153f4:	48 83 ec 20          	sub    $0x20,%rsp
   153f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15400:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15404:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   15408:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1540c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15410:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15418:	48 89 c7             	mov    %rax,%rdi
   1541b:	e8 e2 18 00 00       	call   16d02 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   15420:	c9                   	leave
   15421:	c3                   	ret

0000000000015422 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   15422:	55                   	push   %rbp
   15423:	48 89 e5             	mov    %rsp,%rbp
   15426:	48 83 ec 20          	sub    $0x20,%rsp
   1542a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1542e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   15432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15436:	48 8b 00             	mov    (%rax),%rax
   15439:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1543d:	48 c1 e2 03          	shl    $0x3,%rdx
   15441:	48 f7 da             	neg    %rdx
   15444:	48 01 d0             	add    %rdx,%rax
   15447:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1544b:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1544f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   15453:	48 89 d6             	mov    %rdx,%rsi
   15456:	48 89 c7             	mov    %rax,%rdi
   15459:	e8 22 df ff ff       	call   13380 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1545e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15462:	c9                   	leave
   15463:	c3                   	ret

0000000000015464 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   15464:	55                   	push   %rbp
   15465:	48 89 e5             	mov    %rsp,%rbp
   15468:	53                   	push   %rbx
   15469:	48 83 ec 28          	sub    $0x28,%rsp
   1546d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15471:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   15475:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   15479:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1547d:	48 89 c7             	mov    %rax,%rdi
   15480:	e8 6f e1 ff ff       	call   135f4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   15485:	48 89 c6             	mov    %rax,%rsi
   15488:	48 89 df             	mov    %rbx,%rdi
   1548b:	e8 d6 18 00 00       	call   16d66 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   15490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15494:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   15498:	90                   	nop
   15499:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1549d:	c9                   	leave
   1549e:	c3                   	ret
   1549f:	90                   	nop

00000000000154a0 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   154a0:	55                   	push   %rbp
   154a1:	48 89 e5             	mov    %rsp,%rbp
   154a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   154a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154ac:	5d                   	pop    %rbp
   154ad:	c3                   	ret

00000000000154ae <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   154ae:	55                   	push   %rbp
   154af:	48 89 e5             	mov    %rsp,%rbp
   154b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   154ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154be:	8b 10                	mov    (%rax),%edx
   154c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154c4:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   154c6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   154ca:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   154ce:	48 8b 46 04          	mov    0x4(%rsi),%rax
   154d2:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   154d6:	48 89 41 04          	mov    %rax,0x4(%rcx)
   154da:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   154de:	48 8b 46 14          	mov    0x14(%rsi),%rax
   154e2:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   154e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   154ea:	5d                   	pop    %rbp
   154eb:	c3                   	ret

00000000000154ec <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   154ec:	55                   	push   %rbp
   154ed:	48 89 e5             	mov    %rsp,%rbp
   154f0:	53                   	push   %rbx
   154f1:	48 83 ec 18          	sub    $0x18,%rsp
   154f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   154f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   154fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15501:	48 89 c7             	mov    %rax,%rdi
   15504:	e8 af 18 00 00       	call   16db8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   15509:	48 89 c3             	mov    %rax,%rbx
   1550c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15510:	48 89 c7             	mov    %rax,%rdi
   15513:	e8 92 18 00 00       	call   16daa <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   15518:	48 89 de             	mov    %rbx,%rsi
   1551b:	48 89 c7             	mov    %rax,%rdi
   1551e:	e8 a3 18 00 00       	call   16dc6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   15523:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15527:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   1552b:	90                   	nop
   1552c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15530:	c9                   	leave
   15531:	c3                   	ret

0000000000015532 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   15532:	55                   	push   %rbp
   15533:	48 89 e5             	mov    %rsp,%rbp
   15536:	48 83 ec 10          	sub    $0x10,%rsp
   1553a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   1553e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15542:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   15546:	84 c0                	test   %al,%al
   15548:	74 0c                	je     15556 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   1554a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1554e:	48 89 c7             	mov    %rax,%rdi
   15551:	e8 ca 18 00 00       	call   16e20 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   15556:	90                   	nop
   15557:	c9                   	leave
   15558:	c3                   	ret
   15559:	90                   	nop

000000000001555a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1555a:	55                   	push   %rbp
   1555b:	48 89 e5             	mov    %rsp,%rbp
   1555e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15562:	90                   	nop
   15563:	5d                   	pop    %rbp
   15564:	c3                   	ret

0000000000015565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   15565:	55                   	push   %rbp
   15566:	48 89 e5             	mov    %rsp,%rbp
   15569:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1556d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15571:	48 8b 40 18          	mov    0x18(%rax),%rax
   15575:	5d                   	pop    %rbp
   15576:	c3                   	ret

0000000000015577 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   15577:	55                   	push   %rbp
   15578:	48 89 e5             	mov    %rsp,%rbp
   1557b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1557f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15583:	48 8b 40 10          	mov    0x10(%rax),%rax
   15587:	5d                   	pop    %rbp
   15588:	c3                   	ret
   15589:	90                   	nop

000000000001558a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1558a:	55                   	push   %rbp
   1558b:	48 89 e5             	mov    %rsp,%rbp
   1558e:	48 83 ec 10          	sub    $0x10,%rsp
   15592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15596:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   1559a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1559e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155a2:	48 89 d6             	mov    %rdx,%rsi
   155a5:	48 89 c7             	mov    %rax,%rdi
   155a8:	e8 87 18 00 00       	call   16e34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   155ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   155b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155b5:	48 89 d6             	mov    %rdx,%rsi
   155b8:	48 89 c7             	mov    %rax,%rdi
   155bb:	e8 b2 18 00 00       	call   16e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   155c0:	90                   	nop
   155c1:	c9                   	leave
   155c2:	c3                   	ret
   155c3:	90                   	nop

00000000000155c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   155c4:	55                   	push   %rbp
   155c5:	48 89 e5             	mov    %rsp,%rbp
   155c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   155cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155d0:	48 8b 40 10          	mov    0x10(%rax),%rax
   155d4:	5d                   	pop    %rbp
   155d5:	c3                   	ret

00000000000155d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   155d6:	55                   	push   %rbp
   155d7:	48 89 e5             	mov    %rsp,%rbp
   155da:	53                   	push   %rbx
   155db:	48 83 ec 18          	sub    $0x18,%rsp
   155df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   155e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   155e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155eb:	48 89 c7             	mov    %rax,%rdi
   155ee:	e8 b5 18 00 00       	call   16ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   155f3:	48 89 c3             	mov    %rax,%rbx
   155f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155fa:	48 89 c7             	mov    %rax,%rdi
   155fd:	e8 c0 e1 ff ff       	call   137c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   15602:	48 89 c6             	mov    %rax,%rsi
   15605:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15609:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1560d:	48 89 d1             	mov    %rdx,%rcx
   15610:	48 89 da             	mov    %rbx,%rdx
   15613:	48 89 c7             	mov    %rax,%rdi
   15616:	e8 9f 18 00 00       	call   16eba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   1561b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1561f:	c9                   	leave
   15620:	c3                   	ret
   15621:	90                   	nop

0000000000015622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   15622:	55                   	push   %rbp
   15623:	48 89 e5             	mov    %rsp,%rbp
   15626:	48 83 ec 20          	sub    $0x20,%rsp
   1562a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   1562e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15632:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15636:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1563a:	48 89 d6             	mov    %rdx,%rsi
   1563d:	48 89 c7             	mov    %rax,%rdi
   15640:	e8 39 06 00 00       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15649:	c9                   	leave
   1564a:	c3                   	ret
   1564b:	90                   	nop

000000000001564c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   1564c:	55                   	push   %rbp
   1564d:	48 89 e5             	mov    %rsp,%rbp
   15650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   15654:	90                   	nop
   15655:	5d                   	pop    %rbp
   15656:	c3                   	ret
   15657:	90                   	nop

0000000000015658 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   15658:	55                   	push   %rbp
   15659:	48 89 e5             	mov    %rsp,%rbp
   1565c:	48 83 ec 10          	sub    $0x10,%rsp
   15660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   15664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15668:	48 83 c0 20          	add    $0x20,%rax
   1566c:	48 89 c7             	mov    %rax,%rdi
   1566f:	e8 dc 18 00 00       	call   16f50 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   15674:	c9                   	leave
   15675:	c3                   	ret

0000000000015676 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   15676:	55                   	push   %rbp
   15677:	48 89 e5             	mov    %rsp,%rbp
   1567a:	48 83 ec 10          	sub    $0x10,%rsp
   1567e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15682:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   15686:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1568a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1568e:	48 89 d6             	mov    %rdx,%rsi
   15691:	48 89 c7             	mov    %rax,%rdi
   15694:	e8 97 e9 fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   15699:	c1 e8 1f             	shr    $0x1f,%eax
   1569c:	c9                   	leave
   1569d:	c3                   	ret

000000000001569e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1569e:	55                   	push   %rbp
   1569f:	48 89 e5             	mov    %rsp,%rbp
   156a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   156a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156aa:	5d                   	pop    %rbp
   156ab:	c3                   	ret

00000000000156ac <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   156ac:	55                   	push   %rbp
   156ad:	48 89 e5             	mov    %rsp,%rbp
   156b0:	53                   	push   %rbx
   156b1:	48 83 ec 18          	sub    $0x18,%rsp
   156b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   156b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   156bd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   156c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   156c5:	48 89 c7             	mov    %rax,%rdi
   156c8:	e8 d1 ff ff ff       	call   1569e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   156cd:	48 89 c6             	mov    %rax,%rsi
   156d0:	48 89 df             	mov    %rbx,%rdi
   156d3:	e8 92 18 00 00       	call   16f6a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   156d8:	90                   	nop
   156d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   156dd:	c9                   	leave
   156de:	c3                   	ret

00000000000156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   156df:	55                   	push   %rbp
   156e0:	48 89 e5             	mov    %rsp,%rbp
   156e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   156e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156eb:	5d                   	pop    %rbp
   156ec:	c3                   	ret

00000000000156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   156ed:	55                   	push   %rbp
   156ee:	48 89 e5             	mov    %rsp,%rbp
   156f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   156f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156f9:	5d                   	pop    %rbp
   156fa:	c3                   	ret

00000000000156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   156fb:	55                   	push   %rbp
   156fc:	48 89 e5             	mov    %rsp,%rbp
   156ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15707:	5d                   	pop    %rbp
   15708:	c3                   	ret
   15709:	90                   	nop

000000000001570a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   1570a:	55                   	push   %rbp
   1570b:	48 89 e5             	mov    %rsp,%rbp
   1570e:	41 54                	push   %r12
   15710:	53                   	push   %rbx
   15711:	48 83 ec 30          	sub    $0x30,%rsp
   15715:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15719:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1571d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15721:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   15725:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   15729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1572d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15731:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   15734:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15738:	48 89 c7             	mov    %rax,%rdi
   1573b:	e8 bb ff ff ff       	call   156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15740:	49 89 c4             	mov    %rax,%r12
   15743:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15747:	48 89 c7             	mov    %rax,%rdi
   1574a:	e8 9e ff ff ff       	call   156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1574f:	48 89 c3             	mov    %rax,%rbx
   15752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15756:	48 89 c7             	mov    %rax,%rdi
   15759:	e8 81 ff ff ff       	call   156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1575e:	48 89 c6             	mov    %rax,%rsi
   15761:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15765:	4c 89 e1             	mov    %r12,%rcx
   15768:	48 89 da             	mov    %rbx,%rdx
   1576b:	48 89 c7             	mov    %rax,%rdi
   1576e:	e8 2b 18 00 00       	call   16f9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   15773:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15777:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   1577b:	90                   	nop
   1577c:	48 83 c4 30          	add    $0x30,%rsp
   15780:	5b                   	pop    %rbx
   15781:	41 5c                	pop    %r12
   15783:	5d                   	pop    %rbp
   15784:	c3                   	ret
   15785:	90                   	nop

0000000000015786 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   15786:	55                   	push   %rbp
   15787:	48 89 e5             	mov    %rsp,%rbp
   1578a:	48 83 ec 10          	sub    $0x10,%rsp
   1578e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   15792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15796:	48 8b 40 08          	mov    0x8(%rax),%rax
   1579a:	48 85 c0             	test   %rax,%rax
   1579d:	74 1a                	je     157b9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   1579f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157a3:	48 8b 00             	mov    (%rax),%rax
   157a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   157aa:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   157ae:	48 89 d6             	mov    %rdx,%rsi
   157b1:	48 89 c7             	mov    %rax,%rdi
   157b4:	e8 d1 fd ff ff       	call   1558a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   157b9:	90                   	nop
   157ba:	c9                   	leave
   157bb:	c3                   	ret

00000000000157bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   157bc:	55                   	push   %rbp
   157bd:	48 89 e5             	mov    %rsp,%rbp
   157c0:	53                   	push   %rbx
   157c1:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   157c8:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   157cf:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   157d6:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   157dd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   157e4:	48 89 c7             	mov    %rax,%rdi
   157e7:	e8 2e 18 00 00       	call   1701a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   157ec:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   157f3:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   157fa:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   15801:	48 89 c7             	mov    %rax,%rdi
   15804:	e8 9f 16 00 00       	call   16ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   15809:	48 39 c3             	cmp    %rax,%rbx
   1580c:	0f 94 c0             	sete   %al
   1580f:	84 c0                	test   %al,%al
   15811:	0f 84 c8 00 00 00    	je     158df <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   15817:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1581e:	48 89 c7             	mov    %rax,%rdi
   15821:	e8 1c 18 00 00       	call   17042 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   15826:	48 85 c0             	test   %rax,%rax
   15829:	74 44                	je     1586f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1582b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   15832:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   15839:	48 89 c7             	mov    %rax,%rdi
   1583c:	e8 13 18 00 00       	call   17054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   15841:	48 8b 00             	mov    (%rax),%rax
   15844:	48 89 c7             	mov    %rax,%rdi
   15847:	e8 1a 18 00 00       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1584c:	48 89 c1             	mov    %rax,%rcx
   1584f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   15856:	48 89 c2             	mov    %rax,%rdx
   15859:	48 89 ce             	mov    %rcx,%rsi
   1585c:	48 89 df             	mov    %rbx,%rdi
   1585f:	e8 40 e0 ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15864:	84 c0                	test   %al,%al
   15866:	74 07                	je     1586f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   15868:	b8 01 00 00 00       	mov    $0x1,%eax
   1586d:	eb 05                	jmp    15874 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   1586f:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   15874:	84 c0                	test   %al,%al
   15876:	74 49                	je     158c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   15878:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1587f:	48 89 c7             	mov    %rax,%rdi
   15882:	e8 cd 17 00 00       	call   17054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   15887:	48 89 c2             	mov    %rax,%rdx
   1588a:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   15891:	00 00 00 00 
   15895:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   1589c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   158a3:	48 89 ce             	mov    %rcx,%rsi
   158a6:	48 89 c7             	mov    %rax,%rdi
   158a9:	e8 d2 17 00 00       	call   17080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   158ae:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   158b5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   158bc:	e9 43 03 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   158c1:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   158c8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   158cf:	48 89 d6             	mov    %rdx,%rsi
   158d2:	48 89 c7             	mov    %rax,%rdi
   158d5:	e8 d6 17 00 00       	call   170b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   158da:	e9 25 03 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   158df:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   158e6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   158ed:	48 89 c7             	mov    %rax,%rdi
   158f0:	e8 71 17 00 00       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   158f5:	48 89 c2             	mov    %rax,%rdx
   158f8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   158ff:	48 89 c6             	mov    %rax,%rsi
   15902:	48 89 df             	mov    %rbx,%rdi
   15905:	e8 9a df ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1590a:	84 c0                	test   %al,%al
   1590c:	0f 84 66 01 00 00    	je     15a78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   15912:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   15919:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   15920:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   15927:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1592e:	48 89 c7             	mov    %rax,%rdi
   15931:	e8 f0 18 00 00       	call   17226 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   15936:	48 8b 00             	mov    (%rax),%rax
   15939:	48 39 c3             	cmp    %rax,%rbx
   1593c:	0f 94 c0             	sete   %al
   1593f:	84 c0                	test   %al,%al
   15941:	74 4c                	je     1598f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   15943:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1594a:	48 89 c7             	mov    %rax,%rdi
   1594d:	e8 d4 18 00 00       	call   17226 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   15952:	48 89 c3             	mov    %rax,%rbx
   15955:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1595c:	48 89 c7             	mov    %rax,%rdi
   1595f:	e8 c2 18 00 00       	call   17226 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   15964:	48 89 c1             	mov    %rax,%rcx
   15967:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1596e:	48 89 da             	mov    %rbx,%rdx
   15971:	48 89 ce             	mov    %rcx,%rsi
   15974:	48 89 c7             	mov    %rax,%rdi
   15977:	e8 bc 18 00 00       	call   17238 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1597c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   15983:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1598a:	e9 75 02 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   1598f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   15996:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   1599d:	48 89 c7             	mov    %rax,%rdi
   159a0:	e8 d7 18 00 00       	call   1727c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   159a5:	48 8b 00             	mov    (%rax),%rax
   159a8:	48 89 c7             	mov    %rax,%rdi
   159ab:	e8 b6 16 00 00       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   159b0:	48 89 c1             	mov    %rax,%rcx
   159b3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   159ba:	48 89 c2             	mov    %rax,%rdx
   159bd:	48 89 ce             	mov    %rcx,%rsi
   159c0:	48 89 df             	mov    %rbx,%rdi
   159c3:	e8 dc de ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   159c8:	84 c0                	test   %al,%al
   159ca:	0f 84 8a 00 00 00    	je     15a5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   159d0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   159d7:	48 89 c7             	mov    %rax,%rdi
   159da:	e8 86 fb ff ff       	call   15565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   159df:	48 85 c0             	test   %rax,%rax
   159e2:	0f 94 c0             	sete   %al
   159e5:	84 c0                	test   %al,%al
   159e7:	74 3e                	je     15a27 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   159e9:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   159f0:	00 00 00 00 
   159f4:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   159fb:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   15a02:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   15a09:	48 89 ce             	mov    %rcx,%rsi
   15a0c:	48 89 c7             	mov    %rax,%rdi
   15a0f:	e8 6c 16 00 00       	call   17080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   15a14:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   15a1b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   15a22:	e9 dd 01 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   15a27:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   15a2e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   15a35:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   15a3c:	48 89 ce             	mov    %rcx,%rsi
   15a3f:	48 89 c7             	mov    %rax,%rdi
   15a42:	e8 f1 17 00 00       	call   17238 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   15a47:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   15a4e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   15a55:	e9 aa 01 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   15a5a:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   15a61:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   15a68:	48 89 d6             	mov    %rdx,%rsi
   15a6b:	48 89 c7             	mov    %rax,%rdi
   15a6e:	e8 3d 16 00 00       	call   170b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   15a73:	e9 8c 01 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   15a78:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   15a7f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   15a86:	48 89 c7             	mov    %rax,%rdi
   15a89:	e8 d8 15 00 00       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   15a8e:	48 89 c1             	mov    %rax,%rcx
   15a91:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   15a98:	48 89 c2             	mov    %rax,%rdx
   15a9b:	48 89 ce             	mov    %rcx,%rsi
   15a9e:	48 89 df             	mov    %rbx,%rdi
   15aa1:	e8 fe dd ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15aa6:	84 c0                	test   %al,%al
   15aa8:	0f 84 2c 01 00 00    	je     15bda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   15aae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   15ab5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   15abc:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   15ac3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   15aca:	48 89 c7             	mov    %rax,%rdi
   15acd:	e8 82 15 00 00       	call   17054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   15ad2:	48 8b 00             	mov    (%rax),%rax
   15ad5:	48 39 c3             	cmp    %rax,%rbx
   15ad8:	0f 94 c0             	sete   %al
   15adb:	84 c0                	test   %al,%al
   15add:	74 3a                	je     15b19 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   15adf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   15ae6:	48 89 c7             	mov    %rax,%rdi
   15ae9:	e8 66 15 00 00       	call   17054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   15aee:	48 89 c2             	mov    %rax,%rdx
   15af1:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   15af8:	00 
   15af9:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   15afd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   15b01:	48 89 ce             	mov    %rcx,%rsi
   15b04:	48 89 c7             	mov    %rax,%rdi
   15b07:	e8 74 15 00 00       	call   17080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   15b0c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15b10:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   15b14:	e9 eb 00 00 00       	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   15b19:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   15b20:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   15b27:	48 89 c7             	mov    %rax,%rdi
   15b2a:	e8 75 17 00 00       	call   172a4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   15b2f:	48 8b 00             	mov    (%rax),%rax
   15b32:	48 89 c7             	mov    %rax,%rdi
   15b35:	e8 2c 15 00 00       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   15b3a:	48 89 c2             	mov    %rax,%rdx
   15b3d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   15b44:	48 89 c6             	mov    %rax,%rsi
   15b47:	48 89 df             	mov    %rbx,%rdi
   15b4a:	e8 55 dd ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15b4f:	84 c0                	test   %al,%al
   15b51:	74 6c                	je     15bbf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   15b53:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   15b5a:	48 89 c7             	mov    %rax,%rdi
   15b5d:	e8 03 fa ff ff       	call   15565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   15b62:	48 85 c0             	test   %rax,%rax
   15b65:	0f 94 c0             	sete   %al
   15b68:	84 c0                	test   %al,%al
   15b6a:	74 2c                	je     15b98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   15b6c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   15b73:	00 
   15b74:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   15b7b:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   15b7f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   15b83:	48 89 ce             	mov    %rcx,%rsi
   15b86:	48 89 c7             	mov    %rax,%rdi
   15b89:	e8 f2 14 00 00       	call   17080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   15b8e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15b92:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   15b96:	eb 6c                	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   15b98:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   15b9f:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   15ba6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15baa:	48 89 ce             	mov    %rcx,%rsi
   15bad:	48 89 c7             	mov    %rax,%rdi
   15bb0:	e8 83 16 00 00       	call   17238 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   15bb5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15bb9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15bbd:	eb 45                	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   15bbf:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   15bc6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   15bcd:	48 89 d6             	mov    %rdx,%rsi
   15bd0:	48 89 c7             	mov    %rax,%rdi
   15bd3:	e8 d8 14 00 00       	call   170b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   15bd8:	eb 2a                	jmp    15c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   15bda:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   15be1:	00 
   15be2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   15be6:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   15bed:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15bf1:	48 89 ce             	mov    %rcx,%rsi
   15bf4:	48 89 c7             	mov    %rax,%rdi
   15bf7:	e8 84 14 00 00       	call   17080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   15bfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15c00:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   15c04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15c08:	c9                   	leave
   15c09:	c3                   	ret

0000000000015c0a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   15c0a:	55                   	push   %rbp
   15c0b:	48 89 e5             	mov    %rsp,%rbp
   15c0e:	48 83 ec 10          	sub    $0x10,%rsp
   15c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   15c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c1a:	48 8b 40 08          	mov    0x8(%rax),%rax
   15c1e:	48 89 c7             	mov    %rax,%rdi
   15c21:	e8 a6 16 00 00       	call   172cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   15c26:	c9                   	leave
   15c27:	c3                   	ret

0000000000015c28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   15c28:	55                   	push   %rbp
   15c29:	48 89 e5             	mov    %rsp,%rbp
   15c2c:	48 83 ec 30          	sub    $0x30,%rsp
   15c30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15c34:	48 89 d1             	mov    %rdx,%rcx
   15c37:	48 89 f0             	mov    %rsi,%rax
   15c3a:	48 89 fa             	mov    %rdi,%rdx
   15c3d:	48 89 ca             	mov    %rcx,%rdx
   15c40:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   15c44:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   15c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c4c:	48 8b 00             	mov    (%rax),%rax
   15c4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15c53:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   15c57:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15c5b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   15c5f:	48 89 c7             	mov    %rax,%rdi
   15c62:	e8 91 16 00 00       	call   172f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   15c67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   15c6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c6f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15c76:	00 
	  return __it;
   15c77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   15c7b:	c9                   	leave
   15c7c:	c3                   	ret
   15c7d:	90                   	nop

0000000000015c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   15c7e:	55                   	push   %rbp
   15c7f:	48 89 e5             	mov    %rsp,%rbp
   15c82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   15c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15c92:	48 89 10             	mov    %rdx,(%rax)
   15c95:	90                   	nop
   15c96:	5d                   	pop    %rbp
   15c97:	c3                   	ret

0000000000015c98 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   15c98:	55                   	push   %rbp
   15c99:	48 89 e5             	mov    %rsp,%rbp
   15c9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ca0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   15ca4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ca8:	48 8b 10             	mov    (%rax),%rdx
   15cab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15caf:	48 89 10             	mov    %rdx,(%rax)
   15cb2:	90                   	nop
   15cb3:	5d                   	pop    %rbp
   15cb4:	c3                   	ret
   15cb5:	90                   	nop

0000000000015cb6 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   15cb6:	55                   	push   %rbp
   15cb7:	48 89 e5             	mov    %rsp,%rbp
   15cba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   15cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cc2:	5d                   	pop    %rbp
   15cc3:	c3                   	ret

0000000000015cc4 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   15cc4:	55                   	push   %rbp
   15cc5:	48 89 e5             	mov    %rsp,%rbp
   15cc8:	48 83 ec 10          	sub    $0x10,%rsp
   15ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   15cd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cd8:	48 89 c7             	mov    %rax,%rdi
   15cdb:	e8 dc 16 00 00       	call   173bc <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15ce0:	48 89 c2             	mov    %rax,%rdx
   15ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ce7:	48 89 d6             	mov    %rdx,%rsi
   15cea:	48 89 c7             	mov    %rax,%rdi
   15ced:	e8 90 41 ff ff       	call   9e82 <_ZNSaIP9VkImage_TEC1ERKS1_>
   15cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cf6:	c9                   	leave
   15cf7:	c3                   	ret

0000000000015cf8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15cf8:	55                   	push   %rbp
   15cf9:	48 89 e5             	mov    %rsp,%rbp
   15cfc:	48 83 ec 10          	sub    $0x10,%rsp
   15d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   15d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15d10:	48 89 d6             	mov    %rdx,%rsi
   15d13:	48 89 c7             	mov    %rax,%rdi
   15d16:	e8 af 16 00 00       	call   173ca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   15d1b:	90                   	nop
   15d1c:	c9                   	leave
   15d1d:	c3                   	ret

0000000000015d1e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   15d1e:	55                   	push   %rbp
   15d1f:	48 89 e5             	mov    %rsp,%rbp
   15d22:	48 83 ec 30          	sub    $0x30,%rsp
   15d26:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15d2a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   15d2e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15d32:	48 89 c7             	mov    %rax,%rdi
   15d35:	e8 ca 55 ff ff       	call   b304 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   15d3a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15d3e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15d42:	48 89 d6             	mov    %rdx,%rsi
   15d45:	48 89 c7             	mov    %rax,%rdi
   15d48:	e8 a3 16 00 00       	call   173f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   15d4d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15d51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d55:	48 89 d6             	mov    %rdx,%rsi
   15d58:	48 89 c7             	mov    %rax,%rdi
   15d5b:	e8 90 16 00 00       	call   173f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   15d60:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   15d64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15d68:	48 89 d6             	mov    %rdx,%rsi
   15d6b:	48 89 c7             	mov    %rax,%rdi
   15d6e:	e8 7d 16 00 00       	call   173f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   15d73:	90                   	nop
   15d74:	c9                   	leave
   15d75:	c3                   	ret

0000000000015d76 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   15d76:	55                   	push   %rbp
   15d77:	48 89 e5             	mov    %rsp,%rbp
   15d7a:	48 83 ec 10          	sub    $0x10,%rsp
   15d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   15d86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d8a:	48 89 c7             	mov    %rax,%rdi
   15d8d:	e8 9b 16 00 00       	call   1742d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   15d92:	90                   	nop
   15d93:	c9                   	leave
   15d94:	c3                   	ret
   15d95:	90                   	nop

0000000000015d96 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   15d96:	55                   	push   %rbp
   15d97:	48 89 e5             	mov    %rsp,%rbp
   15d9a:	48 83 ec 10          	sub    $0x10,%rsp
   15d9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   15da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15da6:	48 89 c7             	mov    %rax,%rdi
   15da9:	e8 d0 16 00 00       	call   1747e <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   15dae:	48 89 c7             	mov    %rax,%rdi
   15db1:	e8 85 16 00 00       	call   1743b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   15db6:	c9                   	leave
   15db7:	c3                   	ret

0000000000015db8 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   15db8:	55                   	push   %rbp
   15db9:	48 89 e5             	mov    %rsp,%rbp
   15dbc:	48 83 ec 20          	sub    $0x20,%rsp
   15dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15dc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15dc8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   15dcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dd4:	48 89 d6             	mov    %rdx,%rsi
   15dd7:	48 89 c7             	mov    %rax,%rdi
   15dda:	e8 ad 16 00 00       	call   1748c <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   15ddf:	c9                   	leave
   15de0:	c3                   	ret
   15de1:	90                   	nop

0000000000015de2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   15de2:	55                   	push   %rbp
   15de3:	48 89 e5             	mov    %rsp,%rbp
   15de6:	53                   	push   %rbx
   15de7:	48 83 ec 38          	sub    $0x38,%rsp
   15deb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15def:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15df3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   15df7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15dfb:	48 89 c7             	mov    %rax,%rdi
   15dfe:	e8 93 ff ff ff       	call   15d96 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15e03:	48 89 c3             	mov    %rax,%rbx
   15e06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e0a:	48 89 c7             	mov    %rax,%rdi
   15e0d:	e8 30 c8 ff ff       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   15e12:	48 29 c3             	sub    %rax,%rbx
   15e15:	48 89 da             	mov    %rbx,%rdx
   15e18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e1c:	48 39 c2             	cmp    %rax,%rdx
   15e1f:	0f 92 c0             	setb   %al
   15e22:	84 c0                	test   %al,%al
   15e24:	74 0c                	je     15e32 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   15e26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15e2a:	48 89 c7             	mov    %rax,%rdi
   15e2d:	e8 8e e3 fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   15e32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e36:	48 89 c7             	mov    %rax,%rdi
   15e39:	e8 04 c8 ff ff       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   15e3e:	48 89 c3             	mov    %rax,%rbx
   15e41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e45:	48 89 c7             	mov    %rax,%rdi
   15e48:	e8 f5 c7 ff ff       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   15e4d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15e51:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   15e55:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15e59:	48 89 d6             	mov    %rdx,%rsi
   15e5c:	48 89 c7             	mov    %rax,%rdi
   15e5f:	e8 0c 0e 00 00       	call   16c70 <_ZSt3maxImERKT_S2_S2_>
   15e64:	48 8b 00             	mov    (%rax),%rax
   15e67:	48 01 d8             	add    %rbx,%rax
   15e6a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   15e6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e72:	48 89 c7             	mov    %rax,%rdi
   15e75:	e8 c8 c7 ff ff       	call   12642 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   15e7a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   15e7e:	72 12                	jb     15e92 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   15e80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e84:	48 89 c7             	mov    %rax,%rdi
   15e87:	e8 0a ff ff ff       	call   15d96 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15e8c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   15e90:	73 0e                	jae    15ea0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   15e92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15e96:	48 89 c7             	mov    %rax,%rdi
   15e99:	e8 f8 fe ff ff       	call   15d96 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   15e9e:	eb 04                	jmp    15ea4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   15ea0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   15ea4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15ea8:	c9                   	leave
   15ea9:	c3                   	ret

0000000000015eaa <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   15eaa:	55                   	push   %rbp
   15eab:	48 89 e5             	mov    %rsp,%rbp
   15eae:	48 83 ec 10          	sub    $0x10,%rsp
   15eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15eb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   15eba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15ebf:	74 15                	je     15ed6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   15ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ec5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15ec9:	48 89 d6             	mov    %rdx,%rsi
   15ecc:	48 89 c7             	mov    %rax,%rdi
   15ecf:	e8 e1 15 00 00       	call   174b5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   15ed4:	eb 05                	jmp    15edb <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   15ed6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   15edb:	c9                   	leave
   15edc:	c3                   	ret

0000000000015edd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   15edd:	55                   	push   %rbp
   15ede:	48 89 e5             	mov    %rsp,%rbp
   15ee1:	48 83 ec 20          	sub    $0x20,%rsp
   15ee5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ee9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15eed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15ef1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   15ef5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   15ef9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15efd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   15f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f05:	48 89 c7             	mov    %rax,%rdi
   15f08:	e8 d2 15 00 00       	call   174df <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   15f0d:	c9                   	leave
   15f0e:	c3                   	ret
   15f0f:	90                   	nop

0000000000015f10 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   15f10:	55                   	push   %rbp
   15f11:	48 89 e5             	mov    %rsp,%rbp
   15f14:	48 83 ec 10          	sub    $0x10,%rsp
   15f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   15f20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f28:	48 89 d6             	mov    %rdx,%rsi
   15f2b:	48 89 c7             	mov    %rax,%rdi
   15f2e:	e8 0f 16 00 00       	call   17542 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   15f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f37:	48 89 c7             	mov    %rax,%rdi
   15f3a:	e8 29 16 00 00       	call   17568 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   15f3f:	90                   	nop
   15f40:	c9                   	leave
   15f41:	c3                   	ret

0000000000015f42 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   15f42:	55                   	push   %rbp
   15f43:	48 89 e5             	mov    %rsp,%rbp
   15f46:	48 83 ec 20          	sub    $0x20,%rsp
   15f4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15f52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15f56:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15f5b:	74 17                	je     15f74 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15f65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15f69:	48 89 ce             	mov    %rcx,%rsi
   15f6c:	48 89 c7             	mov    %rax,%rdi
   15f6f:	e8 22 16 00 00       	call   17596 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   15f74:	90                   	nop
   15f75:	c9                   	leave
   15f76:	c3                   	ret
   15f77:	90                   	nop

0000000000015f78 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   15f78:	55                   	push   %rbp
   15f79:	48 89 e5             	mov    %rsp,%rbp
   15f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f84:	48 8b 40 08          	mov    0x8(%rax),%rax
   15f88:	5d                   	pop    %rbp
   15f89:	c3                   	ret

0000000000015f8a <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   15f8a:	55                   	push   %rbp
   15f8b:	48 89 e5             	mov    %rsp,%rbp
   15f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   15f92:	90                   	nop
   15f93:	5d                   	pop    %rbp
   15f94:	c3                   	ret

0000000000015f95 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   15f95:	55                   	push   %rbp
   15f96:	48 89 e5             	mov    %rsp,%rbp
   15f99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f9d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   15fa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15fa5:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   15fa9:	48 c1 f8 04          	sar    $0x4,%rax
   15fad:	48 89 c2             	mov    %rax,%rdx
   15fb0:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   15fb7:	e3 38 8e 
   15fba:	48 0f af c2          	imul   %rdx,%rax
    }
   15fbe:	5d                   	pop    %rbp
   15fbf:	c3                   	ret

0000000000015fc0 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   15fc0:	55                   	push   %rbp
   15fc1:	48 89 e5             	mov    %rsp,%rbp
   15fc4:	53                   	push   %rbx
   15fc5:	48 83 ec 28          	sub    $0x28,%rsp
   15fc9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15fcd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   15fd1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15fd5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15fd9:	48 89 d6             	mov    %rdx,%rsi
   15fdc:	48 89 c7             	mov    %rax,%rdi
   15fdf:	e8 5e 15 00 00       	call   17542 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   15fe4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15fe8:	48 89 c7             	mov    %rax,%rdi
   15feb:	e8 d4 15 00 00       	call   175c4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   15ff0:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   15ff4:	0f 92 c3             	setb   %bl
   15ff7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15ffb:	48 89 c7             	mov    %rax,%rdi
   15ffe:	e8 ab c3 ff ff       	call   123ae <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   16003:	84 db                	test   %bl,%bl
   16005:	74 0f                	je     16016 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   16007:	48 8d 05 ea 7d 00 00 	lea    0x7dea(%rip),%rax        # 1ddf8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   1600e:	48 89 c7             	mov    %rax,%rdi
   16011:	e8 aa e1 fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   16016:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1601a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1601e:	c9                   	leave
   1601f:	c3                   	ret

0000000000016020 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   16020:	55                   	push   %rbp
   16021:	48 89 e5             	mov    %rsp,%rbp
   16024:	48 83 ec 10          	sub    $0x10,%rsp
   16028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1602c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   16030:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16035:	74 15                	je     1604c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   16037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1603b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1603f:	48 89 d6             	mov    %rdx,%rsi
   16042:	48 89 c7             	mov    %rax,%rdi
   16045:	e8 bc 15 00 00       	call   17606 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   1604a:	eb 05                	jmp    16051 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   1604c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16051:	c9                   	leave
   16052:	c3                   	ret

0000000000016053 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   16053:	55                   	push   %rbp
   16054:	48 89 e5             	mov    %rsp,%rbp
   16057:	48 83 ec 20          	sub    $0x20,%rsp
   1605b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1605f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16063:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16067:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1606b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1606f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16077:	48 89 ce             	mov    %rcx,%rsi
   1607a:	48 89 c7             	mov    %rax,%rdi
   1607d:	e8 ae 15 00 00       	call   17630 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   16082:	c9                   	leave
   16083:	c3                   	ret

0000000000016084 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   16084:	55                   	push   %rbp
   16085:	48 89 e5             	mov    %rsp,%rbp
   16088:	48 83 ec 10          	sub    $0x10,%rsp
   1608c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16090:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   16094:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1609c:	48 89 d6             	mov    %rdx,%rsi
   1609f:	48 89 c7             	mov    %rax,%rdi
   160a2:	e8 be 15 00 00       	call   17665 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   160a7:	90                   	nop
   160a8:	c9                   	leave
   160a9:	c3                   	ret

00000000000160aa <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   160aa:	55                   	push   %rbp
   160ab:	48 89 e5             	mov    %rsp,%rbp
   160ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   160b2:	90                   	nop
   160b3:	5d                   	pop    %rbp
   160b4:	c3                   	ret
   160b5:	90                   	nop

00000000000160b6 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   160b6:	55                   	push   %rbp
   160b7:	48 89 e5             	mov    %rsp,%rbp
   160ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   160be:	90                   	nop
   160bf:	5d                   	pop    %rbp
   160c0:	c3                   	ret

00000000000160c1 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   160c1:	55                   	push   %rbp
   160c2:	48 89 e5             	mov    %rsp,%rbp
   160c5:	53                   	push   %rbx
   160c6:	48 83 ec 28          	sub    $0x28,%rsp
   160ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   160ce:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   160d2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   160d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   160da:	48 89 d6             	mov    %rdx,%rsi
   160dd:	48 89 c7             	mov    %rax,%rdi
   160e0:	e8 ff 00 00 00       	call   161e4 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   160e5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   160e9:	48 89 c7             	mov    %rax,%rdi
   160ec:	e8 83 15 00 00       	call   17674 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   160f1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   160f5:	0f 92 c3             	setb   %bl
   160f8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   160fc:	48 89 c7             	mov    %rax,%rdi
   160ff:	e8 88 df ff ff       	call   1408c <_ZNSaIP12VkPipeline_TED1Ev>
   16104:	84 db                	test   %bl,%bl
   16106:	74 0f                	je     16117 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   16108:	48 8d 05 e9 7c 00 00 	lea    0x7ce9(%rip),%rax        # 1ddf8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   1610f:	48 89 c7             	mov    %rax,%rdi
   16112:	e8 a9 e0 fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   16117:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1611b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1611f:	c9                   	leave
   16120:	c3                   	ret
   16121:	90                   	nop

0000000000016122 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   16122:	55                   	push   %rbp
   16123:	48 89 e5             	mov    %rsp,%rbp
   16126:	53                   	push   %rbx
   16127:	48 83 ec 28          	sub    $0x28,%rsp
   1612b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1612f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16133:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   16137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1613b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1613f:	48 89 d6             	mov    %rdx,%rsi
   16142:	48 89 c7             	mov    %rax,%rdi
   16145:	e8 6c 15 00 00       	call   176b6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   1614a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1614e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16152:	48 89 d6             	mov    %rdx,%rsi
   16155:	48 89 c7             	mov    %rax,%rdi
   16158:	e8 8b 15 00 00       	call   176e8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   1615d:	eb 1a                	jmp    16179 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   1615f:	48 89 c3             	mov    %rax,%rbx
   16162:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16166:	48 89 c7             	mov    %rax,%rdi
   16169:	e8 28 c3 ff ff       	call   12496 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1616e:	48 89 d8             	mov    %rbx,%rax
   16171:	48 89 c7             	mov    %rax,%rdi
   16174:	e8 87 e6 fe ff       	call   4800 <_Unwind_Resume@plt>
   16179:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1617d:	c9                   	leave
   1617e:	c3                   	ret
   1617f:	90                   	nop

0000000000016180 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   16180:	55                   	push   %rbp
   16181:	48 89 e5             	mov    %rsp,%rbp
   16184:	48 83 ec 10          	sub    $0x10,%rsp
   16188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1618c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   16190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16194:	48 89 c7             	mov    %rax,%rdi
   16197:	e8 18 e0 ff ff       	call   141b4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1619c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   1619f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161a3:	48 8b 00             	mov    (%rax),%rax
   161a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   161aa:	48 89 ce             	mov    %rcx,%rsi
   161ad:	48 89 c7             	mov    %rax,%rdi
   161b0:	e8 89 15 00 00       	call   1773e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   161b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   161b9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   161bd:	90                   	nop
   161be:	c9                   	leave
   161bf:	c3                   	ret

00000000000161c0 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   161c0:	55                   	push   %rbp
   161c1:	48 89 e5             	mov    %rsp,%rbp
   161c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   161cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161d0:	5d                   	pop    %rbp
   161d1:	c3                   	ret

00000000000161d2 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   161d2:	55                   	push   %rbp
   161d3:	48 89 e5             	mov    %rsp,%rbp
   161d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   161de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161e2:	5d                   	pop    %rbp
   161e3:	c3                   	ret

00000000000161e4 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   161e4:	55                   	push   %rbp
   161e5:	48 89 e5             	mov    %rsp,%rbp
   161e8:	48 83 ec 10          	sub    $0x10,%rsp
   161ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   161f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   161f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161fc:	48 89 d6             	mov    %rdx,%rsi
   161ff:	48 89 c7             	mov    %rax,%rdi
   16202:	e8 61 15 00 00       	call   17768 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   16207:	90                   	nop
   16208:	c9                   	leave
   16209:	c3                   	ret

000000000001620a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1620a:	55                   	push   %rbp
   1620b:	48 89 e5             	mov    %rsp,%rbp
   1620e:	48 83 ec 20          	sub    $0x20,%rsp
   16212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16216:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1621a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1621e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16223:	74 17                	je     1623c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   16225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16229:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1622d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16231:	48 89 ce             	mov    %rcx,%rsi
   16234:	48 89 c7             	mov    %rax,%rdi
   16237:	e8 3b 15 00 00       	call   17777 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   1623c:	90                   	nop
   1623d:	c9                   	leave
   1623e:	c3                   	ret

000000000001623f <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1623f:	55                   	push   %rbp
   16240:	48 89 e5             	mov    %rsp,%rbp
   16243:	48 83 ec 10          	sub    $0x10,%rsp
   16247:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1624b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1624f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16257:	48 89 d6             	mov    %rdx,%rsi
   1625a:	48 89 c7             	mov    %rax,%rdi
   1625d:	e8 43 15 00 00       	call   177a5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   16262:	90                   	nop
   16263:	c9                   	leave
   16264:	c3                   	ret
   16265:	90                   	nop

0000000000016266 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   16266:	55                   	push   %rbp
   16267:	48 89 e5             	mov    %rsp,%rbp
   1626a:	48 83 ec 10          	sub    $0x10,%rsp
   1626e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   16272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16276:	48 89 c7             	mov    %rax,%rdi
   16279:	e8 78 15 00 00       	call   177f6 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1627e:	48 89 c7             	mov    %rax,%rdi
   16281:	e8 2e 15 00 00       	call   177b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   16286:	c9                   	leave
   16287:	c3                   	ret

0000000000016288 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   16288:	55                   	push   %rbp
   16289:	48 89 e5             	mov    %rsp,%rbp
   1628c:	48 83 ec 20          	sub    $0x20,%rsp
   16290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16294:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16298:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1629c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   162a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162a4:	48 89 d6             	mov    %rdx,%rsi
   162a7:	48 89 c7             	mov    %rax,%rdi
   162aa:	e8 55 15 00 00       	call   17804 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   162af:	c9                   	leave
   162b0:	c3                   	ret
   162b1:	90                   	nop

00000000000162b2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   162b2:	55                   	push   %rbp
   162b3:	48 89 e5             	mov    %rsp,%rbp
   162b6:	53                   	push   %rbx
   162b7:	48 83 ec 38          	sub    $0x38,%rsp
   162bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   162bf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   162c3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   162c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162cb:	48 89 c7             	mov    %rax,%rdi
   162ce:	e8 93 ff ff ff       	call   16266 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   162d3:	48 89 c3             	mov    %rax,%rbx
   162d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162da:	48 89 c7             	mov    %rax,%rdi
   162dd:	e8 0a df ff ff       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   162e2:	48 29 c3             	sub    %rax,%rbx
   162e5:	48 89 da             	mov    %rbx,%rdx
   162e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   162ec:	48 39 c2             	cmp    %rax,%rdx
   162ef:	0f 92 c0             	setb   %al
   162f2:	84 c0                	test   %al,%al
   162f4:	74 0c                	je     16302 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   162f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   162fa:	48 89 c7             	mov    %rax,%rdi
   162fd:	e8 be de fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   16302:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16306:	48 89 c7             	mov    %rax,%rdi
   16309:	e8 de de ff ff       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1630e:	48 89 c3             	mov    %rax,%rbx
   16311:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16315:	48 89 c7             	mov    %rax,%rdi
   16318:	e8 cf de ff ff       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1631d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16321:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   16325:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16329:	48 89 d6             	mov    %rdx,%rsi
   1632c:	48 89 c7             	mov    %rax,%rdi
   1632f:	e8 3c 09 00 00       	call   16c70 <_ZSt3maxImERKT_S2_S2_>
   16334:	48 8b 00             	mov    (%rax),%rax
   16337:	48 01 d8             	add    %rbx,%rax
   1633a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1633e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16342:	48 89 c7             	mov    %rax,%rdi
   16345:	e8 a2 de ff ff       	call   141ec <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1634a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1634e:	72 12                	jb     16362 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   16350:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16354:	48 89 c7             	mov    %rax,%rdi
   16357:	e8 0a ff ff ff       	call   16266 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1635c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16360:	73 0e                	jae    16370 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   16362:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16366:	48 89 c7             	mov    %rax,%rdi
   16369:	e8 f8 fe ff ff       	call   16266 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1636e:	eb 04                	jmp    16374 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   16370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   16374:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16378:	c9                   	leave
   16379:	c3                   	ret

000000000001637a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1637a:	55                   	push   %rbp
   1637b:	48 89 e5             	mov    %rsp,%rbp
   1637e:	48 83 ec 10          	sub    $0x10,%rsp
   16382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1638a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1638f:	74 15                	je     163a6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   16391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16395:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16399:	48 89 d6             	mov    %rdx,%rsi
   1639c:	48 89 c7             	mov    %rax,%rdi
   1639f:	e8 89 14 00 00       	call   1782d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   163a4:	eb 05                	jmp    163ab <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   163a6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   163ab:	c9                   	leave
   163ac:	c3                   	ret

00000000000163ad <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   163ad:	55                   	push   %rbp
   163ae:	48 89 e5             	mov    %rsp,%rbp
   163b1:	48 83 ec 20          	sub    $0x20,%rsp
   163b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   163c1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   163c5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   163c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   163cd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   163d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163d5:	48 89 c7             	mov    %rax,%rdi
   163d8:	e8 7a 14 00 00       	call   17857 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   163dd:	c9                   	leave
   163de:	c3                   	ret
   163df:	90                   	nop

00000000000163e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   163e0:	55                   	push   %rbp
   163e1:	48 89 e5             	mov    %rsp,%rbp
   163e4:	48 83 ec 10          	sub    $0x10,%rsp
   163e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   163f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   163f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163f8:	48 89 d6             	mov    %rdx,%rsi
   163fb:	48 89 c7             	mov    %rax,%rdi
   163fe:	e8 b7 14 00 00       	call   178ba <_ZNSaIP13VkImageView_TEC1ERKS1_>
   16403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16407:	48 89 c7             	mov    %rax,%rdi
   1640a:	e8 37 eb ff ff       	call   14f46 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1640f:	90                   	nop
   16410:	c9                   	leave
   16411:	c3                   	ret

0000000000016412 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   16412:	55                   	push   %rbp
   16413:	48 89 e5             	mov    %rsp,%rbp
   16416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1641a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1641e:	48 8b 40 08          	mov    0x8(%rax),%rax
   16422:	5d                   	pop    %rbp
   16423:	c3                   	ret

0000000000016424 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   16424:	55                   	push   %rbp
   16425:	48 89 e5             	mov    %rsp,%rbp
   16428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1642c:	90                   	nop
   1642d:	5d                   	pop    %rbp
   1642e:	c3                   	ret

000000000001642f <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1642f:	55                   	push   %rbp
   16430:	48 89 e5             	mov    %rsp,%rbp
   16433:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16437:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1643b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1643f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   16443:	48 c1 f8 03          	sar    $0x3,%rax
    }
   16447:	5d                   	pop    %rbp
   16448:	c3                   	ret

0000000000016449 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   16449:	55                   	push   %rbp
   1644a:	48 89 e5             	mov    %rsp,%rbp
   1644d:	53                   	push   %rbx
   1644e:	48 83 ec 28          	sub    $0x28,%rsp
   16452:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16456:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1645a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1645e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16462:	48 89 d6             	mov    %rdx,%rsi
   16465:	48 89 c7             	mov    %rax,%rdi
   16468:	e8 4d 14 00 00       	call   178ba <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1646d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16471:	48 89 c7             	mov    %rax,%rdi
   16474:	e8 c2 0f 00 00       	call   1743b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   16479:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1647d:	0f 92 c3             	setb   %bl
   16480:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16484:	48 89 c7             	mov    %rax,%rdi
   16487:	e8 7c c2 ff ff       	call   12708 <_ZNSaIP13VkImageView_TED1Ev>
   1648c:	84 db                	test   %bl,%bl
   1648e:	74 0f                	je     1649f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   16490:	48 8d 05 61 79 00 00 	lea    0x7961(%rip),%rax        # 1ddf8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   16497:	48 89 c7             	mov    %rax,%rdi
   1649a:	e8 21 dd fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1649f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   164a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   164a7:	c9                   	leave
   164a8:	c3                   	ret

00000000000164a9 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   164a9:	55                   	push   %rbp
   164aa:	48 89 e5             	mov    %rsp,%rbp
   164ad:	48 83 ec 20          	sub    $0x20,%rsp
   164b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   164b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   164b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   164bd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   164c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   164c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   164c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164cd:	48 89 ce             	mov    %rcx,%rsi
   164d0:	48 89 c7             	mov    %rax,%rdi
   164d3:	e8 08 14 00 00       	call   178e0 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   164d8:	c9                   	leave
   164d9:	c3                   	ret

00000000000164da <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   164da:	55                   	push   %rbp
   164db:	48 89 e5             	mov    %rsp,%rbp
   164de:	48 83 ec 10          	sub    $0x10,%rsp
   164e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   164e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   164ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   164ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164f2:	48 89 d6             	mov    %rdx,%rsi
   164f5:	48 89 c7             	mov    %rax,%rdi
   164f8:	e8 18 14 00 00       	call   17915 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   164fd:	90                   	nop
   164fe:	c9                   	leave
   164ff:	c3                   	ret

0000000000016500 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   16500:	55                   	push   %rbp
   16501:	48 89 e5             	mov    %rsp,%rbp
   16504:	48 83 ec 10          	sub    $0x10,%rsp
   16508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1650c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   16510:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16514:	48 89 c7             	mov    %rax,%rdi
   16517:	e8 08 14 00 00       	call   17924 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1651c:	48 89 c2             	mov    %rax,%rdx
   1651f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16523:	48 89 d6             	mov    %rdx,%rsi
   16526:	48 89 c7             	mov    %rax,%rdi
   16529:	e8 5c ee fe ff       	call   538a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   1652e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16532:	c9                   	leave
   16533:	c3                   	ret

0000000000016534 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   16534:	55                   	push   %rbp
   16535:	48 89 e5             	mov    %rsp,%rbp
   16538:	48 83 ec 10          	sub    $0x10,%rsp
   1653c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16540:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   16544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16548:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1654c:	48 89 d6             	mov    %rdx,%rsi
   1654f:	48 89 c7             	mov    %rax,%rdi
   16552:	e8 db 13 00 00       	call   17932 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   16557:	90                   	nop
   16558:	c9                   	leave
   16559:	c3                   	ret

000000000001655a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   1655a:	55                   	push   %rbp
   1655b:	48 89 e5             	mov    %rsp,%rbp
   1655e:	48 83 ec 30          	sub    $0x30,%rsp
   16562:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16566:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   1656a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1656e:	48 89 c7             	mov    %rax,%rdi
   16571:	e8 0c f0 fe ff       	call   5582 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   16576:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1657a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1657e:	48 89 d6             	mov    %rdx,%rsi
   16581:	48 89 c7             	mov    %rax,%rdi
   16584:	e8 cf 13 00 00       	call   17958 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   16589:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1658d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16591:	48 89 d6             	mov    %rdx,%rsi
   16594:	48 89 c7             	mov    %rax,%rdi
   16597:	e8 bc 13 00 00       	call   17958 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   1659c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   165a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   165a4:	48 89 d6             	mov    %rdx,%rsi
   165a7:	48 89 c7             	mov    %rax,%rdi
   165aa:	e8 a9 13 00 00       	call   17958 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   165af:	90                   	nop
   165b0:	c9                   	leave
   165b1:	c3                   	ret

00000000000165b2 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   165b2:	55                   	push   %rbp
   165b3:	48 89 e5             	mov    %rsp,%rbp
   165b6:	48 83 ec 10          	sub    $0x10,%rsp
   165ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   165c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   165c6:	48 89 c7             	mov    %rax,%rdi
   165c9:	e8 c7 13 00 00       	call   17995 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   165ce:	90                   	nop
   165cf:	c9                   	leave
   165d0:	c3                   	ret
   165d1:	90                   	nop

00000000000165d2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   165d2:	55                   	push   %rbp
   165d3:	48 89 e5             	mov    %rsp,%rbp
   165d6:	48 83 ec 10          	sub    $0x10,%rsp
   165da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   165de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165e2:	48 89 c7             	mov    %rax,%rdi
   165e5:	e8 fc 13 00 00       	call   179e6 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   165ea:	48 89 c7             	mov    %rax,%rdi
   165ed:	e8 b1 13 00 00       	call   179a3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   165f2:	c9                   	leave
   165f3:	c3                   	ret

00000000000165f4 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   165f4:	55                   	push   %rbp
   165f5:	48 89 e5             	mov    %rsp,%rbp
   165f8:	48 83 ec 20          	sub    $0x20,%rsp
   165fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16600:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16604:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   16608:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1660c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16610:	48 89 d6             	mov    %rdx,%rsi
   16613:	48 89 c7             	mov    %rax,%rdi
   16616:	e8 d9 13 00 00       	call   179f4 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   1661b:	c9                   	leave
   1661c:	c3                   	ret
   1661d:	90                   	nop

000000000001661e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1661e:	55                   	push   %rbp
   1661f:	48 89 e5             	mov    %rsp,%rbp
   16622:	53                   	push   %rbx
   16623:	48 83 ec 38          	sub    $0x38,%rsp
   16627:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1662b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1662f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   16633:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16637:	48 89 c7             	mov    %rax,%rdi
   1663a:	e8 93 ff ff ff       	call   165d2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1663f:	48 89 c3             	mov    %rax,%rbx
   16642:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16646:	48 89 c7             	mov    %rax,%rdi
   16649:	e8 aa c6 ff ff       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1664e:	48 29 c3             	sub    %rax,%rbx
   16651:	48 89 da             	mov    %rbx,%rdx
   16654:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16658:	48 39 c2             	cmp    %rax,%rdx
   1665b:	0f 92 c0             	setb   %al
   1665e:	84 c0                	test   %al,%al
   16660:	74 0c                	je     1666e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   16662:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16666:	48 89 c7             	mov    %rax,%rdi
   16669:	e8 52 db fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1666e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16672:	48 89 c7             	mov    %rax,%rdi
   16675:	e8 7e c6 ff ff       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1667a:	48 89 c3             	mov    %rax,%rbx
   1667d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16681:	48 89 c7             	mov    %rax,%rdi
   16684:	e8 6f c6 ff ff       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   16689:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1668d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   16691:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16695:	48 89 d6             	mov    %rdx,%rsi
   16698:	48 89 c7             	mov    %rax,%rdi
   1669b:	e8 d0 05 00 00       	call   16c70 <_ZSt3maxImERKT_S2_S2_>
   166a0:	48 8b 00             	mov    (%rax),%rax
   166a3:	48 01 d8             	add    %rbx,%rax
   166a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   166aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166ae:	48 89 c7             	mov    %rax,%rdi
   166b1:	e8 42 c6 ff ff       	call   12cf8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   166b6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   166ba:	72 12                	jb     166ce <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   166bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166c0:	48 89 c7             	mov    %rax,%rdi
   166c3:	e8 0a ff ff ff       	call   165d2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   166c8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   166cc:	73 0e                	jae    166dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   166ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166d2:	48 89 c7             	mov    %rax,%rdi
   166d5:	e8 f8 fe ff ff       	call   165d2 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   166da:	eb 04                	jmp    166e0 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   166dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   166e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   166e4:	c9                   	leave
   166e5:	c3                   	ret

00000000000166e6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   166e6:	55                   	push   %rbp
   166e7:	48 89 e5             	mov    %rsp,%rbp
   166ea:	48 83 ec 10          	sub    $0x10,%rsp
   166ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   166f6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   166fb:	74 15                	je     16712 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   166fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16701:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16705:	48 89 d6             	mov    %rdx,%rsi
   16708:	48 89 c7             	mov    %rax,%rdi
   1670b:	e8 0d 13 00 00       	call   17a1d <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   16710:	eb 05                	jmp    16717 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   16712:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16717:	c9                   	leave
   16718:	c3                   	ret

0000000000016719 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   16719:	55                   	push   %rbp
   1671a:	48 89 e5             	mov    %rsp,%rbp
   1671d:	48 83 ec 20          	sub    $0x20,%rsp
   16721:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16725:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16729:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1672d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   16731:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16735:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16739:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1673d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16741:	48 89 c7             	mov    %rax,%rdi
   16744:	e8 fe 12 00 00       	call   17a47 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   16749:	c9                   	leave
   1674a:	c3                   	ret
   1674b:	90                   	nop

000000000001674c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1674c:	55                   	push   %rbp
   1674d:	48 89 e5             	mov    %rsp,%rbp
   16750:	48 83 ec 10          	sub    $0x10,%rsp
   16754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   16758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1675c:	48 89 c7             	mov    %rax,%rdi
   1675f:	e8 88 13 00 00       	call   17aec <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16764:	48 89 c7             	mov    %rax,%rdi
   16767:	e8 3e 13 00 00       	call   17aaa <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   1676c:	c9                   	leave
   1676d:	c3                   	ret

000000000001676e <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1676e:	55                   	push   %rbp
   1676f:	48 89 e5             	mov    %rsp,%rbp
   16772:	48 83 ec 20          	sub    $0x20,%rsp
   16776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1677a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1677e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   16782:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1678a:	48 89 d6             	mov    %rdx,%rsi
   1678d:	48 89 c7             	mov    %rax,%rdi
   16790:	e8 65 13 00 00       	call   17afa <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   16795:	c9                   	leave
   16796:	c3                   	ret
   16797:	90                   	nop

0000000000016798 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   16798:	55                   	push   %rbp
   16799:	48 89 e5             	mov    %rsp,%rbp
   1679c:	53                   	push   %rbx
   1679d:	48 83 ec 38          	sub    $0x38,%rsp
   167a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   167a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   167a9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   167ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167b1:	48 89 c7             	mov    %rax,%rdi
   167b4:	e8 93 ff ff ff       	call   1674c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   167b9:	48 89 c3             	mov    %rax,%rbx
   167bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167c0:	48 89 c7             	mov    %rax,%rdi
   167c3:	e8 d4 e1 ff ff       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   167c8:	48 29 c3             	sub    %rax,%rbx
   167cb:	48 89 da             	mov    %rbx,%rdx
   167ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   167d2:	48 39 c2             	cmp    %rax,%rdx
   167d5:	0f 92 c0             	setb   %al
   167d8:	84 c0                	test   %al,%al
   167da:	74 0c                	je     167e8 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   167dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   167e0:	48 89 c7             	mov    %rax,%rdi
   167e3:	e8 d8 d9 fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   167e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167ec:	48 89 c7             	mov    %rax,%rdi
   167ef:	e8 a8 e1 ff ff       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   167f4:	48 89 c3             	mov    %rax,%rbx
   167f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167fb:	48 89 c7             	mov    %rax,%rdi
   167fe:	e8 99 e1 ff ff       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   16803:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   16807:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1680b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1680f:	48 89 d6             	mov    %rdx,%rsi
   16812:	48 89 c7             	mov    %rax,%rdi
   16815:	e8 56 04 00 00       	call   16c70 <_ZSt3maxImERKT_S2_S2_>
   1681a:	48 8b 00             	mov    (%rax),%rax
   1681d:	48 01 d8             	add    %rbx,%rax
   16820:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   16824:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16828:	48 89 c7             	mov    %rax,%rdi
   1682b:	e8 6c e1 ff ff       	call   1499c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   16830:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   16834:	72 12                	jb     16848 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   16836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1683a:	48 89 c7             	mov    %rax,%rdi
   1683d:	e8 0a ff ff ff       	call   1674c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   16842:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   16846:	73 0e                	jae    16856 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   16848:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1684c:	48 89 c7             	mov    %rax,%rdi
   1684f:	e8 f8 fe ff ff       	call   1674c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   16854:	eb 04                	jmp    1685a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   16856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1685a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1685e:	c9                   	leave
   1685f:	c3                   	ret

0000000000016860 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   16860:	55                   	push   %rbp
   16861:	48 89 e5             	mov    %rsp,%rbp
   16864:	48 83 ec 10          	sub    $0x10,%rsp
   16868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1686c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   16870:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16875:	74 15                	je     1688c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   16877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1687b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1687f:	48 89 d6             	mov    %rdx,%rsi
   16882:	48 89 c7             	mov    %rax,%rdi
   16885:	e8 99 12 00 00       	call   17b23 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   1688a:	eb 05                	jmp    16891 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   1688c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16891:	c9                   	leave
   16892:	c3                   	ret

0000000000016893 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   16893:	55                   	push   %rbp
   16894:	48 89 e5             	mov    %rsp,%rbp
   16897:	48 83 ec 20          	sub    $0x20,%rsp
   1689b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1689f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   168a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   168a7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   168ab:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   168af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   168b3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   168b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168bb:	48 89 c7             	mov    %rax,%rdi
   168be:	e8 8a 12 00 00       	call   17b4d <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   168c3:	c9                   	leave
   168c4:	c3                   	ret
   168c5:	90                   	nop

00000000000168c6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   168c6:	55                   	push   %rbp
   168c7:	48 89 e5             	mov    %rsp,%rbp
   168ca:	48 83 ec 10          	sub    $0x10,%rsp
   168ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   168d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   168da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168de:	48 89 d6             	mov    %rdx,%rsi
   168e1:	48 89 c7             	mov    %rax,%rdi
   168e4:	e8 c7 12 00 00       	call   17bb0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   168e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168ed:	48 89 c7             	mov    %rax,%rdi
   168f0:	e8 79 e7 ff ff       	call   1506e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   168f5:	90                   	nop
   168f6:	c9                   	leave
   168f7:	c3                   	ret

00000000000168f8 <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   168f8:	55                   	push   %rbp
   168f9:	48 89 e5             	mov    %rsp,%rbp
   168fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16904:	48 8b 40 08          	mov    0x8(%rax),%rax
   16908:	5d                   	pop    %rbp
   16909:	c3                   	ret

000000000001690a <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1690a:	55                   	push   %rbp
   1690b:	48 89 e5             	mov    %rsp,%rbp
   1690e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16912:	90                   	nop
   16913:	5d                   	pop    %rbp
   16914:	c3                   	ret

0000000000016915 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   16915:	55                   	push   %rbp
   16916:	48 89 e5             	mov    %rsp,%rbp
   16919:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1691d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   16921:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16925:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   16929:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1692d:	5d                   	pop    %rbp
   1692e:	c3                   	ret

000000000001692f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1692f:	55                   	push   %rbp
   16930:	48 89 e5             	mov    %rsp,%rbp
   16933:	53                   	push   %rbx
   16934:	48 83 ec 28          	sub    $0x28,%rsp
   16938:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1693c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   16940:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16944:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16948:	48 89 d6             	mov    %rdx,%rsi
   1694b:	48 89 c7             	mov    %rax,%rdi
   1694e:	e8 5d 12 00 00       	call   17bb0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   16953:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16957:	48 89 c7             	mov    %rax,%rdi
   1695a:	e8 44 10 00 00       	call   179a3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   1695f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   16963:	0f 92 c3             	setb   %bl
   16966:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1696a:	48 89 c7             	mov    %rax,%rdi
   1696d:	e8 fa c1 ff ff       	call   12b6c <_ZNSaIP13VkSemaphore_TED1Ev>
   16972:	84 db                	test   %bl,%bl
   16974:	74 0f                	je     16985 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   16976:	48 8d 05 7b 74 00 00 	lea    0x747b(%rip),%rax        # 1ddf8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   1697d:	48 89 c7             	mov    %rax,%rdi
   16980:	e8 3b d8 fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   16985:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   16989:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1698d:	c9                   	leave
   1698e:	c3                   	ret

000000000001698f <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1698f:	55                   	push   %rbp
   16990:	48 89 e5             	mov    %rsp,%rbp
   16993:	48 83 ec 20          	sub    $0x20,%rsp
   16997:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1699b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1699f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   169a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   169a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   169ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   169af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169b3:	48 89 ce             	mov    %rcx,%rsi
   169b6:	48 89 c7             	mov    %rax,%rdi
   169b9:	e8 18 12 00 00       	call   17bd6 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   169be:	c9                   	leave
   169bf:	c3                   	ret

00000000000169c0 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   169c0:	55                   	push   %rbp
   169c1:	48 89 e5             	mov    %rsp,%rbp
   169c4:	48 83 ec 10          	sub    $0x10,%rsp
   169c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   169d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   169d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169d8:	48 89 d6             	mov    %rdx,%rsi
   169db:	48 89 c7             	mov    %rax,%rdi
   169de:	e8 28 12 00 00       	call   17c0b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   169e3:	90                   	nop
   169e4:	c9                   	leave
   169e5:	c3                   	ret

00000000000169e6 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   169e6:	55                   	push   %rbp
   169e7:	48 89 e5             	mov    %rsp,%rbp
   169ea:	48 83 ec 10          	sub    $0x10,%rsp
   169ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   169f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   169fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169fe:	48 89 d6             	mov    %rdx,%rsi
   16a01:	48 89 c7             	mov    %rax,%rdi
   16a04:	e8 11 12 00 00       	call   17c1a <_ZNSaIjEC1ERKS_>
   16a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a0d:	48 89 c7             	mov    %rax,%rdi
   16a10:	e8 4b c7 ff ff       	call   13160 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   16a15:	90                   	nop
   16a16:	c9                   	leave
   16a17:	c3                   	ret

0000000000016a18 <_ZNKSt16initializer_listIjE4sizeEv>:
   16a18:	55                   	push   %rbp
   16a19:	48 89 e5             	mov    %rsp,%rbp
   16a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a24:	48 8b 40 08          	mov    0x8(%rax),%rax
   16a28:	5d                   	pop    %rbp
   16a29:	c3                   	ret

0000000000016a2a <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   16a2a:	55                   	push   %rbp
   16a2b:	48 89 e5             	mov    %rsp,%rbp
   16a2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16a32:	90                   	nop
   16a33:	5d                   	pop    %rbp
   16a34:	c3                   	ret

0000000000016a35 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   16a35:	55                   	push   %rbp
   16a36:	48 89 e5             	mov    %rsp,%rbp
   16a39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   16a41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16a45:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   16a49:	48 c1 f8 02          	sar    $0x2,%rax
    }
   16a4d:	5d                   	pop    %rbp
   16a4e:	c3                   	ret

0000000000016a4f <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   16a4f:	55                   	push   %rbp
   16a50:	48 89 e5             	mov    %rsp,%rbp
   16a53:	53                   	push   %rbx
   16a54:	48 83 ec 28          	sub    $0x28,%rsp
   16a58:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16a5c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   16a60:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16a64:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16a68:	48 89 d6             	mov    %rdx,%rsi
   16a6b:	48 89 c7             	mov    %rax,%rdi
   16a6e:	e8 a7 11 00 00       	call   17c1a <_ZNSaIjEC1ERKS_>
   16a73:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16a77:	48 89 c7             	mov    %rax,%rdi
   16a7a:	e8 c1 11 00 00       	call   17c40 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   16a7f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   16a83:	0f 92 c3             	setb   %bl
   16a86:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   16a8a:	48 89 c7             	mov    %rax,%rdi
   16a8d:	e8 24 ae ff ff       	call   118b6 <_ZNSaIjED1Ev>
   16a92:	84 db                	test   %bl,%bl
   16a94:	74 0f                	je     16aa5 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   16a96:	48 8d 05 5b 73 00 00 	lea    0x735b(%rip),%rax        # 1ddf8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2f8>
   16a9d:	48 89 c7             	mov    %rax,%rdi
   16aa0:	e8 1b d7 fe ff       	call   41c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   16aa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   16aa9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16aad:	c9                   	leave
   16aae:	c3                   	ret
   16aaf:	90                   	nop

0000000000016ab0 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   16ab0:	55                   	push   %rbp
   16ab1:	48 89 e5             	mov    %rsp,%rbp
   16ab4:	48 83 ec 10          	sub    $0x10,%rsp
   16ab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16abc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   16ac0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16ac5:	74 15                	je     16adc <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   16ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16acb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16acf:	48 89 d6             	mov    %rdx,%rsi
   16ad2:	48 89 c7             	mov    %rax,%rdi
   16ad5:	e8 a8 11 00 00       	call   17c82 <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   16ada:	eb 05                	jmp    16ae1 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   16adc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16ae1:	c9                   	leave
   16ae2:	c3                   	ret

0000000000016ae3 <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   16ae3:	55                   	push   %rbp
   16ae4:	48 89 e5             	mov    %rsp,%rbp
   16ae7:	48 83 ec 20          	sub    $0x20,%rsp
   16aeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16aef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16af3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   16af7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   16afb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16aff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16b03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b07:	48 89 ce             	mov    %rcx,%rsi
   16b0a:	48 89 c7             	mov    %rax,%rdi
   16b0d:	e8 9a 11 00 00       	call   17cac <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   16b12:	c9                   	leave
   16b13:	c3                   	ret

0000000000016b14 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   16b14:	55                   	push   %rbp
   16b15:	48 89 e5             	mov    %rsp,%rbp
   16b18:	48 83 ec 20          	sub    $0x20,%rsp
   16b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16b24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   16b28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16b2c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b34:	48 89 ce             	mov    %rcx,%rsi
   16b37:	48 89 c7             	mov    %rax,%rdi
   16b3a:	e8 a3 11 00 00       	call   17ce2 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   16b3f:	90                   	nop
   16b40:	c9                   	leave
   16b41:	c3                   	ret

0000000000016b42 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   16b42:	55                   	push   %rbp
   16b43:	48 89 e5             	mov    %rsp,%rbp
   16b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b4a:	90                   	nop
   16b4b:	5d                   	pop    %rbp
   16b4c:	c3                   	ret

0000000000016b4d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   16b4d:	55                   	push   %rbp
   16b4e:	48 89 e5             	mov    %rsp,%rbp
   16b51:	48 83 ec 20          	sub    $0x20,%rsp
   16b55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16b5d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   16b61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16b65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16b69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b6d:	48 89 ce             	mov    %rcx,%rsi
   16b70:	48 89 c7             	mov    %rax,%rdi
   16b73:	e8 9c 11 00 00       	call   17d14 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   16b78:	90                   	nop
   16b79:	c9                   	leave
   16b7a:	c3                   	ret

0000000000016b7b <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   16b7b:	55                   	push   %rbp
   16b7c:	48 89 e5             	mov    %rsp,%rbp
   16b7f:	48 83 ec 10          	sub    $0x10,%rsp
   16b83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   16b8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b93:	48 89 d6             	mov    %rdx,%rsi
   16b96:	48 89 c7             	mov    %rax,%rdi
   16b99:	e8 a7 11 00 00       	call   17d45 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   16b9e:	90                   	nop
   16b9f:	c9                   	leave
   16ba0:	c3                   	ret

0000000000016ba1 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   16ba1:	55                   	push   %rbp
   16ba2:	48 89 e5             	mov    %rsp,%rbp
   16ba5:	48 83 ec 20          	sub    $0x20,%rsp
   16ba9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16bad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16bb1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   16bb5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16bb9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bc1:	48 89 ce             	mov    %rcx,%rsi
   16bc4:	48 89 c7             	mov    %rax,%rdi
   16bc7:	e8 88 11 00 00       	call   17d54 <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   16bcc:	90                   	nop
   16bcd:	c9                   	leave
   16bce:	c3                   	ret
   16bcf:	90                   	nop

0000000000016bd0 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
   16bd0:	55                   	push   %rbp
   16bd1:	48 89 e5             	mov    %rsp,%rbp
   16bd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16bd8:	90                   	nop
   16bd9:	5d                   	pop    %rbp
   16bda:	c3                   	ret

0000000000016bdb <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   16bdb:	55                   	push   %rbp
   16bdc:	48 89 e5             	mov    %rsp,%rbp
   16bdf:	48 83 ec 20          	sub    $0x20,%rsp
   16be3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16be7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16beb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   16bef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16bf3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bfb:	48 89 ce             	mov    %rcx,%rsi
   16bfe:	48 89 c7             	mov    %rax,%rdi
   16c01:	e8 80 11 00 00       	call   17d86 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   16c06:	90                   	nop
   16c07:	c9                   	leave
   16c08:	c3                   	ret

0000000000016c09 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   16c09:	55                   	push   %rbp
   16c0a:	48 89 e5             	mov    %rsp,%rbp
   16c0d:	48 83 ec 10          	sub    $0x10,%rsp
   16c11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   16c19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c21:	48 89 d6             	mov    %rdx,%rsi
   16c24:	48 89 c7             	mov    %rax,%rdi
   16c27:	e8 8b 11 00 00       	call   17db7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   16c2c:	90                   	nop
   16c2d:	c9                   	leave
   16c2e:	c3                   	ret
   16c2f:	90                   	nop

0000000000016c30 <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16c30:	55                   	push   %rbp
   16c31:	48 89 e5             	mov    %rsp,%rbp
   16c34:	48 83 ec 20          	sub    $0x20,%rsp
   16c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16c40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16c44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c48:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16c4f:	00 
   16c50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c54:	48 89 d6             	mov    %rdx,%rsi
   16c57:	48 89 c7             	mov    %rax,%rdi
   16c5a:	e8 b1 d7 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   16c5f:	c9                   	leave
   16c60:	c3                   	ret

0000000000016c61 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   16c61:	55                   	push   %rbp
   16c62:	48 89 e5             	mov    %rsp,%rbp
   16c65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16c6d:	90                   	nop
   16c6e:	5d                   	pop    %rbp
   16c6f:	c3                   	ret

0000000000016c70 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   16c70:	55                   	push   %rbp
   16c71:	48 89 e5             	mov    %rsp,%rbp
   16c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   16c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c80:	48 8b 10             	mov    (%rax),%rdx
   16c83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c87:	48 8b 00             	mov    (%rax),%rax
   16c8a:	48 39 c2             	cmp    %rax,%rdx
   16c8d:	73 06                	jae    16c95 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   16c8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c93:	eb 04                	jmp    16c99 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   16c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   16c99:	5d                   	pop    %rbp
   16c9a:	c3                   	ret

0000000000016c9b <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   16c9b:	55                   	push   %rbp
   16c9c:	48 89 e5             	mov    %rsp,%rbp
   16c9f:	48 83 ec 30          	sub    $0x30,%rsp
   16ca3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16ca7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16cab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   16caf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   16cb3:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   16cb7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16cbb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16cbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cc3:	48 89 ce             	mov    %rcx,%rsi
   16cc6:	48 89 c7             	mov    %rax,%rdi
   16cc9:	e8 f8 10 00 00       	call   17dc6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   16cce:	c9                   	leave
   16ccf:	c3                   	ret

0000000000016cd0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
   16cd0:	55                   	push   %rbp
   16cd1:	48 89 e5             	mov    %rsp,%rbp
   16cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16cd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16cdc:	90                   	nop
   16cdd:	5d                   	pop    %rbp
   16cde:	c3                   	ret
   16cdf:	90                   	nop

0000000000016ce0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   16ce0:	55                   	push   %rbp
   16ce1:	48 89 e5             	mov    %rsp,%rbp
   16ce4:	48 83 ec 10          	sub    $0x10,%rsp
   16ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   16cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cf0:	48 89 c7             	mov    %rax,%rdi
   16cf3:	e8 fc 10 00 00       	call   17df4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   16cf8:	48 89 c7             	mov    %rax,%rdi
   16cfb:	e8 a1 34 ff ff       	call   a1a1 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   16d00:	c9                   	leave
   16d01:	c3                   	ret

0000000000016d02 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   16d02:	55                   	push   %rbp
   16d03:	48 89 e5             	mov    %rsp,%rbp
   16d06:	41 54                	push   %r12
   16d08:	53                   	push   %rbx
   16d09:	48 83 ec 20          	sub    $0x20,%rsp
   16d0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16d11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16d15:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16d19:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   16d1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16d21:	48 89 c7             	mov    %rax,%rdi
   16d24:	e8 d9 10 00 00       	call   17e02 <_ZSt12__niter_baseIPPKcET_S3_>
   16d29:	49 89 c4             	mov    %rax,%r12
   16d2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d30:	48 89 c7             	mov    %rax,%rdi
   16d33:	e8 ca 10 00 00       	call   17e02 <_ZSt12__niter_baseIPPKcET_S3_>
   16d38:	48 89 c3             	mov    %rax,%rbx
   16d3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d3f:	48 89 c7             	mov    %rax,%rdi
   16d42:	e8 bb 10 00 00       	call   17e02 <_ZSt12__niter_baseIPPKcET_S3_>
   16d47:	48 89 c7             	mov    %rax,%rdi
   16d4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16d4e:	48 89 c1             	mov    %rax,%rcx
   16d51:	4c 89 e2             	mov    %r12,%rdx
   16d54:	48 89 de             	mov    %rbx,%rsi
   16d57:	e8 b4 10 00 00       	call   17e10 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   16d5c:	48 83 c4 20          	add    $0x20,%rsp
   16d60:	5b                   	pop    %rbx
   16d61:	41 5c                	pop    %r12
   16d63:	5d                   	pop    %rbp
   16d64:	c3                   	ret
   16d65:	90                   	nop

0000000000016d66 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   16d66:	55                   	push   %rbp
   16d67:	48 89 e5             	mov    %rsp,%rbp
   16d6a:	48 83 ec 10          	sub    $0x10,%rsp
   16d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   16d76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d7a:	48 89 c7             	mov    %rax,%rdi
   16d7d:	e8 72 c8 ff ff       	call   135f4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   16d82:	48 89 c1             	mov    %rax,%rcx
   16d85:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   16d89:	48 8b 01             	mov    (%rcx),%rax
   16d8c:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   16d90:	48 89 06             	mov    %rax,(%rsi)
   16d93:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   16d97:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   16d9b:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   16d9f:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   16da3:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   16da7:	90                   	nop
   16da8:	c9                   	leave
   16da9:	c3                   	ret

0000000000016daa <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16daa:	55                   	push   %rbp
   16dab:	48 89 e5             	mov    %rsp,%rbp
   16dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16db6:	5d                   	pop    %rbp
   16db7:	c3                   	ret

0000000000016db8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16db8:	55                   	push   %rbp
   16db9:	48 89 e5             	mov    %rsp,%rbp
   16dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   16dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dc4:	5d                   	pop    %rbp
   16dc5:	c3                   	ret

0000000000016dc6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16dc6:	55                   	push   %rbp
   16dc7:	48 89 e5             	mov    %rsp,%rbp
   16dca:	53                   	push   %rbx
   16dcb:	48 83 ec 18          	sub    $0x18,%rsp
   16dcf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16dd3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   16dd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ddb:	48 89 c6             	mov    %rax,%rsi
   16dde:	bf 1c 00 00 00       	mov    $0x1c,%edi
   16de3:	e8 a1 e2 fe ff       	call   5089 <_ZnwmPv>
   16de8:	48 89 c3             	mov    %rax,%rbx
   16deb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16def:	48 89 c7             	mov    %rax,%rdi
   16df2:	e8 c1 ff ff ff       	call   16db8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   16df7:	48 89 c1             	mov    %rax,%rcx
   16dfa:	48 8b 01             	mov    (%rcx),%rax
   16dfd:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   16e01:	48 89 03             	mov    %rax,(%rbx)
   16e04:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16e08:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   16e0c:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   16e10:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   16e14:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   16e18:	90                   	nop
   16e19:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16e1d:	c9                   	leave
   16e1e:	c3                   	ret
   16e1f:	90                   	nop

0000000000016e20 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   16e20:	55                   	push   %rbp
   16e21:	48 89 e5             	mov    %rsp,%rbp
   16e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   16e28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e2c:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   16e30:	90                   	nop
   16e31:	5d                   	pop    %rbp
   16e32:	c3                   	ret
   16e33:	90                   	nop

0000000000016e34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   16e34:	55                   	push   %rbp
   16e35:	48 89 e5             	mov    %rsp,%rbp
   16e38:	53                   	push   %rbx
   16e39:	48 83 ec 18          	sub    $0x18,%rsp
   16e3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16e41:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   16e45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e49:	48 89 c7             	mov    %rax,%rdi
   16e4c:	e8 07 e8 ff ff       	call   15658 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   16e51:	48 89 c3             	mov    %rax,%rbx
   16e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e58:	48 89 c7             	mov    %rax,%rdi
   16e5b:	e8 14 10 00 00       	call   17e74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   16e60:	48 89 de             	mov    %rbx,%rsi
   16e63:	48 89 c7             	mov    %rax,%rdi
   16e66:	e8 17 10 00 00       	call   17e82 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   16e6b:	90                   	nop
   16e6c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16e70:	c9                   	leave
   16e71:	c3                   	ret

0000000000016e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   16e72:	55                   	push   %rbp
   16e73:	48 89 e5             	mov    %rsp,%rbp
   16e76:	48 83 ec 10          	sub    $0x10,%rsp
   16e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   16e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e86:	48 89 c7             	mov    %rax,%rdi
   16e89:	e8 e6 0f 00 00       	call   17e74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   16e8e:	48 89 c1             	mov    %rax,%rcx
   16e91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16e95:	ba 01 00 00 00       	mov    $0x1,%edx
   16e9a:	48 89 c6             	mov    %rax,%rsi
   16e9d:	48 89 cf             	mov    %rcx,%rdi
   16ea0:	e8 03 10 00 00       	call   17ea8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   16ea5:	90                   	nop
   16ea6:	c9                   	leave
   16ea7:	c3                   	ret

0000000000016ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   16ea8:	55                   	push   %rbp
   16ea9:	48 89 e5             	mov    %rsp,%rbp
   16eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   16eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eb4:	48 83 c0 08          	add    $0x8,%rax
   16eb8:	5d                   	pop    %rbp
   16eb9:	c3                   	ret

0000000000016eba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   16eba:	55                   	push   %rbp
   16ebb:	48 89 e5             	mov    %rsp,%rbp
   16ebe:	53                   	push   %rbx
   16ebf:	48 83 ec 38          	sub    $0x38,%rsp
   16ec3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16ec7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16ecb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16ecf:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   16ed3:	eb 56                	jmp    16f2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   16ed5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   16ed9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16edd:	48 89 c7             	mov    %rax,%rdi
   16ee0:	e8 e7 03 00 00       	call   172cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   16ee5:	48 89 c1             	mov    %rax,%rcx
   16ee8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16eec:	48 89 c2             	mov    %rax,%rdx
   16eef:	48 89 ce             	mov    %rcx,%rsi
   16ef2:	48 89 df             	mov    %rbx,%rdi
   16ef5:	e8 aa c9 ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   16efa:	83 f0 01             	xor    $0x1,%eax
   16efd:	84 c0                	test   %al,%al
   16eff:	74 1a                	je     16f1b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   16f01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f05:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   16f09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f0d:	48 89 c7             	mov    %rax,%rdi
   16f10:	e8 62 e6 ff ff       	call   15577 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   16f15:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16f19:	eb 10                	jmp    16f2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   16f1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16f1f:	48 89 c7             	mov    %rax,%rdi
   16f22:	e8 3e e6 ff ff       	call   15565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   16f27:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   16f2b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   16f30:	75 a3                	jne    16ed5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   16f32:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16f36:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   16f3a:	48 89 d6             	mov    %rdx,%rsi
   16f3d:	48 89 c7             	mov    %rax,%rdi
   16f40:	e8 39 ed ff ff       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   16f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   16f49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16f4d:	c9                   	leave
   16f4e:	c3                   	ret
   16f4f:	90                   	nop

0000000000016f50 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   16f50:	55                   	push   %rbp
   16f51:	48 89 e5             	mov    %rsp,%rbp
   16f54:	48 83 ec 10          	sub    $0x10,%rsp
   16f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   16f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f60:	48 89 c7             	mov    %rax,%rdi
   16f63:	e8 6e 0f 00 00       	call   17ed6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   16f68:	c9                   	leave
   16f69:	c3                   	ret

0000000000016f6a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   16f6a:	55                   	push   %rbp
   16f6b:	48 89 e5             	mov    %rsp,%rbp
   16f6e:	53                   	push   %rbx
   16f6f:	48 83 ec 18          	sub    $0x18,%rsp
   16f73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16f77:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   16f7b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   16f7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16f83:	48 89 c7             	mov    %rax,%rdi
   16f86:	e8 13 e7 ff ff       	call   1569e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   16f8b:	48 89 c6             	mov    %rax,%rsi
   16f8e:	48 89 df             	mov    %rbx,%rdi
   16f91:	e8 4e 0f 00 00       	call   17ee4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   16f96:	90                   	nop
   16f97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16f9b:	c9                   	leave
   16f9c:	c3                   	ret
   16f9d:	90                   	nop

0000000000016f9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   16f9e:	55                   	push   %rbp
   16f9f:	48 89 e5             	mov    %rsp,%rbp
   16fa2:	41 54                	push   %r12
   16fa4:	53                   	push   %rbx
   16fa5:	48 83 ec 30          	sub    $0x30,%rsp
   16fa9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16fad:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16fb1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16fb5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   16fb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16fbd:	48 89 c7             	mov    %rax,%rdi
   16fc0:	e8 45 0f 00 00       	call   17f0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   16fc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   16fc9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16fcd:	48 89 c7             	mov    %rax,%rdi
   16fd0:	e8 26 e7 ff ff       	call   156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   16fd5:	49 89 c4             	mov    %rax,%r12
   16fd8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16fdc:	48 89 c7             	mov    %rax,%rdi
   16fdf:	e8 09 e7 ff ff       	call   156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   16fe4:	48 89 c3             	mov    %rax,%rbx
   16fe7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16feb:	48 89 c7             	mov    %rax,%rdi
   16fee:	e8 ec e6 ff ff       	call   156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   16ff3:	48 89 c2             	mov    %rax,%rdx
   16ff6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   16ffa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ffe:	4d 89 e0             	mov    %r12,%r8
   17001:	48 89 d9             	mov    %rbx,%rcx
   17004:	48 89 c7             	mov    %rax,%rdi
   17007:	e8 26 0f 00 00       	call   17f32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   1700c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   17010:	48 83 c4 30          	add    $0x30,%rsp
   17014:	5b                   	pop    %rbx
   17015:	41 5c                	pop    %r12
   17017:	5d                   	pop    %rbp
   17018:	c3                   	ret
   17019:	90                   	nop

000000000001701a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1701a:	55                   	push   %rbp
   1701b:	48 89 e5             	mov    %rsp,%rbp
   1701e:	48 83 ec 20          	sub    $0x20,%rsp
   17022:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   17026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1702a:	48 8b 10             	mov    (%rax),%rdx
   1702d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17031:	48 89 d6             	mov    %rdx,%rsi
   17034:	48 89 c7             	mov    %rax,%rdi
   17037:	e8 42 ec ff ff       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1703c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17040:	c9                   	leave
   17041:	c3                   	ret

0000000000017042 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   17042:	55                   	push   %rbp
   17043:	48 89 e5             	mov    %rsp,%rbp
   17046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1704a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1704e:	48 8b 40 28          	mov    0x28(%rax),%rax
   17052:	5d                   	pop    %rbp
   17053:	c3                   	ret

0000000000017054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   17054:	55                   	push   %rbp
   17055:	48 89 e5             	mov    %rsp,%rbp
   17058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1705c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17060:	48 83 c0 20          	add    $0x20,%rax
   17064:	5d                   	pop    %rbp
   17065:	c3                   	ret

0000000000017066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   17066:	55                   	push   %rbp
   17067:	48 89 e5             	mov    %rsp,%rbp
   1706a:	48 83 ec 10          	sub    $0x10,%rsp
   1706e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   17072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17076:	48 89 c7             	mov    %rax,%rdi
   17079:	e8 4e 02 00 00       	call   172cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1707e:	c9                   	leave
   1707f:	c3                   	ret

0000000000017080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   17080:	55                   	push   %rbp
   17081:	48 89 e5             	mov    %rsp,%rbp
   17084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17088:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1708c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   17090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17094:	48 8b 10             	mov    (%rax),%rdx
   17097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1709b:	48 89 10             	mov    %rdx,(%rax)
   1709e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170a2:	48 8b 10             	mov    (%rax),%rdx
   170a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   170ad:	90                   	nop
   170ae:	5d                   	pop    %rbp
   170af:	c3                   	ret

00000000000170b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   170b0:	55                   	push   %rbp
   170b1:	48 89 e5             	mov    %rsp,%rbp
   170b4:	53                   	push   %rbx
   170b5:	48 83 ec 78          	sub    $0x78,%rsp
   170b9:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   170bd:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   170c1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   170c5:	48 89 c7             	mov    %rax,%rdi
   170c8:	e8 f5 c6 ff ff       	call   137c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   170cd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   170d1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   170d5:	48 89 c7             	mov    %rax,%rdi
   170d8:	e8 cb fd ff ff       	call   16ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   170dd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   170e1:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   170e5:	eb 51                	jmp    17138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   170e7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   170eb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   170ef:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   170f3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   170f7:	48 89 c7             	mov    %rax,%rdi
   170fa:	e8 cd 01 00 00       	call   172cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   170ff:	48 89 c2             	mov    %rax,%rdx
   17102:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   17106:	48 89 c6             	mov    %rax,%rsi
   17109:	48 89 df             	mov    %rbx,%rdi
   1710c:	e8 93 c7 ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17111:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   17114:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   17118:	74 0e                	je     17128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   1711a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1711e:	48 89 c7             	mov    %rax,%rdi
   17121:	e8 51 e4 ff ff       	call   15577 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   17126:	eb 0c                	jmp    17134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   17128:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1712c:	48 89 c7             	mov    %rax,%rdi
   1712f:	e8 31 e4 ff ff       	call   15565 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   17134:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   17138:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1713c:	48 85 c0             	test   %rax,%rax
   1713f:	75 a6                	jne    170e7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   17141:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   17145:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17149:	48 89 d6             	mov    %rdx,%rsi
   1714c:	48 89 c7             	mov    %rax,%rdi
   1714f:	e8 2a eb ff ff       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   17154:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   17158:	74 54                	je     171ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   1715a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1715e:	48 89 c7             	mov    %rax,%rdi
   17161:	e8 9e 0e 00 00       	call   18004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   17166:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1716a:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1716e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   17172:	48 89 d6             	mov    %rdx,%rsi
   17175:	48 89 c7             	mov    %rax,%rdi
   17178:	e8 cb c6 ff ff       	call   13848 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   1717d:	84 c0                	test   %al,%al
   1717f:	74 21                	je     171a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   17181:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   17185:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   17189:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1718d:	48 89 ce             	mov    %rcx,%rsi
   17190:	48 89 c7             	mov    %rax,%rdi
   17193:	e8 96 0e 00 00       	call   1802e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   17198:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1719c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   171a0:	eb 7d                	jmp    1721f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   171a2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   171a6:	48 89 c7             	mov    %rax,%rdi
   171a9:	e8 ce 00 00 00       	call   1727c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   171ae:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   171b2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   171b6:	48 89 c7             	mov    %rax,%rdi
   171b9:	e8 a8 fe ff ff       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   171be:	48 89 c1             	mov    %rax,%rcx
   171c1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   171c5:	48 89 c2             	mov    %rax,%rdx
   171c8:	48 89 ce             	mov    %rcx,%rsi
   171cb:	48 89 df             	mov    %rbx,%rdi
   171ce:	e8 d1 c6 ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   171d3:	84 c0                	test   %al,%al
   171d5:	74 21                	je     171f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   171d7:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   171db:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   171df:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   171e3:	48 89 ce             	mov    %rcx,%rsi
   171e6:	48 89 c7             	mov    %rax,%rdi
   171e9:	e8 40 0e 00 00       	call   1802e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   171ee:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   171f2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   171f6:	eb 27                	jmp    1721f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   171f8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   171ff:	00 
   17200:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   17204:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   17208:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1720c:	48 89 ce             	mov    %rcx,%rsi
   1720f:	48 89 c7             	mov    %rax,%rdi
   17212:	e8 69 fe ff ff       	call   17080 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   17217:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1721b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1721f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17223:	c9                   	leave
   17224:	c3                   	ret
   17225:	90                   	nop

0000000000017226 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   17226:	55                   	push   %rbp
   17227:	48 89 e5             	mov    %rsp,%rbp
   1722a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1722e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17232:	48 83 c0 18          	add    $0x18,%rax
   17236:	5d                   	pop    %rbp
   17237:	c3                   	ret

0000000000017238 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   17238:	55                   	push   %rbp
   17239:	48 89 e5             	mov    %rsp,%rbp
   1723c:	48 83 ec 20          	sub    $0x20,%rsp
   17240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17244:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17248:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1724c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17250:	48 89 c7             	mov    %rax,%rdi
   17253:	e8 1a 0e 00 00       	call   18072 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   17258:	48 8b 10             	mov    (%rax),%rdx
   1725b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1725f:	48 89 10             	mov    %rdx,(%rax)
   17262:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17266:	48 89 c7             	mov    %rax,%rdi
   17269:	e8 04 0e 00 00       	call   18072 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1726e:	48 8b 10             	mov    (%rax),%rdx
   17271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17275:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17279:	90                   	nop
   1727a:	c9                   	leave
   1727b:	c3                   	ret

000000000001727c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   1727c:	55                   	push   %rbp
   1727d:	48 89 e5             	mov    %rsp,%rbp
   17280:	48 83 ec 10          	sub    $0x10,%rsp
   17284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   17288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1728c:	48 8b 00             	mov    (%rax),%rax
   1728f:	48 89 c7             	mov    %rax,%rdi
   17292:	e8 b9 d1 fe ff       	call   4450 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   17297:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1729b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1729e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   172a2:	c9                   	leave
   172a3:	c3                   	ret

00000000000172a4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   172a4:	55                   	push   %rbp
   172a5:	48 89 e5             	mov    %rsp,%rbp
   172a8:	48 83 ec 10          	sub    $0x10,%rsp
   172ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   172b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172b4:	48 8b 00             	mov    (%rax),%rax
   172b7:	48 89 c7             	mov    %rax,%rdi
   172ba:	e8 b1 cf fe ff       	call   4270 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   172bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   172c3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   172c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   172ca:	c9                   	leave
   172cb:	c3                   	ret

00000000000172cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   172cc:	55                   	push   %rbp
   172cd:	48 89 e5             	mov    %rsp,%rbp
   172d0:	48 83 ec 20          	sub    $0x20,%rsp
   172d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   172d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   172dc:	48 89 c7             	mov    %rax,%rdi
   172df:	e8 9c 0d 00 00       	call   18080 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   172e4:	48 89 c2             	mov    %rax,%rdx
   172e7:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   172eb:	48 89 d6             	mov    %rdx,%rsi
   172ee:	48 89 c7             	mov    %rax,%rdi
   172f1:	e8 a8 0d 00 00       	call   1809e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   172f6:	c9                   	leave
   172f7:	c3                   	ret

00000000000172f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   172f8:	55                   	push   %rbp
   172f9:	48 89 e5             	mov    %rsp,%rbp
   172fc:	41 54                	push   %r12
   172fe:	53                   	push   %rbx
   172ff:	48 83 ec 30          	sub    $0x30,%rsp
   17303:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17307:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1730b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1730f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   17313:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   17318:	75 43                	jne    1735d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   1731a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1731e:	48 89 c7             	mov    %rax,%rdi
   17321:	e8 82 fb ff ff       	call   16ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   17326:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1732a:	74 31                	je     1735d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1732c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   17330:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17334:	48 89 c7             	mov    %rax,%rdi
   17337:	e8 2a fd ff ff       	call   17066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1733c:	49 89 c4             	mov    %rax,%r12
   1733f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17343:	48 89 c7             	mov    %rax,%rdi
   17346:	e8 81 ff ff ff       	call   172cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1734b:	4c 89 e2             	mov    %r12,%rdx
   1734e:	48 89 c6             	mov    %rax,%rsi
   17351:	48 89 df             	mov    %rbx,%rdi
   17354:	e8 4b c5 ff ff       	call   138a4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   17359:	84 c0                	test   %al,%al
   1735b:	74 07                	je     17364 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1735d:	b8 01 00 00 00       	mov    $0x1,%eax
   17362:	eb 05                	jmp    17369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   17364:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   17369:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1736c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17370:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   17374:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   17378:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1737c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   17380:	89 c7                	mov    %eax,%edi
   17382:	e8 d9 cc fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   17387:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1738b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1738f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17393:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17397:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   1739b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1739f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   173a3:	48 89 d6             	mov    %rdx,%rsi
   173a6:	48 89 c7             	mov    %rax,%rdi
   173a9:	e8 d0 e8 ff ff       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   173ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   173b2:	48 83 c4 30          	add    $0x30,%rsp
   173b6:	5b                   	pop    %rbx
   173b7:	41 5c                	pop    %r12
   173b9:	5d                   	pop    %rbp
   173ba:	c3                   	ret
   173bb:	90                   	nop

00000000000173bc <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   173bc:	55                   	push   %rbp
   173bd:	48 89 e5             	mov    %rsp,%rbp
   173c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   173c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173c8:	5d                   	pop    %rbp
   173c9:	c3                   	ret

00000000000173ca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   173ca:	55                   	push   %rbp
   173cb:	48 89 e5             	mov    %rsp,%rbp
   173ce:	48 83 ec 10          	sub    $0x10,%rsp
   173d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   173da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   173e2:	48 89 d6             	mov    %rdx,%rsi
   173e5:	48 89 c7             	mov    %rax,%rdi
   173e8:	e8 49 36 ff ff       	call   aa36 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   173ed:	90                   	nop
   173ee:	c9                   	leave
   173ef:	c3                   	ret

00000000000173f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   173f0:	55                   	push   %rbp
   173f1:	48 89 e5             	mov    %rsp,%rbp
   173f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   173fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17400:	48 8b 10             	mov    (%rax),%rdx
   17403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17407:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1740a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1740e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   17412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17416:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1741a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1741e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17426:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1742a:	90                   	nop
   1742b:	5d                   	pop    %rbp
   1742c:	c3                   	ret

000000000001742d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1742d:	55                   	push   %rbp
   1742e:	48 89 e5             	mov    %rsp,%rbp
   17431:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   17435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17439:	5d                   	pop    %rbp
   1743a:	c3                   	ret

000000000001743b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1743b:	55                   	push   %rbp
   1743c:	48 89 e5             	mov    %rsp,%rbp
   1743f:	48 83 ec 20          	sub    $0x20,%rsp
   17443:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   17447:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1744e:	ff ff 0f 
   17451:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   17455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17459:	48 89 c7             	mov    %rax,%rdi
   1745c:	e8 4f 0c 00 00       	call   180b0 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   17461:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   17465:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   17469:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1746d:	48 89 d6             	mov    %rdx,%rsi
   17470:	48 89 c7             	mov    %rax,%rdi
   17473:	e8 df e0 fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   17478:	48 8b 00             	mov    (%rax),%rax
      }
   1747b:	c9                   	leave
   1747c:	c3                   	ret
   1747d:	90                   	nop

000000000001747e <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1747e:	55                   	push   %rbp
   1747f:	48 89 e5             	mov    %rsp,%rbp
   17482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1748a:	5d                   	pop    %rbp
   1748b:	c3                   	ret

000000000001748c <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1748c:	55                   	push   %rbp
   1748d:	48 89 e5             	mov    %rsp,%rbp
   17490:	48 83 ec 20          	sub    $0x20,%rsp
   17494:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17498:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1749c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   174a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   174a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174a8:	48 89 d6             	mov    %rdx,%rsi
   174ab:	48 89 c7             	mov    %rax,%rdi
   174ae:	e8 17 0c 00 00       	call   180ca <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   174b3:	c9                   	leave
   174b4:	c3                   	ret

00000000000174b5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   174b5:	55                   	push   %rbp
   174b6:	48 89 e5             	mov    %rsp,%rbp
   174b9:	48 83 ec 10          	sub    $0x10,%rsp
   174bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   174c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   174c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174cd:	ba 00 00 00 00       	mov    $0x0,%edx
   174d2:	48 89 ce             	mov    %rcx,%rsi
   174d5:	48 89 c7             	mov    %rax,%rdi
   174d8:	e8 4b 0c 00 00       	call   18128 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   174dd:	c9                   	leave
   174de:	c3                   	ret

00000000000174df <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   174df:	55                   	push   %rbp
   174e0:	48 89 e5             	mov    %rsp,%rbp
   174e3:	41 54                	push   %r12
   174e5:	53                   	push   %rbx
   174e6:	48 83 ec 20          	sub    $0x20,%rsp
   174ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   174ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   174f2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   174f6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   174fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   174fe:	48 89 c7             	mov    %rax,%rdi
   17501:	e8 83 0c 00 00       	call   18189 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   17506:	49 89 c4             	mov    %rax,%r12
   17509:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1750d:	48 89 c7             	mov    %rax,%rdi
   17510:	e8 74 0c 00 00       	call   18189 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   17515:	48 89 c3             	mov    %rax,%rbx
   17518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1751c:	48 89 c7             	mov    %rax,%rdi
   1751f:	e8 65 0c 00 00       	call   18189 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   17524:	48 89 c7             	mov    %rax,%rdi
   17527:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1752b:	48 89 c1             	mov    %rax,%rcx
   1752e:	4c 89 e2             	mov    %r12,%rdx
   17531:	48 89 de             	mov    %rbx,%rsi
   17534:	e8 5e 0c 00 00       	call   18197 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   17539:	48 83 c4 20          	add    $0x20,%rsp
   1753d:	5b                   	pop    %rbx
   1753e:	41 5c                	pop    %r12
   17540:	5d                   	pop    %rbp
   17541:	c3                   	ret

0000000000017542 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   17542:	55                   	push   %rbp
   17543:	48 89 e5             	mov    %rsp,%rbp
   17546:	48 83 ec 10          	sub    $0x10,%rsp
   1754a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1754e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   17552:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1755a:	48 89 d6             	mov    %rdx,%rsi
   1755d:	48 89 c7             	mov    %rax,%rdi
   17560:	e8 95 0c 00 00       	call   181fa <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   17565:	90                   	nop
   17566:	c9                   	leave
   17567:	c3                   	ret

0000000000017568 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   17568:	55                   	push   %rbp
   17569:	48 89 e5             	mov    %rsp,%rbp
   1756c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   17570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17574:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1757b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1757f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17586:	00 
   17587:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1758b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17592:	00 
	{ }
   17593:	90                   	nop
   17594:	5d                   	pop    %rbp
   17595:	c3                   	ret

0000000000017596 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17596:	55                   	push   %rbp
   17597:	48 89 e5             	mov    %rsp,%rbp
   1759a:	48 83 ec 20          	sub    $0x20,%rsp
   1759e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   175a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   175a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   175aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   175ae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   175b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175b6:	48 89 ce             	mov    %rcx,%rsi
   175b9:	48 89 c7             	mov    %rax,%rdi
   175bc:	e8 49 0c 00 00       	call   1820a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   175c1:	90                   	nop
   175c2:	c9                   	leave
   175c3:	c3                   	ret

00000000000175c4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   175c4:	55                   	push   %rbp
   175c5:	48 89 e5             	mov    %rsp,%rbp
   175c8:	48 83 ec 20          	sub    $0x20,%rsp
   175cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   175d0:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   175d7:	8e e3 00 
   175da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   175de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   175e2:	48 89 c7             	mov    %rax,%rdi
   175e5:	e8 5a 0c 00 00       	call   18244 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   175ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   175ee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   175f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   175f6:	48 89 d6             	mov    %rdx,%rsi
   175f9:	48 89 c7             	mov    %rax,%rdi
   175fc:	e8 56 df fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   17601:	48 8b 00             	mov    (%rax),%rax
      }
   17604:	c9                   	leave
   17605:	c3                   	ret

0000000000017606 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   17606:	55                   	push   %rbp
   17607:	48 89 e5             	mov    %rsp,%rbp
   1760a:	48 83 ec 10          	sub    $0x10,%rsp
   1760e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17616:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1761a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1761e:	ba 00 00 00 00       	mov    $0x0,%edx
   17623:	48 89 ce             	mov    %rcx,%rsi
   17626:	48 89 c7             	mov    %rax,%rdi
   17629:	e8 30 0c 00 00       	call   1825e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   1762e:	c9                   	leave
   1762f:	c3                   	ret

0000000000017630 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   17630:	55                   	push   %rbp
   17631:	48 89 e5             	mov    %rsp,%rbp
   17634:	48 83 ec 30          	sub    $0x30,%rsp
   17638:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1763c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17640:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   17644:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   17648:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1764c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17650:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17654:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17658:	48 89 ce             	mov    %rcx,%rsi
   1765b:	48 89 c7             	mov    %rax,%rdi
   1765e:	e8 66 0c 00 00       	call   182c9 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   17663:	c9                   	leave
   17664:	c3                   	ret

0000000000017665 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   17665:	55                   	push   %rbp
   17666:	48 89 e5             	mov    %rsp,%rbp
   17669:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1766d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17671:	90                   	nop
   17672:	5d                   	pop    %rbp
   17673:	c3                   	ret

0000000000017674 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   17674:	55                   	push   %rbp
   17675:	48 89 e5             	mov    %rsp,%rbp
   17678:	48 83 ec 20          	sub    $0x20,%rsp
   1767c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   17680:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17687:	ff ff 0f 
   1768a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1768e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17692:	48 89 c7             	mov    %rax,%rdi
   17695:	e8 5c 0c 00 00       	call   182f6 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   1769a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1769e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   176a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   176a6:	48 89 d6             	mov    %rdx,%rsi
   176a9:	48 89 c7             	mov    %rax,%rdi
   176ac:	e8 a6 de fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   176b1:	48 8b 00             	mov    (%rax),%rax
      }
   176b4:	c9                   	leave
   176b5:	c3                   	ret

00000000000176b6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   176b6:	55                   	push   %rbp
   176b7:	48 89 e5             	mov    %rsp,%rbp
   176ba:	48 83 ec 10          	sub    $0x10,%rsp
   176be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   176c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176ce:	48 89 d6             	mov    %rdx,%rsi
   176d1:	48 89 c7             	mov    %rax,%rdi
   176d4:	e8 0b eb ff ff       	call   161e4 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   176d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176dd:	48 89 c7             	mov    %rax,%rdi
   176e0:	e8 2b 0c 00 00       	call   18310 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   176e5:	90                   	nop
   176e6:	c9                   	leave
   176e7:	c3                   	ret

00000000000176e8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   176e8:	55                   	push   %rbp
   176e9:	48 89 e5             	mov    %rsp,%rbp
   176ec:	48 83 ec 10          	sub    $0x10,%rsp
   176f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   176f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17700:	48 89 d6             	mov    %rdx,%rsi
   17703:	48 89 c7             	mov    %rax,%rdi
   17706:	e8 33 0c 00 00       	call   1833e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   1770b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1770f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   17712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17716:	48 8b 10             	mov    (%rax),%rdx
   17719:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1771d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   17721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17725:	48 8b 00             	mov    (%rax),%rax
   17728:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1772c:	48 c1 e2 03          	shl    $0x3,%rdx
   17730:	48 01 c2             	add    %rax,%rdx
   17733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17737:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1773b:	90                   	nop
   1773c:	c9                   	leave
   1773d:	c3                   	ret

000000000001773e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1773e:	55                   	push   %rbp
   1773f:	48 89 e5             	mov    %rsp,%rbp
   17742:	48 83 ec 20          	sub    $0x20,%rsp
   17746:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1774a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1774e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   17752:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1775a:	48 89 d6             	mov    %rdx,%rsi
   1775d:	48 89 c7             	mov    %rax,%rdi
   17760:	e8 0c 0c 00 00       	call   18371 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   17765:	c9                   	leave
   17766:	c3                   	ret
   17767:	90                   	nop

0000000000017768 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   17768:	55                   	push   %rbp
   17769:	48 89 e5             	mov    %rsp,%rbp
   1776c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17770:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17774:	90                   	nop
   17775:	5d                   	pop    %rbp
   17776:	c3                   	ret

0000000000017777 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17777:	55                   	push   %rbp
   17778:	48 89 e5             	mov    %rsp,%rbp
   1777b:	48 83 ec 20          	sub    $0x20,%rsp
   1777f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17783:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17787:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1778b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1778f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17797:	48 89 ce             	mov    %rcx,%rsi
   1779a:	48 89 c7             	mov    %rax,%rdi
   1779d:	e8 f8 0b 00 00       	call   1839a <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   177a2:	90                   	nop
   177a3:	c9                   	leave
   177a4:	c3                   	ret

00000000000177a5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   177a5:	55                   	push   %rbp
   177a6:	48 89 e5             	mov    %rsp,%rbp
   177a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   177b1:	90                   	nop
   177b2:	5d                   	pop    %rbp
   177b3:	c3                   	ret

00000000000177b4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   177b4:	55                   	push   %rbp
   177b5:	48 89 e5             	mov    %rsp,%rbp
   177b8:	48 83 ec 20          	sub    $0x20,%rsp
   177bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   177c0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   177c7:	ff ff 0f 
   177ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   177ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177d2:	48 89 c7             	mov    %rax,%rdi
   177d5:	e8 f1 0b 00 00       	call   183cb <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   177da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   177de:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   177e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   177e6:	48 89 d6             	mov    %rdx,%rsi
   177e9:	48 89 c7             	mov    %rax,%rdi
   177ec:	e8 66 dd fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   177f1:	48 8b 00             	mov    (%rax),%rax
      }
   177f4:	c9                   	leave
   177f5:	c3                   	ret

00000000000177f6 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   177f6:	55                   	push   %rbp
   177f7:	48 89 e5             	mov    %rsp,%rbp
   177fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   177fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17802:	5d                   	pop    %rbp
   17803:	c3                   	ret

0000000000017804 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   17804:	55                   	push   %rbp
   17805:	48 89 e5             	mov    %rsp,%rbp
   17808:	48 83 ec 20          	sub    $0x20,%rsp
   1780c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17810:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   17814:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   17818:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1781c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17820:	48 89 d6             	mov    %rdx,%rsi
   17823:	48 89 c7             	mov    %rax,%rdi
   17826:	e8 ba 0b 00 00       	call   183e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   1782b:	c9                   	leave
   1782c:	c3                   	ret

000000000001782d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1782d:	55                   	push   %rbp
   1782e:	48 89 e5             	mov    %rsp,%rbp
   17831:	48 83 ec 10          	sub    $0x10,%rsp
   17835:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17839:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1783d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17845:	ba 00 00 00 00       	mov    $0x0,%edx
   1784a:	48 89 ce             	mov    %rcx,%rsi
   1784d:	48 89 c7             	mov    %rax,%rdi
   17850:	e8 ed 0b 00 00       	call   18442 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   17855:	c9                   	leave
   17856:	c3                   	ret

0000000000017857 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   17857:	55                   	push   %rbp
   17858:	48 89 e5             	mov    %rsp,%rbp
   1785b:	41 54                	push   %r12
   1785d:	53                   	push   %rbx
   1785e:	48 83 ec 20          	sub    $0x20,%rsp
   17862:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17866:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1786a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1786e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   17872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17876:	48 89 c7             	mov    %rax,%rdi
   17879:	e8 25 0c 00 00       	call   184a3 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1787e:	49 89 c4             	mov    %rax,%r12
   17881:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17885:	48 89 c7             	mov    %rax,%rdi
   17888:	e8 16 0c 00 00       	call   184a3 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1788d:	48 89 c3             	mov    %rax,%rbx
   17890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17894:	48 89 c7             	mov    %rax,%rdi
   17897:	e8 07 0c 00 00       	call   184a3 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1789c:	48 89 c7             	mov    %rax,%rdi
   1789f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   178a3:	48 89 c1             	mov    %rax,%rcx
   178a6:	4c 89 e2             	mov    %r12,%rdx
   178a9:	48 89 de             	mov    %rbx,%rsi
   178ac:	e8 00 0c 00 00       	call   184b1 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   178b1:	48 83 c4 20          	add    $0x20,%rsp
   178b5:	5b                   	pop    %rbx
   178b6:	41 5c                	pop    %r12
   178b8:	5d                   	pop    %rbp
   178b9:	c3                   	ret

00000000000178ba <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   178ba:	55                   	push   %rbp
   178bb:	48 89 e5             	mov    %rsp,%rbp
   178be:	48 83 ec 10          	sub    $0x10,%rsp
   178c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   178c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   178ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   178ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178d2:	48 89 d6             	mov    %rdx,%rsi
   178d5:	48 89 c7             	mov    %rax,%rdi
   178d8:	e8 37 0c 00 00       	call   18514 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   178dd:	90                   	nop
   178de:	c9                   	leave
   178df:	c3                   	ret

00000000000178e0 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   178e0:	55                   	push   %rbp
   178e1:	48 89 e5             	mov    %rsp,%rbp
   178e4:	48 83 ec 30          	sub    $0x30,%rsp
   178e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   178ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   178f0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   178f4:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   178f8:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   178fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17900:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17908:	48 89 ce             	mov    %rcx,%rsi
   1790b:	48 89 c7             	mov    %rax,%rdi
   1790e:	e8 10 0c 00 00       	call   18523 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   17913:	c9                   	leave
   17914:	c3                   	ret

0000000000017915 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   17915:	55                   	push   %rbp
   17916:	48 89 e5             	mov    %rsp,%rbp
   17919:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1791d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17921:	90                   	nop
   17922:	5d                   	pop    %rbp
   17923:	c3                   	ret

0000000000017924 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   17924:	55                   	push   %rbp
   17925:	48 89 e5             	mov    %rsp,%rbp
   17928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1792c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17930:	5d                   	pop    %rbp
   17931:	c3                   	ret

0000000000017932 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   17932:	55                   	push   %rbp
   17933:	48 89 e5             	mov    %rsp,%rbp
   17936:	48 83 ec 10          	sub    $0x10,%rsp
   1793a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1793e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   17942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17946:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1794a:	48 89 d6             	mov    %rdx,%rsi
   1794d:	48 89 c7             	mov    %rax,%rdi
   17950:	e8 d3 da fe ff       	call   5428 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
   17955:	90                   	nop
   17956:	c9                   	leave
   17957:	c3                   	ret

0000000000017958 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   17958:	55                   	push   %rbp
   17959:	48 89 e5             	mov    %rsp,%rbp
   1795c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17960:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   17964:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17968:	48 8b 10             	mov    (%rax),%rdx
   1796b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1796f:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   17972:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17976:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1797a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1797e:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   17982:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17986:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1798a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1798e:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   17992:	90                   	nop
   17993:	5d                   	pop    %rbp
   17994:	c3                   	ret

0000000000017995 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   17995:	55                   	push   %rbp
   17996:	48 89 e5             	mov    %rsp,%rbp
   17999:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1799d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179a1:	5d                   	pop    %rbp
   179a2:	c3                   	ret

00000000000179a3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   179a3:	55                   	push   %rbp
   179a4:	48 89 e5             	mov    %rsp,%rbp
   179a7:	48 83 ec 20          	sub    $0x20,%rsp
   179ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   179af:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   179b6:	ff ff 0f 
   179b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   179bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   179c1:	48 89 c7             	mov    %rax,%rdi
   179c4:	e8 87 0b 00 00       	call   18550 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   179c9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   179cd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   179d1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   179d5:	48 89 d6             	mov    %rdx,%rsi
   179d8:	48 89 c7             	mov    %rax,%rdi
   179db:	e8 77 db fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   179e0:	48 8b 00             	mov    (%rax),%rax
      }
   179e3:	c9                   	leave
   179e4:	c3                   	ret
   179e5:	90                   	nop

00000000000179e6 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   179e6:	55                   	push   %rbp
   179e7:	48 89 e5             	mov    %rsp,%rbp
   179ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   179ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179f2:	5d                   	pop    %rbp
   179f3:	c3                   	ret

00000000000179f4 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   179f4:	55                   	push   %rbp
   179f5:	48 89 e5             	mov    %rsp,%rbp
   179f8:	48 83 ec 20          	sub    $0x20,%rsp
   179fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17a00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   17a04:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   17a08:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17a10:	48 89 d6             	mov    %rdx,%rsi
   17a13:	48 89 c7             	mov    %rax,%rdi
   17a16:	e8 4f 0b 00 00       	call   1856a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   17a1b:	c9                   	leave
   17a1c:	c3                   	ret

0000000000017a1d <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   17a1d:	55                   	push   %rbp
   17a1e:	48 89 e5             	mov    %rsp,%rbp
   17a21:	48 83 ec 10          	sub    $0x10,%rsp
   17a25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a29:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17a2d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17a31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a35:	ba 00 00 00 00       	mov    $0x0,%edx
   17a3a:	48 89 ce             	mov    %rcx,%rsi
   17a3d:	48 89 c7             	mov    %rax,%rdi
   17a40:	e8 83 0b 00 00       	call   185c8 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   17a45:	c9                   	leave
   17a46:	c3                   	ret

0000000000017a47 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   17a47:	55                   	push   %rbp
   17a48:	48 89 e5             	mov    %rsp,%rbp
   17a4b:	41 54                	push   %r12
   17a4d:	53                   	push   %rbx
   17a4e:	48 83 ec 20          	sub    $0x20,%rsp
   17a52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17a56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17a5a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17a5e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   17a62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a66:	48 89 c7             	mov    %rax,%rdi
   17a69:	e8 bb 0b 00 00       	call   18629 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   17a6e:	49 89 c4             	mov    %rax,%r12
   17a71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17a75:	48 89 c7             	mov    %rax,%rdi
   17a78:	e8 ac 0b 00 00       	call   18629 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   17a7d:	48 89 c3             	mov    %rax,%rbx
   17a80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17a84:	48 89 c7             	mov    %rax,%rdi
   17a87:	e8 9d 0b 00 00       	call   18629 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   17a8c:	48 89 c7             	mov    %rax,%rdi
   17a8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17a93:	48 89 c1             	mov    %rax,%rcx
   17a96:	4c 89 e2             	mov    %r12,%rdx
   17a99:	48 89 de             	mov    %rbx,%rsi
   17a9c:	e8 96 0b 00 00       	call   18637 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   17aa1:	48 83 c4 20          	add    $0x20,%rsp
   17aa5:	5b                   	pop    %rbx
   17aa6:	41 5c                	pop    %r12
   17aa8:	5d                   	pop    %rbp
   17aa9:	c3                   	ret

0000000000017aaa <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   17aaa:	55                   	push   %rbp
   17aab:	48 89 e5             	mov    %rsp,%rbp
   17aae:	48 83 ec 20          	sub    $0x20,%rsp
   17ab2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   17ab6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17abd:	ff ff 0f 
   17ac0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   17ac4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ac8:	48 89 c7             	mov    %rax,%rdi
   17acb:	e8 ca 0b 00 00       	call   1869a <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   17ad0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   17ad4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   17ad8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17adc:	48 89 d6             	mov    %rdx,%rsi
   17adf:	48 89 c7             	mov    %rax,%rdi
   17ae2:	e8 70 da fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   17ae7:	48 8b 00             	mov    (%rax),%rax
      }
   17aea:	c9                   	leave
   17aeb:	c3                   	ret

0000000000017aec <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   17aec:	55                   	push   %rbp
   17aed:	48 89 e5             	mov    %rsp,%rbp
   17af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17af8:	5d                   	pop    %rbp
   17af9:	c3                   	ret

0000000000017afa <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   17afa:	55                   	push   %rbp
   17afb:	48 89 e5             	mov    %rsp,%rbp
   17afe:	48 83 ec 20          	sub    $0x20,%rsp
   17b02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17b06:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   17b0a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   17b0e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b16:	48 89 d6             	mov    %rdx,%rsi
   17b19:	48 89 c7             	mov    %rax,%rdi
   17b1c:	e8 93 0b 00 00       	call   186b4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   17b21:	c9                   	leave
   17b22:	c3                   	ret

0000000000017b23 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   17b23:	55                   	push   %rbp
   17b24:	48 89 e5             	mov    %rsp,%rbp
   17b27:	48 83 ec 10          	sub    $0x10,%rsp
   17b2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17b2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17b33:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b3b:	ba 00 00 00 00       	mov    $0x0,%edx
   17b40:	48 89 ce             	mov    %rcx,%rsi
   17b43:	48 89 c7             	mov    %rax,%rdi
   17b46:	e8 c7 0b 00 00       	call   18712 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   17b4b:	c9                   	leave
   17b4c:	c3                   	ret

0000000000017b4d <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   17b4d:	55                   	push   %rbp
   17b4e:	48 89 e5             	mov    %rsp,%rbp
   17b51:	41 54                	push   %r12
   17b53:	53                   	push   %rbx
   17b54:	48 83 ec 20          	sub    $0x20,%rsp
   17b58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17b5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17b60:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17b64:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   17b68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17b6c:	48 89 c7             	mov    %rax,%rdi
   17b6f:	e8 ff 0b 00 00       	call   18773 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   17b74:	49 89 c4             	mov    %rax,%r12
   17b77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17b7b:	48 89 c7             	mov    %rax,%rdi
   17b7e:	e8 f0 0b 00 00       	call   18773 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   17b83:	48 89 c3             	mov    %rax,%rbx
   17b86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b8a:	48 89 c7             	mov    %rax,%rdi
   17b8d:	e8 e1 0b 00 00       	call   18773 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   17b92:	48 89 c7             	mov    %rax,%rdi
   17b95:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17b99:	48 89 c1             	mov    %rax,%rcx
   17b9c:	4c 89 e2             	mov    %r12,%rdx
   17b9f:	48 89 de             	mov    %rbx,%rsi
   17ba2:	e8 da 0b 00 00       	call   18781 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   17ba7:	48 83 c4 20          	add    $0x20,%rsp
   17bab:	5b                   	pop    %rbx
   17bac:	41 5c                	pop    %r12
   17bae:	5d                   	pop    %rbp
   17baf:	c3                   	ret

0000000000017bb0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   17bb0:	55                   	push   %rbp
   17bb1:	48 89 e5             	mov    %rsp,%rbp
   17bb4:	48 83 ec 10          	sub    $0x10,%rsp
   17bb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   17bc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bc8:	48 89 d6             	mov    %rdx,%rsi
   17bcb:	48 89 c7             	mov    %rax,%rdi
   17bce:	e8 11 0c 00 00       	call   187e4 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   17bd3:	90                   	nop
   17bd4:	c9                   	leave
   17bd5:	c3                   	ret

0000000000017bd6 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   17bd6:	55                   	push   %rbp
   17bd7:	48 89 e5             	mov    %rsp,%rbp
   17bda:	48 83 ec 30          	sub    $0x30,%rsp
   17bde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17be2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17be6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   17bea:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   17bee:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   17bf2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17bf6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17bfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bfe:	48 89 ce             	mov    %rcx,%rsi
   17c01:	48 89 c7             	mov    %rax,%rdi
   17c04:	e8 ea 0b 00 00       	call   187f3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   17c09:	c9                   	leave
   17c0a:	c3                   	ret

0000000000017c0b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   17c0b:	55                   	push   %rbp
   17c0c:	48 89 e5             	mov    %rsp,%rbp
   17c0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c17:	90                   	nop
   17c18:	5d                   	pop    %rbp
   17c19:	c3                   	ret

0000000000017c1a <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   17c1a:	55                   	push   %rbp
   17c1b:	48 89 e5             	mov    %rsp,%rbp
   17c1e:	48 83 ec 10          	sub    $0x10,%rsp
   17c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   17c2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c32:	48 89 d6             	mov    %rdx,%rsi
   17c35:	48 89 c7             	mov    %rax,%rdi
   17c38:	e8 e3 0b 00 00       	call   18820 <_ZNSt15__new_allocatorIjEC1ERKS0_>
   17c3d:	90                   	nop
   17c3e:	c9                   	leave
   17c3f:	c3                   	ret

0000000000017c40 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   17c40:	55                   	push   %rbp
   17c41:	48 89 e5             	mov    %rsp,%rbp
   17c44:	48 83 ec 20          	sub    $0x20,%rsp
   17c48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   17c4c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   17c53:	ff ff 1f 
   17c56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   17c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c5e:	48 89 c7             	mov    %rax,%rdi
   17c61:	e8 c9 0b 00 00       	call   1882f <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   17c66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   17c6a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   17c6e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17c72:	48 89 d6             	mov    %rdx,%rsi
   17c75:	48 89 c7             	mov    %rax,%rdi
   17c78:	e8 da d8 fe ff       	call   5557 <_ZSt3minImERKT_S2_S2_>
   17c7d:	48 8b 00             	mov    (%rax),%rax
      }
   17c80:	c9                   	leave
   17c81:	c3                   	ret

0000000000017c82 <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   17c82:	55                   	push   %rbp
   17c83:	48 89 e5             	mov    %rsp,%rbp
   17c86:	48 83 ec 10          	sub    $0x10,%rsp
   17c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17c92:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c9a:	ba 00 00 00 00       	mov    $0x0,%edx
   17c9f:	48 89 ce             	mov    %rcx,%rsi
   17ca2:	48 89 c7             	mov    %rax,%rdi
   17ca5:	e8 a0 0b 00 00       	call   1884a <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   17caa:	c9                   	leave
   17cab:	c3                   	ret

0000000000017cac <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   17cac:	55                   	push   %rbp
   17cad:	48 89 e5             	mov    %rsp,%rbp
   17cb0:	48 83 ec 30          	sub    $0x30,%rsp
   17cb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17cb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17cbc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   17cc0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   17cc4:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   17cc8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17ccc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17cd4:	48 89 ce             	mov    %rcx,%rsi
   17cd7:	48 89 c7             	mov    %rax,%rdi
   17cda:	e8 cc 0b 00 00       	call   188ab <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   17cdf:	c9                   	leave
   17ce0:	c3                   	ret
   17ce1:	90                   	nop

0000000000017ce2 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17ce2:	55                   	push   %rbp
   17ce3:	48 89 e5             	mov    %rsp,%rbp
   17ce6:	48 83 ec 20          	sub    $0x20,%rsp
   17cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17cf2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   17cf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17cfa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17d01:	00 
   17d02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d06:	48 89 d6             	mov    %rdx,%rsi
   17d09:	48 89 c7             	mov    %rax,%rdi
   17d0c:	e8 ff c6 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   17d11:	c9                   	leave
   17d12:	c3                   	ret
   17d13:	90                   	nop

0000000000017d14 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17d14:	55                   	push   %rbp
   17d15:	48 89 e5             	mov    %rsp,%rbp
   17d18:	48 83 ec 20          	sub    $0x20,%rsp
   17d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   17d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d2c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17d33:	00 
   17d34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d38:	48 89 d6             	mov    %rdx,%rsi
   17d3b:	48 89 c7             	mov    %rax,%rdi
   17d3e:	e8 cd c6 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   17d43:	c9                   	leave
   17d44:	c3                   	ret

0000000000017d45 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   17d45:	55                   	push   %rbp
   17d46:	48 89 e5             	mov    %rsp,%rbp
   17d49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d51:	90                   	nop
   17d52:	5d                   	pop    %rbp
   17d53:	c3                   	ret

0000000000017d54 <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17d54:	55                   	push   %rbp
   17d55:	48 89 e5             	mov    %rsp,%rbp
   17d58:	48 83 ec 20          	sub    $0x20,%rsp
   17d5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   17d68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d6c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17d73:	00 
   17d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d78:	48 89 d6             	mov    %rdx,%rsi
   17d7b:	48 89 c7             	mov    %rax,%rdi
   17d7e:	e8 8d c6 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   17d83:	c9                   	leave
   17d84:	c3                   	ret
   17d85:	90                   	nop

0000000000017d86 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17d86:	55                   	push   %rbp
   17d87:	48 89 e5             	mov    %rsp,%rbp
   17d8a:	48 83 ec 20          	sub    $0x20,%rsp
   17d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   17d9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d9e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17da5:	00 
   17da6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17daa:	48 89 d6             	mov    %rdx,%rsi
   17dad:	48 89 c7             	mov    %rax,%rdi
   17db0:	e8 5b c6 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   17db5:	c9                   	leave
   17db6:	c3                   	ret

0000000000017db7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   17db7:	55                   	push   %rbp
   17db8:	48 89 e5             	mov    %rsp,%rbp
   17dbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17dc3:	90                   	nop
   17dc4:	5d                   	pop    %rbp
   17dc5:	c3                   	ret

0000000000017dc6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   17dc6:	55                   	push   %rbp
   17dc7:	48 89 e5             	mov    %rsp,%rbp
   17dca:	48 83 ec 20          	sub    $0x20,%rsp
   17dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17dd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   17dda:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17dde:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17de6:	48 89 ce             	mov    %rcx,%rsi
   17de9:	48 89 c7             	mov    %rax,%rdi
   17dec:	e8 e7 0a 00 00       	call   188d8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   17df1:	c9                   	leave
   17df2:	c3                   	ret
   17df3:	90                   	nop

0000000000017df4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   17df4:	55                   	push   %rbp
   17df5:	48 89 e5             	mov    %rsp,%rbp
   17df8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17dfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e00:	5d                   	pop    %rbp
   17e01:	c3                   	ret

0000000000017e02 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   17e02:	55                   	push   %rbp
   17e03:	48 89 e5             	mov    %rsp,%rbp
   17e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e0e:	5d                   	pop    %rbp
   17e0f:	c3                   	ret

0000000000017e10 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   17e10:	55                   	push   %rbp
   17e11:	48 89 e5             	mov    %rsp,%rbp
   17e14:	48 83 ec 30          	sub    $0x30,%rsp
   17e18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17e1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17e20:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17e24:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   17e28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17e2c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   17e30:	48 c1 f8 03          	sar    $0x3,%rax
   17e34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   17e38:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   17e3d:	7e 1f                	jle    17e5e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   17e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e43:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17e4a:	00 
   17e4b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   17e4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e53:	48 89 ce             	mov    %rcx,%rsi
   17e56:	48 89 c7             	mov    %rax,%rdi
   17e59:	e8 12 c9 fe ff       	call   4770 <memmove@plt>
      return __result + __count;
   17e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e62:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17e69:	00 
   17e6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e6e:	48 01 d0             	add    %rdx,%rax
    }
   17e71:	c9                   	leave
   17e72:	c3                   	ret
   17e73:	90                   	nop

0000000000017e74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   17e74:	55                   	push   %rbp
   17e75:	48 89 e5             	mov    %rsp,%rbp
   17e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e80:	5d                   	pop    %rbp
   17e81:	c3                   	ret

0000000000017e82 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   17e82:	55                   	push   %rbp
   17e83:	48 89 e5             	mov    %rsp,%rbp
   17e86:	48 83 ec 10          	sub    $0x10,%rsp
   17e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   17e92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e9a:	48 89 d6             	mov    %rdx,%rsi
   17e9d:	48 89 c7             	mov    %rax,%rdi
   17ea0:	e8 9b 0a 00 00       	call   18940 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   17ea5:	90                   	nop
   17ea6:	c9                   	leave
   17ea7:	c3                   	ret

0000000000017ea8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   17ea8:	55                   	push   %rbp
   17ea9:	48 89 e5             	mov    %rsp,%rbp
   17eac:	48 83 ec 20          	sub    $0x20,%rsp
   17eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17eb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17eb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   17ebc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ec0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ec8:	48 89 ce             	mov    %rcx,%rsi
   17ecb:	48 89 c7             	mov    %rax,%rdi
   17ece:	e8 8d 0a 00 00       	call   18960 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   17ed3:	90                   	nop
   17ed4:	c9                   	leave
   17ed5:	c3                   	ret

0000000000017ed6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   17ed6:	55                   	push   %rbp
   17ed7:	48 89 e5             	mov    %rsp,%rbp
   17eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   17ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ee2:	5d                   	pop    %rbp
   17ee3:	c3                   	ret

0000000000017ee4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   17ee4:	55                   	push   %rbp
   17ee5:	48 89 e5             	mov    %rsp,%rbp
   17ee8:	48 83 ec 10          	sub    $0x10,%rsp
   17eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ef0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   17ef4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ef8:	48 89 c7             	mov    %rax,%rdi
   17efb:	e8 9e d7 ff ff       	call   1569e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   17f00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17f04:	48 89 02             	mov    %rax,(%rdx)
   17f07:	90                   	nop
   17f08:	c9                   	leave
   17f09:	c3                   	ret

0000000000017f0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   17f0a:	55                   	push   %rbp
   17f0b:	48 89 e5             	mov    %rsp,%rbp
   17f0e:	48 83 ec 10          	sub    $0x10,%rsp
   17f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   17f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f1a:	48 89 c7             	mov    %rax,%rdi
   17f1d:	e8 52 ff ff ff       	call   17e74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   17f22:	be 01 00 00 00       	mov    $0x1,%esi
   17f27:	48 89 c7             	mov    %rax,%rdi
   17f2a:	e8 6b 0a 00 00       	call   1899a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   17f2f:	c9                   	leave
   17f30:	c3                   	ret
   17f31:	90                   	nop

0000000000017f32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   17f32:	55                   	push   %rbp
   17f33:	48 89 e5             	mov    %rsp,%rbp
   17f36:	41 56                	push   %r14
   17f38:	41 55                	push   %r13
   17f3a:	41 54                	push   %r12
   17f3c:	53                   	push   %rbx
   17f3d:	48 83 ec 30          	sub    $0x30,%rsp
   17f41:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17f45:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17f49:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17f4d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   17f51:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   17f55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17f59:	48 89 c6             	mov    %rax,%rsi
   17f5c:	bf 48 00 00 00       	mov    $0x48,%edi
   17f61:	e8 23 d1 fe ff       	call   5089 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   17f66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   17f6a:	48 89 c7             	mov    %rax,%rdi
   17f6d:	e8 89 d7 ff ff       	call   156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   17f72:	49 89 c6             	mov    %rax,%r14
   17f75:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17f79:	48 89 c7             	mov    %rax,%rdi
   17f7c:	e8 6c d7 ff ff       	call   156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   17f81:	49 89 c5             	mov    %rax,%r13
   17f84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17f88:	48 89 c7             	mov    %rax,%rdi
   17f8b:	e8 4f d7 ff ff       	call   156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   17f90:	49 89 c4             	mov    %rax,%r12
   17f93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17f97:	48 89 c7             	mov    %rax,%rdi
   17f9a:	e8 b9 d6 ff ff       	call   15658 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   17f9f:	48 89 c3             	mov    %rax,%rbx
   17fa2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17fa6:	48 89 c7             	mov    %rax,%rdi
   17fa9:	e8 c6 fe ff ff       	call   17e74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   17fae:	4d 89 f0             	mov    %r14,%r8
   17fb1:	4c 89 e9             	mov    %r13,%rcx
   17fb4:	4c 89 e2             	mov    %r12,%rdx
   17fb7:	48 89 de             	mov    %rbx,%rsi
   17fba:	48 89 c7             	mov    %rax,%rdi
   17fbd:	e8 02 0a 00 00       	call   189c4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   17fc2:	eb 33                	jmp    17ff7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   17fc4:	48 89 c7             	mov    %rax,%rdi
   17fc7:	e8 74 c1 fe ff       	call   4140 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   17fcc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17fd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17fd4:	48 89 d6             	mov    %rdx,%rsi
   17fd7:	48 89 c7             	mov    %rax,%rdi
   17fda:	e8 93 ee ff ff       	call   16e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   17fdf:	e8 bc c6 fe ff       	call   46a0 <__cxa_rethrow@plt>
	  __catch(...)
   17fe4:	48 89 c3             	mov    %rax,%rbx
   17fe7:	e8 94 c7 fe ff       	call   4780 <__cxa_end_catch@plt>
   17fec:	48 89 d8             	mov    %rbx,%rax
   17fef:	48 89 c7             	mov    %rax,%rdi
   17ff2:	e8 09 c8 fe ff       	call   4800 <_Unwind_Resume@plt>
	}
   17ff7:	48 83 c4 30          	add    $0x30,%rsp
   17ffb:	5b                   	pop    %rbx
   17ffc:	41 5c                	pop    %r12
   17ffe:	41 5d                	pop    %r13
   18000:	41 5e                	pop    %r14
   18002:	5d                   	pop    %rbp
   18003:	c3                   	ret

0000000000018004 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   18004:	55                   	push   %rbp
   18005:	48 89 e5             	mov    %rsp,%rbp
   18008:	48 83 ec 20          	sub    $0x20,%rsp
   1800c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   18010:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18014:	48 8b 50 18          	mov    0x18(%rax),%rdx
   18018:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1801c:	48 89 d6             	mov    %rdx,%rsi
   1801f:	48 89 c7             	mov    %rax,%rdi
   18022:	e8 57 dc ff ff       	call   15c7e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   18027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1802b:	c9                   	leave
   1802c:	c3                   	ret
   1802d:	90                   	nop

000000000001802e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1802e:	55                   	push   %rbp
   1802f:	48 89 e5             	mov    %rsp,%rbp
   18032:	48 83 ec 20          	sub    $0x20,%rsp
   18036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1803a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1803e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   18042:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18046:	48 89 c7             	mov    %rax,%rdi
   18049:	e8 e2 09 00 00       	call   18a30 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1804e:	48 8b 10             	mov    (%rax),%rdx
   18051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18055:	48 89 10             	mov    %rdx,(%rax)
   18058:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1805c:	48 89 c7             	mov    %rax,%rdi
   1805f:	e8 0e 00 00 00       	call   18072 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   18064:	48 8b 10             	mov    (%rax),%rdx
   18067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1806b:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1806f:	90                   	nop
   18070:	c9                   	leave
   18071:	c3                   	ret

0000000000018072 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18072:	55                   	push   %rbp
   18073:	48 89 e5             	mov    %rsp,%rbp
   18076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1807a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1807e:	5d                   	pop    %rbp
   1807f:	c3                   	ret

0000000000018080 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   18080:	55                   	push   %rbp
   18081:	48 89 e5             	mov    %rsp,%rbp
   18084:	48 83 ec 10          	sub    $0x10,%rsp
   18088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1808c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18090:	48 83 c0 20          	add    $0x20,%rax
   18094:	48 89 c7             	mov    %rax,%rdi
   18097:	e8 a2 09 00 00       	call   18a3e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1809c:	c9                   	leave
   1809d:	c3                   	ret

000000000001809e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   1809e:	55                   	push   %rbp
   1809f:	48 89 e5             	mov    %rsp,%rbp
   180a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   180a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   180aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   180ae:	5d                   	pop    %rbp
   180af:	c3                   	ret

00000000000180b0 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   180b0:	55                   	push   %rbp
   180b1:	48 89 e5             	mov    %rsp,%rbp
   180b4:	48 83 ec 10          	sub    $0x10,%rsp
   180b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   180bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180c0:	48 89 c7             	mov    %rax,%rdi
   180c3:	e8 90 09 00 00       	call   18a58 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   180c8:	c9                   	leave
   180c9:	c3                   	ret

00000000000180ca <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   180ca:	55                   	push   %rbp
   180cb:	48 89 e5             	mov    %rsp,%rbp
   180ce:	48 83 ec 20          	sub    $0x20,%rsp
   180d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   180d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   180da:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   180df:	74 40                	je     18121 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   180e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180e5:	48 89 c7             	mov    %rax,%rdi
   180e8:	e8 85 09 00 00       	call   18a72 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   180ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   180f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180f5:	48 89 c7             	mov    %rax,%rdi
   180f8:	e8 83 09 00 00       	call   18a80 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   180fd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   18102:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18106:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1810a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1810e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18112:	48 89 ce             	mov    %rcx,%rsi
   18115:	48 89 c7             	mov    %rax,%rdi
   18118:	e8 8a 09 00 00       	call   18aa7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1811d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   18121:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   18125:	c9                   	leave
   18126:	c3                   	ret
   18127:	90                   	nop

0000000000018128 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18128:	55                   	push   %rbp
   18129:	48 89 e5             	mov    %rsp,%rbp
   1812c:	48 83 ec 20          	sub    $0x20,%rsp
   18130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18134:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18138:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1813c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18140:	48 89 c7             	mov    %rax,%rdi
   18143:	e8 a4 09 00 00       	call   18aec <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   18148:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1814c:	0f 92 c0             	setb   %al
   1814f:	0f b6 c0             	movzbl %al,%eax
   18152:	48 85 c0             	test   %rax,%rax
   18155:	0f 95 c0             	setne  %al
   18158:	84 c0                	test   %al,%al
   1815a:	74 1a                	je     18176 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1815c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18163:	ff ff 1f 
   18166:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1816a:	73 05                	jae    18171 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1816c:	e8 5f c1 fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   18171:	e8 8a bf fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18176:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1817a:	48 c1 e0 03          	shl    $0x3,%rax
   1817e:	48 89 c7             	mov    %rax,%rdi
   18181:	e8 6a c2 fe ff       	call   43f0 <_Znwm@plt>
   18186:	90                   	nop
      }
   18187:	c9                   	leave
   18188:	c3                   	ret

0000000000018189 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   18189:	55                   	push   %rbp
   1818a:	48 89 e5             	mov    %rsp,%rbp
   1818d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18195:	5d                   	pop    %rbp
   18196:	c3                   	ret

0000000000018197 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   18197:	55                   	push   %rbp
   18198:	48 89 e5             	mov    %rsp,%rbp
   1819b:	48 83 ec 30          	sub    $0x30,%rsp
   1819f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   181a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   181a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   181ab:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   181af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   181b3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   181b7:	48 c1 f8 03          	sar    $0x3,%rax
   181bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   181bf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   181c4:	7e 1f                	jle    181e5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   181c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   181d1:	00 
   181d2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   181d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181da:	48 89 ce             	mov    %rcx,%rsi
   181dd:	48 89 c7             	mov    %rax,%rdi
   181e0:	e8 8b c5 fe ff       	call   4770 <memmove@plt>
      return __result + __count;
   181e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181e9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   181f0:	00 
   181f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181f5:	48 01 d0             	add    %rdx,%rax
    }
   181f8:	c9                   	leave
   181f9:	c3                   	ret

00000000000181fa <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   181fa:	55                   	push   %rbp
   181fb:	48 89 e5             	mov    %rsp,%rbp
   181fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18202:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18206:	90                   	nop
   18207:	5d                   	pop    %rbp
   18208:	c3                   	ret
   18209:	90                   	nop

000000000001820a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1820a:	55                   	push   %rbp
   1820b:	48 89 e5             	mov    %rsp,%rbp
   1820e:	48 83 ec 20          	sub    $0x20,%rsp
   18212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18216:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1821a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1821e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18222:	48 89 d0             	mov    %rdx,%rax
   18225:	48 c1 e0 03          	shl    $0x3,%rax
   18229:	48 01 d0             	add    %rdx,%rax
   1822c:	48 c1 e0 04          	shl    $0x4,%rax
   18230:	48 89 c2             	mov    %rax,%rdx
   18233:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18237:	48 89 d6             	mov    %rdx,%rsi
   1823a:	48 89 c7             	mov    %rax,%rdi
   1823d:	e8 ce c1 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   18242:	c9                   	leave
   18243:	c3                   	ret

0000000000018244 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   18244:	55                   	push   %rbp
   18245:	48 89 e5             	mov    %rsp,%rbp
   18248:	48 83 ec 10          	sub    $0x10,%rsp
   1824c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   18250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18254:	48 89 c7             	mov    %rax,%rdi
   18257:	e8 a4 08 00 00       	call   18b00 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   1825c:	c9                   	leave
   1825d:	c3                   	ret

000000000001825e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1825e:	55                   	push   %rbp
   1825f:	48 89 e5             	mov    %rsp,%rbp
   18262:	48 83 ec 20          	sub    $0x20,%rsp
   18266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1826a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1826e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18276:	48 89 c7             	mov    %rax,%rdi
   18279:	e8 9c 08 00 00       	call   18b1a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   1827e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18282:	0f 92 c0             	setb   %al
   18285:	0f b6 c0             	movzbl %al,%eax
   18288:	48 85 c0             	test   %rax,%rax
   1828b:	0f 95 c0             	setne  %al
   1828e:	84 c0                	test   %al,%al
   18290:	74 1a                	je     182ac <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18292:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   18299:	1c c7 01 
   1829c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   182a0:	73 05                	jae    182a7 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   182a2:	e8 29 c0 fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   182a7:	e8 54 be fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   182ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   182b0:	48 89 d0             	mov    %rdx,%rax
   182b3:	48 c1 e0 03          	shl    $0x3,%rax
   182b7:	48 01 d0             	add    %rdx,%rax
   182ba:	48 c1 e0 04          	shl    $0x4,%rax
   182be:	48 89 c7             	mov    %rax,%rdi
   182c1:	e8 2a c1 fe ff       	call   43f0 <_Znwm@plt>
   182c6:	90                   	nop
      }
   182c7:	c9                   	leave
   182c8:	c3                   	ret

00000000000182c9 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   182c9:	55                   	push   %rbp
   182ca:	48 89 e5             	mov    %rsp,%rbp
   182cd:	48 83 ec 20          	sub    $0x20,%rsp
   182d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   182d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   182dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   182e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   182e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182e9:	48 89 ce             	mov    %rcx,%rsi
   182ec:	48 89 c7             	mov    %rax,%rdi
   182ef:	e8 3a 08 00 00       	call   18b2e <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   182f4:	c9                   	leave
   182f5:	c3                   	ret

00000000000182f6 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   182f6:	55                   	push   %rbp
   182f7:	48 89 e5             	mov    %rsp,%rbp
   182fa:	48 83 ec 10          	sub    $0x10,%rsp
   182fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   18302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18306:	48 89 c7             	mov    %rax,%rdi
   18309:	e8 6c 08 00 00       	call   18b7a <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   1830e:	c9                   	leave
   1830f:	c3                   	ret

0000000000018310 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   18310:	55                   	push   %rbp
   18311:	48 89 e5             	mov    %rsp,%rbp
   18314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   18318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1831c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   18323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18327:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1832e:	00 
   1832f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18333:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1833a:	00 
	{ }
   1833b:	90                   	nop
   1833c:	5d                   	pop    %rbp
   1833d:	c3                   	ret

000000000001833e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1833e:	55                   	push   %rbp
   1833f:	48 89 e5             	mov    %rsp,%rbp
   18342:	48 83 ec 10          	sub    $0x10,%rsp
   18346:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1834a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1834e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18353:	74 15                	je     1836a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   18355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18359:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1835d:	48 89 d6             	mov    %rdx,%rsi
   18360:	48 89 c7             	mov    %rax,%rdi
   18363:	e8 2c 08 00 00       	call   18b94 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   18368:	eb 05                	jmp    1836f <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   1836a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1836f:	c9                   	leave
   18370:	c3                   	ret

0000000000018371 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   18371:	55                   	push   %rbp
   18372:	48 89 e5             	mov    %rsp,%rbp
   18375:	48 83 ec 20          	sub    $0x20,%rsp
   18379:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1837d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   18381:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   18385:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1838d:	48 89 d6             	mov    %rdx,%rsi
   18390:	48 89 c7             	mov    %rax,%rdi
   18393:	e8 26 08 00 00       	call   18bbe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   18398:	c9                   	leave
   18399:	c3                   	ret

000000000001839a <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1839a:	55                   	push   %rbp
   1839b:	48 89 e5             	mov    %rsp,%rbp
   1839e:	48 83 ec 20          	sub    $0x20,%rsp
   183a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   183a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   183aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   183ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   183b9:	00 
   183ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   183be:	48 89 d6             	mov    %rdx,%rsi
   183c1:	48 89 c7             	mov    %rax,%rdi
   183c4:	e8 47 c0 fe ff       	call   4410 <_ZdlPvm@plt>
      }
   183c9:	c9                   	leave
   183ca:	c3                   	ret

00000000000183cb <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   183cb:	55                   	push   %rbp
   183cc:	48 89 e5             	mov    %rsp,%rbp
   183cf:	48 83 ec 10          	sub    $0x10,%rsp
   183d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   183d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183db:	48 89 c7             	mov    %rax,%rdi
   183de:	e8 39 08 00 00       	call   18c1c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   183e3:	c9                   	leave
   183e4:	c3                   	ret

00000000000183e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   183e5:	55                   	push   %rbp
   183e6:	48 89 e5             	mov    %rsp,%rbp
   183e9:	48 83 ec 20          	sub    $0x20,%rsp
   183ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   183f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   183f5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   183fa:	74 40                	je     1843c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   183fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18400:	48 89 c7             	mov    %rax,%rdi
   18403:	e8 2e 08 00 00       	call   18c36 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   18408:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1840c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18410:	48 89 c7             	mov    %rax,%rdi
   18413:	e8 2c 08 00 00       	call   18c44 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   18418:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1841d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18421:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18425:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1842d:	48 89 ce             	mov    %rcx,%rsi
   18430:	48 89 c7             	mov    %rax,%rdi
   18433:	e8 33 08 00 00       	call   18c6b <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   18438:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1843c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   18440:	c9                   	leave
   18441:	c3                   	ret

0000000000018442 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18442:	55                   	push   %rbp
   18443:	48 89 e5             	mov    %rsp,%rbp
   18446:	48 83 ec 20          	sub    $0x20,%rsp
   1844a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1844e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18452:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1845a:	48 89 c7             	mov    %rax,%rdi
   1845d:	e8 4e 08 00 00       	call   18cb0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   18462:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18466:	0f 92 c0             	setb   %al
   18469:	0f b6 c0             	movzbl %al,%eax
   1846c:	48 85 c0             	test   %rax,%rax
   1846f:	0f 95 c0             	setne  %al
   18472:	84 c0                	test   %al,%al
   18474:	74 1a                	je     18490 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18476:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1847d:	ff ff 1f 
   18480:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18484:	73 05                	jae    1848b <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   18486:	e8 45 be fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1848b:	e8 70 bc fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18490:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18494:	48 c1 e0 03          	shl    $0x3,%rax
   18498:	48 89 c7             	mov    %rax,%rdi
   1849b:	e8 50 bf fe ff       	call   43f0 <_Znwm@plt>
   184a0:	90                   	nop
      }
   184a1:	c9                   	leave
   184a2:	c3                   	ret

00000000000184a3 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   184a3:	55                   	push   %rbp
   184a4:	48 89 e5             	mov    %rsp,%rbp
   184a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   184ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184af:	5d                   	pop    %rbp
   184b0:	c3                   	ret

00000000000184b1 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   184b1:	55                   	push   %rbp
   184b2:	48 89 e5             	mov    %rsp,%rbp
   184b5:	48 83 ec 30          	sub    $0x30,%rsp
   184b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   184bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   184c1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   184c5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   184c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   184cd:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   184d1:	48 c1 f8 03          	sar    $0x3,%rax
   184d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   184d9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   184de:	7e 1f                	jle    184ff <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   184e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   184eb:	00 
   184ec:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   184f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184f4:	48 89 ce             	mov    %rcx,%rsi
   184f7:	48 89 c7             	mov    %rax,%rdi
   184fa:	e8 71 c2 fe ff       	call   4770 <memmove@plt>
      return __result + __count;
   184ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18503:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1850a:	00 
   1850b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1850f:	48 01 d0             	add    %rdx,%rax
    }
   18512:	c9                   	leave
   18513:	c3                   	ret

0000000000018514 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   18514:	55                   	push   %rbp
   18515:	48 89 e5             	mov    %rsp,%rbp
   18518:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1851c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18520:	90                   	nop
   18521:	5d                   	pop    %rbp
   18522:	c3                   	ret

0000000000018523 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   18523:	55                   	push   %rbp
   18524:	48 89 e5             	mov    %rsp,%rbp
   18527:	48 83 ec 20          	sub    $0x20,%rsp
   1852b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1852f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18533:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   18537:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1853b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1853f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18543:	48 89 ce             	mov    %rcx,%rsi
   18546:	48 89 c7             	mov    %rax,%rdi
   18549:	e8 76 07 00 00       	call   18cc4 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   1854e:	c9                   	leave
   1854f:	c3                   	ret

0000000000018550 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   18550:	55                   	push   %rbp
   18551:	48 89 e5             	mov    %rsp,%rbp
   18554:	48 83 ec 10          	sub    $0x10,%rsp
   18558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1855c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18560:	48 89 c7             	mov    %rax,%rdi
   18563:	e8 a8 07 00 00       	call   18d10 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   18568:	c9                   	leave
   18569:	c3                   	ret

000000000001856a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1856a:	55                   	push   %rbp
   1856b:	48 89 e5             	mov    %rsp,%rbp
   1856e:	48 83 ec 20          	sub    $0x20,%rsp
   18572:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18576:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1857a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1857f:	74 40                	je     185c1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   18581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18585:	48 89 c7             	mov    %rax,%rdi
   18588:	e8 9d 07 00 00       	call   18d2a <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   1858d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   18591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18595:	48 89 c7             	mov    %rax,%rdi
   18598:	e8 9b 07 00 00       	call   18d38 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   1859d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   185a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   185a6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   185aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   185ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   185b2:	48 89 ce             	mov    %rcx,%rsi
   185b5:	48 89 c7             	mov    %rax,%rdi
   185b8:	e8 a2 07 00 00       	call   18d5f <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   185bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   185c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   185c5:	c9                   	leave
   185c6:	c3                   	ret
   185c7:	90                   	nop

00000000000185c8 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   185c8:	55                   	push   %rbp
   185c9:	48 89 e5             	mov    %rsp,%rbp
   185cc:	48 83 ec 20          	sub    $0x20,%rsp
   185d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   185dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185e0:	48 89 c7             	mov    %rax,%rdi
   185e3:	e8 bc 07 00 00       	call   18da4 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   185e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   185ec:	0f 92 c0             	setb   %al
   185ef:	0f b6 c0             	movzbl %al,%eax
   185f2:	48 85 c0             	test   %rax,%rax
   185f5:	0f 95 c0             	setne  %al
   185f8:	84 c0                	test   %al,%al
   185fa:	74 1a                	je     18616 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   185fc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18603:	ff ff 1f 
   18606:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1860a:	73 05                	jae    18611 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1860c:	e8 bf bc fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   18611:	e8 ea ba fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18616:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1861a:	48 c1 e0 03          	shl    $0x3,%rax
   1861e:	48 89 c7             	mov    %rax,%rdi
   18621:	e8 ca bd fe ff       	call   43f0 <_Znwm@plt>
   18626:	90                   	nop
      }
   18627:	c9                   	leave
   18628:	c3                   	ret

0000000000018629 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   18629:	55                   	push   %rbp
   1862a:	48 89 e5             	mov    %rsp,%rbp
   1862d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18635:	5d                   	pop    %rbp
   18636:	c3                   	ret

0000000000018637 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   18637:	55                   	push   %rbp
   18638:	48 89 e5             	mov    %rsp,%rbp
   1863b:	48 83 ec 30          	sub    $0x30,%rsp
   1863f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18643:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18647:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1864b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1864f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18653:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18657:	48 c1 f8 03          	sar    $0x3,%rax
   1865b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1865f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18664:	7e 1f                	jle    18685 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   18666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1866a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18671:	00 
   18672:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   18676:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1867a:	48 89 ce             	mov    %rcx,%rsi
   1867d:	48 89 c7             	mov    %rax,%rdi
   18680:	e8 eb c0 fe ff       	call   4770 <memmove@plt>
      return __result + __count;
   18685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18689:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18690:	00 
   18691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18695:	48 01 d0             	add    %rdx,%rax
    }
   18698:	c9                   	leave
   18699:	c3                   	ret

000000000001869a <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1869a:	55                   	push   %rbp
   1869b:	48 89 e5             	mov    %rsp,%rbp
   1869e:	48 83 ec 10          	sub    $0x10,%rsp
   186a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   186a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186aa:	48 89 c7             	mov    %rax,%rdi
   186ad:	e8 06 07 00 00       	call   18db8 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   186b2:	c9                   	leave
   186b3:	c3                   	ret

00000000000186b4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   186b4:	55                   	push   %rbp
   186b5:	48 89 e5             	mov    %rsp,%rbp
   186b8:	48 83 ec 20          	sub    $0x20,%rsp
   186bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   186c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   186c4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   186c9:	74 40                	je     1870b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   186cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   186cf:	48 89 c7             	mov    %rax,%rdi
   186d2:	e8 fb 06 00 00       	call   18dd2 <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   186d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   186db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186df:	48 89 c7             	mov    %rax,%rdi
   186e2:	e8 f9 06 00 00       	call   18de0 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   186e7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   186ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   186f0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   186f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   186f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   186fc:	48 89 ce             	mov    %rcx,%rsi
   186ff:	48 89 c7             	mov    %rax,%rdi
   18702:	e8 00 07 00 00       	call   18e07 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   18707:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1870b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1870f:	c9                   	leave
   18710:	c3                   	ret
   18711:	90                   	nop

0000000000018712 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18712:	55                   	push   %rbp
   18713:	48 89 e5             	mov    %rsp,%rbp
   18716:	48 83 ec 20          	sub    $0x20,%rsp
   1871a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1871e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18722:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1872a:	48 89 c7             	mov    %rax,%rdi
   1872d:	e8 1a 07 00 00       	call   18e4c <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   18732:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18736:	0f 92 c0             	setb   %al
   18739:	0f b6 c0             	movzbl %al,%eax
   1873c:	48 85 c0             	test   %rax,%rax
   1873f:	0f 95 c0             	setne  %al
   18742:	84 c0                	test   %al,%al
   18744:	74 1a                	je     18760 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18746:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1874d:	ff ff 1f 
   18750:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18754:	73 05                	jae    1875b <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   18756:	e8 75 bb fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1875b:	e8 a0 b9 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18760:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18764:	48 c1 e0 03          	shl    $0x3,%rax
   18768:	48 89 c7             	mov    %rax,%rdi
   1876b:	e8 80 bc fe ff       	call   43f0 <_Znwm@plt>
   18770:	90                   	nop
      }
   18771:	c9                   	leave
   18772:	c3                   	ret

0000000000018773 <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   18773:	55                   	push   %rbp
   18774:	48 89 e5             	mov    %rsp,%rbp
   18777:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1877b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1877f:	5d                   	pop    %rbp
   18780:	c3                   	ret

0000000000018781 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   18781:	55                   	push   %rbp
   18782:	48 89 e5             	mov    %rsp,%rbp
   18785:	48 83 ec 30          	sub    $0x30,%rsp
   18789:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1878d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18791:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   18795:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   18799:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1879d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   187a1:	48 c1 f8 03          	sar    $0x3,%rax
   187a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   187a9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   187ae:	7e 1f                	jle    187cf <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   187b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187b4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   187bb:	00 
   187bc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   187c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   187c4:	48 89 ce             	mov    %rcx,%rsi
   187c7:	48 89 c7             	mov    %rax,%rdi
   187ca:	e8 a1 bf fe ff       	call   4770 <memmove@plt>
      return __result + __count;
   187cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187d3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   187da:	00 
   187db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   187df:	48 01 d0             	add    %rdx,%rax
    }
   187e2:	c9                   	leave
   187e3:	c3                   	ret

00000000000187e4 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   187e4:	55                   	push   %rbp
   187e5:	48 89 e5             	mov    %rsp,%rbp
   187e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   187f0:	90                   	nop
   187f1:	5d                   	pop    %rbp
   187f2:	c3                   	ret

00000000000187f3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   187f3:	55                   	push   %rbp
   187f4:	48 89 e5             	mov    %rsp,%rbp
   187f7:	48 83 ec 20          	sub    $0x20,%rsp
   187fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18803:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   18807:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1880b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1880f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18813:	48 89 ce             	mov    %rcx,%rsi
   18816:	48 89 c7             	mov    %rax,%rdi
   18819:	e8 42 06 00 00       	call   18e60 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   1881e:	c9                   	leave
   1881f:	c3                   	ret

0000000000018820 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
   18820:	55                   	push   %rbp
   18821:	48 89 e5             	mov    %rsp,%rbp
   18824:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18828:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1882c:	90                   	nop
   1882d:	5d                   	pop    %rbp
   1882e:	c3                   	ret

000000000001882f <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1882f:	55                   	push   %rbp
   18830:	48 89 e5             	mov    %rsp,%rbp
   18833:	48 83 ec 10          	sub    $0x10,%rsp
   18837:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1883b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1883f:	48 89 c7             	mov    %rax,%rdi
   18842:	e8 65 06 00 00       	call   18eac <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   18847:	c9                   	leave
   18848:	c3                   	ret
   18849:	90                   	nop

000000000001884a <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1884a:	55                   	push   %rbp
   1884b:	48 89 e5             	mov    %rsp,%rbp
   1884e:	48 83 ec 20          	sub    $0x20,%rsp
   18852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1885a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1885e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18862:	48 89 c7             	mov    %rax,%rdi
   18865:	e8 5c 06 00 00       	call   18ec6 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   1886a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1886e:	0f 92 c0             	setb   %al
   18871:	0f b6 c0             	movzbl %al,%eax
   18874:	48 85 c0             	test   %rax,%rax
   18877:	0f 95 c0             	setne  %al
   1887a:	84 c0                	test   %al,%al
   1887c:	74 1a                	je     18898 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1887e:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   18885:	ff ff 3f 
   18888:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1888c:	73 05                	jae    18893 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1888e:	e8 3d ba fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   18893:	e8 68 b8 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18898:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1889c:	48 c1 e0 02          	shl    $0x2,%rax
   188a0:	48 89 c7             	mov    %rax,%rdi
   188a3:	e8 48 bb fe ff       	call   43f0 <_Znwm@plt>
   188a8:	90                   	nop
      }
   188a9:	c9                   	leave
   188aa:	c3                   	ret

00000000000188ab <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   188ab:	55                   	push   %rbp
   188ac:	48 89 e5             	mov    %rsp,%rbp
   188af:	48 83 ec 20          	sub    $0x20,%rsp
   188b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   188bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   188bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   188c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   188c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188cb:	48 89 ce             	mov    %rcx,%rsi
   188ce:	48 89 c7             	mov    %rax,%rdi
   188d1:	e8 04 06 00 00       	call   18eda <_ZSt4copyIPKjPjET0_T_S4_S3_>
   188d6:	c9                   	leave
   188d7:	c3                   	ret

00000000000188d8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   188d8:	55                   	push   %rbp
   188d9:	48 89 e5             	mov    %rsp,%rbp
   188dc:	53                   	push   %rbx
   188dd:	48 83 ec 28          	sub    $0x28,%rsp
   188e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   188e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   188e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   188ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   188f1:	48 89 c7             	mov    %rax,%rdi
   188f4:	e8 2c 06 00 00       	call   18f25 <_ZSt12__miter_baseIPKPKcET_S4_>
   188f9:	48 89 c3             	mov    %rax,%rbx
   188fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18900:	48 89 c7             	mov    %rax,%rdi
   18903:	e8 1d 06 00 00       	call   18f25 <_ZSt12__miter_baseIPKPKcET_S4_>
   18908:	48 89 c1             	mov    %rax,%rcx
   1890b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1890f:	48 89 c2             	mov    %rax,%rdx
   18912:	48 89 de             	mov    %rbx,%rsi
   18915:	48 89 cf             	mov    %rcx,%rdi
   18918:	e8 16 06 00 00       	call   18f33 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   1891d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18921:	c9                   	leave
   18922:	c3                   	ret
   18923:	90                   	nop

0000000000018924 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   18924:	55                   	push   %rbp
   18925:	48 89 e5             	mov    %rsp,%rbp
   18928:	48 83 ec 10          	sub    $0x10,%rsp
   1892c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18934:	48 89 c7             	mov    %rax,%rdi
   18937:	e8 04 b9 fe ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1893c:	90                   	nop
   1893d:	c9                   	leave
   1893e:	c3                   	ret
   1893f:	90                   	nop

0000000000018940 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   18940:	55                   	push   %rbp
   18941:	48 89 e5             	mov    %rsp,%rbp
   18944:	48 83 ec 10          	sub    $0x10,%rsp
   18948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1894c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   18950:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18954:	48 89 c7             	mov    %rax,%rdi
   18957:	e8 c8 ff ff ff       	call   18924 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   1895c:	90                   	nop
   1895d:	c9                   	leave
   1895e:	c3                   	ret
   1895f:	90                   	nop

0000000000018960 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   18960:	55                   	push   %rbp
   18961:	48 89 e5             	mov    %rsp,%rbp
   18964:	48 83 ec 20          	sub    $0x20,%rsp
   18968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1896c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18970:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   18974:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18978:	48 89 d0             	mov    %rdx,%rax
   1897b:	48 c1 e0 03          	shl    $0x3,%rax
   1897f:	48 01 d0             	add    %rdx,%rax
   18982:	48 c1 e0 03          	shl    $0x3,%rax
   18986:	48 89 c2             	mov    %rax,%rdx
   18989:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1898d:	48 89 d6             	mov    %rdx,%rsi
   18990:	48 89 c7             	mov    %rax,%rdi
   18993:	e8 78 ba fe ff       	call   4410 <_ZdlPvm@plt>
      }
   18998:	c9                   	leave
   18999:	c3                   	ret

000000000001899a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   1899a:	55                   	push   %rbp
   1899b:	48 89 e5             	mov    %rsp,%rbp
   1899e:	48 83 ec 10          	sub    $0x10,%rsp
   189a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   189aa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   189ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189b2:	ba 00 00 00 00       	mov    $0x0,%edx
   189b7:	48 89 ce             	mov    %rcx,%rsi
   189ba:	48 89 c7             	mov    %rax,%rdi
   189bd:	e8 dc 05 00 00       	call   18f9e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   189c2:	c9                   	leave
   189c3:	c3                   	ret

00000000000189c4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   189c4:	55                   	push   %rbp
   189c5:	48 89 e5             	mov    %rsp,%rbp
   189c8:	41 54                	push   %r12
   189ca:	53                   	push   %rbx
   189cb:	48 83 ec 30          	sub    $0x30,%rsp
   189cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   189d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   189d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   189db:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   189df:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   189e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   189e7:	48 89 c7             	mov    %rax,%rdi
   189ea:	e8 0c cd ff ff       	call   156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   189ef:	49 89 c4             	mov    %rax,%r12
   189f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   189f6:	48 89 c7             	mov    %rax,%rdi
   189f9:	e8 ef cc ff ff       	call   156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   189fe:	48 89 c3             	mov    %rax,%rbx
   18a01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18a05:	48 89 c7             	mov    %rax,%rdi
   18a08:	e8 d2 cc ff ff       	call   156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   18a0d:	48 89 c2             	mov    %rax,%rdx
   18a10:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   18a14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a18:	4d 89 e0             	mov    %r12,%r8
   18a1b:	48 89 d9             	mov    %rbx,%rcx
   18a1e:	48 89 c7             	mov    %rax,%rdi
   18a21:	e8 0a 06 00 00       	call   19030 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   18a26:	90                   	nop
   18a27:	48 83 c4 30          	add    $0x30,%rsp
   18a2b:	5b                   	pop    %rbx
   18a2c:	41 5c                	pop    %r12
   18a2e:	5d                   	pop    %rbp
   18a2f:	c3                   	ret

0000000000018a30 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18a30:	55                   	push   %rbp
   18a31:	48 89 e5             	mov    %rsp,%rbp
   18a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a3c:	5d                   	pop    %rbp
   18a3d:	c3                   	ret

0000000000018a3e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   18a3e:	55                   	push   %rbp
   18a3f:	48 89 e5             	mov    %rsp,%rbp
   18a42:	48 83 ec 10          	sub    $0x10,%rsp
   18a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   18a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a4e:	48 89 c7             	mov    %rax,%rdi
   18a51:	e8 8a 06 00 00       	call   190e0 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   18a56:	c9                   	leave
   18a57:	c3                   	ret

0000000000018a58 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18a58:	55                   	push   %rbp
   18a59:	48 89 e5             	mov    %rsp,%rbp
   18a5c:	48 83 ec 10          	sub    $0x10,%rsp
   18a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a68:	48 89 c7             	mov    %rax,%rdi
   18a6b:	e8 7c 00 00 00       	call   18aec <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   18a70:	c9                   	leave
   18a71:	c3                   	ret

0000000000018a72 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   18a72:	55                   	push   %rbp
   18a73:	48 89 e5             	mov    %rsp,%rbp
   18a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   18a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a7e:	5d                   	pop    %rbp
   18a7f:	c3                   	ret

0000000000018a80 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   18a80:	55                   	push   %rbp
   18a81:	48 89 e5             	mov    %rsp,%rbp
   18a84:	48 83 ec 10          	sub    $0x10,%rsp
   18a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   18a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a90:	48 89 c6             	mov    %rax,%rsi
   18a93:	bf 08 00 00 00       	mov    $0x8,%edi
   18a98:	e8 ec c5 fe ff       	call   5089 <_ZnwmPv>
   18a9d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   18aa4:	90                   	nop
   18aa5:	c9                   	leave
   18aa6:	c3                   	ret

0000000000018aa7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   18aa7:	55                   	push   %rbp
   18aa8:	48 89 e5             	mov    %rsp,%rbp
   18aab:	48 83 ec 20          	sub    $0x20,%rsp
   18aaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ab3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ab7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   18abb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18abf:	48 89 c7             	mov    %rax,%rdi
   18ac2:	e8 27 06 00 00       	call   190ee <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   18ac7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18acb:	48 89 c7             	mov    %rax,%rdi
   18ace:	e8 c8 c5 fe ff       	call   509b <_ZSt17__size_to_integerm>
   18ad3:	48 89 c1             	mov    %rax,%rcx
   18ad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ada:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ade:	48 89 ce             	mov    %rcx,%rsi
   18ae1:	48 89 c7             	mov    %rax,%rdi
   18ae4:	e8 10 06 00 00       	call   190f9 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   18ae9:	c9                   	leave
   18aea:	c3                   	ret
   18aeb:	90                   	nop

0000000000018aec <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18aec:	55                   	push   %rbp
   18aed:	48 89 e5             	mov    %rsp,%rbp
   18af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18af4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   18afb:	ff ff 0f 
      }
   18afe:	5d                   	pop    %rbp
   18aff:	c3                   	ret

0000000000018b00 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18b00:	55                   	push   %rbp
   18b01:	48 89 e5             	mov    %rsp,%rbp
   18b04:	48 83 ec 10          	sub    $0x10,%rsp
   18b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b10:	48 89 c7             	mov    %rax,%rdi
   18b13:	e8 02 00 00 00       	call   18b1a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   18b18:	c9                   	leave
   18b19:	c3                   	ret

0000000000018b1a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18b1a:	55                   	push   %rbp
   18b1b:	48 89 e5             	mov    %rsp,%rbp
   18b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18b22:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   18b29:	8e e3 00 
      }
   18b2c:	5d                   	pop    %rbp
   18b2d:	c3                   	ret

0000000000018b2e <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   18b2e:	55                   	push   %rbp
   18b2f:	48 89 e5             	mov    %rsp,%rbp
   18b32:	53                   	push   %rbx
   18b33:	48 83 ec 28          	sub    $0x28,%rsp
   18b37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18b3b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18b3f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   18b43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18b47:	48 89 c7             	mov    %rax,%rdi
   18b4a:	e8 07 06 00 00       	call   19156 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   18b4f:	48 89 c3             	mov    %rax,%rbx
   18b52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18b56:	48 89 c7             	mov    %rax,%rdi
   18b59:	e8 f8 05 00 00       	call   19156 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   18b5e:	48 89 c1             	mov    %rax,%rcx
   18b61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18b65:	48 89 c2             	mov    %rax,%rdx
   18b68:	48 89 de             	mov    %rbx,%rsi
   18b6b:	48 89 cf             	mov    %rcx,%rdi
   18b6e:	e8 f1 05 00 00       	call   19164 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   18b73:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18b77:	c9                   	leave
   18b78:	c3                   	ret
   18b79:	90                   	nop

0000000000018b7a <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18b7a:	55                   	push   %rbp
   18b7b:	48 89 e5             	mov    %rsp,%rbp
   18b7e:	48 83 ec 10          	sub    $0x10,%rsp
   18b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b8a:	48 89 c7             	mov    %rax,%rdi
   18b8d:	e8 3c 06 00 00       	call   191ce <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   18b92:	c9                   	leave
   18b93:	c3                   	ret

0000000000018b94 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   18b94:	55                   	push   %rbp
   18b95:	48 89 e5             	mov    %rsp,%rbp
   18b98:	48 83 ec 10          	sub    $0x10,%rsp
   18b9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ba0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18ba4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bac:	ba 00 00 00 00       	mov    $0x0,%edx
   18bb1:	48 89 ce             	mov    %rcx,%rsi
   18bb4:	48 89 c7             	mov    %rax,%rdi
   18bb7:	e8 26 06 00 00       	call   191e2 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   18bbc:	c9                   	leave
   18bbd:	c3                   	ret

0000000000018bbe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   18bbe:	55                   	push   %rbp
   18bbf:	48 89 e5             	mov    %rsp,%rbp
   18bc2:	48 83 ec 20          	sub    $0x20,%rsp
   18bc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18bca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   18bce:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   18bd3:	74 40                	je     18c15 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   18bd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18bd9:	48 89 c7             	mov    %rax,%rdi
   18bdc:	e8 62 06 00 00       	call   19243 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   18be1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   18be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18be9:	48 89 c7             	mov    %rax,%rdi
   18bec:	e8 60 06 00 00       	call   19251 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   18bf1:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   18bf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18bfa:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   18bfe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18c02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c06:	48 89 ce             	mov    %rcx,%rsi
   18c09:	48 89 c7             	mov    %rax,%rdi
   18c0c:	e8 67 06 00 00       	call   19278 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   18c11:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   18c15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   18c19:	c9                   	leave
   18c1a:	c3                   	ret
   18c1b:	90                   	nop

0000000000018c1c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18c1c:	55                   	push   %rbp
   18c1d:	48 89 e5             	mov    %rsp,%rbp
   18c20:	48 83 ec 10          	sub    $0x10,%rsp
   18c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18c28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c2c:	48 89 c7             	mov    %rax,%rdi
   18c2f:	e8 7c 00 00 00       	call   18cb0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   18c34:	c9                   	leave
   18c35:	c3                   	ret

0000000000018c36 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   18c36:	55                   	push   %rbp
   18c37:	48 89 e5             	mov    %rsp,%rbp
   18c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   18c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c42:	5d                   	pop    %rbp
   18c43:	c3                   	ret

0000000000018c44 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   18c44:	55                   	push   %rbp
   18c45:	48 89 e5             	mov    %rsp,%rbp
   18c48:	48 83 ec 10          	sub    $0x10,%rsp
   18c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   18c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c54:	48 89 c6             	mov    %rax,%rsi
   18c57:	bf 08 00 00 00       	mov    $0x8,%edi
   18c5c:	e8 28 c4 fe ff       	call   5089 <_ZnwmPv>
   18c61:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   18c68:	90                   	nop
   18c69:	c9                   	leave
   18c6a:	c3                   	ret

0000000000018c6b <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   18c6b:	55                   	push   %rbp
   18c6c:	48 89 e5             	mov    %rsp,%rbp
   18c6f:	48 83 ec 20          	sub    $0x20,%rsp
   18c73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18c7b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   18c7f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18c83:	48 89 c7             	mov    %rax,%rdi
   18c86:	e8 31 06 00 00       	call   192bc <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   18c8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18c8f:	48 89 c7             	mov    %rax,%rdi
   18c92:	e8 04 c4 fe ff       	call   509b <_ZSt17__size_to_integerm>
   18c97:	48 89 c1             	mov    %rax,%rcx
   18c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c9e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ca2:	48 89 ce             	mov    %rcx,%rsi
   18ca5:	48 89 c7             	mov    %rax,%rdi
   18ca8:	e8 1a 06 00 00       	call   192c7 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   18cad:	c9                   	leave
   18cae:	c3                   	ret
   18caf:	90                   	nop

0000000000018cb0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18cb0:	55                   	push   %rbp
   18cb1:	48 89 e5             	mov    %rsp,%rbp
   18cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18cb8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   18cbf:	ff ff 0f 
      }
   18cc2:	5d                   	pop    %rbp
   18cc3:	c3                   	ret

0000000000018cc4 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   18cc4:	55                   	push   %rbp
   18cc5:	48 89 e5             	mov    %rsp,%rbp
   18cc8:	53                   	push   %rbx
   18cc9:	48 83 ec 28          	sub    $0x28,%rsp
   18ccd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18cd1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18cd5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   18cd9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18cdd:	48 89 c7             	mov    %rax,%rdi
   18ce0:	e8 3f 06 00 00       	call   19324 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   18ce5:	48 89 c3             	mov    %rax,%rbx
   18ce8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18cec:	48 89 c7             	mov    %rax,%rdi
   18cef:	e8 30 06 00 00       	call   19324 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   18cf4:	48 89 c1             	mov    %rax,%rcx
   18cf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18cfb:	48 89 c2             	mov    %rax,%rdx
   18cfe:	48 89 de             	mov    %rbx,%rsi
   18d01:	48 89 cf             	mov    %rcx,%rdi
   18d04:	e8 29 06 00 00       	call   19332 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   18d09:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18d0d:	c9                   	leave
   18d0e:	c3                   	ret
   18d0f:	90                   	nop

0000000000018d10 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18d10:	55                   	push   %rbp
   18d11:	48 89 e5             	mov    %rsp,%rbp
   18d14:	48 83 ec 10          	sub    $0x10,%rsp
   18d18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18d1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d20:	48 89 c7             	mov    %rax,%rdi
   18d23:	e8 7c 00 00 00       	call   18da4 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   18d28:	c9                   	leave
   18d29:	c3                   	ret

0000000000018d2a <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   18d2a:	55                   	push   %rbp
   18d2b:	48 89 e5             	mov    %rsp,%rbp
   18d2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   18d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d36:	5d                   	pop    %rbp
   18d37:	c3                   	ret

0000000000018d38 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   18d38:	55                   	push   %rbp
   18d39:	48 89 e5             	mov    %rsp,%rbp
   18d3c:	48 83 ec 10          	sub    $0x10,%rsp
   18d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   18d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d48:	48 89 c6             	mov    %rax,%rsi
   18d4b:	bf 08 00 00 00       	mov    $0x8,%edi
   18d50:	e8 34 c3 fe ff       	call   5089 <_ZnwmPv>
   18d55:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   18d5c:	90                   	nop
   18d5d:	c9                   	leave
   18d5e:	c3                   	ret

0000000000018d5f <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   18d5f:	55                   	push   %rbp
   18d60:	48 89 e5             	mov    %rsp,%rbp
   18d63:	48 83 ec 20          	sub    $0x20,%rsp
   18d67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18d6f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   18d73:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18d77:	48 89 c7             	mov    %rax,%rdi
   18d7a:	e8 1d 06 00 00       	call   1939c <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   18d7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18d83:	48 89 c7             	mov    %rax,%rdi
   18d86:	e8 10 c3 fe ff       	call   509b <_ZSt17__size_to_integerm>
   18d8b:	48 89 c1             	mov    %rax,%rcx
   18d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18d96:	48 89 ce             	mov    %rcx,%rsi
   18d99:	48 89 c7             	mov    %rax,%rdi
   18d9c:	e8 06 06 00 00       	call   193a7 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   18da1:	c9                   	leave
   18da2:	c3                   	ret
   18da3:	90                   	nop

0000000000018da4 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18da4:	55                   	push   %rbp
   18da5:	48 89 e5             	mov    %rsp,%rbp
   18da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18dac:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   18db3:	ff ff 0f 
      }
   18db6:	5d                   	pop    %rbp
   18db7:	c3                   	ret

0000000000018db8 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18db8:	55                   	push   %rbp
   18db9:	48 89 e5             	mov    %rsp,%rbp
   18dbc:	48 83 ec 10          	sub    $0x10,%rsp
   18dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18dc8:	48 89 c7             	mov    %rax,%rdi
   18dcb:	e8 7c 00 00 00       	call   18e4c <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   18dd0:	c9                   	leave
   18dd1:	c3                   	ret

0000000000018dd2 <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   18dd2:	55                   	push   %rbp
   18dd3:	48 89 e5             	mov    %rsp,%rbp
   18dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   18dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18dde:	5d                   	pop    %rbp
   18ddf:	c3                   	ret

0000000000018de0 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   18de0:	55                   	push   %rbp
   18de1:	48 89 e5             	mov    %rsp,%rbp
   18de4:	48 83 ec 10          	sub    $0x10,%rsp
   18de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   18dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18df0:	48 89 c6             	mov    %rax,%rsi
   18df3:	bf 08 00 00 00       	mov    $0x8,%edi
   18df8:	e8 8c c2 fe ff       	call   5089 <_ZnwmPv>
   18dfd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   18e04:	90                   	nop
   18e05:	c9                   	leave
   18e06:	c3                   	ret

0000000000018e07 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   18e07:	55                   	push   %rbp
   18e08:	48 89 e5             	mov    %rsp,%rbp
   18e0b:	48 83 ec 20          	sub    $0x20,%rsp
   18e0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18e17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   18e1b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18e1f:	48 89 c7             	mov    %rax,%rdi
   18e22:	e8 dd 05 00 00       	call   19404 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   18e27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18e2b:	48 89 c7             	mov    %rax,%rdi
   18e2e:	e8 68 c2 fe ff       	call   509b <_ZSt17__size_to_integerm>
   18e33:	48 89 c1             	mov    %rax,%rcx
   18e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e3a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e3e:	48 89 ce             	mov    %rcx,%rsi
   18e41:	48 89 c7             	mov    %rax,%rdi
   18e44:	e8 c6 05 00 00       	call   1940f <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   18e49:	c9                   	leave
   18e4a:	c3                   	ret
   18e4b:	90                   	nop

0000000000018e4c <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18e4c:	55                   	push   %rbp
   18e4d:	48 89 e5             	mov    %rsp,%rbp
   18e50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18e54:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   18e5b:	ff ff 0f 
      }
   18e5e:	5d                   	pop    %rbp
   18e5f:	c3                   	ret

0000000000018e60 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   18e60:	55                   	push   %rbp
   18e61:	48 89 e5             	mov    %rsp,%rbp
   18e64:	53                   	push   %rbx
   18e65:	48 83 ec 28          	sub    $0x28,%rsp
   18e69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18e6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18e71:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   18e75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18e79:	48 89 c7             	mov    %rax,%rdi
   18e7c:	e8 eb 05 00 00       	call   1946c <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   18e81:	48 89 c3             	mov    %rax,%rbx
   18e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18e88:	48 89 c7             	mov    %rax,%rdi
   18e8b:	e8 dc 05 00 00       	call   1946c <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   18e90:	48 89 c1             	mov    %rax,%rcx
   18e93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e97:	48 89 c2             	mov    %rax,%rdx
   18e9a:	48 89 de             	mov    %rbx,%rsi
   18e9d:	48 89 cf             	mov    %rcx,%rdi
   18ea0:	e8 d5 05 00 00       	call   1947a <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   18ea5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18ea9:	c9                   	leave
   18eaa:	c3                   	ret
   18eab:	90                   	nop

0000000000018eac <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   18eac:	55                   	push   %rbp
   18ead:	48 89 e5             	mov    %rsp,%rbp
   18eb0:	48 83 ec 10          	sub    $0x10,%rsp
   18eb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ebc:	48 89 c7             	mov    %rax,%rdi
   18ebf:	e8 02 00 00 00       	call   18ec6 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   18ec4:	c9                   	leave
   18ec5:	c3                   	ret

0000000000018ec6 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18ec6:	55                   	push   %rbp
   18ec7:	48 89 e5             	mov    %rsp,%rbp
   18eca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18ece:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18ed5:	ff ff 1f 
      }
   18ed8:	5d                   	pop    %rbp
   18ed9:	c3                   	ret

0000000000018eda <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   18eda:	55                   	push   %rbp
   18edb:	48 89 e5             	mov    %rsp,%rbp
   18ede:	53                   	push   %rbx
   18edf:	48 83 ec 28          	sub    $0x28,%rsp
   18ee3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18ee7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18eeb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   18eef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18ef3:	48 89 c7             	mov    %rax,%rdi
   18ef6:	e8 e9 05 00 00       	call   194e4 <_ZSt12__miter_baseIPKjET_S2_>
   18efb:	48 89 c3             	mov    %rax,%rbx
   18efe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f02:	48 89 c7             	mov    %rax,%rdi
   18f05:	e8 da 05 00 00       	call   194e4 <_ZSt12__miter_baseIPKjET_S2_>
   18f0a:	48 89 c1             	mov    %rax,%rcx
   18f0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f11:	48 89 c2             	mov    %rax,%rdx
   18f14:	48 89 de             	mov    %rbx,%rsi
   18f17:	48 89 cf             	mov    %rcx,%rdi
   18f1a:	e8 d3 05 00 00       	call   194f2 <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   18f1f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18f23:	c9                   	leave
   18f24:	c3                   	ret

0000000000018f25 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   18f25:	55                   	push   %rbp
   18f26:	48 89 e5             	mov    %rsp,%rbp
   18f29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f31:	5d                   	pop    %rbp
   18f32:	c3                   	ret

0000000000018f33 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   18f33:	55                   	push   %rbp
   18f34:	48 89 e5             	mov    %rsp,%rbp
   18f37:	41 54                	push   %r12
   18f39:	53                   	push   %rbx
   18f3a:	48 83 ec 20          	sub    $0x20,%rsp
   18f3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18f42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18f46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   18f4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18f4e:	48 89 c7             	mov    %rax,%rdi
   18f51:	e8 ac ee ff ff       	call   17e02 <_ZSt12__niter_baseIPPKcET_S3_>
   18f56:	49 89 c4             	mov    %rax,%r12
   18f59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18f5d:	48 89 c7             	mov    %rax,%rdi
   18f60:	e8 f7 05 00 00       	call   1955c <_ZSt12__niter_baseIPKPKcET_S4_>
   18f65:	48 89 c3             	mov    %rax,%rbx
   18f68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f6c:	48 89 c7             	mov    %rax,%rdi
   18f6f:	e8 e8 05 00 00       	call   1955c <_ZSt12__niter_baseIPKPKcET_S4_>
   18f74:	4c 89 e2             	mov    %r12,%rdx
   18f77:	48 89 de             	mov    %rbx,%rsi
   18f7a:	48 89 c7             	mov    %rax,%rdi
   18f7d:	e8 e8 05 00 00       	call   1956a <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   18f82:	48 89 c2             	mov    %rax,%rdx
   18f85:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   18f89:	48 89 d6             	mov    %rdx,%rsi
   18f8c:	48 89 c7             	mov    %rax,%rdi
   18f8f:	e8 03 06 00 00       	call   19597 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   18f94:	48 83 c4 20          	add    $0x20,%rsp
   18f98:	5b                   	pop    %rbx
   18f99:	41 5c                	pop    %r12
   18f9b:	5d                   	pop    %rbp
   18f9c:	c3                   	ret
   18f9d:	90                   	nop

0000000000018f9e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18f9e:	55                   	push   %rbp
   18f9f:	48 89 e5             	mov    %rsp,%rbp
   18fa2:	48 83 ec 20          	sub    $0x20,%rsp
   18fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18faa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18fae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fb6:	48 89 c7             	mov    %rax,%rdi
   18fb9:	e8 ec 05 00 00       	call   195aa <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   18fbe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18fc2:	0f 92 c0             	setb   %al
   18fc5:	0f b6 c0             	movzbl %al,%eax
   18fc8:	48 85 c0             	test   %rax,%rax
   18fcb:	0f 95 c0             	setne  %al
   18fce:	84 c0                	test   %al,%al
   18fd0:	74 1a                	je     18fec <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18fd2:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   18fd9:	38 8e 03 
   18fdc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18fe0:	73 05                	jae    18fe7 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   18fe2:	e8 e9 b2 fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   18fe7:	e8 14 b1 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18fec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18ff0:	48 89 d0             	mov    %rdx,%rax
   18ff3:	48 c1 e0 03          	shl    $0x3,%rax
   18ff7:	48 01 d0             	add    %rdx,%rax
   18ffa:	48 c1 e0 03          	shl    $0x3,%rax
   18ffe:	48 89 c7             	mov    %rax,%rdi
   19001:	e8 ea b3 fe ff       	call   43f0 <_Znwm@plt>
   19006:	90                   	nop
      }
   19007:	c9                   	leave
   19008:	c3                   	ret
   19009:	90                   	nop

000000000001900a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1900a:	55                   	push   %rbp
   1900b:	48 89 e5             	mov    %rsp,%rbp
   1900e:	48 83 ec 10          	sub    $0x10,%rsp
   19012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19016:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1901a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1901e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19022:	48 89 d6             	mov    %rdx,%rsi
   19025:	48 89 c7             	mov    %rax,%rdi
   19028:	e8 91 05 00 00       	call   195be <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1902d:	90                   	nop
   1902e:	c9                   	leave
   1902f:	c3                   	ret

0000000000019030 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   19030:	55                   	push   %rbp
   19031:	48 89 e5             	mov    %rsp,%rbp
   19034:	41 56                	push   %r14
   19036:	41 55                	push   %r13
   19038:	41 54                	push   %r12
   1903a:	53                   	push   %rbx
   1903b:	48 83 ec 40          	sub    $0x40,%rsp
   1903f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   19043:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   19047:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1904b:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1904f:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   19053:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   19057:	48 89 de             	mov    %rbx,%rsi
   1905a:	bf 28 00 00 00       	mov    $0x28,%edi
   1905f:	e8 25 c0 fe ff       	call   5089 <_ZnwmPv>
   19064:	49 89 c4             	mov    %rax,%r12
   19067:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1906d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19071:	48 89 c7             	mov    %rax,%rdi
   19074:	e8 82 c6 ff ff       	call   156fb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   19079:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1907d:	48 89 c7             	mov    %rax,%rdi
   19080:	e8 68 c6 ff ff       	call   156ed <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   19085:	48 89 c2             	mov    %rax,%rdx
   19088:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1908c:	48 89 d6             	mov    %rdx,%rsi
   1908f:	48 89 c7             	mov    %rax,%rdi
   19092:	e8 73 ff ff ff       	call   1900a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   19097:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1909b:	48 89 c7             	mov    %rax,%rdi
   1909e:	e8 3c c6 ff ff       	call   156df <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   190a3:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   190a7:	48 89 c6             	mov    %rax,%rsi
   190aa:	4c 89 e7             	mov    %r12,%rdi
   190ad:	e8 2a 05 00 00       	call   195dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   190b2:	eb 1e                	jmp    190d2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   190b4:	49 89 c5             	mov    %rax,%r13
   190b7:	45 84 f6             	test   %r14b,%r14b
   190ba:	74 0b                	je     190c7 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   190bc:	48 89 de             	mov    %rbx,%rsi
   190bf:	4c 89 e7             	mov    %r12,%rdi
   190c2:	e8 dc 82 ff ff       	call   113a3 <_ZdlPvS_>
   190c7:	4c 89 e8             	mov    %r13,%rax
   190ca:	48 89 c7             	mov    %rax,%rdi
   190cd:	e8 2e b7 fe ff       	call   4800 <_Unwind_Resume@plt>
   190d2:	48 83 c4 40          	add    $0x40,%rsp
   190d6:	5b                   	pop    %rbx
   190d7:	41 5c                	pop    %r12
   190d9:	41 5d                	pop    %r13
   190db:	41 5e                	pop    %r14
   190dd:	5d                   	pop    %rbp
   190de:	c3                   	ret
   190df:	90                   	nop

00000000000190e0 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   190e0:	55                   	push   %rbp
   190e1:	48 89 e5             	mov    %rsp,%rbp
   190e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   190e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190ec:	5d                   	pop    %rbp
   190ed:	c3                   	ret

00000000000190ee <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   190ee:	55                   	push   %rbp
   190ef:	48 89 e5             	mov    %rsp,%rbp
   190f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   190f6:	90                   	nop
   190f7:	5d                   	pop    %rbp
   190f8:	c3                   	ret

00000000000190f9 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   190f9:	55                   	push   %rbp
   190fa:	48 89 e5             	mov    %rsp,%rbp
   190fd:	48 83 ec 20          	sub    $0x20,%rsp
   19101:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19105:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19109:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1910d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19112:	75 06                	jne    1911a <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   19114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19118:	eb 3a                	jmp    19154 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1911a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1911e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19125:	00 
   19126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1912a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1912e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19136:	48 89 ce             	mov    %rcx,%rsi
   19139:	48 89 c7             	mov    %rax,%rdi
   1913c:	e8 c5 04 00 00       	call   19606 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   19141:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19145:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1914c:	00 
   1914d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19151:	48 01 d0             	add    %rdx,%rax
    }
   19154:	c9                   	leave
   19155:	c3                   	ret

0000000000019156 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   19156:	55                   	push   %rbp
   19157:	48 89 e5             	mov    %rsp,%rbp
   1915a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1915e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19162:	5d                   	pop    %rbp
   19163:	c3                   	ret

0000000000019164 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   19164:	55                   	push   %rbp
   19165:	48 89 e5             	mov    %rsp,%rbp
   19168:	41 54                	push   %r12
   1916a:	53                   	push   %rbx
   1916b:	48 83 ec 20          	sub    $0x20,%rsp
   1916f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19173:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19177:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1917b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1917f:	48 89 c7             	mov    %rax,%rdi
   19182:	e8 bb 04 00 00       	call   19642 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   19187:	49 89 c4             	mov    %rax,%r12
   1918a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1918e:	48 89 c7             	mov    %rax,%rdi
   19191:	e8 9e 04 00 00       	call   19634 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   19196:	48 89 c3             	mov    %rax,%rbx
   19199:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1919d:	48 89 c7             	mov    %rax,%rdi
   191a0:	e8 8f 04 00 00       	call   19634 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   191a5:	4c 89 e2             	mov    %r12,%rdx
   191a8:	48 89 de             	mov    %rbx,%rsi
   191ab:	48 89 c7             	mov    %rax,%rdi
   191ae:	e8 9d 04 00 00       	call   19650 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   191b3:	48 89 c2             	mov    %rax,%rdx
   191b6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   191ba:	48 89 d6             	mov    %rdx,%rsi
   191bd:	48 89 c7             	mov    %rax,%rdi
   191c0:	e8 b8 04 00 00       	call   1967d <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   191c5:	48 83 c4 20          	add    $0x20,%rsp
   191c9:	5b                   	pop    %rbx
   191ca:	41 5c                	pop    %r12
   191cc:	5d                   	pop    %rbp
   191cd:	c3                   	ret

00000000000191ce <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   191ce:	55                   	push   %rbp
   191cf:	48 89 e5             	mov    %rsp,%rbp
   191d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   191d6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   191dd:	ff ff 0f 
      }
   191e0:	5d                   	pop    %rbp
   191e1:	c3                   	ret

00000000000191e2 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   191e2:	55                   	push   %rbp
   191e3:	48 89 e5             	mov    %rsp,%rbp
   191e6:	48 83 ec 20          	sub    $0x20,%rsp
   191ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   191ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   191f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   191f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191fa:	48 89 c7             	mov    %rax,%rdi
   191fd:	e8 cc ff ff ff       	call   191ce <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   19202:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19206:	0f 92 c0             	setb   %al
   19209:	0f b6 c0             	movzbl %al,%eax
   1920c:	48 85 c0             	test   %rax,%rax
   1920f:	0f 95 c0             	setne  %al
   19212:	84 c0                	test   %al,%al
   19214:	74 1a                	je     19230 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   19216:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1921d:	ff ff 1f 
   19220:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   19224:	73 05                	jae    1922b <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   19226:	e8 a5 b0 fe ff       	call   42d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1922b:	e8 d0 ae fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   19230:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19234:	48 c1 e0 03          	shl    $0x3,%rax
   19238:	48 89 c7             	mov    %rax,%rdi
   1923b:	e8 b0 b1 fe ff       	call   43f0 <_Znwm@plt>
   19240:	90                   	nop
      }
   19241:	c9                   	leave
   19242:	c3                   	ret

0000000000019243 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   19243:	55                   	push   %rbp
   19244:	48 89 e5             	mov    %rsp,%rbp
   19247:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1924b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1924f:	5d                   	pop    %rbp
   19250:	c3                   	ret

0000000000019251 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   19251:	55                   	push   %rbp
   19252:	48 89 e5             	mov    %rsp,%rbp
   19255:	48 83 ec 10          	sub    $0x10,%rsp
   19259:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1925d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19261:	48 89 c6             	mov    %rax,%rsi
   19264:	bf 08 00 00 00       	mov    $0x8,%edi
   19269:	e8 1b be fe ff       	call   5089 <_ZnwmPv>
   1926e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19275:	90                   	nop
   19276:	c9                   	leave
   19277:	c3                   	ret

0000000000019278 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   19278:	55                   	push   %rbp
   19279:	48 89 e5             	mov    %rsp,%rbp
   1927c:	48 83 ec 20          	sub    $0x20,%rsp
   19280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19284:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19288:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1928c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19290:	48 89 c7             	mov    %rax,%rdi
   19293:	e8 f7 03 00 00       	call   1968f <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   19298:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1929c:	48 89 c7             	mov    %rax,%rdi
   1929f:	e8 f7 bd fe ff       	call   509b <_ZSt17__size_to_integerm>
   192a4:	48 89 c1             	mov    %rax,%rcx
   192a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   192af:	48 89 ce             	mov    %rcx,%rsi
   192b2:	48 89 c7             	mov    %rax,%rdi
   192b5:	e8 e0 03 00 00       	call   1969a <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   192ba:	c9                   	leave
   192bb:	c3                   	ret

00000000000192bc <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   192bc:	55                   	push   %rbp
   192bd:	48 89 e5             	mov    %rsp,%rbp
   192c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   192c4:	90                   	nop
   192c5:	5d                   	pop    %rbp
   192c6:	c3                   	ret

00000000000192c7 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   192c7:	55                   	push   %rbp
   192c8:	48 89 e5             	mov    %rsp,%rbp
   192cb:	48 83 ec 20          	sub    $0x20,%rsp
   192cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   192d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   192db:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   192e0:	75 06                	jne    192e8 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   192e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192e6:	eb 3a                	jmp    19322 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   192e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192ec:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   192f3:	00 
   192f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192f8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   192fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19304:	48 89 ce             	mov    %rcx,%rsi
   19307:	48 89 c7             	mov    %rax,%rdi
   1930a:	e8 e8 03 00 00       	call   196f7 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1930f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19313:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1931a:	00 
   1931b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1931f:	48 01 d0             	add    %rdx,%rax
    }
   19322:	c9                   	leave
   19323:	c3                   	ret

0000000000019324 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   19324:	55                   	push   %rbp
   19325:	48 89 e5             	mov    %rsp,%rbp
   19328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1932c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19330:	5d                   	pop    %rbp
   19331:	c3                   	ret

0000000000019332 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   19332:	55                   	push   %rbp
   19333:	48 89 e5             	mov    %rsp,%rbp
   19336:	41 54                	push   %r12
   19338:	53                   	push   %rbx
   19339:	48 83 ec 20          	sub    $0x20,%rsp
   1933d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19341:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19345:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   19349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1934d:	48 89 c7             	mov    %rax,%rdi
   19350:	e8 34 ee ff ff       	call   18189 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   19355:	49 89 c4             	mov    %rax,%r12
   19358:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1935c:	48 89 c7             	mov    %rax,%rdi
   1935f:	e8 c1 03 00 00       	call   19725 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   19364:	48 89 c3             	mov    %rax,%rbx
   19367:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1936b:	48 89 c7             	mov    %rax,%rdi
   1936e:	e8 b2 03 00 00       	call   19725 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   19373:	4c 89 e2             	mov    %r12,%rdx
   19376:	48 89 de             	mov    %rbx,%rsi
   19379:	48 89 c7             	mov    %rax,%rdi
   1937c:	e8 b2 03 00 00       	call   19733 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   19381:	48 89 c2             	mov    %rax,%rdx
   19384:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   19388:	48 89 d6             	mov    %rdx,%rsi
   1938b:	48 89 c7             	mov    %rax,%rdi
   1938e:	e8 cd 03 00 00       	call   19760 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   19393:	48 83 c4 20          	add    $0x20,%rsp
   19397:	5b                   	pop    %rbx
   19398:	41 5c                	pop    %r12
   1939a:	5d                   	pop    %rbp
   1939b:	c3                   	ret

000000000001939c <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1939c:	55                   	push   %rbp
   1939d:	48 89 e5             	mov    %rsp,%rbp
   193a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   193a4:	90                   	nop
   193a5:	5d                   	pop    %rbp
   193a6:	c3                   	ret

00000000000193a7 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   193a7:	55                   	push   %rbp
   193a8:	48 89 e5             	mov    %rsp,%rbp
   193ab:	48 83 ec 20          	sub    $0x20,%rsp
   193af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   193b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   193b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   193bb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   193c0:	75 06                	jne    193c8 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   193c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193c6:	eb 3a                	jmp    19402 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   193c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   193cc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   193d3:	00 
   193d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193d8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   193dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   193e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193e4:	48 89 ce             	mov    %rcx,%rsi
   193e7:	48 89 c7             	mov    %rax,%rdi
   193ea:	e8 83 03 00 00       	call   19772 <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   193ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   193f3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   193fa:	00 
   193fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193ff:	48 01 d0             	add    %rdx,%rax
    }
   19402:	c9                   	leave
   19403:	c3                   	ret

0000000000019404 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   19404:	55                   	push   %rbp
   19405:	48 89 e5             	mov    %rsp,%rbp
   19408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1940c:	90                   	nop
   1940d:	5d                   	pop    %rbp
   1940e:	c3                   	ret

000000000001940f <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1940f:	55                   	push   %rbp
   19410:	48 89 e5             	mov    %rsp,%rbp
   19413:	48 83 ec 20          	sub    $0x20,%rsp
   19417:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1941b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1941f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   19423:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19428:	75 06                	jne    19430 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1942a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1942e:	eb 3a                	jmp    1946a <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   19430:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19434:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1943b:	00 
   1943c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19440:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   19444:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1944c:	48 89 ce             	mov    %rcx,%rsi
   1944f:	48 89 c7             	mov    %rax,%rdi
   19452:	e8 49 03 00 00       	call   197a0 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   19457:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1945b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19462:	00 
   19463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19467:	48 01 d0             	add    %rdx,%rax
    }
   1946a:	c9                   	leave
   1946b:	c3                   	ret

000000000001946c <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   1946c:	55                   	push   %rbp
   1946d:	48 89 e5             	mov    %rsp,%rbp
   19470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19478:	5d                   	pop    %rbp
   19479:	c3                   	ret

000000000001947a <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1947a:	55                   	push   %rbp
   1947b:	48 89 e5             	mov    %rsp,%rbp
   1947e:	41 54                	push   %r12
   19480:	53                   	push   %rbx
   19481:	48 83 ec 20          	sub    $0x20,%rsp
   19485:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19489:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1948d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   19491:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19495:	48 89 c7             	mov    %rax,%rdi
   19498:	e8 8c f1 ff ff       	call   18629 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1949d:	49 89 c4             	mov    %rax,%r12
   194a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   194a4:	48 89 c7             	mov    %rax,%rdi
   194a7:	e8 22 03 00 00       	call   197ce <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   194ac:	48 89 c3             	mov    %rax,%rbx
   194af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   194b3:	48 89 c7             	mov    %rax,%rdi
   194b6:	e8 13 03 00 00       	call   197ce <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   194bb:	4c 89 e2             	mov    %r12,%rdx
   194be:	48 89 de             	mov    %rbx,%rsi
   194c1:	48 89 c7             	mov    %rax,%rdi
   194c4:	e8 13 03 00 00       	call   197dc <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   194c9:	48 89 c2             	mov    %rax,%rdx
   194cc:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   194d0:	48 89 d6             	mov    %rdx,%rsi
   194d3:	48 89 c7             	mov    %rax,%rdi
   194d6:	e8 2e 03 00 00       	call   19809 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   194db:	48 83 c4 20          	add    $0x20,%rsp
   194df:	5b                   	pop    %rbx
   194e0:	41 5c                	pop    %r12
   194e2:	5d                   	pop    %rbp
   194e3:	c3                   	ret

00000000000194e4 <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   194e4:	55                   	push   %rbp
   194e5:	48 89 e5             	mov    %rsp,%rbp
   194e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   194ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194f0:	5d                   	pop    %rbp
   194f1:	c3                   	ret

00000000000194f2 <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   194f2:	55                   	push   %rbp
   194f3:	48 89 e5             	mov    %rsp,%rbp
   194f6:	41 54                	push   %r12
   194f8:	53                   	push   %rbx
   194f9:	48 83 ec 20          	sub    $0x20,%rsp
   194fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19501:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19505:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   19509:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1950d:	48 89 c7             	mov    %rax,%rdi
   19510:	e8 14 03 00 00       	call   19829 <_ZSt12__niter_baseIPjET_S1_>
   19515:	49 89 c4             	mov    %rax,%r12
   19518:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1951c:	48 89 c7             	mov    %rax,%rdi
   1951f:	e8 f7 02 00 00       	call   1981b <_ZSt12__niter_baseIPKjET_S2_>
   19524:	48 89 c3             	mov    %rax,%rbx
   19527:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1952b:	48 89 c7             	mov    %rax,%rdi
   1952e:	e8 e8 02 00 00       	call   1981b <_ZSt12__niter_baseIPKjET_S2_>
   19533:	4c 89 e2             	mov    %r12,%rdx
   19536:	48 89 de             	mov    %rbx,%rsi
   19539:	48 89 c7             	mov    %rax,%rdi
   1953c:	e8 f6 02 00 00       	call   19837 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   19541:	48 89 c2             	mov    %rax,%rdx
   19544:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   19548:	48 89 d6             	mov    %rdx,%rsi
   1954b:	48 89 c7             	mov    %rax,%rdi
   1954e:	e8 11 03 00 00       	call   19864 <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   19553:	48 83 c4 20          	add    $0x20,%rsp
   19557:	5b                   	pop    %rbx
   19558:	41 5c                	pop    %r12
   1955a:	5d                   	pop    %rbp
   1955b:	c3                   	ret

000000000001955c <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1955c:	55                   	push   %rbp
   1955d:	48 89 e5             	mov    %rsp,%rbp
   19560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19568:	5d                   	pop    %rbp
   19569:	c3                   	ret

000000000001956a <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1956a:	55                   	push   %rbp
   1956b:	48 89 e5             	mov    %rsp,%rbp
   1956e:	48 83 ec 20          	sub    $0x20,%rsp
   19572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19576:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1957a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1957e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19582:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1958a:	48 89 ce             	mov    %rcx,%rsi
   1958d:	48 89 c7             	mov    %rax,%rdi
   19590:	e8 e1 02 00 00       	call   19876 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   19595:	c9                   	leave
   19596:	c3                   	ret

0000000000019597 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   19597:	55                   	push   %rbp
   19598:	48 89 e5             	mov    %rsp,%rbp
   1959b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1959f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   195a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   195a7:	5d                   	pop    %rbp
   195a8:	c3                   	ret
   195a9:	90                   	nop

00000000000195aa <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   195aa:	55                   	push   %rbp
   195ab:	48 89 e5             	mov    %rsp,%rbp
   195ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   195b2:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   195b9:	1c c7 01 
      }
   195bc:	5d                   	pop    %rbp
   195bd:	c3                   	ret

00000000000195be <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   195be:	55                   	push   %rbp
   195bf:	48 89 e5             	mov    %rsp,%rbp
   195c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   195c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   195ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   195d2:	48 8b 12             	mov    (%rdx),%rdx
   195d5:	48 89 10             	mov    %rdx,(%rax)
      { }
   195d8:	90                   	nop
   195d9:	5d                   	pop    %rbp
   195da:	c3                   	ret
   195db:	90                   	nop

00000000000195dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   195dc:	55                   	push   %rbp
   195dd:	48 89 e5             	mov    %rsp,%rbp
   195e0:	48 83 ec 20          	sub    $0x20,%rsp
   195e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   195e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   195ec:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   195f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   195f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195f8:	48 89 ce             	mov    %rcx,%rsi
   195fb:	48 89 c7             	mov    %rax,%rdi
   195fe:	e8 a1 02 00 00       	call   198a4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   19603:	90                   	nop
   19604:	c9                   	leave
   19605:	c3                   	ret

0000000000019606 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   19606:	55                   	push   %rbp
   19607:	48 89 e5             	mov    %rsp,%rbp
   1960a:	48 83 ec 20          	sub    $0x20,%rsp
   1960e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19616:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1961a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1961e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19626:	48 89 ce             	mov    %rcx,%rsi
   19629:	48 89 c7             	mov    %rax,%rdi
   1962c:	e8 bd 02 00 00       	call   198ee <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   19631:	90                   	nop
   19632:	c9                   	leave
   19633:	c3                   	ret

0000000000019634 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   19634:	55                   	push   %rbp
   19635:	48 89 e5             	mov    %rsp,%rbp
   19638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1963c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19640:	5d                   	pop    %rbp
   19641:	c3                   	ret

0000000000019642 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   19642:	55                   	push   %rbp
   19643:	48 89 e5             	mov    %rsp,%rbp
   19646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1964a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1964e:	5d                   	pop    %rbp
   1964f:	c3                   	ret

0000000000019650 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   19650:	55                   	push   %rbp
   19651:	48 89 e5             	mov    %rsp,%rbp
   19654:	48 83 ec 20          	sub    $0x20,%rsp
   19658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1965c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19660:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   19664:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19668:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1966c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19670:	48 89 ce             	mov    %rcx,%rsi
   19673:	48 89 c7             	mov    %rax,%rdi
   19676:	e8 ae 02 00 00       	call   19929 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   1967b:	c9                   	leave
   1967c:	c3                   	ret

000000000001967d <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1967d:	55                   	push   %rbp
   1967e:	48 89 e5             	mov    %rsp,%rbp
   19681:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19685:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   19689:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1968d:	5d                   	pop    %rbp
   1968e:	c3                   	ret

000000000001968f <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1968f:	55                   	push   %rbp
   19690:	48 89 e5             	mov    %rsp,%rbp
   19693:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   19697:	90                   	nop
   19698:	5d                   	pop    %rbp
   19699:	c3                   	ret

000000000001969a <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1969a:	55                   	push   %rbp
   1969b:	48 89 e5             	mov    %rsp,%rbp
   1969e:	48 83 ec 20          	sub    $0x20,%rsp
   196a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   196aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   196ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   196b3:	75 06                	jne    196bb <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   196b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196b9:	eb 3a                	jmp    196f5 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   196bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196bf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   196c6:	00 
   196c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196cb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   196cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   196d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196d7:	48 89 ce             	mov    %rcx,%rsi
   196da:	48 89 c7             	mov    %rax,%rdi
   196dd:	e8 74 02 00 00       	call   19956 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   196e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   196e6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   196ed:	00 
   196ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196f2:	48 01 d0             	add    %rdx,%rax
    }
   196f5:	c9                   	leave
   196f6:	c3                   	ret

00000000000196f7 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   196f7:	55                   	push   %rbp
   196f8:	48 89 e5             	mov    %rsp,%rbp
   196fb:	48 83 ec 20          	sub    $0x20,%rsp
   196ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19703:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19707:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1970b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1970f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19717:	48 89 ce             	mov    %rcx,%rsi
   1971a:	48 89 c7             	mov    %rax,%rdi
   1971d:	e8 62 02 00 00       	call   19984 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   19722:	90                   	nop
   19723:	c9                   	leave
   19724:	c3                   	ret

0000000000019725 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   19725:	55                   	push   %rbp
   19726:	48 89 e5             	mov    %rsp,%rbp
   19729:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1972d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19731:	5d                   	pop    %rbp
   19732:	c3                   	ret

0000000000019733 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   19733:	55                   	push   %rbp
   19734:	48 89 e5             	mov    %rsp,%rbp
   19737:	48 83 ec 20          	sub    $0x20,%rsp
   1973b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1973f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19743:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   19747:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1974b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1974f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19753:	48 89 ce             	mov    %rcx,%rsi
   19756:	48 89 c7             	mov    %rax,%rdi
   19759:	e8 61 02 00 00       	call   199bf <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   1975e:	c9                   	leave
   1975f:	c3                   	ret

0000000000019760 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   19760:	55                   	push   %rbp
   19761:	48 89 e5             	mov    %rsp,%rbp
   19764:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19768:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1976c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19770:	5d                   	pop    %rbp
   19771:	c3                   	ret

0000000000019772 <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   19772:	55                   	push   %rbp
   19773:	48 89 e5             	mov    %rsp,%rbp
   19776:	48 83 ec 20          	sub    $0x20,%rsp
   1977a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1977e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19782:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   19786:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1978a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1978e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19792:	48 89 ce             	mov    %rcx,%rsi
   19795:	48 89 c7             	mov    %rax,%rdi
   19798:	e8 4f 02 00 00       	call   199ec <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1979d:	90                   	nop
   1979e:	c9                   	leave
   1979f:	c3                   	ret

00000000000197a0 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   197a0:	55                   	push   %rbp
   197a1:	48 89 e5             	mov    %rsp,%rbp
   197a4:	48 83 ec 20          	sub    $0x20,%rsp
   197a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   197b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   197b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   197b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   197bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197c0:	48 89 ce             	mov    %rcx,%rsi
   197c3:	48 89 c7             	mov    %rax,%rdi
   197c6:	e8 5c 02 00 00       	call   19a27 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   197cb:	90                   	nop
   197cc:	c9                   	leave
   197cd:	c3                   	ret

00000000000197ce <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   197ce:	55                   	push   %rbp
   197cf:	48 89 e5             	mov    %rsp,%rbp
   197d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   197d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197da:	5d                   	pop    %rbp
   197db:	c3                   	ret

00000000000197dc <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   197dc:	55                   	push   %rbp
   197dd:	48 89 e5             	mov    %rsp,%rbp
   197e0:	48 83 ec 20          	sub    $0x20,%rsp
   197e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   197e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   197ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   197f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   197f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   197f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   197fc:	48 89 ce             	mov    %rcx,%rsi
   197ff:	48 89 c7             	mov    %rax,%rdi
   19802:	e8 5b 02 00 00       	call   19a62 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   19807:	c9                   	leave
   19808:	c3                   	ret

0000000000019809 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   19809:	55                   	push   %rbp
   1980a:	48 89 e5             	mov    %rsp,%rbp
   1980d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19811:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   19815:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19819:	5d                   	pop    %rbp
   1981a:	c3                   	ret

000000000001981b <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   1981b:	55                   	push   %rbp
   1981c:	48 89 e5             	mov    %rsp,%rbp
   1981f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19827:	5d                   	pop    %rbp
   19828:	c3                   	ret

0000000000019829 <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   19829:	55                   	push   %rbp
   1982a:	48 89 e5             	mov    %rsp,%rbp
   1982d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   19831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19835:	5d                   	pop    %rbp
   19836:	c3                   	ret

0000000000019837 <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   19837:	55                   	push   %rbp
   19838:	48 89 e5             	mov    %rsp,%rbp
   1983b:	48 83 ec 20          	sub    $0x20,%rsp
   1983f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19843:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19847:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1984b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1984f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19857:	48 89 ce             	mov    %rcx,%rsi
   1985a:	48 89 c7             	mov    %rax,%rdi
   1985d:	e8 2d 02 00 00       	call   19a8f <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   19862:	c9                   	leave
   19863:	c3                   	ret

0000000000019864 <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   19864:	55                   	push   %rbp
   19865:	48 89 e5             	mov    %rsp,%rbp
   19868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1986c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   19870:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19874:	5d                   	pop    %rbp
   19875:	c3                   	ret

0000000000019876 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   19876:	55                   	push   %rbp
   19877:	48 89 e5             	mov    %rsp,%rbp
   1987a:	48 83 ec 20          	sub    $0x20,%rsp
   1987e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19882:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19886:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1988a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1988e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19896:	48 89 ce             	mov    %rcx,%rsi
   19899:	48 89 c7             	mov    %rax,%rdi
   1989c:	e8 1b 02 00 00       	call   19abc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   198a1:	c9                   	leave
   198a2:	c3                   	ret
   198a3:	90                   	nop

00000000000198a4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   198a4:	55                   	push   %rbp
   198a5:	48 89 e5             	mov    %rsp,%rbp
   198a8:	53                   	push   %rbx
   198a9:	48 83 ec 28          	sub    $0x28,%rsp
   198ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   198b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   198b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   198b9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   198bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   198c1:	48 89 c7             	mov    %rax,%rdi
   198c4:	e8 52 02 00 00       	call   19b1b <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   198c9:	48 89 c7             	mov    %rax,%rdi
   198cc:	e8 64 02 00 00       	call   19b35 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   198d1:	48 89 c6             	mov    %rax,%rsi
   198d4:	48 89 df             	mov    %rbx,%rdi
   198d7:	e8 54 a9 fe ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   198dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198e0:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   198e7:	90                   	nop
   198e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   198ec:	c9                   	leave
   198ed:	c3                   	ret

00000000000198ee <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   198ee:	55                   	push   %rbp
   198ef:	48 89 e5             	mov    %rsp,%rbp
   198f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   198f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   198fa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   198fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19902:	48 8b 00             	mov    (%rax),%rax
   19905:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   19909:	eb 10                	jmp    1991b <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1990b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1990f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19913:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   19916:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1991b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1991f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19923:	75 e6                	jne    1990b <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   19925:	90                   	nop
   19926:	90                   	nop
   19927:	5d                   	pop    %rbp
   19928:	c3                   	ret

0000000000019929 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   19929:	55                   	push   %rbp
   1992a:	48 89 e5             	mov    %rsp,%rbp
   1992d:	48 83 ec 20          	sub    $0x20,%rsp
   19931:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19935:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19939:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1993d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19941:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19949:	48 89 ce             	mov    %rcx,%rsi
   1994c:	48 89 c7             	mov    %rax,%rdi
   1994f:	e8 ef 01 00 00       	call   19b43 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   19954:	c9                   	leave
   19955:	c3                   	ret

0000000000019956 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   19956:	55                   	push   %rbp
   19957:	48 89 e5             	mov    %rsp,%rbp
   1995a:	48 83 ec 20          	sub    $0x20,%rsp
   1995e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19962:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19966:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1996a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1996e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19976:	48 89 ce             	mov    %rcx,%rsi
   19979:	48 89 c7             	mov    %rax,%rdi
   1997c:	e8 44 02 00 00       	call   19bc5 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   19981:	90                   	nop
   19982:	c9                   	leave
   19983:	c3                   	ret

0000000000019984 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   19984:	55                   	push   %rbp
   19985:	48 89 e5             	mov    %rsp,%rbp
   19988:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1998c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19990:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   19994:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19998:	48 8b 00             	mov    (%rax),%rax
   1999b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1999f:	eb 10                	jmp    199b1 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   199a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   199a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   199a9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   199ac:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   199b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   199b5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   199b9:	75 e6                	jne    199a1 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   199bb:	90                   	nop
   199bc:	90                   	nop
   199bd:	5d                   	pop    %rbp
   199be:	c3                   	ret

00000000000199bf <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   199bf:	55                   	push   %rbp
   199c0:	48 89 e5             	mov    %rsp,%rbp
   199c3:	48 83 ec 20          	sub    $0x20,%rsp
   199c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   199cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   199cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   199d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   199d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   199db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   199df:	48 89 ce             	mov    %rcx,%rsi
   199e2:	48 89 c7             	mov    %rax,%rdi
   199e5:	e8 16 02 00 00       	call   19c00 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   199ea:	c9                   	leave
   199eb:	c3                   	ret

00000000000199ec <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   199ec:	55                   	push   %rbp
   199ed:	48 89 e5             	mov    %rsp,%rbp
   199f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   199f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   199f8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   199fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a00:	48 8b 00             	mov    (%rax),%rax
   19a03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   19a07:	eb 10                	jmp    19a19 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   19a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a0d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19a11:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   19a14:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   19a19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a1d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19a21:	75 e6                	jne    19a09 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   19a23:	90                   	nop
   19a24:	90                   	nop
   19a25:	5d                   	pop    %rbp
   19a26:	c3                   	ret

0000000000019a27 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   19a27:	55                   	push   %rbp
   19a28:	48 89 e5             	mov    %rsp,%rbp
   19a2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19a2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19a33:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   19a37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19a3b:	48 8b 00             	mov    (%rax),%rax
   19a3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   19a42:	eb 10                	jmp    19a54 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   19a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19a4c:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   19a4f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   19a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a58:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19a5c:	75 e6                	jne    19a44 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   19a5e:	90                   	nop
   19a5f:	90                   	nop
   19a60:	5d                   	pop    %rbp
   19a61:	c3                   	ret

0000000000019a62 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   19a62:	55                   	push   %rbp
   19a63:	48 89 e5             	mov    %rsp,%rbp
   19a66:	48 83 ec 20          	sub    $0x20,%rsp
   19a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   19a76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19a7a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a82:	48 89 ce             	mov    %rcx,%rsi
   19a85:	48 89 c7             	mov    %rax,%rdi
   19a88:	e8 d2 01 00 00       	call   19c5f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   19a8d:	c9                   	leave
   19a8e:	c3                   	ret

0000000000019a8f <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   19a8f:	55                   	push   %rbp
   19a90:	48 89 e5             	mov    %rsp,%rbp
   19a93:	48 83 ec 20          	sub    $0x20,%rsp
   19a97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a9f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   19aa3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19aa7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19aaf:	48 89 ce             	mov    %rcx,%rsi
   19ab2:	48 89 c7             	mov    %rax,%rdi
   19ab5:	e8 04 02 00 00       	call   19cbe <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   19aba:	c9                   	leave
   19abb:	c3                   	ret

0000000000019abc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   19abc:	55                   	push   %rbp
   19abd:	48 89 e5             	mov    %rsp,%rbp
   19ac0:	48 83 ec 30          	sub    $0x30,%rsp
   19ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19ac8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19acc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   19ad0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ad4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19ad8:	48 c1 f8 03          	sar    $0x3,%rax
   19adc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   19ae0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19ae5:	74 1f                	je     19b06 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   19ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19aeb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19af2:	00 
   19af3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19af7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19afb:	48 89 ce             	mov    %rcx,%rsi
   19afe:	48 89 c7             	mov    %rax,%rdi
   19b01:	e8 6a ac fe ff       	call   4770 <memmove@plt>
	  return __result + _Num;
   19b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b0a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19b11:	00 
   19b12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19b16:	48 01 d0             	add    %rdx,%rax
	}
   19b19:	c9                   	leave
   19b1a:	c3                   	ret

0000000000019b1b <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   19b1b:	55                   	push   %rbp
   19b1c:	48 89 e5             	mov    %rsp,%rbp
   19b1f:	48 83 ec 10          	sub    $0x10,%rsp
   19b23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   19b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b2b:	48 89 c7             	mov    %rax,%rdi
   19b2e:	e8 ea 01 00 00       	call   19d1d <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   19b33:	c9                   	leave
   19b34:	c3                   	ret

0000000000019b35 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19b35:	55                   	push   %rbp
   19b36:	48 89 e5             	mov    %rsp,%rbp
   19b39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b41:	5d                   	pop    %rbp
   19b42:	c3                   	ret

0000000000019b43 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   19b43:	55                   	push   %rbp
   19b44:	48 89 e5             	mov    %rsp,%rbp
   19b47:	48 83 ec 30          	sub    $0x30,%rsp
   19b4b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19b4f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19b53:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   19b57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b5b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19b5f:	48 c1 f8 04          	sar    $0x4,%rax
   19b63:	48 89 c2             	mov    %rax,%rdx
   19b66:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   19b6d:	e3 38 8e 
   19b70:	48 0f af c2          	imul   %rdx,%rax
   19b74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   19b78:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19b7d:	74 28                	je     19ba7 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   19b7f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19b83:	48 89 d0             	mov    %rdx,%rax
   19b86:	48 c1 e0 03          	shl    $0x3,%rax
   19b8a:	48 01 d0             	add    %rdx,%rax
   19b8d:	48 c1 e0 04          	shl    $0x4,%rax
   19b91:	48 89 c2             	mov    %rax,%rdx
   19b94:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19b98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19b9c:	48 89 ce             	mov    %rcx,%rsi
   19b9f:	48 89 c7             	mov    %rax,%rdi
   19ba2:	e8 c9 ab fe ff       	call   4770 <memmove@plt>
	  return __result + _Num;
   19ba7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19bab:	48 89 d0             	mov    %rdx,%rax
   19bae:	48 c1 e0 03          	shl    $0x3,%rax
   19bb2:	48 01 d0             	add    %rdx,%rax
   19bb5:	48 c1 e0 04          	shl    $0x4,%rax
   19bb9:	48 89 c2             	mov    %rax,%rdx
   19bbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bc0:	48 01 d0             	add    %rdx,%rax
	}
   19bc3:	c9                   	leave
   19bc4:	c3                   	ret

0000000000019bc5 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   19bc5:	55                   	push   %rbp
   19bc6:	48 89 e5             	mov    %rsp,%rbp
   19bc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19bcd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19bd1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   19bd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bd9:	48 8b 00             	mov    (%rax),%rax
   19bdc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   19be0:	eb 10                	jmp    19bf2 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   19be2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19be6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   19bea:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   19bed:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   19bf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bf6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19bfa:	75 e6                	jne    19be2 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   19bfc:	90                   	nop
   19bfd:	90                   	nop
   19bfe:	5d                   	pop    %rbp
   19bff:	c3                   	ret

0000000000019c00 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   19c00:	55                   	push   %rbp
   19c01:	48 89 e5             	mov    %rsp,%rbp
   19c04:	48 83 ec 30          	sub    $0x30,%rsp
   19c08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19c0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19c10:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   19c14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c18:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19c1c:	48 c1 f8 03          	sar    $0x3,%rax
   19c20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   19c24:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19c29:	74 1f                	je     19c4a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   19c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c2f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19c36:	00 
   19c37:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19c3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19c3f:	48 89 ce             	mov    %rcx,%rsi
   19c42:	48 89 c7             	mov    %rax,%rdi
   19c45:	e8 26 ab fe ff       	call   4770 <memmove@plt>
	  return __result + _Num;
   19c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c4e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19c55:	00 
   19c56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19c5a:	48 01 d0             	add    %rdx,%rax
	}
   19c5d:	c9                   	leave
   19c5e:	c3                   	ret

0000000000019c5f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   19c5f:	55                   	push   %rbp
   19c60:	48 89 e5             	mov    %rsp,%rbp
   19c63:	48 83 ec 30          	sub    $0x30,%rsp
   19c67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19c6b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19c6f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   19c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c77:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19c7b:	48 c1 f8 03          	sar    $0x3,%rax
   19c7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   19c83:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19c88:	74 1f                	je     19ca9 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   19c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c8e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19c95:	00 
   19c96:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19c9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19c9e:	48 89 ce             	mov    %rcx,%rsi
   19ca1:	48 89 c7             	mov    %rax,%rdi
   19ca4:	e8 c7 aa fe ff       	call   4770 <memmove@plt>
	  return __result + _Num;
   19ca9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19cad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19cb4:	00 
   19cb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19cb9:	48 01 d0             	add    %rdx,%rax
	}
   19cbc:	c9                   	leave
   19cbd:	c3                   	ret

0000000000019cbe <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   19cbe:	55                   	push   %rbp
   19cbf:	48 89 e5             	mov    %rsp,%rbp
   19cc2:	48 83 ec 30          	sub    $0x30,%rsp
   19cc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19cca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19cce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   19cd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19cd6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19cda:	48 c1 f8 02          	sar    $0x2,%rax
   19cde:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   19ce2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19ce7:	74 1f                	je     19d08 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   19ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ced:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   19cf4:	00 
   19cf5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19cf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19cfd:	48 89 ce             	mov    %rcx,%rsi
   19d00:	48 89 c7             	mov    %rax,%rdi
   19d03:	e8 68 aa fe ff       	call   4770 <memmove@plt>
	  return __result + _Num;
   19d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d0c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   19d13:	00 
   19d14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19d18:	48 01 d0             	add    %rdx,%rax
	}
   19d1b:	c9                   	leave
   19d1c:	c3                   	ret

0000000000019d1d <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   19d1d:	55                   	push   %rbp
   19d1e:	48 89 e5             	mov    %rsp,%rbp
   19d21:	48 83 ec 10          	sub    $0x10,%rsp
   19d25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   19d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d2d:	48 89 c7             	mov    %rax,%rdi
   19d30:	e8 02 00 00 00       	call   19d37 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   19d35:	c9                   	leave
   19d36:	c3                   	ret

0000000000019d37 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   19d37:	55                   	push   %rbp
   19d38:	48 89 e5             	mov    %rsp,%rbp
   19d3b:	48 83 ec 10          	sub    $0x10,%rsp
   19d3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d47:	48 89 c7             	mov    %rax,%rdi
   19d4a:	e8 02 00 00 00       	call   19d51 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   19d4f:	c9                   	leave
   19d50:	c3                   	ret

0000000000019d51 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   19d51:	55                   	push   %rbp
   19d52:	48 89 e5             	mov    %rsp,%rbp
   19d55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d5d:	48 8b 00             	mov    (%rax),%rax
   19d60:	5d                   	pop    %rbp
   19d61:	c3                   	ret

0000000000019d62 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   19d62:	55                   	push   %rbp
   19d63:	48 89 e5             	mov    %rsp,%rbp
   19d66:	48 83 ec 10          	sub    $0x10,%rsp
   19d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d6e:	48 8d 15 4b 2f 01 00 	lea    0x12f4b(%rip),%rdx        # 2ccc0 <_ZTVSt19bad_optional_access+0x10>
   19d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d79:	48 89 10             	mov    %rdx,(%rax)
   19d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d80:	48 89 c7             	mov    %rax,%rdi
   19d83:	e8 b8 aa fe ff       	call   4840 <_ZNSt9exceptionD2Ev@plt>
   19d88:	90                   	nop
   19d89:	c9                   	leave
   19d8a:	c3                   	ret
   19d8b:	90                   	nop

0000000000019d8c <_ZNSt19bad_optional_accessD0Ev>:
   19d8c:	55                   	push   %rbp
   19d8d:	48 89 e5             	mov    %rsp,%rbp
   19d90:	48 83 ec 10          	sub    $0x10,%rsp
   19d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19d9c:	48 89 c7             	mov    %rax,%rdi
   19d9f:	e8 be ff ff ff       	call   19d62 <_ZNSt19bad_optional_accessD1Ev>
   19da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19da8:	be 08 00 00 00       	mov    $0x8,%esi
   19dad:	48 89 c7             	mov    %rax,%rdi
   19db0:	e8 5b a6 fe ff       	call   4410 <_ZdlPvm@plt>
   19db5:	c9                   	leave
   19db6:	c3                   	ret

Disassembly of section .fini:

0000000000019db8 <_fini>:
   19db8:	48 83 ec 08          	sub    $0x8,%rsp
   19dbc:	48 83 c4 08          	add    $0x8,%rsp
   19dc0:	c3                   	ret
