
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 bd bf 01 00 	mov    0x1bfbd(%rip),%rax        # 1efc8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca bf 01 00    	push   0x1bfca(%rip)        # 1eff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc bf 01 00    	jmp    *0x1bfcc(%rip)        # 1eff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca bf 01 00    	jmp    *0x1bfca(%rip)        # 1f000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 bf 01 00    	jmp    *0x1bfc2(%rip)        # 1f008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba bf 01 00    	jmp    *0x1bfba(%rip)        # 1f010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZNSolsEm@plt>:
    3060:	ff 25 b2 bf 01 00    	jmp    *0x1bfb2(%rip)        # 1f018 <_ZNSolsEm@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZSt9terminatev@plt>:
    3070:	ff 25 aa bf 01 00    	jmp    *0x1bfaa(%rip)        # 1f020 <_ZSt9terminatev@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>:
    3080:	ff 25 a2 bf 01 00    	jmp    *0x1bfa2(%rip)        # 1f028 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@GLIBCXX_3.4.30>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <glfwDestroyWindow@plt>:
    3090:	ff 25 9a bf 01 00    	jmp    *0x1bf9a(%rip)        # 1f030 <glfwDestroyWindow@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZSt17__throw_bad_allocv@plt>:
    30a0:	ff 25 92 bf 01 00    	jmp    *0x1bf92(%rip)        # 1f038 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZSt25__throw_bad_function_callv@plt>:
    30b0:	ff 25 8a bf 01 00    	jmp    *0x1bf8a(%rip)        # 1f040 <_ZSt25__throw_bad_function_callv@GLIBCXX_3.4.14>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30c0:	ff 25 82 bf 01 00    	jmp    *0x1bf82(%rip)        # 1f048 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <vkGetPhysicalDeviceProperties@plt>:
    30d0:	ff 25 7a bf 01 00    	jmp    *0x1bf7a(%rip)        # 1f050 <vkGetPhysicalDeviceProperties@Base>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <__cxa_begin_catch@plt>:
    30e0:	ff 25 72 bf 01 00    	jmp    *0x1bf72(%rip)        # 1f058 <__cxa_begin_catch@CXXABI_1.3>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    30f0:	ff 25 6a bf 01 00    	jmp    *0x1bf6a(%rip)        # 1f060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <strlen@plt>:
    3100:	ff 25 62 bf 01 00    	jmp    *0x1bf62(%rip)        # 1f068 <strlen@GLIBC_2.2.5>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <_ZNSt6thread6_StateD2Ev@plt>:
    3110:	ff 25 5a bf 01 00    	jmp    *0x1bf5a(%rip)        # 1f070 <_ZNSt6thread6_StateD2Ev@GLIBCXX_3.4.22>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <__cxa_allocate_exception@plt>:
    3120:	ff 25 52 bf 01 00    	jmp    *0x1bf52(%rip)        # 1f078 <__cxa_allocate_exception@CXXABI_1.3>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZNSt18condition_variable10notify_oneEv@plt>:
    3130:	ff 25 4a bf 01 00    	jmp    *0x1bf4a(%rip)        # 1f080 <_ZNSt18condition_variable10notify_oneEv@GLIBCXX_3.4.11>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZSt20__throw_length_errorPKc@plt>:
    3140:	ff 25 42 bf 01 00    	jmp    *0x1bf42(%rip)        # 1f088 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <vkEnumeratePhysicalDevices@plt>:
    3150:	ff 25 3a bf 01 00    	jmp    *0x1bf3a(%rip)        # 1f090 <vkEnumeratePhysicalDevices@Base>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3160:	ff 25 32 bf 01 00    	jmp    *0x1bf32(%rip)        # 1f098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3170:	ff 25 2a bf 01 00    	jmp    *0x1bf2a(%rip)        # 1f0a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZSt20__throw_system_errori@plt>:
    3180:	ff 25 22 bf 01 00    	jmp    *0x1bf22(%rip)        # 1f0a8 <_ZSt20__throw_system_errori@GLIBCXX_3.4.11>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3190:	ff 25 1a bf 01 00    	jmp    *0x1bf1a(%rip)        # 1f0b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    31a0:	ff 25 12 bf 01 00    	jmp    *0x1bf12(%rip)        # 1f0b8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <_ZSt19__throw_logic_errorPKc@plt>:
    31b0:	ff 25 0a bf 01 00    	jmp    *0x1bf0a(%rip)        # 1f0c0 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <__cxa_free_exception@plt>:
    31c0:	ff 25 02 bf 01 00    	jmp    *0x1bf02(%rip)        # 1f0c8 <__cxa_free_exception@CXXABI_1.3>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <_ZNSolsEf@plt>:
    31d0:	ff 25 fa be 01 00    	jmp    *0x1befa(%rip)        # 1f0d0 <_ZNSolsEf@GLIBCXX_3.4>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <pthread_mutex_unlock@plt>:
    31e0:	ff 25 f2 be 01 00    	jmp    *0x1bef2(%rip)        # 1f0d8 <pthread_mutex_unlock@GLIBC_2.2.5>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    31f0:	ff 25 ea be 01 00    	jmp    *0x1beea(%rip)        # 1f0e0 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <vkGetPhysicalDeviceFeatures@plt>:
    3200:	ff 25 e2 be 01 00    	jmp    *0x1bee2(%rip)        # 1f0e8 <vkGetPhysicalDeviceFeatures@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <glfwGetRequiredInstanceExtensions@plt>:
    3210:	ff 25 da be 01 00    	jmp    *0x1beda(%rip)        # 1f0f0 <glfwGetRequiredInstanceExtensions@Base>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3220:	ff 25 d2 be 01 00    	jmp    *0x1bed2(%rip)        # 1f0f8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3230:	ff 25 ca be 01 00    	jmp    *0x1beca(%rip)        # 1f100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <vkDestroyDevice@plt>:
    3240:	ff 25 c2 be 01 00    	jmp    *0x1bec2(%rip)        # 1f108 <vkDestroyDevice@Base>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3250:	ff 25 ba be 01 00    	jmp    *0x1beba(%rip)        # 1f110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <glfwWindowHint@plt>:
    3260:	ff 25 b2 be 01 00    	jmp    *0x1beb2(%rip)        # 1f118 <glfwWindowHint@Base>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <__cxa_atexit@plt>:
    3270:	ff 25 aa be 01 00    	jmp    *0x1beaa(%rip)        # 1f120 <__cxa_atexit@GLIBC_2.2.5>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <pthread_self@plt>:
    3280:	ff 25 a2 be 01 00    	jmp    *0x1bea2(%rip)        # 1f128 <pthread_self@GLIBC_2.2.5>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>:
    3290:	ff 25 9a be 01 00    	jmp    *0x1be9a(%rip)        # 1f130 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@GLIBCXX_3.4.22>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <vkGetInstanceProcAddr@plt>:
    32a0:	ff 25 92 be 01 00    	jmp    *0x1be92(%rip)        # 1f138 <vkGetInstanceProcAddr@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <glfwPollEvents@plt>:
    32b0:	ff 25 8a be 01 00    	jmp    *0x1be8a(%rip)        # 1f140 <glfwPollEvents@Base>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    32c0:	ff 25 82 be 01 00    	jmp    *0x1be82(%rip)        # 1f148 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <_Znwm@plt>:
    32d0:	ff 25 7a be 01 00    	jmp    *0x1be7a(%rip)        # 1f150 <_Znwm@GLIBCXX_3.4>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZdlPvm@plt>:
    32e0:	ff 25 72 be 01 00    	jmp    *0x1be72(%rip)        # 1f158 <_ZdlPvm@CXXABI_1.3.9>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <vkDestroyInstance@plt>:
    32f0:	ff 25 6a be 01 00    	jmp    *0x1be6a(%rip)        # 1f160 <vkDestroyInstance@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <glfwTerminate@plt>:
    3300:	ff 25 62 be 01 00    	jmp    *0x1be62(%rip)        # 1f168 <glfwTerminate@Base>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3310:	ff 25 5a be 01 00    	jmp    *0x1be5a(%rip)        # 1f170 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <_ZNSolsEPFRSoS_E@plt>:
    3320:	ff 25 52 be 01 00    	jmp    *0x1be52(%rip)        # 1f178 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3330:	ff 25 4a be 01 00    	jmp    *0x1be4a(%rip)        # 1f180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3340:	ff 25 42 be 01 00    	jmp    *0x1be42(%rip)        # 1f188 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <_ZNSaIcED1Ev@plt>:
    3350:	ff 25 3a be 01 00    	jmp    *0x1be3a(%rip)        # 1f190 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3360:	ff 25 32 be 01 00    	jmp    *0x1be32(%rip)        # 1f198 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3370:	ff 25 2a be 01 00    	jmp    *0x1be2a(%rip)        # 1f1a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <glfwInit@plt>:
    3380:	ff 25 22 be 01 00    	jmp    *0x1be22(%rip)        # 1f1a8 <glfwInit@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3390:	ff 25 1a be 01 00    	jmp    *0x1be1a(%rip)        # 1f1b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <vkCreateInstance@plt>:
    33a0:	ff 25 12 be 01 00    	jmp    *0x1be12(%rip)        # 1f1b8 <vkCreateInstance@Base>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    33b0:	ff 25 0a be 01 00    	jmp    *0x1be0a(%rip)        # 1f1c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <vkEnumerateInstanceVersion@plt>:
    33c0:	ff 25 02 be 01 00    	jmp    *0x1be02(%rip)        # 1f1c8 <vkEnumerateInstanceVersion@Base>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    33d0:	ff 25 fa bd 01 00    	jmp    *0x1bdfa(%rip)        # 1f1d0 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <vkGetDeviceQueue@plt>:
    33e0:	ff 25 f2 bd 01 00    	jmp    *0x1bdf2(%rip)        # 1f1d8 <vkGetDeviceQueue@Base>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <_ZNSt6thread20hardware_concurrencyEv@plt>:
    33f0:	ff 25 ea bd 01 00    	jmp    *0x1bdea(%rip)        # 1f1e0 <_ZNSt6thread20hardware_concurrencyEv@GLIBCXX_3.4.17>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <vkEnumerateDeviceExtensionProperties@plt>:
    3400:	ff 25 e2 bd 01 00    	jmp    *0x1bde2(%rip)        # 1f1e8 <vkEnumerateDeviceExtensionProperties@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <_ZNSt18condition_variableC1Ev@plt>:
    3410:	ff 25 da bd 01 00    	jmp    *0x1bdda(%rip)        # 1f1f0 <_ZNSt18condition_variableC1Ev@GLIBCXX_3.4.11>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <__cxa_rethrow@plt>:
    3420:	ff 25 d2 bd 01 00    	jmp    *0x1bdd2(%rip)        # 1f1f8 <__cxa_rethrow@CXXABI_1.3>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <pthread_mutex_lock@plt>:
    3430:	ff 25 ca bd 01 00    	jmp    *0x1bdca(%rip)        # 1f200 <pthread_mutex_lock@GLIBC_2.2.5>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <vkCreateDevice@plt>:
    3440:	ff 25 c2 bd 01 00    	jmp    *0x1bdc2(%rip)        # 1f208 <vkCreateDevice@Base>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <_ZNSt8ios_base4InitC1Ev@plt>:
    3450:	ff 25 ba bd 01 00    	jmp    *0x1bdba(%rip)        # 1f210 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <glfwCreateWindowSurface@plt>:
    3460:	ff 25 b2 bd 01 00    	jmp    *0x1bdb2(%rip)        # 1f218 <glfwCreateWindowSurface@Base>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <glfwCreateWindow@plt>:
    3470:	ff 25 aa bd 01 00    	jmp    *0x1bdaa(%rip)        # 1f220 <glfwCreateWindow@Base>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <memmove@plt>:
    3480:	ff 25 a2 bd 01 00    	jmp    *0x1bda2(%rip)        # 1f228 <memmove@GLIBC_2.2.5>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <__cxa_end_catch@plt>:
    3490:	ff 25 9a bd 01 00    	jmp    *0x1bd9a(%rip)        # 1f230 <__cxa_end_catch@CXXABI_1.3>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt18condition_variable10notify_allEv@plt>:
    34a0:	ff 25 92 bd 01 00    	jmp    *0x1bd92(%rip)        # 1f238 <_ZNSt18condition_variable10notify_allEv@GLIBCXX_3.4.11>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <_ZNSt6thread4joinEv@plt>:
    34b0:	ff 25 8a bd 01 00    	jmp    *0x1bd8a(%rip)        # 1f240 <_ZNSt6thread4joinEv@GLIBCXX_3.4.11>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <__cxa_throw@plt>:
    34c0:	ff 25 82 bd 01 00    	jmp    *0x1bd82(%rip)        # 1f248 <__cxa_throw@CXXABI_1.3>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <vkDestroySurfaceKHR@plt>:
    34d0:	ff 25 7a bd 01 00    	jmp    *0x1bd7a(%rip)        # 1f250 <vkDestroySurfaceKHR@Base>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_Unwind_Resume@plt>:
    34e0:	ff 25 72 bd 01 00    	jmp    *0x1bd72(%rip)        # 1f258 <_Unwind_Resume@GCC_3.0>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSaIcEC1Ev@plt>:
    34f0:	ff 25 6a bd 01 00    	jmp    *0x1bd6a(%rip)        # 1f260 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3500:	ff 25 62 bd 01 00    	jmp    *0x1bd62(%rip)        # 1f268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <_ZNSt18condition_variableD1Ev@plt>:
    3510:	ff 25 5a bd 01 00    	jmp    *0x1bd5a(%rip)        # 1f270 <_ZNSt18condition_variableD1Ev@GLIBCXX_3.4.11>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <glfwWindowShouldClose@plt>:
    3520:	ff 25 52 bd 01 00    	jmp    *0x1bd52(%rip)        # 1f278 <glfwWindowShouldClose@Base>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3530:	ff 25 4a bd 01 00    	jmp    *0x1bd4a(%rip)        # 1f280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003540 <__cxa_finalize@plt>:
    3540:	ff 25 5a ba 01 00    	jmp    *0x1ba5a(%rip)        # 1efa0 <__cxa_finalize@GLIBC_2.2.5>
    3546:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003550 <_start>:
    3550:	31 ed                	xor    %ebp,%ebp
    3552:	49 89 d1             	mov    %rdx,%r9
    3555:	5e                   	pop    %rsi
    3556:	48 89 e2             	mov    %rsp,%rdx
    3559:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    355d:	50                   	push   %rax
    355e:	54                   	push   %rsp
    355f:	45 31 c0             	xor    %r8d,%r8d
    3562:	31 c9                	xor    %ecx,%ecx
    3564:	48 8d 3d d2 01 00 00 	lea    0x1d2(%rip),%rdi        # 373d <main>
    356b:	ff 15 3f ba 01 00    	call   *0x1ba3f(%rip)        # 1efb0 <__libc_start_main@GLIBC_2.34>
    3571:	f4                   	hlt
    3572:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3579:	00 00 00 
    357c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003580 <deregister_tm_clones>:
    3580:	48 8d 3d 21 bd 01 00 	lea    0x1bd21(%rip),%rdi        # 1f2a8 <__TMC_END__>
    3587:	48 8d 05 1a bd 01 00 	lea    0x1bd1a(%rip),%rax        # 1f2a8 <__TMC_END__>
    358e:	48 39 f8             	cmp    %rdi,%rax
    3591:	74 15                	je     35a8 <deregister_tm_clones+0x28>
    3593:	48 8b 05 26 ba 01 00 	mov    0x1ba26(%rip),%rax        # 1efc0 <_ITM_deregisterTMCloneTable@Base>
    359a:	48 85 c0             	test   %rax,%rax
    359d:	74 09                	je     35a8 <deregister_tm_clones+0x28>
    359f:	ff e0                	jmp    *%rax
    35a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35a8:	c3                   	ret
    35a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035b0 <register_tm_clones>:
    35b0:	48 8d 3d f1 bc 01 00 	lea    0x1bcf1(%rip),%rdi        # 1f2a8 <__TMC_END__>
    35b7:	48 8d 35 ea bc 01 00 	lea    0x1bcea(%rip),%rsi        # 1f2a8 <__TMC_END__>
    35be:	48 29 fe             	sub    %rdi,%rsi
    35c1:	48 89 f0             	mov    %rsi,%rax
    35c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    35c8:	48 c1 f8 03          	sar    $0x3,%rax
    35cc:	48 01 c6             	add    %rax,%rsi
    35cf:	48 d1 fe             	sar    %rsi
    35d2:	74 14                	je     35e8 <register_tm_clones+0x38>
    35d4:	48 8b 05 f5 b9 01 00 	mov    0x1b9f5(%rip),%rax        # 1efd0 <_ITM_registerTMCloneTable@Base>
    35db:	48 85 c0             	test   %rax,%rax
    35de:	74 08                	je     35e8 <register_tm_clones+0x38>
    35e0:	ff e0                	jmp    *%rax
    35e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    35e8:	c3                   	ret
    35e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035f0 <__do_global_dtors_aux>:
    35f0:	f3 0f 1e fa          	endbr64
    35f4:	80 3d f5 be 01 00 00 	cmpb   $0x0,0x1bef5(%rip)        # 1f4f0 <completed.0>
    35fb:	75 2b                	jne    3628 <__do_global_dtors_aux+0x38>
    35fd:	55                   	push   %rbp
    35fe:	48 83 3d 9a b9 01 00 	cmpq   $0x0,0x1b99a(%rip)        # 1efa0 <__cxa_finalize@GLIBC_2.2.5>
    3605:	00 
    3606:	48 89 e5             	mov    %rsp,%rbp
    3609:	74 0c                	je     3617 <__do_global_dtors_aux+0x27>
    360b:	48 8b 3d 7e bc 01 00 	mov    0x1bc7e(%rip),%rdi        # 1f290 <__dso_handle>
    3612:	e8 29 ff ff ff       	call   3540 <__cxa_finalize@plt>
    3617:	e8 64 ff ff ff       	call   3580 <deregister_tm_clones>
    361c:	c6 05 cd be 01 00 01 	movb   $0x1,0x1becd(%rip)        # 1f4f0 <completed.0>
    3623:	5d                   	pop    %rbp
    3624:	c3                   	ret
    3625:	0f 1f 00             	nopl   (%rax)
    3628:	c3                   	ret
    3629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003630 <frame_dummy>:
    3630:	f3 0f 1e fa          	endbr64
    3634:	e9 77 ff ff ff       	jmp    35b0 <register_tm_clones>

0000000000003639 <_ZL18__gthread_active_pv>:

#else /* not hppa-hpux */

static inline int
__gthread_active_p (void)
{
    3639:	55                   	push   %rbp
    363a:	48 89 e5             	mov    %rsp,%rbp
  return 1;
    363d:	b8 01 00 00 00       	mov    $0x1,%eax
}
    3642:	5d                   	pop    %rbp
    3643:	c3                   	ret

0000000000003644 <_Z14protected_mainv>:
#include <neko.hpp>

#include <iostream>

int protected_main() {
    3644:	55                   	push   %rbp
    3645:	48 89 e5             	mov    %rsp,%rbp
    3648:	53                   	push   %rbx
    3649:	48 83 ec 38          	sub    $0x38,%rsp
  auto start = std::chrono::steady_clock::now();
    364d:	e8 7e fd ff ff       	call   33d0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3652:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  auto engine = std::make_unique<neko::Engine>();
    3656:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    365a:	48 89 c7             	mov    %rax,%rdi
    365d:	e8 ff 20 00 00       	call   5761 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
  std::cout << "Load time: "
    3662:	48 8d 05 d7 df 00 00 	lea    0xdfd7(%rip),%rax        # 11640 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    3669:	48 89 c6             	mov    %rax,%rsi
    366c:	48 8d 05 4d bc 01 00 	lea    0x1bc4d(%rip),%rax        # 1f2c0 <_ZSt4cout@GLIBCXX_3.4>
    3673:	48 89 c7             	mov    %rax,%rdi
    3676:	e8 45 fc ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    367b:	48 89 c3             	mov    %rax,%rbx
            << static_cast<float>(
                   std::chrono::duration_cast<std::chrono::microseconds>(
                       std::chrono::steady_clock::now() - start)
    367e:	e8 4d fd ff ff       	call   33d0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3683:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3687:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    368b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    368f:	48 89 d6             	mov    %rdx,%rsi
    3692:	48 89 c7             	mov    %rax,%rdi
    3695:	e8 9a 21 00 00       	call   5834 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    369a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
                   std::chrono::duration_cast<std::chrono::microseconds>(
    369e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    36a2:	48 89 c7             	mov    %rax,%rdi
    36a5:	e8 cf 21 00 00       	call   5879 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    36aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
                       .count()) /
    36ae:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    36b2:	48 89 c7             	mov    %rax,%rdi
    36b5:	e8 da 21 00 00       	call   5894 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
            << static_cast<float>(
    36ba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    36be:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
                   1000.0f
    36c3:	f3 0f 10 0d 3d e0 00 	movss  0xe03d(%rip),%xmm1        # 11708 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    36ca:	00 
    36cb:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    36cf:	66 0f 7e c0          	movd   %xmm0,%eax
    36d3:	66 0f 6e c0          	movd   %eax,%xmm0
    36d7:	48 89 df             	mov    %rbx,%rdi
    36da:	e8 f1 fa ff ff       	call   31d0 <_ZNSolsEf@plt>
    36df:	48 89 c2             	mov    %rax,%rdx
            << " ms\n";
    36e2:	48 8d 05 63 df 00 00 	lea    0xdf63(%rip),%rax        # 1164c <_ZN6__pstl9execution2v1L5unseqE+0xd>
    36e9:	48 89 c6             	mov    %rax,%rsi
    36ec:	48 89 d7             	mov    %rdx,%rdi
    36ef:	e8 cc fb ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  engine->start();
    36f4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    36f8:	48 89 c7             	mov    %rax,%rdi
    36fb:	e8 a6 21 00 00       	call   58a6 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>
    3700:	48 89 c7             	mov    %rax,%rdi
    3703:	e8 54 0f 00 00       	call   465c <_ZN4neko6Engine5startEv>
  return EXIT_SUCCESS;
    3708:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    370d:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3711:	48 89 c7             	mov    %rax,%rdi
    3714:	e8 b7 20 00 00       	call   57d0 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
  return EXIT_SUCCESS;
    3719:	89 d8                	mov    %ebx,%eax
    371b:	eb 1a                	jmp    3737 <_Z14protected_mainv+0xf3>
}
    371d:	48 89 c3             	mov    %rax,%rbx
    3720:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3724:	48 89 c7             	mov    %rax,%rdi
    3727:	e8 a4 20 00 00       	call   57d0 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
    372c:	48 89 d8             	mov    %rbx,%rax
    372f:	48 89 c7             	mov    %rax,%rdi
    3732:	e8 a9 fd ff ff       	call   34e0 <_Unwind_Resume@plt>
    3737:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    373b:	c9                   	leave
    373c:	c3                   	ret

000000000000373d <main>:

int main() {
    373d:	55                   	push   %rbp
    373e:	48 89 e5             	mov    %rsp,%rbp
    3741:	53                   	push   %rbx
    3742:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    3746:	e8 f9 fe ff ff       	call   3644 <_Z14protected_mainv>
    374b:	e9 c1 00 00 00       	jmp    3811 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    3750:	b8 01 00 00 00       	mov    $0x1,%eax
    3755:	e9 b7 00 00 00       	jmp    3811 <main+0xd4>
  } catch (std::exception &e) {
    375a:	48 83 fa 01          	cmp    $0x1,%rdx
    375e:	75 4e                	jne    37ae <main+0x71>
    3760:	48 89 c7             	mov    %rax,%rdi
    3763:	e8 78 f9 ff ff       	call   30e0 <__cxa_begin_catch@plt>
    3768:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    376c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3770:	48 8b 00             	mov    (%rax),%rax
    3773:	48 83 c0 10          	add    $0x10,%rax
    3777:	48 8b 10             	mov    (%rax),%rdx
    377a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    377e:	48 89 c7             	mov    %rax,%rdi
    3781:	ff d2                	call   *%rdx
    3783:	48 89 c6             	mov    %rax,%rsi
    3786:	48 8d 05 53 bc 01 00 	lea    0x1bc53(%rip),%rax        # 1f3e0 <_ZSt4cerr@GLIBCXX_3.4>
    378d:	48 89 c7             	mov    %rax,%rdi
    3790:	e8 2b fb ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3795:	48 8b 15 0c b8 01 00 	mov    0x1b80c(%rip),%rdx        # 1efa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    379c:	48 89 d6             	mov    %rdx,%rsi
    379f:	48 89 c7             	mov    %rax,%rdi
    37a2:	e8 79 fb ff ff       	call   3320 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    37a7:	e8 e4 fc ff ff       	call   3490 <__cxa_end_catch@plt>
    37ac:	eb a2                	jmp    3750 <main+0x13>
    37ae:	48 89 c7             	mov    %rax,%rdi
    37b1:	e8 2a f9 ff ff       	call   30e0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    37b6:	48 8d 05 94 de 00 00 	lea    0xde94(%rip),%rax        # 11651 <_ZN6__pstl9execution2v1L5unseqE+0x12>
    37bd:	48 89 c6             	mov    %rax,%rsi
    37c0:	48 8d 05 19 bc 01 00 	lea    0x1bc19(%rip),%rax        # 1f3e0 <_ZSt4cerr@GLIBCXX_3.4>
    37c7:	48 89 c7             	mov    %rax,%rdi
    37ca:	e8 f1 fa ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    37cf:	48 8b 15 d2 b7 01 00 	mov    0x1b7d2(%rip),%rdx        # 1efa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    37d6:	48 89 d6             	mov    %rdx,%rsi
    37d9:	48 89 c7             	mov    %rax,%rdi
    37dc:	e8 3f fb ff ff       	call   3320 <_ZNSolsEPFRSoS_E@plt>
  }
    37e1:	e8 aa fc ff ff       	call   3490 <__cxa_end_catch@plt>
    37e6:	e9 65 ff ff ff       	jmp    3750 <main+0x13>
  } catch (...) {
    37eb:	48 89 c3             	mov    %rax,%rbx
    37ee:	e8 9d fc ff ff       	call   3490 <__cxa_end_catch@plt>
    37f3:	48 89 d8             	mov    %rbx,%rax
    37f6:	48 89 c7             	mov    %rax,%rdi
    37f9:	e8 e2 fc ff ff       	call   34e0 <_Unwind_Resume@plt>
  }
    37fe:	48 89 c3             	mov    %rax,%rbx
    3801:	e8 8a fc ff ff       	call   3490 <__cxa_end_catch@plt>
    3806:	48 89 d8             	mov    %rbx,%rax
    3809:	48 89 c7             	mov    %rax,%rdi
    380c:	e8 cf fc ff ff       	call   34e0 <_Unwind_Resume@plt>
    3811:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3815:	c9                   	leave
    3816:	c3                   	ret

0000000000003817 <_Z41__static_initialization_and_destruction_0ii>:
    3817:	55                   	push   %rbp
    3818:	48 89 e5             	mov    %rsp,%rbp
    381b:	48 83 ec 10          	sub    $0x10,%rsp
    381f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3822:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3825:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3829:	75 3b                	jne    3866 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    382b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    3832:	75 32                	jne    3866 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    3834:	48 8d 05 b6 bc 01 00 	lea    0x1bcb6(%rip),%rax        # 1f4f1 <_ZStL8__ioinit>
    383b:	48 89 c7             	mov    %rax,%rdi
    383e:	e8 0d fc ff ff       	call   3450 <_ZNSt8ios_base4InitC1Ev@plt>
    3843:	48 8d 05 46 ba 01 00 	lea    0x1ba46(%rip),%rax        # 1f290 <__dso_handle>
    384a:	48 89 c2             	mov    %rax,%rdx
    384d:	48 8d 05 9d bc 01 00 	lea    0x1bc9d(%rip),%rax        # 1f4f1 <_ZStL8__ioinit>
    3854:	48 89 c6             	mov    %rax,%rsi
    3857:	48 8b 05 7a b7 01 00 	mov    0x1b77a(%rip),%rax        # 1efd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    385e:	48 89 c7             	mov    %rax,%rdi
    3861:	e8 0a fa ff ff       	call   3270 <__cxa_atexit@plt>
    3866:	90                   	nop
    3867:	c9                   	leave
    3868:	c3                   	ret

0000000000003869 <_GLOBAL__sub_I__Z14protected_mainv>:
    3869:	55                   	push   %rbp
    386a:	48 89 e5             	mov    %rsp,%rbp
    386d:	be ff ff 00 00       	mov    $0xffff,%esi
    3872:	bf 01 00 00 00       	mov    $0x1,%edi
    3877:	e8 9b ff ff ff       	call   3817 <_Z41__static_initialization_and_destruction_0ii>
    387c:	5d                   	pop    %rbp
    387d:	c3                   	ret

000000000000387e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    387e:	55                   	push   %rbp
    387f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    3882:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    3887:	5d                   	pop    %rbp
    3888:	c3                   	ret

0000000000003889 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    3889:	55                   	push   %rbp
    388a:	48 89 e5             	mov    %rsp,%rbp
    388d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3891:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3899:	5d                   	pop    %rbp
    389a:	c3                   	ret

000000000000389b <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    389b:	55                   	push   %rbp
    389c:	48 89 e5             	mov    %rsp,%rbp
    389f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    38a7:	90                   	nop
    38a8:	5d                   	pop    %rbp
    38a9:	c3                   	ret

00000000000038aa <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    38aa:	55                   	push   %rbp
    38ab:	48 89 e5             	mov    %rsp,%rbp
    38ae:	48 83 ec 10          	sub    $0x10,%rsp
    38b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    38b6:	e8 c3 ff ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    38bb:	84 c0                	test   %al,%al
    38bd:	74 0e                	je     38cd <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    38bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c3:	48 89 c7             	mov    %rax,%rdi
    38c6:	e8 41 0e 00 00       	call   470c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    38cb:	eb 0d                	jmp    38da <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    38cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38d1:	48 89 c7             	mov    %rax,%rdi
    38d4:	e8 27 f8 ff ff       	call   3100 <strlen@plt>
    38d9:	90                   	nop
      }
    38da:	c9                   	leave
    38db:	c3                   	ret

00000000000038dc <_ZN4neko7ContextD1Ev>:

  Context &operator=(const Context &) = delete;

  Context &operator=(Context &&) = default;

  ~Context() { destroyContext(); }
    38dc:	55                   	push   %rbp
    38dd:	48 89 e5             	mov    %rsp,%rbp
    38e0:	48 83 ec 10          	sub    $0x10,%rsp
    38e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38e8:	e8 03 bc 00 00       	call   f4f0 <_ZN4neko7Context14destroyContextEv>
    38ed:	90                   	nop
    38ee:	c9                   	leave
    38ef:	c3                   	ret

00000000000038f0 <_ZN4neko8InstanceD1Ev>:
  explicit Instance(const Settings &settings);
  Instance(const Instance &) = delete;
  Instance(Instance &&rhs) noexcept;
  Instance &operator=(const Instance &) = delete;
  Instance &operator=(Instance &&rhs);
  ~Instance() { release(); }
    38f0:	55                   	push   %rbp
    38f1:	48 89 e5             	mov    %rsp,%rbp
    38f4:	48 83 ec 10          	sub    $0x10,%rsp
    38f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3900:	48 89 c7             	mov    %rax,%rdi
    3903:	e8 74 c4 00 00       	call   fd7c <_ZN4neko8Instance7releaseEv>
    3908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    390c:	48 89 c7             	mov    %rax,%rdi
    390f:	e8 c8 ff ff ff       	call   38dc <_ZN4neko7ContextD1Ev>
    3914:	90                   	nop
    3915:	c9                   	leave
    3916:	c3                   	ret
    3917:	90                   	nop

0000000000003918 <_ZN4neko8RendererC1ERKNS_8SettingsE>:

class Renderer {
public:
  Renderer() = delete;

  explicit Renderer(const Settings &settings) : mpSettings{&settings} {}
    3918:	55                   	push   %rbp
    3919:	48 89 e5             	mov    %rsp,%rbp
    391c:	53                   	push   %rbx
    391d:	48 83 ec 18          	sub    $0x18,%rsp
    3921:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3925:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3929:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    392d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3931:	48 89 10             	mov    %rdx,(%rax)
    3934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3938:	48 8d 50 08          	lea    0x8(%rax),%rdx
    393c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3940:	48 8b 00             	mov    (%rax),%rax
    3943:	48 89 c6             	mov    %rax,%rsi
    3946:	48 89 d7             	mov    %rdx,%rdi
    3949:	e8 5a bf 00 00       	call   f8a8 <_ZN4neko8InstanceC1ERKNS_8SettingsE>
    394e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3952:	48 8d 50 28          	lea    0x28(%rax),%rdx
    3956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    395a:	48 8b 00             	mov    (%rax),%rax
    395d:	48 89 c6             	mov    %rax,%rsi
    3960:	48 89 d7             	mov    %rdx,%rdi
    3963:	e8 88 d2 00 00       	call   10bf0 <_ZN4neko6WindowC1ERKNS_8SettingsE>
    3968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    396c:	48 83 c0 38          	add    $0x38,%rax
    3970:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3974:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    3978:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    397c:	48 83 c2 28          	add    $0x28,%rdx
    3980:	48 89 ce             	mov    %rcx,%rsi
    3983:	48 89 c7             	mov    %rax,%rdi
    3986:	e8 39 d3 00 00       	call   10cc4 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    398b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    398f:	48 83 c0 48          	add    $0x48,%rax
    3993:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3997:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    399b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    399f:	48 83 c2 38          	add    $0x38,%rdx
    39a3:	48 89 ce             	mov    %rcx,%rsi
    39a6:	48 89 c7             	mov    %rax,%rdi
    39a9:	e8 e6 71 00 00       	call   ab94 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    39ae:	eb 48                	jmp    39f8 <_ZN4neko8RendererC1ERKNS_8SettingsE+0xe0>
    39b0:	48 89 c3             	mov    %rax,%rbx
    39b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39b7:	48 83 c0 38          	add    $0x38,%rax
    39bb:	48 89 c7             	mov    %rax,%rdi
    39be:	e8 c1 d3 00 00       	call   10d84 <_ZN4neko7SurfaceD1Ev>
    39c3:	eb 03                	jmp    39c8 <_ZN4neko8RendererC1ERKNS_8SettingsE+0xb0>
    39c5:	48 89 c3             	mov    %rax,%rbx
    39c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39cc:	48 83 c0 28          	add    $0x28,%rax
    39d0:	48 89 c7             	mov    %rax,%rdi
    39d3:	e8 9e d2 00 00       	call   10c76 <_ZN4neko6WindowD1Ev>
    39d8:	eb 03                	jmp    39dd <_ZN4neko8RendererC1ERKNS_8SettingsE+0xc5>
    39da:	48 89 c3             	mov    %rax,%rbx
    39dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39e1:	48 83 c0 08          	add    $0x8,%rax
    39e5:	48 89 c7             	mov    %rax,%rdi
    39e8:	e8 03 ff ff ff       	call   38f0 <_ZN4neko8InstanceD1Ev>
    39ed:	48 89 d8             	mov    %rbx,%rax
    39f0:	48 89 c7             	mov    %rax,%rdi
    39f3:	e8 e8 fa ff ff       	call   34e0 <_Unwind_Resume@plt>
    39f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39fc:	c9                   	leave
    39fd:	c3                   	ret

00000000000039fe <_ZN4neko8Renderer5startEv>:

  Renderer &operator=(Renderer &&) = default;

  ~Renderer() = default;

  void start() {
    39fe:	55                   	push   %rbp
    39ff:	48 89 e5             	mov    %rsp,%rbp
    3a02:	48 83 ec 10          	sub    $0x10,%rsp
    3a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    mWindow.open();
    3a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a0e:	48 83 c0 28          	add    $0x28,%rax
    3a12:	48 89 c7             	mov    %rax,%rdi
    3a15:	e8 7a d2 00 00       	call   10c94 <_ZN4neko6Window4openEv>
    // Instance instance = std::move(mInstance);
    // mInstance.release();
  };
    3a1a:	90                   	nop
    3a1b:	c9                   	leave
    3a1c:	c3                   	ret
    3a1d:	90                   	nop

0000000000003a1e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3050. Conversion specification problem in chrono::duration
	template<typename _Rep2, typename = _Require<
		 is_convertible<const _Rep2&, rep>,
		 __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>
	  constexpr explicit duration(const _Rep2& __rep)
    3a1e:	55                   	push   %rbp
    3a1f:	48 89 e5             	mov    %rsp,%rbp
    3a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    3a2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a2e:	48 8b 10             	mov    (%rax),%rdx
    3a31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a35:	48 89 10             	mov    %rdx,(%rax)
    3a38:	90                   	nop
    3a39:	5d                   	pop    %rbp
    3a3a:	c3                   	ret
    3a3b:	90                   	nop

0000000000003a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
    3a3c:	55                   	push   %rbp
    3a3d:	48 89 e5             	mov    %rsp,%rbp
    3a40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    3a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a48:	48 8b 00             	mov    (%rax),%rax
    3a4b:	5d                   	pop    %rbp
    3a4c:	c3                   	ret

0000000000003a4d <_ZL20__gthread_mutex_lockP15pthread_mutex_t>:
    return 0;
}

static inline int
__gthread_mutex_lock (__gthread_mutex_t *__mutex)
{
    3a4d:	55                   	push   %rbp
    3a4e:	48 89 e5             	mov    %rsp,%rbp
    3a51:	48 83 ec 10          	sub    $0x10,%rsp
    3a55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3a59:	e8 db fb ff ff       	call   3639 <_ZL18__gthread_active_pv>
    3a5e:	85 c0                	test   %eax,%eax
    3a60:	0f 95 c0             	setne  %al
    3a63:	84 c0                	test   %al,%al
    3a65:	74 0e                	je     3a75 <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_lock) (__mutex);
    3a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a6b:	48 89 c7             	mov    %rax,%rdi
    3a6e:	e8 bd f9 ff ff       	call   3430 <pthread_mutex_lock@plt>
    3a73:	eb 05                	jmp    3a7a <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3a75:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3a7a:	c9                   	leave
    3a7b:	c3                   	ret

0000000000003a7c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>:
}
#endif

static inline int
__gthread_mutex_unlock (__gthread_mutex_t *__mutex)
{
    3a7c:	55                   	push   %rbp
    3a7d:	48 89 e5             	mov    %rsp,%rbp
    3a80:	48 83 ec 10          	sub    $0x10,%rsp
    3a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3a88:	e8 ac fb ff ff       	call   3639 <_ZL18__gthread_active_pv>
    3a8d:	85 c0                	test   %eax,%eax
    3a8f:	0f 95 c0             	setne  %al
    3a92:	84 c0                	test   %al,%al
    3a94:	74 0e                	je     3aa4 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_unlock) (__mutex);
    3a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a9a:	48 89 c7             	mov    %rax,%rdi
    3a9d:	e8 3e f7 ff ff       	call   31e0 <pthread_mutex_unlock@plt>
    3aa2:	eb 05                	jmp    3aa9 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3aa4:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3aa9:	c9                   	leave
    3aaa:	c3                   	ret
    3aab:	90                   	nop

0000000000003aac <_ZNSt5mutex4lockEv>:

    mutex(const mutex&) = delete;
    mutex& operator=(const mutex&) = delete;

    void
    lock()
    3aac:	55                   	push   %rbp
    3aad:	48 89 e5             	mov    %rsp,%rbp
    3ab0:	48 83 ec 20          	sub    $0x20,%rsp
    3ab4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    {
      int __e = __gthread_mutex_lock(&_M_mutex);
    3ab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3abc:	48 89 c7             	mov    %rax,%rdi
    3abf:	e8 89 ff ff ff       	call   3a4d <_ZL20__gthread_mutex_lockP15pthread_mutex_t>
    3ac4:	89 45 fc             	mov    %eax,-0x4(%rbp)

      // EINVAL, EAGAIN, EBUSY, EINVAL, EDEADLK(may)
      if (__e)
    3ac7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    3acb:	74 0a                	je     3ad7 <_ZNSt5mutex4lockEv+0x2b>
	__throw_system_error(__e);
    3acd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3ad0:	89 c7                	mov    %eax,%edi
    3ad2:	e8 a9 f6 ff ff       	call   3180 <_ZSt20__throw_system_errori@plt>
    }
    3ad7:	90                   	nop
    3ad8:	c9                   	leave
    3ad9:	c3                   	ret

0000000000003ada <_ZNSt5mutex6unlockEv>:
      // XXX EINVAL, EAGAIN, EBUSY
      return !__gthread_mutex_trylock(&_M_mutex);
    }

    void
    unlock()
    3ada:	55                   	push   %rbp
    3adb:	48 89 e5             	mov    %rsp,%rbp
    3ade:	48 83 ec 10          	sub    $0x10,%rsp
    3ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      // XXX EINVAL, EAGAIN, EPERM
      __gthread_mutex_unlock(&_M_mutex);
    3ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aea:	48 89 c7             	mov    %rax,%rdi
    3aed:	e8 8a ff ff ff       	call   3a7c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>
    }
    3af2:	90                   	nop
    3af3:	c9                   	leave
    3af4:	c3                   	ret
    3af5:	90                   	nop

0000000000003af6 <_ZNSt9_Any_data9_M_accessEv>:
    void (_Undefined_class::*_M_member_pointer)();
  };

  union [[gnu::may_alias]] _Any_data
  {
    void*       _M_access()       noexcept { return &_M_pod_data[0]; }
    3af6:	55                   	push   %rbp
    3af7:	48 89 e5             	mov    %rsp,%rbp
    3afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b02:	5d                   	pop    %rbp
    3b03:	c3                   	ret

0000000000003b04 <_ZNKSt9_Any_data9_M_accessEv>:
    const void* _M_access() const noexcept { return &_M_pod_data[0]; }
    3b04:	55                   	push   %rbp
    3b05:	48 89 e5             	mov    %rsp,%rbp
    3b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b10:	5d                   	pop    %rbp
    3b11:	c3                   	ret

0000000000003b12 <_ZNSt14_Function_baseD1Ev>:
	  { return true; }
      };

    _Function_base() = default;

    ~_Function_base()
    3b12:	55                   	push   %rbp
    3b13:	48 89 e5             	mov    %rsp,%rbp
    3b16:	48 83 ec 10          	sub    $0x10,%rsp
    3b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (_M_manager)
    3b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b22:	48 8b 40 10          	mov    0x10(%rax),%rax
    3b26:	48 85 c0             	test   %rax,%rax
    3b29:	74 1e                	je     3b49 <_ZNSt14_Function_baseD1Ev+0x37>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
    3b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b2f:	4c 8b 40 10          	mov    0x10(%rax),%r8
    3b33:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b3b:	ba 03 00 00 00       	mov    $0x3,%edx
    3b40:	48 89 ce             	mov    %rcx,%rsi
    3b43:	48 89 c7             	mov    %rax,%rdi
    3b46:	41 ff d0             	call   *%r8
    }
    3b49:	90                   	nop
    3b4a:	c9                   	leave
    3b4b:	c3                   	ret

0000000000003b4c <_ZNKSt14_Function_base8_M_emptyEv>:

    bool _M_empty() const { return !_M_manager; }
    3b4c:	55                   	push   %rbp
    3b4d:	48 89 e5             	mov    %rsp,%rbp
    3b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b58:	48 8b 40 10          	mov    0x10(%rax),%rax
    3b5c:	48 85 c0             	test   %rax,%rax
    3b5f:	0f 94 c0             	sete   %al
    3b62:	5d                   	pop    %rbp
    3b63:	c3                   	ret

0000000000003b64 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    3b64:	55                   	push   %rbp
    3b65:	48 89 e5             	mov    %rsp,%rbp
    3b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    3b70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b74:	48 8b 10             	mov    (%rax),%rdx
    3b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b7b:	48 8b 00             	mov    (%rax),%rax
    3b7e:	48 39 c2             	cmp    %rax,%rdx
    3b81:	73 06                	jae    3b89 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    3b83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b87:	eb 04                	jmp    3b8d <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    3b89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3b8d:	5d                   	pop    %rbp
    3b8e:	c3                   	ret
    3b8f:	90                   	nop

0000000000003b90 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    3b90:	55                   	push   %rbp
    3b91:	48 89 e5             	mov    %rsp,%rbp
    3b94:	48 83 ec 10          	sub    $0x10,%rsp
    3b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    3b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ba0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    3ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3baa:	48 89 c7             	mov    %rax,%rdi
    3bad:	e8 04 00 00 00       	call   3bb6 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    3bb2:	90                   	nop
    3bb3:	c9                   	leave
    3bb4:	c3                   	ret
    3bb5:	90                   	nop

0000000000003bb6 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    3bb6:	55                   	push   %rbp
    3bb7:	48 89 e5             	mov    %rsp,%rbp
    3bba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    3bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bc2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3bc9:	00 
      _M_header._M_left = &_M_header;
    3bca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bd2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    3bd6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bde:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    3be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3be6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    3bed:	00 
    }
    3bee:	90                   	nop
    3bef:	5d                   	pop    %rbp
    3bf0:	c3                   	ret

0000000000003bf1 <_ZSt16__deque_buf_sizem>:
#define _GLIBCXX_DEQUE_BUF_SIZE 512
#endif

  _GLIBCXX_CONSTEXPR inline size_t
  __deque_buf_size(size_t __size)
  { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
    3bf1:	55                   	push   %rbp
    3bf2:	48 89 e5             	mov    %rsp,%rbp
    3bf5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
    3bf9:	48 81 7d f8 ff 01 00 	cmpq   $0x1ff,-0x8(%rbp)
    3c00:	00 
    3c01:	77 10                	ja     3c13 <_ZSt16__deque_buf_sizem+0x22>
    3c03:	b8 00 02 00 00       	mov    $0x200,%eax
    3c08:	ba 00 00 00 00       	mov    $0x0,%edx
    3c0d:	48 f7 75 f8          	divq   -0x8(%rbp)
    3c11:	eb 05                	jmp    3c18 <_ZSt16__deque_buf_sizem+0x27>
    3c13:	b8 01 00 00 00       	mov    $0x1,%eax
    3c18:	5d                   	pop    %rbp
    3c19:	c3                   	ret

0000000000003c1a <_ZNSt6thread2idC1Ev>:
    class id
    {
      native_handle_type	_M_thread;

    public:
      id() noexcept : _M_thread() { }
    3c1a:	55                   	push   %rbp
    3c1b:	48 89 e5             	mov    %rsp,%rbp
    3c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c26:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3c2d:	90                   	nop
    3c2e:	5d                   	pop    %rbp
    3c2f:	c3                   	ret

0000000000003c30 <_ZNSt6thread2idC1Em>:

      explicit
      id(native_handle_type __id) : _M_thread(__id) { }
    3c30:	55                   	push   %rbp
    3c31:	48 89 e5             	mov    %rsp,%rbp
    3c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c44:	48 89 10             	mov    %rdx,(%rax)
    3c47:	90                   	nop
    3c48:	5d                   	pop    %rbp
    3c49:	c3                   	ret

0000000000003c4a <_ZNSt6threadD1Ev>:
	      std::forward<_Callable>(__f), std::forward<_Args>(__args)...)),
	    __depend);
      }
#endif // _GLIBCXX_HAS_GTHREADS

    ~thread()
    3c4a:	55                   	push   %rbp
    3c4b:	48 89 e5             	mov    %rsp,%rbp
    3c4e:	48 83 ec 10          	sub    $0x10,%rsp
    3c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (joinable())
    3c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c5a:	48 89 c7             	mov    %rax,%rdi
    3c5d:	e8 a2 00 00 00       	call   3d04 <_ZNKSt6thread8joinableEv>
    3c62:	84 c0                	test   %al,%al
    3c64:	74 05                	je     3c6b <_ZNSt6threadD1Ev+0x21>
    terminate();
    3c66:	e8 05 f4 ff ff       	call   3070 <_ZSt9terminatev@plt>
	std::__terminate();
    }
    3c6b:	90                   	nop
    3c6c:	c9                   	leave
    3c6d:	c3                   	ret

0000000000003c6e <_ZNSt6threadC1EOS_>:

    thread(const thread&) = delete;

    thread(thread&& __t) noexcept
    3c6e:	55                   	push   %rbp
    3c6f:	48 89 e5             	mov    %rsp,%rbp
    3c72:	48 83 ec 10          	sub    $0x10,%rsp
    3c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { swap(__t); }
    3c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c82:	48 89 c7             	mov    %rax,%rdi
    3c85:	e8 90 ff ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
    3c8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c92:	48 89 d6             	mov    %rdx,%rsi
    3c95:	48 89 c7             	mov    %rax,%rdi
    3c98:	e8 41 00 00 00       	call   3cde <_ZNSt6thread4swapERS_>
    3c9d:	90                   	nop
    3c9e:	c9                   	leave
    3c9f:	c3                   	ret

0000000000003ca0 <_ZNSt6threadaSEOS_>:

    thread& operator=(const thread&) = delete;

    thread& operator=(thread&& __t) noexcept
    3ca0:	55                   	push   %rbp
    3ca1:	48 89 e5             	mov    %rsp,%rbp
    3ca4:	48 83 ec 10          	sub    $0x10,%rsp
    3ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      if (joinable())
    3cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cb4:	48 89 c7             	mov    %rax,%rdi
    3cb7:	e8 48 00 00 00       	call   3d04 <_ZNKSt6thread8joinableEv>
    3cbc:	84 c0                	test   %al,%al
    3cbe:	74 05                	je     3cc5 <_ZNSt6threadaSEOS_+0x25>
    3cc0:	e8 ab f3 ff ff       	call   3070 <_ZSt9terminatev@plt>
	std::__terminate();
      swap(__t);
    3cc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ccd:	48 89 d6             	mov    %rdx,%rsi
    3cd0:	48 89 c7             	mov    %rax,%rdi
    3cd3:	e8 06 00 00 00       	call   3cde <_ZNSt6thread4swapERS_>
      return *this;
    3cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3cdc:	c9                   	leave
    3cdd:	c3                   	ret

0000000000003cde <_ZNSt6thread4swapERS_>:

    void
    swap(thread& __t) noexcept
    3cde:	55                   	push   %rbp
    3cdf:	48 89 e5             	mov    %rsp,%rbp
    3ce2:	48 83 ec 10          	sub    $0x10,%rsp
    3ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { std::swap(_M_id, __t._M_id); }
    3cee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cf6:	48 89 d6             	mov    %rdx,%rsi
    3cf9:	48 89 c7             	mov    %rax,%rdi
    3cfc:	e8 38 0b 00 00       	call   4839 <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>
    3d01:	90                   	nop
    3d02:	c9                   	leave
    3d03:	c3                   	ret

0000000000003d04 <_ZNKSt6thread8joinableEv>:

    bool
    joinable() const noexcept
    3d04:	55                   	push   %rbp
    3d05:	48 89 e5             	mov    %rsp,%rbp
    3d08:	48 83 ec 20          	sub    $0x20,%rsp
    3d0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return !(_M_id == id()); }
    3d10:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3d14:	48 89 c7             	mov    %rax,%rdi
    3d17:	e8 fe fe ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
    3d1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d24:	48 8b 00             	mov    (%rax),%rax
    3d27:	48 89 d6             	mov    %rdx,%rsi
    3d2a:	48 89 c7             	mov    %rax,%rdi
    3d2d:	e8 05 00 00 00       	call   3d37 <_ZSteqNSt6thread2idES0_>
    3d32:	83 f0 01             	xor    $0x1,%eax
    3d35:	c9                   	leave
    3d36:	c3                   	ret

0000000000003d37 <_ZSteqNSt6thread2idES0_>:
  swap(thread& __x, thread& __y) noexcept
  { __x.swap(__y); }

  inline bool
  operator==(thread::id __x, thread::id __y) noexcept
  {
    3d37:	55                   	push   %rbp
    3d38:	48 89 e5             	mov    %rsp,%rbp
    3d3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // pthread_equal is undefined if either thread ID is not valid, so we
    // can't safely use __gthread_equal on default-constructed values (nor
    // the non-zero value returned by this_thread::get_id() for
    // single-threaded programs using GNU libc). Assume EqualityComparable.
    return __x._M_thread == __y._M_thread;
    3d43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d4b:	48 39 c2             	cmp    %rax,%rdx
    3d4e:	0f 94 c0             	sete   %al
  }
    3d51:	5d                   	pop    %rbp
    3d52:	c3                   	ret

0000000000003d53 <_ZNSt11this_thread6get_idEv>:
  namespace this_thread
  {
    /// this_thread::get_id
    inline thread::id
    get_id() noexcept
    {
    3d53:	55                   	push   %rbp
    3d54:	48 89 e5             	mov    %rsp,%rbp
    3d57:	48 83 ec 10          	sub    $0x10,%rsp
#ifndef _GLIBCXX_HAS_GTHREADS
      return thread::id(1);
#elif defined _GLIBCXX_NATIVE_THREAD_ID
      return thread::id(_GLIBCXX_NATIVE_THREAD_ID);
    3d5b:	e8 20 f5 ff ff       	call   3280 <pthread_self@plt>
    3d60:	48 89 c2             	mov    %rax,%rdx
    3d63:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3d67:	48 89 d6             	mov    %rdx,%rsi
    3d6a:	48 89 c7             	mov    %rax,%rdi
    3d6d:	e8 be fe ff ff       	call   3c30 <_ZNSt6thread2idC1Em>
    3d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
#else
      return thread::id(__gthread_self());
#endif
    }
    3d76:	c9                   	leave
    3d77:	c3                   	ret

0000000000003d78 <_ZStltNSt6thread2idES0_>:
  operator!=(thread::id __x, thread::id __y) noexcept
  { return !(__x == __y); }

  inline bool
  operator<(thread::id __x, thread::id __y) noexcept
  {
    3d78:	55                   	push   %rbp
    3d79:	48 89 e5             	mov    %rsp,%rbp
    3d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // Pthreads doesn't define any way to do this, so we just have to
    // assume native_handle_type is LessThanComparable.
    return __x._M_thread < __y._M_thread;
    3d84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d8c:	48 39 c2             	cmp    %rax,%rdx
    3d8f:	0f 92 c0             	setb   %al
  }
    3d92:	5d                   	pop    %rbp
    3d93:	c3                   	ret

0000000000003d94 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    3d94:	55                   	push   %rbp
    3d95:	48 89 e5             	mov    %rsp,%rbp
    3d98:	48 83 ec 10          	sub    $0x10,%rsp
    3d9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da4:	48 89 c7             	mov    %rax,%rdi
    3da7:	e8 08 0b 00 00       	call   48b4 <_ZNSaISt6threadED1Ev>
    3dac:	90                   	nop
    3dad:	c9                   	leave
    3dae:	c3                   	ret
    3daf:	90                   	nop

0000000000003db0 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    3db0:	55                   	push   %rbp
    3db1:	48 89 e5             	mov    %rsp,%rbp
    3db4:	48 83 ec 10          	sub    $0x10,%rsp
    3db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dc0:	48 89 c7             	mov    %rax,%rdi
    3dc3:	e8 c4 0a 00 00       	call   488c <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>
    3dc8:	90                   	nop
    3dc9:	c9                   	leave
    3dca:	c3                   	ret
    3dcb:	90                   	nop

0000000000003dcc <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    3dcc:	55                   	push   %rbp
    3dcd:	48 89 e5             	mov    %rsp,%rbp
    3dd0:	48 83 ec 10          	sub    $0x10,%rsp
    3dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ddc:	48 89 c7             	mov    %rax,%rdi
    3ddf:	e8 cc ff ff ff       	call   3db0 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>
    3de4:	90                   	nop
    3de5:	c9                   	leave
    3de6:	c3                   	ret
    3de7:	90                   	nop

0000000000003de8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>:
   *  Members not found in @a normal containers are @c container_type,
   *  which is a typedef for the second Sequence parameter, and @c push and
   *  @c pop, which are standard %queue/FIFO operations.
  */
  template<typename _Tp, typename _Sequence = deque<_Tp> >
    class queue
    3de8:	55                   	push   %rbp
    3de9:	48 89 e5             	mov    %rsp,%rbp
    3dec:	48 83 ec 10          	sub    $0x10,%rsp
    3df0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3df8:	48 89 c7             	mov    %rax,%rdi
    3dfb:	e8 b4 0b 00 00       	call   49b4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>
    3e00:	90                   	nop
    3e01:	c9                   	leave
    3e02:	c3                   	ret
    3e03:	90                   	nop

0000000000003e04 <_ZNSt12__mutex_baseC1Ev>:
    constexpr __mutex_base() noexcept = default;
    3e04:	55                   	push   %rbp
    3e05:	48 89 e5             	mov    %rsp,%rbp
    3e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e10:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e14:	0f 11 00             	movups %xmm0,(%rax)
    3e17:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    3e1b:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
    3e20:	90                   	nop
    3e21:	5d                   	pop    %rbp
    3e22:	c3                   	ret
    3e23:	90                   	nop

0000000000003e24 <_ZNSt5mutexC1Ev>:
    mutex() noexcept = default;
    3e24:	55                   	push   %rbp
    3e25:	48 89 e5             	mov    %rsp,%rbp
    3e28:	48 83 ec 10          	sub    $0x10,%rsp
    3e2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e34:	48 89 c7             	mov    %rax,%rdi
    3e37:	e8 c8 ff ff ff       	call   3e04 <_ZNSt12__mutex_baseC1Ev>
    3e3c:	90                   	nop
    3e3d:	c9                   	leave
    3e3e:	c3                   	ret
    3e3f:	90                   	nop

0000000000003e40 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    3e40:	55                   	push   %rbp
    3e41:	48 89 e5             	mov    %rsp,%rbp
    3e44:	48 83 ec 10          	sub    $0x10,%rsp
    3e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e50:	48 89 c7             	mov    %rax,%rdi
    3e53:	e8 00 0c 00 00       	call   4a58 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    3e58:	90                   	nop
    3e59:	c9                   	leave
    3e5a:	c3                   	ret
    3e5b:	90                   	nop

0000000000003e5c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    3e5c:	55                   	push   %rbp
    3e5d:	48 89 e5             	mov    %rsp,%rbp
    3e60:	48 83 ec 10          	sub    $0x10,%rsp
    3e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e6c:	48 89 c7             	mov    %rax,%rdi
    3e6f:	e8 ac 0b 00 00       	call   4a20 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>
    3e74:	90                   	nop
    3e75:	c9                   	leave
    3e76:	c3                   	ret
    3e77:	90                   	nop

0000000000003e78 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    3e78:	55                   	push   %rbp
    3e79:	48 89 e5             	mov    %rsp,%rbp
    3e7c:	48 83 ec 10          	sub    $0x10,%rsp
    3e80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e88:	48 89 c7             	mov    %rax,%rdi
    3e8b:	e8 cc ff ff ff       	call   3e5c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>
    3e90:	90                   	nop
    3e91:	c9                   	leave
    3e92:	c3                   	ret
    3e93:	90                   	nop

0000000000003e94 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    3e94:	55                   	push   %rbp
    3e95:	48 89 e5             	mov    %rsp,%rbp
    3e98:	48 83 ec 10          	sub    $0x10,%rsp
    3e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea4:	48 89 c7             	mov    %rax,%rdi
    3ea7:	e8 c8 0b 00 00       	call   4a74 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>
    3eac:	90                   	nop
    3ead:	c9                   	leave
    3eae:	c3                   	ret
    3eaf:	90                   	nop

0000000000003eb0 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>:
  typedef std::function<void()> Job_T;
  typedef std::unique_lock<std::mutex> MutexLock_T;

public:
  ThreadPool() = delete;
  ThreadPool(const Settings &settings) : mShouldTerminate{false} {
    3eb0:	55                   	push   %rbp
    3eb1:	48 89 e5             	mov    %rsp,%rbp
    3eb4:	53                   	push   %rbx
    3eb5:	48 83 ec 58          	sub    $0x58,%rsp
    3eb9:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3ebd:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    3ec1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ec5:	48 89 c7             	mov    %rax,%rdi
    3ec8:	e8 ff fe ff ff       	call   3dcc <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>
    3ecd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ed1:	48 83 c0 18          	add    $0x18,%rax
    3ed5:	48 89 c7             	mov    %rax,%rdi
    3ed8:	e8 a1 0a 00 00       	call   497e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>
    3edd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ee1:	48 83 c0 68          	add    $0x68,%rax
    3ee5:	48 89 c7             	mov    %rax,%rdi
    3ee8:	e8 37 ff ff ff       	call   3e24 <_ZNSt5mutexC1Ev>
    3eed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ef1:	48 05 90 00 00 00    	add    $0x90,%rax
    3ef7:	48 89 c7             	mov    %rax,%rdi
    3efa:	e8 11 f5 ff ff       	call   3410 <_ZNSt18condition_variableC1Ev@plt>
    3eff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f03:	c6 80 c0 00 00 00 00 	movb   $0x0,0xc0(%rax)
    3f0a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f0e:	48 05 c8 00 00 00    	add    $0xc8,%rax
    3f14:	48 89 c7             	mov    %rax,%rdi
    3f17:	e8 5c ff ff ff       	call   3e78 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>
    auto threadCount =
        std::thread::hardware_concurrency() / settings.system.cpuThreadUsage;
    3f1c:	e8 cf f4 ff ff       	call   33f0 <_ZNSt6thread20hardware_concurrencyEv@plt>
    3f21:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    3f25:	8b 4a 58             	mov    0x58(%rdx),%ecx
    3f28:	ba 00 00 00 00       	mov    $0x0,%edx
    3f2d:	f7 f1                	div    %ecx
    3f2f:	89 45 ec             	mov    %eax,-0x14(%rbp)
    mThreads.resize(threadCount);
    3f32:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f36:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3f39:	48 89 d6             	mov    %rdx,%rsi
    3f3c:	48 89 c7             	mov    %rax,%rdi
    3f3f:	e8 6a 0b 00 00       	call   4aae <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>
    for (auto &thread : mThreads) {
    3f44:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f48:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3f4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f50:	48 89 c7             	mov    %rax,%rdi
    3f53:	e8 dc 0b 00 00       	call   4b34 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    3f58:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3f5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f60:	48 89 c7             	mov    %rax,%rdi
    3f63:	e8 f2 0b 00 00       	call   4b5a <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    3f68:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3f6c:	eb 5d                	jmp    3fcb <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x11b>
    3f6e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3f72:	48 89 c7             	mov    %rax,%rdi
    3f75:	e8 64 0c 00 00       	call   4bde <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    3f7a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      thread = std::thread{ThreadPool::threadLoop, this};
    3f7e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3f82:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3f86:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    3f8a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3f8e:	48 8d 0d 3d 03 00 00 	lea    0x33d(%rip),%rcx        # 42d2 <_ZN4neko10ThreadPool10threadLoopEPS0_>
    3f95:	48 89 ce             	mov    %rcx,%rsi
    3f98:	48 89 c7             	mov    %rax,%rdi
    3f9b:	e8 50 0c 00 00       	call   4bf0 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>
    3fa0:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    3fa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fa8:	48 89 d6             	mov    %rdx,%rsi
    3fab:	48 89 c7             	mov    %rax,%rdi
    3fae:	e8 ed fc ff ff       	call   3ca0 <_ZNSt6threadaSEOS_>
    3fb3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3fb7:	48 89 c7             	mov    %rax,%rdi
    3fba:	e8 8b fc ff ff       	call   3c4a <_ZNSt6threadD1Ev>
    for (auto &thread : mThreads) {
    3fbf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3fc3:	48 89 c7             	mov    %rax,%rdi
    3fc6:	e8 f3 0b 00 00       	call   4bbe <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    3fcb:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    3fcf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3fd3:	48 89 d6             	mov    %rdx,%rsi
    3fd6:	48 89 c7             	mov    %rax,%rdi
    3fd9:	e8 a5 0b 00 00       	call   4b83 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    3fde:	84 c0                	test   %al,%al
    3fe0:	75 8c                	jne    3f6e <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0xbe>
    }
  }
    3fe2:	eb 53                	jmp    4037 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x187>
    3fe4:	48 89 c3             	mov    %rax,%rbx
    3fe7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3feb:	48 05 c8 00 00 00    	add    $0xc8,%rax
    3ff1:	48 89 c7             	mov    %rax,%rdi
    3ff4:	e8 9b fe ff ff       	call   3e94 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    3ff9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ffd:	48 05 90 00 00 00    	add    $0x90,%rax
    4003:	48 89 c7             	mov    %rax,%rdi
    4006:	e8 05 f5 ff ff       	call   3510 <_ZNSt18condition_variableD1Ev@plt>
    400b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    400f:	48 83 c0 18          	add    $0x18,%rax
    4013:	48 89 c7             	mov    %rax,%rdi
    4016:	e8 cd fd ff ff       	call   3de8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    401b:	eb 03                	jmp    4020 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0x170>
    401d:	48 89 c3             	mov    %rax,%rbx
    4020:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4024:	48 89 c7             	mov    %rax,%rdi
    4027:	e8 f2 08 00 00       	call   491e <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    402c:	48 89 d8             	mov    %rbx,%rax
    402f:	48 89 c7             	mov    %rax,%rdi
    4032:	e8 a9 f4 ff ff       	call   34e0 <_Unwind_Resume@plt>
    4037:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    403b:	c9                   	leave
    403c:	c3                   	ret
    403d:	90                   	nop

000000000000403e <_ZN4neko10ThreadPoolD1Ev>:
  ThreadPool(const ThreadPool &) = delete;
  ThreadPool(ThreadPool &&) = delete;
  ThreadPool &operator=(const ThreadPool &) = delete;
  ThreadPool &operator=(ThreadPool &&) = delete;
  ~ThreadPool() { release(); }
    403e:	55                   	push   %rbp
    403f:	48 89 e5             	mov    %rsp,%rbp
    4042:	48 83 ec 10          	sub    $0x10,%rsp
    4046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    404a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    404e:	48 89 c7             	mov    %rax,%rdi
    4051:	e8 ea 01 00 00       	call   4240 <_ZN4neko10ThreadPool7releaseEv>
    4056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    405a:	48 05 c8 00 00 00    	add    $0xc8,%rax
    4060:	48 89 c7             	mov    %rax,%rdi
    4063:	e8 2c fe ff ff       	call   3e94 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    4068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    406c:	48 05 90 00 00 00    	add    $0x90,%rax
    4072:	48 89 c7             	mov    %rax,%rdi
    4075:	e8 96 f4 ff ff       	call   3510 <_ZNSt18condition_variableD1Ev@plt>
    407a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    407e:	48 83 c0 18          	add    $0x18,%rax
    4082:	48 89 c7             	mov    %rax,%rdi
    4085:	e8 5e fd ff ff       	call   3de8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    408a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    408e:	48 89 c7             	mov    %rax,%rdi
    4091:	e8 88 08 00 00       	call   491e <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    4096:	90                   	nop
    4097:	c9                   	leave
    4098:	c3                   	ret
    4099:	90                   	nop

000000000000409a <_ZNK4neko10ThreadPool11threadCountEv>:

  size_t threadCount() const noexcept { return mThreads.size(); }
    409a:	55                   	push   %rbp
    409b:	48 89 e5             	mov    %rsp,%rbp
    409e:	48 83 ec 10          	sub    $0x10,%rsp
    40a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40aa:	48 89 c7             	mov    %rax,%rdi
    40ad:	e8 1e 0c 00 00       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    40b2:	c9                   	leave
    40b3:	c3                   	ret

00000000000040b4 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>:

  void submitJob(const Job_T &job) {
    40b4:	55                   	push   %rbp
    40b5:	48 89 e5             	mov    %rsp,%rbp
    40b8:	53                   	push   %rbx
    40b9:	48 83 ec 28          	sub    $0x28,%rsp
    40bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    40c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    40c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40c9:	48 8d 50 68          	lea    0x68(%rax),%rdx
    40cd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    40d1:	48 89 d6             	mov    %rdx,%rsi
    40d4:	48 89 c7             	mov    %rax,%rdi
    40d7:	e8 18 0c 00 00       	call   4cf4 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mJobs.push(job);
    40dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40e0:	48 8d 50 18          	lea    0x18(%rax),%rdx
    40e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    40e8:	48 89 c6             	mov    %rax,%rsi
    40eb:	48 89 d7             	mov    %rdx,%rdi
    40ee:	e8 6b 0c 00 00       	call   4d5e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>
    }
    40f3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    40f7:	48 89 c7             	mov    %rax,%rdi
    40fa:	e8 37 0c 00 00       	call   4d36 <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_one();
    40ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4103:	48 05 90 00 00 00    	add    $0x90,%rax
    4109:	48 89 c7             	mov    %rax,%rdi
    410c:	e8 1f f0 ff ff       	call   3130 <_ZNSt18condition_variable10notify_oneEv@plt>
  }
    4111:	eb 1a                	jmp    412d <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE+0x79>
    }
    4113:	48 89 c3             	mov    %rax,%rbx
    4116:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    411a:	48 89 c7             	mov    %rax,%rdi
    411d:	e8 14 0c 00 00       	call   4d36 <_ZNSt11unique_lockISt5mutexED1Ev>
    4122:	48 89 d8             	mov    %rbx,%rax
    4125:	48 89 c7             	mov    %rax,%rdi
    4128:	e8 b3 f3 ff ff       	call   34e0 <_Unwind_Resume@plt>
  }
    412d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4131:	c9                   	leave
    4132:	c3                   	ret
    4133:	90                   	nop

0000000000004134 <_ZN4neko10ThreadPool4busyEv>:

  bool busy() {
    4134:	55                   	push   %rbp
    4135:	48 89 e5             	mov    %rsp,%rbp
    4138:	48 83 ec 30          	sub    $0x30,%rsp
    413c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bool poolbusy;
    {
      MutexLock_T lock{mQueueMutex};
    4140:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4144:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4148:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    414c:	48 89 d6             	mov    %rdx,%rsi
    414f:	48 89 c7             	mov    %rax,%rdi
    4152:	e8 9d 0b 00 00       	call   4cf4 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      poolbusy = mJobs.empty();
    4157:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    415b:	48 83 c0 18          	add    $0x18,%rax
    415f:	48 89 c7             	mov    %rax,%rdi
    4162:	e8 1d 0c 00 00       	call   4d84 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    4167:	88 45 ff             	mov    %al,-0x1(%rbp)
    }
    416a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    416e:	48 89 c7             	mov    %rax,%rdi
    4171:	e8 c0 0b 00 00       	call   4d36 <_ZNSt11unique_lockISt5mutexED1Ev>
    return poolbusy;
    4176:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  }
    417a:	c9                   	leave
    417b:	c3                   	ret

000000000000417c <_ZN4neko10ThreadPool13force_releaseEv>:

  const std::map<std::thread::id, u64> &jobStatus() const noexcept {
    return mJobStatus;
  }

  void force_release() {
    417c:	55                   	push   %rbp
    417d:	48 89 e5             	mov    %rsp,%rbp
    4180:	48 83 ec 40          	sub    $0x40,%rsp
    4184:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    4188:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    418c:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4190:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4194:	48 89 d6             	mov    %rdx,%rsi
    4197:	48 89 c7             	mov    %rax,%rdi
    419a:	e8 55 0b 00 00       	call   4cf4 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mShouldTerminate = true;
    419f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    41a3:	c6 80 c0 00 00 00 01 	movb   $0x1,0xc0(%rax)
    }
    41aa:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    41ae:	48 89 c7             	mov    %rax,%rdi
    41b1:	e8 80 0b 00 00       	call   4d36 <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_all();
    41b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    41ba:	48 05 90 00 00 00    	add    $0x90,%rax
    41c0:	48 89 c7             	mov    %rax,%rdi
    41c3:	e8 d8 f2 ff ff       	call   34a0 <_ZNSt18condition_variable10notify_allEv@plt>
    for (auto &activeThread : mThreads) {
    41c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    41cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    41d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41d4:	48 89 c7             	mov    %rax,%rdi
    41d7:	e8 58 09 00 00       	call   4b34 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    41dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    41e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41e4:	48 89 c7             	mov    %rax,%rdi
    41e7:	e8 6e 09 00 00       	call   4b5a <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    41ec:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    41f0:	eb 28                	jmp    421a <_ZN4neko10ThreadPool13force_releaseEv+0x9e>
    41f2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    41f6:	48 89 c7             	mov    %rax,%rdi
    41f9:	e8 e0 09 00 00       	call   4bde <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    41fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      activeThread.join();
    4202:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4206:	48 89 c7             	mov    %rax,%rdi
    4209:	e8 a2 f2 ff ff       	call   34b0 <_ZNSt6thread4joinEv@plt>
    for (auto &activeThread : mThreads) {
    420e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4212:	48 89 c7             	mov    %rax,%rdi
    4215:	e8 a4 09 00 00       	call   4bbe <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    421a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    421e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4222:	48 89 d6             	mov    %rdx,%rsi
    4225:	48 89 c7             	mov    %rax,%rdi
    4228:	e8 56 09 00 00       	call   4b83 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    422d:	84 c0                	test   %al,%al
    422f:	75 c1                	jne    41f2 <_ZN4neko10ThreadPool13force_releaseEv+0x76>
    }
    mThreads.clear();
    4231:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4235:	48 89 c7             	mov    %rax,%rdi
    4238:	e8 61 0b 00 00       	call   4d9e <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>
  }
    423d:	90                   	nop
    423e:	c9                   	leave
    423f:	c3                   	ret

0000000000004240 <_ZN4neko10ThreadPool7releaseEv>:

  void release() {
    4240:	55                   	push   %rbp
    4241:	48 89 e5             	mov    %rsp,%rbp
    4244:	48 83 ec 10          	sub    $0x10,%rsp
    4248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!busy()) {
    424c:	90                   	nop
    424d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4251:	48 89 c7             	mov    %rax,%rdi
    4254:	e8 db fe ff ff       	call   4134 <_ZN4neko10ThreadPool4busyEv>
    4259:	83 f0 01             	xor    $0x1,%eax
    425c:	84 c0                	test   %al,%al
    425e:	75 ed                	jne    424d <_ZN4neko10ThreadPool7releaseEv+0xd>
    }
    force_release();
    4260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4264:	48 89 c7             	mov    %rax,%rdi
    4267:	e8 10 ff ff ff       	call   417c <_ZN4neko10ThreadPool13force_releaseEv>
  }
    426c:	90                   	nop
    426d:	c9                   	leave
    426e:	c3                   	ret
    426f:	90                   	nop

0000000000004270 <_ZNSt8functionIFvvEED1Ev>:
   *  @brief Polymorphic function wrapper.
   *  @ingroup functors
   *  @since C++11
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
    4270:	55                   	push   %rbp
    4271:	48 89 e5             	mov    %rsp,%rbp
    4274:	48 83 ec 10          	sub    $0x10,%rsp
    4278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    427c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4280:	48 89 c7             	mov    %rax,%rdi
    4283:	e8 8a f8 ff ff       	call   3b12 <_ZNSt14_Function_baseD1Ev>
    4288:	90                   	nop
    4289:	c9                   	leave
    428a:	c3                   	ret
    428b:	90                   	nop

000000000000428c <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>:
  static void threadLoop(ThreadPool *pool) {
    while (true) {
      Job_T job;
      {
        MutexLock_T lock{pool->mQueueMutex};
        pool->mMutexCondition.wait(lock, [pool] {
    428c:	55                   	push   %rbp
    428d:	48 89 e5             	mov    %rsp,%rbp
    4290:	48 83 ec 10          	sub    $0x10,%rsp
    4294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    429c:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    429f:	48 83 c0 18          	add    $0x18,%rax
    42a3:	48 89 c7             	mov    %rax,%rdi
    42a6:	e8 d9 0a 00 00       	call   4d84 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    42ab:	83 f0 01             	xor    $0x1,%eax
    42ae:	84 c0                	test   %al,%al
    42b0:	75 12                	jne    42c4 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x38>
        pool->mMutexCondition.wait(lock, [pool] {
    42b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42b6:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    42b9:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    42c0:	84 c0                	test   %al,%al
    42c2:	74 07                	je     42cb <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x3f>
    42c4:	b8 01 00 00 00       	mov    $0x1,%eax
    42c9:	eb 05                	jmp    42d0 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x44>
    42cb:	b8 00 00 00 00       	mov    $0x0,%eax
        });
    42d0:	c9                   	leave
    42d1:	c3                   	ret

00000000000042d2 <_ZN4neko10ThreadPool10threadLoopEPS0_>:
  static void threadLoop(ThreadPool *pool) {
    42d2:	55                   	push   %rbp
    42d3:	48 89 e5             	mov    %rsp,%rbp
    42d6:	53                   	push   %rbx
    42d7:	48 83 ec 58          	sub    $0x58,%rsp
    42db:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      Job_T job;
    42df:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    42e3:	48 89 c7             	mov    %rax,%rdi
    42e6:	e8 03 0b 00 00       	call   4dee <_ZNSt8functionIFvvEEC1Ev>
        MutexLock_T lock{pool->mQueueMutex};
    42eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    42ef:	48 8d 50 68          	lea    0x68(%rax),%rdx
    42f3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    42f7:	48 89 d6             	mov    %rdx,%rsi
    42fa:	48 89 c7             	mov    %rax,%rdi
    42fd:	e8 f2 09 00 00       	call   4cf4 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
        pool->mMutexCondition.wait(lock, [pool] {
    4302:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4306:	48 8d 88 90 00 00 00 	lea    0x90(%rax),%rcx
    430d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4311:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4315:	48 89 c6             	mov    %rax,%rsi
    4318:	48 89 cf             	mov    %rcx,%rdi
    431b:	e8 06 0b 00 00       	call   4e26 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>
        if (pool->mShouldTerminate) {
    4320:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4324:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    432b:	84 c0                	test   %al,%al
    432d:	74 07                	je     4336 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x64>
          return;
    432f:	bb 00 00 00 00       	mov    $0x0,%ebx
    4334:	eb 64                	jmp    439a <_ZN4neko10ThreadPool10threadLoopEPS0_+0xc8>
        }
        job = pool->mJobs.front();
    4336:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    433a:	48 83 c0 18          	add    $0x18,%rax
    433e:	48 89 c7             	mov    %rax,%rdi
    4341:	e8 20 0b 00 00       	call   4e66 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>
    4346:	48 89 c2             	mov    %rax,%rdx
    4349:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    434d:	48 89 d6             	mov    %rdx,%rsi
    4350:	48 89 c7             	mov    %rax,%rdi
    4353:	e8 28 0b 00 00       	call   4e80 <_ZNSt8functionIFvvEEaSERKS1_>
        pool->mJobs.pop();
    4358:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    435c:	48 83 c0 18          	add    $0x18,%rax
    4360:	48 89 c7             	mov    %rax,%rdi
    4363:	e8 60 0b 00 00       	call   4ec8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>
        pool->mJobStatus[std::this_thread::get_id()]++;
    4368:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    436c:	48 8d 98 c8 00 00 00 	lea    0xc8(%rax),%rbx
    4373:	e8 db f9 ff ff       	call   3d53 <_ZNSt11this_thread6get_idEv>
    4378:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    437c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4380:	48 89 c6             	mov    %rax,%rsi
    4383:	48 89 df             	mov    %rbx,%rdi
    4386:	e8 59 0b 00 00       	call   4ee4 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>
    438b:	48 8b 10             	mov    (%rax),%rdx
    438e:	48 83 c2 01          	add    $0x1,%rdx
    4392:	48 89 10             	mov    %rdx,(%rax)
      }
    4395:	bb 01 00 00 00       	mov    $0x1,%ebx
    439a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    439e:	48 89 c7             	mov    %rax,%rdi
    43a1:	e8 90 09 00 00       	call   4d36 <_ZNSt11unique_lockISt5mutexED1Ev>
    43a6:	83 fb 01             	cmp    $0x1,%ebx
    43a9:	75 0f                	jne    43ba <_ZN4neko10ThreadPool10threadLoopEPS0_+0xe8>
    43ab:	90                   	nop
      job();
    43ac:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43b0:	48 89 c7             	mov    %rax,%rdi
    43b3:	e8 30 0c 00 00       	call   4fe8 <_ZNKSt8functionIFvvEEclEv>
    43b8:	eb 07                	jmp    43c1 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xef>
    43ba:	bb 00 00 00 00       	mov    $0x0,%ebx
    43bf:	eb 05                	jmp    43c6 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xf4>
    }
    43c1:	bb 01 00 00 00       	mov    $0x1,%ebx
    43c6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43ca:	48 89 c7             	mov    %rax,%rdi
    43cd:	e8 9e fe ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
    43d2:	83 fb 01             	cmp    $0x1,%ebx
    43d5:	75 30                	jne    4407 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x135>
    43d7:	e9 03 ff ff ff       	jmp    42df <_ZN4neko10ThreadPool10threadLoopEPS0_+0xd>
      }
    43dc:	48 89 c3             	mov    %rax,%rbx
    43df:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    43e3:	48 89 c7             	mov    %rax,%rdi
    43e6:	e8 4b 09 00 00       	call   4d36 <_ZNSt11unique_lockISt5mutexED1Ev>
    43eb:	eb 03                	jmp    43f0 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x11e>
    }
    43ed:	48 89 c3             	mov    %rax,%rbx
    43f0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43f4:	48 89 c7             	mov    %rax,%rdi
    43f7:	e8 74 fe ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
    43fc:	48 89 d8             	mov    %rbx,%rax
    43ff:	48 89 c7             	mov    %rax,%rdi
    4402:	e8 d9 f0 ff ff       	call   34e0 <_Unwind_Resume@plt>
          return;
    4407:	90                   	nop
  }
    4408:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    440c:	c9                   	leave
    440d:	c3                   	ret

000000000000440e <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
      __uniq_ptr_data(__uniq_ptr_data&&) = default;
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    440e:	55                   	push   %rbp
    440f:	48 89 e5             	mov    %rsp,%rbp
    4412:	48 83 ec 10          	sub    $0x10,%rsp
    4416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    441a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    441e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4422:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4426:	48 89 d6             	mov    %rdx,%rsi
    4429:	48 89 c7             	mov    %rax,%rdi
    442c:	e8 37 10 00 00       	call   5468 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    4431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4435:	c9                   	leave
    4436:	c3                   	ret
    4437:	90                   	nop

0000000000004438 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:

      /** @brief Move assignment operator.
       *
       * Invokes the deleter if this object owns a pointer.
       */
      unique_ptr& operator=(unique_ptr&&) = default;
    4438:	55                   	push   %rbp
    4439:	48 89 e5             	mov    %rsp,%rbp
    443c:	48 83 ec 10          	sub    $0x10,%rsp
    4440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4444:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4448:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    444c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4450:	48 89 d6             	mov    %rdx,%rsi
    4453:	48 89 c7             	mov    %rax,%rdi
    4456:	e8 b3 ff ff ff       	call   440e <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    445b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    445f:	c9                   	leave
    4460:	c3                   	ret
    4461:	90                   	nop

0000000000004462 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    4462:	55                   	push   %rbp
    4463:	48 89 e5             	mov    %rsp,%rbp
    4466:	48 83 ec 10          	sub    $0x10,%rsp
    446a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    446e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4476:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    447a:	48 89 d6             	mov    %rdx,%rsi
    447d:	48 89 c7             	mov    %rax,%rdi
    4480:	e8 f9 10 00 00       	call   557e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    4485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4489:	c9                   	leave
    448a:	c3                   	ret
    448b:	90                   	nop

000000000000448c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    448c:	55                   	push   %rbp
    448d:	48 89 e5             	mov    %rsp,%rbp
    4490:	48 83 ec 10          	sub    $0x10,%rsp
    4494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4498:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    449c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44a4:	48 89 d6             	mov    %rdx,%rsi
    44a7:	48 89 c7             	mov    %rax,%rdi
    44aa:	e8 b3 ff ff ff       	call   4462 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    44af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44b3:	c9                   	leave
    44b4:	c3                   	ret
    44b5:	90                   	nop

00000000000044b6 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    44b6:	55                   	push   %rbp
    44b7:	48 89 e5             	mov    %rsp,%rbp
    44ba:	48 83 ec 10          	sub    $0x10,%rsp
    44be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44ce:	48 89 d6             	mov    %rdx,%rsi
    44d1:	48 89 c7             	mov    %rax,%rdi
    44d4:	e8 79 11 00 00       	call   5652 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    44d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44dd:	c9                   	leave
    44de:	c3                   	ret
    44df:	90                   	nop

00000000000044e0 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    44e0:	55                   	push   %rbp
    44e1:	48 89 e5             	mov    %rsp,%rbp
    44e4:	48 83 ec 10          	sub    $0x10,%rsp
    44e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44f8:	48 89 d6             	mov    %rdx,%rsi
    44fb:	48 89 c7             	mov    %rax,%rdi
    44fe:	e8 b3 ff ff ff       	call   44b6 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    4503:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4507:	c9                   	leave
    4508:	c3                   	ret
    4509:	90                   	nop

000000000000450a <_ZN4neko6EngineC1Ev>:

namespace neko {

class Engine {
public:
  Engine() {
    450a:	55                   	push   %rbp
    450b:	48 89 e5             	mov    %rsp,%rbp
    450e:	53                   	push   %rbx
    450f:	48 83 ec 38          	sub    $0x38,%rsp
    4513:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4517:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    451b:	48 89 c7             	mov    %rax,%rdi
    451e:	e8 33 0b 00 00       	call   5056 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>
    4523:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4527:	48 83 c0 08          	add    $0x8,%rax
    452b:	48 89 c7             	mov    %rax,%rdi
    452e:	e8 e5 0b 00 00       	call   5118 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>
    4533:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4537:	48 83 c0 10          	add    $0x10,%rax
    453b:	48 89 c7             	mov    %rax,%rdi
    453e:	e8 97 0c 00 00       	call   51da <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>
    mSettings = std::make_unique<Settings>();
    4543:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4547:	48 89 c7             	mov    %rax,%rdi
    454a:	e8 96 0e 00 00       	call   53e5 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    454f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4553:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    4557:	48 89 d6             	mov    %rdx,%rsi
    455a:	48 89 c7             	mov    %rax,%rdi
    455d:	e8 d6 fe ff ff       	call   4438 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    4562:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4566:	48 89 c7             	mov    %rax,%rdi
    4569:	e8 0e 0b 00 00       	call   507c <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    mThreadPool = std::make_unique<ThreadPool>(*mSettings);
    456e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4572:	48 89 c7             	mov    %rax,%rdi
    4575:	e8 42 0f 00 00       	call   54bc <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    457a:	48 89 c2             	mov    %rax,%rdx
    457d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4581:	48 89 d6             	mov    %rdx,%rsi
    4584:	48 89 c7             	mov    %rax,%rdi
    4587:	e8 72 0f 00 00       	call   54fe <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    458c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4590:	48 8d 50 10          	lea    0x10(%rax),%rdx
    4594:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4598:	48 89 c6             	mov    %rax,%rsi
    459b:	48 89 d7             	mov    %rdx,%rdi
    459e:	e8 e9 fe ff ff       	call   448c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    45a3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    45a7:	48 89 c7             	mov    %rax,%rdi
    45aa:	e8 51 0c 00 00       	call   5200 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    mRenderer = std::make_unique<Renderer>(*mSettings);
    45af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45b3:	48 89 c7             	mov    %rax,%rdi
    45b6:	e8 01 0f 00 00       	call   54bc <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    45bb:	48 89 c2             	mov    %rax,%rdx
    45be:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    45c2:	48 89 d6             	mov    %rdx,%rsi
    45c5:	48 89 c7             	mov    %rax,%rdi
    45c8:	e8 05 10 00 00       	call   55d2 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    45cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45d1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    45d5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    45d9:	48 89 c6             	mov    %rax,%rsi
    45dc:	48 89 d7             	mov    %rdx,%rdi
    45df:	e8 fc fe ff ff       	call   44e0 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    45e4:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    45e8:	48 89 c7             	mov    %rax,%rdi
    45eb:	e8 4e 0b 00 00       	call   513e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
  };
    45f0:	eb 3a                	jmp    462c <_ZN4neko6EngineC1Ev+0x122>
    45f2:	48 89 c3             	mov    %rax,%rbx
    45f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45f9:	48 83 c0 10          	add    $0x10,%rax
    45fd:	48 89 c7             	mov    %rax,%rdi
    4600:	e8 fb 0b 00 00       	call   5200 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    4605:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4609:	48 83 c0 08          	add    $0x8,%rax
    460d:	48 89 c7             	mov    %rax,%rdi
    4610:	e8 29 0b 00 00       	call   513e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    4615:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4619:	48 89 c7             	mov    %rax,%rdi
    461c:	e8 5b 0a 00 00       	call   507c <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    4621:	48 89 d8             	mov    %rbx,%rax
    4624:	48 89 c7             	mov    %rax,%rdi
    4627:	e8 b4 ee ff ff       	call   34e0 <_Unwind_Resume@plt>
    462c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4630:	c9                   	leave
    4631:	c3                   	ret

0000000000004632 <_ZZN4neko6Engine5startEvENKUlvE_clEv>:

  ~Engine() = default;

  void start() {
    std::cout << mThreadPool->threadCount() << '\n';
    mThreadPool->submitJob([&] { mRenderer->start(); });
    4632:	55                   	push   %rbp
    4633:	48 89 e5             	mov    %rsp,%rbp
    4636:	48 83 ec 10          	sub    $0x10,%rsp
    463a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    463e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4642:	48 8b 00             	mov    (%rax),%rax
    4645:	48 83 c0 08          	add    $0x8,%rax
    4649:	48 89 c7             	mov    %rax,%rdi
    464c:	e8 6f 10 00 00       	call   56c0 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>
    4651:	48 89 c7             	mov    %rax,%rdi
    4654:	e8 a5 f3 ff ff       	call   39fe <_ZN4neko8Renderer5startEv>
    4659:	90                   	nop
    465a:	c9                   	leave
    465b:	c3                   	ret

000000000000465c <_ZN4neko6Engine5startEv>:
  void start() {
    465c:	55                   	push   %rbp
    465d:	48 89 e5             	mov    %rsp,%rbp
    4660:	53                   	push   %rbx
    4661:	48 83 ec 48          	sub    $0x48,%rsp
    4665:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    std::cout << mThreadPool->threadCount() << '\n';
    4669:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    466d:	48 83 c0 10          	add    $0x10,%rax
    4671:	48 89 c7             	mov    %rax,%rdi
    4674:	e8 2d 10 00 00       	call   56a6 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    4679:	48 89 c7             	mov    %rax,%rdi
    467c:	e8 19 fa ff ff       	call   409a <_ZNK4neko10ThreadPool11threadCountEv>
    4681:	48 89 c6             	mov    %rax,%rsi
    4684:	48 8d 05 35 ac 01 00 	lea    0x1ac35(%rip),%rax        # 1f2c0 <_ZSt4cout@GLIBCXX_3.4>
    468b:	48 89 c7             	mov    %rax,%rdi
    468e:	e8 cd e9 ff ff       	call   3060 <_ZNSolsEm@plt>
    4693:	be 0a 00 00 00       	mov    $0xa,%esi
    4698:	48 89 c7             	mov    %rax,%rdi
    469b:	e8 f0 ec ff ff       	call   3390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    mThreadPool->submitJob([&] { mRenderer->start(); });
    46a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46a4:	48 83 c0 10          	add    $0x10,%rax
    46a8:	48 89 c7             	mov    %rax,%rdi
    46ab:	e8 f6 0f 00 00       	call   56a6 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    46b0:	48 89 c3             	mov    %rax,%rbx
    46b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    46bb:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    46bf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    46c3:	48 89 d6             	mov    %rdx,%rsi
    46c6:	48 89 c7             	mov    %rax,%rdi
    46c9:	e8 0c 10 00 00       	call   56da <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>
    46ce:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    46d2:	48 89 c6             	mov    %rax,%rsi
    46d5:	48 89 df             	mov    %rbx,%rdi
    46d8:	e8 d7 f9 ff ff       	call   40b4 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>
    46dd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    46e1:	48 89 c7             	mov    %rax,%rdi
    46e4:	e8 87 fb ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
  };
    46e9:	eb 1a                	jmp    4705 <_ZN4neko6Engine5startEv+0xa9>
    mThreadPool->submitJob([&] { mRenderer->start(); });
    46eb:	48 89 c3             	mov    %rax,%rbx
    46ee:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    46f2:	48 89 c7             	mov    %rax,%rdi
    46f5:	e8 76 fb ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
    46fa:	48 89 d8             	mov    %rbx,%rax
    46fd:	48 89 c7             	mov    %rax,%rdi
    4700:	e8 db ed ff ff       	call   34e0 <_Unwind_Resume@plt>
  };
    4705:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4709:	c9                   	leave
    470a:	c3                   	ret
    470b:	90                   	nop

000000000000470c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    470c:	55                   	push   %rbp
    470d:	48 89 e5             	mov    %rsp,%rbp
    4710:	48 83 ec 20          	sub    $0x20,%rsp
    4714:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4718:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    471f:	00 
      while (!eq(__p[__i], char_type()))
    4720:	eb 05                	jmp    4727 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4722:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4727:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    472b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    472f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4733:	48 01 c2             	add    %rax,%rdx
    4736:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    473a:	48 89 c6             	mov    %rax,%rsi
    473d:	48 89 d7             	mov    %rdx,%rdi
    4740:	e8 7b 11 00 00       	call   58c0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4745:	83 f0 01             	xor    $0x1,%eax
    4748:	84 c0                	test   %al,%al
    474a:	75 d6                	jne    4722 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    474c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4750:	c9                   	leave
    4751:	c3                   	ret

0000000000004752 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4752:	55                   	push   %rbp
    4753:	48 89 e5             	mov    %rsp,%rbp
    4756:	48 83 ec 10          	sub    $0x10,%rsp
    475a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    475e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4762:	48 89 c7             	mov    %rax,%rdi
    4765:	e8 e6 e8 ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    476a:	90                   	nop
    476b:	c9                   	leave
    476c:	c3                   	ret
    476d:	90                   	nop

000000000000476e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    476e:	55                   	push   %rbp
    476f:	48 89 e5             	mov    %rsp,%rbp
    4772:	53                   	push   %rbx
    4773:	48 83 ec 38          	sub    $0x38,%rsp
    4777:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    477b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    477f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4783:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4787:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    478b:	48 89 c7             	mov    %rax,%rdi
    478e:	e8 9d ea ff ff       	call   3230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4793:	48 89 c1             	mov    %rax,%rcx
    4796:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    479a:	48 89 c2             	mov    %rax,%rdx
    479d:	48 89 ce             	mov    %rcx,%rsi
    47a0:	48 89 df             	mov    %rbx,%rdi
    47a3:	e8 88 eb ff ff       	call   3330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    47a8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    47ad:	75 0f                	jne    47be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    47af:	48 8d 05 b2 ce 00 00 	lea    0xceb2(%rip),%rax        # 11668 <_ZN6__pstl9execution2v1L5unseqE+0x29>
    47b6:	48 89 c7             	mov    %rax,%rdi
    47b9:	e8 f2 e9 ff ff       	call   31b0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    47be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    47c2:	48 89 c7             	mov    %rax,%rdi
    47c5:	e8 e0 f0 ff ff       	call   38aa <_ZNSt11char_traitsIcE6lengthEPKc>
    47ca:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    47ce:	48 01 d0             	add    %rdx,%rax
    47d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    47d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    47d9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    47dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47e1:	48 89 ce             	mov    %rcx,%rsi
    47e4:	48 89 c7             	mov    %rax,%rdi
    47e7:	e8 3a 11 00 00       	call   5926 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    47ec:	eb 1a                	jmp    4808 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    47ee:	48 89 c3             	mov    %rax,%rbx
    47f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47f5:	48 89 c7             	mov    %rax,%rdi
    47f8:	e8 55 ff ff ff       	call   4752 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    47fd:	48 89 d8             	mov    %rbx,%rax
    4800:	48 89 c7             	mov    %rax,%rdi
    4803:	e8 d8 ec ff ff       	call   34e0 <_Unwind_Resume@plt>
    4808:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    480c:	c9                   	leave
    480d:	c3                   	ret

000000000000480e <_ZSt3maxImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    480e:	55                   	push   %rbp
    480f:	48 89 e5             	mov    %rsp,%rbp
    4812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4816:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
    481a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    481e:	48 8b 10             	mov    (%rax),%rdx
    4821:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4825:	48 8b 00             	mov    (%rax),%rax
    4828:	48 39 c2             	cmp    %rax,%rdx
    482b:	73 06                	jae    4833 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    482d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4831:	eb 04                	jmp    4837 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    4833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4837:	5d                   	pop    %rbp
    4838:	c3                   	ret

0000000000004839 <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>:
			      is_move_constructible<_Tp>,
			      is_move_assignable<_Tp>>::value>::type
#else
    void
#endif
    swap(_Tp& __a, _Tp& __b)
    4839:	55                   	push   %rbp
    483a:	48 89 e5             	mov    %rsp,%rbp
    483d:	48 83 ec 20          	sub    $0x20,%rsp
    4841:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4845:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    4849:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    484d:	48 89 c7             	mov    %rax,%rdi
    4850:	e8 b8 11 00 00       	call   5a0d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4855:	48 8b 00             	mov    (%rax),%rax
    4858:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    485c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4860:	48 89 c7             	mov    %rax,%rdi
    4863:	e8 a5 11 00 00       	call   5a0d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4868:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    486c:	48 8b 00             	mov    (%rax),%rax
    486f:	48 89 02             	mov    %rax,(%rdx)
      __b = _GLIBCXX_MOVE(__tmp);
    4872:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4876:	48 89 c7             	mov    %rax,%rdi
    4879:	e8 8f 11 00 00       	call   5a0d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    487e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4882:	48 8b 00             	mov    (%rax),%rax
    4885:	48 89 02             	mov    %rax,(%rdx)
    }
    4888:	90                   	nop
    4889:	c9                   	leave
    488a:	c3                   	ret
    488b:	90                   	nop

000000000000488c <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    488c:	55                   	push   %rbp
    488d:	48 89 e5             	mov    %rsp,%rbp
    4890:	48 83 ec 10          	sub    $0x10,%rsp
    4894:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    4898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    489c:	48 89 c7             	mov    %rax,%rdi
    489f:	e8 78 11 00 00       	call   5a1c <_ZNSaISt6threadEC1Ev>
    48a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48a8:	48 89 c7             	mov    %rax,%rdi
    48ab:	e8 88 11 00 00       	call   5a38 <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    48b0:	90                   	nop
    48b1:	c9                   	leave
    48b2:	c3                   	ret
    48b3:	90                   	nop

00000000000048b4 <_ZNSaISt6threadED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    48b4:	55                   	push   %rbp
    48b5:	48 89 e5             	mov    %rsp,%rbp
    48b8:	48 83 ec 10          	sub    $0x10,%rsp
    48bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48c4:	48 89 c7             	mov    %rax,%rdi
    48c7:	e8 9a 11 00 00       	call   5a66 <_ZNSt15__new_allocatorISt6threadED1Ev>
    48cc:	90                   	nop
    48cd:	c9                   	leave
    48ce:	c3                   	ret
    48cf:	90                   	nop

00000000000048d0 <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    48d0:	55                   	push   %rbp
    48d1:	48 89 e5             	mov    %rsp,%rbp
    48d4:	48 83 ec 10          	sub    $0x10,%rsp
    48d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    48dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48e0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    48e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48e8:	48 8b 00             	mov    (%rax),%rax
    48eb:	48 29 c2             	sub    %rax,%rdx
    48ee:	48 89 d0             	mov    %rdx,%rax
    48f1:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    48f5:	48 89 c2             	mov    %rax,%rdx
    48f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48fc:	48 8b 08             	mov    (%rax),%rcx
    48ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4903:	48 89 ce             	mov    %rcx,%rsi
    4906:	48 89 c7             	mov    %rax,%rdi
    4909:	e8 64 11 00 00       	call   5a72 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
      }
    490e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4912:	48 89 c7             	mov    %rax,%rdi
    4915:	e8 7a f4 ff ff       	call   3d94 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>
    491a:	90                   	nop
    491b:	c9                   	leave
    491c:	c3                   	ret
    491d:	90                   	nop

000000000000491e <_ZNSt6vectorISt6threadSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    491e:	55                   	push   %rbp
    491f:	48 89 e5             	mov    %rsp,%rbp
    4922:	48 83 ec 10          	sub    $0x10,%rsp
    4926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    492a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    492e:	48 89 c7             	mov    %rax,%rdi
    4931:	e8 72 11 00 00       	call   5aa8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    4936:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    493d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4945:	48 8b 00             	mov    (%rax),%rax
    4948:	48 89 ce             	mov    %rcx,%rsi
    494b:	48 89 c7             	mov    %rax,%rdi
    494e:	e8 63 11 00 00       	call   5ab6 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4957:	48 89 c7             	mov    %rax,%rdi
    495a:	e8 71 ff ff ff       	call   48d0 <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>
    495f:	90                   	nop
    4960:	c9                   	leave
    4961:	c3                   	ret

0000000000004962 <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %deque with no elements.
       */
#if __cplusplus >= 201103L
      deque() = default;
    4962:	55                   	push   %rbp
    4963:	48 89 e5             	mov    %rsp,%rbp
    4966:	48 83 ec 10          	sub    $0x10,%rsp
    496a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    496e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4972:	48 89 c7             	mov    %rax,%rdi
    4975:	e8 82 11 00 00       	call   5afc <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>
    497a:	90                   	nop
    497b:	c9                   	leave
    497c:	c3                   	ret
    497d:	90                   	nop

000000000000497e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>:
      queue(const _Sequence& __c = _Sequence())
      : c(__c) { }
#else
      template<typename _Seq = _Sequence, typename _Requires = typename
	       enable_if<is_default_constructible<_Seq>::value>::type>
	queue()
    497e:	55                   	push   %rbp
    497f:	48 89 e5             	mov    %rsp,%rbp
    4982:	48 83 ec 10          	sub    $0x10,%rsp
    4986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: c() { }
    498a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    498e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4992:	0f 11 00             	movups %xmm0,(%rax)
    4995:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4999:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    499d:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    49a1:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    49a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49a9:	48 89 c7             	mov    %rax,%rdi
    49ac:	e8 b1 ff ff ff       	call   4962 <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>
    49b1:	90                   	nop
    49b2:	c9                   	leave
    49b3:	c3                   	ret

00000000000049b4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~deque()
    49b4:	55                   	push   %rbp
    49b5:	48 89 e5             	mov    %rsp,%rbp
    49b8:	53                   	push   %rbx
    49b9:	48 83 ec 58          	sub    $0x58,%rsp
    49bd:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
    49c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    49c5:	48 89 c7             	mov    %rax,%rdi
    49c8:	e8 3f 12 00 00       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    49cd:	48 89 c3             	mov    %rax,%rbx
    49d0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    49d4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    49d8:	48 89 d6             	mov    %rdx,%rsi
    49db:	48 89 c7             	mov    %rax,%rdi
    49de:	e8 fb 11 00 00       	call   5bde <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>
    49e3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    49e7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    49eb:	48 89 d6             	mov    %rdx,%rsi
    49ee:	48 89 c7             	mov    %rax,%rdi
    49f1:	e8 ba 11 00 00       	call   5bb0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    49f6:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    49fa:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    49fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4a02:	48 89 d9             	mov    %rbx,%rcx
    4a05:	48 89 c7             	mov    %rax,%rdi
    4a08:	e8 0d 12 00 00       	call   5c1a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>
    4a0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4a11:	48 89 c7             	mov    %rax,%rdi
    4a14:	e8 2f 11 00 00       	call   5b48 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>
    4a19:	90                   	nop
    4a1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a1e:	c9                   	leave
    4a1f:	c3                   	ret

0000000000004a20 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    4a20:	55                   	push   %rbp
    4a21:	48 89 e5             	mov    %rsp,%rbp
    4a24:	48 83 ec 10          	sub    $0x10,%rsp
    4a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    4a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a30:	48 89 c7             	mov    %rax,%rdi
    4a33:	e8 3a 12 00 00       	call   5c72 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    4a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a3c:	48 89 c7             	mov    %rax,%rdi
    4a3f:	e8 4a 12 00 00       	call   5c8e <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>
    4a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a48:	48 83 c0 08          	add    $0x8,%rax
    4a4c:	48 89 c7             	mov    %rax,%rdi
    4a4f:	e8 3c f1 ff ff       	call   3b90 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    4a54:	90                   	nop
    4a55:	c9                   	leave
    4a56:	c3                   	ret
    4a57:	90                   	nop

0000000000004a58 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    4a58:	55                   	push   %rbp
    4a59:	48 89 e5             	mov    %rsp,%rbp
    4a5c:	48 83 ec 10          	sub    $0x10,%rsp
    4a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a68:	48 89 c7             	mov    %rax,%rdi
    4a6b:	e8 2a 12 00 00       	call   5c9a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    4a70:	90                   	nop
    4a71:	c9                   	leave
    4a72:	c3                   	ret
    4a73:	90                   	nop

0000000000004a74 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    4a74:	55                   	push   %rbp
    4a75:	48 89 e5             	mov    %rsp,%rbp
    4a78:	48 83 ec 10          	sub    $0x10,%rsp
    4a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    4a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a84:	48 89 c7             	mov    %rax,%rdi
    4a87:	e8 80 12 00 00       	call   5d0c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    4a8c:	48 89 c2             	mov    %rax,%rdx
    4a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a93:	48 89 d6             	mov    %rdx,%rsi
    4a96:	48 89 c7             	mov    %rax,%rdi
    4a99:	e8 08 12 00 00       	call   5ca6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
    4a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa2:	48 89 c7             	mov    %rax,%rdi
    4aa5:	e8 96 f3 ff ff       	call   3e40 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>
    4aaa:	90                   	nop
    4aab:	c9                   	leave
    4aac:	c3                   	ret
    4aad:	90                   	nop

0000000000004aae <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>:
       *  %vector's current size the %vector is truncated, otherwise
       *  default constructed elements are appended.
       */
      _GLIBCXX20_CONSTEXPR
      void
      resize(size_type __new_size)
    4aae:	55                   	push   %rbp
    4aaf:	48 89 e5             	mov    %rsp,%rbp
    4ab2:	48 83 ec 10          	sub    $0x10,%rsp
    4ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	if (__new_size > size())
    4abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ac2:	48 89 c7             	mov    %rax,%rdi
    4ac5:	e8 06 02 00 00       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4aca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4ace:	0f 92 c0             	setb   %al
    4ad1:	84 c0                	test   %al,%al
    4ad3:	74 24                	je     4af9 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    4ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ad9:	48 89 c7             	mov    %rax,%rdi
    4adc:	e8 ef 01 00 00       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4ae1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ae5:	48 29 c2             	sub    %rax,%rdx
    4ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aec:	48 89 d6             	mov    %rdx,%rsi
    4aef:	48 89 c7             	mov    %rax,%rdi
    4af2:	e8 2f 12 00 00       	call   5d26 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>
	else if (__new_size < size())
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
      }
    4af7:	eb 38                	jmp    4b31 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    4af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4afd:	48 89 c7             	mov    %rax,%rdi
    4b00:	e8 cb 01 00 00       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4b05:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4b09:	0f 92 c0             	setb   %al
    4b0c:	84 c0                	test   %al,%al
    4b0e:	74 21                	je     4b31 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b14:	48 8b 00             	mov    (%rax),%rax
    4b17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4b1b:	48 c1 e2 03          	shl    $0x3,%rdx
    4b1f:	48 01 c2             	add    %rax,%rdx
    4b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b26:	48 89 d6             	mov    %rdx,%rsi
    4b29:	48 89 c7             	mov    %rax,%rdi
    4b2c:	e8 ff 13 00 00       	call   5f30 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
      }
    4b31:	90                   	nop
    4b32:	c9                   	leave
    4b33:	c3                   	ret

0000000000004b34 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4b34:	55                   	push   %rbp
    4b35:	48 89 e5             	mov    %rsp,%rbp
    4b38:	48 83 ec 20          	sub    $0x20,%rsp
    4b3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4b40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b44:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4b48:	48 89 d6             	mov    %rdx,%rsi
    4b4b:	48 89 c7             	mov    %rax,%rdi
    4b4e:	e8 3d 14 00 00       	call   5f90 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b57:	c9                   	leave
    4b58:	c3                   	ret
    4b59:	90                   	nop

0000000000004b5a <_ZNSt6vectorISt6threadSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4b5a:	55                   	push   %rbp
    4b5b:	48 89 e5             	mov    %rsp,%rbp
    4b5e:	48 83 ec 20          	sub    $0x20,%rsp
    4b62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4b66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b6a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4b6e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4b72:	48 89 d6             	mov    %rdx,%rsi
    4b75:	48 89 c7             	mov    %rax,%rdi
    4b78:	e8 13 14 00 00       	call   5f90 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b81:	c9                   	leave
    4b82:	c3                   	ret

0000000000004b83 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    4b83:	55                   	push   %rbp
    4b84:	48 89 e5             	mov    %rsp,%rbp
    4b87:	53                   	push   %rbx
    4b88:	48 83 ec 18          	sub    $0x18,%rsp
    4b8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b90:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    4b94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b98:	48 89 c7             	mov    %rax,%rdi
    4b9b:	e8 0e 14 00 00       	call   5fae <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    4ba0:	48 8b 18             	mov    (%rax),%rbx
    4ba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ba7:	48 89 c7             	mov    %rax,%rdi
    4baa:	e8 ff 13 00 00       	call   5fae <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    4baf:	48 8b 00             	mov    (%rax),%rax
    4bb2:	48 39 c3             	cmp    %rax,%rbx
    4bb5:	0f 95 c0             	setne  %al
    4bb8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bbc:	c9                   	leave
    4bbd:	c3                   	ret

0000000000004bbe <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    4bbe:	55                   	push   %rbp
    4bbf:	48 89 e5             	mov    %rsp,%rbp
    4bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    4bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bca:	48 8b 00             	mov    (%rax),%rax
    4bcd:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    4bd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    4bdc:	5d                   	pop    %rbp
    4bdd:	c3                   	ret

0000000000004bde <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4bde:	55                   	push   %rbp
    4bdf:	48 89 e5             	mov    %rsp,%rbp
    4be2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bea:	48 8b 00             	mov    (%rax),%rax
    4bed:	5d                   	pop    %rbp
    4bee:	c3                   	ret
    4bef:	90                   	nop

0000000000004bf0 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>:
      thread(_Callable&& __f, _Args&&... __args)
    4bf0:	55                   	push   %rbp
    4bf1:	48 89 e5             	mov    %rsp,%rbp
    4bf4:	41 55                	push   %r13
    4bf6:	41 54                	push   %r12
    4bf8:	53                   	push   %rbx
    4bf9:	48 83 ec 38          	sub    $0x38,%rsp
    4bfd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4c01:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4c05:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
      {
    4c09:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c0d:	48 89 c7             	mov    %rax,%rdi
    4c10:	e8 05 f0 ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
	auto __depend = nullptr;
    4c15:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    4c1c:	00 
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    4c1d:	bf 18 00 00 00       	mov    $0x18,%edi
    4c22:	e8 a9 e6 ff ff       	call   32d0 <_Znwm@plt>
    4c27:	48 89 c3             	mov    %rax,%rbx
    4c2a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    4c30:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4c34:	48 89 c7             	mov    %rax,%rdi
    4c37:	e8 8e 13 00 00       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    4c3c:	49 89 c4             	mov    %rax,%r12
    4c3f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4c43:	48 89 c7             	mov    %rax,%rdi
    4c46:	e8 71 13 00 00       	call   5fbc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    4c4b:	4c 89 e2             	mov    %r12,%rdx
    4c4e:	48 89 c6             	mov    %rax,%rsi
    4c51:	48 89 df             	mov    %rbx,%rdi
    4c54:	e8 99 13 00 00       	call   5ff2 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>
    4c59:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    4c5f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4c63:	48 89 de             	mov    %rbx,%rsi
    4c66:	48 89 c7             	mov    %rax,%rdi
    4c69:	e8 16 14 00 00       	call   6084 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    4c6e:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    4c72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c76:	ba 00 00 00 00       	mov    $0x0,%edx
    4c7b:	48 89 ce             	mov    %rcx,%rsi
    4c7e:	48 89 c7             	mov    %rax,%rdi
    4c81:	e8 0a e6 ff ff       	call   3290 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>
    4c86:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4c8a:	48 89 c7             	mov    %rax,%rdi
    4c8d:	e8 18 14 00 00       	call   60aa <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
      }
    4c92:	eb 31                	jmp    4cc5 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xd5>
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    4c94:	49 89 c4             	mov    %rax,%r12
    4c97:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4c9b:	48 89 c7             	mov    %rax,%rdi
    4c9e:	e8 07 14 00 00       	call   60aa <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
    4ca3:	eb 03                	jmp    4ca8 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xb8>
    4ca5:	49 89 c4             	mov    %rax,%r12
    4ca8:	45 84 ed             	test   %r13b,%r13b
    4cab:	74 0d                	je     4cba <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xca>
    4cad:	be 18 00 00 00       	mov    $0x18,%esi
    4cb2:	48 89 df             	mov    %rbx,%rdi
    4cb5:	e8 26 e6 ff ff       	call   32e0 <_ZdlPvm@plt>
    4cba:	4c 89 e0             	mov    %r12,%rax
    4cbd:	48 89 c7             	mov    %rax,%rdi
    4cc0:	e8 1b e8 ff ff       	call   34e0 <_Unwind_Resume@plt>
      }
    4cc5:	48 83 c4 38          	add    $0x38,%rsp
    4cc9:	5b                   	pop    %rbx
    4cca:	41 5c                	pop    %r12
    4ccc:	41 5d                	pop    %r13
    4cce:	5d                   	pop    %rbp
    4ccf:	c3                   	ret

0000000000004cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    4cd0:	55                   	push   %rbp
    4cd1:	48 89 e5             	mov    %rsp,%rbp
    4cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cdc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ce4:	48 8b 00             	mov    (%rax),%rax
    4ce7:	48 29 c2             	sub    %rax,%rdx
    4cea:	48 89 d0             	mov    %rdx,%rax
    4ced:	48 c1 f8 03          	sar    $0x3,%rax
    4cf1:	5d                   	pop    %rbp
    4cf2:	c3                   	ret
    4cf3:	90                   	nop

0000000000004cf4 <_ZNSt11unique_lockISt5mutexEC1ERS0_>:

      unique_lock() noexcept
      : _M_device(0), _M_owns(false)
      { }

      explicit unique_lock(mutex_type& __m)
    4cf4:	55                   	push   %rbp
    4cf5:	48 89 e5             	mov    %rsp,%rbp
    4cf8:	48 83 ec 10          	sub    $0x10,%rsp
    4cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_device(std::__addressof(__m)), _M_owns(false)
    4d04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d08:	48 89 c7             	mov    %rax,%rdi
    4d0b:	e8 fe 13 00 00       	call   610e <_ZSt11__addressofISt5mutexEPT_RS1_>
    4d10:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4d14:	48 89 02             	mov    %rax,(%rdx)
    4d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d1b:	c6 40 08 00          	movb   $0x0,0x8(%rax)
      {
	lock();
    4d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d23:	48 89 c7             	mov    %rax,%rdi
    4d26:	e8 f1 13 00 00       	call   611c <_ZNSt11unique_lockISt5mutexE4lockEv>
	_M_owns = true;
    4d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2f:	c6 40 08 01          	movb   $0x1,0x8(%rax)
      }
    4d33:	90                   	nop
    4d34:	c9                   	leave
    4d35:	c3                   	ret

0000000000004d36 <_ZNSt11unique_lockISt5mutexED1Ev>:
		    const chrono::duration<_Rep, _Period>& __rtime)
	: _M_device(std::__addressof(__m)),
	  _M_owns(_M_device->try_lock_for(__rtime))
	{ }

      ~unique_lock()
    4d36:	55                   	push   %rbp
    4d37:	48 89 e5             	mov    %rsp,%rbp
    4d3a:	48 83 ec 10          	sub    $0x10,%rsp
    4d3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_owns)
    4d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d46:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    4d4a:	84 c0                	test   %al,%al
    4d4c:	74 0c                	je     4d5a <_ZNSt11unique_lockISt5mutexED1Ev+0x24>
	  unlock();
    4d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d52:	48 89 c7             	mov    %rax,%rdi
    4d55:	e8 14 14 00 00       	call   616e <_ZNSt11unique_lockISt5mutexE6unlockEv>
      }
    4d5a:	90                   	nop
    4d5b:	c9                   	leave
    4d5c:	c3                   	ret
    4d5d:	90                   	nop

0000000000004d5e <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>:
       *  element at the end of the %queue and assigns the given data
       *  to it.  The time complexity of the operation depends on the
       *  underlying sequence.
       */
      void
      push(const value_type& __x)
    4d5e:	55                   	push   %rbp
    4d5f:	48 89 e5             	mov    %rsp,%rbp
    4d62:	48 83 ec 10          	sub    $0x10,%rsp
    4d66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { c.push_back(__x); }
    4d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d76:	48 89 d6             	mov    %rdx,%rsi
    4d79:	48 89 c7             	mov    %rax,%rdi
    4d7c:	e8 39 14 00 00       	call   61ba <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>
    4d81:	90                   	nop
    4d82:	c9                   	leave
    4d83:	c3                   	ret

0000000000004d84 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>:
      empty() const
    4d84:	55                   	push   %rbp
    4d85:	48 89 e5             	mov    %rsp,%rbp
    4d88:	48 83 ec 10          	sub    $0x10,%rsp
    4d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return c.empty(); }
    4d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d94:	48 89 c7             	mov    %rax,%rdi
    4d97:	e8 8e 14 00 00       	call   622a <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>
    4d9c:	c9                   	leave
    4d9d:	c3                   	ret

0000000000004d9e <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>:
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      void
      clear() _GLIBCXX_NOEXCEPT
    4d9e:	55                   	push   %rbp
    4d9f:	48 89 e5             	mov    %rsp,%rbp
    4da2:	48 83 ec 10          	sub    $0x10,%rsp
    4da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase_at_end(this->_M_impl._M_start); }
    4daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dae:	48 8b 10             	mov    (%rax),%rdx
    4db1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db5:	48 89 d6             	mov    %rdx,%rsi
    4db8:	48 89 c7             	mov    %rax,%rdi
    4dbb:	e8 70 11 00 00       	call   5f30 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
    4dc0:	90                   	nop
    4dc1:	c9                   	leave
    4dc2:	c3                   	ret
    4dc3:	90                   	nop

0000000000004dc4 <_ZNSt14_Function_baseC1Ev>:
    _Function_base() = default;
    4dc4:	55                   	push   %rbp
    4dc5:	48 89 e5             	mov    %rsp,%rbp
    4dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4dd7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4dde:	00 
    4ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4de3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4dea:	00 
    4deb:	90                   	nop
    4dec:	5d                   	pop    %rbp
    4ded:	c3                   	ret

0000000000004dee <_ZNSt8functionIFvvEEC1Ev>:

      /**
       *  @brief Default construct creates an empty function call wrapper.
       *  @post `!(bool)*this`
       */
      function() noexcept
    4dee:	55                   	push   %rbp
    4def:	48 89 e5             	mov    %rsp,%rbp
    4df2:	48 83 ec 10          	sub    $0x10,%rsp
    4df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Function_base() { }
    4dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dfe:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e02:	0f 11 00             	movups %xmm0,(%rax)
    4e05:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    4e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0e:	48 89 c7             	mov    %rax,%rdi
    4e11:	e8 ae ff ff ff       	call   4dc4 <_ZNSt14_Function_baseC1Ev>
    4e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e1a:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    4e21:	00 
    4e22:	90                   	nop
    4e23:	c9                   	leave
    4e24:	c3                   	ret
    4e25:	90                   	nop

0000000000004e26 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>:
    void
    wait(unique_lock<mutex>& __lock);

    template<typename _Predicate>
      void
      wait(unique_lock<mutex>& __lock, _Predicate __p)
    4e26:	55                   	push   %rbp
    4e27:	48 89 e5             	mov    %rsp,%rbp
    4e2a:	48 83 ec 20          	sub    $0x20,%rsp
    4e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	while (!__p())
    4e3a:	eb 13                	jmp    4e4f <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x29>
	  wait(__lock);
    4e3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e44:	48 89 d6             	mov    %rdx,%rsi
    4e47:	48 89 c7             	mov    %rax,%rdi
    4e4a:	e8 31 e2 ff ff       	call   3080 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>
	while (!__p())
    4e4f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4e53:	48 89 c7             	mov    %rax,%rdi
    4e56:	e8 31 f4 ff ff       	call   428c <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>
    4e5b:	83 f0 01             	xor    $0x1,%eax
    4e5e:	84 c0                	test   %al,%al
    4e60:	75 da                	jne    4e3c <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x16>
      }
    4e62:	90                   	nop
    4e63:	90                   	nop
    4e64:	c9                   	leave
    4e65:	c3                   	ret

0000000000004e66 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>:
      front()
    4e66:	55                   	push   %rbp
    4e67:	48 89 e5             	mov    %rsp,%rbp
    4e6a:	48 83 ec 10          	sub    $0x10,%rsp
    4e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return c.front();
    4e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e76:	48 89 c7             	mov    %rax,%rdi
    4e79:	e8 d6 13 00 00       	call   6254 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>
      }
    4e7e:	c9                   	leave
    4e7f:	c3                   	ret

0000000000004e80 <_ZNSt8functionIFvvEEaSERKS1_>:
       *
       *  If `__x` targets a function pointer or a reference to a function
       *  object, then this operation will not throw an exception.
       */
      function&
      operator=(const function& __x)
    4e80:	55                   	push   %rbp
    4e81:	48 89 e5             	mov    %rsp,%rbp
    4e84:	48 83 ec 30          	sub    $0x30,%rsp
    4e88:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e8c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	function(__x).swap(*this);
    4e90:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4e94:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4e98:	48 89 d6             	mov    %rdx,%rsi
    4e9b:	48 89 c7             	mov    %rax,%rdi
    4e9e:	e8 df 13 00 00       	call   6282 <_ZNSt8functionIFvvEEC1ERKS1_>
    4ea3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ea7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4eab:	48 89 d6             	mov    %rdx,%rsi
    4eae:	48 89 c7             	mov    %rax,%rdi
    4eb1:	e8 76 14 00 00       	call   632c <_ZNSt8functionIFvvEE4swapERS1_>
    4eb6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4eba:	48 89 c7             	mov    %rax,%rdi
    4ebd:	e8 ae f3 ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
	return *this;
    4ec2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    4ec6:	c9                   	leave
    4ec7:	c3                   	ret

0000000000004ec8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>:
       *  Note that no data is returned, and if the first element's
       *  data is needed, it should be retrieved before pop() is
       *  called.
       */
      void
      pop()
    4ec8:	55                   	push   %rbp
    4ec9:	48 89 e5             	mov    %rsp,%rbp
    4ecc:	48 83 ec 10          	sub    $0x10,%rsp
    4ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	__glibcxx_requires_nonempty();
	c.pop_front();
    4ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ed8:	48 89 c7             	mov    %rax,%rdi
    4edb:	e8 a8 14 00 00       	call   6388 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>
      }
    4ee0:	90                   	nop
    4ee1:	c9                   	leave
    4ee2:	c3                   	ret
    4ee3:	90                   	nop

0000000000004ee4 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    4ee4:	55                   	push   %rbp
    4ee5:	48 89 e5             	mov    %rsp,%rbp
    4ee8:	53                   	push   %rbx
    4ee9:	48 83 ec 48          	sub    $0x48,%rsp
    4eed:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    4ef1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    4ef5:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4ef9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4efd:	48 89 d6             	mov    %rdx,%rsi
    4f00:	48 89 c7             	mov    %rax,%rdi
    4f03:	e8 ee 14 00 00       	call   63f6 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>
    4f08:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    4f0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f10:	48 89 c7             	mov    %rax,%rdi
    4f13:	e8 04 15 00 00       	call   641c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>
    4f18:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4f1c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4f20:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4f24:	48 89 d6             	mov    %rdx,%rsi
    4f27:	48 89 c7             	mov    %rax,%rdi
    4f2a:	e8 07 15 00 00       	call   6436 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    4f2f:	84 c0                	test   %al,%al
    4f31:	75 32                	jne    4f65 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x81>
    4f33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f37:	48 89 c7             	mov    %rax,%rdi
    4f3a:	e8 19 15 00 00       	call   6458 <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>
    4f3f:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4f43:	48 89 c7             	mov    %rax,%rdi
    4f46:	e8 29 15 00 00       	call   6474 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    4f4b:	48 89 c2             	mov    %rax,%rdx
    4f4e:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    4f52:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    4f56:	48 89 ce             	mov    %rcx,%rsi
    4f59:	48 89 c7             	mov    %rax,%rdi
    4f5c:	e8 31 15 00 00       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    4f61:	84 c0                	test   %al,%al
    4f63:	74 07                	je     4f6c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x88>
    4f65:	b8 01 00 00 00       	mov    $0x1,%eax
    4f6a:	eb 05                	jmp    4f71 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x8d>
    4f6c:	b8 00 00 00 00       	mov    $0x0,%eax
    4f71:	84 c0                	test   %al,%al
    4f73:	74 5d                	je     4fd2 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    4f75:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    4f79:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4f7d:	48 89 c7             	mov    %rax,%rdi
    4f80:	e8 88 0a 00 00       	call   5a0d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4f85:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    4f88:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4f8c:	48 89 d6             	mov    %rdx,%rsi
    4f8f:	48 89 c7             	mov    %rax,%rdi
    4f92:	e8 2a 15 00 00       	call   64c1 <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>
    4f97:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    4f9b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4f9f:	48 89 d6             	mov    %rdx,%rsi
    4fa2:	48 89 c7             	mov    %rax,%rdi
    4fa5:	e8 4c 15 00 00       	call   64f6 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>
    4faa:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    4fae:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fb6:	49 89 c8             	mov    %rcx,%r8
    4fb9:	48 89 d1             	mov    %rdx,%rcx
    4fbc:	48 8d 15 49 c7 00 00 	lea    0xc749(%rip),%rdx        # 1170c <_ZSt19piecewise_construct>
    4fc3:	48 89 c6             	mov    %rax,%rsi
    4fc6:	48 89 df             	mov    %rbx,%rdi
    4fc9:	e8 46 15 00 00       	call   6514 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>
    4fce:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    4fd2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4fd6:	48 89 c7             	mov    %rax,%rdi
    4fd9:	e8 96 14 00 00       	call   6474 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    4fde:	48 83 c0 08          	add    $0x8,%rax
      }
    4fe2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4fe6:	c9                   	leave
    4fe7:	c3                   	ret

0000000000004fe8 <_ZNKSt8functionIFvvEEclEv>:
       *
       *  The function call operator invokes the target function object
       *  stored by `this`.
       */
      _Res
      operator()(_ArgTypes... __args) const
    4fe8:	55                   	push   %rbp
    4fe9:	48 89 e5             	mov    %rsp,%rbp
    4fec:	48 83 ec 10          	sub    $0x10,%rsp
    4ff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_empty())
    4ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ff8:	48 89 c7             	mov    %rax,%rdi
    4ffb:	e8 4c eb ff ff       	call   3b4c <_ZNKSt14_Function_base8_M_emptyEv>
    5000:	84 c0                	test   %al,%al
    5002:	74 05                	je     5009 <_ZNKSt8functionIFvvEEclEv+0x21>
	  __throw_bad_function_call();
    5004:	e8 a7 e0 ff ff       	call   30b0 <_ZSt25__throw_bad_function_callv@plt>
	return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
    5009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    500d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    5011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5015:	48 89 c7             	mov    %rax,%rdi
    5018:	ff d2                	call   *%rdx
    501a:	90                   	nop
      }
    501b:	c9                   	leave
    501c:	c3                   	ret
    501d:	90                   	nop

000000000000501e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    501e:	55                   	push   %rbp
    501f:	48 89 e5             	mov    %rsp,%rbp
    5022:	48 83 ec 10          	sub    $0x10,%rsp
    5026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    502a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    502e:	48 89 c7             	mov    %rax,%rdi
    5031:	e8 da 15 00 00       	call   6610 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    5036:	90                   	nop
    5037:	c9                   	leave
    5038:	c3                   	ret
    5039:	90                   	nop

000000000000503a <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    503a:	55                   	push   %rbp
    503b:	48 89 e5             	mov    %rsp,%rbp
    503e:	48 83 ec 10          	sub    $0x10,%rsp
    5042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    504a:	48 89 c7             	mov    %rax,%rdi
    504d:	e8 cc ff ff ff       	call   501e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>
    5052:	90                   	nop
    5053:	c9                   	leave
    5054:	c3                   	ret
    5055:	90                   	nop

0000000000005056 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    5056:	55                   	push   %rbp
    5057:	48 89 e5             	mov    %rsp,%rbp
    505a:	48 83 ec 10          	sub    $0x10,%rsp
    505e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    5062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5066:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    506d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5071:	48 89 c7             	mov    %rax,%rdi
    5074:	e8 c1 ff ff ff       	call   503a <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    5079:	90                   	nop
    507a:	c9                   	leave
    507b:	c3                   	ret

000000000000507c <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    507c:	55                   	push   %rbp
    507d:	48 89 e5             	mov    %rsp,%rbp
    5080:	53                   	push   %rbx
    5081:	48 83 ec 28          	sub    $0x28,%rsp
    5085:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5089:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    508d:	48 89 c7             	mov    %rax,%rdi
    5090:	e8 97 15 00 00       	call   662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    5095:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    5099:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    509d:	48 8b 00             	mov    (%rax),%rax
    50a0:	48 85 c0             	test   %rax,%rax
    50a3:	74 29                	je     50ce <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    50a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50a9:	48 89 c7             	mov    %rax,%rdi
    50ac:	e8 95 15 00 00       	call   6646 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>
    50b1:	48 89 c3             	mov    %rax,%rbx
    50b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50b8:	48 89 c7             	mov    %rax,%rdi
    50bb:	e8 a0 15 00 00       	call   6660 <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>
    50c0:	48 8b 00             	mov    (%rax),%rax
    50c3:	48 89 c6             	mov    %rax,%rsi
    50c6:	48 89 df             	mov    %rbx,%rdi
    50c9:	e8 bc 15 00 00       	call   668a <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
	__ptr = pointer();
    50ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50d2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    50d9:	90                   	nop
    50da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50de:	c9                   	leave
    50df:	c3                   	ret

00000000000050e0 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    50e0:	55                   	push   %rbp
    50e1:	48 89 e5             	mov    %rsp,%rbp
    50e4:	48 83 ec 10          	sub    $0x10,%rsp
    50e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f0:	48 89 c7             	mov    %rax,%rdi
    50f3:	e8 c8 15 00 00       	call   66c0 <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    50f8:	90                   	nop
    50f9:	c9                   	leave
    50fa:	c3                   	ret
    50fb:	90                   	nop

00000000000050fc <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    50fc:	55                   	push   %rbp
    50fd:	48 89 e5             	mov    %rsp,%rbp
    5100:	48 83 ec 10          	sub    $0x10,%rsp
    5104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    510c:	48 89 c7             	mov    %rax,%rdi
    510f:	e8 cc ff ff ff       	call   50e0 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>
    5114:	90                   	nop
    5115:	c9                   	leave
    5116:	c3                   	ret
    5117:	90                   	nop

0000000000005118 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    5118:	55                   	push   %rbp
    5119:	48 89 e5             	mov    %rsp,%rbp
    511c:	48 83 ec 10          	sub    $0x10,%rsp
    5120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    5124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5128:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    512f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5133:	48 89 c7             	mov    %rax,%rdi
    5136:	e8 c1 ff ff ff       	call   50fc <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    513b:	90                   	nop
    513c:	c9                   	leave
    513d:	c3                   	ret

000000000000513e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    513e:	55                   	push   %rbp
    513f:	48 89 e5             	mov    %rsp,%rbp
    5142:	53                   	push   %rbx
    5143:	48 83 ec 28          	sub    $0x28,%rsp
    5147:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    514b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    514f:	48 89 c7             	mov    %rax,%rdi
    5152:	e8 85 15 00 00       	call   66dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    5157:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    515b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    515f:	48 8b 00             	mov    (%rax),%rax
    5162:	48 85 c0             	test   %rax,%rax
    5165:	74 29                	je     5190 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5167:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    516b:	48 89 c7             	mov    %rax,%rdi
    516e:	e8 83 15 00 00       	call   66f6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>
    5173:	48 89 c3             	mov    %rax,%rbx
    5176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    517a:	48 89 c7             	mov    %rax,%rdi
    517d:	e8 8e 15 00 00       	call   6710 <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>
    5182:	48 8b 00             	mov    (%rax),%rax
    5185:	48 89 c6             	mov    %rax,%rsi
    5188:	48 89 df             	mov    %rbx,%rdi
    518b:	e8 de 15 00 00       	call   676e <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
	__ptr = pointer();
    5190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5194:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    519b:	90                   	nop
    519c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51a0:	c9                   	leave
    51a1:	c3                   	ret

00000000000051a2 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    51a2:	55                   	push   %rbp
    51a3:	48 89 e5             	mov    %rsp,%rbp
    51a6:	48 83 ec 10          	sub    $0x10,%rsp
    51aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51b2:	48 89 c7             	mov    %rax,%rdi
    51b5:	e8 ea 15 00 00       	call   67a4 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    51ba:	90                   	nop
    51bb:	c9                   	leave
    51bc:	c3                   	ret
    51bd:	90                   	nop

00000000000051be <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    51be:	55                   	push   %rbp
    51bf:	48 89 e5             	mov    %rsp,%rbp
    51c2:	48 83 ec 10          	sub    $0x10,%rsp
    51c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ce:	48 89 c7             	mov    %rax,%rdi
    51d1:	e8 cc ff ff ff       	call   51a2 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>
    51d6:	90                   	nop
    51d7:	c9                   	leave
    51d8:	c3                   	ret
    51d9:	90                   	nop

00000000000051da <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    51da:	55                   	push   %rbp
    51db:	48 89 e5             	mov    %rsp,%rbp
    51de:	48 83 ec 10          	sub    $0x10,%rsp
    51e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    51e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    51f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51f5:	48 89 c7             	mov    %rax,%rdi
    51f8:	e8 c1 ff ff ff       	call   51be <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    51fd:	90                   	nop
    51fe:	c9                   	leave
    51ff:	c3                   	ret

0000000000005200 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    5200:	55                   	push   %rbp
    5201:	48 89 e5             	mov    %rsp,%rbp
    5204:	53                   	push   %rbx
    5205:	48 83 ec 28          	sub    $0x28,%rsp
    5209:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    520d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5211:	48 89 c7             	mov    %rax,%rdi
    5214:	e8 a7 15 00 00       	call   67c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    5219:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    521d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5221:	48 8b 00             	mov    (%rax),%rax
    5224:	48 85 c0             	test   %rax,%rax
    5227:	74 29                	je     5252 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5229:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    522d:	48 89 c7             	mov    %rax,%rdi
    5230:	e8 a5 15 00 00       	call   67da <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>
    5235:	48 89 c3             	mov    %rax,%rbx
    5238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    523c:	48 89 c7             	mov    %rax,%rdi
    523f:	e8 b0 15 00 00       	call   67f4 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>
    5244:	48 8b 00             	mov    (%rax),%rax
    5247:	48 89 c6             	mov    %rax,%rsi
    524a:	48 89 df             	mov    %rbx,%rdi
    524d:	e8 b0 15 00 00       	call   6802 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
	__ptr = pointer();
    5252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5256:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    525d:	90                   	nop
    525e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5262:	c9                   	leave
    5263:	c3                   	ret

0000000000005264 <_ZN4neko8SettingsUt_C1Ev>:
  medium = 2,
  high = 1,
};

struct Settings {
  struct {
    5264:	55                   	push   %rbp
    5265:	48 89 e5             	mov    %rsp,%rbp
    5268:	53                   	push   %rbx
    5269:	48 83 ec 28          	sub    $0x28,%rsp
    526d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5271:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5275:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5279:	48 89 c7             	mov    %rax,%rdi
    527c:	e8 6f e2 ff ff       	call   34f0 <_ZNSaIcEC1Ev@plt>
    5281:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5285:	48 89 c2             	mov    %rax,%rdx
    5288:	48 8d 05 0b c4 00 00 	lea    0xc40b(%rip),%rax        # 1169a <_ZN6__pstl9execution2v1L5unseqE+0x5b>
    528f:	48 89 c6             	mov    %rax,%rsi
    5292:	48 89 df             	mov    %rbx,%rdi
    5295:	e8 d4 f4 ff ff       	call   476e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    529a:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    529e:	48 89 c7             	mov    %rax,%rdi
    52a1:	e8 aa e0 ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    52a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52aa:	c7 40 20 00 00 40 00 	movl   $0x400000,0x20(%rax)
    52b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52b5:	48 8d 58 28          	lea    0x28(%rax),%rbx
    52b9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    52bd:	48 89 c7             	mov    %rax,%rdi
    52c0:	e8 2b e2 ff ff       	call   34f0 <_ZNSaIcEC1Ev@plt>
    52c5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    52c9:	48 89 c2             	mov    %rax,%rdx
    52cc:	48 8d 05 da c3 00 00 	lea    0xc3da(%rip),%rax        # 116ad <_ZN6__pstl9execution2v1L5unseqE+0x6e>
    52d3:	48 89 c6             	mov    %rax,%rsi
    52d6:	48 89 df             	mov    %rbx,%rdi
    52d9:	e8 90 f4 ff ff       	call   476e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    52de:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    52e2:	48 89 c7             	mov    %rax,%rdi
    52e5:	e8 66 e0 ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    52ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52ee:	c7 40 48 00 00 40 00 	movl   $0x400000,0x48(%rax)
    52f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52f9:	c7 40 4c 00 30 40 00 	movl   $0x403000,0x4c(%rax)
    5300:	eb 40                	jmp    5342 <_ZN4neko8SettingsUt_C1Ev+0xde>
    5302:	48 89 c3             	mov    %rax,%rbx
    5305:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5309:	48 89 c7             	mov    %rax,%rdi
    530c:	e8 3f e0 ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    5311:	48 89 d8             	mov    %rbx,%rax
    5314:	48 89 c7             	mov    %rax,%rdi
    5317:	e8 c4 e1 ff ff       	call   34e0 <_Unwind_Resume@plt>
    531c:	48 89 c3             	mov    %rax,%rbx
    531f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5323:	48 89 c7             	mov    %rax,%rdi
    5326:	e8 25 e0 ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    532b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    532f:	48 89 c7             	mov    %rax,%rdi
    5332:	e8 39 de ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5337:	48 89 d8             	mov    %rbx,%rax
    533a:	48 89 c7             	mov    %rax,%rdi
    533d:	e8 9e e1 ff ff       	call   34e0 <_Unwind_Resume@plt>
    5342:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5346:	c9                   	leave
    5347:	c3                   	ret

0000000000005348 <_ZN4neko8SettingsUt_D1Ev>:
    5348:	55                   	push   %rbp
    5349:	48 89 e5             	mov    %rsp,%rbp
    534c:	48 83 ec 10          	sub    $0x10,%rsp
    5350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5358:	48 83 c0 28          	add    $0x28,%rax
    535c:	48 89 c7             	mov    %rax,%rdi
    535f:	e8 0c de ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5368:	48 89 c7             	mov    %rax,%rdi
    536b:	e8 00 de ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5370:	90                   	nop
    5371:	c9                   	leave
    5372:	c3                   	ret
    5373:	90                   	nop

0000000000005374 <_ZN4neko8SettingsUt0_C1Ev>:
    u32 appVersion = VK_MAKE_VERSION(1, 0, 0);
    std::string engineName = "Neko Engine";
    u32 engineVersion = VK_MAKE_VERSION(1, 0, 0);
    u32 apiVersion = VK_API_VERSION_1_3;
  } general;
  struct {
    5374:	55                   	push   %rbp
    5375:	48 89 e5             	mov    %rsp,%rbp
    5378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    537c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5380:	c7 00 20 03 00 00    	movl   $0x320,(%rax)
    5386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    538a:	c7 40 04 58 02 00 00 	movl   $0x258,0x4(%rax)
    5391:	90                   	nop
    5392:	5d                   	pop    %rbp
    5393:	c3                   	ret

0000000000005394 <_ZN4neko8SettingsUt1_C1Ev>:
    u32 screenWidth = 800;
    u32 screenHeight = 600;

  } graphics;

  struct {
    5394:	55                   	push   %rbp
    5395:	48 89 e5             	mov    %rsp,%rbp
    5398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a0:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    53a6:	90                   	nop
    53a7:	5d                   	pop    %rbp
    53a8:	c3                   	ret
    53a9:	90                   	nop

00000000000053aa <_ZN4neko8SettingsC1Ev>:
struct Settings {
    53aa:	55                   	push   %rbp
    53ab:	48 89 e5             	mov    %rsp,%rbp
    53ae:	48 83 ec 10          	sub    $0x10,%rsp
    53b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ba:	48 89 c7             	mov    %rax,%rdi
    53bd:	e8 a2 fe ff ff       	call   5264 <_ZN4neko8SettingsUt_C1Ev>
    53c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53c6:	48 83 c0 50          	add    $0x50,%rax
    53ca:	48 89 c7             	mov    %rax,%rdi
    53cd:	e8 a2 ff ff ff       	call   5374 <_ZN4neko8SettingsUt0_C1Ev>
    53d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d6:	48 83 c0 58          	add    $0x58,%rax
    53da:	48 89 c7             	mov    %rax,%rdi
    53dd:	e8 b2 ff ff ff       	call   5394 <_ZN4neko8SettingsUt1_C1Ev>
    53e2:	90                   	nop
    53e3:	c9                   	leave
    53e4:	c3                   	ret

00000000000053e5 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
   *  @relates unique_ptr
   */
  template<typename _Tp, typename... _Args>
    _GLIBCXX23_CONSTEXPR
    inline __detail::__unique_ptr_t<_Tp>
    make_unique(_Args&&... __args)
    53e5:	55                   	push   %rbp
    53e6:	48 89 e5             	mov    %rsp,%rbp
    53e9:	41 54                	push   %r12
    53eb:	53                   	push   %rbx
    53ec:	48 83 ec 10          	sub    $0x10,%rsp
    53f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    53f4:	bf 60 00 00 00       	mov    $0x60,%edi
    53f9:	e8 d2 de ff ff       	call   32d0 <_Znwm@plt>
    53fe:	48 89 c6             	mov    %rax,%rsi
    5401:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5407:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    540b:	b8 00 00 00 00       	mov    $0x0,%eax
    5410:	ba 0c 00 00 00       	mov    $0xc,%edx
    5415:	48 89 f7             	mov    %rsi,%rdi
    5418:	48 89 d1             	mov    %rdx,%rcx
    541b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    541e:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5422:	e8 83 ff ff ff       	call   53aa <_ZN4neko8SettingsC1Ev>
    5427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    542b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    542f:	48 89 c7             	mov    %rax,%rdi
    5432:	e8 27 14 00 00       	call   685e <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5437:	eb 21                	jmp    545a <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x75>
    5439:	48 89 c3             	mov    %rax,%rbx
    543c:	45 84 e4             	test   %r12b,%r12b
    543f:	74 0e                	je     544f <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x6a>
    5441:	be 60 00 00 00       	mov    $0x60,%esi
    5446:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    544a:	e8 91 de ff ff       	call   32e0 <_ZdlPvm@plt>
    544f:	48 89 d8             	mov    %rbx,%rax
    5452:	48 89 c7             	mov    %rax,%rdi
    5455:	e8 86 e0 ff ff       	call   34e0 <_Unwind_Resume@plt>
    545a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    545e:	48 83 c4 10          	add    $0x10,%rsp
    5462:	5b                   	pop    %rbx
    5463:	41 5c                	pop    %r12
    5465:	5d                   	pop    %rbp
    5466:	c3                   	ret
    5467:	90                   	nop

0000000000005468 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    5468:	55                   	push   %rbp
    5469:	48 89 e5             	mov    %rsp,%rbp
    546c:	48 83 ec 10          	sub    $0x10,%rsp
    5470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5474:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    547c:	48 89 c7             	mov    %rax,%rdi
    547f:	e8 64 14 00 00       	call   68e8 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>
    5484:	48 89 c2             	mov    %rax,%rdx
    5487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548b:	48 89 d6             	mov    %rdx,%rsi
    548e:	48 89 c7             	mov    %rax,%rdi
    5491:	e8 ee 13 00 00       	call   6884 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5496:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    549a:	48 89 c7             	mov    %rax,%rdi
    549d:	e8 7e 14 00 00       	call   6920 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    54a2:	48 89 c7             	mov    %rax,%rdi
    54a5:	e8 90 14 00 00       	call   693a <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>
    54aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54ae:	48 89 c7             	mov    %rax,%rdi
    54b1:	e8 6a 14 00 00       	call   6920 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    54b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    54ba:	c9                   	leave
    54bb:	c3                   	ret

00000000000054bc <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    54bc:	55                   	push   %rbp
    54bd:	48 89 e5             	mov    %rsp,%rbp
    54c0:	48 83 ec 10          	sub    $0x10,%rsp
    54c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    54c8:	e8 b1 e3 ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    54cd:	84 c0                	test   %al,%al
    54cf:	74 18                	je     54e9 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    54d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d5:	48 89 c7             	mov    %rax,%rdi
    54d8:	e8 6b 14 00 00       	call   6948 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
    54dd:	48 85 c0             	test   %rax,%rax
    54e0:	75 07                	jne    54e9 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    54e2:	b8 01 00 00 00       	mov    $0x1,%eax
    54e7:	eb 05                	jmp    54ee <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x32>
    54e9:	b8 00 00 00 00       	mov    $0x0,%eax
    54ee:	84 c0                	test   %al,%al
	return *get();
    54f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f4:	48 89 c7             	mov    %rax,%rdi
    54f7:	e8 4c 14 00 00       	call   6948 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
      }
    54fc:	c9                   	leave
    54fd:	c3                   	ret

00000000000054fe <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    54fe:	55                   	push   %rbp
    54ff:	48 89 e5             	mov    %rsp,%rbp
    5502:	41 54                	push   %r12
    5504:	53                   	push   %rbx
    5505:	48 83 ec 20          	sub    $0x20,%rsp
    5509:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    550d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5511:	bf f8 00 00 00       	mov    $0xf8,%edi
    5516:	e8 b5 dd ff ff       	call   32d0 <_Znwm@plt>
    551b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    551f:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5525:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5529:	48 89 c7             	mov    %rax,%rdi
    552c:	e8 31 14 00 00       	call   6962 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    5531:	48 89 c6             	mov    %rax,%rsi
    5534:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5538:	e8 73 e9 ff ff       	call   3eb0 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>
    553d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5541:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    5545:	48 89 c7             	mov    %rax,%rdi
    5548:	e8 49 14 00 00       	call   6996 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    554d:	eb 21                	jmp    5570 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x72>
    554f:	48 89 c3             	mov    %rax,%rbx
    5552:	45 84 e4             	test   %r12b,%r12b
    5555:	74 0e                	je     5565 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x67>
    5557:	be f8 00 00 00       	mov    $0xf8,%esi
    555c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5560:	e8 7b dd ff ff       	call   32e0 <_ZdlPvm@plt>
    5565:	48 89 d8             	mov    %rbx,%rax
    5568:	48 89 c7             	mov    %rax,%rdi
    556b:	e8 70 df ff ff       	call   34e0 <_Unwind_Resume@plt>
    5570:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5574:	48 83 c4 20          	add    $0x20,%rsp
    5578:	5b                   	pop    %rbx
    5579:	41 5c                	pop    %r12
    557b:	5d                   	pop    %rbp
    557c:	c3                   	ret
    557d:	90                   	nop

000000000000557e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    557e:	55                   	push   %rbp
    557f:	48 89 e5             	mov    %rsp,%rbp
    5582:	48 83 ec 10          	sub    $0x10,%rsp
    5586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    558a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    558e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5592:	48 89 c7             	mov    %rax,%rdi
    5595:	e8 86 14 00 00       	call   6a20 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>
    559a:	48 89 c2             	mov    %rax,%rdx
    559d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a1:	48 89 d6             	mov    %rdx,%rsi
    55a4:	48 89 c7             	mov    %rax,%rdi
    55a7:	e8 10 14 00 00       	call   69bc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    55ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55b0:	48 89 c7             	mov    %rax,%rdi
    55b3:	e8 a0 14 00 00       	call   6a58 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    55b8:	48 89 c7             	mov    %rax,%rdi
    55bb:	e8 b2 14 00 00       	call   6a72 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>
    55c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55c4:	48 89 c7             	mov    %rax,%rdi
    55c7:	e8 8c 14 00 00       	call   6a58 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    55cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    55d0:	c9                   	leave
    55d1:	c3                   	ret

00000000000055d2 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    55d2:	55                   	push   %rbp
    55d3:	48 89 e5             	mov    %rsp,%rbp
    55d6:	41 54                	push   %r12
    55d8:	53                   	push   %rbx
    55d9:	48 83 ec 20          	sub    $0x20,%rsp
    55dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    55e5:	bf 68 00 00 00       	mov    $0x68,%edi
    55ea:	e8 e1 dc ff ff       	call   32d0 <_Znwm@plt>
    55ef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    55f3:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    55f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    55fd:	48 89 c7             	mov    %rax,%rdi
    5600:	e8 5d 13 00 00       	call   6962 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    5605:	48 89 c6             	mov    %rax,%rsi
    5608:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    560c:	e8 07 e3 ff ff       	call   3918 <_ZN4neko8RendererC1ERKNS_8SettingsE>
    5611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5615:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    5619:	48 89 c7             	mov    %rax,%rdi
    561c:	e8 85 14 00 00       	call   6aa6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5621:	eb 21                	jmp    5644 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x72>
    5623:	48 89 c3             	mov    %rax,%rbx
    5626:	45 84 e4             	test   %r12b,%r12b
    5629:	74 0e                	je     5639 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x67>
    562b:	be 68 00 00 00       	mov    $0x68,%esi
    5630:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5634:	e8 a7 dc ff ff       	call   32e0 <_ZdlPvm@plt>
    5639:	48 89 d8             	mov    %rbx,%rax
    563c:	48 89 c7             	mov    %rax,%rdi
    563f:	e8 9c de ff ff       	call   34e0 <_Unwind_Resume@plt>
    5644:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5648:	48 83 c4 20          	add    $0x20,%rsp
    564c:	5b                   	pop    %rbx
    564d:	41 5c                	pop    %r12
    564f:	5d                   	pop    %rbp
    5650:	c3                   	ret
    5651:	90                   	nop

0000000000005652 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    5652:	55                   	push   %rbp
    5653:	48 89 e5             	mov    %rsp,%rbp
    5656:	48 83 ec 10          	sub    $0x10,%rsp
    565a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    565e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5662:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5666:	48 89 c7             	mov    %rax,%rdi
    5669:	e8 c2 14 00 00       	call   6b30 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>
    566e:	48 89 c2             	mov    %rax,%rdx
    5671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5675:	48 89 d6             	mov    %rdx,%rsi
    5678:	48 89 c7             	mov    %rax,%rdi
    567b:	e8 4c 14 00 00       	call   6acc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5680:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5684:	48 89 c7             	mov    %rax,%rdi
    5687:	e8 dc 14 00 00       	call   6b68 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    568c:	48 89 c7             	mov    %rax,%rdi
    568f:	e8 ee 14 00 00       	call   6b82 <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5698:	48 89 c7             	mov    %rax,%rdi
    569b:	e8 c8 14 00 00       	call   6b68 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    56a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    56a4:	c9                   	leave
    56a5:	c3                   	ret

00000000000056a6 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    56a6:	55                   	push   %rbp
    56a7:	48 89 e5             	mov    %rsp,%rbp
    56aa:	48 83 ec 10          	sub    $0x10,%rsp
    56ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    56b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56b6:	48 89 c7             	mov    %rax,%rdi
    56b9:	e8 d2 14 00 00       	call   6b90 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    56be:	c9                   	leave
    56bf:	c3                   	ret

00000000000056c0 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    56c0:	55                   	push   %rbp
    56c1:	48 89 e5             	mov    %rsp,%rbp
    56c4:	48 83 ec 10          	sub    $0x10,%rsp
    56c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    56cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56d0:	48 89 c7             	mov    %rax,%rdi
    56d3:	e8 d2 14 00 00       	call   6baa <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>
      }
    56d8:	c9                   	leave
    56d9:	c3                   	ret

00000000000056da <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>:
	function(_Functor&& __f)
    56da:	55                   	push   %rbp
    56db:	48 89 e5             	mov    %rsp,%rbp
    56de:	48 83 ec 10          	sub    $0x10,%rsp
    56e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    56ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56ee:	66 0f ef c0          	pxor   %xmm0,%xmm0
    56f2:	0f 11 00             	movups %xmm0,(%rax)
    56f5:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    56fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56fe:	48 89 c7             	mov    %rax,%rdi
    5701:	e8 be f6 ff ff       	call   4dc4 <_ZNSt14_Function_baseC1Ev>
    5706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    570a:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    5711:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    5712:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5716:	48 89 c7             	mov    %rax,%rdi
    5719:	e8 a6 14 00 00       	call   6bc4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>
    571e:	84 c0                	test   %al,%al
    5720:	74 3c                	je     575e <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    5722:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5726:	48 89 c7             	mov    %rax,%rdi
    5729:	e8 a5 14 00 00       	call   6bd3 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    572e:	48 89 c2             	mov    %rax,%rdx
    5731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5735:	48 89 d6             	mov    %rdx,%rsi
    5738:	48 89 c7             	mov    %rax,%rdi
    573b:	e8 a1 14 00 00       	call   6be1 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5744:	48 8d 15 c7 14 00 00 	lea    0x14c7(%rip),%rdx        # 6c12 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>
    574b:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    574f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5753:	48 8d 15 db 14 00 00 	lea    0x14db(%rip),%rdx        # 6c35 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    575a:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    575e:	90                   	nop
    575f:	c9                   	leave
    5760:	c3                   	ret

0000000000005761 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5761:	55                   	push   %rbp
    5762:	48 89 e5             	mov    %rsp,%rbp
    5765:	41 54                	push   %r12
    5767:	53                   	push   %rbx
    5768:	48 83 ec 10          	sub    $0x10,%rsp
    576c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5770:	bf 18 00 00 00       	mov    $0x18,%edi
    5775:	e8 56 db ff ff       	call   32d0 <_Znwm@plt>
    577a:	48 89 c6             	mov    %rax,%rsi
    577d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5783:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5787:	48 89 f7             	mov    %rsi,%rdi
    578a:	e8 7b ed ff ff       	call   450a <_ZN4neko6EngineC1Ev>
    578f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5793:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    5797:	48 89 c7             	mov    %rax,%rdi
    579a:	e8 37 15 00 00       	call   6cd6 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    579f:	eb 21                	jmp    57c2 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x61>
    57a1:	48 89 c3             	mov    %rax,%rbx
    57a4:	45 84 e4             	test   %r12b,%r12b
    57a7:	74 0e                	je     57b7 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x56>
    57a9:	be 18 00 00 00       	mov    $0x18,%esi
    57ae:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    57b2:	e8 29 db ff ff       	call   32e0 <_ZdlPvm@plt>
    57b7:	48 89 d8             	mov    %rbx,%rax
    57ba:	48 89 c7             	mov    %rax,%rdi
    57bd:	e8 1e dd ff ff       	call   34e0 <_Unwind_Resume@plt>
    57c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57c6:	48 83 c4 10          	add    $0x10,%rsp
    57ca:	5b                   	pop    %rbx
    57cb:	41 5c                	pop    %r12
    57cd:	5d                   	pop    %rbp
    57ce:	c3                   	ret
    57cf:	90                   	nop

00000000000057d0 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    57d0:	55                   	push   %rbp
    57d1:	48 89 e5             	mov    %rsp,%rbp
    57d4:	53                   	push   %rbx
    57d5:	48 83 ec 28          	sub    $0x28,%rsp
    57d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    57dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57e1:	48 89 c7             	mov    %rax,%rdi
    57e4:	e8 13 15 00 00       	call   6cfc <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    57e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    57ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57f1:	48 8b 00             	mov    (%rax),%rax
    57f4:	48 85 c0             	test   %rax,%rax
    57f7:	74 29                	je     5822 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    57f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57fd:	48 89 c7             	mov    %rax,%rdi
    5800:	e8 11 15 00 00       	call   6d16 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>
    5805:	48 89 c3             	mov    %rax,%rbx
    5808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    580c:	48 89 c7             	mov    %rax,%rdi
    580f:	e8 1c 15 00 00       	call   6d30 <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>
    5814:	48 8b 00             	mov    (%rax),%rax
    5817:	48 89 c6             	mov    %rax,%rsi
    581a:	48 89 df             	mov    %rbx,%rdi
    581d:	e8 58 15 00 00       	call   6d7a <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>
	__ptr = pointer();
    5822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5826:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    582d:	90                   	nop
    582e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5832:	c9                   	leave
    5833:	c3                   	ret

0000000000005834 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    5834:	55                   	push   %rbp
    5835:	48 89 e5             	mov    %rsp,%rbp
    5838:	48 83 ec 20          	sub    $0x20,%rsp
    583c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5840:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    5844:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5848:	48 89 c7             	mov    %rax,%rdi
    584b:	e8 60 15 00 00       	call   6db0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    5850:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5854:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5858:	48 89 c7             	mov    %rax,%rdi
    585b:	e8 50 15 00 00       	call   6db0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    5860:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5864:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5868:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    586c:	48 89 d6             	mov    %rdx,%rsi
    586f:	48 89 c7             	mov    %rax,%rdi
    5872:	e8 4a 15 00 00       	call   6dc1 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    5877:	c9                   	leave
    5878:	c3                   	ret

0000000000005879 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    5879:	55                   	push   %rbp
    587a:	48 89 e5             	mov    %rsp,%rbp
    587d:	48 83 ec 10          	sub    $0x10,%rsp
    5881:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    5885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5889:	48 89 c7             	mov    %rax,%rdi
    588c:	e8 99 15 00 00       	call   6e2a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    5891:	c9                   	leave
    5892:	c3                   	ret
    5893:	90                   	nop

0000000000005894 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    5894:	55                   	push   %rbp
    5895:	48 89 e5             	mov    %rsp,%rbp
    5898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    589c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58a0:	48 8b 00             	mov    (%rax),%rax
    58a3:	5d                   	pop    %rbp
    58a4:	c3                   	ret
    58a5:	90                   	nop

00000000000058a6 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    58a6:	55                   	push   %rbp
    58a7:	48 89 e5             	mov    %rsp,%rbp
    58aa:	48 83 ec 10          	sub    $0x10,%rsp
    58ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    58b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58b6:	48 89 c7             	mov    %rax,%rdi
    58b9:	e8 c6 15 00 00       	call   6e84 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>
      }
    58be:	c9                   	leave
    58bf:	c3                   	ret

00000000000058c0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    58c0:	55                   	push   %rbp
    58c1:	48 89 e5             	mov    %rsp,%rbp
    58c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    58cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58d0:	0f b6 10             	movzbl (%rax),%edx
    58d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    58d7:	0f b6 00             	movzbl (%rax),%eax
    58da:	38 c2                	cmp    %al,%dl
    58dc:	0f 94 c0             	sete   %al
    58df:	5d                   	pop    %rbp
    58e0:	c3                   	ret
    58e1:	90                   	nop

00000000000058e2 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    58e2:	55                   	push   %rbp
    58e3:	48 89 e5             	mov    %rsp,%rbp
    58e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58f6:	48 89 10             	mov    %rdx,(%rax)
    58f9:	90                   	nop
    58fa:	5d                   	pop    %rbp
    58fb:	c3                   	ret

00000000000058fc <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    58fc:	55                   	push   %rbp
    58fd:	48 89 e5             	mov    %rsp,%rbp
    5900:	48 83 ec 10          	sub    $0x10,%rsp
    5904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    590c:	48 8b 00             	mov    (%rax),%rax
    590f:	48 85 c0             	test   %rax,%rax
    5912:	74 0f                	je     5923 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    5914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5918:	48 8b 00             	mov    (%rax),%rax
    591b:	48 89 c7             	mov    %rax,%rdi
    591e:	e8 8d da ff ff       	call   33b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    5923:	90                   	nop
    5924:	c9                   	leave
    5925:	c3                   	ret

0000000000005926 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    5926:	55                   	push   %rbp
    5927:	48 89 e5             	mov    %rsp,%rbp
    592a:	48 83 ec 40          	sub    $0x40,%rsp
    592e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5932:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5936:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    593a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    593e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5942:	48 89 d6             	mov    %rdx,%rsi
    5945:	48 89 c7             	mov    %rax,%rdi
    5948:	e8 51 15 00 00       	call   6e9e <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    594d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    5951:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5955:	48 83 f8 0f          	cmp    $0xf,%rax
    5959:	76 3f                	jbe    599a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    595b:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    595f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5963:	ba 00 00 00 00       	mov    $0x0,%edx
    5968:	48 89 ce             	mov    %rcx,%rsi
    596b:	48 89 c7             	mov    %rax,%rdi
    596e:	e8 8d db ff ff       	call   3500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5973:	48 89 c2             	mov    %rax,%rdx
    5976:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    597a:	48 89 d6             	mov    %rdx,%rsi
    597d:	48 89 c7             	mov    %rax,%rdi
    5980:	e8 cb d8 ff ff       	call   3250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    5985:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5989:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    598d:	48 89 d6             	mov    %rdx,%rsi
    5990:	48 89 c7             	mov    %rax,%rdi
    5993:	e8 98 db ff ff       	call   3530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    5998:	eb 15                	jmp    59af <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    599a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    599e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    59a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59a6:	48 89 c7             	mov    %rax,%rdi
    59a9:	e8 82 d8 ff ff       	call   3230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    59ae:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    59af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    59b3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    59b7:	48 89 d6             	mov    %rdx,%rsi
    59ba:	48 89 c7             	mov    %rax,%rdi
    59bd:	e8 20 ff ff ff       	call   58e2 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    59c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59c6:	48 89 c7             	mov    %rax,%rdi
    59c9:	e8 92 d9 ff ff       	call   3360 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    59ce:	48 89 c1             	mov    %rax,%rcx
    59d1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    59d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59d9:	48 89 c6             	mov    %rax,%rsi
    59dc:	48 89 cf             	mov    %rcx,%rdi
    59df:	e8 8c d9 ff ff       	call   3370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    59e4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    59eb:	00 

	_M_set_length(__dnew);
    59ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    59f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59f4:	48 89 d6             	mov    %rdx,%rsi
    59f7:	48 89 c7             	mov    %rax,%rdi
    59fa:	e8 91 d7 ff ff       	call   3190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    59ff:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5a03:	48 89 c7             	mov    %rax,%rdi
    5a06:	e8 f1 fe ff ff       	call   58fc <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    5a0b:	c9                   	leave
    5a0c:	c3                   	ret

0000000000005a0d <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    5a0d:	55                   	push   %rbp
    5a0e:	48 89 e5             	mov    %rsp,%rbp
    5a11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a19:	5d                   	pop    %rbp
    5a1a:	c3                   	ret
    5a1b:	90                   	nop

0000000000005a1c <_ZNSaISt6threadEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5a1c:	55                   	push   %rbp
    5a1d:	48 89 e5             	mov    %rsp,%rbp
    5a20:	48 83 ec 10          	sub    $0x10,%rsp
    5a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a2c:	48 89 c7             	mov    %rax,%rdi
    5a2f:	e8 9c 14 00 00       	call   6ed0 <_ZNSt15__new_allocatorISt6threadEC1Ev>
    5a34:	90                   	nop
    5a35:	c9                   	leave
    5a36:	c3                   	ret
    5a37:	90                   	nop

0000000000005a38 <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5a38:	55                   	push   %rbp
    5a39:	48 89 e5             	mov    %rsp,%rbp
    5a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a44:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a4f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5a56:	00 
    5a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a5b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5a62:	00 
	{ }
    5a63:	90                   	nop
    5a64:	5d                   	pop    %rbp
    5a65:	c3                   	ret

0000000000005a66 <_ZNSt15__new_allocatorISt6threadED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a66:	55                   	push   %rbp
    5a67:	48 89 e5             	mov    %rsp,%rbp
    5a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a6e:	90                   	nop
    5a6f:	5d                   	pop    %rbp
    5a70:	c3                   	ret
    5a71:	90                   	nop

0000000000005a72 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5a72:	55                   	push   %rbp
    5a73:	48 89 e5             	mov    %rsp,%rbp
    5a76:	48 83 ec 20          	sub    $0x20,%rsp
    5a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5a86:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5a8b:	74 17                	je     5aa4 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a95:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5a99:	48 89 ce             	mov    %rcx,%rsi
    5a9c:	48 89 c7             	mov    %rax,%rdi
    5a9f:	e8 37 14 00 00       	call   6edb <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>
      }
    5aa4:	90                   	nop
    5aa5:	c9                   	leave
    5aa6:	c3                   	ret
    5aa7:	90                   	nop

0000000000005aa8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5aa8:	55                   	push   %rbp
    5aa9:	48 89 e5             	mov    %rsp,%rbp
    5aac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ab4:	5d                   	pop    %rbp
    5ab5:	c3                   	ret

0000000000005ab6 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5ab6:	55                   	push   %rbp
    5ab7:	48 89 e5             	mov    %rsp,%rbp
    5aba:	48 83 ec 20          	sub    $0x20,%rsp
    5abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ac6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5aca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad2:	48 89 d6             	mov    %rdx,%rsi
    5ad5:	48 89 c7             	mov    %rax,%rdi
    5ad8:	e8 2c 14 00 00       	call   6f09 <_ZSt8_DestroyIPSt6threadEvT_S2_>
    }
    5add:	90                   	nop
    5ade:	c9                   	leave
    5adf:	c3                   	ret

0000000000005ae0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>:
      struct _Deque_impl
    5ae0:	55                   	push   %rbp
    5ae1:	48 89 e5             	mov    %rsp,%rbp
    5ae4:	48 83 ec 10          	sub    $0x10,%rsp
    5ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5af0:	48 89 c7             	mov    %rax,%rdi
    5af3:	e8 60 14 00 00       	call   6f58 <_ZNSaISt8functionIFvvEEED1Ev>
    5af8:	90                   	nop
    5af9:	c9                   	leave
    5afa:	c3                   	ret
    5afb:	90                   	nop

0000000000005afc <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>:
      _Deque_base()
    5afc:	55                   	push   %rbp
    5afd:	48 89 e5             	mov    %rsp,%rbp
    5b00:	53                   	push   %rbx
    5b01:	48 83 ec 18          	sub    $0x18,%rsp
    5b05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      : _M_impl()
    5b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b0d:	48 89 c7             	mov    %rax,%rdi
    5b10:	e8 1b 14 00 00       	call   6f30 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>
      { _M_initialize_map(0); }
    5b15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b19:	be 00 00 00 00       	mov    $0x0,%esi
    5b1e:	48 89 c7             	mov    %rax,%rdi
    5b21:	e8 4e 14 00 00       	call   6f74 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>
    5b26:	eb 1a                	jmp    5b42 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev+0x46>
    5b28:	48 89 c3             	mov    %rax,%rbx
    5b2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b2f:	48 89 c7             	mov    %rax,%rdi
    5b32:	e8 a9 ff ff ff       	call   5ae0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    5b37:	48 89 d8             	mov    %rbx,%rax
    5b3a:	48 89 c7             	mov    %rax,%rdi
    5b3d:	e8 9e d9 ff ff       	call   34e0 <_Unwind_Resume@plt>
    5b42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b46:	c9                   	leave
    5b47:	c3                   	ret

0000000000005b48 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>:
    _Deque_base<_Tp, _Alloc>::
    5b48:	55                   	push   %rbp
    5b49:	48 89 e5             	mov    %rsp,%rbp
    5b4c:	48 83 ec 10          	sub    $0x10,%rsp
    5b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (this->_M_impl._M_map)
    5b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b58:	48 8b 00             	mov    (%rax),%rax
    5b5b:	48 85 c0             	test   %rax,%rax
    5b5e:	74 41                	je     5ba1 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev+0x59>
			   this->_M_impl._M_finish._M_node + 1);
    5b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b64:	48 8b 40 48          	mov    0x48(%rax),%rax
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
    5b68:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5b6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b70:	48 8b 48 28          	mov    0x28(%rax),%rcx
    5b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b78:	48 89 ce             	mov    %rcx,%rsi
    5b7b:	48 89 c7             	mov    %rax,%rdi
    5b7e:	e8 99 15 00 00       	call   711c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    5b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b87:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5b8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b8f:	48 8b 08             	mov    (%rax),%rcx
    5b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b96:	48 89 ce             	mov    %rcx,%rsi
    5b99:	48 89 c7             	mov    %rax,%rdi
    5b9c:	e8 c3 15 00 00       	call   7164 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
    }
    5ba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba5:	48 89 c7             	mov    %rax,%rdi
    5ba8:	e8 33 ff ff ff       	call   5ae0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    5bad:	90                   	nop
    5bae:	c9                   	leave
    5baf:	c3                   	ret

0000000000005bb0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>:
       *  Returns a read/write iterator that points to the first element in the
       *  %deque.  Iteration is done in ordinary element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      begin() _GLIBCXX_NOEXCEPT
    5bb0:	55                   	push   %rbp
    5bb1:	48 89 e5             	mov    %rsp,%rbp
    5bb4:	48 83 ec 10          	sub    $0x10,%rsp
    5bb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_start; }
    5bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bc4:	48 8d 50 10          	lea    0x10(%rax),%rdx
    5bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bcc:	48 89 d6             	mov    %rdx,%rsi
    5bcf:	48 89 c7             	mov    %rax,%rdi
    5bd2:	e8 d9 15 00 00       	call   71b0 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bdb:	c9                   	leave
    5bdc:	c3                   	ret
    5bdd:	90                   	nop

0000000000005bde <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>:
       *  element in the %deque.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      end() _GLIBCXX_NOEXCEPT
    5bde:	55                   	push   %rbp
    5bdf:	48 89 e5             	mov    %rsp,%rbp
    5be2:	48 83 ec 10          	sub    $0x10,%rsp
    5be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_finish; }
    5bee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bf2:	48 8d 50 30          	lea    0x30(%rax),%rdx
    5bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bfa:	48 89 d6             	mov    %rdx,%rsi
    5bfd:	48 89 c7             	mov    %rax,%rdi
    5c00:	e8 ab 15 00 00       	call   71b0 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5c05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c09:	c9                   	leave
    5c0a:	c3                   	ret
    5c0b:	90                   	nop

0000000000005c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5c0c:	55                   	push   %rbp
    5c0d:	48 89 e5             	mov    %rsp,%rbp
    5c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5c14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c18:	5d                   	pop    %rbp
    5c19:	c3                   	ret

0000000000005c1a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>:
	void
	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
	{ _M_destroy_data_aux(__first, __last); }

      void
      _M_destroy_data(iterator __first, iterator __last,
    5c1a:	55                   	push   %rbp
    5c1b:	48 89 e5             	mov    %rsp,%rbp
    5c1e:	48 83 ec 60          	sub    $0x60,%rsp
    5c22:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5c26:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5c2a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    5c2e:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
		      const std::allocator<_Tp>&)
      {
	if (!__has_trivial_destructor(value_type))
	  _M_destroy_data_aux(__first, __last);
    5c32:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    5c36:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5c3a:	48 89 d6             	mov    %rdx,%rsi
    5c3d:	48 89 c7             	mov    %rax,%rdi
    5c40:	e8 6b 15 00 00       	call   71b0 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5c45:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5c49:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5c4d:	48 89 d6             	mov    %rdx,%rsi
    5c50:	48 89 c7             	mov    %rax,%rdi
    5c53:	e8 58 15 00 00       	call   71b0 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5c58:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5c5c:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    5c60:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5c64:	48 89 ce             	mov    %rcx,%rsi
    5c67:	48 89 c7             	mov    %rax,%rdi
    5c6a:	e8 8f 15 00 00       	call   71fe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>
      }
    5c6f:	90                   	nop
    5c70:	c9                   	leave
    5c71:	c3                   	ret

0000000000005c72 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    5c72:	55                   	push   %rbp
    5c73:	48 89 e5             	mov    %rsp,%rbp
    5c76:	48 83 ec 10          	sub    $0x10,%rsp
    5c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c82:	48 89 c7             	mov    %rax,%rdi
    5c85:	e8 84 16 00 00       	call   730e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    5c8a:	90                   	nop
    5c8b:	c9                   	leave
    5c8c:	c3                   	ret
    5c8d:	90                   	nop

0000000000005c8e <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>:
      _Rb_tree_key_compare()
    5c8e:	55                   	push   %rbp
    5c8f:	48 89 e5             	mov    %rsp,%rbp
    5c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    5c96:	90                   	nop
    5c97:	5d                   	pop    %rbp
    5c98:	c3                   	ret
    5c99:	90                   	nop

0000000000005c9a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    5c9a:	55                   	push   %rbp
    5c9b:	48 89 e5             	mov    %rsp,%rbp
    5c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ca2:	90                   	nop
    5ca3:	5d                   	pop    %rbp
    5ca4:	c3                   	ret
    5ca5:	90                   	nop

0000000000005ca6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5ca6:	55                   	push   %rbp
    5ca7:	48 89 e5             	mov    %rsp,%rbp
    5caa:	48 83 ec 20          	sub    $0x20,%rsp
    5cae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5cb2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    5cb6:	eb 49                	jmp    5d01 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    5cb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5cbc:	48 89 c7             	mov    %rax,%rdi
    5cbf:	e8 55 16 00 00       	call   7319 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    5cc4:	48 89 c2             	mov    %rax,%rdx
    5cc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ccb:	48 89 d6             	mov    %rdx,%rsi
    5cce:	48 89 c7             	mov    %rax,%rdi
    5cd1:	e8 d0 ff ff ff       	call   5ca6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
	  _Link_type __y = _S_left(__x);
    5cd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5cda:	48 89 c7             	mov    %rax,%rdi
    5cdd:	e8 49 16 00 00       	call   732b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    5ce2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    5ce6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5cea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cee:	48 89 d6             	mov    %rdx,%rsi
    5cf1:	48 89 c7             	mov    %rax,%rdi
    5cf4:	e8 45 16 00 00       	call   733e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	  __x = __y;
    5cf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cfd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    5d01:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5d06:	75 b0                	jne    5cb8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x12>
	}
    }
    5d08:	90                   	nop
    5d09:	90                   	nop
    5d0a:	c9                   	leave
    5d0b:	c3                   	ret

0000000000005d0c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    5d0c:	55                   	push   %rbp
    5d0d:	48 89 e5             	mov    %rsp,%rbp
    5d10:	48 83 ec 10          	sub    $0x10,%rsp
    5d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    5d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d1c:	48 89 c7             	mov    %rax,%rdi
    5d1f:	e8 54 16 00 00       	call   7378 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>
    5d24:	c9                   	leave
    5d25:	c3                   	ret

0000000000005d26 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    5d26:	55                   	push   %rbp
    5d27:	48 89 e5             	mov    %rsp,%rbp
    5d2a:	53                   	push   %rbx
    5d2b:	48 83 ec 38          	sub    $0x38,%rsp
    5d2f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    5d33:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    5d37:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    5d3c:	0f 84 e7 01 00 00    	je     5f29 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    5d42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d46:	48 89 c7             	mov    %rax,%rdi
    5d49:	e8 82 ef ff ff       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    5d4e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    5d52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d56:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    5d5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d5e:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d62:	48 29 c2             	sub    %rax,%rdx
    5d65:	48 89 d0             	mov    %rdx,%rax
    5d68:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    5d6c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    5d70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d74:	48 89 c7             	mov    %rax,%rdi
    5d77:	e8 0e 16 00 00       	call   738a <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    5d7c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    5d80:	72 16                	jb     5d98 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x72>
    5d82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d86:	48 89 c7             	mov    %rax,%rdi
    5d89:	e8 fc 15 00 00       	call   738a <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    5d8e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    5d92:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5d96:	73 07                	jae    5d9f <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x79>
    5d98:	b8 01 00 00 00       	mov    $0x1,%eax
    5d9d:	eb 05                	jmp    5da4 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x7e>
    5d9f:	b8 00 00 00 00       	mov    $0x0,%eax
    5da4:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    5da6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5daa:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    5dae:	72 33                	jb     5de3 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    5db0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5db4:	48 89 c7             	mov    %rax,%rdi
    5db7:	e8 ec fc ff ff       	call   5aa8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    5dbc:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    5dbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5dc3:	48 8b 40 08          	mov    0x8(%rax),%rax
    5dc7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    5dcb:	48 89 ce             	mov    %rcx,%rsi
    5dce:	48 89 c7             	mov    %rax,%rdi
    5dd1:	e8 d6 15 00 00       	call   73ac <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    5dd6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5dda:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    5dde:	e9 46 01 00 00       	jmp    5f29 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    5de3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    5de7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5deb:	48 8d 15 c7 b8 00 00 	lea    0xb8c7(%rip),%rdx        # 116b9 <_ZN6__pstl9execution2v1L5unseqE+0x7a>
    5df2:	48 89 ce             	mov    %rcx,%rsi
    5df5:	48 89 c7             	mov    %rax,%rdi
    5df8:	e8 d9 15 00 00       	call   73d6 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>
    5dfd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    5e01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5e05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5e09:	48 89 d6             	mov    %rdx,%rsi
    5e0c:	48 89 c7             	mov    %rax,%rdi
    5e0f:	e8 8a 16 00 00       	call   749e <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>
    5e14:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    5e18:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5e1c:	48 89 c7             	mov    %rax,%rdi
    5e1f:	e8 84 fc ff ff       	call   5aa8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    5e24:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    5e27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e2b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    5e32:	00 
    5e33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5e37:	48 01 c1             	add    %rax,%rcx
    5e3a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5e3e:	48 89 c6             	mov    %rax,%rsi
    5e41:	48 89 cf             	mov    %rcx,%rdi
    5e44:	e8 63 15 00 00       	call   73ac <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    5e49:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5e4d:	48 89 c7             	mov    %rax,%rdi
    5e50:	e8 53 fc ff ff       	call   5aa8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    5e55:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    5e58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5e5c:	48 8b 70 08          	mov    0x8(%rax),%rsi
    5e60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5e64:	48 8b 00             	mov    (%rax),%rax
    5e67:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5e6b:	48 89 c7             	mov    %rax,%rdi
    5e6e:	e8 5e 16 00 00       	call   74d1 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    5e73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    5e77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e7b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    5e7f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e83:	48 8b 12             	mov    (%rdx),%rdx
    5e86:	48 29 d1             	sub    %rdx,%rcx
    5e89:	48 c1 f9 03          	sar    $0x3,%rcx
    5e8d:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    5e90:	48 89 d6             	mov    %rdx,%rsi
    5e93:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e97:	48 8b 0a             	mov    (%rdx),%rcx
    5e9a:	48 89 f2             	mov    %rsi,%rdx
    5e9d:	48 89 ce             	mov    %rcx,%rsi
    5ea0:	48 89 c7             	mov    %rax,%rdi
    5ea3:	e8 ca fb ff ff       	call   5a72 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    5ea8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5eac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5eb0:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    5eb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5eb7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ebb:	48 01 d0             	add    %rdx,%rax
    5ebe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5ec5:	00 
    5ec6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5eca:	48 01 c2             	add    %rax,%rdx
    5ecd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5ed1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    5ed5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ed9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5ee0:	00 
    5ee1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ee5:	48 01 c2             	add    %rax,%rdx
    5ee8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5eec:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    5ef0:	eb 37                	jmp    5f29 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    5ef2:	48 89 c7             	mov    %rax,%rdi
    5ef5:	e8 e6 d1 ff ff       	call   30e0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    5efa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5efe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5f02:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5f06:	48 89 ce             	mov    %rcx,%rsi
    5f09:	48 89 c7             	mov    %rax,%rdi
    5f0c:	e8 61 fb ff ff       	call   5a72 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    5f11:	e8 0a d5 ff ff       	call   3420 <__cxa_rethrow@plt>
		  __catch(...)
    5f16:	48 89 c3             	mov    %rax,%rbx
    5f19:	e8 72 d5 ff ff       	call   3490 <__cxa_end_catch@plt>
    5f1e:	48 89 d8             	mov    %rbx,%rax
    5f21:	48 89 c7             	mov    %rax,%rdi
    5f24:	e8 b7 d5 ff ff       	call   34e0 <_Unwind_Resume@plt>
    }
    5f29:	90                   	nop
    5f2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f2e:	c9                   	leave
    5f2f:	c3                   	ret

0000000000005f30 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>:

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      _GLIBCXX20_CONSTEXPR
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    5f30:	55                   	push   %rbp
    5f31:	48 89 e5             	mov    %rsp,%rbp
    5f34:	48 83 ec 20          	sub    $0x20,%rsp
    5f38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
    5f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f44:	48 8b 40 08          	mov    0x8(%rax),%rax
    5f48:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    5f4c:	48 c1 f8 03          	sar    $0x3,%rax
    5f50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5f54:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5f59:	74 32                	je     5f8d <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
    5f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f5f:	48 89 c7             	mov    %rax,%rdi
    5f62:	e8 41 fb ff ff       	call   5aa8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    5f67:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    5f6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f6e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5f72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f76:	48 89 ce             	mov    %rcx,%rsi
    5f79:	48 89 c7             	mov    %rax,%rdi
    5f7c:	e8 35 fb ff ff       	call   5ab6 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    5f81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f85:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5f89:	48 89 50 08          	mov    %rdx,0x8(%rax)
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
    5f8d:	90                   	nop
    5f8e:	c9                   	leave
    5f8f:	c3                   	ret

0000000000005f90 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5f90:	55                   	push   %rbp
    5f91:	48 89 e5             	mov    %rsp,%rbp
    5f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5f9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5fa0:	48 8b 10             	mov    (%rax),%rdx
    5fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fa7:	48 89 10             	mov    %rdx,(%rax)
    5faa:	90                   	nop
    5fab:	5d                   	pop    %rbp
    5fac:	c3                   	ret
    5fad:	90                   	nop

0000000000005fae <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5fae:	55                   	push   %rbp
    5faf:	48 89 e5             	mov    %rsp,%rbp
    5fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fba:	5d                   	pop    %rbp
    5fbb:	c3                   	ret

0000000000005fbc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    5fbc:	55                   	push   %rbp
    5fbd:	48 89 e5             	mov    %rsp,%rbp
    5fc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    5fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fc8:	5d                   	pop    %rbp
    5fc9:	c3                   	ret

0000000000005fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    5fca:	55                   	push   %rbp
    5fcb:	48 89 e5             	mov    %rsp,%rbp
    5fce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    5fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fd6:	5d                   	pop    %rbp
    5fd7:	c3                   	ret

0000000000005fd8 <_ZNSt6thread6_StateC1Ev>:
    struct _State
    5fd8:	55                   	push   %rbp
    5fd9:	48 89 e5             	mov    %rsp,%rbp
    5fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fe0:	48 8d 15 29 8d 01 00 	lea    0x18d29(%rip),%rdx        # 1ed10 <_ZTVNSt6thread6_StateE@GLIBCXX_3.4.22+0x10>
    5fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5feb:	48 89 10             	mov    %rdx,(%rax)
    5fee:	90                   	nop
    5fef:	5d                   	pop    %rbp
    5ff0:	c3                   	ret
    5ff1:	90                   	nop

0000000000005ff2 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>:
	  _State_impl(_Args&&... __args)
    5ff2:	55                   	push   %rbp
    5ff3:	48 89 e5             	mov    %rsp,%rbp
    5ff6:	41 54                	push   %r12
    5ff8:	53                   	push   %rbx
    5ff9:	48 83 ec 20          	sub    $0x20,%rsp
    5ffd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6001:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6005:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  : _M_func{{std::forward<_Args>(__args)...}}
    6009:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    600d:	48 89 c7             	mov    %rax,%rdi
    6010:	e8 c3 ff ff ff       	call   5fd8 <_ZNSt6thread6_StateC1Ev>
    6015:	48 8d 15 b4 8c 01 00 	lea    0x18cb4(%rip),%rdx        # 1ecd0 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    601c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6020:	48 89 10             	mov    %rdx,(%rax)
    6023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6027:	48 8d 58 08          	lea    0x8(%rax),%rbx
    602b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    602f:	48 89 c7             	mov    %rax,%rdi
    6032:	e8 85 ff ff ff       	call   5fbc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    6037:	49 89 c4             	mov    %rax,%r12
    603a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    603e:	48 89 c7             	mov    %rax,%rdi
    6041:	e8 84 ff ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    6046:	48 89 c2             	mov    %rax,%rdx
    6049:	4c 89 e6             	mov    %r12,%rsi
    604c:	48 89 df             	mov    %rbx,%rdi
    604f:	e8 b0 14 00 00       	call   7504 <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>
	  { }
    6054:	90                   	nop
    6055:	48 83 c4 20          	add    $0x20,%rsp
    6059:	5b                   	pop    %rbx
    605a:	41 5c                	pop    %r12
    605c:	5d                   	pop    %rbp
    605d:	c3                   	ret

000000000000605e <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    605e:	55                   	push   %rbp
    605f:	48 89 e5             	mov    %rsp,%rbp
    6062:	48 83 ec 10          	sub    $0x10,%rsp
    6066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    606a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    606e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6072:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6076:	48 89 d6             	mov    %rdx,%rsi
    6079:	48 89 c7             	mov    %rax,%rdi
    607c:	e8 d1 14 00 00       	call   7552 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>
    6081:	90                   	nop
    6082:	c9                   	leave
    6083:	c3                   	ret

0000000000006084 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6084:	55                   	push   %rbp
    6085:	48 89 e5             	mov    %rsp,%rbp
    6088:	48 83 ec 10          	sub    $0x10,%rsp
    608c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6090:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6098:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    609c:	48 89 d6             	mov    %rdx,%rsi
    609f:	48 89 c7             	mov    %rax,%rdi
    60a2:	e8 b7 ff ff ff       	call   605e <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    60a7:	90                   	nop
    60a8:	c9                   	leave
    60a9:	c3                   	ret

00000000000060aa <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    60aa:	55                   	push   %rbp
    60ab:	48 89 e5             	mov    %rsp,%rbp
    60ae:	53                   	push   %rbx
    60af:	48 83 ec 28          	sub    $0x28,%rsp
    60b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    60b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60bb:	48 89 c7             	mov    %rax,%rdi
    60be:	e8 c7 14 00 00       	call   758a <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    60c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    60c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60cb:	48 8b 00             	mov    (%rax),%rax
    60ce:	48 85 c0             	test   %rax,%rax
    60d1:	74 29                	je     60fc <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    60d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60d7:	48 89 c7             	mov    %rax,%rdi
    60da:	e8 c5 14 00 00       	call   75a4 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>
    60df:	48 89 c3             	mov    %rax,%rbx
    60e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60e6:	48 89 c7             	mov    %rax,%rdi
    60e9:	e8 d0 14 00 00       	call   75be <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>
    60ee:	48 8b 00             	mov    (%rax),%rax
    60f1:	48 89 c6             	mov    %rax,%rsi
    60f4:	48 89 df             	mov    %rbx,%rdi
    60f7:	e8 d0 14 00 00       	call   75cc <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>
	__ptr = pointer();
    60fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6100:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    6107:	90                   	nop
    6108:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    610c:	c9                   	leave
    610d:	c3                   	ret

000000000000610e <_ZSt11__addressofISt5mutexEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    610e:	55                   	push   %rbp
    610f:	48 89 e5             	mov    %rsp,%rbp
    6112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    611a:	5d                   	pop    %rbp
    611b:	c3                   	ret

000000000000611c <_ZNSt11unique_lockISt5mutexE4lockEv>:

	return *this;
      }

      void
      lock()
    611c:	55                   	push   %rbp
    611d:	48 89 e5             	mov    %rsp,%rbp
    6120:	48 83 ec 10          	sub    $0x10,%rsp
    6124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_device)
    6128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    612c:	48 8b 00             	mov    (%rax),%rax
    612f:	48 85 c0             	test   %rax,%rax
    6132:	75 0a                	jne    613e <_ZNSt11unique_lockISt5mutexE4lockEv+0x22>
	  __throw_system_error(int(errc::operation_not_permitted));
    6134:	bf 01 00 00 00       	mov    $0x1,%edi
    6139:	e8 42 d0 ff ff       	call   3180 <_ZSt20__throw_system_errori@plt>
	else if (_M_owns)
    613e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6142:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6146:	84 c0                	test   %al,%al
    6148:	74 0a                	je     6154 <_ZNSt11unique_lockISt5mutexE4lockEv+0x38>
	  __throw_system_error(int(errc::resource_deadlock_would_occur));
    614a:	bf 23 00 00 00       	mov    $0x23,%edi
    614f:	e8 2c d0 ff ff       	call   3180 <_ZSt20__throw_system_errori@plt>
	else
	  {
	    _M_device->lock();
    6154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6158:	48 8b 00             	mov    (%rax),%rax
    615b:	48 89 c7             	mov    %rax,%rdi
    615e:	e8 49 d9 ff ff       	call   3aac <_ZNSt5mutex4lockEv>
	    _M_owns = true;
    6163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6167:	c6 40 08 01          	movb   $0x1,0x8(%rax)
	  }
      }
    616b:	90                   	nop
    616c:	c9                   	leave
    616d:	c3                   	ret

000000000000616e <_ZNSt11unique_lockISt5mutexE6unlockEv>:
	      return _M_owns;
	    }
	 }

      void
      unlock()
    616e:	55                   	push   %rbp
    616f:	48 89 e5             	mov    %rsp,%rbp
    6172:	48 83 ec 10          	sub    $0x10,%rsp
    6176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_owns)
    617a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    617e:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6182:	83 f0 01             	xor    $0x1,%eax
    6185:	84 c0                	test   %al,%al
    6187:	74 0a                	je     6193 <_ZNSt11unique_lockISt5mutexE6unlockEv+0x25>
	  __throw_system_error(int(errc::operation_not_permitted));
    6189:	bf 01 00 00 00       	mov    $0x1,%edi
    618e:	e8 ed cf ff ff       	call   3180 <_ZSt20__throw_system_errori@plt>
	else if (_M_device)
    6193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6197:	48 8b 00             	mov    (%rax),%rax
    619a:	48 85 c0             	test   %rax,%rax
    619d:	74 17                	je     61b6 <_ZNSt11unique_lockISt5mutexE6unlockEv+0x48>
	  {
	    _M_device->unlock();
    619f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a3:	48 8b 00             	mov    (%rax),%rax
    61a6:	48 89 c7             	mov    %rax,%rdi
    61a9:	e8 2c d9 ff ff       	call   3ada <_ZNSt5mutex6unlockEv>
	    _M_owns = false;
    61ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b2:	c6 40 08 00          	movb   $0x0,0x8(%rax)
	  }
      }
    61b6:	90                   	nop
    61b7:	c9                   	leave
    61b8:	c3                   	ret
    61b9:	90                   	nop

00000000000061ba <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>:
      push_back(const value_type& __x)
    61ba:	55                   	push   %rbp
    61bb:	48 89 e5             	mov    %rsp,%rbp
    61be:	48 83 ec 10          	sub    $0x10,%rsp
    61c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish._M_cur
    61ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ce:	48 8b 50 30          	mov    0x30(%rax),%rdx
	    != this->_M_impl._M_finish._M_last - 1)
    61d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d6:	48 8b 40 40          	mov    0x40(%rax),%rax
    61da:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_finish._M_cur
    61de:	48 39 c2             	cmp    %rax,%rdx
    61e1:	74 31                	je     6214 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x5a>
	    _Alloc_traits::construct(this->_M_impl,
    61e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e7:	48 8b 48 30          	mov    0x30(%rax),%rcx
    61eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f3:	48 89 ce             	mov    %rcx,%rsi
    61f6:	48 89 c7             	mov    %rax,%rdi
    61f9:	e8 f9 13 00 00       	call   75f7 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish._M_cur;
    61fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6202:	48 8b 40 30          	mov    0x30(%rax),%rax
    6206:	48 8d 50 20          	lea    0x20(%rax),%rdx
    620a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    620e:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    6212:	eb 13                	jmp    6227 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x6d>
	  _M_push_back_aux(__x);
    6214:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    621c:	48 89 d6             	mov    %rdx,%rsi
    621f:	48 89 c7             	mov    %rax,%rdi
    6222:	e8 09 14 00 00       	call   7630 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>
      }
    6227:	90                   	nop
    6228:	c9                   	leave
    6229:	c3                   	ret

000000000000622a <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    622a:	55                   	push   %rbp
    622b:	48 89 e5             	mov    %rsp,%rbp
    622e:	48 83 ec 10          	sub    $0x10,%rsp
    6232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish == this->_M_impl._M_start; }
    6236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    623a:	48 8d 50 10          	lea    0x10(%rax),%rdx
    623e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6242:	48 83 c0 30          	add    $0x30,%rax
    6246:	48 89 d6             	mov    %rdx,%rsi
    6249:	48 89 c7             	mov    %rax,%rdi
    624c:	e8 eb 14 00 00       	call   773c <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    6251:	c9                   	leave
    6252:	c3                   	ret
    6253:	90                   	nop

0000000000006254 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>:
      front() _GLIBCXX_NOEXCEPT
    6254:	55                   	push   %rbp
    6255:	48 89 e5             	mov    %rsp,%rbp
    6258:	48 83 ec 30          	sub    $0x30,%rsp
    625c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	return *begin();
    6260:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6264:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6268:	48 89 d6             	mov    %rdx,%rsi
    626b:	48 89 c7             	mov    %rax,%rdi
    626e:	e8 3d f9 ff ff       	call   5bb0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    6273:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6277:	48 89 c7             	mov    %rax,%rdi
    627a:	e8 df 14 00 00       	call   775e <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>
      }
    627f:	c9                   	leave
    6280:	c3                   	ret
    6281:	90                   	nop

0000000000006282 <_ZNSt8functionIFvvEEC1ERKS1_>:
      function(const function& __x)
    6282:	55                   	push   %rbp
    6283:	48 89 e5             	mov    %rsp,%rbp
    6286:	53                   	push   %rbx
    6287:	48 83 ec 18          	sub    $0x18,%rsp
    628b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    628f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _Function_base()
    6293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6297:	66 0f ef c0          	pxor   %xmm0,%xmm0
    629b:	0f 11 00             	movups %xmm0,(%rax)
    629e:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    62a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62a7:	48 89 c7             	mov    %rax,%rdi
    62aa:	e8 15 eb ff ff       	call   4dc4 <_ZNSt14_Function_baseC1Ev>
    62af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62b3:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    62ba:	00 
	if (static_cast<bool>(__x))
    62bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62bf:	48 89 c7             	mov    %rax,%rdi
    62c2:	e8 a9 14 00 00       	call   7770 <_ZNKSt8functionIFvvEEcvbEv>
    62c7:	84 c0                	test   %al,%al
    62c9:	74 5a                	je     6325 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
	    __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
    62cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62cf:	4c 8b 40 10          	mov    0x10(%rax),%r8
    62d3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    62d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62db:	ba 02 00 00 00       	mov    $0x2,%edx
    62e0:	48 89 ce             	mov    %rcx,%rsi
    62e3:	48 89 c7             	mov    %rax,%rdi
    62e6:	41 ff d0             	call   *%r8
	    _M_invoker = __x._M_invoker;
    62e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62ed:	48 8b 50 18          	mov    0x18(%rax),%rdx
    62f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62f5:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    _M_manager = __x._M_manager;
    62f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62fd:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6305:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6309:	eb 1a                	jmp    6325 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
    630b:	48 89 c3             	mov    %rax,%rbx
    630e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6312:	48 89 c7             	mov    %rax,%rdi
    6315:	e8 f8 d7 ff ff       	call   3b12 <_ZNSt14_Function_baseD1Ev>
    631a:	48 89 d8             	mov    %rbx,%rax
    631d:	48 89 c7             	mov    %rax,%rdi
    6320:	e8 bb d1 ff ff       	call   34e0 <_Unwind_Resume@plt>
    6325:	90                   	nop
    6326:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    632a:	c9                   	leave
    632b:	c3                   	ret

000000000000632c <_ZNSt8functionIFvvEE4swapERS1_>:
      void swap(function& __x) noexcept
    632c:	55                   	push   %rbp
    632d:	48 89 e5             	mov    %rsp,%rbp
    6330:	48 83 ec 10          	sub    $0x10,%rsp
    6334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6338:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	std::swap(_M_functor, __x._M_functor);
    633c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6344:	48 89 d6             	mov    %rdx,%rsi
    6347:	48 89 c7             	mov    %rax,%rdi
    634a:	e8 3e 14 00 00       	call   778d <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>
	std::swap(_M_manager, __x._M_manager);
    634f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6353:	48 8d 50 10          	lea    0x10(%rax),%rdx
    6357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    635b:	48 83 c0 10          	add    $0x10,%rax
    635f:	48 89 d6             	mov    %rdx,%rsi
    6362:	48 89 c7             	mov    %rax,%rdi
    6365:	e8 8d 14 00 00       	call   77f7 <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>
	std::swap(_M_invoker, __x._M_invoker);
    636a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    636e:	48 8d 50 18          	lea    0x18(%rax),%rdx
    6372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6376:	48 83 c0 18          	add    $0x18,%rax
    637a:	48 89 d6             	mov    %rdx,%rsi
    637d:	48 89 c7             	mov    %rax,%rdi
    6380:	e8 c4 14 00 00       	call   7849 <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>
      }
    6385:	90                   	nop
    6386:	c9                   	leave
    6387:	c3                   	ret

0000000000006388 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>:
      pop_front() _GLIBCXX_NOEXCEPT
    6388:	55                   	push   %rbp
    6389:	48 89 e5             	mov    %rsp,%rbp
    638c:	53                   	push   %rbx
    638d:	48 83 ec 18          	sub    $0x18,%rsp
    6391:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	if (this->_M_impl._M_start._M_cur
    6395:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6399:	48 8b 50 10          	mov    0x10(%rax),%rdx
	    != this->_M_impl._M_start._M_last - 1)
    639d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63a1:	48 8b 40 20          	mov    0x20(%rax),%rax
    63a5:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_start._M_cur
    63a9:	48 39 c2             	cmp    %rax,%rdx
    63ac:	74 35                	je     63e3 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x5b>
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
    63ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63b2:	48 8b 58 10          	mov    0x10(%rax),%rbx
    63b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63ba:	48 89 c7             	mov    %rax,%rdi
    63bd:	e8 4a f8 ff ff       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    63c2:	48 89 de             	mov    %rbx,%rsi
    63c5:	48 89 c7             	mov    %rax,%rdi
    63c8:	e8 ce 14 00 00       	call   789b <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
	    ++this->_M_impl._M_start._M_cur;
    63cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63d1:	48 8b 40 10          	mov    0x10(%rax),%rax
    63d5:	48 8d 50 20          	lea    0x20(%rax),%rdx
    63d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63dd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    63e1:	eb 0c                	jmp    63ef <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x67>
	  _M_pop_front_aux();
    63e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63e7:	48 89 c7             	mov    %rax,%rdi
    63ea:	e8 d3 14 00 00       	call   78c2 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>
      }
    63ef:	90                   	nop
    63f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63f4:	c9                   	leave
    63f5:	c3                   	ret

00000000000063f6 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    63f6:	55                   	push   %rbp
    63f7:	48 89 e5             	mov    %rsp,%rbp
    63fa:	48 83 ec 10          	sub    $0x10,%rsp
    63fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6402:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    6406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    640a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    640e:	48 89 d6             	mov    %rdx,%rsi
    6411:	48 89 c7             	mov    %rax,%rdi
    6414:	e8 23 15 00 00       	call   793c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>
    6419:	c9                   	leave
    641a:	c3                   	ret
    641b:	90                   	nop

000000000000641c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    641c:	55                   	push   %rbp
    641d:	48 89 e5             	mov    %rsp,%rbp
    6420:	48 83 ec 10          	sub    $0x10,%rsp
    6424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    6428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    642c:	48 89 c7             	mov    %rax,%rdi
    642f:	e8 54 15 00 00       	call   7988 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>
    6434:	c9                   	leave
    6435:	c3                   	ret

0000000000006436 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    6436:	55                   	push   %rbp
    6437:	48 89 e5             	mov    %rsp,%rbp
    643a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    643e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    6442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6446:	48 8b 10             	mov    (%rax),%rdx
    6449:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    644d:	48 8b 00             	mov    (%rax),%rax
    6450:	48 39 c2             	cmp    %rax,%rdx
    6453:	0f 94 c0             	sete   %al
    6456:	5d                   	pop    %rbp
    6457:	c3                   	ret

0000000000006458 <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>:
      key_comp() const
    6458:	55                   	push   %rbp
    6459:	48 89 e5             	mov    %rsp,%rbp
    645c:	48 83 ec 10          	sub    $0x10,%rsp
    6460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    6464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6468:	48 89 c7             	mov    %rax,%rdi
    646b:	e8 42 15 00 00       	call   79b2 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>
    6470:	90                   	nop
    6471:	c9                   	leave
    6472:	c3                   	ret
    6473:	90                   	nop

0000000000006474 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6474:	55                   	push   %rbp
    6475:	48 89 e5             	mov    %rsp,%rbp
    6478:	48 83 ec 10          	sub    $0x10,%rsp
    647c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    6480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6484:	48 8b 00             	mov    (%rax),%rax
    6487:	48 89 c7             	mov    %rax,%rdi
    648a:	e8 2f 15 00 00       	call   79be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    648f:	c9                   	leave
    6490:	c3                   	ret
    6491:	90                   	nop

0000000000006492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    6492:	55                   	push   %rbp
    6493:	48 89 e5             	mov    %rsp,%rbp
    6496:	48 83 ec 20          	sub    $0x20,%rsp
    649a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    649e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    64a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64aa:	48 8b 10             	mov    (%rax),%rdx
    64ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64b1:	48 8b 00             	mov    (%rax),%rax
    64b4:	48 89 d6             	mov    %rdx,%rsi
    64b7:	48 89 c7             	mov    %rax,%rdi
    64ba:	e8 b9 d8 ff ff       	call   3d78 <_ZStltNSt6thread2idES0_>
    64bf:	c9                   	leave
    64c0:	c3                   	ret

00000000000064c1 <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    64c1:	55                   	push   %rbp
    64c2:	48 89 e5             	mov    %rsp,%rbp
    64c5:	48 83 ec 10          	sub    $0x10,%rsp
    64c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    64d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64d5:	48 89 c7             	mov    %rax,%rdi
    64d8:	e8 ff 14 00 00       	call   79dc <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    64dd:	48 89 c2             	mov    %rax,%rdx
    64e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e4:	48 89 d6             	mov    %rdx,%rsi
    64e7:	48 89 c7             	mov    %rax,%rdi
    64ea:	e8 fb 14 00 00       	call   79ea <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>
    64ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f3:	c9                   	leave
    64f4:	c3                   	ret
    64f5:	90                   	nop

00000000000064f6 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    64f6:	55                   	push   %rbp
    64f7:	48 89 e5             	mov    %rsp,%rbp
    64fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    6502:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6506:	48 8b 10             	mov    (%rax),%rdx
    6509:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    650d:	48 89 10             	mov    %rdx,(%rax)
    6510:	90                   	nop
    6511:	5d                   	pop    %rbp
    6512:	c3                   	ret
    6513:	90                   	nop

0000000000006514 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    6514:	55                   	push   %rbp
    6515:	48 89 e5             	mov    %rsp,%rbp
    6518:	41 54                	push   %r12
    651a:	53                   	push   %rbx
    651b:	48 83 ec 60          	sub    $0x60,%rsp
    651f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6523:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    6527:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    652b:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    652f:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    6533:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6537:	48 89 c7             	mov    %rax,%rdi
    653a:	e8 fa 14 00 00       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    653f:	49 89 c4             	mov    %rax,%r12
    6542:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6546:	48 89 c7             	mov    %rax,%rdi
    6549:	e8 dd 14 00 00       	call   7a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    654e:	48 89 c3             	mov    %rax,%rbx
    6551:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6555:	48 89 c7             	mov    %rax,%rdi
    6558:	e8 c0 14 00 00       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    655d:	48 89 c2             	mov    %rax,%rdx
    6560:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    6564:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6568:	4d 89 e0             	mov    %r12,%r8
    656b:	48 89 d9             	mov    %rbx,%rcx
    656e:	48 89 c7             	mov    %rax,%rdi
    6571:	e8 d2 14 00 00       	call   7a48 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    6576:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    657a:	48 89 c7             	mov    %rax,%rdi
    657d:	e8 c6 19 00 00       	call   7f48 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>
    6582:	48 89 c2             	mov    %rax,%rdx
    6585:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    6589:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    658d:	48 89 ce             	mov    %rcx,%rsi
    6590:	48 89 c7             	mov    %rax,%rdi
    6593:	e8 62 15 00 00       	call   7afa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>
    6598:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    659c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    65a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    65a4:	48 85 c0             	test   %rax,%rax
    65a7:	74 1c                	je     65c5 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    65a9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    65ad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    65b1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    65b5:	48 89 ce             	mov    %rcx,%rsi
    65b8:	48 89 c7             	mov    %rax,%rdi
    65bb:	e8 a6 19 00 00       	call   7f66 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>
    65c0:	48 89 c3             	mov    %rax,%rbx
    65c3:	eb 17                	jmp    65dc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xc8>
	return iterator(__res.first);
    65c5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    65c9:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    65cd:	48 89 d6             	mov    %rdx,%rsi
    65d0:	48 89 c7             	mov    %rax,%rdi
    65d3:	e8 e4 19 00 00       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    65d8:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    65dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    65e0:	48 89 c7             	mov    %rax,%rdi
    65e3:	e8 dc 14 00 00       	call   7ac4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    65e8:	48 89 d8             	mov    %rbx,%rax
    65eb:	eb 1a                	jmp    6607 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xf3>
    65ed:	48 89 c3             	mov    %rax,%rbx
    65f0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    65f4:	48 89 c7             	mov    %rax,%rdi
    65f7:	e8 c8 14 00 00       	call   7ac4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    65fc:	48 89 d8             	mov    %rbx,%rax
    65ff:	48 89 c7             	mov    %rax,%rdi
    6602:	e8 d9 ce ff ff       	call   34e0 <_Unwind_Resume@plt>
    6607:	48 83 c4 60          	add    $0x60,%rsp
    660b:	5b                   	pop    %rbx
    660c:	41 5c                	pop    %r12
    660e:	5d                   	pop    %rbp
    660f:	c3                   	ret

0000000000006610 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    6610:	55                   	push   %rbp
    6611:	48 89 e5             	mov    %rsp,%rbp
    6614:	48 83 ec 10          	sub    $0x10,%rsp
    6618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    661c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6620:	48 89 c7             	mov    %rax,%rdi
    6623:	e8 ae 19 00 00       	call   7fd6 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>
    6628:	90                   	nop
    6629:	c9                   	leave
    662a:	c3                   	ret
    662b:	90                   	nop

000000000000662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    662c:	55                   	push   %rbp
    662d:	48 89 e5             	mov    %rsp,%rbp
    6630:	48 83 ec 10          	sub    $0x10,%rsp
    6634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    663c:	48 89 c7             	mov    %rax,%rdi
    663f:	e8 b9 19 00 00       	call   7ffd <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6644:	c9                   	leave
    6645:	c3                   	ret

0000000000006646 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    6646:	55                   	push   %rbp
    6647:	48 89 e5             	mov    %rsp,%rbp
    664a:	48 83 ec 10          	sub    $0x10,%rsp
    664e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6656:	48 89 c7             	mov    %rax,%rdi
    6659:	e8 c2 02 00 00       	call   6920 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    665e:	c9                   	leave
    665f:	c3                   	ret

0000000000006660 <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6660:	55                   	push   %rbp
    6661:	48 89 e5             	mov    %rsp,%rbp
    6664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    666c:	5d                   	pop    %rbp
    666d:	c3                   	ret

000000000000666e <_ZN4neko8SettingsD1Ev>:
    666e:	55                   	push   %rbp
    666f:	48 89 e5             	mov    %rsp,%rbp
    6672:	48 83 ec 10          	sub    $0x10,%rsp
    6676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    667a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    667e:	48 89 c7             	mov    %rax,%rdi
    6681:	e8 c2 ec ff ff       	call   5348 <_ZN4neko8SettingsUt_D1Ev>
    6686:	90                   	nop
    6687:	c9                   	leave
    6688:	c3                   	ret
    6689:	90                   	nop

000000000000668a <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>:
      operator()(_Tp* __ptr) const
    668a:	55                   	push   %rbp
    668b:	48 89 e5             	mov    %rsp,%rbp
    668e:	53                   	push   %rbx
    668f:	48 83 ec 18          	sub    $0x18,%rsp
    6693:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6697:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    669b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    669f:	48 85 db             	test   %rbx,%rbx
    66a2:	74 15                	je     66b9 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_+0x2f>
    66a4:	48 89 df             	mov    %rbx,%rdi
    66a7:	e8 c2 ff ff ff       	call   666e <_ZN4neko8SettingsD1Ev>
    66ac:	be 60 00 00 00       	mov    $0x60,%esi
    66b1:	48 89 df             	mov    %rbx,%rdi
    66b4:	e8 27 cc ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    66b9:	90                   	nop
    66ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    66be:	c9                   	leave
    66bf:	c3                   	ret

00000000000066c0 <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    66c0:	55                   	push   %rbp
    66c1:	48 89 e5             	mov    %rsp,%rbp
    66c4:	48 83 ec 10          	sub    $0x10,%rsp
    66c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    66cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d0:	48 89 c7             	mov    %rax,%rdi
    66d3:	e8 40 19 00 00       	call   8018 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>
    66d8:	90                   	nop
    66d9:	c9                   	leave
    66da:	c3                   	ret
    66db:	90                   	nop

00000000000066dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    66dc:	55                   	push   %rbp
    66dd:	48 89 e5             	mov    %rsp,%rbp
    66e0:	48 83 ec 10          	sub    $0x10,%rsp
    66e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66ec:	48 89 c7             	mov    %rax,%rdi
    66ef:	e8 4b 19 00 00       	call   803f <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    66f4:	c9                   	leave
    66f5:	c3                   	ret

00000000000066f6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    66f6:	55                   	push   %rbp
    66f7:	48 89 e5             	mov    %rsp,%rbp
    66fa:	48 83 ec 10          	sub    $0x10,%rsp
    66fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6702:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6706:	48 89 c7             	mov    %rax,%rdi
    6709:	e8 5a 04 00 00       	call   6b68 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    670e:	c9                   	leave
    670f:	c3                   	ret

0000000000006710 <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6710:	55                   	push   %rbp
    6711:	48 89 e5             	mov    %rsp,%rbp
    6714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    671c:	5d                   	pop    %rbp
    671d:	c3                   	ret

000000000000671e <_ZN4neko8RendererD1Ev>:
  ~Renderer() = default;
    671e:	55                   	push   %rbp
    671f:	48 89 e5             	mov    %rsp,%rbp
    6722:	48 83 ec 10          	sub    $0x10,%rsp
    6726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    672a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672e:	48 83 c0 48          	add    $0x48,%rax
    6732:	48 89 c7             	mov    %rax,%rdi
    6735:	e8 c8 46 00 00       	call   ae02 <_ZN4neko6DeviceD1Ev>
    673a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    673e:	48 83 c0 38          	add    $0x38,%rax
    6742:	48 89 c7             	mov    %rax,%rdi
    6745:	e8 3a a6 00 00       	call   10d84 <_ZN4neko7SurfaceD1Ev>
    674a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    674e:	48 83 c0 28          	add    $0x28,%rax
    6752:	48 89 c7             	mov    %rax,%rdi
    6755:	e8 1c a5 00 00       	call   10c76 <_ZN4neko6WindowD1Ev>
    675a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    675e:	48 83 c0 08          	add    $0x8,%rax
    6762:	48 89 c7             	mov    %rax,%rdi
    6765:	e8 86 d1 ff ff       	call   38f0 <_ZN4neko8InstanceD1Ev>
    676a:	90                   	nop
    676b:	c9                   	leave
    676c:	c3                   	ret
    676d:	90                   	nop

000000000000676e <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>:
      operator()(_Tp* __ptr) const
    676e:	55                   	push   %rbp
    676f:	48 89 e5             	mov    %rsp,%rbp
    6772:	53                   	push   %rbx
    6773:	48 83 ec 18          	sub    $0x18,%rsp
    6777:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    677b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    677f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6783:	48 85 db             	test   %rbx,%rbx
    6786:	74 15                	je     679d <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_+0x2f>
    6788:	48 89 df             	mov    %rbx,%rdi
    678b:	e8 8e ff ff ff       	call   671e <_ZN4neko8RendererD1Ev>
    6790:	be 68 00 00 00       	mov    $0x68,%esi
    6795:	48 89 df             	mov    %rbx,%rdi
    6798:	e8 43 cb ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    679d:	90                   	nop
    679e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    67a2:	c9                   	leave
    67a3:	c3                   	ret

00000000000067a4 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    67a4:	55                   	push   %rbp
    67a5:	48 89 e5             	mov    %rsp,%rbp
    67a8:	48 83 ec 10          	sub    $0x10,%rsp
    67ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    67b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b4:	48 89 c7             	mov    %rax,%rdi
    67b7:	e8 9e 18 00 00       	call   805a <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>
    67bc:	90                   	nop
    67bd:	c9                   	leave
    67be:	c3                   	ret
    67bf:	90                   	nop

00000000000067c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    67c0:	55                   	push   %rbp
    67c1:	48 89 e5             	mov    %rsp,%rbp
    67c4:	48 83 ec 10          	sub    $0x10,%rsp
    67c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67d0:	48 89 c7             	mov    %rax,%rdi
    67d3:	e8 a9 18 00 00       	call   8081 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    67d8:	c9                   	leave
    67d9:	c3                   	ret

00000000000067da <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    67da:	55                   	push   %rbp
    67db:	48 89 e5             	mov    %rsp,%rbp
    67de:	48 83 ec 10          	sub    $0x10,%rsp
    67e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    67e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ea:	48 89 c7             	mov    %rax,%rdi
    67ed:	e8 66 02 00 00       	call   6a58 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    67f2:	c9                   	leave
    67f3:	c3                   	ret

00000000000067f4 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    67f4:	55                   	push   %rbp
    67f5:	48 89 e5             	mov    %rsp,%rbp
    67f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    67fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6800:	5d                   	pop    %rbp
    6801:	c3                   	ret

0000000000006802 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>:
      operator()(_Tp* __ptr) const
    6802:	55                   	push   %rbp
    6803:	48 89 e5             	mov    %rsp,%rbp
    6806:	53                   	push   %rbx
    6807:	48 83 ec 18          	sub    $0x18,%rsp
    680b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    680f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    6813:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6817:	48 85 db             	test   %rbx,%rbx
    681a:	74 15                	je     6831 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_+0x2f>
    681c:	48 89 df             	mov    %rbx,%rdi
    681f:	e8 1a d8 ff ff       	call   403e <_ZN4neko10ThreadPoolD1Ev>
    6824:	be f8 00 00 00       	mov    $0xf8,%esi
    6829:	48 89 df             	mov    %rbx,%rdi
    682c:	e8 af ca ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    6831:	90                   	nop
    6832:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6836:	c9                   	leave
    6837:	c3                   	ret

0000000000006838 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6838:	55                   	push   %rbp
    6839:	48 89 e5             	mov    %rsp,%rbp
    683c:	48 83 ec 10          	sub    $0x10,%rsp
    6840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6844:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    684c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6850:	48 89 d6             	mov    %rdx,%rsi
    6853:	48 89 c7             	mov    %rax,%rdi
    6856:	e8 41 18 00 00       	call   809c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>
    685b:	90                   	nop
    685c:	c9                   	leave
    685d:	c3                   	ret

000000000000685e <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    685e:	55                   	push   %rbp
    685f:	48 89 e5             	mov    %rsp,%rbp
    6862:	48 83 ec 10          	sub    $0x10,%rsp
    6866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    686a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    686e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6872:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6876:	48 89 d6             	mov    %rdx,%rsi
    6879:	48 89 c7             	mov    %rax,%rdi
    687c:	e8 b7 ff ff ff       	call   6838 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6881:	90                   	nop
    6882:	c9                   	leave
    6883:	c3                   	ret

0000000000006884 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6884:	55                   	push   %rbp
    6885:	48 89 e5             	mov    %rsp,%rbp
    6888:	53                   	push   %rbx
    6889:	48 83 ec 28          	sub    $0x28,%rsp
    688d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6891:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6895:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6899:	48 89 c7             	mov    %rax,%rdi
    689c:	e8 8b fd ff ff       	call   662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    68a1:	48 8b 00             	mov    (%rax),%rax
    68a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    68a8:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    68ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    68b0:	48 89 c7             	mov    %rax,%rdi
    68b3:	e8 74 fd ff ff       	call   662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    68b8:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    68bb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    68c0:	74 1e                	je     68e0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    68c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    68c6:	48 89 c7             	mov    %rax,%rdi
    68c9:	e8 52 00 00 00       	call   6920 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    68ce:	48 89 c2             	mov    %rax,%rdx
    68d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68d5:	48 89 c6             	mov    %rax,%rsi
    68d8:	48 89 d7             	mov    %rdx,%rdi
    68db:	e8 aa fd ff ff       	call   668a <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
      }
    68e0:	90                   	nop
    68e1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68e5:	c9                   	leave
    68e6:	c3                   	ret
    68e7:	90                   	nop

00000000000068e8 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    68e8:	55                   	push   %rbp
    68e9:	48 89 e5             	mov    %rsp,%rbp
    68ec:	48 83 ec 20          	sub    $0x20,%rsp
    68f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    68f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68f8:	48 89 c7             	mov    %rax,%rdi
    68fb:	e8 2c fd ff ff       	call   662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6900:	48 8b 00             	mov    (%rax),%rax
    6903:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6907:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    690b:	48 89 c7             	mov    %rax,%rdi
    690e:	e8 19 fd ff ff       	call   662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6913:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    691a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    691e:	c9                   	leave
    691f:	c3                   	ret

0000000000006920 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6920:	55                   	push   %rbp
    6921:	48 89 e5             	mov    %rsp,%rbp
    6924:	48 83 ec 10          	sub    $0x10,%rsp
    6928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    692c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6930:	48 89 c7             	mov    %rax,%rdi
    6933:	e8 9b 17 00 00       	call   80d3 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6938:	c9                   	leave
    6939:	c3                   	ret

000000000000693a <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    693a:	55                   	push   %rbp
    693b:	48 89 e5             	mov    %rsp,%rbp
    693e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6946:	5d                   	pop    %rbp
    6947:	c3                   	ret

0000000000006948 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6948:	55                   	push   %rbp
    6949:	48 89 e5             	mov    %rsp,%rbp
    694c:	48 83 ec 10          	sub    $0x10,%rsp
    6950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6958:	48 89 c7             	mov    %rax,%rdi
    695b:	e8 8e 17 00 00       	call   80ee <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6960:	c9                   	leave
    6961:	c3                   	ret

0000000000006962 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6962:	55                   	push   %rbp
    6963:	48 89 e5             	mov    %rsp,%rbp
    6966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696e:	5d                   	pop    %rbp
    696f:	c3                   	ret

0000000000006970 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6970:	55                   	push   %rbp
    6971:	48 89 e5             	mov    %rsp,%rbp
    6974:	48 83 ec 10          	sub    $0x10,%rsp
    6978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    697c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6984:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6988:	48 89 d6             	mov    %rdx,%rsi
    698b:	48 89 c7             	mov    %rax,%rdi
    698e:	e8 79 17 00 00       	call   810c <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>
    6993:	90                   	nop
    6994:	c9                   	leave
    6995:	c3                   	ret

0000000000006996 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6996:	55                   	push   %rbp
    6997:	48 89 e5             	mov    %rsp,%rbp
    699a:	48 83 ec 10          	sub    $0x10,%rsp
    699e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    69a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69ae:	48 89 d6             	mov    %rdx,%rsi
    69b1:	48 89 c7             	mov    %rax,%rdi
    69b4:	e8 b7 ff ff ff       	call   6970 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    69b9:	90                   	nop
    69ba:	c9                   	leave
    69bb:	c3                   	ret

00000000000069bc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    69bc:	55                   	push   %rbp
    69bd:	48 89 e5             	mov    %rsp,%rbp
    69c0:	53                   	push   %rbx
    69c1:	48 83 ec 28          	sub    $0x28,%rsp
    69c5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    69c9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    69cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69d1:	48 89 c7             	mov    %rax,%rdi
    69d4:	e8 e7 fd ff ff       	call   67c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    69d9:	48 8b 00             	mov    (%rax),%rax
    69dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    69e0:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    69e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69e8:	48 89 c7             	mov    %rax,%rdi
    69eb:	e8 d0 fd ff ff       	call   67c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    69f0:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    69f3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    69f8:	74 1e                	je     6a18 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    69fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69fe:	48 89 c7             	mov    %rax,%rdi
    6a01:	e8 52 00 00 00       	call   6a58 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    6a06:	48 89 c2             	mov    %rax,%rdx
    6a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a0d:	48 89 c6             	mov    %rax,%rsi
    6a10:	48 89 d7             	mov    %rdx,%rdi
    6a13:	e8 ea fd ff ff       	call   6802 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
      }
    6a18:	90                   	nop
    6a19:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a1d:	c9                   	leave
    6a1e:	c3                   	ret
    6a1f:	90                   	nop

0000000000006a20 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6a20:	55                   	push   %rbp
    6a21:	48 89 e5             	mov    %rsp,%rbp
    6a24:	48 83 ec 20          	sub    $0x20,%rsp
    6a28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a30:	48 89 c7             	mov    %rax,%rdi
    6a33:	e8 88 fd ff ff       	call   67c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6a38:	48 8b 00             	mov    (%rax),%rax
    6a3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a43:	48 89 c7             	mov    %rax,%rdi
    6a46:	e8 75 fd ff ff       	call   67c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6a4b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6a56:	c9                   	leave
    6a57:	c3                   	ret

0000000000006a58 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6a58:	55                   	push   %rbp
    6a59:	48 89 e5             	mov    %rsp,%rbp
    6a5c:	48 83 ec 10          	sub    $0x10,%rsp
    6a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a68:	48 89 c7             	mov    %rax,%rdi
    6a6b:	e8 d3 16 00 00       	call   8143 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6a70:	c9                   	leave
    6a71:	c3                   	ret

0000000000006a72 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6a72:	55                   	push   %rbp
    6a73:	48 89 e5             	mov    %rsp,%rbp
    6a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7e:	5d                   	pop    %rbp
    6a7f:	c3                   	ret

0000000000006a80 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6a80:	55                   	push   %rbp
    6a81:	48 89 e5             	mov    %rsp,%rbp
    6a84:	48 83 ec 10          	sub    $0x10,%rsp
    6a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a98:	48 89 d6             	mov    %rdx,%rsi
    6a9b:	48 89 c7             	mov    %rax,%rdi
    6a9e:	e8 bb 16 00 00       	call   815e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>
    6aa3:	90                   	nop
    6aa4:	c9                   	leave
    6aa5:	c3                   	ret

0000000000006aa6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6aa6:	55                   	push   %rbp
    6aa7:	48 89 e5             	mov    %rsp,%rbp
    6aaa:	48 83 ec 10          	sub    $0x10,%rsp
    6aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ab2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6abe:	48 89 d6             	mov    %rdx,%rsi
    6ac1:	48 89 c7             	mov    %rax,%rdi
    6ac4:	e8 b7 ff ff ff       	call   6a80 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6ac9:	90                   	nop
    6aca:	c9                   	leave
    6acb:	c3                   	ret

0000000000006acc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6acc:	55                   	push   %rbp
    6acd:	48 89 e5             	mov    %rsp,%rbp
    6ad0:	53                   	push   %rbx
    6ad1:	48 83 ec 28          	sub    $0x28,%rsp
    6ad5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ad9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6add:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ae1:	48 89 c7             	mov    %rax,%rdi
    6ae4:	e8 f3 fb ff ff       	call   66dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6ae9:	48 8b 00             	mov    (%rax),%rax
    6aec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    6af0:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6af4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6af8:	48 89 c7             	mov    %rax,%rdi
    6afb:	e8 dc fb ff ff       	call   66dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6b00:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    6b03:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6b08:	74 1e                	je     6b28 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6b0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b0e:	48 89 c7             	mov    %rax,%rdi
    6b11:	e8 52 00 00 00       	call   6b68 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    6b16:	48 89 c2             	mov    %rax,%rdx
    6b19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b1d:	48 89 c6             	mov    %rax,%rsi
    6b20:	48 89 d7             	mov    %rdx,%rdi
    6b23:	e8 46 fc ff ff       	call   676e <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
      }
    6b28:	90                   	nop
    6b29:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b2d:	c9                   	leave
    6b2e:	c3                   	ret
    6b2f:	90                   	nop

0000000000006b30 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6b30:	55                   	push   %rbp
    6b31:	48 89 e5             	mov    %rsp,%rbp
    6b34:	48 83 ec 20          	sub    $0x20,%rsp
    6b38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6b3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b40:	48 89 c7             	mov    %rax,%rdi
    6b43:	e8 94 fb ff ff       	call   66dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6b48:	48 8b 00             	mov    (%rax),%rax
    6b4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b53:	48 89 c7             	mov    %rax,%rdi
    6b56:	e8 81 fb ff ff       	call   66dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6b5b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6b66:	c9                   	leave
    6b67:	c3                   	ret

0000000000006b68 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6b68:	55                   	push   %rbp
    6b69:	48 89 e5             	mov    %rsp,%rbp
    6b6c:	48 83 ec 10          	sub    $0x10,%rsp
    6b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b78:	48 89 c7             	mov    %rax,%rdi
    6b7b:	e8 15 16 00 00       	call   8195 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6b80:	c9                   	leave
    6b81:	c3                   	ret

0000000000006b82 <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6b82:	55                   	push   %rbp
    6b83:	48 89 e5             	mov    %rsp,%rbp
    6b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b8e:	5d                   	pop    %rbp
    6b8f:	c3                   	ret

0000000000006b90 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6b90:	55                   	push   %rbp
    6b91:	48 89 e5             	mov    %rsp,%rbp
    6b94:	48 83 ec 10          	sub    $0x10,%rsp
    6b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ba0:	48 89 c7             	mov    %rax,%rdi
    6ba3:	e8 08 16 00 00       	call   81b0 <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6ba8:	c9                   	leave
    6ba9:	c3                   	ret

0000000000006baa <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6baa:	55                   	push   %rbp
    6bab:	48 89 e5             	mov    %rsp,%rbp
    6bae:	48 83 ec 10          	sub    $0x10,%rsp
    6bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6bb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bba:	48 89 c7             	mov    %rax,%rdi
    6bbd:	e8 0c 16 00 00       	call   81ce <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6bc2:	c9                   	leave
    6bc3:	c3                   	ret

0000000000006bc4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    6bc4:	55                   	push   %rbp
    6bc5:	48 89 e5             	mov    %rsp,%rbp
    6bc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    6bcc:	b8 01 00 00 00       	mov    $0x1,%eax
    6bd1:	5d                   	pop    %rbp
    6bd2:	c3                   	ret

0000000000006bd3 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6bd3:	55                   	push   %rbp
    6bd4:	48 89 e5             	mov    %rsp,%rbp
    6bd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bdf:	5d                   	pop    %rbp
    6be0:	c3                   	ret

0000000000006be1 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    6be1:	55                   	push   %rbp
    6be2:	48 89 e5             	mov    %rsp,%rbp
    6be5:	48 83 ec 10          	sub    $0x10,%rsp
    6be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    6bf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6bf5:	48 89 c7             	mov    %rax,%rdi
    6bf8:	e8 d6 ff ff ff       	call   6bd3 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    6bfd:	48 89 c2             	mov    %rax,%rdx
    6c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c04:	48 89 d6             	mov    %rdx,%rsi
    6c07:	48 89 c7             	mov    %rax,%rdi
    6c0a:	e8 dc 15 00 00       	call   81eb <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    6c0f:	90                   	nop
    6c10:	c9                   	leave
    6c11:	c3                   	ret

0000000000006c12 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    6c12:	55                   	push   %rbp
    6c13:	48 89 e5             	mov    %rsp,%rbp
    6c16:	48 83 ec 10          	sub    $0x10,%rsp
    6c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    6c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c22:	48 89 c7             	mov    %rax,%rdi
    6c25:	e8 07 16 00 00       	call   8231 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6c2a:	48 89 c7             	mov    %rax,%rdi
    6c2d:	e8 29 16 00 00       	call   825b <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    6c32:	90                   	nop
      }
    6c33:	c9                   	leave
    6c34:	c3                   	ret

0000000000006c35 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    6c35:	55                   	push   %rbp
    6c36:	48 89 e5             	mov    %rsp,%rbp
    6c39:	53                   	push   %rbx
    6c3a:	48 83 ec 28          	sub    $0x28,%rsp
    6c3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6c46:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    6c49:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6c4c:	85 c0                	test   %eax,%eax
    6c4e:	74 07                	je     6c57 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    6c50:	83 f8 01             	cmp    $0x1,%eax
    6c53:	74 1a                	je     6c6f <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    6c55:	eb 38                	jmp    6c8f <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    6c57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c5b:	48 89 c7             	mov    %rax,%rdi
    6c5e:	e8 1b 16 00 00       	call   827e <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    6c63:	48 8d 15 ee 80 01 00 	lea    0x180ee(%rip),%rdx        # 1ed58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    6c6a:	48 89 10             	mov    %rdx,(%rax)
	    break;
    6c6d:	eb 36                	jmp    6ca5 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    6c6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6c73:	48 89 c7             	mov    %rax,%rdi
    6c76:	e8 b6 15 00 00       	call   8231 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6c7b:	48 89 c3             	mov    %rax,%rbx
    6c7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c82:	48 89 c7             	mov    %rax,%rdi
    6c85:	e8 0e 16 00 00       	call   8298 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    6c8a:	48 89 18             	mov    %rbx,(%rax)
	    break;
    6c8d:	eb 16                	jmp    6ca5 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    6c8f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    6c92:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6c96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c9a:	48 89 ce             	mov    %rcx,%rsi
    6c9d:	48 89 c7             	mov    %rax,%rdi
    6ca0:	e8 0d 16 00 00       	call   82b2 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    6ca5:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6caa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6cae:	c9                   	leave
    6caf:	c3                   	ret

0000000000006cb0 <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6cb0:	55                   	push   %rbp
    6cb1:	48 89 e5             	mov    %rsp,%rbp
    6cb4:	48 83 ec 10          	sub    $0x10,%rsp
    6cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cc4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cc8:	48 89 d6             	mov    %rdx,%rsi
    6ccb:	48 89 c7             	mov    %rax,%rdi
    6cce:	e8 85 16 00 00       	call   8358 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>
    6cd3:	90                   	nop
    6cd4:	c9                   	leave
    6cd5:	c3                   	ret

0000000000006cd6 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6cd6:	55                   	push   %rbp
    6cd7:	48 89 e5             	mov    %rsp,%rbp
    6cda:	48 83 ec 10          	sub    $0x10,%rsp
    6cde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ce2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cee:	48 89 d6             	mov    %rdx,%rsi
    6cf1:	48 89 c7             	mov    %rax,%rdi
    6cf4:	e8 b7 ff ff ff       	call   6cb0 <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6cf9:	90                   	nop
    6cfa:	c9                   	leave
    6cfb:	c3                   	ret

0000000000006cfc <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    6cfc:	55                   	push   %rbp
    6cfd:	48 89 e5             	mov    %rsp,%rbp
    6d00:	48 83 ec 10          	sub    $0x10,%rsp
    6d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d0c:	48 89 c7             	mov    %rax,%rdi
    6d0f:	e8 7b 16 00 00       	call   838f <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6d14:	c9                   	leave
    6d15:	c3                   	ret

0000000000006d16 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    6d16:	55                   	push   %rbp
    6d17:	48 89 e5             	mov    %rsp,%rbp
    6d1a:	48 83 ec 10          	sub    $0x10,%rsp
    6d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d26:	48 89 c7             	mov    %rax,%rdi
    6d29:	e8 7c 16 00 00       	call   83aa <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>
    6d2e:	c9                   	leave
    6d2f:	c3                   	ret

0000000000006d30 <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6d30:	55                   	push   %rbp
    6d31:	48 89 e5             	mov    %rsp,%rbp
    6d34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d3c:	5d                   	pop    %rbp
    6d3d:	c3                   	ret

0000000000006d3e <_ZN4neko6EngineD1Ev>:
  ~Engine() = default;
    6d3e:	55                   	push   %rbp
    6d3f:	48 89 e5             	mov    %rsp,%rbp
    6d42:	48 83 ec 10          	sub    $0x10,%rsp
    6d46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d4e:	48 83 c0 10          	add    $0x10,%rax
    6d52:	48 89 c7             	mov    %rax,%rdi
    6d55:	e8 a6 e4 ff ff       	call   5200 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    6d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d5e:	48 83 c0 08          	add    $0x8,%rax
    6d62:	48 89 c7             	mov    %rax,%rdi
    6d65:	e8 d4 e3 ff ff       	call   513e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    6d6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d6e:	48 89 c7             	mov    %rax,%rdi
    6d71:	e8 06 e3 ff ff       	call   507c <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    6d76:	90                   	nop
    6d77:	c9                   	leave
    6d78:	c3                   	ret
    6d79:	90                   	nop

0000000000006d7a <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>:
      operator()(_Tp* __ptr) const
    6d7a:	55                   	push   %rbp
    6d7b:	48 89 e5             	mov    %rsp,%rbp
    6d7e:	53                   	push   %rbx
    6d7f:	48 83 ec 18          	sub    $0x18,%rsp
    6d83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6d87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    6d8b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6d8f:	48 85 db             	test   %rbx,%rbx
    6d92:	74 15                	je     6da9 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_+0x2f>
    6d94:	48 89 df             	mov    %rbx,%rdi
    6d97:	e8 a2 ff ff ff       	call   6d3e <_ZN4neko6EngineD1Ev>
    6d9c:	be 18 00 00 00       	mov    $0x18,%esi
    6da1:	48 89 df             	mov    %rbx,%rdi
    6da4:	e8 37 c5 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    6da9:	90                   	nop
    6daa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6dae:	c9                   	leave
    6daf:	c3                   	ret

0000000000006db0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    6db0:	55                   	push   %rbp
    6db1:	48 89 e5             	mov    %rsp,%rbp
    6db4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    6db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbc:	48 8b 00             	mov    (%rax),%rax
    6dbf:	5d                   	pop    %rbp
    6dc0:	c3                   	ret

0000000000006dc1 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    6dc1:	55                   	push   %rbp
    6dc2:	48 89 e5             	mov    %rsp,%rbp
    6dc5:	53                   	push   %rbx
    6dc6:	48 83 ec 38          	sub    $0x38,%rsp
    6dca:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6dce:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    6dd2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6dd6:	48 8b 00             	mov    (%rax),%rax
    6dd9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6ddd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6de1:	48 89 c7             	mov    %rax,%rdi
    6de4:	e8 53 cc ff ff       	call   3a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    6de9:	48 89 c3             	mov    %rax,%rbx
    6dec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6df0:	48 8b 00             	mov    (%rax),%rax
    6df3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6df7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6dfb:	48 89 c7             	mov    %rax,%rdi
    6dfe:	e8 39 cc ff ff       	call   3a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    6e03:	48 29 c3             	sub    %rax,%rbx
    6e06:	48 89 da             	mov    %rbx,%rdx
    6e09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6e0d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    6e11:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6e15:	48 89 d6             	mov    %rdx,%rsi
    6e18:	48 89 c7             	mov    %rax,%rdi
    6e1b:	e8 fe cb ff ff       	call   3a1e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    6e20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    6e24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e28:	c9                   	leave
    6e29:	c3                   	ret

0000000000006e2a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    6e2a:	55                   	push   %rbp
    6e2b:	48 89 e5             	mov    %rsp,%rbp
    6e2e:	48 83 ec 20          	sub    $0x20,%rsp
    6e32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    6e36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e3a:	48 89 c7             	mov    %rax,%rdi
    6e3d:	e8 fa cb ff ff       	call   3a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    6e42:	48 89 c1             	mov    %rax,%rcx
    6e45:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    6e4c:	9b c4 20 
    6e4f:	48 89 c8             	mov    %rcx,%rax
    6e52:	48 f7 ea             	imul   %rdx
    6e55:	48 89 d0             	mov    %rdx,%rax
    6e58:	48 c1 f8 07          	sar    $0x7,%rax
    6e5c:	48 c1 f9 3f          	sar    $0x3f,%rcx
    6e60:	48 89 ca             	mov    %rcx,%rdx
    6e63:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    6e66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6e6a:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    6e6e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    6e72:	48 89 d6             	mov    %rdx,%rsi
    6e75:	48 89 c7             	mov    %rax,%rdi
    6e78:	e8 47 15 00 00       	call   83c4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    6e7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    6e81:	c9                   	leave
    6e82:	c3                   	ret
    6e83:	90                   	nop

0000000000006e84 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6e84:	55                   	push   %rbp
    6e85:	48 89 e5             	mov    %rsp,%rbp
    6e88:	48 83 ec 10          	sub    $0x10,%rsp
    6e8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e94:	48 89 c7             	mov    %rax,%rdi
    6e97:	e8 46 15 00 00       	call   83e2 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    6e9c:	c9                   	leave
    6e9d:	c3                   	ret

0000000000006e9e <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    6e9e:	55                   	push   %rbp
    6e9f:	48 89 e5             	mov    %rsp,%rbp
    6ea2:	48 83 ec 10          	sub    $0x10,%rsp
    6ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    6eae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6eb2:	48 89 c7             	mov    %rax,%rdi
    6eb5:	e8 45 15 00 00       	call   83ff <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    6eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ec2:	48 89 d6             	mov    %rdx,%rsi
    6ec5:	48 89 c7             	mov    %rax,%rdi
    6ec8:	e8 3d 15 00 00       	call   840a <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    6ecd:	c9                   	leave
    6ece:	c3                   	ret
    6ecf:	90                   	nop

0000000000006ed0 <_ZNSt15__new_allocatorISt6threadEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6ed0:	55                   	push   %rbp
    6ed1:	48 89 e5             	mov    %rsp,%rbp
    6ed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ed8:	90                   	nop
    6ed9:	5d                   	pop    %rbp
    6eda:	c3                   	ret

0000000000006edb <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6edb:	55                   	push   %rbp
    6edc:	48 89 e5             	mov    %rsp,%rbp
    6edf:	48 83 ec 20          	sub    $0x20,%rsp
    6ee3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ee7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6eeb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6eef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ef3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6efb:	48 89 ce             	mov    %rcx,%rsi
    6efe:	48 89 c7             	mov    %rax,%rdi
    6f01:	e8 1a 15 00 00       	call   8420 <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>
    6f06:	90                   	nop
    6f07:	c9                   	leave
    6f08:	c3                   	ret

0000000000006f09 <_ZSt8_DestroyIPSt6threadEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6f09:	55                   	push   %rbp
    6f0a:	48 89 e5             	mov    %rsp,%rbp
    6f0d:	48 83 ec 10          	sub    $0x10,%rsp
    6f11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    6f19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f21:	48 89 d6             	mov    %rdx,%rsi
    6f24:	48 89 c7             	mov    %rax,%rdi
    6f27:	e8 25 15 00 00       	call   8451 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>
    }
    6f2c:	90                   	nop
    6f2d:	c9                   	leave
    6f2e:	c3                   	ret
    6f2f:	90                   	nop

0000000000006f30 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>:
	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
    6f30:	55                   	push   %rbp
    6f31:	48 89 e5             	mov    %rsp,%rbp
    6f34:	48 83 ec 10          	sub    $0x10,%rsp
    6f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    6f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f40:	48 89 c7             	mov    %rax,%rdi
    6f43:	e8 42 15 00 00       	call   848a <_ZNSaISt8functionIFvvEEEC1Ev>
    6f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f4c:	48 89 c7             	mov    %rax,%rdi
    6f4f:	e8 52 15 00 00       	call   84a6 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>
	{ }
    6f54:	90                   	nop
    6f55:	c9                   	leave
    6f56:	c3                   	ret
    6f57:	90                   	nop

0000000000006f58 <_ZNSaISt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    6f58:	55                   	push   %rbp
    6f59:	48 89 e5             	mov    %rsp,%rbp
    6f5c:	48 83 ec 10          	sub    $0x10,%rsp
    6f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f68:	48 89 c7             	mov    %rax,%rdi
    6f6b:	e8 7c 15 00 00       	call   84ec <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>
    6f70:	90                   	nop
    6f71:	c9                   	leave
    6f72:	c3                   	ret
    6f73:	90                   	nop

0000000000006f74 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>:
    _Deque_base<_Tp, _Alloc>::
    6f74:	55                   	push   %rbp
    6f75:	48 89 e5             	mov    %rsp,%rbp
    6f78:	53                   	push   %rbx
    6f79:	48 83 ec 48          	sub    $0x48,%rsp
    6f7d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6f81:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
    6f85:	bf 20 00 00 00       	mov    $0x20,%edi
    6f8a:	e8 62 cc ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    6f8f:	48 89 c3             	mov    %rax,%rbx
    6f92:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6f96:	ba 00 00 00 00       	mov    $0x0,%edx
    6f9b:	48 f7 f3             	div    %rbx
    6f9e:	48 83 c0 01          	add    $0x1,%rax
    6fa2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
					   size_t(__num_nodes + 2));
    6fa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6faa:	48 83 c0 02          	add    $0x2,%rax
    6fae:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
    6fb2:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
    6fb9:	00 
    6fba:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    6fbe:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6fc2:	48 89 d6             	mov    %rdx,%rsi
    6fc5:	48 89 c7             	mov    %rax,%rdi
    6fc8:	e8 41 d8 ff ff       	call   480e <_ZSt3maxImERKT_S2_S2_>
    6fcd:	48 8b 10             	mov    (%rax),%rdx
    6fd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6fd4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
    6fd8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6fdc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6fe0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6fe4:	48 89 d6             	mov    %rdx,%rsi
    6fe7:	48 89 c7             	mov    %rax,%rdi
    6fea:	e8 09 15 00 00       	call   84f8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    6fef:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    6ff3:	48 89 02             	mov    %rax,(%rdx)
      _Map_pointer __nstart = (this->_M_impl._M_map
    6ff6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6ffa:	48 8b 10             	mov    (%rax),%rdx
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
    6ffd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7001:	48 8b 40 08          	mov    0x8(%rax),%rax
    7005:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    7009:	48 d1 e8             	shr    %rax
    700c:	48 c1 e0 03          	shl    $0x3,%rax
      _Map_pointer __nstart = (this->_M_impl._M_map
    7010:	48 01 d0             	add    %rdx,%rax
    7013:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      _Map_pointer __nfinish = __nstart + __num_nodes;
    7017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    701b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7022:	00 
    7023:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7027:	48 01 d0             	add    %rdx,%rax
    702a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	{ _M_create_nodes(__nstart, __nfinish); }
    702e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7032:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7036:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    703a:	48 89 ce             	mov    %rcx,%rsi
    703d:	48 89 c7             	mov    %rax,%rdi
    7040:	e8 1f 15 00 00       	call   8564 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>
      this->_M_impl._M_start._M_set_node(__nstart);
    7045:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7049:	48 8d 50 10          	lea    0x10(%rax),%rdx
    704d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7051:	48 89 c6             	mov    %rax,%rsi
    7054:	48 89 d7             	mov    %rdx,%rdi
    7057:	e8 88 15 00 00       	call   85e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__nfinish - 1);
    705c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7060:	48 83 c0 30          	add    $0x30,%rax
    7064:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7068:	48 83 ea 08          	sub    $0x8,%rdx
    706c:	48 89 d6             	mov    %rdx,%rsi
    706f:	48 89 c7             	mov    %rax,%rdi
    7072:	e8 6d 15 00 00       	call   85e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
    7077:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    707b:	48 8b 50 18          	mov    0x18(%rax),%rdx
    707f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7083:	48 89 50 10          	mov    %rdx,0x10(%rax)
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    7087:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    708b:	48 8b 58 38          	mov    0x38(%rax),%rbx
					% __deque_buf_size(sizeof(_Tp)));
    708f:	bf 20 00 00 00       	mov    $0x20,%edi
    7094:	e8 58 cb ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    7099:	48 89 c1             	mov    %rax,%rcx
    709c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    70a0:	ba 00 00 00 00       	mov    $0x0,%edx
    70a5:	48 f7 f1             	div    %rcx
    70a8:	48 89 d1             	mov    %rdx,%rcx
    70ab:	48 89 c8             	mov    %rcx,%rax
					+ __num_elements
    70ae:	48 c1 e0 05          	shl    $0x5,%rax
    70b2:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    70b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70ba:	48 89 50 30          	mov    %rdx,0x30(%rax)
    }
    70be:	eb 55                	jmp    7115 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm+0x1a1>
      __catch(...)
    70c0:	48 89 c7             	mov    %rax,%rdi
    70c3:	e8 18 c0 ff ff       	call   30e0 <__cxa_begin_catch@plt>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    70c8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70cc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    70d0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70d4:	48 8b 08             	mov    (%rax),%rcx
    70d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70db:	48 89 ce             	mov    %rcx,%rsi
    70de:	48 89 c7             	mov    %rax,%rdi
    70e1:	e8 7e 00 00 00       	call   7164 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
	  this->_M_impl._M_map = _Map_pointer();
    70e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	  this->_M_impl._M_map_size = 0;
    70f1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70f5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    70fc:	00 
	  __throw_exception_again;
    70fd:	e8 1e c3 ff ff       	call   3420 <__cxa_rethrow@plt>
      __catch(...)
    7102:	48 89 c3             	mov    %rax,%rbx
    7105:	e8 86 c3 ff ff       	call   3490 <__cxa_end_catch@plt>
    710a:	48 89 d8             	mov    %rbx,%rax
    710d:	48 89 c7             	mov    %rax,%rdi
    7110:	e8 cb c3 ff ff       	call   34e0 <_Unwind_Resume@plt>
    }
    7115:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7119:	c9                   	leave
    711a:	c3                   	ret
    711b:	90                   	nop

000000000000711c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    711c:	55                   	push   %rbp
    711d:	48 89 e5             	mov    %rsp,%rbp
    7120:	48 83 ec 30          	sub    $0x30,%rsp
    7124:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7128:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    712c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    7130:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7134:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7138:	eb 1b                	jmp    7155 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x39>
	_M_deallocate_node(*__n);
    713a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    713e:	48 8b 10             	mov    (%rax),%rdx
    7141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7145:	48 89 d6             	mov    %rdx,%rsi
    7148:	48 89 c7             	mov    %rax,%rdi
    714b:	e8 e4 14 00 00       	call   8634 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    7150:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    7155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7159:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    715d:	72 db                	jb     713a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x1e>
    }
    715f:	90                   	nop
    7160:	90                   	nop
    7161:	c9                   	leave
    7162:	c3                   	ret
    7163:	90                   	nop

0000000000007164 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>:
      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
    7164:	55                   	push   %rbp
    7165:	48 89 e5             	mov    %rsp,%rbp
    7168:	48 83 ec 30          	sub    $0x30,%rsp
    716c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7170:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7174:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    7178:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    717c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7180:	48 89 d6             	mov    %rdx,%rsi
    7183:	48 89 c7             	mov    %rax,%rdi
    7186:	e8 dd 14 00 00       	call   8668 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
    718b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    718f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7193:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    7197:	48 89 ce             	mov    %rcx,%rsi
    719a:	48 89 c7             	mov    %rax,%rdi
    719d:	e8 15 15 00 00       	call   86b7 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>
      }
    71a2:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    71a6:	48 89 c7             	mov    %rax,%rdi
    71a9:	e8 ee 14 00 00       	call   869c <_ZNSaIPSt8functionIFvvEEED1Ev>
    71ae:	c9                   	leave
    71af:	c3                   	ret

00000000000071b0 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
    71b0:	55                   	push   %rbp
    71b1:	48 89 e5             	mov    %rsp,%rbp
    71b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
    71bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71c0:	48 8b 10             	mov    (%rax),%rdx
    71c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c7:	48 89 10             	mov    %rdx,(%rax)
    71ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71ce:	48 8b 50 08          	mov    0x8(%rax),%rdx
    71d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
    71da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71de:	48 8b 50 10          	mov    0x10(%rax),%rdx
    71e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71e6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    71ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71ee:	48 8b 50 18          	mov    0x18(%rax),%rdx
    71f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f6:	48 89 50 18          	mov    %rdx,0x18(%rax)
    71fa:	90                   	nop
    71fb:	5d                   	pop    %rbp
    71fc:	c3                   	ret
    71fd:	90                   	nop

00000000000071fe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>:
	}
      }

   template<typename _Tp, typename _Alloc>
     void
     deque<_Tp, _Alloc>::
    71fe:	55                   	push   %rbp
    71ff:	48 89 e5             	mov    %rsp,%rbp
    7202:	41 54                	push   %r12
    7204:	53                   	push   %rbx
    7205:	48 83 ec 30          	sub    $0x30,%rsp
    7209:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    720d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7211:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
     _M_destroy_data_aux(iterator __first, iterator __last)
     {
       for (_Map_pointer __node = __first._M_node + 1;
    7215:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7219:	48 8b 40 18          	mov    0x18(%rax),%rax
    721d:	48 83 c0 08          	add    $0x8,%rax
    7221:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7225:	eb 3d                	jmp    7264 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x66>
	    __node < __last._M_node; ++__node)
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
		       _M_get_Tp_allocator());
    7227:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    722b:	48 89 c7             	mov    %rax,%rdi
    722e:	e8 d9 e9 ff ff       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7233:	48 89 c3             	mov    %rax,%rbx
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
    7236:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    723a:	4c 8b 20             	mov    (%rax),%r12
    723d:	e8 a3 14 00 00       	call   86e5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>
    7242:	48 c1 e0 05          	shl    $0x5,%rax
    7246:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
    724a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    724e:	48 8b 00             	mov    (%rax),%rax
    7251:	48 89 da             	mov    %rbx,%rdx
    7254:	48 89 ce             	mov    %rcx,%rsi
    7257:	48 89 c7             	mov    %rax,%rdi
    725a:	e8 96 14 00 00       	call   86f5 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
       for (_Map_pointer __node = __first._M_node + 1;
    725f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	    __node < __last._M_node; ++__node)
    7264:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7268:	48 8b 40 18          	mov    0x18(%rax),%rax
    726c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    7270:	72 b5                	jb     7227 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x29>

       if (__first._M_node != __last._M_node)
    7272:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7276:	48 8b 50 18          	mov    0x18(%rax),%rdx
    727a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    727e:	48 8b 40 18          	mov    0x18(%rax),%rax
    7282:	48 39 c2             	cmp    %rax,%rdx
    7285:	74 54                	je     72db <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0xdd>
	 {
	   std::_Destroy(__first._M_cur, __first._M_last,
			 _M_get_Tp_allocator());
    7287:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    728b:	48 89 c7             	mov    %rax,%rdi
    728e:	e8 79 e9 ff ff       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7293:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__first._M_cur, __first._M_last,
    7296:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    729a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    729e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72a2:	48 8b 00             	mov    (%rax),%rax
    72a5:	48 89 ce             	mov    %rcx,%rsi
    72a8:	48 89 c7             	mov    %rax,%rdi
    72ab:	e8 45 14 00 00       	call   86f5 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	   std::_Destroy(__last._M_first, __last._M_cur,
			 _M_get_Tp_allocator());
    72b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72b4:	48 89 c7             	mov    %rax,%rdi
    72b7:	e8 50 e9 ff ff       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    72bc:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__last._M_first, __last._M_cur,
    72bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    72c3:	48 8b 08             	mov    (%rax),%rcx
    72c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    72ca:	48 8b 40 08          	mov    0x8(%rax),%rax
    72ce:	48 89 ce             	mov    %rcx,%rsi
    72d1:	48 89 c7             	mov    %rax,%rdi
    72d4:	e8 1c 14 00 00       	call   86f5 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	 }
       else
	 std::_Destroy(__first._M_cur, __last._M_cur,
		       _M_get_Tp_allocator());
     }
    72d9:	eb 28                	jmp    7303 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x105>
		       _M_get_Tp_allocator());
    72db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72df:	48 89 c7             	mov    %rax,%rdi
    72e2:	e8 25 e9 ff ff       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    72e7:	48 89 c2             	mov    %rax,%rdx
	 std::_Destroy(__first._M_cur, __last._M_cur,
    72ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    72ee:	48 8b 08             	mov    (%rax),%rcx
    72f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72f5:	48 8b 00             	mov    (%rax),%rax
    72f8:	48 89 ce             	mov    %rcx,%rsi
    72fb:	48 89 c7             	mov    %rax,%rdi
    72fe:	e8 f2 13 00 00       	call   86f5 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
     }
    7303:	90                   	nop
    7304:	48 83 c4 30          	add    $0x30,%rsp
    7308:	5b                   	pop    %rbx
    7309:	41 5c                	pop    %r12
    730b:	5d                   	pop    %rbp
    730c:	c3                   	ret
    730d:	90                   	nop

000000000000730e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    730e:	55                   	push   %rbp
    730f:	48 89 e5             	mov    %rsp,%rbp
    7312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7316:	90                   	nop
    7317:	5d                   	pop    %rbp
    7318:	c3                   	ret

0000000000007319 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    7319:	55                   	push   %rbp
    731a:	48 89 e5             	mov    %rsp,%rbp
    731d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    7321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7325:	48 8b 40 18          	mov    0x18(%rax),%rax
    7329:	5d                   	pop    %rbp
    732a:	c3                   	ret

000000000000732b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    732b:	55                   	push   %rbp
    732c:	48 89 e5             	mov    %rsp,%rbp
    732f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    7333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7337:	48 8b 40 10          	mov    0x10(%rax),%rax
    733b:	5d                   	pop    %rbp
    733c:	c3                   	ret
    733d:	90                   	nop

000000000000733e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    733e:	55                   	push   %rbp
    733f:	48 89 e5             	mov    %rsp,%rbp
    7342:	48 83 ec 10          	sub    $0x10,%rsp
    7346:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    734a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    734e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7356:	48 89 d6             	mov    %rdx,%rsi
    7359:	48 89 c7             	mov    %rax,%rdi
    735c:	e8 bf 13 00 00       	call   8720 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>
	_M_put_node(__p);
    7361:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7369:	48 89 d6             	mov    %rdx,%rsi
    736c:	48 89 c7             	mov    %rax,%rdi
    736f:	e8 ea 13 00 00       	call   875e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
      }
    7374:	90                   	nop
    7375:	c9                   	leave
    7376:	c3                   	ret
    7377:	90                   	nop

0000000000007378 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    7378:	55                   	push   %rbp
    7379:	48 89 e5             	mov    %rsp,%rbp
    737c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    7380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7384:	48 8b 40 10          	mov    0x10(%rax),%rax
    7388:	5d                   	pop    %rbp
    7389:	c3                   	ret

000000000000738a <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    738a:	55                   	push   %rbp
    738b:	48 89 e5             	mov    %rsp,%rbp
    738e:	48 83 ec 10          	sub    $0x10,%rsp
    7392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    7396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    739a:	48 89 c7             	mov    %rax,%rdi
    739d:	e8 34 14 00 00       	call   87d6 <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    73a2:	48 89 c7             	mov    %rax,%rdi
    73a5:	e8 ea 13 00 00       	call   8794 <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>
    73aa:	c9                   	leave
    73ab:	c3                   	ret

00000000000073ac <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    73ac:	55                   	push   %rbp
    73ad:	48 89 e5             	mov    %rsp,%rbp
    73b0:	48 83 ec 20          	sub    $0x20,%rsp
    73b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    73c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    73c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73c8:	48 89 d6             	mov    %rdx,%rsi
    73cb:	48 89 c7             	mov    %rax,%rdi
    73ce:	e8 11 14 00 00       	call   87e4 <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>
    73d3:	c9                   	leave
    73d4:	c3                   	ret
    73d5:	90                   	nop

00000000000073d6 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    73d6:	55                   	push   %rbp
    73d7:	48 89 e5             	mov    %rsp,%rbp
    73da:	53                   	push   %rbx
    73db:	48 83 ec 38          	sub    $0x38,%rsp
    73df:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    73e3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    73e7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    73eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73ef:	48 89 c7             	mov    %rax,%rdi
    73f2:	e8 93 ff ff ff       	call   738a <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    73f7:	48 89 c3             	mov    %rax,%rbx
    73fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73fe:	48 89 c7             	mov    %rax,%rdi
    7401:	e8 ca d8 ff ff       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7406:	48 29 c3             	sub    %rax,%rbx
    7409:	48 89 da             	mov    %rbx,%rdx
    740c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7410:	48 39 c2             	cmp    %rax,%rdx
    7413:	0f 92 c0             	setb   %al
    7416:	84 c0                	test   %al,%al
    7418:	74 0c                	je     7426 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    741a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    741e:	48 89 c7             	mov    %rax,%rdi
    7421:	e8 1a bd ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    7426:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    742a:	48 89 c7             	mov    %rax,%rdi
    742d:	e8 9e d8 ff ff       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7432:	48 89 c3             	mov    %rax,%rbx
    7435:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7439:	48 89 c7             	mov    %rax,%rdi
    743c:	e8 8f d8 ff ff       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7441:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7445:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    7449:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    744d:	48 89 d6             	mov    %rdx,%rsi
    7450:	48 89 c7             	mov    %rax,%rdi
    7453:	e8 b6 d3 ff ff       	call   480e <_ZSt3maxImERKT_S2_S2_>
    7458:	48 8b 00             	mov    (%rax),%rax
    745b:	48 01 d8             	add    %rbx,%rax
    745e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    7462:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7466:	48 89 c7             	mov    %rax,%rdi
    7469:	e8 62 d8 ff ff       	call   4cd0 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    746e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    7472:	72 12                	jb     7486 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xb0>
    7474:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7478:	48 89 c7             	mov    %rax,%rdi
    747b:	e8 0a ff ff ff       	call   738a <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    7480:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    7484:	73 0e                	jae    7494 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xbe>
    7486:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    748a:	48 89 c7             	mov    %rax,%rdi
    748d:	e8 f8 fe ff ff       	call   738a <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    7492:	eb 04                	jmp    7498 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xc2>
    7494:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    7498:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    749c:	c9                   	leave
    749d:	c3                   	ret

000000000000749e <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    749e:	55                   	push   %rbp
    749f:	48 89 e5             	mov    %rsp,%rbp
    74a2:	48 83 ec 10          	sub    $0x10,%rsp
    74a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    74ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    74b3:	74 15                	je     74ca <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x2c>
    74b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    74bd:	48 89 d6             	mov    %rdx,%rsi
    74c0:	48 89 c7             	mov    %rax,%rdi
    74c3:	e8 45 13 00 00       	call   880d <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>
    74c8:	eb 05                	jmp    74cf <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x31>
    74ca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    74cf:	c9                   	leave
    74d0:	c3                   	ret

00000000000074d1 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    74d1:	55                   	push   %rbp
    74d2:	48 89 e5             	mov    %rsp,%rbp
    74d5:	48 83 ec 20          	sub    $0x20,%rsp
    74d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    74e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    74e5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    74e9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    74ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    74f1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    74f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74f9:	48 89 c7             	mov    %rax,%rdi
    74fc:	e8 36 13 00 00       	call   8837 <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    7501:	c9                   	leave
    7502:	c3                   	ret
    7503:	90                   	nop

0000000000007504 <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>:
	tuple(_U1&& __a1, _U2&& __a2)
    7504:	55                   	push   %rbp
    7505:	48 89 e5             	mov    %rsp,%rbp
    7508:	41 54                	push   %r12
    750a:	53                   	push   %rbx
    750b:	48 83 ec 20          	sub    $0x20,%rsp
    750f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7513:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7517:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
    751b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    751f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7523:	48 89 c7             	mov    %rax,%rdi
    7526:	e8 9f ea ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    752b:	49 89 c4             	mov    %rax,%r12
    752e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7532:	48 89 c7             	mov    %rax,%rdi
    7535:	e8 82 ea ff ff       	call   5fbc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    753a:	4c 89 e2             	mov    %r12,%rdx
    753d:	48 89 c6             	mov    %rax,%rsi
    7540:	48 89 df             	mov    %rbx,%rdi
    7543:	e8 52 13 00 00       	call   889a <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>
    7548:	90                   	nop
    7549:	48 83 c4 20          	add    $0x20,%rsp
    754d:	5b                   	pop    %rbx
    754e:	41 5c                	pop    %r12
    7550:	5d                   	pop    %rbp
    7551:	c3                   	ret

0000000000007552 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    7552:	55                   	push   %rbp
    7553:	48 89 e5             	mov    %rsp,%rbp
    7556:	53                   	push   %rbx
    7557:	48 83 ec 18          	sub    $0x18,%rsp
    755b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    755f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7567:	48 89 c7             	mov    %rax,%rdi
    756a:	e8 89 13 00 00       	call   88f8 <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    756f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    7573:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7577:	48 89 c7             	mov    %rax,%rdi
    757a:	e8 0b 00 00 00       	call   758a <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    757f:	48 89 18             	mov    %rbx,(%rax)
    7582:	90                   	nop
    7583:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7587:	c9                   	leave
    7588:	c3                   	ret
    7589:	90                   	nop

000000000000758a <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    758a:	55                   	push   %rbp
    758b:	48 89 e5             	mov    %rsp,%rbp
    758e:	48 83 ec 10          	sub    $0x10,%rsp
    7592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    759a:	48 89 c7             	mov    %rax,%rdi
    759d:	e8 71 13 00 00       	call   8913 <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    75a2:	c9                   	leave
    75a3:	c3                   	ret

00000000000075a4 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    75a4:	55                   	push   %rbp
    75a5:	48 89 e5             	mov    %rsp,%rbp
    75a8:	48 83 ec 10          	sub    $0x10,%rsp
    75ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    75b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75b4:	48 89 c7             	mov    %rax,%rdi
    75b7:	e8 72 13 00 00       	call   892e <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>
    75bc:	c9                   	leave
    75bd:	c3                   	ret

00000000000075be <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    75be:	55                   	push   %rbp
    75bf:	48 89 e5             	mov    %rsp,%rbp
    75c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    75c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75ca:	5d                   	pop    %rbp
    75cb:	c3                   	ret

00000000000075cc <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>:
      operator()(_Tp* __ptr) const
    75cc:	55                   	push   %rbp
    75cd:	48 89 e5             	mov    %rsp,%rbp
    75d0:	48 83 ec 10          	sub    $0x10,%rsp
    75d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    75dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75e0:	48 85 c0             	test   %rax,%rax
    75e3:	74 0f                	je     75f4 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_+0x28>
    75e5:	48 8b 10             	mov    (%rax),%rdx
    75e8:	48 83 c2 08          	add    $0x8,%rdx
    75ec:	48 8b 12             	mov    (%rdx),%rdx
    75ef:	48 89 c7             	mov    %rax,%rdi
    75f2:	ff d2                	call   *%rdx
      }
    75f4:	90                   	nop
    75f5:	c9                   	leave
    75f6:	c3                   	ret

00000000000075f7 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    75f7:	55                   	push   %rbp
    75f8:	48 89 e5             	mov    %rsp,%rbp
    75fb:	48 83 ec 20          	sub    $0x20,%rsp
    75ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7603:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7607:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    760b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    760f:	48 89 c7             	mov    %rax,%rdi
    7612:	e8 31 13 00 00       	call   8948 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7617:	48 89 c2             	mov    %rax,%rdx
    761a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    761e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7622:	48 89 ce             	mov    %rcx,%rsi
    7625:	48 89 c7             	mov    %rax,%rdi
    7628:	e8 29 13 00 00       	call   8956 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
	}
    762d:	90                   	nop
    762e:	c9                   	leave
    762f:	c3                   	ret

0000000000007630 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>:
      deque<_Tp, _Alloc>::
    7630:	55                   	push   %rbp
    7631:	48 89 e5             	mov    %rsp,%rbp
    7634:	53                   	push   %rbx
    7635:	48 83 ec 18          	sub    $0x18,%rsp
    7639:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    763d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size() == max_size())
    7641:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7645:	48 89 c7             	mov    %rax,%rdi
    7648:	e8 83 13 00 00       	call   89d0 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>
    764d:	48 89 c3             	mov    %rax,%rbx
    7650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7654:	48 89 c7             	mov    %rax,%rdi
    7657:	e8 9e 13 00 00       	call   89fa <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>
    765c:	48 39 c3             	cmp    %rax,%rbx
    765f:	0f 94 c0             	sete   %al
    7662:	84 c0                	test   %al,%al
    7664:	74 0f                	je     7675 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x45>
	  __throw_length_error(
    7666:	48 8d 05 6b a0 00 00 	lea    0xa06b(%rip),%rax        # 116d8 <_ZN6__pstl9execution2v1L5unseqE+0x99>
    766d:	48 89 c7             	mov    %rax,%rdi
    7670:	e8 cb ba ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	_M_reserve_map_at_back();
    7675:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7679:	be 01 00 00 00       	mov    $0x1,%esi
    767e:	48 89 c7             	mov    %rax,%rdi
    7681:	e8 96 13 00 00       	call   8a1c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
    7686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    768a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    768e:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    7692:	48 8d 5a 08          	lea    0x8(%rdx),%rbx
    7696:	48 89 c7             	mov    %rax,%rdi
    7699:	e8 e0 13 00 00       	call   8a7e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    769e:	48 89 03             	mov    %rax,(%rbx)
	    _Alloc_traits::construct(this->_M_impl,
    76a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76a5:	48 89 c7             	mov    %rax,%rdi
    76a8:	e8 9b 12 00 00       	call   8948 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    76ad:	48 89 c2             	mov    %rax,%rdx
    76b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76b4:	48 8b 48 30          	mov    0x30(%rax),%rcx
    76b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76bc:	48 89 ce             	mov    %rcx,%rsi
    76bf:	48 89 c7             	mov    %rax,%rdi
    76c2:	e8 30 ff ff ff       	call   75f7 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
    76c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76cb:	48 83 c0 30          	add    $0x30,%rax
    76cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    76d3:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    76d7:	48 83 c2 08          	add    $0x8,%rdx
    76db:	48 89 d6             	mov    %rdx,%rsi
    76de:	48 89 c7             	mov    %rax,%rdi
    76e1:	e8 fe 0e 00 00       	call   85e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
    76e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76ea:	48 8b 50 38          	mov    0x38(%rax),%rdx
    76ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76f2:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    76f6:	eb 3e                	jmp    7736 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x106>
	__catch(...)
    76f8:	48 89 c7             	mov    %rax,%rdi
    76fb:	e8 e0 b9 ff ff       	call   30e0 <__cxa_begin_catch@plt>
	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
    7700:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7704:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7708:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    770c:	48 83 c2 08          	add    $0x8,%rdx
    7710:	48 8b 12             	mov    (%rdx),%rdx
    7713:	48 89 d6             	mov    %rdx,%rsi
    7716:	48 89 c7             	mov    %rax,%rdi
    7719:	e8 16 0f 00 00       	call   8634 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
	    __throw_exception_again;
    771e:	e8 fd bc ff ff       	call   3420 <__cxa_rethrow@plt>
	__catch(...)
    7723:	48 89 c3             	mov    %rax,%rbx
    7726:	e8 65 bd ff ff       	call   3490 <__cxa_end_catch@plt>
    772b:	48 89 d8             	mov    %rbx,%rax
    772e:	48 89 c7             	mov    %rax,%rdi
    7731:	e8 aa bd ff ff       	call   34e0 <_Unwind_Resume@plt>
      }
    7736:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    773a:	c9                   	leave
    773b:	c3                   	ret

000000000000773c <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    773c:	55                   	push   %rbp
    773d:	48 89 e5             	mov    %rsp,%rbp
    7740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7744:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_cur == __y._M_cur; }
    7748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    774c:	48 8b 10             	mov    (%rax),%rdx
    774f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7753:	48 8b 00             	mov    (%rax),%rax
    7756:	48 39 c2             	cmp    %rax,%rdx
    7759:	0f 94 c0             	sete   %al
    775c:	5d                   	pop    %rbp
    775d:	c3                   	ret

000000000000775e <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    775e:	55                   	push   %rbp
    775f:	48 89 e5             	mov    %rsp,%rbp
    7762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_cur; }
    7766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    776a:	48 8b 00             	mov    (%rax),%rax
    776d:	5d                   	pop    %rbp
    776e:	c3                   	ret
    776f:	90                   	nop

0000000000007770 <_ZNKSt8functionIFvvEEcvbEv>:
      explicit operator bool() const noexcept
    7770:	55                   	push   %rbp
    7771:	48 89 e5             	mov    %rsp,%rbp
    7774:	48 83 ec 10          	sub    $0x10,%rsp
    7778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return !_M_empty(); }
    777c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7780:	48 89 c7             	mov    %rax,%rdi
    7783:	e8 c4 c3 ff ff       	call   3b4c <_ZNKSt14_Function_base8_M_emptyEv>
    7788:	83 f0 01             	xor    $0x1,%eax
    778b:	c9                   	leave
    778c:	c3                   	ret

000000000000778d <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>:
    swap(_Tp& __a, _Tp& __b)
    778d:	55                   	push   %rbp
    778e:	48 89 e5             	mov    %rsp,%rbp
    7791:	48 83 ec 20          	sub    $0x20,%rsp
    7795:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7799:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    779d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77a1:	48 89 c7             	mov    %rax,%rdi
    77a4:	e8 ff 12 00 00       	call   8aa8 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    77a9:	48 8b 50 08          	mov    0x8(%rax),%rdx
    77ad:	48 8b 00             	mov    (%rax),%rax
    77b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    77b4:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    77b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    77bc:	48 89 c7             	mov    %rax,%rdi
    77bf:	e8 e4 12 00 00       	call   8aa8 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    77c4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    77c8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    77cc:	48 8b 00             	mov    (%rax),%rax
    77cf:	48 89 01             	mov    %rax,(%rcx)
    77d2:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      __b = _GLIBCXX_MOVE(__tmp);
    77d6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    77da:	48 89 c7             	mov    %rax,%rdi
    77dd:	e8 c6 12 00 00       	call   8aa8 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    77e2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    77e6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    77ea:	48 8b 00             	mov    (%rax),%rax
    77ed:	48 89 01             	mov    %rax,(%rcx)
    77f0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    }
    77f4:	90                   	nop
    77f5:	c9                   	leave
    77f6:	c3                   	ret

00000000000077f7 <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>:
    swap(_Tp& __a, _Tp& __b)
    77f7:	55                   	push   %rbp
    77f8:	48 89 e5             	mov    %rsp,%rbp
    77fb:	48 83 ec 20          	sub    $0x20,%rsp
    77ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7803:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    7807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    780b:	48 89 c7             	mov    %rax,%rdi
    780e:	e8 a3 12 00 00       	call   8ab6 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    7813:	48 8b 00             	mov    (%rax),%rax
    7816:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    781a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    781e:	48 89 c7             	mov    %rax,%rdi
    7821:	e8 90 12 00 00       	call   8ab6 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    7826:	48 8b 10             	mov    (%rax),%rdx
    7829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    782d:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    7830:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7834:	48 89 c7             	mov    %rax,%rdi
    7837:	e8 7a 12 00 00       	call   8ab6 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    783c:	48 8b 10             	mov    (%rax),%rdx
    783f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7843:	48 89 10             	mov    %rdx,(%rax)
    }
    7846:	90                   	nop
    7847:	c9                   	leave
    7848:	c3                   	ret

0000000000007849 <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>:
    swap(_Tp& __a, _Tp& __b)
    7849:	55                   	push   %rbp
    784a:	48 89 e5             	mov    %rsp,%rbp
    784d:	48 83 ec 20          	sub    $0x20,%rsp
    7851:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7855:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    7859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    785d:	48 89 c7             	mov    %rax,%rdi
    7860:	e8 5f 12 00 00       	call   8ac4 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7865:	48 8b 00             	mov    (%rax),%rax
    7868:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    786c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7870:	48 89 c7             	mov    %rax,%rdi
    7873:	e8 4c 12 00 00       	call   8ac4 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7878:	48 8b 10             	mov    (%rax),%rdx
    787b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    787f:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    7882:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7886:	48 89 c7             	mov    %rax,%rdi
    7889:	e8 36 12 00 00       	call   8ac4 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    788e:	48 8b 10             	mov    (%rax),%rdx
    7891:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7895:	48 89 10             	mov    %rdx,(%rax)
    }
    7898:	90                   	nop
    7899:	c9                   	leave
    789a:	c3                   	ret

000000000000789b <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    789b:	55                   	push   %rbp
    789c:	48 89 e5             	mov    %rsp,%rbp
    789f:	48 83 ec 10          	sub    $0x10,%rsp
    78a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    78ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78b3:	48 89 d6             	mov    %rdx,%rsi
    78b6:	48 89 c7             	mov    %rax,%rdi
    78b9:	e8 14 12 00 00       	call   8ad2 <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>
	}
    78be:	90                   	nop
    78bf:	c9                   	leave
    78c0:	c3                   	ret
    78c1:	90                   	nop

00000000000078c2 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>:
    void deque<_Tp, _Alloc>::
    78c2:	55                   	push   %rbp
    78c3:	48 89 e5             	mov    %rsp,%rbp
    78c6:	53                   	push   %rbx
    78c7:	48 83 ec 18          	sub    $0x18,%rsp
    78cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
    78cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78d3:	48 8b 58 10          	mov    0x10(%rax),%rbx
    78d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78db:	48 89 c7             	mov    %rax,%rdi
    78de:	e8 29 e3 ff ff       	call   5c0c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    78e3:	48 89 de             	mov    %rbx,%rsi
    78e6:	48 89 c7             	mov    %rax,%rdi
    78e9:	e8 ad ff ff ff       	call   789b <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
      _M_deallocate_node(this->_M_impl._M_start._M_first);
    78ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78f6:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    78fa:	48 89 d6             	mov    %rdx,%rsi
    78fd:	48 89 c7             	mov    %rax,%rdi
    7900:	e8 2f 0d 00 00       	call   8634 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
    7905:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7909:	48 83 c0 10          	add    $0x10,%rax
    790d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7911:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    7915:	48 83 c2 08          	add    $0x8,%rdx
    7919:	48 89 d6             	mov    %rdx,%rsi
    791c:	48 89 c7             	mov    %rax,%rdi
    791f:	e8 c0 0c 00 00       	call   85e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
    7924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7928:	48 8b 50 18          	mov    0x18(%rax),%rdx
    792c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7930:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    7934:	90                   	nop
    7935:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7939:	c9                   	leave
    793a:	c3                   	ret
    793b:	90                   	nop

000000000000793c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>:
      lower_bound(const key_type& __k)
    793c:	55                   	push   %rbp
    793d:	48 89 e5             	mov    %rsp,%rbp
    7940:	53                   	push   %rbx
    7941:	48 83 ec 18          	sub    $0x18,%rsp
    7945:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7949:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    794d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7951:	48 89 c7             	mov    %rax,%rdi
    7954:	e8 99 11 00 00       	call   8af2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    7959:	48 89 c3             	mov    %rax,%rbx
    795c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7960:	48 89 c7             	mov    %rax,%rdi
    7963:	e8 a4 e3 ff ff       	call   5d0c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    7968:	48 89 c6             	mov    %rax,%rsi
    796b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    796f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7973:	48 89 d1             	mov    %rdx,%rcx
    7976:	48 89 da             	mov    %rbx,%rdx
    7979:	48 89 c7             	mov    %rax,%rdi
    797c:	e8 83 11 00 00       	call   8b04 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>
    7981:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7985:	c9                   	leave
    7986:	c3                   	ret
    7987:	90                   	nop

0000000000007988 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7988:	55                   	push   %rbp
    7989:	48 89 e5             	mov    %rsp,%rbp
    798c:	48 83 ec 20          	sub    $0x20,%rsp
    7990:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    7994:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7998:	48 8d 50 08          	lea    0x8(%rax),%rdx
    799c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    79a0:	48 89 d6             	mov    %rdx,%rsi
    79a3:	48 89 c7             	mov    %rax,%rdi
    79a6:	e8 11 06 00 00       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    79ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79af:	c9                   	leave
    79b0:	c3                   	ret
    79b1:	90                   	nop

00000000000079b2 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>:
      key_comp() const
    79b2:	55                   	push   %rbp
    79b3:	48 89 e5             	mov    %rsp,%rbp
    79b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    79ba:	90                   	nop
    79bb:	5d                   	pop    %rbp
    79bc:	c3                   	ret
    79bd:	90                   	nop

00000000000079be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr()
    79be:	55                   	push   %rbp
    79bf:	48 89 e5             	mov    %rsp,%rbp
    79c2:	48 83 ec 10          	sub    $0x10,%rsp
    79c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    79ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ce:	48 83 c0 20          	add    $0x20,%rax
    79d2:	48 89 c7             	mov    %rax,%rdi
    79d5:	e8 c0 11 00 00       	call   8b9a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    79da:	c9                   	leave
    79db:	c3                   	ret

00000000000079dc <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    79dc:	55                   	push   %rbp
    79dd:	48 89 e5             	mov    %rsp,%rbp
    79e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    79e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79e8:	5d                   	pop    %rbp
    79e9:	c3                   	ret

00000000000079ea <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    79ea:	55                   	push   %rbp
    79eb:	48 89 e5             	mov    %rsp,%rbp
    79ee:	53                   	push   %rbx
    79ef:	48 83 ec 18          	sub    $0x18,%rsp
    79f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    79fb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    79ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a03:	48 89 c7             	mov    %rax,%rdi
    7a06:	e8 d1 ff ff ff       	call   79dc <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    7a0b:	48 89 c6             	mov    %rax,%rsi
    7a0e:	48 89 df             	mov    %rbx,%rdi
    7a11:	e8 9e 11 00 00       	call   8bb4 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>
    7a16:	90                   	nop
    7a17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a1b:	c9                   	leave
    7a1c:	c3                   	ret

0000000000007a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7a1d:	55                   	push   %rbp
    7a1e:	48 89 e5             	mov    %rsp,%rbp
    7a21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7a25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a29:	5d                   	pop    %rbp
    7a2a:	c3                   	ret

0000000000007a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7a2b:	55                   	push   %rbp
    7a2c:	48 89 e5             	mov    %rsp,%rbp
    7a2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7a33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a37:	5d                   	pop    %rbp
    7a38:	c3                   	ret

0000000000007a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7a39:	55                   	push   %rbp
    7a3a:	48 89 e5             	mov    %rsp,%rbp
    7a3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a45:	5d                   	pop    %rbp
    7a46:	c3                   	ret
    7a47:	90                   	nop

0000000000007a48 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    7a48:	55                   	push   %rbp
    7a49:	48 89 e5             	mov    %rsp,%rbp
    7a4c:	41 54                	push   %r12
    7a4e:	53                   	push   %rbx
    7a4f:	48 83 ec 30          	sub    $0x30,%rsp
    7a53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7a5b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7a5f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    7a63:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    7a67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a6b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a6f:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    7a72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a76:	48 89 c7             	mov    %rax,%rdi
    7a79:	e8 bb ff ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7a7e:	49 89 c4             	mov    %rax,%r12
    7a81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a85:	48 89 c7             	mov    %rax,%rdi
    7a88:	e8 9e ff ff ff       	call   7a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7a8d:	48 89 c3             	mov    %rax,%rbx
    7a90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a94:	48 89 c7             	mov    %rax,%rdi
    7a97:	e8 81 ff ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7a9c:	48 89 c6             	mov    %rax,%rsi
    7a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7aa3:	4c 89 e1             	mov    %r12,%rcx
    7aa6:	48 89 da             	mov    %rbx,%rdx
    7aa9:	48 89 c7             	mov    %rax,%rdi
    7aac:	e8 37 11 00 00       	call   8be8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>
    7ab1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7ab5:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    7ab9:	90                   	nop
    7aba:	48 83 c4 30          	add    $0x30,%rsp
    7abe:	5b                   	pop    %rbx
    7abf:	41 5c                	pop    %r12
    7ac1:	5d                   	pop    %rbp
    7ac2:	c3                   	ret
    7ac3:	90                   	nop

0000000000007ac4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    7ac4:	55                   	push   %rbp
    7ac5:	48 89 e5             	mov    %rsp,%rbp
    7ac8:	48 83 ec 10          	sub    $0x10,%rsp
    7acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    7ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ad4:	48 8b 40 08          	mov    0x8(%rax),%rax
    7ad8:	48 85 c0             	test   %rax,%rax
    7adb:	74 1a                	je     7af7 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    7add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ae1:	48 8b 00             	mov    (%rax),%rax
    7ae4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ae8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7aec:	48 89 d6             	mov    %rdx,%rsi
    7aef:	48 89 c7             	mov    %rax,%rdi
    7af2:	e8 47 f8 ff ff       	call   733e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	}
    7af7:	90                   	nop
    7af8:	c9                   	leave
    7af9:	c3                   	ret

0000000000007afa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7afa:	55                   	push   %rbp
    7afb:	48 89 e5             	mov    %rsp,%rbp
    7afe:	53                   	push   %rbx
    7aff:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    7b06:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    7b0d:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    7b14:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    7b1b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7b22:	48 89 c7             	mov    %rax,%rdi
    7b25:	e8 3a 11 00 00       	call   8c64 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>
    7b2a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    7b31:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7b38:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7b3f:	48 89 c7             	mov    %rax,%rdi
    7b42:	e8 ab 0f 00 00       	call   8af2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    7b47:	48 39 c3             	cmp    %rax,%rbx
    7b4a:	0f 94 c0             	sete   %al
    7b4d:	84 c0                	test   %al,%al
    7b4f:	0f 84 c8 00 00 00    	je     7c1d <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x123>
	  if (size() > 0
    7b55:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7b5c:	48 89 c7             	mov    %rax,%rdi
    7b5f:	e8 28 11 00 00       	call   8c8c <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    7b64:	48 85 c0             	test   %rax,%rax
    7b67:	74 44                	je     7bad <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    7b69:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7b70:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7b77:	48 89 c7             	mov    %rax,%rdi
    7b7a:	e8 1f 11 00 00       	call   8c9e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7b7f:	48 8b 00             	mov    (%rax),%rax
    7b82:	48 89 c7             	mov    %rax,%rdi
    7b85:	e8 26 11 00 00       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7b8a:	48 89 c1             	mov    %rax,%rcx
    7b8d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7b94:	48 89 c2             	mov    %rax,%rdx
    7b97:	48 89 ce             	mov    %rcx,%rsi
    7b9a:	48 89 df             	mov    %rbx,%rdi
    7b9d:	e8 f0 e8 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7ba2:	84 c0                	test   %al,%al
    7ba4:	74 07                	je     7bad <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    7ba6:	b8 01 00 00 00       	mov    $0x1,%eax
    7bab:	eb 05                	jmp    7bb2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb8>
    7bad:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    7bb2:	84 c0                	test   %al,%al
    7bb4:	74 49                	je     7bff <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x105>
	    return _Res(0, _M_rightmost());
    7bb6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7bbd:	48 89 c7             	mov    %rax,%rdi
    7bc0:	e8 d9 10 00 00       	call   8c9e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7bc5:	48 89 c2             	mov    %rax,%rdx
    7bc8:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    7bcf:	00 00 00 00 
    7bd3:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    7bda:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    7be1:	48 89 ce             	mov    %rcx,%rsi
    7be4:	48 89 c7             	mov    %rax,%rdi
    7be7:	e8 de 10 00 00       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7bec:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    7bf3:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    7bfa:	e9 43 03 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7bff:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7c06:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c0d:	48 89 d6             	mov    %rdx,%rsi
    7c10:	48 89 c7             	mov    %rax,%rdi
    7c13:	e8 e2 10 00 00       	call   8cfa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7c18:	e9 25 03 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    7c1d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7c24:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7c2b:	48 89 c7             	mov    %rax,%rdi
    7c2e:	e8 7d 10 00 00       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7c33:	48 89 c2             	mov    %rax,%rdx
    7c36:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7c3d:	48 89 c6             	mov    %rax,%rsi
    7c40:	48 89 df             	mov    %rbx,%rdi
    7c43:	e8 4a e8 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7c48:	84 c0                	test   %al,%al
    7c4a:	0f 84 66 01 00 00    	je     7db6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x2bc>
	  iterator __before = __pos;
    7c50:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7c57:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    7c5e:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7c65:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c6c:	48 89 c7             	mov    %rax,%rdi
    7c6f:	e8 fc 11 00 00       	call   8e70 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7c74:	48 8b 00             	mov    (%rax),%rax
    7c77:	48 39 c3             	cmp    %rax,%rbx
    7c7a:	0f 94 c0             	sete   %al
    7c7d:	84 c0                	test   %al,%al
    7c7f:	74 4c                	je     7ccd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    7c81:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c88:	48 89 c7             	mov    %rax,%rdi
    7c8b:	e8 e0 11 00 00       	call   8e70 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7c90:	48 89 c3             	mov    %rax,%rbx
    7c93:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c9a:	48 89 c7             	mov    %rax,%rdi
    7c9d:	e8 ce 11 00 00       	call   8e70 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7ca2:	48 89 c1             	mov    %rax,%rcx
    7ca5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7cac:	48 89 da             	mov    %rbx,%rdx
    7caf:	48 89 ce             	mov    %rcx,%rsi
    7cb2:	48 89 c7             	mov    %rax,%rdi
    7cb5:	e8 c8 11 00 00       	call   8e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7cba:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7cc1:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    7cc8:	e9 75 02 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    7ccd:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7cd4:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    7cdb:	48 89 c7             	mov    %rax,%rdi
    7cde:	e8 e3 11 00 00       	call   8ec6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
    7ce3:	48 8b 00             	mov    (%rax),%rax
    7ce6:	48 89 c7             	mov    %rax,%rdi
    7ce9:	e8 c2 0f 00 00       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7cee:	48 89 c1             	mov    %rax,%rcx
    7cf1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7cf8:	48 89 c2             	mov    %rax,%rdx
    7cfb:	48 89 ce             	mov    %rcx,%rsi
    7cfe:	48 89 df             	mov    %rbx,%rdi
    7d01:	e8 8c e7 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7d06:	84 c0                	test   %al,%al
    7d08:	0f 84 8a 00 00 00    	je     7d98 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    7d0e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    7d15:	48 89 c7             	mov    %rax,%rdi
    7d18:	e8 fc f5 ff ff       	call   7319 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    7d1d:	48 85 c0             	test   %rax,%rax
    7d20:	0f 94 c0             	sete   %al
    7d23:	84 c0                	test   %al,%al
    7d25:	74 3e                	je     7d65 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x26b>
		return _Res(0, __before._M_node);
    7d27:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    7d2e:	00 00 00 00 
    7d32:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    7d39:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    7d40:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    7d47:	48 89 ce             	mov    %rcx,%rsi
    7d4a:	48 89 c7             	mov    %rax,%rdi
    7d4d:	e8 78 0f 00 00       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7d52:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7d59:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    7d60:	e9 dd 01 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    7d65:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    7d6c:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    7d73:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7d7a:	48 89 ce             	mov    %rcx,%rsi
    7d7d:	48 89 c7             	mov    %rax,%rdi
    7d80:	e8 fd 10 00 00       	call   8e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7d85:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7d8c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    7d93:	e9 aa 01 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7d98:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7d9f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7da6:	48 89 d6             	mov    %rdx,%rsi
    7da9:	48 89 c7             	mov    %rax,%rdi
    7dac:	e8 49 0f 00 00       	call   8cfa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7db1:	e9 8c 01 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    7db6:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7dbd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7dc4:	48 89 c7             	mov    %rax,%rdi
    7dc7:	e8 e4 0e 00 00       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7dcc:	48 89 c1             	mov    %rax,%rcx
    7dcf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7dd6:	48 89 c2             	mov    %rax,%rdx
    7dd9:	48 89 ce             	mov    %rcx,%rsi
    7ddc:	48 89 df             	mov    %rbx,%rdi
    7ddf:	e8 ae e6 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7de4:	84 c0                	test   %al,%al
    7de6:	0f 84 2c 01 00 00    	je     7f18 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x41e>
	  iterator __after = __pos;
    7dec:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7df3:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    7dfa:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7e01:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e08:	48 89 c7             	mov    %rax,%rdi
    7e0b:	e8 8e 0e 00 00       	call   8c9e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7e10:	48 8b 00             	mov    (%rax),%rax
    7e13:	48 39 c3             	cmp    %rax,%rbx
    7e16:	0f 94 c0             	sete   %al
    7e19:	84 c0                	test   %al,%al
    7e1b:	74 3a                	je     7e57 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x35d>
	    return _Res(0, _M_rightmost());
    7e1d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e24:	48 89 c7             	mov    %rax,%rdi
    7e27:	e8 72 0e 00 00       	call   8c9e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7e2c:	48 89 c2             	mov    %rax,%rdx
    7e2f:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    7e36:	00 
    7e37:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    7e3b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7e3f:	48 89 ce             	mov    %rcx,%rsi
    7e42:	48 89 c7             	mov    %rax,%rdi
    7e45:	e8 80 0e 00 00       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7e4a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7e4e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    7e52:	e9 eb 00 00 00       	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    7e57:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7e5e:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    7e65:	48 89 c7             	mov    %rax,%rdi
    7e68:	e8 81 10 00 00       	call   8eee <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>
    7e6d:	48 8b 00             	mov    (%rax),%rax
    7e70:	48 89 c7             	mov    %rax,%rdi
    7e73:	e8 38 0e 00 00       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7e78:	48 89 c2             	mov    %rax,%rdx
    7e7b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7e82:	48 89 c6             	mov    %rax,%rsi
    7e85:	48 89 df             	mov    %rbx,%rdi
    7e88:	e8 05 e6 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7e8d:	84 c0                	test   %al,%al
    7e8f:	74 6c                	je     7efd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    7e91:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7e98:	48 89 c7             	mov    %rax,%rdi
    7e9b:	e8 79 f4 ff ff       	call   7319 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    7ea0:	48 85 c0             	test   %rax,%rax
    7ea3:	0f 94 c0             	sete   %al
    7ea6:	84 c0                	test   %al,%al
    7ea8:	74 2c                	je     7ed6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x3dc>
		return _Res(0, __pos._M_node);
    7eaa:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7eb1:	00 
    7eb2:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    7eb9:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    7ebd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7ec1:	48 89 ce             	mov    %rcx,%rsi
    7ec4:	48 89 c7             	mov    %rax,%rdi
    7ec7:	e8 fe 0d 00 00       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7ecc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7ed0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    7ed4:	eb 6c                	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__after._M_node, __after._M_node);
    7ed6:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    7edd:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    7ee4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7ee8:	48 89 ce             	mov    %rcx,%rsi
    7eeb:	48 89 c7             	mov    %rax,%rdi
    7eee:	e8 8f 0f 00 00       	call   8e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7ef3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7ef7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7efb:	eb 45                	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7efd:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7f04:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7f0b:	48 89 d6             	mov    %rdx,%rsi
    7f0e:	48 89 c7             	mov    %rax,%rdi
    7f11:	e8 e4 0d 00 00       	call   8cfa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7f16:	eb 2a                	jmp    7f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	return _Res(__pos._M_node, 0);
    7f18:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7f1f:	00 
    7f20:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7f24:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    7f2b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7f2f:	48 89 ce             	mov    %rcx,%rsi
    7f32:	48 89 c7             	mov    %rax,%rdi
    7f35:	e8 90 0d 00 00       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7f3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f3e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    7f42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f46:	c9                   	leave
    7f47:	c3                   	ret

0000000000007f48 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    7f48:	55                   	push   %rbp
    7f49:	48 89 e5             	mov    %rsp,%rbp
    7f4c:	48 83 ec 10          	sub    $0x10,%rsp
    7f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    7f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f58:	48 8b 40 08          	mov    0x8(%rax),%rax
    7f5c:	48 89 c7             	mov    %rax,%rdi
    7f5f:	e8 b2 0f 00 00       	call   8f16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    7f64:	c9                   	leave
    7f65:	c3                   	ret

0000000000007f66 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    7f66:	55                   	push   %rbp
    7f67:	48 89 e5             	mov    %rsp,%rbp
    7f6a:	48 83 ec 30          	sub    $0x30,%rsp
    7f6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f72:	48 89 d1             	mov    %rdx,%rcx
    7f75:	48 89 f0             	mov    %rsi,%rax
    7f78:	48 89 fa             	mov    %rdi,%rdx
    7f7b:	48 89 ca             	mov    %rcx,%rdx
    7f7e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7f82:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    7f86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f8a:	48 8b 00             	mov    (%rax),%rax
    7f8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f91:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    7f95:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f99:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    7f9d:	48 89 c7             	mov    %rax,%rdi
    7fa0:	e8 9d 0f 00 00       	call   8f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>
    7fa5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    7fa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7fb4:	00 
	  return __it;
    7fb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    7fb9:	c9                   	leave
    7fba:	c3                   	ret
    7fbb:	90                   	nop

0000000000007fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    7fbc:	55                   	push   %rbp
    7fbd:	48 89 e5             	mov    %rsp,%rbp
    7fc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    7fc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7fd0:	48 89 10             	mov    %rdx,(%rax)
    7fd3:	90                   	nop
    7fd4:	5d                   	pop    %rbp
    7fd5:	c3                   	ret

0000000000007fd6 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    7fd6:	55                   	push   %rbp
    7fd7:	48 89 e5             	mov    %rsp,%rbp
    7fda:	48 83 ec 10          	sub    $0x10,%rsp
    7fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    7fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe6:	48 89 c7             	mov    %rax,%rdi
    7fe9:	e8 18 10 00 00       	call   9006 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>
    7fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff2:	48 89 c7             	mov    %rax,%rdi
    7ff5:	e8 28 10 00 00       	call   9022 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>
    7ffa:	90                   	nop
    7ffb:	c9                   	leave
    7ffc:	c3                   	ret

0000000000007ffd <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    7ffd:	55                   	push   %rbp
    7ffe:	48 89 e5             	mov    %rsp,%rbp
    8001:	48 83 ec 10          	sub    $0x10,%rsp
    8005:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800d:	48 89 c7             	mov    %rax,%rdi
    8010:	e8 23 10 00 00       	call   9038 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8015:	c9                   	leave
    8016:	c3                   	ret
    8017:	90                   	nop

0000000000008018 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    8018:	55                   	push   %rbp
    8019:	48 89 e5             	mov    %rsp,%rbp
    801c:	48 83 ec 10          	sub    $0x10,%rsp
    8020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    8024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8028:	48 89 c7             	mov    %rax,%rdi
    802b:	e8 22 10 00 00       	call   9052 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>
    8030:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8034:	48 89 c7             	mov    %rax,%rdi
    8037:	e8 32 10 00 00       	call   906e <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>
    803c:	90                   	nop
    803d:	c9                   	leave
    803e:	c3                   	ret

000000000000803f <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    803f:	55                   	push   %rbp
    8040:	48 89 e5             	mov    %rsp,%rbp
    8043:	48 83 ec 10          	sub    $0x10,%rsp
    8047:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    804b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    804f:	48 89 c7             	mov    %rax,%rdi
    8052:	e8 2d 10 00 00       	call   9084 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8057:	c9                   	leave
    8058:	c3                   	ret
    8059:	90                   	nop

000000000000805a <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    805a:	55                   	push   %rbp
    805b:	48 89 e5             	mov    %rsp,%rbp
    805e:	48 83 ec 10          	sub    $0x10,%rsp
    8062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    8066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    806a:	48 89 c7             	mov    %rax,%rdi
    806d:	e8 2c 10 00 00       	call   909e <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>
    8072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8076:	48 89 c7             	mov    %rax,%rdi
    8079:	e8 3c 10 00 00       	call   90ba <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>
    807e:	90                   	nop
    807f:	c9                   	leave
    8080:	c3                   	ret

0000000000008081 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8081:	55                   	push   %rbp
    8082:	48 89 e5             	mov    %rsp,%rbp
    8085:	48 83 ec 10          	sub    $0x10,%rsp
    8089:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    808d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8091:	48 89 c7             	mov    %rax,%rdi
    8094:	e8 37 10 00 00       	call   90d0 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8099:	c9                   	leave
    809a:	c3                   	ret
    809b:	90                   	nop

000000000000809c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    809c:	55                   	push   %rbp
    809d:	48 89 e5             	mov    %rsp,%rbp
    80a0:	53                   	push   %rbx
    80a1:	48 83 ec 18          	sub    $0x18,%rsp
    80a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    80a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    80ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80b1:	48 89 c7             	mov    %rax,%rdi
    80b4:	e8 57 e5 ff ff       	call   6610 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    80b9:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    80bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80c1:	48 89 c7             	mov    %rax,%rdi
    80c4:	e8 63 e5 ff ff       	call   662c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    80c9:	48 89 18             	mov    %rbx,(%rax)
    80cc:	90                   	nop
    80cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    80d1:	c9                   	leave
    80d2:	c3                   	ret

00000000000080d3 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    80d3:	55                   	push   %rbp
    80d4:	48 89 e5             	mov    %rsp,%rbp
    80d7:	48 83 ec 10          	sub    $0x10,%rsp
    80db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    80df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80e3:	48 89 c7             	mov    %rax,%rdi
    80e6:	e8 ff 0f 00 00       	call   90ea <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    80eb:	c9                   	leave
    80ec:	c3                   	ret
    80ed:	90                   	nop

00000000000080ee <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    80ee:	55                   	push   %rbp
    80ef:	48 89 e5             	mov    %rsp,%rbp
    80f2:	48 83 ec 10          	sub    $0x10,%rsp
    80f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80fe:	48 89 c7             	mov    %rax,%rdi
    8101:	e8 fe 0f 00 00       	call   9104 <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    8106:	48 8b 00             	mov    (%rax),%rax
    8109:	c9                   	leave
    810a:	c3                   	ret
    810b:	90                   	nop

000000000000810c <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    810c:	55                   	push   %rbp
    810d:	48 89 e5             	mov    %rsp,%rbp
    8110:	53                   	push   %rbx
    8111:	48 83 ec 18          	sub    $0x18,%rsp
    8115:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8119:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    811d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8121:	48 89 c7             	mov    %rax,%rdi
    8124:	e8 7b e6 ff ff       	call   67a4 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    8129:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    812d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8131:	48 89 c7             	mov    %rax,%rdi
    8134:	e8 87 e6 ff ff       	call   67c0 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    8139:	48 89 18             	mov    %rbx,(%rax)
    813c:	90                   	nop
    813d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8141:	c9                   	leave
    8142:	c3                   	ret

0000000000008143 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8143:	55                   	push   %rbp
    8144:	48 89 e5             	mov    %rsp,%rbp
    8147:	48 83 ec 10          	sub    $0x10,%rsp
    814b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    814f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8153:	48 89 c7             	mov    %rax,%rdi
    8156:	e8 c3 0f 00 00       	call   911e <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    815b:	c9                   	leave
    815c:	c3                   	ret
    815d:	90                   	nop

000000000000815e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>:
    815e:	55                   	push   %rbp
    815f:	48 89 e5             	mov    %rsp,%rbp
    8162:	53                   	push   %rbx
    8163:	48 83 ec 18          	sub    $0x18,%rsp
    8167:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    816b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    816f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8173:	48 89 c7             	mov    %rax,%rdi
    8176:	e8 45 e5 ff ff       	call   66c0 <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    817b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    817f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8183:	48 89 c7             	mov    %rax,%rdi
    8186:	e8 51 e5 ff ff       	call   66dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    818b:	48 89 18             	mov    %rbx,(%rax)
    818e:	90                   	nop
    818f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8193:	c9                   	leave
    8194:	c3                   	ret

0000000000008195 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8195:	55                   	push   %rbp
    8196:	48 89 e5             	mov    %rsp,%rbp
    8199:	48 83 ec 10          	sub    $0x10,%rsp
    819d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    81a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a5:	48 89 c7             	mov    %rax,%rdi
    81a8:	e8 8b 0f 00 00       	call   9138 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    81ad:	c9                   	leave
    81ae:	c3                   	ret
    81af:	90                   	nop

00000000000081b0 <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    81b0:	55                   	push   %rbp
    81b1:	48 89 e5             	mov    %rsp,%rbp
    81b4:	48 83 ec 10          	sub    $0x10,%rsp
    81b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81c0:	48 89 c7             	mov    %rax,%rdi
    81c3:	e8 8a 0f 00 00       	call   9152 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    81c8:	48 8b 00             	mov    (%rax),%rax
    81cb:	c9                   	leave
    81cc:	c3                   	ret
    81cd:	90                   	nop

00000000000081ce <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
    81ce:	55                   	push   %rbp
    81cf:	48 89 e5             	mov    %rsp,%rbp
    81d2:	48 83 ec 10          	sub    $0x10,%rsp
    81d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81de:	48 89 c7             	mov    %rax,%rdi
    81e1:	e8 86 0f 00 00       	call   916c <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    81e6:	48 8b 00             	mov    (%rax),%rax
    81e9:	c9                   	leave
    81ea:	c3                   	ret

00000000000081eb <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    81eb:	55                   	push   %rbp
    81ec:	48 89 e5             	mov    %rsp,%rbp
    81ef:	53                   	push   %rbx
    81f0:	48 83 ec 18          	sub    $0x18,%rsp
    81f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    81fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8200:	48 89 c7             	mov    %rax,%rdi
    8203:	e8 ee b8 ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    8208:	48 89 c6             	mov    %rax,%rsi
    820b:	bf 08 00 00 00       	mov    $0x8,%edi
    8210:	e8 74 b6 ff ff       	call   3889 <_ZnwmPv>
    8215:	48 89 c3             	mov    %rax,%rbx
    8218:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    821c:	48 89 c7             	mov    %rax,%rdi
    821f:	e8 af e9 ff ff       	call   6bd3 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    8224:	48 8b 00             	mov    (%rax),%rax
    8227:	48 89 03             	mov    %rax,(%rbx)
	  }
    822a:	90                   	nop
    822b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    822f:	c9                   	leave
    8230:	c3                   	ret

0000000000008231 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    8231:	55                   	push   %rbp
    8232:	48 89 e5             	mov    %rsp,%rbp
    8235:	48 83 ec 20          	sub    $0x20,%rsp
    8239:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    823d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8241:	48 89 c7             	mov    %rax,%rdi
    8244:	e8 3d 0f 00 00       	call   9186 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>
    8249:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    824d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8251:	48 89 c7             	mov    %rax,%rdi
    8254:	e8 47 0f 00 00       	call   91a0 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>
	}
    8259:	c9                   	leave
    825a:	c3                   	ret

000000000000825b <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:

#if __cplusplus >= 201703L
  // INVOKE<R>: Invoke a callable object and convert the result to R.
  template<typename _Res, typename _Callable, typename... _Args>
    constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    825b:	55                   	push   %rbp
    825c:	48 89 e5             	mov    %rsp,%rbp
    825f:	48 83 ec 10          	sub    $0x10,%rsp
    8263:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      if constexpr (is_void_v<_Res>)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    8267:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    826b:	48 89 c7             	mov    %rax,%rdi
    826e:	e8 3b 0f 00 00       	call   91ae <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    8273:	48 89 c7             	mov    %rax,%rdi
    8276:	e8 41 0f 00 00       	call   91bc <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
      else
	return std::__invoke_impl<__type>(__tag{},
					  std::forward<_Callable>(__fn),
					  std::forward<_Args>(__args)...);
    }
    827b:	90                   	nop
    827c:	c9                   	leave
    827d:	c3                   	ret

000000000000827e <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>:
      _M_access() noexcept
    827e:	55                   	push   %rbp
    827f:	48 89 e5             	mov    %rsp,%rbp
    8282:	48 83 ec 10          	sub    $0x10,%rsp
    8286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    828a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828e:	48 89 c7             	mov    %rax,%rdi
    8291:	e8 60 b8 ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    8296:	c9                   	leave
    8297:	c3                   	ret

0000000000008298 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    8298:	55                   	push   %rbp
    8299:	48 89 e5             	mov    %rsp,%rbp
    829c:	48 83 ec 10          	sub    $0x10,%rsp
    82a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    82a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82a8:	48 89 c7             	mov    %rax,%rdi
    82ab:	e8 46 b8 ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    82b0:	c9                   	leave
    82b1:	c3                   	ret

00000000000082b2 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    82b2:	55                   	push   %rbp
    82b3:	48 89 e5             	mov    %rsp,%rbp
    82b6:	53                   	push   %rbx
    82b7:	48 83 ec 28          	sub    $0x28,%rsp
    82bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82c3:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    82c6:	8b 45 dc             	mov    -0x24(%rbp),%eax
    82c9:	83 f8 03             	cmp    $0x3,%eax
    82cc:	74 72                	je     8340 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    82ce:	83 f8 03             	cmp    $0x3,%eax
    82d1:	7f 7a                	jg     834d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    82d3:	83 f8 02             	cmp    $0x2,%eax
    82d6:	74 48                	je     8320 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    82d8:	83 f8 02             	cmp    $0x2,%eax
    82db:	7f 70                	jg     834d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    82dd:	85 c0                	test   %eax,%eax
    82df:	74 07                	je     82e8 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    82e1:	83 f8 01             	cmp    $0x1,%eax
    82e4:	74 1a                	je     8300 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    82e6:	eb 65                	jmp    834d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    82e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82ec:	48 89 c7             	mov    %rax,%rdi
    82ef:	e8 8a ff ff ff       	call   827e <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    82f4:	48 8d 15 5d 6a 01 00 	lea    0x16a5d(%rip),%rdx        # 1ed58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    82fb:	48 89 10             	mov    %rdx,(%rax)
	      break;
    82fe:	eb 4d                	jmp    834d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    8300:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8304:	48 89 c7             	mov    %rax,%rdi
    8307:	e8 25 ff ff ff       	call   8231 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    830c:	48 89 c3             	mov    %rax,%rbx
    830f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8313:	48 89 c7             	mov    %rax,%rdi
    8316:	e8 7d ff ff ff       	call   8298 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    831b:	48 89 18             	mov    %rbx,(%rax)
	      break;
    831e:	eb 2d                	jmp    834d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    8320:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8324:	48 89 c7             	mov    %rax,%rdi
    8327:	e8 05 ff ff ff       	call   8231 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    832c:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    832f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8333:	48 89 d6             	mov    %rdx,%rsi
    8336:	48 89 c7             	mov    %rax,%rdi
    8339:	e8 a1 0e 00 00       	call   91df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    833e:	eb 0d                	jmp    834d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    8340:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8344:	48 89 c7             	mov    %rax,%rdi
    8347:	e8 c4 0e 00 00       	call   9210 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    834c:	90                   	nop
	  return false;
    834d:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    8352:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8356:	c9                   	leave
    8357:	c3                   	ret

0000000000008358 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    8358:	55                   	push   %rbp
    8359:	48 89 e5             	mov    %rsp,%rbp
    835c:	53                   	push   %rbx
    835d:	48 83 ec 18          	sub    $0x18,%rsp
    8361:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8365:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    836d:	48 89 c7             	mov    %rax,%rdi
    8370:	e8 b7 0e 00 00       	call   922c <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    8375:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    8379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    837d:	48 89 c7             	mov    %rax,%rdi
    8380:	e8 77 e9 ff ff       	call   6cfc <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    8385:	48 89 18             	mov    %rbx,(%rax)
    8388:	90                   	nop
    8389:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    838d:	c9                   	leave
    838e:	c3                   	ret

000000000000838f <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    838f:	55                   	push   %rbp
    8390:	48 89 e5             	mov    %rsp,%rbp
    8393:	48 83 ec 10          	sub    $0x10,%rsp
    8397:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    839b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    839f:	48 89 c7             	mov    %rax,%rdi
    83a2:	e8 a0 0e 00 00       	call   9247 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    83a7:	c9                   	leave
    83a8:	c3                   	ret
    83a9:	90                   	nop

00000000000083aa <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    83aa:	55                   	push   %rbp
    83ab:	48 89 e5             	mov    %rsp,%rbp
    83ae:	48 83 ec 10          	sub    $0x10,%rsp
    83b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ba:	48 89 c7             	mov    %rax,%rdi
    83bd:	e8 9f 0e 00 00       	call   9261 <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    83c2:	c9                   	leave
    83c3:	c3                   	ret

00000000000083c4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    83c4:	55                   	push   %rbp
    83c5:	48 89 e5             	mov    %rsp,%rbp
    83c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    83d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    83d4:	48 8b 10             	mov    (%rax),%rdx
    83d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83db:	48 89 10             	mov    %rdx,(%rax)
    83de:	90                   	nop
    83df:	5d                   	pop    %rbp
    83e0:	c3                   	ret
    83e1:	90                   	nop

00000000000083e2 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    83e2:	55                   	push   %rbp
    83e3:	48 89 e5             	mov    %rsp,%rbp
    83e6:	48 83 ec 10          	sub    $0x10,%rsp
    83ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f2:	48 89 c7             	mov    %rax,%rdi
    83f5:	e8 81 0e 00 00       	call   927b <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    83fa:	48 8b 00             	mov    (%rax),%rax
    83fd:	c9                   	leave
    83fe:	c3                   	ret

00000000000083ff <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    83ff:	55                   	push   %rbp
    8400:	48 89 e5             	mov    %rsp,%rbp
    8403:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8407:	90                   	nop
    8408:	5d                   	pop    %rbp
    8409:	c3                   	ret

000000000000840a <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    840a:	55                   	push   %rbp
    840b:	48 89 e5             	mov    %rsp,%rbp
    840e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    8416:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    841a:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    841e:	5d                   	pop    %rbp
    841f:	c3                   	ret

0000000000008420 <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8420:	55                   	push   %rbp
    8421:	48 89 e5             	mov    %rsp,%rbp
    8424:	48 83 ec 20          	sub    $0x20,%rsp
    8428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    842c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8430:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8438:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    843f:	00 
    8440:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8444:	48 89 d6             	mov    %rdx,%rsi
    8447:	48 89 c7             	mov    %rax,%rdi
    844a:	e8 91 ae ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    844f:	c9                   	leave
    8450:	c3                   	ret

0000000000008451 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    8451:	55                   	push   %rbp
    8452:	48 89 e5             	mov    %rsp,%rbp
    8455:	48 83 ec 10          	sub    $0x10,%rsp
    8459:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    845d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    8461:	eb 19                	jmp    847c <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    8463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8467:	48 89 c7             	mov    %rax,%rdi
    846a:	e8 26 0e 00 00       	call   9295 <_ZSt11__addressofISt6threadEPT_RS1_>
    846f:	48 89 c7             	mov    %rax,%rdi
    8472:	e8 2c 0e 00 00       	call   92a3 <_ZSt8_DestroyISt6threadEvPT_>
	  for (; __first != __last; ++__first)
    8477:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    847c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8480:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8484:	75 dd                	jne    8463 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x12>
	}
    8486:	90                   	nop
    8487:	90                   	nop
    8488:	c9                   	leave
    8489:	c3                   	ret

000000000000848a <_ZNSaISt8functionIFvvEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    848a:	55                   	push   %rbp
    848b:	48 89 e5             	mov    %rsp,%rbp
    848e:	48 83 ec 10          	sub    $0x10,%rsp
    8492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    849a:	48 89 c7             	mov    %rax,%rdi
    849d:	e8 1c 0e 00 00       	call   92be <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>
    84a2:	90                   	nop
    84a3:	c9                   	leave
    84a4:	c3                   	ret
    84a5:	90                   	nop

00000000000084a6 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>:
	_Deque_impl_data() _GLIBCXX_NOEXCEPT
    84a6:	55                   	push   %rbp
    84a7:	48 89 e5             	mov    %rsp,%rbp
    84aa:	48 83 ec 10          	sub    $0x10,%rsp
    84ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
    84b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    84bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84c1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    84c8:	00 
    84c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84cd:	48 83 c0 10          	add    $0x10,%rax
    84d1:	48 89 c7             	mov    %rax,%rdi
    84d4:	e8 f1 0d 00 00       	call   92ca <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
    84d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84dd:	48 83 c0 30          	add    $0x30,%rax
    84e1:	48 89 c7             	mov    %rax,%rdi
    84e4:	e8 e1 0d 00 00       	call   92ca <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
	{ }
    84e9:	90                   	nop
    84ea:	c9                   	leave
    84eb:	c3                   	ret

00000000000084ec <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    84ec:	55                   	push   %rbp
    84ed:	48 89 e5             	mov    %rsp,%rbp
    84f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84f4:	90                   	nop
    84f5:	5d                   	pop    %rbp
    84f6:	c3                   	ret
    84f7:	90                   	nop

00000000000084f8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>:
      _M_allocate_map(size_t __n)
    84f8:	55                   	push   %rbp
    84f9:	48 89 e5             	mov    %rsp,%rbp
    84fc:	53                   	push   %rbx
    84fd:	48 83 ec 28          	sub    $0x28,%rsp
    8501:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8505:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    8509:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    850d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8511:	48 89 d6             	mov    %rdx,%rsi
    8514:	48 89 c7             	mov    %rax,%rdi
    8517:	e8 4c 01 00 00       	call   8668 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    851c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8520:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8524:	48 89 d6             	mov    %rdx,%rsi
    8527:	48 89 c7             	mov    %rax,%rdi
    852a:	e8 d5 0d 00 00       	call   9304 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>
    852f:	48 89 c3             	mov    %rax,%rbx
    8532:	90                   	nop
      }
    8533:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8537:	48 89 c7             	mov    %rax,%rdi
    853a:	e8 5d 01 00 00       	call   869c <_ZNSaIPSt8functionIFvvEEED1Ev>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    853f:	48 89 d8             	mov    %rbx,%rax
    8542:	eb 1a                	jmp    855e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm+0x66>
      }
    8544:	48 89 c3             	mov    %rax,%rbx
    8547:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    854b:	48 89 c7             	mov    %rax,%rdi
    854e:	e8 49 01 00 00       	call   869c <_ZNSaIPSt8functionIFvvEEED1Ev>
    8553:	48 89 d8             	mov    %rbx,%rax
    8556:	48 89 c7             	mov    %rax,%rdi
    8559:	e8 82 af ff ff       	call   34e0 <_Unwind_Resume@plt>
    855e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8562:	c9                   	leave
    8563:	c3                   	ret

0000000000008564 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    8564:	55                   	push   %rbp
    8565:	48 89 e5             	mov    %rsp,%rbp
    8568:	53                   	push   %rbx
    8569:	48 83 ec 38          	sub    $0x38,%rsp
    856d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8571:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8575:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    8579:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    857d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8581:	eb 18                	jmp    859b <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x37>
	    *__cur = this->_M_allocate_node();
    8583:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8587:	48 89 c7             	mov    %rax,%rdi
    858a:	e8 ef 04 00 00       	call   8a7e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    858f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8593:	48 89 02             	mov    %rax,(%rdx)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    8596:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    859b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    859f:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    85a3:	72 de                	jb     8583 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x1f>
    }
    85a5:	eb 37                	jmp    85de <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x7a>
      __catch(...)
    85a7:	48 89 c7             	mov    %rax,%rdi
    85aa:	e8 31 ab ff ff       	call   30e0 <__cxa_begin_catch@plt>
	  _M_destroy_nodes(__nstart, __cur);
    85af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    85b3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    85b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    85bb:	48 89 ce             	mov    %rcx,%rsi
    85be:	48 89 c7             	mov    %rax,%rdi
    85c1:	e8 56 eb ff ff       	call   711c <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  __throw_exception_again;
    85c6:	e8 55 ae ff ff       	call   3420 <__cxa_rethrow@plt>
      __catch(...)
    85cb:	48 89 c3             	mov    %rax,%rbx
    85ce:	e8 bd ae ff ff       	call   3490 <__cxa_end_catch@plt>
    85d3:	48 89 d8             	mov    %rbx,%rax
    85d6:	48 89 c7             	mov    %rax,%rdi
    85d9:	e8 02 af ff ff       	call   34e0 <_Unwind_Resume@plt>
    }
    85de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85e2:	c9                   	leave
    85e3:	c3                   	ret

00000000000085e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>:
      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
    85e4:	55                   	push   %rbp
    85e5:	48 89 e5             	mov    %rsp,%rbp
    85e8:	53                   	push   %rbx
    85e9:	48 83 ec 18          	sub    $0x18,%rsp
    85ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_node = __new_node;
    85f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    85fd:	48 89 50 18          	mov    %rdx,0x18(%rax)
	_M_first = *__new_node;
    8601:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8605:	48 8b 10             	mov    (%rax),%rdx
    8608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    860c:	48 89 50 08          	mov    %rdx,0x8(%rax)
	_M_last = _M_first + difference_type(_S_buffer_size());
    8610:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8614:	48 8b 58 08          	mov    0x8(%rax),%rbx
    8618:	e8 11 0d 00 00       	call   932e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    861d:	48 c1 e0 05          	shl    $0x5,%rax
    8621:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    8625:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8629:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    862d:	90                   	nop
    862e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8632:	c9                   	leave
    8633:	c3                   	ret

0000000000008634 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>:
      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
    8634:	55                   	push   %rbp
    8635:	48 89 e5             	mov    %rsp,%rbp
    8638:	48 83 ec 10          	sub    $0x10,%rsp
    863c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8640:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
    8644:	bf 20 00 00 00       	mov    $0x20,%edi
    8649:	e8 a3 b5 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    864e:	48 89 c2             	mov    %rax,%rdx
    8651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8655:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8659:	48 89 ce             	mov    %rcx,%rsi
    865c:	48 89 c7             	mov    %rax,%rdi
    865f:	e8 da 0c 00 00       	call   933e <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>
      }
    8664:	90                   	nop
    8665:	c9                   	leave
    8666:	c3                   	ret
    8667:	90                   	nop

0000000000008668 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>:
      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
    8668:	55                   	push   %rbp
    8669:	48 89 e5             	mov    %rsp,%rbp
    866c:	48 83 ec 10          	sub    $0x10,%rsp
    8670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8674:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _Map_alloc_type(_M_get_Tp_allocator()); }
    8678:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    867c:	48 89 c7             	mov    %rax,%rdi
    867f:	e8 e8 0c 00 00       	call   936c <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8684:	48 89 c2             	mov    %rax,%rdx
    8687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    868b:	48 89 d6             	mov    %rdx,%rsi
    868e:	48 89 c7             	mov    %rax,%rdi
    8691:	e8 e4 0c 00 00       	call   937a <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>
    8696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    869a:	c9                   	leave
    869b:	c3                   	ret

000000000000869c <_ZNSaIPSt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    869c:	55                   	push   %rbp
    869d:	48 89 e5             	mov    %rsp,%rbp
    86a0:	48 83 ec 10          	sub    $0x10,%rsp
    86a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ac:	48 89 c7             	mov    %rax,%rdi
    86af:	e8 e6 0c 00 00       	call   939a <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>
    86b4:	90                   	nop
    86b5:	c9                   	leave
    86b6:	c3                   	ret

00000000000086b7 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    86b7:	55                   	push   %rbp
    86b8:	48 89 e5             	mov    %rsp,%rbp
    86bb:	48 83 ec 20          	sub    $0x20,%rsp
    86bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    86cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    86cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    86d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d7:	48 89 ce             	mov    %rcx,%rsi
    86da:	48 89 c7             	mov    %rax,%rdi
    86dd:	e8 c4 0c 00 00       	call   93a6 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>
    86e2:	90                   	nop
    86e3:	c9                   	leave
    86e4:	c3                   	ret

00000000000086e5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    86e5:	55                   	push   %rbp
    86e6:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    86e9:	bf 20 00 00 00       	mov    $0x20,%edi
    86ee:	e8 fe b4 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    86f3:	5d                   	pop    %rbp
    86f4:	c3                   	ret

00000000000086f5 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    86f5:	55                   	push   %rbp
    86f6:	48 89 e5             	mov    %rsp,%rbp
    86f9:	48 83 ec 20          	sub    $0x20,%rsp
    86fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8701:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8705:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8709:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    870d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8711:	48 89 d6             	mov    %rdx,%rsi
    8714:	48 89 c7             	mov    %rax,%rdi
    8717:	e8 bb 0c 00 00       	call   93d7 <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>
    }
    871c:	90                   	nop
    871d:	c9                   	leave
    871e:	c3                   	ret
    871f:	90                   	nop

0000000000008720 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    8720:	55                   	push   %rbp
    8721:	48 89 e5             	mov    %rsp,%rbp
    8724:	53                   	push   %rbx
    8725:	48 83 ec 18          	sub    $0x18,%rsp
    8729:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    872d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    8731:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8735:	48 89 c7             	mov    %rax,%rdi
    8738:	e8 81 f2 ff ff       	call   79be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    873d:	48 89 c3             	mov    %rax,%rbx
    8740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8744:	48 89 c7             	mov    %rax,%rdi
    8747:	e8 b2 0c 00 00       	call   93fe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    874c:	48 89 de             	mov    %rbx,%rsi
    874f:	48 89 c7             	mov    %rax,%rdi
    8752:	e8 b5 0c 00 00       	call   940c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>
      }
    8757:	90                   	nop
    8758:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    875c:	c9                   	leave
    875d:	c3                   	ret

000000000000875e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    875e:	55                   	push   %rbp
    875f:	48 89 e5             	mov    %rsp,%rbp
    8762:	48 83 ec 10          	sub    $0x10,%rsp
    8766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    876a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    876e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8772:	48 89 c7             	mov    %rax,%rdi
    8775:	e8 84 0c 00 00       	call   93fe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    877a:	48 89 c1             	mov    %rax,%rcx
    877d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8781:	ba 01 00 00 00       	mov    $0x1,%edx
    8786:	48 89 c6             	mov    %rax,%rsi
    8789:	48 89 cf             	mov    %rcx,%rdi
    878c:	e8 a1 0c 00 00       	call   9432 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>
    8791:	90                   	nop
    8792:	c9                   	leave
    8793:	c3                   	ret

0000000000008794 <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    8794:	55                   	push   %rbp
    8795:	48 89 e5             	mov    %rsp,%rbp
    8798:	48 83 ec 20          	sub    $0x20,%rsp
    879c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    87a0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    87a7:	ff ff 0f 
    87aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    87ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87b2:	48 89 c7             	mov    %rax,%rdi
    87b5:	e8 a6 0c 00 00       	call   9460 <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>
    87ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    87be:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    87c2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    87c6:	48 89 d6             	mov    %rdx,%rsi
    87c9:	48 89 c7             	mov    %rax,%rdi
    87cc:	e8 93 b3 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    87d1:	48 8b 00             	mov    (%rax),%rax
      }
    87d4:	c9                   	leave
    87d5:	c3                   	ret

00000000000087d6 <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    87d6:	55                   	push   %rbp
    87d7:	48 89 e5             	mov    %rsp,%rbp
    87da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    87de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87e2:	5d                   	pop    %rbp
    87e3:	c3                   	ret

00000000000087e4 <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    87e4:	55                   	push   %rbp
    87e5:	48 89 e5             	mov    %rsp,%rbp
    87e8:	48 83 ec 20          	sub    $0x20,%rsp
    87ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    87f4:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    87f8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    87fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8800:	48 89 d6             	mov    %rdx,%rsi
    8803:	48 89 c7             	mov    %rax,%rdi
    8806:	e8 6f 0c 00 00       	call   947a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>
    }
    880b:	c9                   	leave
    880c:	c3                   	ret

000000000000880d <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    880d:	55                   	push   %rbp
    880e:	48 89 e5             	mov    %rsp,%rbp
    8811:	48 83 ec 10          	sub    $0x10,%rsp
    8815:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8819:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    881d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8821:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8825:	ba 00 00 00 00       	mov    $0x0,%edx
    882a:	48 89 ce             	mov    %rcx,%rsi
    882d:	48 89 c7             	mov    %rax,%rdi
    8830:	e8 8b 0c 00 00       	call   94c0 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>
    8835:	c9                   	leave
    8836:	c3                   	ret

0000000000008837 <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    8837:	55                   	push   %rbp
    8838:	48 89 e5             	mov    %rsp,%rbp
    883b:	41 54                	push   %r12
    883d:	53                   	push   %rbx
    883e:	48 83 ec 20          	sub    $0x20,%rsp
    8842:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8846:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    884a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    884e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    8852:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8856:	48 89 c7             	mov    %rax,%rdi
    8859:	e8 c3 0c 00 00       	call   9521 <_ZSt12__niter_baseIPSt6threadET_S2_>
    885e:	49 89 c4             	mov    %rax,%r12
    8861:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8865:	48 89 c7             	mov    %rax,%rdi
    8868:	e8 b4 0c 00 00       	call   9521 <_ZSt12__niter_baseIPSt6threadET_S2_>
    886d:	48 89 c3             	mov    %rax,%rbx
    8870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8874:	48 89 c7             	mov    %rax,%rdi
    8877:	e8 a5 0c 00 00       	call   9521 <_ZSt12__niter_baseIPSt6threadET_S2_>
    887c:	48 89 c7             	mov    %rax,%rdi
    887f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8883:	48 89 c1             	mov    %rax,%rcx
    8886:	4c 89 e2             	mov    %r12,%rdx
    8889:	48 89 de             	mov    %rbx,%rsi
    888c:	e8 9e 0c 00 00       	call   952f <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    8891:	48 83 c4 20          	add    $0x20,%rsp
    8895:	5b                   	pop    %rbx
    8896:	41 5c                	pop    %r12
    8898:	5d                   	pop    %rbp
    8899:	c3                   	ret

000000000000889a <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>:
	_Tuple_impl(_UHead&& __head, _UTail&&... __tail)
    889a:	55                   	push   %rbp
    889b:	48 89 e5             	mov    %rsp,%rbp
    889e:	53                   	push   %rbx
    889f:	48 83 ec 38          	sub    $0x38,%rsp
    88a3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    88a7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    88ab:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Base(std::forward<_UHead>(__head))
    88af:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    88b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    88b7:	48 89 c7             	mov    %rax,%rdi
    88ba:	e8 0b d7 ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    88bf:	48 89 c6             	mov    %rax,%rsi
    88c2:	48 89 df             	mov    %rbx,%rdi
    88c5:	e8 d6 0c 00 00       	call   95a0 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>
    88ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88ce:	48 8d 58 08          	lea    0x8(%rax),%rbx
    88d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    88d6:	48 89 c7             	mov    %rax,%rdi
    88d9:	e8 de d6 ff ff       	call   5fbc <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    88de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    88e2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    88e6:	48 89 c6             	mov    %rax,%rsi
    88e9:	48 89 df             	mov    %rbx,%rdi
    88ec:	e8 e3 0c 00 00       	call   95d4 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>
	{ }
    88f1:	90                   	nop
    88f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88f6:	c9                   	leave
    88f7:	c3                   	ret

00000000000088f8 <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    88f8:	55                   	push   %rbp
    88f9:	48 89 e5             	mov    %rsp,%rbp
    88fc:	48 83 ec 10          	sub    $0x10,%rsp
    8900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    8904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8908:	48 89 c7             	mov    %rax,%rdi
    890b:	e8 e2 0c 00 00       	call   95f2 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>
    8910:	90                   	nop
    8911:	c9                   	leave
    8912:	c3                   	ret

0000000000008913 <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8913:	55                   	push   %rbp
    8914:	48 89 e5             	mov    %rsp,%rbp
    8917:	48 83 ec 10          	sub    $0x10,%rsp
    891b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    891f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8923:	48 89 c7             	mov    %rax,%rdi
    8926:	e8 ee 0c 00 00       	call   9619 <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    892b:	c9                   	leave
    892c:	c3                   	ret
    892d:	90                   	nop

000000000000892e <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    892e:	55                   	push   %rbp
    892f:	48 89 e5             	mov    %rsp,%rbp
    8932:	48 83 ec 10          	sub    $0x10,%rsp
    8936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    893a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    893e:	48 89 c7             	mov    %rax,%rdi
    8941:	e8 ed 0c 00 00       	call   9633 <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    8946:	c9                   	leave
    8947:	c3                   	ret

0000000000008948 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8948:	55                   	push   %rbp
    8949:	48 89 e5             	mov    %rsp,%rbp
    894c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8954:	5d                   	pop    %rbp
    8955:	c3                   	ret

0000000000008956 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    8956:	55                   	push   %rbp
    8957:	48 89 e5             	mov    %rsp,%rbp
    895a:	41 56                	push   %r14
    895c:	41 55                	push   %r13
    895e:	41 54                	push   %r12
    8960:	53                   	push   %rbx
    8961:	48 83 ec 20          	sub    $0x20,%rsp
    8965:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8969:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    896d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    8971:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    8975:	48 89 de             	mov    %rbx,%rsi
    8978:	bf 20 00 00 00       	mov    $0x20,%edi
    897d:	e8 07 af ff ff       	call   3889 <_ZnwmPv>
    8982:	49 89 c4             	mov    %rax,%r12
    8985:	41 be 01 00 00 00    	mov    $0x1,%r14d
    898b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    898f:	48 89 c7             	mov    %rax,%rdi
    8992:	e8 b1 ff ff ff       	call   8948 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8997:	48 89 c6             	mov    %rax,%rsi
    899a:	4c 89 e7             	mov    %r12,%rdi
    899d:	e8 e0 d8 ff ff       	call   6282 <_ZNSt8functionIFvvEEC1ERKS1_>
    89a2:	eb 1e                	jmp    89c2 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x6c>
    89a4:	49 89 c5             	mov    %rax,%r13
    89a7:	45 84 f6             	test   %r14b,%r14b
    89aa:	74 0b                	je     89b7 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x61>
    89ac:	48 89 de             	mov    %rbx,%rsi
    89af:	4c 89 e7             	mov    %r12,%rdi
    89b2:	e8 e4 ae ff ff       	call   389b <_ZdlPvS_>
    89b7:	4c 89 e8             	mov    %r13,%rax
    89ba:	48 89 c7             	mov    %rax,%rdi
    89bd:	e8 1e ab ff ff       	call   34e0 <_Unwind_Resume@plt>
    89c2:	48 83 c4 20          	add    $0x20,%rsp
    89c6:	5b                   	pop    %rbx
    89c7:	41 5c                	pop    %r12
    89c9:	41 5d                	pop    %r13
    89cb:	41 5e                	pop    %r14
    89cd:	5d                   	pop    %rbp
    89ce:	c3                   	ret
    89cf:	90                   	nop

00000000000089d0 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    89d0:	55                   	push   %rbp
    89d1:	48 89 e5             	mov    %rsp,%rbp
    89d4:	48 83 ec 10          	sub    $0x10,%rsp
    89d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish - this->_M_impl._M_start; }
    89dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89e0:	48 8d 50 10          	lea    0x10(%rax),%rdx
    89e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89e8:	48 83 c0 30          	add    $0x30,%rax
    89ec:	48 89 d6             	mov    %rdx,%rsi
    89ef:	48 89 c7             	mov    %rax,%rdi
    89f2:	e8 56 0c 00 00       	call   964d <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    89f7:	c9                   	leave
    89f8:	c3                   	ret
    89f9:	90                   	nop

00000000000089fa <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    89fa:	55                   	push   %rbp
    89fb:	48 89 e5             	mov    %rsp,%rbp
    89fe:	48 83 ec 10          	sub    $0x10,%rsp
    8a02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    8a06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a0a:	48 89 c7             	mov    %rax,%rdi
    8a0d:	e8 5a 09 00 00       	call   936c <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8a12:	48 89 c7             	mov    %rax,%rdi
    8a15:	e8 bb 0c 00 00       	call   96d5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>
    8a1a:	c9                   	leave
    8a1b:	c3                   	ret

0000000000008a1c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>:
       *  Makes sure the _M_map has space for new nodes.  Does not
       *  actually add the nodes.  Can invalidate _M_map pointers.
       *  (And consequently, %deque iterators.)
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
    8a1c:	55                   	push   %rbp
    8a1d:	48 89 e5             	mov    %rsp,%rbp
    8a20:	48 83 ec 10          	sub    $0x10,%rsp
    8a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    8a2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a30:	48 8d 50 01          	lea    0x1(%rax),%rdx
    8a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a38:	48 8b 48 08          	mov    0x8(%rax),%rcx
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
    8a3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a40:	48 8b 70 48          	mov    0x48(%rax),%rsi
    8a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a48:	48 8b 00             	mov    (%rax),%rax
    8a4b:	48 29 c6             	sub    %rax,%rsi
    8a4e:	48 89 f0             	mov    %rsi,%rax
    8a51:	48 c1 f8 03          	sar    $0x3,%rax
    8a55:	48 89 c6             	mov    %rax,%rsi
    8a58:	48 89 c8             	mov    %rcx,%rax
    8a5b:	48 29 f0             	sub    %rsi,%rax
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    8a5e:	48 39 d0             	cmp    %rdx,%rax
    8a61:	73 18                	jae    8a7b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm+0x5f>
	  _M_reallocate_map(__nodes_to_add, false);
    8a63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a6b:	ba 00 00 00 00       	mov    $0x0,%edx
    8a70:	48 89 ce             	mov    %rcx,%rsi
    8a73:	48 89 c7             	mov    %rax,%rdi
    8a76:	e8 9d 0c 00 00       	call   9718 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>
      }
    8a7b:	90                   	nop
    8a7c:	c9                   	leave
    8a7d:	c3                   	ret

0000000000008a7e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>:
      _M_allocate_node()
    8a7e:	55                   	push   %rbp
    8a7f:	48 89 e5             	mov    %rsp,%rbp
    8a82:	48 83 ec 10          	sub    $0x10,%rsp
    8a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
    8a8a:	bf 20 00 00 00       	mov    $0x20,%edi
    8a8f:	e8 5d b1 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    8a94:	48 89 c2             	mov    %rax,%rdx
    8a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a9b:	48 89 d6             	mov    %rdx,%rsi
    8a9e:	48 89 c7             	mov    %rax,%rdi
    8aa1:	e8 91 0e 00 00       	call   9937 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>
      }
    8aa6:	c9                   	leave
    8aa7:	c3                   	ret

0000000000008aa8 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    8aa8:	55                   	push   %rbp
    8aa9:	48 89 e5             	mov    %rsp,%rbp
    8aac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ab4:	5d                   	pop    %rbp
    8ab5:	c3                   	ret

0000000000008ab6 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    8ab6:	55                   	push   %rbp
    8ab7:	48 89 e5             	mov    %rsp,%rbp
    8aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac2:	5d                   	pop    %rbp
    8ac3:	c3                   	ret

0000000000008ac4 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
    8ac4:	55                   	push   %rbp
    8ac5:	48 89 e5             	mov    %rsp,%rbp
    8ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ad0:	5d                   	pop    %rbp
    8ad1:	c3                   	ret

0000000000008ad2 <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>:

      template<typename _Up>
	void
	destroy(_Up* __p)
    8ad2:	55                   	push   %rbp
    8ad3:	48 89 e5             	mov    %rsp,%rbp
    8ad6:	48 83 ec 10          	sub    $0x10,%rsp
    8ada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
    8ae2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ae6:	48 89 c7             	mov    %rax,%rdi
    8ae9:	e8 82 b7 ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
    8aee:	90                   	nop
    8aef:	c9                   	leave
    8af0:	c3                   	ret
    8af1:	90                   	nop

0000000000008af2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    8af2:	55                   	push   %rbp
    8af3:	48 89 e5             	mov    %rsp,%rbp
    8af6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    8afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8afe:	48 83 c0 08          	add    $0x8,%rax
    8b02:	5d                   	pop    %rbp
    8b03:	c3                   	ret

0000000000008b04 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8b04:	55                   	push   %rbp
    8b05:	48 89 e5             	mov    %rsp,%rbp
    8b08:	53                   	push   %rbx
    8b09:	48 83 ec 38          	sub    $0x38,%rsp
    8b0d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8b11:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8b15:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8b19:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    8b1d:	eb 56                	jmp    8b75 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    8b1f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8b23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b27:	48 89 c7             	mov    %rax,%rdi
    8b2a:	e8 e7 03 00 00       	call   8f16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8b2f:	48 89 c1             	mov    %rax,%rcx
    8b32:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8b36:	48 89 c2             	mov    %rax,%rdx
    8b39:	48 89 ce             	mov    %rcx,%rsi
    8b3c:	48 89 df             	mov    %rbx,%rdi
    8b3f:	e8 4e d9 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8b44:	83 f0 01             	xor    $0x1,%eax
    8b47:	84 c0                	test   %al,%al
    8b49:	74 1a                	je     8b65 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x61>
	  __y = __x, __x = _S_left(__x);
    8b4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b4f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8b53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b57:	48 89 c7             	mov    %rax,%rdi
    8b5a:	e8 cc e7 ff ff       	call   732b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    8b5f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8b63:	eb 10                	jmp    8b75 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	  __x = _S_right(__x);
    8b65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b69:	48 89 c7             	mov    %rax,%rdi
    8b6c:	e8 a8 e7 ff ff       	call   7319 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8b71:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    8b75:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    8b7a:	75 a3                	jne    8b1f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x1b>
      return iterator(__y);
    8b7c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8b80:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8b84:	48 89 d6             	mov    %rdx,%rsi
    8b87:	48 89 c7             	mov    %rax,%rdi
    8b8a:	e8 2d f4 ff ff       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    8b93:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b97:	c9                   	leave
    8b98:	c3                   	ret
    8b99:	90                   	nop

0000000000008b9a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    8b9a:	55                   	push   %rbp
    8b9b:	48 89 e5             	mov    %rsp,%rbp
    8b9e:	48 83 ec 10          	sub    $0x10,%rsp
    8ba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    8ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8baa:	48 89 c7             	mov    %rax,%rdi
    8bad:	e8 b0 0d 00 00       	call   9962 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    8bb2:	c9                   	leave
    8bb3:	c3                   	ret

0000000000008bb4 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    8bb4:	55                   	push   %rbp
    8bb5:	48 89 e5             	mov    %rsp,%rbp
    8bb8:	53                   	push   %rbx
    8bb9:	48 83 ec 18          	sub    $0x18,%rsp
    8bbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8bc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    8bc5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8bc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8bcd:	48 89 c7             	mov    %rax,%rdi
    8bd0:	e8 07 ee ff ff       	call   79dc <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    8bd5:	48 89 c6             	mov    %rax,%rsi
    8bd8:	48 89 df             	mov    %rbx,%rdi
    8bdb:	e8 90 0d 00 00       	call   9970 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>
	{ }
    8be0:	90                   	nop
    8be1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8be5:	c9                   	leave
    8be6:	c3                   	ret
    8be7:	90                   	nop

0000000000008be8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_create_node(_Args&&... __args)
    8be8:	55                   	push   %rbp
    8be9:	48 89 e5             	mov    %rsp,%rbp
    8bec:	41 54                	push   %r12
    8bee:	53                   	push   %rbx
    8bef:	48 83 ec 30          	sub    $0x30,%rsp
    8bf3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8bf7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8bfb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8bff:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    8c03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c07:	48 89 c7             	mov    %rax,%rdi
    8c0a:	e8 87 0d 00 00       	call   9996 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>
    8c0f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    8c13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8c17:	48 89 c7             	mov    %rax,%rdi
    8c1a:	e8 1a ee ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    8c1f:	49 89 c4             	mov    %rax,%r12
    8c22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8c26:	48 89 c7             	mov    %rax,%rdi
    8c29:	e8 fd ed ff ff       	call   7a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8c2e:	48 89 c3             	mov    %rax,%rbx
    8c31:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c35:	48 89 c7             	mov    %rax,%rdi
    8c38:	e8 e0 ed ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8c3d:	48 89 c2             	mov    %rax,%rdx
    8c40:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    8c44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c48:	4d 89 e0             	mov    %r12,%r8
    8c4b:	48 89 d9             	mov    %rbx,%rcx
    8c4e:	48 89 c7             	mov    %rax,%rdi
    8c51:	e8 68 0d 00 00       	call   99be <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>
	  return __tmp;
    8c56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8c5a:	48 83 c4 30          	add    $0x30,%rsp
    8c5e:	5b                   	pop    %rbx
    8c5f:	41 5c                	pop    %r12
    8c61:	5d                   	pop    %rbp
    8c62:	c3                   	ret
    8c63:	90                   	nop

0000000000008c64 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    8c64:	55                   	push   %rbp
    8c65:	48 89 e5             	mov    %rsp,%rbp
    8c68:	48 83 ec 20          	sub    $0x20,%rsp
    8c6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    8c70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c74:	48 8b 10             	mov    (%rax),%rdx
    8c77:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8c7b:	48 89 d6             	mov    %rdx,%rsi
    8c7e:	48 89 c7             	mov    %rax,%rdi
    8c81:	e8 36 f3 ff ff       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8c86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c8a:	c9                   	leave
    8c8b:	c3                   	ret

0000000000008c8c <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8c8c:	55                   	push   %rbp
    8c8d:	48 89 e5             	mov    %rsp,%rbp
    8c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    8c94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c98:	48 8b 40 28          	mov    0x28(%rax),%rax
    8c9c:	5d                   	pop    %rbp
    8c9d:	c3                   	ret

0000000000008c9e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    8c9e:	55                   	push   %rbp
    8c9f:	48 89 e5             	mov    %rsp,%rbp
    8ca2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    8ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8caa:	48 83 c0 20          	add    $0x20,%rax
    8cae:	5d                   	pop    %rbp
    8caf:	c3                   	ret

0000000000008cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    8cb0:	55                   	push   %rbp
    8cb1:	48 89 e5             	mov    %rsp,%rbp
    8cb4:	48 83 ec 10          	sub    $0x10,%rsp
    8cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    8cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc0:	48 89 c7             	mov    %rax,%rdi
    8cc3:	e8 4e 02 00 00       	call   8f16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8cc8:	c9                   	leave
    8cc9:	c3                   	ret

0000000000008cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    8cca:	55                   	push   %rbp
    8ccb:	48 89 e5             	mov    %rsp,%rbp
    8cce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    8cda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cde:	48 8b 10             	mov    (%rax),%rdx
    8ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce5:	48 89 10             	mov    %rdx,(%rax)
    8ce8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8cec:	48 8b 10             	mov    (%rax),%rdx
    8cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8cf7:	90                   	nop
    8cf8:	5d                   	pop    %rbp
    8cf9:	c3                   	ret

0000000000008cfa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8cfa:	55                   	push   %rbp
    8cfb:	48 89 e5             	mov    %rsp,%rbp
    8cfe:	53                   	push   %rbx
    8cff:	48 83 ec 78          	sub    $0x78,%rsp
    8d03:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    8d07:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    8d0b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8d0f:	48 89 c7             	mov    %rax,%rdi
    8d12:	e8 f5 cf ff ff       	call   5d0c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    8d17:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    8d1b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8d1f:	48 89 c7             	mov    %rax,%rdi
    8d22:	e8 cb fd ff ff       	call   8af2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    8d27:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    8d2b:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    8d2f:	eb 51                	jmp    8d82 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x88>
	  __y = __x;
    8d31:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8d35:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    8d39:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    8d3d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8d41:	48 89 c7             	mov    %rax,%rdi
    8d44:	e8 cd 01 00 00       	call   8f16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8d49:	48 89 c2             	mov    %rax,%rdx
    8d4c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8d50:	48 89 c6             	mov    %rax,%rsi
    8d53:	48 89 df             	mov    %rbx,%rdi
    8d56:	e8 37 d7 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8d5b:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    8d5e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    8d62:	74 0e                	je     8d72 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x78>
    8d64:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8d68:	48 89 c7             	mov    %rax,%rdi
    8d6b:	e8 bb e5 ff ff       	call   732b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    8d70:	eb 0c                	jmp    8d7e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x84>
    8d72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8d76:	48 89 c7             	mov    %rax,%rdi
    8d79:	e8 9b e5 ff ff       	call   7319 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8d7e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    8d82:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8d86:	48 85 c0             	test   %rax,%rax
    8d89:	75 a6                	jne    8d31 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x37>
      iterator __j = iterator(__y);
    8d8b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    8d8f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8d93:	48 89 d6             	mov    %rdx,%rsi
    8d96:	48 89 c7             	mov    %rax,%rdi
    8d99:	e8 1e f2 ff ff       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    8d9e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    8da2:	74 54                	je     8df8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xfe>
	  if (__j == begin())
    8da4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8da8:	48 89 c7             	mov    %rax,%rdi
    8dab:	e8 e0 0c 00 00       	call   9a90 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>
    8db0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8db4:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    8db8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8dbc:	48 89 d6             	mov    %rdx,%rsi
    8dbf:	48 89 c7             	mov    %rax,%rdi
    8dc2:	e8 6f d6 ff ff       	call   6436 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    8dc7:	84 c0                	test   %al,%al
    8dc9:	74 21                	je     8dec <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xf2>
	    return _Res(__x, __y);
    8dcb:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    8dcf:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    8dd3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8dd7:	48 89 ce             	mov    %rcx,%rsi
    8dda:	48 89 c7             	mov    %rax,%rdi
    8ddd:	e8 d8 0c 00 00       	call   9aba <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    8de2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8de6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    8dea:	eb 7d                	jmp    8e69 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
	    --__j;
    8dec:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8df0:	48 89 c7             	mov    %rax,%rdi
    8df3:	e8 ce 00 00 00       	call   8ec6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    8df8:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    8dfc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8e00:	48 89 c7             	mov    %rax,%rdi
    8e03:	e8 a8 fe ff ff       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8e08:	48 89 c1             	mov    %rax,%rcx
    8e0b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8e0f:	48 89 c2             	mov    %rax,%rdx
    8e12:	48 89 ce             	mov    %rcx,%rsi
    8e15:	48 89 df             	mov    %rbx,%rdi
    8e18:	e8 75 d6 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8e1d:	84 c0                	test   %al,%al
    8e1f:	74 21                	je     8e42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x148>
	return _Res(__x, __y);
    8e21:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    8e25:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    8e29:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8e2d:	48 89 ce             	mov    %rcx,%rsi
    8e30:	48 89 c7             	mov    %rax,%rdi
    8e33:	e8 82 0c 00 00       	call   9aba <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    8e38:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8e3c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8e40:	eb 27                	jmp    8e69 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
      return _Res(__j._M_node, 0);
    8e42:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    8e49:	00 
    8e4a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    8e4e:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    8e52:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8e56:	48 89 ce             	mov    %rcx,%rsi
    8e59:	48 89 c7             	mov    %rax,%rdi
    8e5c:	e8 69 fe ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8e61:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e65:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    8e69:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e6d:	c9                   	leave
    8e6e:	c3                   	ret
    8e6f:	90                   	nop

0000000000008e70 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    8e70:	55                   	push   %rbp
    8e71:	48 89 e5             	mov    %rsp,%rbp
    8e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    8e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e7c:	48 83 c0 18          	add    $0x18,%rax
    8e80:	5d                   	pop    %rbp
    8e81:	c3                   	ret

0000000000008e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    8e82:	55                   	push   %rbp
    8e83:	48 89 e5             	mov    %rsp,%rbp
    8e86:	48 83 ec 20          	sub    $0x20,%rsp
    8e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    8e96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e9a:	48 89 c7             	mov    %rax,%rdi
    8e9d:	e8 5c 0c 00 00       	call   9afe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    8ea2:	48 8b 10             	mov    (%rax),%rdx
    8ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea9:	48 89 10             	mov    %rdx,(%rax)
    8eac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8eb0:	48 89 c7             	mov    %rax,%rdi
    8eb3:	e8 46 0c 00 00       	call   9afe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    8eb8:	48 8b 10             	mov    (%rax),%rdx
    8ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ebf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8ec3:	90                   	nop
    8ec4:	c9                   	leave
    8ec5:	c3                   	ret

0000000000008ec6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    8ec6:	55                   	push   %rbp
    8ec7:	48 89 e5             	mov    %rsp,%rbp
    8eca:	48 83 ec 10          	sub    $0x10,%rsp
    8ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    8ed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed6:	48 8b 00             	mov    (%rax),%rax
    8ed9:	48 89 c7             	mov    %rax,%rdi
    8edc:	e8 2f a4 ff ff       	call   3310 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    8ee1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8ee5:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    8ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8eec:	c9                   	leave
    8eed:	c3                   	ret

0000000000008eee <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8eee:	55                   	push   %rbp
    8eef:	48 89 e5             	mov    %rsp,%rbp
    8ef2:	48 83 ec 10          	sub    $0x10,%rsp
    8ef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    8efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8efe:	48 8b 00             	mov    (%rax),%rax
    8f01:	48 89 c7             	mov    %rax,%rdi
    8f04:	e8 97 a2 ff ff       	call   31a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    8f09:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f0d:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    8f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8f14:	c9                   	leave
    8f15:	c3                   	ret

0000000000008f16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>:
      _S_key(_Const_Link_type __x)
    8f16:	55                   	push   %rbp
    8f17:	48 89 e5             	mov    %rsp,%rbp
    8f1a:	48 83 ec 20          	sub    $0x20,%rsp
    8f1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    8f22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f26:	48 89 c7             	mov    %rax,%rdi
    8f29:	e8 de 0b 00 00       	call   9b0c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    8f2e:	48 89 c2             	mov    %rax,%rdx
    8f31:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    8f35:	48 89 d6             	mov    %rdx,%rsi
    8f38:	48 89 c7             	mov    %rax,%rdi
    8f3b:	e8 ea 0b 00 00       	call   9b2a <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>
      }
    8f40:	c9                   	leave
    8f41:	c3                   	ret

0000000000008f42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8f42:	55                   	push   %rbp
    8f43:	48 89 e5             	mov    %rsp,%rbp
    8f46:	41 54                	push   %r12
    8f48:	53                   	push   %rbx
    8f49:	48 83 ec 30          	sub    $0x30,%rsp
    8f4d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8f51:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8f55:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8f59:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    8f5d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    8f62:	75 43                	jne    8fa7 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    8f64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f68:	48 89 c7             	mov    %rax,%rdi
    8f6b:	e8 82 fb ff ff       	call   8af2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    8f70:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    8f74:	74 31                	je     8fa7 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    8f76:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8f7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8f7e:	48 89 c7             	mov    %rax,%rdi
    8f81:	e8 2a fd ff ff       	call   8cb0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8f86:	49 89 c4             	mov    %rax,%r12
    8f89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8f8d:	48 89 c7             	mov    %rax,%rdi
    8f90:	e8 81 ff ff ff       	call   8f16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8f95:	4c 89 e2             	mov    %r12,%rdx
    8f98:	48 89 c6             	mov    %rax,%rsi
    8f9b:	48 89 df             	mov    %rbx,%rdi
    8f9e:	e8 ef d4 ff ff       	call   6492 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8fa3:	84 c0                	test   %al,%al
    8fa5:	74 07                	je     8fae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x6c>
    8fa7:	b8 01 00 00 00       	mov    $0x1,%eax
    8fac:	eb 05                	jmp    8fb3 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x71>
    8fae:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    8fb3:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    8fb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8fba:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    8fbe:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    8fc2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8fc6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    8fca:	89 c7                	mov    %eax,%edi
    8fcc:	e8 6f a0 ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    8fd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8fd5:	48 8b 40 28          	mov    0x28(%rax),%rax
    8fd9:	48 8d 50 01          	lea    0x1(%rax),%rdx
    8fdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8fe1:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    8fe5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    8fe9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8fed:	48 89 d6             	mov    %rdx,%rsi
    8ff0:	48 89 c7             	mov    %rax,%rdi
    8ff3:	e8 c4 ef ff ff       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8ff8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    8ffc:	48 83 c4 30          	add    $0x30,%rsp
    9000:	5b                   	pop    %rbx
    9001:	41 5c                	pop    %r12
    9003:	5d                   	pop    %rbp
    9004:	c3                   	ret
    9005:	90                   	nop

0000000000009006 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>:
      _Tuple_impl()
    9006:	55                   	push   %rbp
    9007:	48 89 e5             	mov    %rsp,%rbp
    900a:	48 83 ec 10          	sub    $0x10,%rsp
    900e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    9012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9016:	48 89 c7             	mov    %rax,%rdi
    9019:	e8 1e 0b 00 00       	call   9b3c <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>
    901e:	90                   	nop
    901f:	c9                   	leave
    9020:	c3                   	ret
    9021:	90                   	nop

0000000000009022 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>:
      constexpr _Head_base()
    9022:	55                   	push   %rbp
    9023:	48 89 e5             	mov    %rsp,%rbp
    9026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    902a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    902e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9035:	90                   	nop
    9036:	5d                   	pop    %rbp
    9037:	c3                   	ret

0000000000009038 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9038:	55                   	push   %rbp
    9039:	48 89 e5             	mov    %rsp,%rbp
    903c:	48 83 ec 10          	sub    $0x10,%rsp
    9040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9048:	48 89 c7             	mov    %rax,%rdi
    904b:	e8 f7 0a 00 00       	call   9b47 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>
    9050:	c9                   	leave
    9051:	c3                   	ret

0000000000009052 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>:
      _Tuple_impl()
    9052:	55                   	push   %rbp
    9053:	48 89 e5             	mov    %rsp,%rbp
    9056:	48 83 ec 10          	sub    $0x10,%rsp
    905a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    905e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9062:	48 89 c7             	mov    %rax,%rdi
    9065:	e8 f8 0a 00 00       	call   9b62 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>
    906a:	90                   	nop
    906b:	c9                   	leave
    906c:	c3                   	ret
    906d:	90                   	nop

000000000000906e <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>:
      constexpr _Head_base()
    906e:	55                   	push   %rbp
    906f:	48 89 e5             	mov    %rsp,%rbp
    9072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    907a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9081:	90                   	nop
    9082:	5d                   	pop    %rbp
    9083:	c3                   	ret

0000000000009084 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9084:	55                   	push   %rbp
    9085:	48 89 e5             	mov    %rsp,%rbp
    9088:	48 83 ec 10          	sub    $0x10,%rsp
    908c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9094:	48 89 c7             	mov    %rax,%rdi
    9097:	e8 d1 0a 00 00       	call   9b6d <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>
    909c:	c9                   	leave
    909d:	c3                   	ret

000000000000909e <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>:
      _Tuple_impl()
    909e:	55                   	push   %rbp
    909f:	48 89 e5             	mov    %rsp,%rbp
    90a2:	48 83 ec 10          	sub    $0x10,%rsp
    90a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    90aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ae:	48 89 c7             	mov    %rax,%rdi
    90b1:	e8 d2 0a 00 00       	call   9b88 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>
    90b6:	90                   	nop
    90b7:	c9                   	leave
    90b8:	c3                   	ret
    90b9:	90                   	nop

00000000000090ba <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>:
      constexpr _Head_base()
    90ba:	55                   	push   %rbp
    90bb:	48 89 e5             	mov    %rsp,%rbp
    90be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    90c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90c6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    90cd:	90                   	nop
    90ce:	5d                   	pop    %rbp
    90cf:	c3                   	ret

00000000000090d0 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    90d0:	55                   	push   %rbp
    90d1:	48 89 e5             	mov    %rsp,%rbp
    90d4:	48 83 ec 10          	sub    $0x10,%rsp
    90d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    90dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90e0:	48 89 c7             	mov    %rax,%rdi
    90e3:	e8 ab 0a 00 00       	call   9b93 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>
    90e8:	c9                   	leave
    90e9:	c3                   	ret

00000000000090ea <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    90ea:	55                   	push   %rbp
    90eb:	48 89 e5             	mov    %rsp,%rbp
    90ee:	48 83 ec 10          	sub    $0x10,%rsp
    90f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    90f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90fa:	48 89 c7             	mov    %rax,%rdi
    90fd:	e8 ab 0a 00 00       	call   9bad <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>
    9102:	c9                   	leave
    9103:	c3                   	ret

0000000000009104 <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    9104:	55                   	push   %rbp
    9105:	48 89 e5             	mov    %rsp,%rbp
    9108:	48 83 ec 10          	sub    $0x10,%rsp
    910c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9114:	48 89 c7             	mov    %rax,%rdi
    9117:	e8 ab 0a 00 00       	call   9bc7 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    911c:	c9                   	leave
    911d:	c3                   	ret

000000000000911e <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    911e:	55                   	push   %rbp
    911f:	48 89 e5             	mov    %rsp,%rbp
    9122:	48 83 ec 10          	sub    $0x10,%rsp
    9126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    912a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    912e:	48 89 c7             	mov    %rax,%rdi
    9131:	e8 ab 0a 00 00       	call   9be1 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>
    9136:	c9                   	leave
    9137:	c3                   	ret

0000000000009138 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9138:	55                   	push   %rbp
    9139:	48 89 e5             	mov    %rsp,%rbp
    913c:	48 83 ec 10          	sub    $0x10,%rsp
    9140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9148:	48 89 c7             	mov    %rax,%rdi
    914b:	e8 ab 0a 00 00       	call   9bfb <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>
    9150:	c9                   	leave
    9151:	c3                   	ret

0000000000009152 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    9152:	55                   	push   %rbp
    9153:	48 89 e5             	mov    %rsp,%rbp
    9156:	48 83 ec 10          	sub    $0x10,%rsp
    915a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    915e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9162:	48 89 c7             	mov    %rax,%rdi
    9165:	e8 ab 0a 00 00       	call   9c15 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    916a:	c9                   	leave
    916b:	c3                   	ret

000000000000916c <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    916c:	55                   	push   %rbp
    916d:	48 89 e5             	mov    %rsp,%rbp
    9170:	48 83 ec 10          	sub    $0x10,%rsp
    9174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    917c:	48 89 c7             	mov    %rax,%rdi
    917f:	e8 ab 0a 00 00       	call   9c2f <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9184:	c9                   	leave
    9185:	c3                   	ret

0000000000009186 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>:
      _M_access() const noexcept
    9186:	55                   	push   %rbp
    9187:	48 89 e5             	mov    %rsp,%rbp
    918a:	48 83 ec 10          	sub    $0x10,%rsp
    918e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    9192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9196:	48 89 c7             	mov    %rax,%rdi
    9199:	e8 66 a9 ff ff       	call   3b04 <_ZNKSt9_Any_data9_M_accessEv>
    919e:	c9                   	leave
    919f:	c3                   	ret

00000000000091a0 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    91a0:	55                   	push   %rbp
    91a1:	48 89 e5             	mov    %rsp,%rbp
    91a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    91a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91ac:	5d                   	pop    %rbp
    91ad:	c3                   	ret

00000000000091ae <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    91ae:	55                   	push   %rbp
    91af:	48 89 e5             	mov    %rsp,%rbp
    91b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    91b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91ba:	5d                   	pop    %rbp
    91bb:	c3                   	ret

00000000000091bc <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    91bc:	55                   	push   %rbp
    91bd:	48 89 e5             	mov    %rsp,%rbp
    91c0:	48 83 ec 10          	sub    $0x10,%rsp
    91c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    91c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91cc:	48 89 c7             	mov    %rax,%rdi
    91cf:	e8 da ff ff ff       	call   91ae <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    91d4:	48 89 c7             	mov    %rax,%rdi
    91d7:	e8 56 b4 ff ff       	call   4632 <_ZZN4neko6Engine5startEvENKUlvE_clEv>
    91dc:	90                   	nop
    91dd:	c9                   	leave
    91de:	c3                   	ret

00000000000091df <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    91df:	55                   	push   %rbp
    91e0:	48 89 e5             	mov    %rsp,%rbp
    91e3:	48 83 ec 10          	sub    $0x10,%rsp
    91e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    91ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91f3:	48 89 c7             	mov    %rax,%rdi
    91f6:	e8 4e 0a 00 00       	call   9c49 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    91fb:	48 89 c2             	mov    %rax,%rdx
    91fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9202:	48 89 d6             	mov    %rdx,%rsi
    9205:	48 89 c7             	mov    %rax,%rdi
    9208:	e8 4a 0a 00 00       	call   9c57 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    920d:	90                   	nop
    920e:	c9                   	leave
    920f:	c3                   	ret

0000000000009210 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    9210:	55                   	push   %rbp
    9211:	48 89 e5             	mov    %rsp,%rbp
    9214:	48 83 ec 10          	sub    $0x10,%rsp
    9218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    921c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9220:	48 89 c7             	mov    %rax,%rdi
    9223:	e8 76 0a 00 00       	call   9c9e <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>
	}
    9228:	90                   	nop
    9229:	c9                   	leave
    922a:	c3                   	ret
    922b:	90                   	nop

000000000000922c <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    922c:	55                   	push   %rbp
    922d:	48 89 e5             	mov    %rsp,%rbp
    9230:	48 83 ec 10          	sub    $0x10,%rsp
    9234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    9238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    923c:	48 89 c7             	mov    %rax,%rdi
    923f:	e8 74 0a 00 00       	call   9cb8 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>
    9244:	90                   	nop
    9245:	c9                   	leave
    9246:	c3                   	ret

0000000000009247 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9247:	55                   	push   %rbp
    9248:	48 89 e5             	mov    %rsp,%rbp
    924b:	48 83 ec 10          	sub    $0x10,%rsp
    924f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9257:	48 89 c7             	mov    %rax,%rdi
    925a:	e8 80 0a 00 00       	call   9cdf <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>
    925f:	c9                   	leave
    9260:	c3                   	ret

0000000000009261 <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9261:	55                   	push   %rbp
    9262:	48 89 e5             	mov    %rsp,%rbp
    9265:	48 83 ec 10          	sub    $0x10,%rsp
    9269:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    926d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9271:	48 89 c7             	mov    %rax,%rdi
    9274:	e8 80 0a 00 00       	call   9cf9 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    9279:	c9                   	leave
    927a:	c3                   	ret

000000000000927b <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    927b:	55                   	push   %rbp
    927c:	48 89 e5             	mov    %rsp,%rbp
    927f:	48 83 ec 10          	sub    $0x10,%rsp
    9283:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    928b:	48 89 c7             	mov    %rax,%rdi
    928e:	e8 80 0a 00 00       	call   9d13 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9293:	c9                   	leave
    9294:	c3                   	ret

0000000000009295 <_ZSt11__addressofISt6threadEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9295:	55                   	push   %rbp
    9296:	48 89 e5             	mov    %rsp,%rbp
    9299:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    929d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a1:	5d                   	pop    %rbp
    92a2:	c3                   	ret

00000000000092a3 <_ZSt8_DestroyISt6threadEvPT_>:
    _Destroy(_Tp* __pointer)
    92a3:	55                   	push   %rbp
    92a4:	48 89 e5             	mov    %rsp,%rbp
    92a7:	48 83 ec 10          	sub    $0x10,%rsp
    92ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    92af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92b3:	48 89 c7             	mov    %rax,%rdi
    92b6:	e8 8f a9 ff ff       	call   3c4a <_ZNSt6threadD1Ev>
    }
    92bb:	90                   	nop
    92bc:	c9                   	leave
    92bd:	c3                   	ret

00000000000092be <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    92be:	55                   	push   %rbp
    92bf:	48 89 e5             	mov    %rsp,%rbp
    92c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92c6:	90                   	nop
    92c7:	5d                   	pop    %rbp
    92c8:	c3                   	ret
    92c9:	90                   	nop

00000000000092ca <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>:
      _Deque_iterator() _GLIBCXX_NOEXCEPT
    92ca:	55                   	push   %rbp
    92cb:	48 89 e5             	mov    %rsp,%rbp
    92ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
    92d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    92dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92e1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    92e8:	00 
    92e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ed:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    92f4:	00 
    92f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92f9:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9300:	00 
    9301:	90                   	nop
    9302:	5d                   	pop    %rbp
    9303:	c3                   	ret

0000000000009304 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>:
      allocate(allocator_type& __a, size_type __n)
    9304:	55                   	push   %rbp
    9305:	48 89 e5             	mov    %rsp,%rbp
    9308:	48 83 ec 10          	sub    $0x10,%rsp
    930c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    9314:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    931c:	ba 00 00 00 00       	mov    $0x0,%edx
    9321:	48 89 ce             	mov    %rcx,%rsi
    9324:	48 89 c7             	mov    %rax,%rdi
    9327:	e8 02 0a 00 00       	call   9d2e <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>
    932c:	c9                   	leave
    932d:	c3                   	ret

000000000000932e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    932e:	55                   	push   %rbp
    932f:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    9332:	bf 20 00 00 00       	mov    $0x20,%edi
    9337:	e8 b5 a8 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    933c:	5d                   	pop    %rbp
    933d:	c3                   	ret

000000000000933e <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    933e:	55                   	push   %rbp
    933f:	48 89 e5             	mov    %rsp,%rbp
    9342:	48 83 ec 20          	sub    $0x20,%rsp
    9346:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    934a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    934e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9352:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9356:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    935a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    935e:	48 89 ce             	mov    %rcx,%rsi
    9361:	48 89 c7             	mov    %rax,%rdi
    9364:	e8 27 0a 00 00       	call   9d90 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>
    9369:	90                   	nop
    936a:	c9                   	leave
    936b:	c3                   	ret

000000000000936c <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    936c:	55                   	push   %rbp
    936d:	48 89 e5             	mov    %rsp,%rbp
    9370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9378:	5d                   	pop    %rbp
    9379:	c3                   	ret

000000000000937a <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
    937a:	55                   	push   %rbp
    937b:	48 89 e5             	mov    %rsp,%rbp
    937e:	48 83 ec 10          	sub    $0x10,%rsp
    9382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    938a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    938e:	48 89 c7             	mov    %rax,%rdi
    9391:	e8 2a 0a 00 00       	call   9dc0 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>
    9396:	90                   	nop
    9397:	c9                   	leave
    9398:	c3                   	ret
    9399:	90                   	nop

000000000000939a <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    939a:	55                   	push   %rbp
    939b:	48 89 e5             	mov    %rsp,%rbp
    939e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93a2:	90                   	nop
    93a3:	5d                   	pop    %rbp
    93a4:	c3                   	ret
    93a5:	90                   	nop

00000000000093a6 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    93a6:	55                   	push   %rbp
    93a7:	48 89 e5             	mov    %rsp,%rbp
    93aa:	48 83 ec 20          	sub    $0x20,%rsp
    93ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    93b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    93ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    93c5:	00 
    93c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93ca:	48 89 d6             	mov    %rdx,%rsi
    93cd:	48 89 c7             	mov    %rax,%rdi
    93d0:	e8 0b 9f ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    93d5:	c9                   	leave
    93d6:	c3                   	ret

00000000000093d7 <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    93d7:	55                   	push   %rbp
    93d8:	48 89 e5             	mov    %rsp,%rbp
    93db:	48 83 ec 10          	sub    $0x10,%rsp
    93df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    93e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    93eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ef:	48 89 d6             	mov    %rdx,%rsi
    93f2:	48 89 c7             	mov    %rax,%rdi
    93f5:	e8 d1 09 00 00       	call   9dcb <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>
    }
    93fa:	90                   	nop
    93fb:	c9                   	leave
    93fc:	c3                   	ret
    93fd:	90                   	nop

00000000000093fe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    93fe:	55                   	push   %rbp
    93ff:	48 89 e5             	mov    %rsp,%rbp
    9402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    940a:	5d                   	pop    %rbp
    940b:	c3                   	ret

000000000000940c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    940c:	55                   	push   %rbp
    940d:	48 89 e5             	mov    %rsp,%rbp
    9410:	48 83 ec 10          	sub    $0x10,%rsp
    9414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9418:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    941c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9424:	48 89 d6             	mov    %rdx,%rsi
    9427:	48 89 c7             	mov    %rax,%rdi
    942a:	e8 d5 09 00 00       	call   9e04 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>
	}
    942f:	90                   	nop
    9430:	c9                   	leave
    9431:	c3                   	ret

0000000000009432 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9432:	55                   	push   %rbp
    9433:	48 89 e5             	mov    %rsp,%rbp
    9436:	48 83 ec 20          	sub    $0x20,%rsp
    943a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    943e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9442:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9446:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    944a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    944e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9452:	48 89 ce             	mov    %rcx,%rsi
    9455:	48 89 c7             	mov    %rax,%rdi
    9458:	e8 b7 09 00 00       	call   9e14 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>
    945d:	90                   	nop
    945e:	c9                   	leave
    945f:	c3                   	ret

0000000000009460 <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    9460:	55                   	push   %rbp
    9461:	48 89 e5             	mov    %rsp,%rbp
    9464:	48 83 ec 10          	sub    $0x10,%rsp
    9468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    946c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9470:	48 89 c7             	mov    %rax,%rdi
    9473:	e8 d6 09 00 00       	call   9e4e <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>
      }
    9478:	c9                   	leave
    9479:	c3                   	ret

000000000000947a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    947a:	55                   	push   %rbp
    947b:	48 89 e5             	mov    %rsp,%rbp
    947e:	48 83 ec 20          	sub    $0x20,%rsp
    9482:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9486:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    948a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    948e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    9492:	eb 1e                	jmp    94b2 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    9494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9498:	48 89 c7             	mov    %rax,%rdi
    949b:	e8 f5 fd ff ff       	call   9295 <_ZSt11__addressofISt6threadEPT_RS1_>
    94a0:	48 89 c7             	mov    %rax,%rdi
    94a3:	e8 db 09 00 00       	call   9e83 <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    94a8:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    94ad:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    94b2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    94b7:	75 db                	jne    9494 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x1a>
	      return __cur;
    94b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    94bd:	c9                   	leave
    94be:	c3                   	ret
    94bf:	90                   	nop

00000000000094c0 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    94c0:	55                   	push   %rbp
    94c1:	48 89 e5             	mov    %rsp,%rbp
    94c4:	48 83 ec 20          	sub    $0x20,%rsp
    94c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    94d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d8:	48 89 c7             	mov    %rax,%rdi
    94db:	e8 d2 09 00 00       	call   9eb2 <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    94e0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    94e4:	0f 92 c0             	setb   %al
    94e7:	0f b6 c0             	movzbl %al,%eax
    94ea:	48 85 c0             	test   %rax,%rax
    94ed:	0f 95 c0             	setne  %al
    94f0:	84 c0                	test   %al,%al
    94f2:	74 1a                	je     950e <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    94f4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    94fb:	ff ff 1f 
    94fe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9502:	73 05                	jae    9509 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9504:	e8 17 9d ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9509:	e8 92 9b ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    950e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9512:	48 c1 e0 03          	shl    $0x3,%rax
    9516:	48 89 c7             	mov    %rax,%rdi
    9519:	e8 b2 9d ff ff       	call   32d0 <_Znwm@plt>
    951e:	90                   	nop
      }
    951f:	c9                   	leave
    9520:	c3                   	ret

0000000000009521 <_ZSt12__niter_baseIPSt6threadET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the __normal_iterator wrapper. See copy, fill, ...
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __niter_base(_Iterator __it)
    9521:	55                   	push   %rbp
    9522:	48 89 e5             	mov    %rsp,%rbp
    9525:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
    9529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    952d:	5d                   	pop    %rbp
    952e:	c3                   	ret

000000000000952f <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
    952f:	55                   	push   %rbp
    9530:	48 89 e5             	mov    %rsp,%rbp
    9533:	53                   	push   %rbx
    9534:	48 83 ec 38          	sub    $0x38,%rsp
    9538:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    953c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9540:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9544:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
    9548:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    954c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
    9550:	eb 3a                	jmp    958c <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
    9552:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9556:	48 89 c7             	mov    %rax,%rdi
    9559:	e8 37 fd ff ff       	call   9295 <_ZSt11__addressofISt6threadEPT_RS1_>
    955e:	48 89 c3             	mov    %rax,%rbx
    9561:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9565:	48 89 c7             	mov    %rax,%rdi
    9568:	e8 28 fd ff ff       	call   9295 <_ZSt11__addressofISt6threadEPT_RS1_>
    956d:	48 89 c1             	mov    %rax,%rcx
    9570:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9574:	48 89 c2             	mov    %rax,%rdx
    9577:	48 89 de             	mov    %rbx,%rsi
    957a:	48 89 cf             	mov    %rcx,%rdi
    957d:	e8 44 09 00 00       	call   9ec6 <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    9582:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    9587:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    958c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9590:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    9594:	75 bc                	jne    9552 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x23>
      return __cur;
    9596:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    959a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    959e:	c9                   	leave
    959f:	c3                   	ret

00000000000095a0 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    95a0:	55                   	push   %rbp
    95a1:	48 89 e5             	mov    %rsp,%rbp
    95a4:	53                   	push   %rbx
    95a5:	48 83 ec 18          	sub    $0x18,%rsp
    95a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    95b1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    95b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95b9:	48 89 c7             	mov    %rax,%rdi
    95bc:	e8 09 ca ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    95c1:	48 89 c6             	mov    %rax,%rsi
    95c4:	48 89 df             	mov    %rbx,%rdi
    95c7:	e8 52 09 00 00       	call   9f1e <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>
	{ }
    95cc:	90                   	nop
    95cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95d1:	c9                   	leave
    95d2:	c3                   	ret
    95d3:	90                   	nop

00000000000095d4 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>:
      constexpr _Head_base(const _Head& __h)
    95d4:	55                   	push   %rbp
    95d5:	48 89 e5             	mov    %rsp,%rbp
    95d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_head_impl(__h) { }
    95e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95e4:	48 8b 10             	mov    (%rax),%rdx
    95e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95eb:	48 89 10             	mov    %rdx,(%rax)
    95ee:	90                   	nop
    95ef:	5d                   	pop    %rbp
    95f0:	c3                   	ret
    95f1:	90                   	nop

00000000000095f2 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    95f2:	55                   	push   %rbp
    95f3:	48 89 e5             	mov    %rsp,%rbp
    95f6:	48 83 ec 10          	sub    $0x10,%rsp
    95fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    95fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9602:	48 89 c7             	mov    %rax,%rdi
    9605:	e8 3e 09 00 00       	call   9f48 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>
    960a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    960e:	48 89 c7             	mov    %rax,%rdi
    9611:	e8 4e 09 00 00       	call   9f64 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>
    9616:	90                   	nop
    9617:	c9                   	leave
    9618:	c3                   	ret

0000000000009619 <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9619:	55                   	push   %rbp
    961a:	48 89 e5             	mov    %rsp,%rbp
    961d:	48 83 ec 10          	sub    $0x10,%rsp
    9621:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9629:	48 89 c7             	mov    %rax,%rdi
    962c:	e8 49 09 00 00       	call   9f7a <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>
    9631:	c9                   	leave
    9632:	c3                   	ret

0000000000009633 <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9633:	55                   	push   %rbp
    9634:	48 89 e5             	mov    %rsp,%rbp
    9637:	48 83 ec 10          	sub    $0x10,%rsp
    963b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    963f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9643:	48 89 c7             	mov    %rax,%rdi
    9646:	e8 49 09 00 00       	call   9f94 <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    964b:	c9                   	leave
    964c:	c3                   	ret

000000000000964d <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    964d:	55                   	push   %rbp
    964e:	48 89 e5             	mov    %rsp,%rbp
    9651:	48 83 ec 10          	sub    $0x10,%rsp
    9655:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9659:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return difference_type(_S_buffer_size())
    965d:	e8 cc fc ff ff       	call   932e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    9662:	48 89 c1             	mov    %rax,%rcx
	  * (__x._M_node - __y._M_node - bool(__x._M_node))
    9665:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9669:	48 8b 50 18          	mov    0x18(%rax),%rdx
    966d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9671:	48 8b 40 18          	mov    0x18(%rax),%rax
    9675:	48 29 c2             	sub    %rax,%rdx
    9678:	48 89 d0             	mov    %rdx,%rax
    967b:	48 c1 f8 03          	sar    $0x3,%rax
    967f:	48 89 c2             	mov    %rax,%rdx
    9682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9686:	48 8b 40 18          	mov    0x18(%rax),%rax
    968a:	48 85 c0             	test   %rax,%rax
    968d:	0f 95 c0             	setne  %al
    9690:	0f b6 c0             	movzbl %al,%eax
    9693:	48 29 c2             	sub    %rax,%rdx
    9696:	48 0f af d1          	imul   %rcx,%rdx
	  + (__x._M_cur - __x._M_first)
    969a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    969e:	48 8b 08             	mov    (%rax),%rcx
    96a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96a5:	48 8b 40 08          	mov    0x8(%rax),%rax
    96a9:	48 29 c1             	sub    %rax,%rcx
    96ac:	48 89 c8             	mov    %rcx,%rax
    96af:	48 c1 f8 05          	sar    $0x5,%rax
    96b3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
	  + (__y._M_last - __y._M_cur);
    96b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
    96bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96c3:	48 8b 00             	mov    (%rax),%rax
    96c6:	48 29 c2             	sub    %rax,%rdx
    96c9:	48 89 d0             	mov    %rdx,%rax
    96cc:	48 c1 f8 05          	sar    $0x5,%rax
    96d0:	48 01 c8             	add    %rcx,%rax
      }
    96d3:	c9                   	leave
    96d4:	c3                   	ret

00000000000096d5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    96d5:	55                   	push   %rbp
    96d6:	48 89 e5             	mov    %rsp,%rbp
    96d9:	48 83 ec 20          	sub    $0x20,%rsp
    96dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
    96e1:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    96e8:	ff ff 7f 
    96eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    96ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96f3:	48 89 c7             	mov    %rax,%rdi
    96f6:	e8 b3 08 00 00       	call   9fae <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>
    96fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    96ff:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9703:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9707:	48 89 d6             	mov    %rdx,%rsi
    970a:	48 89 c7             	mov    %rax,%rdi
    970d:	e8 52 a4 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    9712:	48 8b 00             	mov    (%rax),%rax
      }
    9715:	c9                   	leave
    9716:	c3                   	ret
    9717:	90                   	nop

0000000000009718 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>:
	}
    }

  template <typename _Tp, typename _Alloc>
    void
    deque<_Tp, _Alloc>::
    9718:	55                   	push   %rbp
    9719:	48 89 e5             	mov    %rsp,%rbp
    971c:	53                   	push   %rbx
    971d:	48 83 ec 58          	sub    $0x58,%rsp
    9721:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    9725:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    9729:	89 d0                	mov    %edx,%eax
    972b:	88 45 ac             	mov    %al,-0x54(%rbp)
    _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
    {
      const size_type __old_num_nodes
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
    972e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9732:	48 8b 50 48          	mov    0x48(%rax),%rdx
    9736:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    973a:	48 8b 40 28          	mov    0x28(%rax),%rax
    973e:	48 29 c2             	sub    %rax,%rdx
    9741:	48 89 d0             	mov    %rdx,%rax
    9744:	48 c1 f8 03          	sar    $0x3,%rax
    9748:	48 83 c0 01          	add    $0x1,%rax
      const size_type __old_num_nodes
    974c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
    9750:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    9754:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9758:	48 01 d0             	add    %rdx,%rax
    975b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

      _Map_pointer __new_nstart;
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
    975f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9763:	48 8b 40 08          	mov    0x8(%rax),%rax
    9767:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    976b:	48 01 d2             	add    %rdx,%rdx
    976e:	48 39 c2             	cmp    %rax,%rdx
    9771:	0f 83 aa 00 00 00    	jae    9821 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x109>
	{
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    9777:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    977b:	48 8b 10             	mov    (%rax),%rdx
    977e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9782:	48 8b 40 08          	mov    0x8(%rax),%rax
					 - __new_num_nodes) / 2
    9786:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    978a:	48 d1 e8             	shr    %rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    978d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    9794:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    9795:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    9799:	74 0a                	je     97a5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x8d>
    979b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    979f:	48 c1 e0 03          	shl    $0x3,%rax
    97a3:	eb 05                	jmp    97aa <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x92>
    97a5:	b8 00 00 00 00       	mov    $0x0,%eax
    97aa:	48 01 c8             	add    %rcx,%rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    97ad:	48 01 d0             	add    %rdx,%rax
    97b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  if (__new_nstart < this->_M_impl._M_start._M_node)
    97b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97b8:	48 8b 40 28          	mov    0x28(%rax),%rax
    97bc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    97c0:	73 28                	jae    97ea <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0xd2>
	    std::copy(this->_M_impl._M_start._M_node,
		      this->_M_impl._M_finish._M_node + 1,
    97c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97c6:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy(this->_M_impl._M_start._M_node,
    97ca:	48 8d 48 08          	lea    0x8(%rax),%rcx
    97ce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97d2:	48 8b 40 28          	mov    0x28(%rax),%rax
    97d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    97da:	48 89 ce             	mov    %rcx,%rsi
    97dd:	48 89 c7             	mov    %rax,%rdi
    97e0:	e8 e3 07 00 00       	call   9fc8 <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    97e5:	e9 09 01 00 00       	jmp    98f3 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
		      __new_nstart);
	  else
	    std::copy_backward(this->_M_impl._M_start._M_node,
			       this->_M_impl._M_finish._M_node + 1,
			       __new_nstart + __old_num_nodes);
    97ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    97ee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    97f5:	00 
	    std::copy_backward(this->_M_impl._M_start._M_node,
    97f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97fa:	48 01 c2             	add    %rax,%rdx
			       this->_M_impl._M_finish._M_node + 1,
    97fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9801:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy_backward(this->_M_impl._M_start._M_node,
    9805:	48 8d 48 08          	lea    0x8(%rax),%rcx
    9809:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    980d:	48 8b 40 28          	mov    0x28(%rax),%rax
    9811:	48 89 ce             	mov    %rcx,%rsi
    9814:	48 89 c7             	mov    %rax,%rdi
    9817:	e8 f7 07 00 00       	call   a013 <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    981c:	e9 d2 00 00 00       	jmp    98f3 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
	}
      else
	{
	  size_type __new_map_size = this->_M_impl._M_map_size
    9821:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9825:	48 8b 58 08          	mov    0x8(%rax),%rbx
				     + std::max(this->_M_impl._M_map_size,
    9829:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    982d:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9831:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9835:	48 89 c6             	mov    %rax,%rsi
    9838:	48 89 d7             	mov    %rdx,%rdi
    983b:	e8 ce af ff ff       	call   480e <_ZSt3maxImERKT_S2_S2_>
    9840:	48 8b 00             	mov    (%rax),%rax
    9843:	48 01 d8             	add    %rbx,%rax
	  size_type __new_map_size = this->_M_impl._M_map_size
    9846:	48 83 c0 02          	add    $0x2,%rax
    984a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
						__nodes_to_add) + 2;

	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
    984e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9852:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9856:	48 89 d6             	mov    %rdx,%rsi
    9859:	48 89 c7             	mov    %rax,%rdi
    985c:	e8 97 ec ff ff       	call   84f8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    9861:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    9865:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9869:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    986d:	48 d1 e8             	shr    %rax
    9870:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9877:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    9878:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    987c:	74 0a                	je     9888 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x170>
    987e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9882:	48 c1 e0 03          	shl    $0x3,%rax
    9886:	eb 05                	jmp    988d <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x175>
    9888:	b8 00 00 00 00       	mov    $0x0,%eax
    988d:	48 01 c2             	add    %rax,%rdx
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    9890:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9894:	48 01 d0             	add    %rdx,%rax
    9897:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  std::copy(this->_M_impl._M_start._M_node,
		    this->_M_impl._M_finish._M_node + 1,
    989b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    989f:	48 8b 40 48          	mov    0x48(%rax),%rax
	  std::copy(this->_M_impl._M_start._M_node,
    98a3:	48 8d 48 08          	lea    0x8(%rax),%rcx
    98a7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98ab:	48 8b 40 28          	mov    0x28(%rax),%rax
    98af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    98b3:	48 89 ce             	mov    %rcx,%rsi
    98b6:	48 89 c7             	mov    %rax,%rdi
    98b9:	e8 0a 07 00 00       	call   9fc8 <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
		    __new_nstart);
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    98be:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98c2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    98c6:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    98ca:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    98ce:	48 8b 09             	mov    (%rcx),%rcx
    98d1:	48 89 ce             	mov    %rcx,%rsi
    98d4:	48 89 c7             	mov    %rax,%rdi
    98d7:	e8 88 d8 ff ff       	call   7164 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>

	  this->_M_impl._M_map = __new_map;
    98dc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    98e4:	48 89 10             	mov    %rdx,(%rax)
	  this->_M_impl._M_map_size = __new_map_size;
    98e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98eb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    98ef:	48 89 50 08          	mov    %rdx,0x8(%rax)
	}

      this->_M_impl._M_start._M_set_node(__new_nstart);
    98f3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98f7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    98fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98ff:	48 89 c6             	mov    %rax,%rsi
    9902:	48 89 d7             	mov    %rdx,%rdi
    9905:	e8 da ec ff ff       	call   85e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
    990a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    990e:	48 83 c0 30          	add    $0x30,%rax
    9912:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9916:	48 c1 e2 03          	shl    $0x3,%rdx
    991a:	48 8d 4a f8          	lea    -0x8(%rdx),%rcx
    991e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9922:	48 01 ca             	add    %rcx,%rdx
    9925:	48 89 d6             	mov    %rdx,%rsi
    9928:	48 89 c7             	mov    %rax,%rdi
    992b:	e8 b4 ec ff ff       	call   85e4 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
    }
    9930:	90                   	nop
    9931:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9935:	c9                   	leave
    9936:	c3                   	ret

0000000000009937 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    9937:	55                   	push   %rbp
    9938:	48 89 e5             	mov    %rsp,%rbp
    993b:	48 83 ec 10          	sub    $0x10,%rsp
    993f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9943:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    9947:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    994b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    994f:	ba 00 00 00 00       	mov    $0x0,%edx
    9954:	48 89 ce             	mov    %rcx,%rsi
    9957:	48 89 c7             	mov    %rax,%rdi
    995a:	e8 ff 06 00 00       	call   a05e <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>
    995f:	c9                   	leave
    9960:	c3                   	ret
    9961:	90                   	nop

0000000000009962 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() noexcept
    9962:	55                   	push   %rbp
    9963:	48 89 e5             	mov    %rsp,%rbp
    9966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    996a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    996e:	5d                   	pop    %rbp
    996f:	c3                   	ret

0000000000009970 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    9970:	55                   	push   %rbp
    9971:	48 89 e5             	mov    %rsp,%rbp
    9974:	48 83 ec 10          	sub    $0x10,%rsp
    9978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    997c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    9980:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9984:	48 89 c7             	mov    %rax,%rdi
    9987:	e8 50 e0 ff ff       	call   79dc <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    998c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9990:	48 89 02             	mov    %rax,(%rdx)
    9993:	90                   	nop
    9994:	c9                   	leave
    9995:	c3                   	ret

0000000000009996 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>:
      _M_get_node()
    9996:	55                   	push   %rbp
    9997:	48 89 e5             	mov    %rsp,%rbp
    999a:	48 83 ec 10          	sub    $0x10,%rsp
    999e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    99a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99a6:	48 89 c7             	mov    %rax,%rdi
    99a9:	e8 50 fa ff ff       	call   93fe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    99ae:	be 01 00 00 00       	mov    $0x1,%esi
    99b3:	48 89 c7             	mov    %rax,%rdi
    99b6:	e8 04 07 00 00       	call   a0bf <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>
    99bb:	c9                   	leave
    99bc:	c3                   	ret
    99bd:	90                   	nop

00000000000099be <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    99be:	55                   	push   %rbp
    99bf:	48 89 e5             	mov    %rsp,%rbp
    99c2:	41 56                	push   %r14
    99c4:	41 55                	push   %r13
    99c6:	41 54                	push   %r12
    99c8:	53                   	push   %rbx
    99c9:	48 83 ec 30          	sub    $0x30,%rsp
    99cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    99d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    99d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    99d9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    99dd:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    99e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    99e5:	48 89 c6             	mov    %rax,%rsi
    99e8:	bf 30 00 00 00       	mov    $0x30,%edi
    99ed:	e8 97 9e ff ff       	call   3889 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    99f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    99f6:	48 89 c7             	mov    %rax,%rdi
    99f9:	e8 3b e0 ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    99fe:	49 89 c6             	mov    %rax,%r14
    9a01:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9a05:	48 89 c7             	mov    %rax,%rdi
    9a08:	e8 1e e0 ff ff       	call   7a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    9a0d:	49 89 c5             	mov    %rax,%r13
    9a10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a14:	48 89 c7             	mov    %rax,%rdi
    9a17:	e8 01 e0 ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    9a1c:	49 89 c4             	mov    %rax,%r12
    9a1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9a23:	48 89 c7             	mov    %rax,%rdi
    9a26:	e8 93 df ff ff       	call   79be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    9a2b:	48 89 c3             	mov    %rax,%rbx
    9a2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a32:	48 89 c7             	mov    %rax,%rdi
    9a35:	e8 c4 f9 ff ff       	call   93fe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9a3a:	4d 89 f0             	mov    %r14,%r8
    9a3d:	4c 89 e9             	mov    %r13,%rcx
    9a40:	4c 89 e2             	mov    %r12,%rdx
    9a43:	48 89 de             	mov    %rbx,%rsi
    9a46:	48 89 c7             	mov    %rax,%rdi
    9a49:	e8 9b 06 00 00       	call   a0e9 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>
	}
    9a4e:	eb 33                	jmp    9a83 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_+0xc5>
	  __catch(...)
    9a50:	48 89 c7             	mov    %rax,%rdi
    9a53:	e8 88 96 ff ff       	call   30e0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    9a58:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9a5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a60:	48 89 d6             	mov    %rdx,%rsi
    9a63:	48 89 c7             	mov    %rax,%rdi
    9a66:	e8 f3 ec ff ff       	call   875e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
	      __throw_exception_again;
    9a6b:	e8 b0 99 ff ff       	call   3420 <__cxa_rethrow@plt>
	  __catch(...)
    9a70:	48 89 c3             	mov    %rax,%rbx
    9a73:	e8 18 9a ff ff       	call   3490 <__cxa_end_catch@plt>
    9a78:	48 89 d8             	mov    %rbx,%rax
    9a7b:	48 89 c7             	mov    %rax,%rdi
    9a7e:	e8 5d 9a ff ff       	call   34e0 <_Unwind_Resume@plt>
	}
    9a83:	48 83 c4 30          	add    $0x30,%rsp
    9a87:	5b                   	pop    %rbx
    9a88:	41 5c                	pop    %r12
    9a8a:	41 5d                	pop    %r13
    9a8c:	41 5e                	pop    %r14
    9a8e:	5d                   	pop    %rbp
    9a8f:	c3                   	ret

0000000000009a90 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9a90:	55                   	push   %rbp
    9a91:	48 89 e5             	mov    %rsp,%rbp
    9a94:	48 83 ec 20          	sub    $0x20,%rsp
    9a98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    9a9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9aa0:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9aa4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9aa8:	48 89 d6             	mov    %rdx,%rsi
    9aab:	48 89 c7             	mov    %rax,%rdi
    9aae:	e8 09 e5 ff ff       	call   7fbc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    9ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab7:	c9                   	leave
    9ab8:	c3                   	ret
    9ab9:	90                   	nop

0000000000009aba <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    9aba:	55                   	push   %rbp
    9abb:	48 89 e5             	mov    %rsp,%rbp
    9abe:	48 83 ec 20          	sub    $0x20,%rsp
    9ac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ac6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9aca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    9ace:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ad2:	48 89 c7             	mov    %rax,%rdi
    9ad5:	e8 7b 06 00 00       	call   a155 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>
    9ada:	48 8b 10             	mov    (%rax),%rdx
    9add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae1:	48 89 10             	mov    %rdx,(%rax)
    9ae4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ae8:	48 89 c7             	mov    %rax,%rdi
    9aeb:	e8 0e 00 00 00       	call   9afe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    9af0:	48 8b 10             	mov    (%rax),%rdx
    9af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9afb:	90                   	nop
    9afc:	c9                   	leave
    9afd:	c3                   	ret

0000000000009afe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9afe:	55                   	push   %rbp
    9aff:	48 89 e5             	mov    %rsp,%rbp
    9b02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b0a:	5d                   	pop    %rbp
    9b0b:	c3                   	ret

0000000000009b0c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr() const
    9b0c:	55                   	push   %rbp
    9b0d:	48 89 e5             	mov    %rsp,%rbp
    9b10:	48 83 ec 10          	sub    $0x10,%rsp
    9b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    9b18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1c:	48 83 c0 20          	add    $0x20,%rax
    9b20:	48 89 c7             	mov    %rax,%rdi
    9b23:	e8 3c 06 00 00       	call   a164 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    9b28:	c9                   	leave
    9b29:	c3                   	ret

0000000000009b2a <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    9b2a:	55                   	push   %rbp
    9b2b:	48 89 e5             	mov    %rsp,%rbp
    9b2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    9b36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b3a:	5d                   	pop    %rbp
    9b3b:	c3                   	ret

0000000000009b3c <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>:
      constexpr _Head_base()
    9b3c:	55                   	push   %rbp
    9b3d:	48 89 e5             	mov    %rsp,%rbp
    9b40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9b44:	90                   	nop
    9b45:	5d                   	pop    %rbp
    9b46:	c3                   	ret

0000000000009b47 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9b47:	55                   	push   %rbp
    9b48:	48 89 e5             	mov    %rsp,%rbp
    9b4b:	48 83 ec 10          	sub    $0x10,%rsp
    9b4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b57:	48 89 c7             	mov    %rax,%rdi
    9b5a:	e8 1f 06 00 00       	call   a17e <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>
    9b5f:	c9                   	leave
    9b60:	c3                   	ret
    9b61:	90                   	nop

0000000000009b62 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>:
      constexpr _Head_base()
    9b62:	55                   	push   %rbp
    9b63:	48 89 e5             	mov    %rsp,%rbp
    9b66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9b6a:	90                   	nop
    9b6b:	5d                   	pop    %rbp
    9b6c:	c3                   	ret

0000000000009b6d <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9b6d:	55                   	push   %rbp
    9b6e:	48 89 e5             	mov    %rsp,%rbp
    9b71:	48 83 ec 10          	sub    $0x10,%rsp
    9b75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b7d:	48 89 c7             	mov    %rax,%rdi
    9b80:	e8 07 06 00 00       	call   a18c <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>
    9b85:	c9                   	leave
    9b86:	c3                   	ret
    9b87:	90                   	nop

0000000000009b88 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>:
      constexpr _Head_base()
    9b88:	55                   	push   %rbp
    9b89:	48 89 e5             	mov    %rsp,%rbp
    9b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9b90:	90                   	nop
    9b91:	5d                   	pop    %rbp
    9b92:	c3                   	ret

0000000000009b93 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9b93:	55                   	push   %rbp
    9b94:	48 89 e5             	mov    %rsp,%rbp
    9b97:	48 83 ec 10          	sub    $0x10,%rsp
    9b9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ba3:	48 89 c7             	mov    %rax,%rdi
    9ba6:	e8 ef 05 00 00       	call   a19a <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    9bab:	c9                   	leave
    9bac:	c3                   	ret

0000000000009bad <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9bad:	55                   	push   %rbp
    9bae:	48 89 e5             	mov    %rsp,%rbp
    9bb1:	48 83 ec 10          	sub    $0x10,%rsp
    9bb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bbd:	48 89 c7             	mov    %rax,%rdi
    9bc0:	e8 e3 05 00 00       	call   a1a8 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>
    9bc5:	c9                   	leave
    9bc6:	c3                   	ret

0000000000009bc7 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9bc7:	55                   	push   %rbp
    9bc8:	48 89 e5             	mov    %rsp,%rbp
    9bcb:	48 83 ec 10          	sub    $0x10,%rsp
    9bcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd7:	48 89 c7             	mov    %rax,%rdi
    9bda:	e8 d7 05 00 00       	call   a1b6 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>
    9bdf:	c9                   	leave
    9be0:	c3                   	ret

0000000000009be1 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9be1:	55                   	push   %rbp
    9be2:	48 89 e5             	mov    %rsp,%rbp
    9be5:	48 83 ec 10          	sub    $0x10,%rsp
    9be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf1:	48 89 c7             	mov    %rax,%rdi
    9bf4:	e8 d7 05 00 00       	call   a1d0 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>
    9bf9:	c9                   	leave
    9bfa:	c3                   	ret

0000000000009bfb <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>:
    9bfb:	55                   	push   %rbp
    9bfc:	48 89 e5             	mov    %rsp,%rbp
    9bff:	48 83 ec 10          	sub    $0x10,%rsp
    9c03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c0b:	48 89 c7             	mov    %rax,%rdi
    9c0e:	e8 cb 05 00 00       	call   a1de <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>
    9c13:	c9                   	leave
    9c14:	c3                   	ret

0000000000009c15 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9c15:	55                   	push   %rbp
    9c16:	48 89 e5             	mov    %rsp,%rbp
    9c19:	48 83 ec 10          	sub    $0x10,%rsp
    9c1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9c21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c25:	48 89 c7             	mov    %rax,%rdi
    9c28:	e8 bf 05 00 00       	call   a1ec <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>
    9c2d:	c9                   	leave
    9c2e:	c3                   	ret

0000000000009c2f <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9c2f:	55                   	push   %rbp
    9c30:	48 89 e5             	mov    %rsp,%rbp
    9c33:	48 83 ec 10          	sub    $0x10,%rsp
    9c37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9c3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c3f:	48 89 c7             	mov    %rax,%rdi
    9c42:	e8 bf 05 00 00       	call   a206 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>
    9c47:	c9                   	leave
    9c48:	c3                   	ret

0000000000009c49 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9c49:	55                   	push   %rbp
    9c4a:	48 89 e5             	mov    %rsp,%rbp
    9c4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c55:	5d                   	pop    %rbp
    9c56:	c3                   	ret

0000000000009c57 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    9c57:	55                   	push   %rbp
    9c58:	48 89 e5             	mov    %rsp,%rbp
    9c5b:	53                   	push   %rbx
    9c5c:	48 83 ec 18          	sub    $0x18,%rsp
    9c60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c64:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    9c68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c6c:	48 89 c7             	mov    %rax,%rdi
    9c6f:	e8 82 9e ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    9c74:	48 89 c6             	mov    %rax,%rsi
    9c77:	bf 08 00 00 00       	mov    $0x8,%edi
    9c7c:	e8 08 9c ff ff       	call   3889 <_ZnwmPv>
    9c81:	48 89 c3             	mov    %rax,%rbx
    9c84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c88:	48 89 c7             	mov    %rax,%rdi
    9c8b:	e8 b9 ff ff ff       	call   9c49 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    9c90:	48 8b 00             	mov    (%rax),%rax
    9c93:	48 89 03             	mov    %rax,(%rbx)
	  }
    9c96:	90                   	nop
    9c97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c9b:	c9                   	leave
    9c9c:	c3                   	ret
    9c9d:	90                   	nop

0000000000009c9e <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    9c9e:	55                   	push   %rbp
    9c9f:	48 89 e5             	mov    %rsp,%rbp
    9ca2:	48 83 ec 10          	sub    $0x10,%rsp
    9ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    9caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cae:	48 89 c7             	mov    %rax,%rdi
    9cb1:	e8 40 9e ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    9cb6:	c9                   	leave
    9cb7:	c3                   	ret

0000000000009cb8 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    9cb8:	55                   	push   %rbp
    9cb9:	48 89 e5             	mov    %rsp,%rbp
    9cbc:	48 83 ec 10          	sub    $0x10,%rsp
    9cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    9cc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cc8:	48 89 c7             	mov    %rax,%rdi
    9ccb:	e8 50 05 00 00       	call   a220 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>
    9cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd4:	48 89 c7             	mov    %rax,%rdi
    9cd7:	e8 60 05 00 00       	call   a23c <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>
    9cdc:	90                   	nop
    9cdd:	c9                   	leave
    9cde:	c3                   	ret

0000000000009cdf <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9cdf:	55                   	push   %rbp
    9ce0:	48 89 e5             	mov    %rsp,%rbp
    9ce3:	48 83 ec 10          	sub    $0x10,%rsp
    9ce7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ceb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cef:	48 89 c7             	mov    %rax,%rdi
    9cf2:	e8 5b 05 00 00       	call   a252 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>
    9cf7:	c9                   	leave
    9cf8:	c3                   	ret

0000000000009cf9 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9cf9:	55                   	push   %rbp
    9cfa:	48 89 e5             	mov    %rsp,%rbp
    9cfd:	48 83 ec 10          	sub    $0x10,%rsp
    9d01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d09:	48 89 c7             	mov    %rax,%rdi
    9d0c:	e8 4f 05 00 00       	call   a260 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>
    9d11:	c9                   	leave
    9d12:	c3                   	ret

0000000000009d13 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9d13:	55                   	push   %rbp
    9d14:	48 89 e5             	mov    %rsp,%rbp
    9d17:	48 83 ec 10          	sub    $0x10,%rsp
    9d1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d23:	48 89 c7             	mov    %rax,%rdi
    9d26:	e8 4f 05 00 00       	call   a27a <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>
    9d2b:	c9                   	leave
    9d2c:	c3                   	ret
    9d2d:	90                   	nop

0000000000009d2e <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9d2e:	55                   	push   %rbp
    9d2f:	48 89 e5             	mov    %rsp,%rbp
    9d32:	48 83 ec 20          	sub    $0x20,%rsp
    9d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d46:	48 89 c7             	mov    %rax,%rdi
    9d49:	e8 46 05 00 00       	call   a294 <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>
    9d4e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9d52:	0f 92 c0             	setb   %al
    9d55:	0f b6 c0             	movzbl %al,%eax
    9d58:	48 85 c0             	test   %rax,%rax
    9d5b:	0f 95 c0             	setne  %al
    9d5e:	84 c0                	test   %al,%al
    9d60:	74 1a                	je     9d7c <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9d62:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9d69:	ff ff 1f 
    9d6c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9d70:	73 05                	jae    9d77 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9d72:	e8 a9 94 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9d77:	e8 24 93 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9d7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d80:	48 c1 e0 03          	shl    $0x3,%rax
    9d84:	48 89 c7             	mov    %rax,%rdi
    9d87:	e8 44 95 ff ff       	call   32d0 <_Znwm@plt>
    9d8c:	90                   	nop
      }
    9d8d:	c9                   	leave
    9d8e:	c3                   	ret
    9d8f:	90                   	nop

0000000000009d90 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9d90:	55                   	push   %rbp
    9d91:	48 89 e5             	mov    %rsp,%rbp
    9d94:	48 83 ec 20          	sub    $0x20,%rsp
    9d98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9da0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9da4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9da8:	48 c1 e0 05          	shl    $0x5,%rax
    9dac:	48 89 c2             	mov    %rax,%rdx
    9daf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9db3:	48 89 d6             	mov    %rdx,%rsi
    9db6:	48 89 c7             	mov    %rax,%rdi
    9db9:	e8 22 95 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    9dbe:	c9                   	leave
    9dbf:	c3                   	ret

0000000000009dc0 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9dc0:	55                   	push   %rbp
    9dc1:	48 89 e5             	mov    %rsp,%rbp
    9dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc8:	90                   	nop
    9dc9:	5d                   	pop    %rbp
    9dca:	c3                   	ret

0000000000009dcb <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    9dcb:	55                   	push   %rbp
    9dcc:	48 89 e5             	mov    %rsp,%rbp
    9dcf:	48 83 ec 10          	sub    $0x10,%rsp
    9dd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    9ddb:	eb 19                	jmp    9df6 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    9ddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de1:	48 89 c7             	mov    %rax,%rdi
    9de4:	e8 bf 04 00 00       	call   a2a8 <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>
    9de9:	48 89 c7             	mov    %rax,%rdi
    9dec:	e8 c5 04 00 00       	call   a2b6 <_ZSt8_DestroyISt8functionIFvvEEEvPT_>
	  for (; __first != __last; ++__first)
    9df1:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    9df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dfa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9dfe:	75 dd                	jne    9ddd <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x12>
	}
    9e00:	90                   	nop
    9e01:	90                   	nop
    9e02:	c9                   	leave
    9e03:	c3                   	ret

0000000000009e04 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
    9e04:	55                   	push   %rbp
    9e05:	48 89 e5             	mov    %rsp,%rbp
    9e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    9e10:	90                   	nop
    9e11:	5d                   	pop    %rbp
    9e12:	c3                   	ret
    9e13:	90                   	nop

0000000000009e14 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9e14:	55                   	push   %rbp
    9e15:	48 89 e5             	mov    %rsp,%rbp
    9e18:	48 83 ec 20          	sub    $0x20,%rsp
    9e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9e28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e2c:	48 89 d0             	mov    %rdx,%rax
    9e2f:	48 01 c0             	add    %rax,%rax
    9e32:	48 01 d0             	add    %rdx,%rax
    9e35:	48 c1 e0 04          	shl    $0x4,%rax
    9e39:	48 89 c2             	mov    %rax,%rdx
    9e3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e40:	48 89 d6             	mov    %rdx,%rsi
    9e43:	48 89 c7             	mov    %rax,%rdi
    9e46:	e8 95 94 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    9e4b:	c9                   	leave
    9e4c:	c3                   	ret
    9e4d:	90                   	nop

0000000000009e4e <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    9e4e:	55                   	push   %rbp
    9e4f:	48 89 e5             	mov    %rsp,%rbp
    9e52:	48 83 ec 10          	sub    $0x10,%rsp
    9e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    9e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5e:	48 89 c7             	mov    %rax,%rdi
    9e61:	e8 4c 00 00 00       	call   9eb2 <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    9e66:	c9                   	leave
    9e67:	c3                   	ret

0000000000009e68 <_ZNSt6threadC1Ev>:
    thread() noexcept = default;
    9e68:	55                   	push   %rbp
    9e69:	48 89 e5             	mov    %rsp,%rbp
    9e6c:	48 83 ec 10          	sub    $0x10,%rsp
    9e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e78:	48 89 c7             	mov    %rax,%rdi
    9e7b:	e8 9a 9d ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
    9e80:	90                   	nop
    9e81:	c9                   	leave
    9e82:	c3                   	ret

0000000000009e83 <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9e83:	55                   	push   %rbp
    9e84:	48 89 e5             	mov    %rsp,%rbp
    9e87:	48 83 ec 10          	sub    $0x10,%rsp
    9e8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e93:	48 89 c6             	mov    %rax,%rsi
    9e96:	bf 08 00 00 00       	mov    $0x8,%edi
    9e9b:	e8 e9 99 ff ff       	call   3889 <_ZnwmPv>
    9ea0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9ea7:	48 89 c7             	mov    %rax,%rdi
    9eaa:	e8 b9 ff ff ff       	call   9e68 <_ZNSt6threadC1Ev>
    }
    9eaf:	90                   	nop
    9eb0:	c9                   	leave
    9eb1:	c3                   	ret

0000000000009eb2 <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9eb2:	55                   	push   %rbp
    9eb3:	48 89 e5             	mov    %rsp,%rbp
    9eb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9eba:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9ec1:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    9ec4:	5d                   	pop    %rbp
    9ec5:	c3                   	ret

0000000000009ec6 <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
    9ec6:	55                   	push   %rbp
    9ec7:	48 89 e5             	mov    %rsp,%rbp
    9eca:	48 83 ec 20          	sub    $0x20,%rsp
    9ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ed2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ed6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
    9eda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ede:	48 89 c7             	mov    %rax,%rdi
    9ee1:	e8 eb 03 00 00       	call   a2d1 <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>
    9ee6:	48 89 c2             	mov    %rax,%rdx
    9ee9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ef1:	48 89 ce             	mov    %rcx,%rsi
    9ef4:	48 89 c7             	mov    %rax,%rdi
    9ef7:	e8 e3 03 00 00       	call   a2df <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    9efc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f00:	48 89 c7             	mov    %rax,%rdi
    9f03:	e8 8d f3 ff ff       	call   9295 <_ZSt11__addressofISt6threadEPT_RS1_>
    9f08:	48 89 c2             	mov    %rax,%rdx
    9f0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f0f:	48 89 d6             	mov    %rdx,%rsi
    9f12:	48 89 c7             	mov    %rax,%rdi
    9f15:	e8 fe 03 00 00       	call   a318 <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>
    }
    9f1a:	90                   	nop
    9f1b:	c9                   	leave
    9f1c:	c3                   	ret
    9f1d:	90                   	nop

0000000000009f1e <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    9f1e:	55                   	push   %rbp
    9f1f:	48 89 e5             	mov    %rsp,%rbp
    9f22:	48 83 ec 10          	sub    $0x10,%rsp
    9f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    9f2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f32:	48 89 c7             	mov    %rax,%rdi
    9f35:	e8 90 c0 ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    9f3a:	48 8b 10             	mov    (%rax),%rdx
    9f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f41:	48 89 10             	mov    %rdx,(%rax)
    9f44:	90                   	nop
    9f45:	c9                   	leave
    9f46:	c3                   	ret
    9f47:	90                   	nop

0000000000009f48 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>:
      _Tuple_impl()
    9f48:	55                   	push   %rbp
    9f49:	48 89 e5             	mov    %rsp,%rbp
    9f4c:	48 83 ec 10          	sub    $0x10,%rsp
    9f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    9f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f58:	48 89 c7             	mov    %rax,%rdi
    9f5b:	e8 de 03 00 00       	call   a33e <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>
    9f60:	90                   	nop
    9f61:	c9                   	leave
    9f62:	c3                   	ret
    9f63:	90                   	nop

0000000000009f64 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>:
      constexpr _Head_base()
    9f64:	55                   	push   %rbp
    9f65:	48 89 e5             	mov    %rsp,%rbp
    9f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f70:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9f77:	90                   	nop
    9f78:	5d                   	pop    %rbp
    9f79:	c3                   	ret

0000000000009f7a <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9f7a:	55                   	push   %rbp
    9f7b:	48 89 e5             	mov    %rsp,%rbp
    9f7e:	48 83 ec 10          	sub    $0x10,%rsp
    9f82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8a:	48 89 c7             	mov    %rax,%rdi
    9f8d:	e8 b7 03 00 00       	call   a349 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>
    9f92:	c9                   	leave
    9f93:	c3                   	ret

0000000000009f94 <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9f94:	55                   	push   %rbp
    9f95:	48 89 e5             	mov    %rsp,%rbp
    9f98:	48 83 ec 10          	sub    $0x10,%rsp
    9f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fa4:	48 89 c7             	mov    %rax,%rdi
    9fa7:	e8 ab 03 00 00       	call   a357 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>
    9fac:	c9                   	leave
    9fad:	c3                   	ret

0000000000009fae <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    9fae:	55                   	push   %rbp
    9faf:	48 89 e5             	mov    %rsp,%rbp
    9fb2:	48 83 ec 10          	sub    $0x10,%rsp
    9fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    9fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fbe:	48 89 c7             	mov    %rax,%rdi
    9fc1:	e8 ac 03 00 00       	call   a372 <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>
      }
    9fc6:	c9                   	leave
    9fc7:	c3                   	ret

0000000000009fc8 <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    9fc8:	55                   	push   %rbp
    9fc9:	48 89 e5             	mov    %rsp,%rbp
    9fcc:	53                   	push   %rbx
    9fcd:	48 83 ec 28          	sub    $0x28,%rsp
    9fd1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9fd5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9fd9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    9fdd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fe1:	48 89 c7             	mov    %rax,%rdi
    9fe4:	e8 a3 03 00 00       	call   a38c <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    9fe9:	48 89 c3             	mov    %rax,%rbx
    9fec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ff0:	48 89 c7             	mov    %rax,%rdi
    9ff3:	e8 94 03 00 00       	call   a38c <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    9ff8:	48 89 c1             	mov    %rax,%rcx
    9ffb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9fff:	48 89 c2             	mov    %rax,%rdx
    a002:	48 89 de             	mov    %rbx,%rsi
    a005:	48 89 cf             	mov    %rcx,%rdi
    a008:	e8 8d 03 00 00       	call   a39a <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    a00d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a011:	c9                   	leave
    a012:	c3                   	ret

000000000000a013 <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    a013:	55                   	push   %rbp
    a014:	48 89 e5             	mov    %rsp,%rbp
    a017:	53                   	push   %rbx
    a018:	48 83 ec 28          	sub    $0x28,%rsp
    a01c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a020:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a024:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
	    typename iterator_traits<_BI1>::reference>)
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    a028:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a02c:	48 89 c7             	mov    %rax,%rdi
    a02f:	e8 58 03 00 00       	call   a38c <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    a034:	48 89 c3             	mov    %rax,%rbx
    a037:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a03b:	48 89 c7             	mov    %rax,%rdi
    a03e:	e8 49 03 00 00       	call   a38c <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    a043:	48 89 c1             	mov    %rax,%rcx
    a046:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a04a:	48 89 c2             	mov    %rax,%rdx
    a04d:	48 89 de             	mov    %rbx,%rsi
    a050:	48 89 cf             	mov    %rcx,%rdi
    a053:	e8 ac 03 00 00       	call   a404 <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    a058:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a05c:	c9                   	leave
    a05d:	c3                   	ret

000000000000a05e <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    a05e:	55                   	push   %rbp
    a05f:	48 89 e5             	mov    %rsp,%rbp
    a062:	48 83 ec 20          	sub    $0x20,%rsp
    a066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a06a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a06e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    a072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a076:	48 89 c7             	mov    %rax,%rdi
    a079:	e8 f0 03 00 00       	call   a46e <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    a07e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a082:	0f 92 c0             	setb   %al
    a085:	0f b6 c0             	movzbl %al,%eax
    a088:	48 85 c0             	test   %rax,%rax
    a08b:	0f 95 c0             	setne  %al
    a08e:	84 c0                	test   %al,%al
    a090:	74 1a                	je     a0ac <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    a092:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
    a099:	ff ff 07 
    a09c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a0a0:	73 05                	jae    a0a7 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    a0a2:	e8 79 91 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    a0a7:	e8 f4 8f ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a0ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0b0:	48 c1 e0 05          	shl    $0x5,%rax
    a0b4:	48 89 c7             	mov    %rax,%rdi
    a0b7:	e8 14 92 ff ff       	call   32d0 <_Znwm@plt>
    a0bc:	90                   	nop
      }
    a0bd:	c9                   	leave
    a0be:	c3                   	ret

000000000000a0bf <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>:
      allocate(allocator_type& __a, size_type __n)
    a0bf:	55                   	push   %rbp
    a0c0:	48 89 e5             	mov    %rsp,%rbp
    a0c3:	48 83 ec 10          	sub    $0x10,%rsp
    a0c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    a0cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0d7:	ba 00 00 00 00       	mov    $0x0,%edx
    a0dc:	48 89 ce             	mov    %rcx,%rsi
    a0df:	48 89 c7             	mov    %rax,%rdi
    a0e2:	e8 9b 03 00 00       	call   a482 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>
    a0e7:	c9                   	leave
    a0e8:	c3                   	ret

000000000000a0e9 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a0e9:	55                   	push   %rbp
    a0ea:	48 89 e5             	mov    %rsp,%rbp
    a0ed:	41 54                	push   %r12
    a0ef:	53                   	push   %rbx
    a0f0:	48 83 ec 30          	sub    $0x30,%rsp
    a0f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a0fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a100:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a104:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a108:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a10c:	48 89 c7             	mov    %rax,%rdi
    a10f:	e8 25 d9 ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a114:	49 89 c4             	mov    %rax,%r12
    a117:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a11b:	48 89 c7             	mov    %rax,%rdi
    a11e:	e8 08 d9 ff ff       	call   7a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a123:	48 89 c3             	mov    %rax,%rbx
    a126:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a12a:	48 89 c7             	mov    %rax,%rdi
    a12d:	e8 eb d8 ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a132:	48 89 c2             	mov    %rax,%rdx
    a135:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    a139:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a13d:	4d 89 e0             	mov    %r12,%r8
    a140:	48 89 d9             	mov    %rbx,%rcx
    a143:	48 89 c7             	mov    %rax,%rdi
    a146:	e8 c7 03 00 00       	call   a512 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>
	}
    a14b:	90                   	nop
    a14c:	48 83 c4 30          	add    $0x30,%rsp
    a150:	5b                   	pop    %rbx
    a151:	41 5c                	pop    %r12
    a153:	5d                   	pop    %rbp
    a154:	c3                   	ret

000000000000a155 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a155:	55                   	push   %rbp
    a156:	48 89 e5             	mov    %rsp,%rbp
    a159:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a15d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a161:	5d                   	pop    %rbp
    a162:	c3                   	ret
    a163:	90                   	nop

000000000000a164 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    a164:	55                   	push   %rbp
    a165:	48 89 e5             	mov    %rsp,%rbp
    a168:	48 83 ec 10          	sub    $0x10,%rsp
    a16c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    a170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a174:	48 89 c7             	mov    %rax,%rdi
    a177:	e8 46 04 00 00       	call   a5c2 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    a17c:	c9                   	leave
    a17d:	c3                   	ret

000000000000a17e <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a17e:	55                   	push   %rbp
    a17f:	48 89 e5             	mov    %rsp,%rbp
    a182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18a:	5d                   	pop    %rbp
    a18b:	c3                   	ret

000000000000a18c <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>:
    a18c:	55                   	push   %rbp
    a18d:	48 89 e5             	mov    %rsp,%rbp
    a190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a198:	5d                   	pop    %rbp
    a199:	c3                   	ret

000000000000a19a <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    a19a:	55                   	push   %rbp
    a19b:	48 89 e5             	mov    %rsp,%rbp
    a19e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a6:	5d                   	pop    %rbp
    a1a7:	c3                   	ret

000000000000a1a8 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a1a8:	55                   	push   %rbp
    a1a9:	48 89 e5             	mov    %rsp,%rbp
    a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b4:	5d                   	pop    %rbp
    a1b5:	c3                   	ret

000000000000a1b6 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a1b6:	55                   	push   %rbp
    a1b7:	48 89 e5             	mov    %rsp,%rbp
    a1ba:	48 83 ec 10          	sub    $0x10,%rsp
    a1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1c6:	48 89 c7             	mov    %rax,%rdi
    a1c9:	e8 02 04 00 00       	call   a5d0 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>
    a1ce:	c9                   	leave
    a1cf:	c3                   	ret

000000000000a1d0 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a1d0:	55                   	push   %rbp
    a1d1:	48 89 e5             	mov    %rsp,%rbp
    a1d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1dc:	5d                   	pop    %rbp
    a1dd:	c3                   	ret

000000000000a1de <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>:
    a1de:	55                   	push   %rbp
    a1df:	48 89 e5             	mov    %rsp,%rbp
    a1e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ea:	5d                   	pop    %rbp
    a1eb:	c3                   	ret

000000000000a1ec <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a1ec:	55                   	push   %rbp
    a1ed:	48 89 e5             	mov    %rsp,%rbp
    a1f0:	48 83 ec 10          	sub    $0x10,%rsp
    a1f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1fc:	48 89 c7             	mov    %rax,%rdi
    a1ff:	e8 da 03 00 00       	call   a5de <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>
    a204:	c9                   	leave
    a205:	c3                   	ret

000000000000a206 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>:
    a206:	55                   	push   %rbp
    a207:	48 89 e5             	mov    %rsp,%rbp
    a20a:	48 83 ec 10          	sub    $0x10,%rsp
    a20e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a216:	48 89 c7             	mov    %rax,%rdi
    a219:	e8 ce 03 00 00       	call   a5ec <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>
    a21e:	c9                   	leave
    a21f:	c3                   	ret

000000000000a220 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>:
      _Tuple_impl()
    a220:	55                   	push   %rbp
    a221:	48 89 e5             	mov    %rsp,%rbp
    a224:	48 83 ec 10          	sub    $0x10,%rsp
    a228:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a22c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a230:	48 89 c7             	mov    %rax,%rdi
    a233:	e8 c2 03 00 00       	call   a5fa <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>
    a238:	90                   	nop
    a239:	c9                   	leave
    a23a:	c3                   	ret
    a23b:	90                   	nop

000000000000a23c <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>:
      constexpr _Head_base()
    a23c:	55                   	push   %rbp
    a23d:	48 89 e5             	mov    %rsp,%rbp
    a240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a248:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a24f:	90                   	nop
    a250:	5d                   	pop    %rbp
    a251:	c3                   	ret

000000000000a252 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a252:	55                   	push   %rbp
    a253:	48 89 e5             	mov    %rsp,%rbp
    a256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a25e:	5d                   	pop    %rbp
    a25f:	c3                   	ret

000000000000a260 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a260:	55                   	push   %rbp
    a261:	48 89 e5             	mov    %rsp,%rbp
    a264:	48 83 ec 10          	sub    $0x10,%rsp
    a268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a26c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a270:	48 89 c7             	mov    %rax,%rdi
    a273:	e8 8d 03 00 00       	call   a605 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>
    a278:	c9                   	leave
    a279:	c3                   	ret

000000000000a27a <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a27a:	55                   	push   %rbp
    a27b:	48 89 e5             	mov    %rsp,%rbp
    a27e:	48 83 ec 10          	sub    $0x10,%rsp
    a282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28a:	48 89 c7             	mov    %rax,%rdi
    a28d:	e8 81 03 00 00       	call   a613 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>
    a292:	c9                   	leave
    a293:	c3                   	ret

000000000000a294 <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a294:	55                   	push   %rbp
    a295:	48 89 e5             	mov    %rsp,%rbp
    a298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a29c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a2a3:	ff ff 0f 
      }
    a2a6:	5d                   	pop    %rbp
    a2a7:	c3                   	ret

000000000000a2a8 <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    a2a8:	55                   	push   %rbp
    a2a9:	48 89 e5             	mov    %rsp,%rbp
    a2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    a2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b4:	5d                   	pop    %rbp
    a2b5:	c3                   	ret

000000000000a2b6 <_ZSt8_DestroyISt8functionIFvvEEEvPT_>:
    _Destroy(_Tp* __pointer)
    a2b6:	55                   	push   %rbp
    a2b7:	48 89 e5             	mov    %rsp,%rbp
    a2ba:	48 83 ec 10          	sub    $0x10,%rsp
    a2be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    a2c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c6:	48 89 c7             	mov    %rax,%rdi
    a2c9:	e8 a2 9f ff ff       	call   4270 <_ZNSt8functionIFvvEED1Ev>
    }
    a2ce:	90                   	nop
    a2cf:	c9                   	leave
    a2d0:	c3                   	ret

000000000000a2d1 <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    a2d1:	55                   	push   %rbp
    a2d2:	48 89 e5             	mov    %rsp,%rbp
    a2d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2dd:	5d                   	pop    %rbp
    a2de:	c3                   	ret

000000000000a2df <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a2df:	55                   	push   %rbp
    a2e0:	48 89 e5             	mov    %rsp,%rbp
    a2e3:	48 83 ec 20          	sub    $0x20,%rsp
    a2e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a2f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2f7:	48 89 c7             	mov    %rax,%rdi
    a2fa:	e8 22 03 00 00       	call   a621 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    a2ff:	48 89 c2             	mov    %rax,%rdx
    a302:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a30a:	48 89 ce             	mov    %rcx,%rsi
    a30d:	48 89 c7             	mov    %rax,%rdi
    a310:	e8 1b 03 00 00       	call   a630 <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>
	}
    a315:	90                   	nop
    a316:	c9                   	leave
    a317:	c3                   	ret

000000000000a318 <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    a318:	55                   	push   %rbp
    a319:	48 89 e5             	mov    %rsp,%rbp
    a31c:	48 83 ec 10          	sub    $0x10,%rsp
    a320:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a324:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    a328:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a32c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a330:	48 89 d6             	mov    %rdx,%rsi
    a333:	48 89 c7             	mov    %rax,%rdi
    a336:	e8 3d 03 00 00       	call   a678 <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>
	}
    a33b:	90                   	nop
    a33c:	c9                   	leave
    a33d:	c3                   	ret

000000000000a33e <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>:
      constexpr _Head_base()
    a33e:	55                   	push   %rbp
    a33f:	48 89 e5             	mov    %rsp,%rbp
    a342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a346:	90                   	nop
    a347:	5d                   	pop    %rbp
    a348:	c3                   	ret

000000000000a349 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a349:	55                   	push   %rbp
    a34a:	48 89 e5             	mov    %rsp,%rbp
    a34d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a355:	5d                   	pop    %rbp
    a356:	c3                   	ret

000000000000a357 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a357:	55                   	push   %rbp
    a358:	48 89 e5             	mov    %rsp,%rbp
    a35b:	48 83 ec 10          	sub    $0x10,%rsp
    a35f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a367:	48 89 c7             	mov    %rax,%rdi
    a36a:	e8 28 03 00 00       	call   a697 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>
    a36f:	c9                   	leave
    a370:	c3                   	ret
    a371:	90                   	nop

000000000000a372 <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    a372:	55                   	push   %rbp
    a373:	48 89 e5             	mov    %rsp,%rbp
    a376:	48 83 ec 10          	sub    $0x10,%rsp
    a37a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    a37e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a382:	48 89 c7             	mov    %rax,%rdi
    a385:	e8 e4 00 00 00       	call   a46e <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    a38a:	c9                   	leave
    a38b:	c3                   	ret

000000000000a38c <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    a38c:	55                   	push   %rbp
    a38d:	48 89 e5             	mov    %rsp,%rbp
    a390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    a394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a398:	5d                   	pop    %rbp
    a399:	c3                   	ret

000000000000a39a <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    a39a:	55                   	push   %rbp
    a39b:	48 89 e5             	mov    %rsp,%rbp
    a39e:	41 54                	push   %r12
    a3a0:	53                   	push   %rbx
    a3a1:	48 83 ec 20          	sub    $0x20,%rsp
    a3a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a3a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a3ad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    a3b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a3b5:	48 89 c7             	mov    %rax,%rdi
    a3b8:	e8 e8 02 00 00       	call   a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a3bd:	49 89 c4             	mov    %rax,%r12
    a3c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3c4:	48 89 c7             	mov    %rax,%rdi
    a3c7:	e8 d9 02 00 00       	call   a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a3cc:	48 89 c3             	mov    %rax,%rbx
    a3cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3d3:	48 89 c7             	mov    %rax,%rdi
    a3d6:	e8 ca 02 00 00       	call   a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a3db:	4c 89 e2             	mov    %r12,%rdx
    a3de:	48 89 de             	mov    %rbx,%rsi
    a3e1:	48 89 c7             	mov    %rax,%rdi
    a3e4:	e8 ca 02 00 00       	call   a6b3 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a3e9:	48 89 c2             	mov    %rax,%rdx
    a3ec:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a3f0:	48 89 d6             	mov    %rdx,%rsi
    a3f3:	48 89 c7             	mov    %rax,%rdi
    a3f6:	e8 e5 02 00 00       	call   a6e0 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    a3fb:	48 83 c4 20          	add    $0x20,%rsp
    a3ff:	5b                   	pop    %rbx
    a400:	41 5c                	pop    %r12
    a402:	5d                   	pop    %rbp
    a403:	c3                   	ret

000000000000a404 <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a(_II __first, _II __last, _OI __result)
    a404:	55                   	push   %rbp
    a405:	48 89 e5             	mov    %rsp,%rbp
    a408:	41 54                	push   %r12
    a40a:	53                   	push   %rbx
    a40b:	48 83 ec 20          	sub    $0x20,%rsp
    a40f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a413:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a417:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    a41b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a41f:	48 89 c7             	mov    %rax,%rdi
    a422:	e8 7e 02 00 00       	call   a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a427:	49 89 c4             	mov    %rax,%r12
    a42a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a42e:	48 89 c7             	mov    %rax,%rdi
    a431:	e8 6f 02 00 00       	call   a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a436:	48 89 c3             	mov    %rax,%rbx
    a439:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a43d:	48 89 c7             	mov    %rax,%rdi
    a440:	e8 60 02 00 00       	call   a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a445:	4c 89 e2             	mov    %r12,%rdx
    a448:	48 89 de             	mov    %rbx,%rsi
    a44b:	48 89 c7             	mov    %rax,%rdi
    a44e:	e8 9f 02 00 00       	call   a6f2 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a453:	48 89 c2             	mov    %rax,%rdx
    a456:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a45a:	48 89 d6             	mov    %rdx,%rsi
    a45d:	48 89 c7             	mov    %rax,%rdi
    a460:	e8 7b 02 00 00       	call   a6e0 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    a465:	48 83 c4 20          	add    $0x20,%rsp
    a469:	5b                   	pop    %rbx
    a46a:	41 5c                	pop    %r12
    a46c:	5d                   	pop    %rbp
    a46d:	c3                   	ret

000000000000a46e <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a46e:	55                   	push   %rbp
    a46f:	48 89 e5             	mov    %rsp,%rbp
    a472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a476:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    a47d:	ff ff 03 
      }
    a480:	5d                   	pop    %rbp
    a481:	c3                   	ret

000000000000a482 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    a482:	55                   	push   %rbp
    a483:	48 89 e5             	mov    %rsp,%rbp
    a486:	48 83 ec 20          	sub    $0x20,%rsp
    a48a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a48e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a492:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    a496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49a:	48 89 c7             	mov    %rax,%rdi
    a49d:	e8 7e 02 00 00       	call   a720 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>
    a4a2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a4a6:	0f 92 c0             	setb   %al
    a4a9:	0f b6 c0             	movzbl %al,%eax
    a4ac:	48 85 c0             	test   %rax,%rax
    a4af:	0f 95 c0             	setne  %al
    a4b2:	84 c0                	test   %al,%al
    a4b4:	74 1a                	je     a4d0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    a4b6:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a4bd:	55 55 05 
    a4c0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a4c4:	73 05                	jae    a4cb <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    a4c6:	e8 55 8d ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    a4cb:	e8 d0 8b ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a4d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4d4:	48 89 d0             	mov    %rdx,%rax
    a4d7:	48 01 c0             	add    %rax,%rax
    a4da:	48 01 d0             	add    %rdx,%rax
    a4dd:	48 c1 e0 04          	shl    $0x4,%rax
    a4e1:	48 89 c7             	mov    %rax,%rdi
    a4e4:	e8 e7 8d ff ff       	call   32d0 <_Znwm@plt>
    a4e9:	90                   	nop
      }
    a4ea:	c9                   	leave
    a4eb:	c3                   	ret

000000000000a4ec <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>:
      constexpr tuple(tuple&&) = default;
    a4ec:	55                   	push   %rbp
    a4ed:	48 89 e5             	mov    %rsp,%rbp
    a4f0:	48 83 ec 10          	sub    $0x10,%rsp
    a4f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a500:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a504:	48 89 d6             	mov    %rdx,%rsi
    a507:	48 89 c7             	mov    %rax,%rdi
    a50a:	e8 25 02 00 00       	call   a734 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>
    a50f:	90                   	nop
    a510:	c9                   	leave
    a511:	c3                   	ret

000000000000a512 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    a512:	55                   	push   %rbp
    a513:	48 89 e5             	mov    %rsp,%rbp
    a516:	41 56                	push   %r14
    a518:	41 55                	push   %r13
    a51a:	41 54                	push   %r12
    a51c:	53                   	push   %rbx
    a51d:	48 83 ec 40          	sub    $0x40,%rsp
    a521:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    a525:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    a529:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    a52d:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    a531:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a535:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    a539:	48 89 de             	mov    %rbx,%rsi
    a53c:	bf 10 00 00 00       	mov    $0x10,%edi
    a541:	e8 43 93 ff ff       	call   3889 <_ZnwmPv>
    a546:	49 89 c4             	mov    %rax,%r12
    a549:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a54f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a553:	48 89 c7             	mov    %rax,%rdi
    a556:	e8 de d4 ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a55b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a55f:	48 89 c7             	mov    %rax,%rdi
    a562:	e8 c4 d4 ff ff       	call   7a2b <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a567:	48 89 c2             	mov    %rax,%rdx
    a56a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a56e:	48 89 d6             	mov    %rdx,%rsi
    a571:	48 89 c7             	mov    %rax,%rdi
    a574:	e8 73 ff ff ff       	call   a4ec <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>
    a579:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a57d:	48 89 c7             	mov    %rax,%rdi
    a580:	e8 98 d4 ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a585:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a589:	48 89 c6             	mov    %rax,%rsi
    a58c:	4c 89 e7             	mov    %r12,%rdi
    a58f:	e8 be 01 00 00       	call   a752 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>
    a594:	eb 1e                	jmp    a5b4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0xa2>
    a596:	49 89 c5             	mov    %rax,%r13
    a599:	45 84 f6             	test   %r14b,%r14b
    a59c:	74 0b                	je     a5a9 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0x97>
    a59e:	48 89 de             	mov    %rbx,%rsi
    a5a1:	4c 89 e7             	mov    %r12,%rdi
    a5a4:	e8 f2 92 ff ff       	call   389b <_ZdlPvS_>
    a5a9:	4c 89 e8             	mov    %r13,%rax
    a5ac:	48 89 c7             	mov    %rax,%rdi
    a5af:	e8 2c 8f ff ff       	call   34e0 <_Unwind_Resume@plt>
    a5b4:	48 83 c4 40          	add    $0x40,%rsp
    a5b8:	5b                   	pop    %rbx
    a5b9:	41 5c                	pop    %r12
    a5bb:	41 5d                	pop    %r13
    a5bd:	41 5e                	pop    %r14
    a5bf:	5d                   	pop    %rbp
    a5c0:	c3                   	ret
    a5c1:	90                   	nop

000000000000a5c2 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() const noexcept
    a5c2:	55                   	push   %rbp
    a5c3:	48 89 e5             	mov    %rsp,%rbp
    a5c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    a5ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ce:	5d                   	pop    %rbp
    a5cf:	c3                   	ret

000000000000a5d0 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    a5d0:	55                   	push   %rbp
    a5d1:	48 89 e5             	mov    %rsp,%rbp
    a5d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5dc:	5d                   	pop    %rbp
    a5dd:	c3                   	ret

000000000000a5de <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>:
    a5de:	55                   	push   %rbp
    a5df:	48 89 e5             	mov    %rsp,%rbp
    a5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ea:	5d                   	pop    %rbp
    a5eb:	c3                   	ret

000000000000a5ec <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>:
    a5ec:	55                   	push   %rbp
    a5ed:	48 89 e5             	mov    %rsp,%rbp
    a5f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f8:	5d                   	pop    %rbp
    a5f9:	c3                   	ret

000000000000a5fa <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>:
      constexpr _Head_base()
    a5fa:	55                   	push   %rbp
    a5fb:	48 89 e5             	mov    %rsp,%rbp
    a5fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a602:	90                   	nop
    a603:	5d                   	pop    %rbp
    a604:	c3                   	ret

000000000000a605 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a605:	55                   	push   %rbp
    a606:	48 89 e5             	mov    %rsp,%rbp
    a609:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a60d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a611:	5d                   	pop    %rbp
    a612:	c3                   	ret

000000000000a613 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    a613:	55                   	push   %rbp
    a614:	48 89 e5             	mov    %rsp,%rbp
    a617:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a61b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a61f:	5d                   	pop    %rbp
    a620:	c3                   	ret

000000000000a621 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a621:	55                   	push   %rbp
    a622:	48 89 e5             	mov    %rsp,%rbp
    a625:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a62d:	5d                   	pop    %rbp
    a62e:	c3                   	ret
    a62f:	90                   	nop

000000000000a630 <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    a630:	55                   	push   %rbp
    a631:	48 89 e5             	mov    %rsp,%rbp
    a634:	53                   	push   %rbx
    a635:	48 83 ec 28          	sub    $0x28,%rsp
    a639:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a63d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a641:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a645:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a649:	48 89 c6             	mov    %rax,%rsi
    a64c:	bf 08 00 00 00       	mov    $0x8,%edi
    a651:	e8 33 92 ff ff       	call   3889 <_ZnwmPv>
    a656:	48 89 c3             	mov    %rax,%rbx
    a659:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a65d:	48 89 c7             	mov    %rax,%rdi
    a660:	e8 bc ff ff ff       	call   a621 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    a665:	48 89 c6             	mov    %rax,%rsi
    a668:	48 89 df             	mov    %rbx,%rdi
    a66b:	e8 fe 95 ff ff       	call   3c6e <_ZNSt6threadC1EOS_>
    a670:	90                   	nop
    a671:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a675:	c9                   	leave
    a676:	c3                   	ret
    a677:	90                   	nop

000000000000a678 <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>:
	destroy(_Up* __p)
    a678:	55                   	push   %rbp
    a679:	48 89 e5             	mov    %rsp,%rbp
    a67c:	48 83 ec 10          	sub    $0x10,%rsp
    a680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    a688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a68c:	48 89 c7             	mov    %rax,%rdi
    a68f:	e8 b6 95 ff ff       	call   3c4a <_ZNSt6threadD1Ev>
    a694:	90                   	nop
    a695:	c9                   	leave
    a696:	c3                   	ret

000000000000a697 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a697:	55                   	push   %rbp
    a698:	48 89 e5             	mov    %rsp,%rbp
    a69b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a69f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a3:	5d                   	pop    %rbp
    a6a4:	c3                   	ret

000000000000a6a5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>:
    __niter_base(_Iterator __it)
    a6a5:	55                   	push   %rbp
    a6a6:	48 89 e5             	mov    %rsp,%rbp
    a6a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    a6ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b1:	5d                   	pop    %rbp
    a6b2:	c3                   	ret

000000000000a6b3 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    a6b3:	55                   	push   %rbp
    a6b4:	48 89 e5             	mov    %rsp,%rbp
    a6b7:	48 83 ec 20          	sub    $0x20,%rsp
    a6bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a6c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    a6c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a6cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a6cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6d3:	48 89 ce             	mov    %rcx,%rsi
    a6d6:	48 89 c7             	mov    %rax,%rdi
    a6d9:	e8 9e 00 00 00       	call   a77c <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a6de:	c9                   	leave
    a6df:	c3                   	ret

000000000000a6e0 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    a6e0:	55                   	push   %rbp
    a6e1:	48 89 e5             	mov    %rsp,%rbp
    a6e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    a6ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6f0:	5d                   	pop    %rbp
    a6f1:	c3                   	ret

000000000000a6f2 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
    a6f2:	55                   	push   %rbp
    a6f3:	48 89 e5             	mov    %rsp,%rbp
    a6f6:	48 83 ec 20          	sub    $0x20,%rsp
    a6fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a702:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
    a706:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a70a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a70e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a712:	48 89 ce             	mov    %rcx,%rsi
    a715:	48 89 c7             	mov    %rax,%rdi
    a718:	e8 8c 00 00 00       	call   a7a9 <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a71d:	c9                   	leave
    a71e:	c3                   	ret
    a71f:	90                   	nop

000000000000a720 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a720:	55                   	push   %rbp
    a721:	48 89 e5             	mov    %rsp,%rbp
    a724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a728:	48 b8 aa aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaa,%rax
    a72f:	aa aa 02 
      }
    a732:	5d                   	pop    %rbp
    a733:	c3                   	ret

000000000000a734 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>:
      _Tuple_impl(_Tuple_impl&& __in)
    a734:	55                   	push   %rbp
    a735:	48 89 e5             	mov    %rsp,%rbp
    a738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a73c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    a740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a744:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a748:	48 8b 12             	mov    (%rdx),%rdx
    a74b:	48 89 10             	mov    %rdx,(%rax)
      { }
    a74e:	90                   	nop
    a74f:	5d                   	pop    %rbp
    a750:	c3                   	ret
    a751:	90                   	nop

000000000000a752 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    a752:	55                   	push   %rbp
    a753:	48 89 e5             	mov    %rsp,%rbp
    a756:	48 83 ec 20          	sub    $0x20,%rsp
    a75a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a75e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    a762:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a766:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a76a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a76e:	48 89 ce             	mov    %rcx,%rsi
    a771:	48 89 c7             	mov    %rax,%rdi
    a774:	e8 5d 00 00 00       	call   a7d6 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>
      { }
    a779:	90                   	nop
    a77a:	c9                   	leave
    a77b:	c3                   	ret

000000000000a77c <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    a77c:	55                   	push   %rbp
    a77d:	48 89 e5             	mov    %rsp,%rbp
    a780:	48 83 ec 20          	sub    $0x20,%rsp
    a784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a788:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a78c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    a790:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a794:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a79c:	48 89 ce             	mov    %rcx,%rsi
    a79f:	48 89 c7             	mov    %rax,%rdi
    a7a2:	e8 70 00 00 00       	call   a817 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    a7a7:	c9                   	leave
    a7a8:	c3                   	ret

000000000000a7a9 <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
    a7a9:	55                   	push   %rbp
    a7aa:	48 89 e5             	mov    %rsp,%rbp
    a7ad:	48 83 ec 20          	sub    $0x20,%rsp
    a7b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				       _Category>::__copy_move_b(__first,
    a7bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c9:	48 89 ce             	mov    %rcx,%rsi
    a7cc:	48 89 c7             	mov    %rax,%rdi
    a7cf:	e8 a2 00 00 00       	call   a876 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    a7d4:	c9                   	leave
    a7d5:	c3                   	ret

000000000000a7d6 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    a7d6:	55                   	push   %rbp
    a7d7:	48 89 e5             	mov    %rsp,%rbp
    a7da:	48 83 ec 20          	sub    $0x20,%rsp
    a7de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    a7ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7ee:	48 89 c7             	mov    %rax,%rdi
    a7f1:	e8 f2 00 00 00       	call   a8e8 <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
    a7f6:	48 89 c7             	mov    %rax,%rdi
    a7f9:	e8 04 01 00 00       	call   a902 <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>
    a7fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a802:	48 8b 00             	mov    (%rax),%rax
    a805:	48 89 02             	mov    %rax,(%rdx)
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    a808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a80c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a813:	00 
      { }
    a814:	90                   	nop
    a815:	c9                   	leave
    a816:	c3                   	ret

000000000000a817 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    a817:	55                   	push   %rbp
    a818:	48 89 e5             	mov    %rsp,%rbp
    a81b:	48 83 ec 30          	sub    $0x30,%rsp
    a81f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a823:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a827:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    a82b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a82f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    a833:	48 c1 f8 03          	sar    $0x3,%rax
    a837:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    a83b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a840:	74 1f                	je     a861 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    a842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a846:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a84d:	00 
    a84e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a852:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a856:	48 89 ce             	mov    %rcx,%rsi
    a859:	48 89 c7             	mov    %rax,%rdi
    a85c:	e8 1f 8c ff ff       	call   3480 <memmove@plt>
	  return __result + _Num;
    a861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a865:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a86c:	00 
    a86d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a871:	48 01 d0             	add    %rdx,%rax
	}
    a874:	c9                   	leave
    a875:	c3                   	ret

000000000000a876 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
    a876:	55                   	push   %rbp
    a877:	48 89 e5             	mov    %rsp,%rbp
    a87a:	48 83 ec 30          	sub    $0x30,%rsp
    a87e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a882:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a886:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    a88a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a88e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    a892:	48 c1 f8 03          	sar    $0x3,%rax
    a896:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    a89a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a89f:	74 30                	je     a8d1 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x5b>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
    a8a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a8ac:	00 
    a8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b1:	48 c1 e0 03          	shl    $0x3,%rax
    a8b5:	48 f7 d8             	neg    %rax
    a8b8:	48 89 c1             	mov    %rax,%rcx
    a8bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a8bf:	48 01 c1             	add    %rax,%rcx
    a8c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8c6:	48 89 c6             	mov    %rax,%rsi
    a8c9:	48 89 cf             	mov    %rcx,%rdi
    a8cc:	e8 af 8b ff ff       	call   3480 <memmove@plt>
	  return __result - _Num;
    a8d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8d5:	48 c1 e0 03          	shl    $0x3,%rax
    a8d9:	48 f7 d8             	neg    %rax
    a8dc:	48 89 c2             	mov    %rax,%rdx
    a8df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a8e3:	48 01 d0             	add    %rdx,%rax
	}
    a8e6:	c9                   	leave
    a8e7:	c3                   	ret

000000000000a8e8 <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
    a8e8:	55                   	push   %rbp
    a8e9:	48 89 e5             	mov    %rsp,%rbp
    a8ec:	48 83 ec 10          	sub    $0x10,%rsp
    a8f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a8f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f8:	48 89 c7             	mov    %rax,%rdi
    a8fb:	e8 10 00 00 00       	call   a910 <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    a900:	c9                   	leave
    a901:	c3                   	ret

000000000000a902 <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a902:	55                   	push   %rbp
    a903:	48 89 e5             	mov    %rsp,%rbp
    a906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a90a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a90e:	5d                   	pop    %rbp
    a90f:	c3                   	ret

000000000000a910 <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a910:	55                   	push   %rbp
    a911:	48 89 e5             	mov    %rsp,%rbp
    a914:	48 83 ec 10          	sub    $0x10,%rsp
    a918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a920:	48 89 c7             	mov    %rax,%rdi
    a923:	e8 02 00 00 00       	call   a92a <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>
    a928:	c9                   	leave
    a929:	c3                   	ret

000000000000a92a <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a92a:	55                   	push   %rbp
    a92b:	48 89 e5             	mov    %rsp,%rbp
    a92e:	48 83 ec 10          	sub    $0x10,%rsp
    a932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a93a:	48 89 c7             	mov    %rax,%rdi
    a93d:	e8 02 00 00 00       	call   a944 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>
    a942:	c9                   	leave
    a943:	c3                   	ret

000000000000a944 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a944:	55                   	push   %rbp
    a945:	48 89 e5             	mov    %rsp,%rbp
    a948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a94c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a950:	48 8b 00             	mov    (%rax),%rax
    a953:	5d                   	pop    %rbp
    a954:	c3                   	ret
    a955:	90                   	nop

000000000000a956 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>:
      struct _State_impl : public _State
    a956:	55                   	push   %rbp
    a957:	48 89 e5             	mov    %rsp,%rbp
    a95a:	48 83 ec 10          	sub    $0x10,%rsp
    a95e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a962:	48 8d 15 67 43 01 00 	lea    0x14367(%rip),%rdx        # 1ecd0 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    a969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a96d:	48 89 10             	mov    %rdx,(%rax)
    a970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a974:	48 89 c7             	mov    %rax,%rdi
    a977:	e8 94 87 ff ff       	call   3110 <_ZNSt6thread6_StateD2Ev@plt>
    a97c:	90                   	nop
    a97d:	c9                   	leave
    a97e:	c3                   	ret
    a97f:	90                   	nop

000000000000a980 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED0Ev>:
    a980:	55                   	push   %rbp
    a981:	48 89 e5             	mov    %rsp,%rbp
    a984:	48 83 ec 10          	sub    $0x10,%rsp
    a988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a990:	48 89 c7             	mov    %rax,%rdi
    a993:	e8 be ff ff ff       	call   a956 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>
    a998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a99c:	be 18 00 00 00       	mov    $0x18,%esi
    a9a1:	48 89 c7             	mov    %rax,%rdi
    a9a4:	e8 37 89 ff ff       	call   32e0 <_ZdlPvm@plt>
    a9a9:	c9                   	leave
    a9aa:	c3                   	ret
    a9ab:	90                   	nop

000000000000a9ac <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEE6_M_runEv>:
	_M_run() { _M_func(); }
    a9ac:	55                   	push   %rbp
    a9ad:	48 89 e5             	mov    %rsp,%rbp
    a9b0:	48 83 ec 10          	sub    $0x10,%rsp
    a9b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9bc:	48 83 c0 08          	add    $0x8,%rax
    a9c0:	48 89 c7             	mov    %rax,%rdi
    a9c3:	e8 04 00 00 00       	call   a9cc <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>
    a9c8:	90                   	nop
    a9c9:	c9                   	leave
    a9ca:	c3                   	ret
    a9cb:	90                   	nop

000000000000a9cc <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>:
	operator()()
    a9cc:	55                   	push   %rbp
    a9cd:	48 89 e5             	mov    %rsp,%rbp
    a9d0:	48 83 ec 10          	sub    $0x10,%rsp
    a9d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  return _M_invoke(_Indices());
    a9d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9dc:	48 89 c7             	mov    %rax,%rdi
    a9df:	e8 04 00 00 00       	call   a9e8 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>
    a9e4:	90                   	nop
	}
    a9e5:	c9                   	leave
    a9e6:	c3                   	ret
    a9e7:	90                   	nop

000000000000a9e8 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>:
	  _M_invoke(_Index_tuple<_Ind...>)
    a9e8:	55                   	push   %rbp
    a9e9:	48 89 e5             	mov    %rsp,%rbp
    a9ec:	53                   	push   %rbx
    a9ed:	48 83 ec 18          	sub    $0x18,%rsp
    a9f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
    a9f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9f9:	48 89 c7             	mov    %rax,%rdi
    a9fc:	e8 31 00 00 00       	call   aa32 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    aa01:	48 89 c7             	mov    %rax,%rdi
    aa04:	e8 59 00 00 00       	call   aa62 <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    aa09:	48 89 c3             	mov    %rax,%rbx
    aa0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa10:	48 89 c7             	mov    %rax,%rdi
    aa13:	e8 1a 00 00 00       	call   aa32 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    aa18:	48 89 c7             	mov    %rax,%rdi
    aa1b:	e8 20 00 00 00       	call   aa40 <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    aa20:	48 89 de             	mov    %rbx,%rsi
    aa23:	48 89 c7             	mov    %rax,%rdi
    aa26:	e8 59 00 00 00       	call   aa84 <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>
    aa2b:	90                   	nop
    aa2c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa30:	c9                   	leave
    aa31:	c3                   	ret

000000000000aa32 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    aa32:	55                   	push   %rbp
    aa33:	48 89 e5             	mov    %rsp,%rbp
    aa36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    aa3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa3e:	5d                   	pop    %rbp
    aa3f:	c3                   	ret

000000000000aa40 <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    aa40:	55                   	push   %rbp
    aa41:	48 89 e5             	mov    %rsp,%rbp
    aa44:	48 83 ec 10          	sub    $0x10,%rsp
    aa48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    aa4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa50:	48 89 c7             	mov    %rax,%rdi
    aa53:	e8 6a 00 00 00       	call   aac2 <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    aa58:	48 89 c7             	mov    %rax,%rdi
    aa5b:	e8 7c 00 00 00       	call   aadc <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    }
    aa60:	c9                   	leave
    aa61:	c3                   	ret

000000000000aa62 <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    aa62:	55                   	push   %rbp
    aa63:	48 89 e5             	mov    %rsp,%rbp
    aa66:	48 83 ec 10          	sub    $0x10,%rsp
    aa6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    aa6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa72:	48 89 c7             	mov    %rax,%rdi
    aa75:	e8 70 00 00 00       	call   aaea <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    aa7a:	48 89 c7             	mov    %rax,%rdi
    aa7d:	e8 48 b5 ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    }
    aa82:	c9                   	leave
    aa83:	c3                   	ret

000000000000aa84 <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
    aa84:	55                   	push   %rbp
    aa85:	48 89 e5             	mov    %rsp,%rbp
    aa88:	53                   	push   %rbx
    aa89:	48 83 ec 18          	sub    $0x18,%rsp
    aa8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    aa95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa99:	48 89 c7             	mov    %rax,%rdi
    aa9c:	e8 29 b5 ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    aaa1:	48 89 c3             	mov    %rax,%rbx
    aaa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaa8:	48 89 c7             	mov    %rax,%rdi
    aaab:	e8 2c 00 00 00       	call   aadc <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    aab0:	48 89 de             	mov    %rbx,%rsi
    aab3:	48 89 c7             	mov    %rax,%rdi
    aab6:	e8 49 00 00 00       	call   ab04 <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
    aabb:	90                   	nop
    }
    aabc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aac0:	c9                   	leave
    aac1:	c3                   	ret

000000000000aac2 <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    aac2:	55                   	push   %rbp
    aac3:	48 89 e5             	mov    %rsp,%rbp
    aac6:	48 83 ec 10          	sub    $0x10,%rsp
    aaca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    aace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aad2:	48 89 c7             	mov    %rax,%rdi
    aad5:	e8 65 00 00 00       	call   ab3f <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>
    aada:	c9                   	leave
    aadb:	c3                   	ret

000000000000aadc <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    aadc:	55                   	push   %rbp
    aadd:	48 89 e5             	mov    %rsp,%rbp
    aae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    aae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae8:	5d                   	pop    %rbp
    aae9:	c3                   	ret

000000000000aaea <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    aaea:	55                   	push   %rbp
    aaeb:	48 89 e5             	mov    %rsp,%rbp
    aaee:	48 83 ec 10          	sub    $0x10,%rsp
    aaf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    aaf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aafa:	48 89 c7             	mov    %rax,%rdi
    aafd:	e8 5b 00 00 00       	call   ab5d <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>
    ab02:	c9                   	leave
    ab03:	c3                   	ret

000000000000ab04 <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    ab04:	55                   	push   %rbp
    ab05:	48 89 e5             	mov    %rsp,%rbp
    ab08:	53                   	push   %rbx
    ab09:	48 83 ec 18          	sub    $0x18,%rsp
    ab0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    ab15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab19:	48 89 c7             	mov    %rax,%rdi
    ab1c:	e8 bb ff ff ff       	call   aadc <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    ab21:	48 8b 18             	mov    (%rax),%rbx
    ab24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab28:	48 89 c7             	mov    %rax,%rdi
    ab2b:	e8 9a b4 ff ff       	call   5fca <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    ab30:	48 8b 00             	mov    (%rax),%rax
    ab33:	48 89 c7             	mov    %rax,%rdi
    ab36:	ff d3                	call   *%rbx
    ab38:	90                   	nop
    ab39:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ab3d:	c9                   	leave
    ab3e:	c3                   	ret

000000000000ab3f <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ab3f:	55                   	push   %rbp
    ab40:	48 89 e5             	mov    %rsp,%rbp
    ab43:	48 83 ec 10          	sub    $0x10,%rsp
    ab47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab4f:	48 83 c0 08          	add    $0x8,%rax
    ab53:	48 89 c7             	mov    %rax,%rdi
    ab56:	e8 1c 00 00 00       	call   ab77 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>
    ab5b:	c9                   	leave
    ab5c:	c3                   	ret

000000000000ab5d <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ab5d:	55                   	push   %rbp
    ab5e:	48 89 e5             	mov    %rsp,%rbp
    ab61:	48 83 ec 10          	sub    $0x10,%rsp
    ab65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab6d:	48 89 c7             	mov    %rax,%rdi
    ab70:	e8 10 00 00 00       	call   ab85 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    ab75:	c9                   	leave
    ab76:	c3                   	ret

000000000000ab77 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    ab77:	55                   	push   %rbp
    ab78:	48 89 e5             	mov    %rsp,%rbp
    ab7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab83:	5d                   	pop    %rbp
    ab84:	c3                   	ret

000000000000ab85 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    ab85:	55                   	push   %rbp
    ab86:	48 89 e5             	mov    %rsp,%rbp
    ab89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab91:	5d                   	pop    %rbp
    ab92:	c3                   	ret
    ab93:	90                   	nop

000000000000ab94 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

Device::Device(const Instance &crInstance, const Surface &crSurface) {
    ab94:	55                   	push   %rbp
    ab95:	48 89 e5             	mov    %rsp,%rbp
    ab98:	41 54                	push   %r12
    ab9a:	53                   	push   %rbx
    ab9b:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    aba2:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    aba9:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    abb0:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    abb7:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    abbe:	48 89 c7             	mov    %rax,%rdi
    abc1:	e8 7c 0d 00 00       	call   b942 <_ZNK4neko8InstancedeEv>
    abc6:	48 8b 10             	mov    (%rax),%rdx
    abc9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    abcd:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    abd4:	48 89 ce             	mov    %rcx,%rsi
    abd7:	48 89 c7             	mov    %rax,%rdi
    abda:	e8 77 0b 00 00       	call   b756 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>
    abdf:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    abe3:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    abea:	48 89 d6             	mov    %rdx,%rsi
    abed:	48 89 c7             	mov    %rax,%rdi
    abf0:	e8 59 04 00 00       	call   b04e <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    abf5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    abf9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    abfd:	48 89 c7             	mov    %rax,%rdi
    ac00:	e8 ed 0d 00 00       	call   b9f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  u32 selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    ac05:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    ac0c:	48 89 c7             	mov    %rax,%rdi
    ac0f:	e8 40 0d 00 00       	call   b954 <_ZNK4neko7SurfacedeEv>
    ac14:	48 8b 10             	mov    (%rax),%rdx
    ac17:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    ac1b:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ac22:	48 89 ce             	mov    %rcx,%rsi
    ac25:	48 89 c7             	mov    %rax,%rdi
    ac28:	e8 f9 01 00 00       	call   ae26 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    ac2d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  u32 selectedQueueIndex = 0;
    ac30:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    ac37:	f3 0f 10 05 0d 73 00 	movss  0x730d(%rip),%xmm0        # 11f4c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    ac3e:	00 
    ac3f:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    ac44:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ac48:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    ac4f:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    ac56:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    ac5d:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    ac5e:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    ac65:	00 00 00 
  queueInfo.pNext = nullptr;
    ac68:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    ac6f:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    ac73:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ac76:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    ac7c:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    ac83:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    ac86:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    ac8a:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    ac91:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    ac98:	b8 00 00 00 00       	mov    $0x0,%eax
    ac9d:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    aca2:	48 89 d7             	mov    %rdx,%rdi
    aca5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    aca8:	48 89 fa             	mov    %rdi,%rdx
    acab:	89 02                	mov    %eax,(%rdx)
    acad:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    acb1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    acb5:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    acbc:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    acc3:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    acca:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    acd1:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    acd8:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    acd9:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    ace0:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    ace3:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    acea:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    aced:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    acf4:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    acfb:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    ad02:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    ad09:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
    ad10:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    ad17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad1b:	48 89 d1             	mov    %rdx,%rcx
    ad1e:	ba 00 00 00 00       	mov    $0x0,%edx
    ad23:	48 89 c7             	mov    %rax,%rdi
    ad26:	e8 15 87 ff ff       	call   3440 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    ad2b:	85 c0                	test   %eax,%eax
    ad2d:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    ad30:	84 c0                	test   %al,%al
    ad32:	74 3b                	je     ad6f <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1db>
    throw std::runtime_error("Failed to create logical device.");
    ad34:	bf 10 00 00 00       	mov    $0x10,%edi
    ad39:	e8 e2 83 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    ad3e:	48 89 c3             	mov    %rax,%rbx
    ad41:	48 8d 05 80 70 00 00 	lea    0x7080(%rip),%rax        # 11dc8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    ad48:	48 89 c6             	mov    %rax,%rsi
    ad4b:	48 89 df             	mov    %rbx,%rdi
    ad4e:	e8 6d 83 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    ad53:	48 8b 05 5e 42 01 00 	mov    0x1425e(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ad5a:	48 89 c2             	mov    %rax,%rdx
    ad5d:	48 8d 05 dc 3f 01 00 	lea    0x13fdc(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ad64:	48 89 c6             	mov    %rax,%rsi
    ad67:	48 89 df             	mov    %rbx,%rdi
    ad6a:	e8 51 87 ff ff       	call   34c0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    ad6f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ad76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad7a:	48 89 50 08          	mov    %rdx,0x8(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    ad7e:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ad85:	48 8b 00             	mov    (%rax),%rax
    ad88:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    ad8c:	8b 55 e0             	mov    -0x20(%rbp),%edx
    ad8f:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    ad92:	48 89 c7             	mov    %rax,%rdi
    ad95:	e8 46 86 ff ff       	call   33e0 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    ad9a:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    ad9e:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ada5:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    ada8:	89 48 10             	mov    %ecx,0x10(%rax)
    adab:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    adb2:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    adb5:	89 48 14             	mov    %ecx,0x14(%rax)
    adb8:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    adbf:	48 89 50 18          	mov    %rdx,0x18(%rax)
}
    adc3:	eb 30                	jmp    adf5 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x261>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    adc5:	48 89 c3             	mov    %rax,%rbx
    adc8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    adcc:	48 89 c7             	mov    %rax,%rdi
    adcf:	e8 1e 0c 00 00       	call   b9f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    add4:	48 89 d8             	mov    %rbx,%rax
    add7:	48 89 c7             	mov    %rax,%rdi
    adda:	e8 01 87 ff ff       	call   34e0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create logical device.");
    addf:	49 89 c4             	mov    %rax,%r12
    ade2:	48 89 df             	mov    %rbx,%rdi
    ade5:	e8 d6 83 ff ff       	call   31c0 <__cxa_free_exception@plt>
    adea:	4c 89 e0             	mov    %r12,%rax
    aded:	48 89 c7             	mov    %rax,%rdi
    adf0:	e8 eb 86 ff ff       	call   34e0 <_Unwind_Resume@plt>
}
    adf5:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    adfc:	5b                   	pop    %rbx
    adfd:	41 5c                	pop    %r12
    adff:	5d                   	pop    %rbp
    ae00:	c3                   	ret
    ae01:	90                   	nop

000000000000ae02 <_ZN4neko6DeviceD1Ev>:

Device::~Device() { vkDestroyDevice(mLogicalDevice, nullptr); }
    ae02:	55                   	push   %rbp
    ae03:	48 89 e5             	mov    %rsp,%rbp
    ae06:	48 83 ec 10          	sub    $0x10,%rsp
    ae0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae12:	48 8b 00             	mov    (%rax),%rax
    ae15:	be 00 00 00 00       	mov    $0x0,%esi
    ae1a:	48 89 c7             	mov    %rax,%rdi
    ae1d:	e8 1e 84 ff ff       	call   3240 <vkDestroyDevice@plt>
    ae22:	90                   	nop
    ae23:	c9                   	leave
    ae24:	c3                   	ret
    ae25:	90                   	nop

000000000000ae26 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

u32 Device::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                            VkSurfaceKHR surface) {
    ae26:	55                   	push   %rbp
    ae27:	48 89 e5             	mov    %rsp,%rbp
    ae2a:	41 54                	push   %r12
    ae2c:	53                   	push   %rbx
    ae2d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    ae31:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    ae35:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    ae39:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  u32 queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    ae40:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    ae44:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ae48:	ba 00 00 00 00       	mov    $0x0,%edx
    ae4d:	48 89 ce             	mov    %rcx,%rsi
    ae50:	48 89 c7             	mov    %rax,%rdi
    ae53:	e8 98 83 ff ff       	call   31f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    ae58:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ae5b:	85 c0                	test   %eax,%eax
    ae5d:	75 3b                	jne    ae9a <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    ae5f:	bf 10 00 00 00       	mov    $0x10,%edi
    ae64:	e8 b7 82 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    ae69:	48 89 c3             	mov    %rax,%rbx
    ae6c:	48 8d 05 76 6f 00 00 	lea    0x6f76(%rip),%rax        # 11de9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    ae73:	48 89 c6             	mov    %rax,%rsi
    ae76:	48 89 df             	mov    %rbx,%rdi
    ae79:	e8 42 82 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    ae7e:	48 8b 05 33 41 01 00 	mov    0x14133(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ae85:	48 89 c2             	mov    %rax,%rdx
    ae88:	48 8d 05 b1 3e 01 00 	lea    0x13eb1(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ae8f:	48 89 c6             	mov    %rax,%rsi
    ae92:	48 89 df             	mov    %rbx,%rdi
    ae95:	e8 26 86 ff ff       	call   34c0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    ae9a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ae9d:	89 c3                	mov    %eax,%ebx
    ae9f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    aea3:	48 89 c7             	mov    %rax,%rdi
    aea6:	e8 8b 0b 00 00       	call   ba36 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    aeab:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    aeaf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    aeb3:	48 89 de             	mov    %rbx,%rsi
    aeb6:	48 89 c7             	mov    %rax,%rdi
    aeb9:	e8 b0 0b 00 00       	call   ba6e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    aebe:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    aec2:	48 89 c7             	mov    %rax,%rdi
    aec5:	e8 88 0b 00 00       	call   ba52 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    aeca:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    aece:	48 89 c7             	mov    %rax,%rdi
    aed1:	e8 52 0c 00 00       	call   bb28 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    aed6:	48 89 c2             	mov    %rax,%rdx
    aed9:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    aedd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    aee1:	48 89 ce             	mov    %rcx,%rsi
    aee4:	48 89 c7             	mov    %rax,%rdi
    aee7:	e8 04 83 ff ff       	call   31f0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  u32 iQueueFamily = 0;
    aeec:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    aef3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    aef7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    aefb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aeff:	48 89 c7             	mov    %rax,%rdi
    af02:	e8 45 0c 00 00       	call   bb4c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    af07:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    af0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    af0f:	48 89 c7             	mov    %rax,%rdi
    af12:	e8 5b 0c 00 00       	call   bb72 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    af17:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    af1b:	eb 78                	jmp    af95 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    af1d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    af21:	48 89 c7             	mov    %rax,%rdi
    af24:	e8 cd 0c 00 00       	call   bbf6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    af29:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    af2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af31:	8b 00                	mov    (%rax),%eax
    af33:	83 e0 01             	and    $0x1,%eax
    af36:	85 c0                	test   %eax,%eax
    af38:	74 4f                	je     af89 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    af3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af3e:	8b 00                	mov    (%rax),%eax
    af40:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    af43:	85 c0                	test   %eax,%eax
    af45:	74 42                	je     af89 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    af47:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    af4e:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    af52:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    af59:	8b 75 ec             	mov    -0x14(%rbp),%esi
    af5c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    af60:	48 89 c7             	mov    %rax,%rdi
    af63:	e8 d8 83 ff ff       	call   3340 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    af68:	8b 45 9c             	mov    -0x64(%rbp),%eax
    af6b:	85 c0                	test   %eax,%eax
    af6d:	74 16                	je     af85 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    af6f:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    af72:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    af76:	48 89 c7             	mov    %rax,%rdi
    af79:	e8 66 0b 00 00       	call   bae4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    af7e:	89 d8                	mov    %ebx,%eax
    af80:	e9 c0 00 00 00       	jmp    b045 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    af85:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    af89:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    af8d:	48 89 c7             	mov    %rax,%rdi
    af90:	e8 41 0c 00 00       	call   bbd6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    af95:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    af99:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    af9d:	48 89 d6             	mov    %rdx,%rsi
    afa0:	48 89 c7             	mov    %rax,%rdi
    afa3:	e8 f3 0b 00 00       	call   bb9b <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    afa8:	84 c0                	test   %al,%al
    afaa:	0f 85 6d ff ff ff    	jne    af1d <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    afb0:	bf 10 00 00 00       	mov    $0x10,%edi
    afb5:	e8 66 81 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    afba:	48 89 c3             	mov    %rax,%rbx
    afbd:	48 8d 05 44 6e 00 00 	lea    0x6e44(%rip),%rax        # 11e08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    afc4:	48 89 c6             	mov    %rax,%rsi
    afc7:	48 89 df             	mov    %rbx,%rdi
    afca:	e8 f1 80 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    afcf:	48 8b 05 e2 3f 01 00 	mov    0x13fe2(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    afd6:	48 89 c2             	mov    %rax,%rdx
    afd9:	48 8d 05 60 3d 01 00 	lea    0x13d60(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    afe0:	48 89 c6             	mov    %rax,%rsi
    afe3:	48 89 df             	mov    %rbx,%rdi
    afe6:	e8 d5 84 ff ff       	call   34c0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    afeb:	49 89 c4             	mov    %rax,%r12
    afee:	48 89 df             	mov    %rbx,%rdi
    aff1:	e8 ca 81 ff ff       	call   31c0 <__cxa_free_exception@plt>
    aff6:	4c 89 e0             	mov    %r12,%rax
    aff9:	48 89 c7             	mov    %rax,%rdi
    affc:	e8 df 84 ff ff       	call   34e0 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    b001:	48 89 c3             	mov    %rax,%rbx
    b004:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    b008:	48 89 c7             	mov    %rax,%rdi
    b00b:	e8 42 0a 00 00       	call   ba52 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    b010:	48 89 d8             	mov    %rbx,%rax
    b013:	48 89 c7             	mov    %rax,%rdi
    b016:	e8 c5 84 ff ff       	call   34e0 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    b01b:	49 89 c4             	mov    %rax,%r12
    b01e:	48 89 df             	mov    %rbx,%rdi
    b021:	e8 9a 81 ff ff       	call   31c0 <__cxa_free_exception@plt>
    b026:	4c 89 e3             	mov    %r12,%rbx
    b029:	eb 03                	jmp    b02e <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    b02b:	48 89 c3             	mov    %rax,%rbx
    b02e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b032:	48 89 c7             	mov    %rax,%rdi
    b035:	e8 aa 0a 00 00       	call   bae4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    b03a:	48 89 d8             	mov    %rbx,%rax
    b03d:	48 89 c7             	mov    %rax,%rdi
    b040:	e8 9b 84 ff ff       	call   34e0 <_Unwind_Resume@plt>
    b045:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    b049:	5b                   	pop    %rbx
    b04a:	41 5c                	pop    %r12
    b04c:	5d                   	pop    %rbp
    b04d:	c3                   	ret

000000000000b04e <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice Device::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    b04e:	55                   	push   %rbp
    b04f:	48 89 e5             	mov    %rsp,%rbp
    b052:	41 54                	push   %r12
    b054:	53                   	push   %rbx
    b055:	48 83 ec 20          	sub    $0x20,%rsp
    b059:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b05d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    b061:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b065:	48 89 c7             	mov    %rax,%rdi
    b068:	e8 9b 0b 00 00       	call   bc08 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    b06d:	48 83 f8 01          	cmp    $0x1,%rax
    b071:	0f 94 c0             	sete   %al
    b074:	84 c0                	test   %al,%al
    b076:	74 19                	je     b091 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    b078:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b07c:	be 00 00 00 00       	mov    $0x0,%esi
    b081:	48 89 c7             	mov    %rax,%rdi
    b084:	e8 a3 0b 00 00       	call   bc2c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b089:	48 8b 00             	mov    (%rax),%rax
    b08c:	e9 b8 00 00 00       	jmp    b149 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    b091:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b098:	00 
    b099:	eb 46                	jmp    b0e1 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    b09b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b09f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b0a3:	48 89 d6             	mov    %rdx,%rsi
    b0a6:	48 89 c7             	mov    %rax,%rdi
    b0a9:	e8 7e 0b 00 00       	call   bc2c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b0ae:	48 8b 10             	mov    (%rax),%rdx
    b0b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b0b5:	48 89 d6             	mov    %rdx,%rsi
    b0b8:	48 89 c7             	mov    %rax,%rdi
    b0bb:	e8 92 00 00 00       	call   b152 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>
    b0c0:	84 c0                	test   %al,%al
    b0c2:	74 18                	je     b0dc <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    b0c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b0c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b0cc:	48 89 d6             	mov    %rdx,%rsi
    b0cf:	48 89 c7             	mov    %rax,%rdi
    b0d2:	e8 55 0b 00 00       	call   bc2c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b0d7:	48 8b 00             	mov    (%rax),%rax
    b0da:	eb 6d                	jmp    b149 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    b0dc:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    b0e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b0e5:	48 89 c7             	mov    %rax,%rdi
    b0e8:	e8 1b 0b 00 00       	call   bc08 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    b0ed:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    b0f1:	0f 92 c0             	setb   %al
    b0f4:	84 c0                	test   %al,%al
    b0f6:	75 a3                	jne    b09b <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    b0f8:	bf 10 00 00 00       	mov    $0x10,%edi
    b0fd:	e8 1e 80 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    b102:	48 89 c3             	mov    %rax,%rbx
    b105:	48 8d 05 24 6d 00 00 	lea    0x6d24(%rip),%rax        # 11e30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    b10c:	48 89 c6             	mov    %rax,%rsi
    b10f:	48 89 df             	mov    %rbx,%rdi
    b112:	e8 a9 7f ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    b117:	48 8b 05 9a 3e 01 00 	mov    0x13e9a(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b11e:	48 89 c2             	mov    %rax,%rdx
    b121:	48 8d 05 18 3c 01 00 	lea    0x13c18(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b128:	48 89 c6             	mov    %rax,%rsi
    b12b:	48 89 df             	mov    %rbx,%rdi
    b12e:	e8 8d 83 ff ff       	call   34c0 <__cxa_throw@plt>
    b133:	49 89 c4             	mov    %rax,%r12
    b136:	48 89 df             	mov    %rbx,%rdi
    b139:	e8 82 80 ff ff       	call   31c0 <__cxa_free_exception@plt>
    b13e:	4c 89 e0             	mov    %r12,%rax
    b141:	48 89 c7             	mov    %rax,%rdi
    b144:	e8 97 83 ff ff       	call   34e0 <_Unwind_Resume@plt>
}
    b149:	48 83 c4 20          	add    $0x20,%rsp
    b14d:	5b                   	pop    %rbx
    b14e:	41 5c                	pop    %r12
    b150:	5d                   	pop    %rbp
    b151:	c3                   	ret

000000000000b152 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>:

bool Device::checkRequirements(VkPhysicalDevice physicalDevice) {
    b152:	55                   	push   %rbp
    b153:	48 89 e5             	mov    %rsp,%rbp
    b156:	48 83 ec 10          	sub    $0x10,%rsp
    b15a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b15e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    b162:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b16a:	48 89 d6             	mov    %rdx,%rsi
    b16d:	48 89 c7             	mov    %rax,%rdi
    b170:	e8 41 00 00 00       	call   b1b6 <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>
    b175:	84 c0                	test   %al,%al
    b177:	74 35                	je     b1ae <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    b179:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b181:	48 89 d6             	mov    %rdx,%rsi
    b184:	48 89 c7             	mov    %rax,%rdi
    b187:	e8 6a 00 00 00       	call   b1f6 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>
    b18c:	84 c0                	test   %al,%al
    b18e:	74 1e                	je     b1ae <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    b190:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b198:	48 89 d6             	mov    %rdx,%rsi
    b19b:	48 89 c7             	mov    %rax,%rdi
    b19e:	e8 73 05 00 00       	call   b716 <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    b1a3:	84 c0                	test   %al,%al
    b1a5:	74 07                	je     b1ae <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    b1a7:	b8 01 00 00 00       	mov    $0x1,%eax
    b1ac:	eb 05                	jmp    b1b3 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    b1ae:	b8 00 00 00 00       	mov    $0x0,%eax
}
    b1b3:	c9                   	leave
    b1b4:	c3                   	ret
    b1b5:	90                   	nop

000000000000b1b6 <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>:

bool Device::checkProperties(VkPhysicalDevice physicalDevice) {
    b1b6:	55                   	push   %rbp
    b1b7:	48 89 e5             	mov    %rsp,%rbp
    b1ba:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    b1c1:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    b1c8:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    b1cf:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    b1d6:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    b1dd:	48 89 d6             	mov    %rdx,%rsi
    b1e0:	48 89 c7             	mov    %rax,%rdi
    b1e3:	e8 e8 7e ff ff       	call   30d0 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    b1e8:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    b1ee:	83 f8 02             	cmp    $0x2,%eax
    b1f1:	0f 94 c0             	sete   %al
}
    b1f4:	c9                   	leave
    b1f5:	c3                   	ret

000000000000b1f6 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>:

bool Device::checkExtensions(VkPhysicalDevice physicalDevice) {
    b1f6:	55                   	push   %rbp
    b1f7:	48 89 e5             	mov    %rsp,%rbp
    b1fa:	41 55                	push   %r13
    b1fc:	41 54                	push   %r12
    b1fe:	53                   	push   %rbx
    b1ff:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    b206:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    b20d:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    b214:	48 8d 05 38 6c 00 00 	lea    0x6c38(%rip),%rax        # 11e53 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    b21b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    b222:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b229:	49 89 c4             	mov    %rax,%r12
    b22c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    b232:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b239:	48 89 c7             	mov    %rax,%rdi
    b23c:	e8 0b 0a 00 00       	call   bc4c <_ZNSaIPKcEC1Ev>
    b241:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    b248:	4c 89 e6             	mov    %r12,%rsi
    b24b:	4c 89 ef             	mov    %r13,%rdi
    b24e:	4c 89 e1             	mov    %r12,%rcx
    b251:	4c 89 eb             	mov    %r13,%rbx
    b254:	48 89 df             	mov    %rbx,%rdi
    b257:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b25e:	48 89 d1             	mov    %rdx,%rcx
    b261:	48 89 fa             	mov    %rdi,%rdx
    b264:	48 89 c7             	mov    %rax,%rdi
    b267:	e8 18 0a 00 00       	call   bc84 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    b26c:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b273:	48 89 c7             	mov    %rax,%rdi
    b276:	e8 ed 09 00 00       	call   bc68 <_ZNSaIPKcED1Ev>

  u32 propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    b27b:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    b282:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    b289:	b9 00 00 00 00       	mov    $0x0,%ecx
    b28e:	be 00 00 00 00       	mov    $0x0,%esi
    b293:	48 89 c7             	mov    %rax,%rdi
    b296:	e8 65 81 ff ff       	call   3400 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    b29b:	85 c0                	test   %eax,%eax
    b29d:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    b2a0:	84 c0                	test   %al,%al
    b2a2:	74 3b                	je     b2df <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    b2a4:	bf 10 00 00 00       	mov    $0x10,%edi
    b2a9:	e8 72 7e ff ff       	call   3120 <__cxa_allocate_exception@plt>
    b2ae:	48 89 c3             	mov    %rax,%rbx
    b2b1:	48 8d 05 b0 6b 00 00 	lea    0x6bb0(%rip),%rax        # 11e68 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    b2b8:	48 89 c6             	mov    %rax,%rsi
    b2bb:	48 89 df             	mov    %rbx,%rdi
    b2be:	e8 fd 7d ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    b2c3:	48 8b 05 ee 3c 01 00 	mov    0x13cee(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b2ca:	48 89 c2             	mov    %rax,%rdx
    b2cd:	48 8d 05 6c 3a 01 00 	lea    0x13a6c(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b2d4:	48 89 c6             	mov    %rax,%rsi
    b2d7:	48 89 df             	mov    %rbx,%rdi
    b2da:	e8 e1 81 ff ff       	call   34c0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    b2df:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    b2e5:	89 c3                	mov    %eax,%ebx
    b2e7:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b2ee:	48 89 c7             	mov    %rax,%rdi
    b2f1:	e8 5a 0a 00 00       	call   bd50 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    b2f6:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    b2fd:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b304:	48 89 de             	mov    %rbx,%rsi
    b307:	48 89 c7             	mov    %rax,%rdi
    b30a:	e8 79 0a 00 00       	call   bd88 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    b30f:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b316:	48 89 c7             	mov    %rax,%rdi
    b319:	e8 4e 0a 00 00       	call   bd6c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    b31e:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b325:	48 89 c7             	mov    %rax,%rdi
    b328:	e8 15 0b 00 00       	call   be42 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    b32d:	48 89 c1             	mov    %rax,%rcx
    b330:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    b337:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    b33e:	be 00 00 00 00       	mov    $0x0,%esi
    b343:	48 89 c7             	mov    %rax,%rdi
    b346:	e8 b5 80 ff ff       	call   3400 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    b34b:	85 c0                	test   %eax,%eax
    b34d:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    b350:	84 c0                	test   %al,%al
    b352:	74 3b                	je     b38f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    b354:	bf 10 00 00 00       	mov    $0x10,%edi
    b359:	e8 c2 7d ff ff       	call   3120 <__cxa_allocate_exception@plt>
    b35e:	48 89 c3             	mov    %rax,%rbx
    b361:	48 8d 05 00 6b 00 00 	lea    0x6b00(%rip),%rax        # 11e68 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    b368:	48 89 c6             	mov    %rax,%rsi
    b36b:	48 89 df             	mov    %rbx,%rdi
    b36e:	e8 4d 7d ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    b373:	48 8b 05 3e 3c 01 00 	mov    0x13c3e(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b37a:	48 89 c2             	mov    %rax,%rdx
    b37d:	48 8d 05 bc 39 01 00 	lea    0x139bc(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b384:	48 89 c6             	mov    %rax,%rsi
    b387:	48 89 df             	mov    %rbx,%rdi
    b38a:	e8 31 81 ff ff       	call   34c0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, u32> helper;
    b38f:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b396:	48 89 c7             	mov    %rax,%rdi
    b399:	e8 00 06 00 00       	call   b99e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    b39e:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b3a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b3a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b3ad:	48 89 c7             	mov    %rax,%rdi
    b3b0:	e8 3f 0b 00 00       	call   bef4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    b3b5:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    b3bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b3c0:	48 89 c7             	mov    %rax,%rdi
    b3c3:	e8 52 0b 00 00       	call   bf1a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    b3c8:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    b3cf:	e9 8c 00 00 00       	jmp    b460 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    b3d4:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b3db:	48 89 c7             	mov    %rax,%rdi
    b3de:	e8 bf 0b 00 00       	call   bfa2 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b3e3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    b3e7:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b3ee:	48 89 c7             	mov    %rax,%rdi
    b3f1:	e8 fa 80 ff ff       	call   34f0 <_ZNSaIcEC1Ev@plt>
    b3f6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b3fa:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    b401:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b408:	48 89 ce             	mov    %rcx,%rsi
    b40b:	48 89 c7             	mov    %rax,%rdi
    b40e:	e8 5b 93 ff ff       	call   476e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b413:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    b41a:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b421:	48 89 d6             	mov    %rdx,%rsi
    b424:	48 89 c7             	mov    %rax,%rdi
    b427:	e8 88 0b 00 00       	call   bfb4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b42c:	8b 10                	mov    (%rax),%edx
    b42e:	83 c2 01             	add    $0x1,%edx
    b431:	89 10                	mov    %edx,(%rax)
    b433:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b43a:	48 89 c7             	mov    %rax,%rdi
    b43d:	e8 2e 7d ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b442:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b449:	48 89 c7             	mov    %rax,%rdi
    b44c:	e8 ff 7e ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    b451:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b458:	48 89 c7             	mov    %rax,%rdi
    b45b:	e8 1e 0b 00 00       	call   bf7e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b460:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    b467:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b46e:	48 89 d6             	mov    %rdx,%rsi
    b471:	48 89 c7             	mov    %rax,%rdi
    b474:	e8 ca 0a 00 00       	call   bf43 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b479:	84 c0                	test   %al,%al
    b47b:	0f 85 53 ff ff ff    	jne    b3d4 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    b481:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b488:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b48c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b490:	48 89 c7             	mov    %rax,%rdi
    b493:	e8 20 0c 00 00       	call   c0b8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    b498:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    b49f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b4a3:	48 89 c7             	mov    %rax,%rdi
    b4a6:	e8 33 0c 00 00       	call   c0de <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    b4ab:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    b4b2:	e9 ed 00 00 00       	jmp    b5a4 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    b4b7:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b4be:	48 89 c7             	mov    %rax,%rdi
    b4c1:	e8 9c 0c 00 00       	call   c162 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b4c6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    b4ca:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b4ce:	48 89 c7             	mov    %rax,%rdi
    b4d1:	e8 1a 80 ff ff       	call   34f0 <_ZNSaIcEC1Ev@plt>
    b4d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b4da:	48 8b 08             	mov    (%rax),%rcx
    b4dd:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    b4e1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b4e8:	48 89 ce             	mov    %rcx,%rsi
    b4eb:	48 89 c7             	mov    %rax,%rdi
    b4ee:	e8 7b 92 ff ff       	call   476e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b4f3:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    b4fa:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b501:	48 89 d6             	mov    %rdx,%rsi
    b504:	48 89 c7             	mov    %rax,%rdi
    b507:	e8 a8 0a 00 00       	call   bfb4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b50c:	8b 10                	mov    (%rax),%edx
    b50e:	83 c2 01             	add    $0x1,%edx
    b511:	89 10                	mov    %edx,(%rax)
    b513:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b51a:	48 89 c7             	mov    %rax,%rdi
    b51d:	e8 4e 7c ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b522:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b526:	48 89 c7             	mov    %rax,%rdi
    b529:	e8 22 7e ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    b52e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b532:	48 89 c7             	mov    %rax,%rdi
    b535:	e8 b6 7f ff ff       	call   34f0 <_ZNSaIcEC1Ev@plt>
    b53a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b53e:	48 8b 08             	mov    (%rax),%rcx
    b541:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    b545:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b549:	48 89 ce             	mov    %rcx,%rsi
    b54c:	48 89 c7             	mov    %rax,%rdi
    b54f:	e8 1a 92 ff ff       	call   476e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b554:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    b558:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b55f:	48 89 d6             	mov    %rdx,%rsi
    b562:	48 89 c7             	mov    %rax,%rdi
    b565:	e8 4a 0a 00 00       	call   bfb4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b56a:	8b 00                	mov    (%rax),%eax
    b56c:	83 f8 01             	cmp    $0x1,%eax
    b56f:	0f 96 c3             	setbe  %bl
    b572:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b576:	48 89 c7             	mov    %rax,%rdi
    b579:	e8 f2 7b ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b57e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b582:	48 89 c7             	mov    %rax,%rdi
    b585:	e8 c6 7d ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    b58a:	84 db                	test   %bl,%bl
    b58c:	74 07                	je     b595 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    b58e:	bb 00 00 00 00       	mov    $0x0,%ebx
    b593:	eb 35                	jmp    b5ca <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    b595:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b59c:	48 89 c7             	mov    %rax,%rdi
    b59f:	e8 9e 0b 00 00       	call   c142 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    b5a4:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    b5ab:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b5b2:	48 89 d6             	mov    %rdx,%rsi
    b5b5:	48 89 c7             	mov    %rax,%rdi
    b5b8:	e8 4a 0b 00 00       	call   c107 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    b5bd:	84 c0                	test   %al,%al
    b5bf:	0f 85 f2 fe ff ff    	jne    b4b7 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    b5c5:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    b5ca:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b5d1:	48 89 c7             	mov    %rax,%rdi
    b5d4:	e8 e1 03 00 00       	call   b9ba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b5d9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b5e0:	48 89 c7             	mov    %rax,%rdi
    b5e3:	e8 16 08 00 00       	call   bdfe <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b5e8:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b5ef:	48 89 c7             	mov    %rax,%rdi
    b5f2:	e8 15 07 00 00       	call   bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b5f7:	89 d8                	mov    %ebx,%eax
    b5f9:	e9 09 01 00 00       	jmp    b707 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    b5fe:	48 89 c3             	mov    %rax,%rbx
    b601:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b608:	48 89 c7             	mov    %rax,%rdi
    b60b:	e8 58 06 00 00       	call   bc68 <_ZNSaIPKcED1Ev>
    b610:	48 89 d8             	mov    %rbx,%rax
    b613:	48 89 c7             	mov    %rax,%rdi
    b616:	e8 c5 7e ff ff       	call   34e0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    b61b:	49 89 c4             	mov    %rax,%r12
    b61e:	48 89 df             	mov    %rbx,%rdi
    b621:	e8 9a 7b ff ff       	call   31c0 <__cxa_free_exception@plt>
    b626:	4c 89 e3             	mov    %r12,%rbx
    b629:	e9 bf 00 00 00       	jmp    b6ed <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    b62e:	48 89 c3             	mov    %rax,%rbx
    b631:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b638:	48 89 c7             	mov    %rax,%rdi
    b63b:	e8 2c 07 00 00       	call   bd6c <_ZNSaI21VkExtensionPropertiesED1Ev>
    b640:	e9 a8 00 00 00       	jmp    b6ed <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    b645:	49 89 c4             	mov    %rax,%r12
    b648:	48 89 df             	mov    %rbx,%rdi
    b64b:	e8 70 7b ff ff       	call   31c0 <__cxa_free_exception@plt>
    b650:	4c 89 e3             	mov    %r12,%rbx
    b653:	e9 81 00 00 00       	jmp    b6d9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    b658:	48 89 c3             	mov    %rax,%rbx
    b65b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b662:	48 89 c7             	mov    %rax,%rdi
    b665:	e8 06 7b ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b66a:	eb 03                	jmp    b66f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    b66c:	48 89 c3             	mov    %rax,%rbx
    b66f:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b676:	48 89 c7             	mov    %rax,%rdi
    b679:	e8 d2 7c ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    b67e:	eb 45                	jmp    b6c5 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    b680:	48 89 c3             	mov    %rax,%rbx
    b683:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b68a:	48 89 c7             	mov    %rax,%rdi
    b68d:	e8 de 7a ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b692:	eb 03                	jmp    b697 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    b694:	48 89 c3             	mov    %rax,%rbx
    b697:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b69b:	48 89 c7             	mov    %rax,%rdi
    b69e:	e8 ad 7c ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
    b6a3:	eb 20                	jmp    b6c5 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    b6a5:	48 89 c3             	mov    %rax,%rbx
    b6a8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b6ac:	48 89 c7             	mov    %rax,%rdi
    b6af:	e8 bc 7a ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b6b4:	eb 03                	jmp    b6b9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    b6b6:	48 89 c3             	mov    %rax,%rbx
    b6b9:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b6bd:	48 89 c7             	mov    %rax,%rdi
    b6c0:	e8 8b 7c ff ff       	call   3350 <_ZNSaIcED1Ev@plt>
}
    b6c5:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b6cc:	48 89 c7             	mov    %rax,%rdi
    b6cf:	e8 e6 02 00 00       	call   b9ba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b6d4:	eb 03                	jmp    b6d9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    b6d6:	48 89 c3             	mov    %rax,%rbx
    b6d9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b6e0:	48 89 c7             	mov    %rax,%rdi
    b6e3:	e8 16 07 00 00       	call   bdfe <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b6e8:	eb 03                	jmp    b6ed <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    b6ea:	48 89 c3             	mov    %rax,%rbx
    b6ed:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b6f4:	48 89 c7             	mov    %rax,%rdi
    b6f7:	e8 10 06 00 00       	call   bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b6fc:	48 89 d8             	mov    %rbx,%rax
    b6ff:	48 89 c7             	mov    %rax,%rdi
    b702:	e8 d9 7d ff ff       	call   34e0 <_Unwind_Resume@plt>
    b707:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    b70e:	5b                   	pop    %rbx
    b70f:	41 5c                	pop    %r12
    b711:	41 5d                	pop    %r13
    b713:	5d                   	pop    %rbp
    b714:	c3                   	ret
    b715:	90                   	nop

000000000000b716 <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>:

bool Device::checkFeatures(VkPhysicalDevice physicalDevice) {
    b716:	55                   	push   %rbp
    b717:	48 89 e5             	mov    %rsp,%rbp
    b71a:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    b721:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    b728:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    b72f:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    b736:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    b73d:	48 89 d6             	mov    %rdx,%rsi
    b740:	48 89 c7             	mov    %rax,%rdi
    b743:	e8 b8 7a ff ff       	call   3200 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    b748:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    b74e:	85 c0                	test   %eax,%eax
    b750:	0f 95 c0             	setne  %al
}
    b753:	c9                   	leave
    b754:	c3                   	ret
    b755:	90                   	nop

000000000000b756 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice> Device::getPhysicalDevices(VkInstance instance) {
    b756:	55                   	push   %rbp
    b757:	48 89 e5             	mov    %rsp,%rbp
    b75a:	41 54                	push   %r12
    b75c:	53                   	push   %rbx
    b75d:	48 83 ec 30          	sub    $0x30,%rsp
    b761:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b765:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b769:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  u32 physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    b76d:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    b771:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b775:	ba 00 00 00 00       	mov    $0x0,%edx
    b77a:	48 89 ce             	mov    %rcx,%rsi
    b77d:	48 89 c7             	mov    %rax,%rdi
    b780:	e8 cb 79 ff ff       	call   3150 <vkEnumeratePhysicalDevices@plt>
    b785:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    b788:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b78c:	74 41                	je     b7cf <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    b78e:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    b792:	74 3b                	je     b7cf <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b794:	bf 10 00 00 00       	mov    $0x10,%edi
    b799:	e8 82 79 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    b79e:	48 89 c3             	mov    %rax,%rbx
    b7a1:	48 8d 05 e8 66 00 00 	lea    0x66e8(%rip),%rax        # 11e90 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    b7a8:	48 89 c6             	mov    %rax,%rsi
    b7ab:	48 89 df             	mov    %rbx,%rdi
    b7ae:	e8 0d 79 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    b7b3:	48 8b 05 fe 37 01 00 	mov    0x137fe(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b7ba:	48 89 c2             	mov    %rax,%rdx
    b7bd:	48 8d 05 7c 35 01 00 	lea    0x1357c(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b7c4:	48 89 c6             	mov    %rax,%rsi
    b7c7:	48 89 df             	mov    %rbx,%rdi
    b7ca:	e8 f1 7c ff ff       	call   34c0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    b7cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    b7d2:	85 c0                	test   %eax,%eax
    b7d4:	75 3b                	jne    b811 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    b7d6:	bf 10 00 00 00       	mov    $0x10,%edi
    b7db:	e8 40 79 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    b7e0:	48 89 c3             	mov    %rax,%rbx
    b7e3:	48 8d 05 ce 66 00 00 	lea    0x66ce(%rip),%rax        # 11eb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    b7ea:	48 89 c6             	mov    %rax,%rsi
    b7ed:	48 89 df             	mov    %rbx,%rdi
    b7f0:	e8 cb 78 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    b7f5:	48 8b 05 bc 37 01 00 	mov    0x137bc(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b7fc:	48 89 c2             	mov    %rax,%rdx
    b7ff:	48 8d 05 3a 35 01 00 	lea    0x1353a(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b806:	48 89 c6             	mov    %rax,%rsi
    b809:	48 89 df             	mov    %rbx,%rdi
    b80c:	e8 af 7c ff ff       	call   34c0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    b811:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    b814:	89 c3                	mov    %eax,%ebx
    b816:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    b81a:	48 89 c7             	mov    %rax,%rdi
    b81d:	e8 52 09 00 00       	call   c174 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    b822:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    b826:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b82a:	48 89 de             	mov    %rbx,%rsi
    b82d:	48 89 c7             	mov    %rax,%rdi
    b830:	e8 77 09 00 00       	call   c1ac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    b835:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    b839:	48 89 c7             	mov    %rax,%rdi
    b83c:	e8 4f 09 00 00       	call   c190 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    b841:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b845:	48 89 c7             	mov    %rax,%rdi
    b848:	e8 d5 09 00 00       	call   c222 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    b84d:	48 89 c2             	mov    %rax,%rdx
    b850:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    b854:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b858:	48 89 ce             	mov    %rcx,%rsi
    b85b:	48 89 c7             	mov    %rax,%rdi
    b85e:	e8 ed 78 ff ff       	call   3150 <vkEnumeratePhysicalDevices@plt>
    b863:	89 45 ec             	mov    %eax,-0x14(%rbp)
    b866:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b86a:	0f 84 b5 00 00 00    	je     b925 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    b870:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    b874:	0f 84 ab 00 00 00    	je     b925 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b87a:	bf 10 00 00 00       	mov    $0x10,%edi
    b87f:	e8 9c 78 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    b884:	48 89 c3             	mov    %rax,%rbx
    b887:	48 8d 05 02 66 00 00 	lea    0x6602(%rip),%rax        # 11e90 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    b88e:	48 89 c6             	mov    %rax,%rsi
    b891:	48 89 df             	mov    %rbx,%rdi
    b894:	e8 27 78 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    b899:	48 8b 05 18 37 01 00 	mov    0x13718(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b8a0:	48 89 c2             	mov    %rax,%rdx
    b8a3:	48 8d 05 96 34 01 00 	lea    0x13496(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b8aa:	48 89 c6             	mov    %rax,%rsi
    b8ad:	48 89 df             	mov    %rbx,%rdi
    b8b0:	e8 0b 7c ff ff       	call   34c0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b8b5:	49 89 c4             	mov    %rax,%r12
    b8b8:	48 89 df             	mov    %rbx,%rdi
    b8bb:	e8 00 79 ff ff       	call   31c0 <__cxa_free_exception@plt>
    b8c0:	4c 89 e0             	mov    %r12,%rax
    b8c3:	48 89 c7             	mov    %rax,%rdi
    b8c6:	e8 15 7c ff ff       	call   34e0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    b8cb:	49 89 c4             	mov    %rax,%r12
    b8ce:	48 89 df             	mov    %rbx,%rdi
    b8d1:	e8 ea 78 ff ff       	call   31c0 <__cxa_free_exception@plt>
    b8d6:	4c 89 e0             	mov    %r12,%rax
    b8d9:	48 89 c7             	mov    %rax,%rdi
    b8dc:	e8 ff 7b ff ff       	call   34e0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    b8e1:	48 89 c3             	mov    %rax,%rbx
    b8e4:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    b8e8:	48 89 c7             	mov    %rax,%rdi
    b8eb:	e8 a0 08 00 00       	call   c190 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    b8f0:	48 89 d8             	mov    %rbx,%rax
    b8f3:	48 89 c7             	mov    %rax,%rdi
    b8f6:	e8 e5 7b ff ff       	call   34e0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b8fb:	49 89 c4             	mov    %rax,%r12
    b8fe:	48 89 df             	mov    %rbx,%rdi
    b901:	e8 ba 78 ff ff       	call   31c0 <__cxa_free_exception@plt>
    b906:	4c 89 e3             	mov    %r12,%rbx
    b909:	eb 03                	jmp    b90e <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    b90b:	48 89 c3             	mov    %rax,%rbx
    b90e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b912:	48 89 c7             	mov    %rax,%rdi
    b915:	e8 d8 00 00 00       	call   b9f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    b91a:	48 89 d8             	mov    %rbx,%rax
    b91d:	48 89 c7             	mov    %rax,%rdi
    b920:	e8 bb 7b ff ff       	call   34e0 <_Unwind_Resume@plt>
  return physicalDevices;
    b925:	90                   	nop
}
    b926:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b92a:	48 83 c4 30          	add    $0x30,%rsp
    b92e:	5b                   	pop    %rbx
    b92f:	41 5c                	pop    %r12
    b931:	5d                   	pop    %rbp
    b932:	c3                   	ret

000000000000b933 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    b933:	55                   	push   %rbp
    b934:	48 89 e5             	mov    %rsp,%rbp
    b937:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b93b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b93f:	5d                   	pop    %rbp
    b940:	c3                   	ret
    b941:	90                   	nop

000000000000b942 <_ZNK4neko8InstancedeEv>:

  const VkInstance &operator*() const noexcept { return mInstance; }
    b942:	55                   	push   %rbp
    b943:	48 89 e5             	mov    %rsp,%rbp
    b946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b94a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b94e:	48 83 c0 08          	add    $0x8,%rax
    b952:	5d                   	pop    %rbp
    b953:	c3                   	ret

000000000000b954 <_ZNK4neko7SurfacedeEv>:

  Surface &operator=(Surface &&) = default;

  ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    b954:	55                   	push   %rbp
    b955:	48 89 e5             	mov    %rsp,%rbp
    b958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b95c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b960:	48 83 c0 08          	add    $0x8,%rax
    b964:	5d                   	pop    %rbp
    b965:	c3                   	ret

000000000000b966 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
	struct _Rb_tree_impl
    b966:	55                   	push   %rbp
    b967:	48 89 e5             	mov    %rsp,%rbp
    b96a:	48 83 ec 10          	sub    $0x10,%rsp
    b96e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b976:	48 89 c7             	mov    %rax,%rdi
    b979:	e8 20 05 00 00       	call   be9e <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    b97e:	90                   	nop
    b97f:	c9                   	leave
    b980:	c3                   	ret
    b981:	90                   	nop

000000000000b982 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
      _Rb_tree() = default;
    b982:	55                   	push   %rbp
    b983:	48 89 e5             	mov    %rsp,%rbp
    b986:	48 83 ec 10          	sub    $0x10,%rsp
    b98a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b98e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b992:	48 89 c7             	mov    %rax,%rdi
    b995:	e8 cc 04 00 00       	call   be66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    b99a:	90                   	nop
    b99b:	c9                   	leave
    b99c:	c3                   	ret
    b99d:	90                   	nop

000000000000b99e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
      map() = default;
    b99e:	55                   	push   %rbp
    b99f:	48 89 e5             	mov    %rsp,%rbp
    b9a2:	48 83 ec 10          	sub    $0x10,%rsp
    b9a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ae:	48 89 c7             	mov    %rax,%rdi
    b9b1:	e8 cc ff ff ff       	call   b982 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    b9b6:	90                   	nop
    b9b7:	c9                   	leave
    b9b8:	c3                   	ret
    b9b9:	90                   	nop

000000000000b9ba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      ~map() = default;
    b9ba:	55                   	push   %rbp
    b9bb:	48 89 e5             	mov    %rsp,%rbp
    b9be:	48 83 ec 10          	sub    $0x10,%rsp
    b9c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ca:	48 89 c7             	mov    %rax,%rdi
    b9cd:	e8 e8 04 00 00       	call   beba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    b9d2:	90                   	nop
    b9d3:	c9                   	leave
    b9d4:	c3                   	ret
    b9d5:	90                   	nop

000000000000b9d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    b9d6:	55                   	push   %rbp
    b9d7:	48 89 e5             	mov    %rsp,%rbp
    b9da:	48 83 ec 10          	sub    $0x10,%rsp
    b9de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9e6:	48 89 c7             	mov    %rax,%rdi
    b9e9:	e8 a2 07 00 00       	call   c190 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    b9ee:	90                   	nop
    b9ef:	c9                   	leave
    b9f0:	c3                   	ret
    b9f1:	90                   	nop

000000000000b9f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    b9f2:	55                   	push   %rbp
    b9f3:	48 89 e5             	mov    %rsp,%rbp
    b9f6:	48 83 ec 10          	sub    $0x10,%rsp
    b9fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    b9fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba02:	48 89 c7             	mov    %rax,%rdi
    ba05:	e8 8a 08 00 00       	call   c294 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ba0a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    ba0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba11:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ba15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba19:	48 8b 00             	mov    (%rax),%rax
    ba1c:	48 89 ce             	mov    %rcx,%rsi
    ba1f:	48 89 c7             	mov    %rax,%rdi
    ba22:	e8 7b 08 00 00       	call   c2a2 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    ba27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba2b:	48 89 c7             	mov    %rax,%rdi
    ba2e:	e8 13 08 00 00       	call   c246 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ba33:	90                   	nop
    ba34:	c9                   	leave
    ba35:	c3                   	ret

000000000000ba36 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ba36:	55                   	push   %rbp
    ba37:	48 89 e5             	mov    %rsp,%rbp
    ba3a:	48 83 ec 10          	sub    $0x10,%rsp
    ba3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba46:	48 89 c7             	mov    %rax,%rdi
    ba49:	e8 7e 08 00 00       	call   c2cc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    ba4e:	90                   	nop
    ba4f:	c9                   	leave
    ba50:	c3                   	ret
    ba51:	90                   	nop

000000000000ba52 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    ba52:	55                   	push   %rbp
    ba53:	48 89 e5             	mov    %rsp,%rbp
    ba56:	48 83 ec 10          	sub    $0x10,%rsp
    ba5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba62:	48 89 c7             	mov    %rax,%rdi
    ba65:	e8 6e 08 00 00       	call   c2d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    ba6a:	90                   	nop
    ba6b:	c9                   	leave
    ba6c:	c3                   	ret
    ba6d:	90                   	nop

000000000000ba6e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    ba6e:	55                   	push   %rbp
    ba6f:	48 89 e5             	mov    %rsp,%rbp
    ba72:	53                   	push   %rbx
    ba73:	48 83 ec 28          	sub    $0x28,%rsp
    ba77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ba7f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    ba83:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ba87:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ba8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ba8f:	48 89 d6             	mov    %rdx,%rsi
    ba92:	48 89 c7             	mov    %rax,%rdi
    ba95:	e8 49 08 00 00       	call   c2e3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    ba9a:	48 89 c1             	mov    %rax,%rcx
    ba9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    baa1:	48 89 c2             	mov    %rax,%rdx
    baa4:	48 89 ce             	mov    %rcx,%rsi
    baa7:	48 89 df             	mov    %rbx,%rdi
    baaa:	e8 b1 08 00 00       	call   c360 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    baaf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bab3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bab7:	48 89 d6             	mov    %rdx,%rsi
    baba:	48 89 c7             	mov    %rax,%rdi
    babd:	e8 54 09 00 00       	call   c416 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    bac2:	eb 1a                	jmp    bade <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    bac4:	48 89 c3             	mov    %rax,%rbx
    bac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bacb:	48 89 c7             	mov    %rax,%rdi
    bace:	e8 eb 08 00 00       	call   c3be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    bad3:	48 89 d8             	mov    %rbx,%rax
    bad6:	48 89 c7             	mov    %rax,%rdi
    bad9:	e8 02 7a ff ff       	call   34e0 <_Unwind_Resume@plt>
    bade:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bae2:	c9                   	leave
    bae3:	c3                   	ret

000000000000bae4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bae4:	55                   	push   %rbp
    bae5:	48 89 e5             	mov    %rsp,%rbp
    bae8:	48 83 ec 10          	sub    $0x10,%rsp
    baec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    baf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf4:	48 89 c7             	mov    %rax,%rdi
    baf7:	e8 5a 09 00 00       	call   c456 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    bafc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    baff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb03:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bb07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb0b:	48 8b 00             	mov    (%rax),%rax
    bb0e:	48 89 ce             	mov    %rcx,%rsi
    bb11:	48 89 c7             	mov    %rax,%rdi
    bb14:	e8 4b 09 00 00       	call   c464 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    bb19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb1d:	48 89 c7             	mov    %rax,%rdi
    bb20:	e8 99 08 00 00       	call   c3be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    bb25:	90                   	nop
    bb26:	c9                   	leave
    bb27:	c3                   	ret

000000000000bb28 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    bb28:	55                   	push   %rbp
    bb29:	48 89 e5             	mov    %rsp,%rbp
    bb2c:	48 83 ec 10          	sub    $0x10,%rsp
    bb30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    bb34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb38:	48 8b 10             	mov    (%rax),%rdx
    bb3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb3f:	48 89 d6             	mov    %rdx,%rsi
    bb42:	48 89 c7             	mov    %rax,%rdi
    bb45:	e8 44 09 00 00       	call   c48e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    bb4a:	c9                   	leave
    bb4b:	c3                   	ret

000000000000bb4c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bb4c:	55                   	push   %rbp
    bb4d:	48 89 e5             	mov    %rsp,%rbp
    bb50:	48 83 ec 20          	sub    $0x20,%rsp
    bb54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bb58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb60:	48 89 d6             	mov    %rdx,%rsi
    bb63:	48 89 c7             	mov    %rax,%rdi
    bb66:	e8 35 09 00 00       	call   c4a0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bb6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb6f:	c9                   	leave
    bb70:	c3                   	ret
    bb71:	90                   	nop

000000000000bb72 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bb72:	55                   	push   %rbp
    bb73:	48 89 e5             	mov    %rsp,%rbp
    bb76:	48 83 ec 20          	sub    $0x20,%rsp
    bb7a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    bb7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb82:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bb86:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb8a:	48 89 d6             	mov    %rdx,%rsi
    bb8d:	48 89 c7             	mov    %rax,%rdi
    bb90:	e8 0b 09 00 00       	call   c4a0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bb95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb99:	c9                   	leave
    bb9a:	c3                   	ret

000000000000bb9b <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    bb9b:	55                   	push   %rbp
    bb9c:	48 89 e5             	mov    %rsp,%rbp
    bb9f:	53                   	push   %rbx
    bba0:	48 83 ec 18          	sub    $0x18,%rsp
    bba4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bba8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    bbac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bbb0:	48 89 c7             	mov    %rax,%rdi
    bbb3:	e8 06 09 00 00       	call   c4be <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    bbb8:	48 8b 18             	mov    (%rax),%rbx
    bbbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bbbf:	48 89 c7             	mov    %rax,%rdi
    bbc2:	e8 f7 08 00 00       	call   c4be <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    bbc7:	48 8b 00             	mov    (%rax),%rax
    bbca:	48 39 c3             	cmp    %rax,%rbx
    bbcd:	0f 95 c0             	setne  %al
    bbd0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bbd4:	c9                   	leave
    bbd5:	c3                   	ret

000000000000bbd6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    bbd6:	55                   	push   %rbp
    bbd7:	48 89 e5             	mov    %rsp,%rbp
    bbda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    bbde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe2:	48 8b 00             	mov    (%rax),%rax
    bbe5:	48 8d 50 18          	lea    0x18(%rax),%rdx
    bbe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbed:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    bbf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    bbf4:	5d                   	pop    %rbp
    bbf5:	c3                   	ret

000000000000bbf6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    bbf6:	55                   	push   %rbp
    bbf7:	48 89 e5             	mov    %rsp,%rbp
    bbfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    bbfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc02:	48 8b 00             	mov    (%rax),%rax
    bc05:	5d                   	pop    %rbp
    bc06:	c3                   	ret
    bc07:	90                   	nop

000000000000bc08 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    bc08:	55                   	push   %rbp
    bc09:	48 89 e5             	mov    %rsp,%rbp
    bc0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    bc10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc14:	48 8b 50 08          	mov    0x8(%rax),%rdx
    bc18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc1c:	48 8b 00             	mov    (%rax),%rax
    bc1f:	48 29 c2             	sub    %rax,%rdx
    bc22:	48 89 d0             	mov    %rdx,%rax
    bc25:	48 c1 f8 03          	sar    $0x3,%rax
    bc29:	5d                   	pop    %rbp
    bc2a:	c3                   	ret
    bc2b:	90                   	nop

000000000000bc2c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    bc2c:	55                   	push   %rbp
    bc2d:	48 89 e5             	mov    %rsp,%rbp
    bc30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    bc38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3c:	48 8b 00             	mov    (%rax),%rax
    bc3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc43:	48 c1 e2 03          	shl    $0x3,%rdx
    bc47:	48 01 d0             	add    %rdx,%rax
      }
    bc4a:	5d                   	pop    %rbp
    bc4b:	c3                   	ret

000000000000bc4c <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    bc4c:	55                   	push   %rbp
    bc4d:	48 89 e5             	mov    %rsp,%rbp
    bc50:	48 83 ec 10          	sub    $0x10,%rsp
    bc54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc5c:	48 89 c7             	mov    %rax,%rdi
    bc5f:	e8 68 08 00 00       	call   c4cc <_ZNSt15__new_allocatorIPKcEC1Ev>
    bc64:	90                   	nop
    bc65:	c9                   	leave
    bc66:	c3                   	ret
    bc67:	90                   	nop

000000000000bc68 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bc68:	55                   	push   %rbp
    bc69:	48 89 e5             	mov    %rsp,%rbp
    bc6c:	48 83 ec 10          	sub    $0x10,%rsp
    bc70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc78:	48 89 c7             	mov    %rax,%rdi
    bc7b:	e8 58 08 00 00       	call   c4d8 <_ZNSt15__new_allocatorIPKcED1Ev>
    bc80:	90                   	nop
    bc81:	c9                   	leave
    bc82:	c3                   	ret
    bc83:	90                   	nop

000000000000bc84 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    bc84:	55                   	push   %rbp
    bc85:	48 89 e5             	mov    %rsp,%rbp
    bc88:	53                   	push   %rbx
    bc89:	48 83 ec 38          	sub    $0x38,%rsp
    bc8d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bc91:	48 89 f0             	mov    %rsi,%rax
    bc94:	48 89 d6             	mov    %rdx,%rsi
    bc97:	48 89 f2             	mov    %rsi,%rdx
    bc9a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    bc9e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    bca2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    bca6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bcaa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bcae:	48 89 d6             	mov    %rdx,%rsi
    bcb1:	48 89 c7             	mov    %rax,%rdi
    bcb4:	e8 47 08 00 00       	call   c500 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    bcb9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bcbd:	48 89 c7             	mov    %rax,%rdi
    bcc0:	e8 c1 08 00 00       	call   c586 <_ZNKSt16initializer_listIPKcE3endEv>
    bcc5:	48 89 c3             	mov    %rax,%rbx
    bcc8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bccc:	48 89 c7             	mov    %rax,%rdi
    bccf:	e8 a0 08 00 00       	call   c574 <_ZNKSt16initializer_listIPKcE5beginEv>
    bcd4:	48 89 c1             	mov    %rax,%rcx
    bcd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bcdb:	48 89 da             	mov    %rbx,%rdx
    bcde:	48 89 ce             	mov    %rcx,%rsi
    bce1:	48 89 c7             	mov    %rax,%rdi
    bce4:	e8 03 09 00 00       	call   c5ec <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    bce9:	eb 1a                	jmp    bd05 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    bceb:	48 89 c3             	mov    %rax,%rbx
    bcee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bcf2:	48 89 c7             	mov    %rax,%rdi
    bcf5:	e8 2c 08 00 00       	call   c526 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    bcfa:	48 89 d8             	mov    %rbx,%rax
    bcfd:	48 89 c7             	mov    %rax,%rdi
    bd00:	e8 db 77 ff ff       	call   34e0 <_Unwind_Resume@plt>
    bd05:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bd09:	c9                   	leave
    bd0a:	c3                   	ret
    bd0b:	90                   	nop

000000000000bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bd0c:	55                   	push   %rbp
    bd0d:	48 89 e5             	mov    %rsp,%rbp
    bd10:	48 83 ec 10          	sub    $0x10,%rsp
    bd14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bd18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd1c:	48 89 c7             	mov    %rax,%rdi
    bd1f:	e8 78 09 00 00       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    bd24:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bd27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd2b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bd2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd33:	48 8b 00             	mov    (%rax),%rax
    bd36:	48 89 ce             	mov    %rcx,%rsi
    bd39:	48 89 c7             	mov    %rax,%rdi
    bd3c:	e8 69 09 00 00       	call   c6aa <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    bd41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd45:	48 89 c7             	mov    %rax,%rdi
    bd48:	e8 d9 07 00 00       	call   c526 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    bd4d:	90                   	nop
    bd4e:	c9                   	leave
    bd4f:	c3                   	ret

000000000000bd50 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    bd50:	55                   	push   %rbp
    bd51:	48 89 e5             	mov    %rsp,%rbp
    bd54:	48 83 ec 10          	sub    $0x10,%rsp
    bd58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd60:	48 89 c7             	mov    %rax,%rdi
    bd63:	e8 6c 09 00 00       	call   c6d4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    bd68:	90                   	nop
    bd69:	c9                   	leave
    bd6a:	c3                   	ret
    bd6b:	90                   	nop

000000000000bd6c <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bd6c:	55                   	push   %rbp
    bd6d:	48 89 e5             	mov    %rsp,%rbp
    bd70:	48 83 ec 10          	sub    $0x10,%rsp
    bd74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd7c:	48 89 c7             	mov    %rax,%rdi
    bd7f:	e8 5c 09 00 00       	call   c6e0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    bd84:	90                   	nop
    bd85:	c9                   	leave
    bd86:	c3                   	ret
    bd87:	90                   	nop

000000000000bd88 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    bd88:	55                   	push   %rbp
    bd89:	48 89 e5             	mov    %rsp,%rbp
    bd8c:	53                   	push   %rbx
    bd8d:	48 83 ec 28          	sub    $0x28,%rsp
    bd91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bd99:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    bd9d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bda1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bda5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bda9:	48 89 d6             	mov    %rdx,%rsi
    bdac:	48 89 c7             	mov    %rax,%rdi
    bdaf:	e8 37 09 00 00       	call   c6eb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    bdb4:	48 89 c1             	mov    %rax,%rcx
    bdb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bdbb:	48 89 c2             	mov    %rax,%rdx
    bdbe:	48 89 ce             	mov    %rcx,%rsi
    bdc1:	48 89 df             	mov    %rbx,%rdi
    bdc4:	e8 9f 09 00 00       	call   c768 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    bdc9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bdcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bdd1:	48 89 d6             	mov    %rdx,%rsi
    bdd4:	48 89 c7             	mov    %rax,%rdi
    bdd7:	e8 42 0a 00 00       	call   c81e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    bddc:	eb 1a                	jmp    bdf8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    bdde:	48 89 c3             	mov    %rax,%rbx
    bde1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bde5:	48 89 c7             	mov    %rax,%rdi
    bde8:	e8 d9 09 00 00       	call   c7c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    bded:	48 89 d8             	mov    %rbx,%rax
    bdf0:	48 89 c7             	mov    %rax,%rdi
    bdf3:	e8 e8 76 ff ff       	call   34e0 <_Unwind_Resume@plt>
    bdf8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bdfc:	c9                   	leave
    bdfd:	c3                   	ret

000000000000bdfe <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bdfe:	55                   	push   %rbp
    bdff:	48 89 e5             	mov    %rsp,%rbp
    be02:	48 83 ec 10          	sub    $0x10,%rsp
    be06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    be0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be0e:	48 89 c7             	mov    %rax,%rdi
    be11:	e8 48 0a 00 00       	call   c85e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    be16:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    be19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be1d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    be21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be25:	48 8b 00             	mov    (%rax),%rax
    be28:	48 89 ce             	mov    %rcx,%rsi
    be2b:	48 89 c7             	mov    %rax,%rdi
    be2e:	e8 39 0a 00 00       	call   c86c <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    be33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be37:	48 89 c7             	mov    %rax,%rdi
    be3a:	e8 87 09 00 00       	call   c7c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    be3f:	90                   	nop
    be40:	c9                   	leave
    be41:	c3                   	ret

000000000000be42 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    be42:	55                   	push   %rbp
    be43:	48 89 e5             	mov    %rsp,%rbp
    be46:	48 83 ec 10          	sub    $0x10,%rsp
    be4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    be4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be52:	48 8b 10             	mov    (%rax),%rdx
    be55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be59:	48 89 d6             	mov    %rdx,%rsi
    be5c:	48 89 c7             	mov    %rax,%rdi
    be5f:	e8 32 0a 00 00       	call   c896 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    be64:	c9                   	leave
    be65:	c3                   	ret

000000000000be66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    be66:	55                   	push   %rbp
    be67:	48 89 e5             	mov    %rsp,%rbp
    be6a:	48 83 ec 10          	sub    $0x10,%rsp
    be6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    be72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be76:	48 89 c7             	mov    %rax,%rdi
    be79:	e8 2a 0a 00 00       	call   c8a8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    be7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be82:	48 89 c7             	mov    %rax,%rdi
    be85:	e8 3a 0a 00 00       	call   c8c4 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    be8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be8e:	48 83 c0 08          	add    $0x8,%rax
    be92:	48 89 c7             	mov    %rax,%rdi
    be95:	e8 f6 7c ff ff       	call   3b90 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    be9a:	90                   	nop
    be9b:	c9                   	leave
    be9c:	c3                   	ret
    be9d:	90                   	nop

000000000000be9e <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    be9e:	55                   	push   %rbp
    be9f:	48 89 e5             	mov    %rsp,%rbp
    bea2:	48 83 ec 10          	sub    $0x10,%rsp
    bea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beae:	48 89 c7             	mov    %rax,%rdi
    beb1:	e8 1a 0a 00 00       	call   c8d0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    beb6:	90                   	nop
    beb7:	c9                   	leave
    beb8:	c3                   	ret
    beb9:	90                   	nop

000000000000beba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    beba:	55                   	push   %rbp
    bebb:	48 89 e5             	mov    %rsp,%rbp
    bebe:	48 83 ec 10          	sub    $0x10,%rsp
    bec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    bec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beca:	48 89 c7             	mov    %rax,%rdi
    becd:	e8 70 0a 00 00       	call   c942 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    bed2:	48 89 c2             	mov    %rax,%rdx
    bed5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed9:	48 89 d6             	mov    %rdx,%rsi
    bedc:	48 89 c7             	mov    %rax,%rdi
    bedf:	e8 f8 09 00 00       	call   c8dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    bee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee8:	48 89 c7             	mov    %rax,%rdi
    beeb:	e8 76 fa ff ff       	call   b966 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    bef0:	90                   	nop
    bef1:	c9                   	leave
    bef2:	c3                   	ret
    bef3:	90                   	nop

000000000000bef4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bef4:	55                   	push   %rbp
    bef5:	48 89 e5             	mov    %rsp,%rbp
    bef8:	48 83 ec 20          	sub    $0x20,%rsp
    befc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bf00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf04:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bf08:	48 89 d6             	mov    %rdx,%rsi
    bf0b:	48 89 c7             	mov    %rax,%rdi
    bf0e:	e8 49 0a 00 00       	call   c95c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bf13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf17:	c9                   	leave
    bf18:	c3                   	ret
    bf19:	90                   	nop

000000000000bf1a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bf1a:	55                   	push   %rbp
    bf1b:	48 89 e5             	mov    %rsp,%rbp
    bf1e:	48 83 ec 20          	sub    $0x20,%rsp
    bf22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    bf26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf2a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bf2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bf32:	48 89 d6             	mov    %rdx,%rsi
    bf35:	48 89 c7             	mov    %rax,%rdi
    bf38:	e8 1f 0a 00 00       	call   c95c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bf3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf41:	c9                   	leave
    bf42:	c3                   	ret

000000000000bf43 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    bf43:	55                   	push   %rbp
    bf44:	48 89 e5             	mov    %rsp,%rbp
    bf47:	53                   	push   %rbx
    bf48:	48 83 ec 18          	sub    $0x18,%rsp
    bf4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf50:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    bf54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf58:	48 89 c7             	mov    %rax,%rdi
    bf5b:	e8 1a 0a 00 00       	call   c97a <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    bf60:	48 8b 18             	mov    (%rax),%rbx
    bf63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf67:	48 89 c7             	mov    %rax,%rdi
    bf6a:	e8 0b 0a 00 00       	call   c97a <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    bf6f:	48 8b 00             	mov    (%rax),%rax
    bf72:	48 39 c3             	cmp    %rax,%rbx
    bf75:	0f 95 c0             	setne  %al
    bf78:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bf7c:	c9                   	leave
    bf7d:	c3                   	ret

000000000000bf7e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    bf7e:	55                   	push   %rbp
    bf7f:	48 89 e5             	mov    %rsp,%rbp
    bf82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    bf86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf8a:	48 8b 00             	mov    (%rax),%rax
    bf8d:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    bf94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf98:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    bf9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    bf9f:	5d                   	pop    %rbp
    bfa0:	c3                   	ret
    bfa1:	90                   	nop

000000000000bfa2 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    bfa2:	55                   	push   %rbp
    bfa3:	48 89 e5             	mov    %rsp,%rbp
    bfa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    bfaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfae:	48 8b 00             	mov    (%rax),%rax
    bfb1:	5d                   	pop    %rbp
    bfb2:	c3                   	ret
    bfb3:	90                   	nop

000000000000bfb4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
      operator[](key_type&& __k)
    bfb4:	55                   	push   %rbp
    bfb5:	48 89 e5             	mov    %rsp,%rbp
    bfb8:	53                   	push   %rbx
    bfb9:	48 83 ec 48          	sub    $0x48,%rsp
    bfbd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    bfc1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
	iterator __i = lower_bound(__k);
    bfc5:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    bfc9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bfcd:	48 89 d6             	mov    %rdx,%rsi
    bfd0:	48 89 c7             	mov    %rax,%rdi
    bfd3:	e8 b0 09 00 00       	call   c988 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    bfd8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	if (__i == end() || key_comp()(__k, (*__i).first))
    bfdc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bfe0:	48 89 c7             	mov    %rax,%rdi
    bfe3:	e8 c6 09 00 00       	call   c9ae <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    bfe8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    bfec:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    bff0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    bff4:	48 89 d6             	mov    %rdx,%rsi
    bff7:	48 89 c7             	mov    %rax,%rdi
    bffa:	e8 c9 09 00 00       	call   c9c8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    bfff:	84 c0                	test   %al,%al
    c001:	75 32                	jne    c035 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    c003:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c007:	48 89 c7             	mov    %rax,%rdi
    c00a:	e8 db 09 00 00       	call   c9ea <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    c00f:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c013:	48 89 c7             	mov    %rax,%rdi
    c016:	e8 eb 09 00 00       	call   ca06 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c01b:	48 89 c2             	mov    %rax,%rdx
    c01e:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    c022:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    c026:	48 89 ce             	mov    %rcx,%rsi
    c029:	48 89 c7             	mov    %rax,%rdi
    c02c:	e8 f3 09 00 00       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    c031:	84 c0                	test   %al,%al
    c033:	74 07                	je     c03c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    c035:	b8 01 00 00 00       	mov    $0x1,%eax
    c03a:	eb 05                	jmp    c041 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    c03c:	b8 00 00 00 00       	mov    $0x0,%eax
    c041:	84 c0                	test   %al,%al
    c043:	74 5d                	je     c0a2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c045:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    c049:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c04d:	48 89 c7             	mov    %rax,%rdi
    c050:	e8 f8 09 00 00       	call   ca4d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    c055:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c058:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c05c:	48 89 d6             	mov    %rdx,%rsi
    c05f:	48 89 c7             	mov    %rax,%rdi
    c062:	e8 f4 09 00 00       	call   ca5b <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    c067:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    c06b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c06f:	48 89 d6             	mov    %rdx,%rsi
    c072:	48 89 c7             	mov    %rax,%rdi
    c075:	e8 16 0a 00 00       	call   ca90 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    c07a:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    c07e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    c082:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c086:	49 89 c8             	mov    %rcx,%r8
    c089:	48 89 d1             	mov    %rdx,%rcx
    c08c:	48 8d 15 79 56 00 00 	lea    0x5679(%rip),%rdx        # 1170c <_ZSt19piecewise_construct>
    c093:	48 89 c6             	mov    %rax,%rsi
    c096:	48 89 df             	mov    %rbx,%rdi
    c099:	e8 10 0a 00 00       	call   caae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    c09e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	return (*__i).second;
    c0a2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c0a6:	48 89 c7             	mov    %rax,%rdi
    c0a9:	e8 58 09 00 00       	call   ca06 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c0ae:	48 83 c0 20          	add    $0x20,%rax
      }
    c0b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c0b6:	c9                   	leave
    c0b7:	c3                   	ret

000000000000c0b8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    c0b8:	55                   	push   %rbp
    c0b9:	48 89 e5             	mov    %rsp,%rbp
    c0bc:	48 83 ec 20          	sub    $0x20,%rsp
    c0c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    c0c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c0cc:	48 89 d6             	mov    %rdx,%rsi
    c0cf:	48 89 c7             	mov    %rax,%rdi
    c0d2:	e8 d3 0a 00 00       	call   cbaa <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c0d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0db:	c9                   	leave
    c0dc:	c3                   	ret
    c0dd:	90                   	nop

000000000000c0de <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    c0de:	55                   	push   %rbp
    c0df:	48 89 e5             	mov    %rsp,%rbp
    c0e2:	48 83 ec 20          	sub    $0x20,%rsp
    c0e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    c0ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0ee:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c0f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c0f6:	48 89 d6             	mov    %rdx,%rsi
    c0f9:	48 89 c7             	mov    %rax,%rdi
    c0fc:	e8 a9 0a 00 00       	call   cbaa <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c105:	c9                   	leave
    c106:	c3                   	ret

000000000000c107 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c107:	55                   	push   %rbp
    c108:	48 89 e5             	mov    %rsp,%rbp
    c10b:	53                   	push   %rbx
    c10c:	48 83 ec 18          	sub    $0x18,%rsp
    c110:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c114:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c11c:	48 89 c7             	mov    %rax,%rdi
    c11f:	e8 a4 0a 00 00       	call   cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c124:	48 8b 18             	mov    (%rax),%rbx
    c127:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c12b:	48 89 c7             	mov    %rax,%rdi
    c12e:	e8 95 0a 00 00       	call   cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c133:	48 8b 00             	mov    (%rax),%rax
    c136:	48 39 c3             	cmp    %rax,%rbx
    c139:	0f 95 c0             	setne  %al
    c13c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c140:	c9                   	leave
    c141:	c3                   	ret

000000000000c142 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c142:	55                   	push   %rbp
    c143:	48 89 e5             	mov    %rsp,%rbp
    c146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c14a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14e:	48 8b 00             	mov    (%rax),%rax
    c151:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c159:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c15c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c160:	5d                   	pop    %rbp
    c161:	c3                   	ret

000000000000c162 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c162:	55                   	push   %rbp
    c163:	48 89 e5             	mov    %rsp,%rbp
    c166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c16a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c16e:	48 8b 00             	mov    (%rax),%rax
    c171:	5d                   	pop    %rbp
    c172:	c3                   	ret
    c173:	90                   	nop

000000000000c174 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c174:	55                   	push   %rbp
    c175:	48 89 e5             	mov    %rsp,%rbp
    c178:	48 83 ec 10          	sub    $0x10,%rsp
    c17c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c184:	48 89 c7             	mov    %rax,%rdi
    c187:	e8 4a 0a 00 00       	call   cbd6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    c18c:	90                   	nop
    c18d:	c9                   	leave
    c18e:	c3                   	ret
    c18f:	90                   	nop

000000000000c190 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c190:	55                   	push   %rbp
    c191:	48 89 e5             	mov    %rsp,%rbp
    c194:	48 83 ec 10          	sub    $0x10,%rsp
    c198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c19c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1a0:	48 89 c7             	mov    %rax,%rdi
    c1a3:	e8 3a 0a 00 00       	call   cbe2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    c1a8:	90                   	nop
    c1a9:	c9                   	leave
    c1aa:	c3                   	ret
    c1ab:	90                   	nop

000000000000c1ac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c1ac:	55                   	push   %rbp
    c1ad:	48 89 e5             	mov    %rsp,%rbp
    c1b0:	53                   	push   %rbx
    c1b1:	48 83 ec 28          	sub    $0x28,%rsp
    c1b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c1bd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c1c1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c1c5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c1c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c1cd:	48 89 d6             	mov    %rdx,%rsi
    c1d0:	48 89 c7             	mov    %rax,%rdi
    c1d3:	e8 15 0a 00 00       	call   cbed <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    c1d8:	48 89 c1             	mov    %rax,%rcx
    c1db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1df:	48 89 c2             	mov    %rax,%rdx
    c1e2:	48 89 ce             	mov    %rcx,%rsi
    c1e5:	48 89 df             	mov    %rbx,%rdi
    c1e8:	e8 61 0a 00 00       	call   cc4e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    c1ed:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c1f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1f5:	48 89 d6             	mov    %rdx,%rsi
    c1f8:	48 89 c7             	mov    %rax,%rdi
    c1fb:	e8 ac 0a 00 00       	call   ccac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    c200:	eb 1a                	jmp    c21c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    c202:	48 89 c3             	mov    %rax,%rbx
    c205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c209:	48 89 c7             	mov    %rax,%rdi
    c20c:	e8 35 00 00 00       	call   c246 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    c211:	48 89 d8             	mov    %rbx,%rax
    c214:	48 89 c7             	mov    %rax,%rdi
    c217:	e8 c4 72 ff ff       	call   34e0 <_Unwind_Resume@plt>
    c21c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c220:	c9                   	leave
    c221:	c3                   	ret

000000000000c222 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c222:	55                   	push   %rbp
    c223:	48 89 e5             	mov    %rsp,%rbp
    c226:	48 83 ec 10          	sub    $0x10,%rsp
    c22a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c22e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c232:	48 8b 10             	mov    (%rax),%rdx
    c235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c239:	48 89 d6             	mov    %rdx,%rsi
    c23c:	48 89 c7             	mov    %rax,%rdi
    c23f:	e8 a8 0a 00 00       	call   ccec <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c244:	c9                   	leave
    c245:	c3                   	ret

000000000000c246 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c246:	55                   	push   %rbp
    c247:	48 89 e5             	mov    %rsp,%rbp
    c24a:	48 83 ec 10          	sub    $0x10,%rsp
    c24e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c256:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c25e:	48 8b 00             	mov    (%rax),%rax
    c261:	48 29 c2             	sub    %rax,%rdx
    c264:	48 89 d0             	mov    %rdx,%rax
    c267:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c26b:	48 89 c2             	mov    %rax,%rdx
    c26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c272:	48 8b 08             	mov    (%rax),%rcx
    c275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c279:	48 89 ce             	mov    %rcx,%rsi
    c27c:	48 89 c7             	mov    %rax,%rdi
    c27f:	e8 a0 0a 00 00       	call   cd24 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c288:	48 89 c7             	mov    %rax,%rdi
    c28b:	e8 46 f7 ff ff       	call   b9d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    c290:	90                   	nop
    c291:	c9                   	leave
    c292:	c3                   	ret
    c293:	90                   	nop

000000000000c294 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c294:	55                   	push   %rbp
    c295:	48 89 e5             	mov    %rsp,%rbp
    c298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c29c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a0:	5d                   	pop    %rbp
    c2a1:	c3                   	ret

000000000000c2a2 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c2a2:	55                   	push   %rbp
    c2a3:	48 89 e5             	mov    %rsp,%rbp
    c2a6:	48 83 ec 20          	sub    $0x20,%rsp
    c2aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c2b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c2ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2be:	48 89 d6             	mov    %rdx,%rsi
    c2c1:	48 89 c7             	mov    %rax,%rdi
    c2c4:	e8 90 0a 00 00       	call   cd59 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    c2c9:	90                   	nop
    c2ca:	c9                   	leave
    c2cb:	c3                   	ret

000000000000c2cc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c2cc:	55                   	push   %rbp
    c2cd:	48 89 e5             	mov    %rsp,%rbp
    c2d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2d4:	90                   	nop
    c2d5:	5d                   	pop    %rbp
    c2d6:	c3                   	ret
    c2d7:	90                   	nop

000000000000c2d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c2d8:	55                   	push   %rbp
    c2d9:	48 89 e5             	mov    %rsp,%rbp
    c2dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2e0:	90                   	nop
    c2e1:	5d                   	pop    %rbp
    c2e2:	c3                   	ret

000000000000c2e3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c2e3:	55                   	push   %rbp
    c2e4:	48 89 e5             	mov    %rsp,%rbp
    c2e7:	53                   	push   %rbx
    c2e8:	48 83 ec 28          	sub    $0x28,%rsp
    c2ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c2f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c2f4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c2f8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c2fc:	48 89 d6             	mov    %rdx,%rsi
    c2ff:	48 89 c7             	mov    %rax,%rdi
    c302:	e8 bb 0a 00 00       	call   cdc2 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    c307:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c30b:	48 89 c7             	mov    %rax,%rdi
    c30e:	e8 6c 0a 00 00       	call   cd7f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    c313:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c317:	0f 92 c3             	setb   %bl
    c31a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c31e:	48 89 c7             	mov    %rax,%rdi
    c321:	e8 2c f7 ff ff       	call   ba52 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    c326:	84 db                	test   %bl,%bl
    c328:	74 0f                	je     c339 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c32a:	48 8d 05 e7 5b 00 00 	lea    0x5be7(%rip),%rax        # 11f18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c331:	48 89 c7             	mov    %rax,%rdi
    c334:	e8 07 6e ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c33d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c341:	c9                   	leave
    c342:	c3                   	ret
    c343:	90                   	nop

000000000000c344 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c344:	55                   	push   %rbp
    c345:	48 89 e5             	mov    %rsp,%rbp
    c348:	48 83 ec 10          	sub    $0x10,%rsp
    c34c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c354:	48 89 c7             	mov    %rax,%rdi
    c357:	e8 f6 f6 ff ff       	call   ba52 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    c35c:	90                   	nop
    c35d:	c9                   	leave
    c35e:	c3                   	ret
    c35f:	90                   	nop

000000000000c360 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c360:	55                   	push   %rbp
    c361:	48 89 e5             	mov    %rsp,%rbp
    c364:	53                   	push   %rbx
    c365:	48 83 ec 28          	sub    $0x28,%rsp
    c369:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c36d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c371:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c375:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c379:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c37d:	48 89 d6             	mov    %rdx,%rsi
    c380:	48 89 c7             	mov    %rax,%rdi
    c383:	e8 60 0a 00 00       	call   cde8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c388:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c38c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c390:	48 89 d6             	mov    %rdx,%rsi
    c393:	48 89 c7             	mov    %rax,%rdi
    c396:	e8 7f 0a 00 00       	call   ce1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    c39b:	eb 1a                	jmp    c3b7 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    c39d:	48 89 c3             	mov    %rax,%rbx
    c3a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a4:	48 89 c7             	mov    %rax,%rdi
    c3a7:	e8 98 ff ff ff       	call   c344 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    c3ac:	48 89 d8             	mov    %rbx,%rax
    c3af:	48 89 c7             	mov    %rax,%rdi
    c3b2:	e8 29 71 ff ff       	call   34e0 <_Unwind_Resume@plt>
    c3b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c3bb:	c9                   	leave
    c3bc:	c3                   	ret
    c3bd:	90                   	nop

000000000000c3be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c3be:	55                   	push   %rbp
    c3bf:	48 89 e5             	mov    %rsp,%rbp
    c3c2:	48 83 ec 10          	sub    $0x10,%rsp
    c3c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c3ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ce:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c3d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d6:	48 8b 00             	mov    (%rax),%rax
    c3d9:	48 29 c2             	sub    %rax,%rdx
    c3dc:	48 c1 fa 03          	sar    $0x3,%rdx
    c3e0:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    c3e7:	aa aa aa 
    c3ea:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c3ee:	48 89 c2             	mov    %rax,%rdx
    c3f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f5:	48 8b 08             	mov    (%rax),%rcx
    c3f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3fc:	48 89 ce             	mov    %rcx,%rsi
    c3ff:	48 89 c7             	mov    %rax,%rdi
    c402:	e8 73 0a 00 00       	call   ce7a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c40b:	48 89 c7             	mov    %rax,%rdi
    c40e:	e8 31 ff ff ff       	call   c344 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    c413:	90                   	nop
    c414:	c9                   	leave
    c415:	c3                   	ret

000000000000c416 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c416:	55                   	push   %rbp
    c417:	48 89 e5             	mov    %rsp,%rbp
    c41a:	48 83 ec 10          	sub    $0x10,%rsp
    c41e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c42a:	48 89 c7             	mov    %rax,%rdi
    c42d:	e8 24 00 00 00       	call   c456 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c432:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c439:	48 8b 00             	mov    (%rax),%rax
    c43c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c440:	48 89 ce             	mov    %rcx,%rsi
    c443:	48 89 c7             	mov    %rax,%rdi
    c446:	e8 64 0a 00 00       	call   ceaf <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c44b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c44f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c453:	90                   	nop
    c454:	c9                   	leave
    c455:	c3                   	ret

000000000000c456 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c456:	55                   	push   %rbp
    c457:	48 89 e5             	mov    %rsp,%rbp
    c45a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c45e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c462:	5d                   	pop    %rbp
    c463:	c3                   	ret

000000000000c464 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c464:	55                   	push   %rbp
    c465:	48 89 e5             	mov    %rsp,%rbp
    c468:	48 83 ec 20          	sub    $0x20,%rsp
    c46c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c470:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c474:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c478:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c480:	48 89 d6             	mov    %rdx,%rsi
    c483:	48 89 c7             	mov    %rax,%rdi
    c486:	e8 4d 0a 00 00       	call   ced8 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    c48b:	90                   	nop
    c48c:	c9                   	leave
    c48d:	c3                   	ret

000000000000c48e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c48e:	55                   	push   %rbp
    c48f:	48 89 e5             	mov    %rsp,%rbp
    c492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c496:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c49a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c49e:	5d                   	pop    %rbp
    c49f:	c3                   	ret

000000000000c4a0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c4a0:	55                   	push   %rbp
    c4a1:	48 89 e5             	mov    %rsp,%rbp
    c4a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c4ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4b0:	48 8b 10             	mov    (%rax),%rdx
    c4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4b7:	48 89 10             	mov    %rdx,(%rax)
    c4ba:	90                   	nop
    c4bb:	5d                   	pop    %rbp
    c4bc:	c3                   	ret
    c4bd:	90                   	nop

000000000000c4be <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c4be:	55                   	push   %rbp
    c4bf:	48 89 e5             	mov    %rsp,%rbp
    c4c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c4c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ca:	5d                   	pop    %rbp
    c4cb:	c3                   	ret

000000000000c4cc <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c4cc:	55                   	push   %rbp
    c4cd:	48 89 e5             	mov    %rsp,%rbp
    c4d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4d4:	90                   	nop
    c4d5:	5d                   	pop    %rbp
    c4d6:	c3                   	ret
    c4d7:	90                   	nop

000000000000c4d8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c4d8:	55                   	push   %rbp
    c4d9:	48 89 e5             	mov    %rsp,%rbp
    c4dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4e0:	90                   	nop
    c4e1:	5d                   	pop    %rbp
    c4e2:	c3                   	ret
    c4e3:	90                   	nop

000000000000c4e4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c4e4:	55                   	push   %rbp
    c4e5:	48 89 e5             	mov    %rsp,%rbp
    c4e8:	48 83 ec 10          	sub    $0x10,%rsp
    c4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4f4:	48 89 c7             	mov    %rax,%rdi
    c4f7:	e8 6c f7 ff ff       	call   bc68 <_ZNSaIPKcED1Ev>
    c4fc:	90                   	nop
    c4fd:	c9                   	leave
    c4fe:	c3                   	ret
    c4ff:	90                   	nop

000000000000c500 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    c500:	55                   	push   %rbp
    c501:	48 89 e5             	mov    %rsp,%rbp
    c504:	48 83 ec 10          	sub    $0x10,%rsp
    c508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c50c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    c510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c514:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c518:	48 89 d6             	mov    %rdx,%rsi
    c51b:	48 89 c7             	mov    %rax,%rdi
    c51e:	e8 db 09 00 00       	call   cefe <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    c523:	90                   	nop
    c524:	c9                   	leave
    c525:	c3                   	ret

000000000000c526 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c526:	55                   	push   %rbp
    c527:	48 89 e5             	mov    %rsp,%rbp
    c52a:	48 83 ec 10          	sub    $0x10,%rsp
    c52e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c536:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c53a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c53e:	48 8b 00             	mov    (%rax),%rax
    c541:	48 29 c2             	sub    %rax,%rdx
    c544:	48 89 d0             	mov    %rdx,%rax
    c547:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c54b:	48 89 c2             	mov    %rax,%rdx
    c54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c552:	48 8b 08             	mov    (%rax),%rcx
    c555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c559:	48 89 ce             	mov    %rcx,%rsi
    c55c:	48 89 c7             	mov    %rax,%rdi
    c55f:	e8 cc 09 00 00       	call   cf30 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    c564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c568:	48 89 c7             	mov    %rax,%rdi
    c56b:	e8 74 ff ff ff       	call   c4e4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    c570:	90                   	nop
    c571:	c9                   	leave
    c572:	c3                   	ret
    c573:	90                   	nop

000000000000c574 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    c574:	55                   	push   %rbp
    c575:	48 89 e5             	mov    %rsp,%rbp
    c578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c580:	48 8b 00             	mov    (%rax),%rax
    c583:	5d                   	pop    %rbp
    c584:	c3                   	ret
    c585:	90                   	nop

000000000000c586 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    c586:	55                   	push   %rbp
    c587:	48 89 e5             	mov    %rsp,%rbp
    c58a:	53                   	push   %rbx
    c58b:	48 83 ec 18          	sub    $0x18,%rsp
    c58f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c593:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c597:	48 89 c7             	mov    %rax,%rdi
    c59a:	e8 d5 ff ff ff       	call   c574 <_ZNKSt16initializer_listIPKcE5beginEv>
    c59f:	48 89 c3             	mov    %rax,%rbx
    c5a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5a6:	48 89 c7             	mov    %rax,%rdi
    c5a9:	e8 b8 09 00 00       	call   cf66 <_ZNKSt16initializer_listIPKcE4sizeEv>
    c5ae:	48 c1 e0 03          	shl    $0x3,%rax
    c5b2:	48 01 d8             	add    %rbx,%rax
    c5b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c5b9:	c9                   	leave
    c5ba:	c3                   	ret

000000000000c5bb <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    c5bb:	55                   	push   %rbp
    c5bc:	48 89 e5             	mov    %rsp,%rbp
    c5bf:	48 83 ec 10          	sub    $0x10,%rsp
    c5c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    c5cb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c5cf:	48 89 c7             	mov    %rax,%rdi
    c5d2:	e8 a1 09 00 00       	call   cf78 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    c5d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c5df:	48 89 d6             	mov    %rdx,%rsi
    c5e2:	48 89 c7             	mov    %rax,%rdi
    c5e5:	e8 99 09 00 00       	call   cf83 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    c5ea:	c9                   	leave
    c5eb:	c3                   	ret

000000000000c5ec <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    c5ec:	55                   	push   %rbp
    c5ed:	48 89 e5             	mov    %rsp,%rbp
    c5f0:	53                   	push   %rbx
    c5f1:	48 83 ec 38          	sub    $0x38,%rsp
    c5f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c5f9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c5fd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    c601:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c609:	48 89 d6             	mov    %rdx,%rsi
    c60c:	48 89 c7             	mov    %rax,%rdi
    c60f:	e8 a7 ff ff ff       	call   c5bb <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    c614:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    c618:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c61c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c620:	48 89 c7             	mov    %rax,%rdi
    c623:	e8 74 00 00 00       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c628:	48 89 c2             	mov    %rax,%rdx
    c62b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c62f:	48 89 d6             	mov    %rdx,%rsi
    c632:	48 89 c7             	mov    %rax,%rdi
    c635:	e8 63 09 00 00       	call   cf9d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    c63a:	48 89 c6             	mov    %rax,%rsi
    c63d:	48 89 df             	mov    %rbx,%rdi
    c640:	e8 b9 09 00 00       	call   cffe <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    c645:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c649:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c64c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c650:	48 8b 00             	mov    (%rax),%rax
    c653:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c657:	48 c1 e2 03          	shl    $0x3,%rdx
    c65b:	48 01 c2             	add    %rax,%rdx
    c65e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c662:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    c666:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c66a:	48 89 c7             	mov    %rax,%rdi
    c66d:	e8 2a 00 00 00       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c672:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    c675:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c679:	48 8b 10             	mov    (%rax),%rdx
    c67c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    c680:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c684:	48 89 c7             	mov    %rax,%rdi
    c687:	e8 a5 09 00 00       	call   d031 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    c68c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c690:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    c694:	90                   	nop
    c695:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c699:	c9                   	leave
    c69a:	c3                   	ret
    c69b:	90                   	nop

000000000000c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c69c:	55                   	push   %rbp
    c69d:	48 89 e5             	mov    %rsp,%rbp
    c6a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c6a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6a8:	5d                   	pop    %rbp
    c6a9:	c3                   	ret

000000000000c6aa <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c6aa:	55                   	push   %rbp
    c6ab:	48 89 e5             	mov    %rsp,%rbp
    c6ae:	48 83 ec 20          	sub    $0x20,%rsp
    c6b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c6be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c6c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c6:	48 89 d6             	mov    %rdx,%rsi
    c6c9:	48 89 c7             	mov    %rax,%rdi
    c6cc:	e8 91 09 00 00       	call   d062 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    c6d1:	90                   	nop
    c6d2:	c9                   	leave
    c6d3:	c3                   	ret

000000000000c6d4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c6d4:	55                   	push   %rbp
    c6d5:	48 89 e5             	mov    %rsp,%rbp
    c6d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6dc:	90                   	nop
    c6dd:	5d                   	pop    %rbp
    c6de:	c3                   	ret
    c6df:	90                   	nop

000000000000c6e0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c6e0:	55                   	push   %rbp
    c6e1:	48 89 e5             	mov    %rsp,%rbp
    c6e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6e8:	90                   	nop
    c6e9:	5d                   	pop    %rbp
    c6ea:	c3                   	ret

000000000000c6eb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c6eb:	55                   	push   %rbp
    c6ec:	48 89 e5             	mov    %rsp,%rbp
    c6ef:	53                   	push   %rbx
    c6f0:	48 83 ec 28          	sub    $0x28,%rsp
    c6f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c6f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c6fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c700:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c704:	48 89 d6             	mov    %rdx,%rsi
    c707:	48 89 c7             	mov    %rax,%rdi
    c70a:	e8 bb 09 00 00       	call   d0ca <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    c70f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c713:	48 89 c7             	mov    %rax,%rdi
    c716:	e8 6d 09 00 00       	call   d088 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    c71b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c71f:	0f 92 c3             	setb   %bl
    c722:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c726:	48 89 c7             	mov    %rax,%rdi
    c729:	e8 3e f6 ff ff       	call   bd6c <_ZNSaI21VkExtensionPropertiesED1Ev>
    c72e:	84 db                	test   %bl,%bl
    c730:	74 0f                	je     c741 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c732:	48 8d 05 df 57 00 00 	lea    0x57df(%rip),%rax        # 11f18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c739:	48 89 c7             	mov    %rax,%rdi
    c73c:	e8 ff 69 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c741:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c745:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c749:	c9                   	leave
    c74a:	c3                   	ret
    c74b:	90                   	nop

000000000000c74c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c74c:	55                   	push   %rbp
    c74d:	48 89 e5             	mov    %rsp,%rbp
    c750:	48 83 ec 10          	sub    $0x10,%rsp
    c754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c75c:	48 89 c7             	mov    %rax,%rdi
    c75f:	e8 08 f6 ff ff       	call   bd6c <_ZNSaI21VkExtensionPropertiesED1Ev>
    c764:	90                   	nop
    c765:	c9                   	leave
    c766:	c3                   	ret
    c767:	90                   	nop

000000000000c768 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c768:	55                   	push   %rbp
    c769:	48 89 e5             	mov    %rsp,%rbp
    c76c:	53                   	push   %rbx
    c76d:	48 83 ec 28          	sub    $0x28,%rsp
    c771:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c775:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c779:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c77d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c781:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c785:	48 89 d6             	mov    %rdx,%rsi
    c788:	48 89 c7             	mov    %rax,%rdi
    c78b:	e8 60 09 00 00       	call   d0f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c790:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c798:	48 89 d6             	mov    %rdx,%rsi
    c79b:	48 89 c7             	mov    %rax,%rdi
    c79e:	e8 7f 09 00 00       	call   d122 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    c7a3:	eb 1a                	jmp    c7bf <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    c7a5:	48 89 c3             	mov    %rax,%rbx
    c7a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7ac:	48 89 c7             	mov    %rax,%rdi
    c7af:	e8 98 ff ff ff       	call   c74c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    c7b4:	48 89 d8             	mov    %rbx,%rax
    c7b7:	48 89 c7             	mov    %rax,%rdi
    c7ba:	e8 21 6d ff ff       	call   34e0 <_Unwind_Resume@plt>
    c7bf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c7c3:	c9                   	leave
    c7c4:	c3                   	ret
    c7c5:	90                   	nop

000000000000c7c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c7c6:	55                   	push   %rbp
    c7c7:	48 89 e5             	mov    %rsp,%rbp
    c7ca:	48 83 ec 10          	sub    $0x10,%rsp
    c7ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c7d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7d6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c7da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7de:	48 8b 00             	mov    (%rax),%rax
    c7e1:	48 29 c2             	sub    %rax,%rdx
    c7e4:	48 c1 fa 02          	sar    $0x2,%rdx
    c7e8:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    c7ef:	fc c0 0f 
    c7f2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c7f6:	48 89 c2             	mov    %rax,%rdx
    c7f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7fd:	48 8b 08             	mov    (%rax),%rcx
    c800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c804:	48 89 ce             	mov    %rcx,%rsi
    c807:	48 89 c7             	mov    %rax,%rdi
    c80a:	e8 75 09 00 00       	call   d184 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c80f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c813:	48 89 c7             	mov    %rax,%rdi
    c816:	e8 31 ff ff ff       	call   c74c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    c81b:	90                   	nop
    c81c:	c9                   	leave
    c81d:	c3                   	ret

000000000000c81e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c81e:	55                   	push   %rbp
    c81f:	48 89 e5             	mov    %rsp,%rbp
    c822:	48 83 ec 10          	sub    $0x10,%rsp
    c826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c82a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c82e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c832:	48 89 c7             	mov    %rax,%rdi
    c835:	e8 24 00 00 00       	call   c85e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c83a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c83d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c841:	48 8b 00             	mov    (%rax),%rax
    c844:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c848:	48 89 ce             	mov    %rcx,%rsi
    c84b:	48 89 c7             	mov    %rax,%rdi
    c84e:	e8 66 09 00 00       	call   d1b9 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c853:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c857:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c85b:	90                   	nop
    c85c:	c9                   	leave
    c85d:	c3                   	ret

000000000000c85e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c85e:	55                   	push   %rbp
    c85f:	48 89 e5             	mov    %rsp,%rbp
    c862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c86a:	5d                   	pop    %rbp
    c86b:	c3                   	ret

000000000000c86c <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c86c:	55                   	push   %rbp
    c86d:	48 89 e5             	mov    %rsp,%rbp
    c870:	48 83 ec 20          	sub    $0x20,%rsp
    c874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c878:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c87c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c880:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c888:	48 89 d6             	mov    %rdx,%rsi
    c88b:	48 89 c7             	mov    %rax,%rdi
    c88e:	e8 4f 09 00 00       	call   d1e2 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    c893:	90                   	nop
    c894:	c9                   	leave
    c895:	c3                   	ret

000000000000c896 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c896:	55                   	push   %rbp
    c897:	48 89 e5             	mov    %rsp,%rbp
    c89a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c89e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c8a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8a6:	5d                   	pop    %rbp
    c8a7:	c3                   	ret

000000000000c8a8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c8a8:	55                   	push   %rbp
    c8a9:	48 89 e5             	mov    %rsp,%rbp
    c8ac:	48 83 ec 10          	sub    $0x10,%rsp
    c8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b8:	48 89 c7             	mov    %rax,%rdi
    c8bb:	e8 48 09 00 00       	call   d208 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    c8c0:	90                   	nop
    c8c1:	c9                   	leave
    c8c2:	c3                   	ret
    c8c3:	90                   	nop

000000000000c8c4 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    c8c4:	55                   	push   %rbp
    c8c5:	48 89 e5             	mov    %rsp,%rbp
    c8c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    c8cc:	90                   	nop
    c8cd:	5d                   	pop    %rbp
    c8ce:	c3                   	ret
    c8cf:	90                   	nop

000000000000c8d0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    c8d0:	55                   	push   %rbp
    c8d1:	48 89 e5             	mov    %rsp,%rbp
    c8d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8d8:	90                   	nop
    c8d9:	5d                   	pop    %rbp
    c8da:	c3                   	ret
    c8db:	90                   	nop

000000000000c8dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    c8dc:	55                   	push   %rbp
    c8dd:	48 89 e5             	mov    %rsp,%rbp
    c8e0:	48 83 ec 20          	sub    $0x20,%rsp
    c8e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    c8ec:	eb 49                	jmp    c937 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	  _M_erase(_S_right(__x));
    c8ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c8f2:	48 89 c7             	mov    %rax,%rdi
    c8f5:	e8 19 09 00 00       	call   d213 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    c8fa:	48 89 c2             	mov    %rax,%rdx
    c8fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c901:	48 89 d6             	mov    %rdx,%rsi
    c904:	48 89 c7             	mov    %rax,%rdi
    c907:	e8 d0 ff ff ff       	call   c8dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    c90c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c910:	48 89 c7             	mov    %rax,%rdi
    c913:	e8 0d 09 00 00       	call   d225 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    c918:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    c91c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c920:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c924:	48 89 d6             	mov    %rdx,%rsi
    c927:	48 89 c7             	mov    %rax,%rdi
    c92a:	e8 09 09 00 00       	call   d238 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    c92f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c933:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    c937:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c93c:	75 b0                	jne    c8ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
    }
    c93e:	90                   	nop
    c93f:	90                   	nop
    c940:	c9                   	leave
    c941:	c3                   	ret

000000000000c942 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    c942:	55                   	push   %rbp
    c943:	48 89 e5             	mov    %rsp,%rbp
    c946:	48 83 ec 10          	sub    $0x10,%rsp
    c94a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    c94e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c952:	48 89 c7             	mov    %rax,%rdi
    c955:	e8 18 09 00 00       	call   d272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    c95a:	c9                   	leave
    c95b:	c3                   	ret

000000000000c95c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c95c:	55                   	push   %rbp
    c95d:	48 89 e5             	mov    %rsp,%rbp
    c960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c964:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c968:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c96c:	48 8b 10             	mov    (%rax),%rdx
    c96f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c973:	48 89 10             	mov    %rdx,(%rax)
    c976:	90                   	nop
    c977:	5d                   	pop    %rbp
    c978:	c3                   	ret
    c979:	90                   	nop

000000000000c97a <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c97a:	55                   	push   %rbp
    c97b:	48 89 e5             	mov    %rsp,%rbp
    c97e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c986:	5d                   	pop    %rbp
    c987:	c3                   	ret

000000000000c988 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
      lower_bound(const key_type& __x)
    c988:	55                   	push   %rbp
    c989:	48 89 e5             	mov    %rsp,%rbp
    c98c:	48 83 ec 10          	sub    $0x10,%rsp
    c990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c994:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    c998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c9a0:	48 89 d6             	mov    %rdx,%rsi
    c9a3:	48 89 c7             	mov    %rax,%rdi
    c9a6:	e8 d9 08 00 00       	call   d284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    c9ab:	c9                   	leave
    c9ac:	c3                   	ret
    c9ad:	90                   	nop

000000000000c9ae <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c9ae:	55                   	push   %rbp
    c9af:	48 89 e5             	mov    %rsp,%rbp
    c9b2:	48 83 ec 10          	sub    $0x10,%rsp
    c9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    c9ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9be:	48 89 c7             	mov    %rax,%rdi
    c9c1:	e8 0a 09 00 00       	call   d2d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    c9c6:	c9                   	leave
    c9c7:	c3                   	ret

000000000000c9c8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    c9c8:	55                   	push   %rbp
    c9c9:	48 89 e5             	mov    %rsp,%rbp
    c9cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    c9d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9d8:	48 8b 10             	mov    (%rax),%rdx
    c9db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9df:	48 8b 00             	mov    (%rax),%rax
    c9e2:	48 39 c2             	cmp    %rax,%rdx
    c9e5:	0f 94 c0             	sete   %al
    c9e8:	5d                   	pop    %rbp
    c9e9:	c3                   	ret

000000000000c9ea <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    c9ea:	55                   	push   %rbp
    c9eb:	48 89 e5             	mov    %rsp,%rbp
    c9ee:	48 83 ec 10          	sub    $0x10,%rsp
    c9f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    c9f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9fa:	48 89 c7             	mov    %rax,%rdi
    c9fd:	e8 f8 08 00 00       	call   d2fa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    ca02:	90                   	nop
    ca03:	c9                   	leave
    ca04:	c3                   	ret
    ca05:	90                   	nop

000000000000ca06 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ca06:	55                   	push   %rbp
    ca07:	48 89 e5             	mov    %rsp,%rbp
    ca0a:	48 83 ec 10          	sub    $0x10,%rsp
    ca0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    ca12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca16:	48 8b 00             	mov    (%rax),%rax
    ca19:	48 89 c7             	mov    %rax,%rdi
    ca1c:	e8 e5 08 00 00       	call   d306 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    ca21:	c9                   	leave
    ca22:	c3                   	ret
    ca23:	90                   	nop

000000000000ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
    ca24:	55                   	push   %rbp
    ca25:	48 89 e5             	mov    %rsp,%rbp
    ca28:	48 83 ec 20          	sub    $0x20,%rsp
    ca2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ca34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    ca38:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ca3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca40:	48 89 d6             	mov    %rdx,%rsi
    ca43:	48 89 c7             	mov    %rax,%rdi
    ca46:	e8 d9 08 00 00       	call   d324 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    ca4b:	c9                   	leave
    ca4c:	c3                   	ret

000000000000ca4d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    ca4d:	55                   	push   %rbp
    ca4e:	48 89 e5             	mov    %rsp,%rbp
    ca51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ca55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca59:	5d                   	pop    %rbp
    ca5a:	c3                   	ret

000000000000ca5b <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
    forward_as_tuple(_Elements&&... __args) noexcept
    ca5b:	55                   	push   %rbp
    ca5c:	48 89 e5             	mov    %rsp,%rbp
    ca5f:	48 83 ec 10          	sub    $0x10,%rsp
    ca63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    ca6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca6f:	48 89 c7             	mov    %rax,%rdi
    ca72:	e8 d5 08 00 00       	call   d34c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    ca77:	48 89 c2             	mov    %rax,%rdx
    ca7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca7e:	48 89 d6             	mov    %rdx,%rsi
    ca81:	48 89 c7             	mov    %rax,%rdi
    ca84:	e8 d1 08 00 00       	call   d35a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    ca89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca8d:	c9                   	leave
    ca8e:	c3                   	ret
    ca8f:	90                   	nop

000000000000ca90 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    ca90:	55                   	push   %rbp
    ca91:	48 89 e5             	mov    %rsp,%rbp
    ca94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    ca9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    caa0:	48 8b 10             	mov    (%rax),%rdx
    caa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa7:	48 89 10             	mov    %rdx,(%rax)
    caaa:	90                   	nop
    caab:	5d                   	pop    %rbp
    caac:	c3                   	ret
    caad:	90                   	nop

000000000000caae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    caae:	55                   	push   %rbp
    caaf:	48 89 e5             	mov    %rsp,%rbp
    cab2:	41 54                	push   %r12
    cab4:	53                   	push   %rbx
    cab5:	48 83 ec 60          	sub    $0x60,%rsp
    cab9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    cabd:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    cac1:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    cac5:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    cac9:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    cacd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    cad1:	48 89 c7             	mov    %rax,%rdi
    cad4:	e8 60 af ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    cad9:	49 89 c4             	mov    %rax,%r12
    cadc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cae0:	48 89 c7             	mov    %rax,%rdi
    cae3:	e8 a5 08 00 00       	call   d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    cae8:	48 89 c3             	mov    %rax,%rbx
    caeb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    caef:	48 89 c7             	mov    %rax,%rdi
    caf2:	e8 26 af ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    caf7:	48 89 c2             	mov    %rax,%rdx
    cafa:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    cafe:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb02:	4d 89 e0             	mov    %r12,%r8
    cb05:	48 89 d9             	mov    %rbx,%rcx
    cb08:	48 89 c7             	mov    %rax,%rdi
    cb0b:	e8 8c 08 00 00       	call   d39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    cb10:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb14:	48 89 c7             	mov    %rax,%rdi
    cb17:	e8 80 0d 00 00       	call   d89c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    cb1c:	48 89 c2             	mov    %rax,%rdx
    cb1f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    cb23:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cb27:	48 89 ce             	mov    %rcx,%rsi
    cb2a:	48 89 c7             	mov    %rax,%rdi
    cb2d:	e8 1c 09 00 00       	call   d44e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    cb32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    cb36:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    cb3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cb3e:	48 85 c0             	test   %rax,%rax
    cb41:	74 1c                	je     cb5f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    cb43:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    cb47:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cb4b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb4f:	48 89 ce             	mov    %rcx,%rsi
    cb52:	48 89 c7             	mov    %rax,%rdi
    cb55:	e8 60 0d 00 00       	call   d8ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    cb5a:	48 89 c3             	mov    %rax,%rbx
    cb5d:	eb 17                	jmp    cb76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    cb5f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    cb63:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    cb67:	48 89 d6             	mov    %rdx,%rsi
    cb6a:	48 89 c7             	mov    %rax,%rdi
    cb6d:	e8 9e 0d 00 00       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    cb72:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    cb76:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb7a:	48 89 c7             	mov    %rax,%rdi
    cb7d:	e8 96 08 00 00       	call   d418 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    cb82:	48 89 d8             	mov    %rbx,%rax
    cb85:	eb 1a                	jmp    cba1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    cb87:	48 89 c3             	mov    %rax,%rbx
    cb8a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb8e:	48 89 c7             	mov    %rax,%rdi
    cb91:	e8 82 08 00 00       	call   d418 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    cb96:	48 89 d8             	mov    %rbx,%rax
    cb99:	48 89 c7             	mov    %rax,%rdi
    cb9c:	e8 3f 69 ff ff       	call   34e0 <_Unwind_Resume@plt>
    cba1:	48 83 c4 60          	add    $0x60,%rsp
    cba5:	5b                   	pop    %rbx
    cba6:	41 5c                	pop    %r12
    cba8:	5d                   	pop    %rbp
    cba9:	c3                   	ret

000000000000cbaa <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cbaa:	55                   	push   %rbp
    cbab:	48 89 e5             	mov    %rsp,%rbp
    cbae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cbb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbba:	48 8b 10             	mov    (%rax),%rdx
    cbbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc1:	48 89 10             	mov    %rdx,(%rax)
    cbc4:	90                   	nop
    cbc5:	5d                   	pop    %rbp
    cbc6:	c3                   	ret
    cbc7:	90                   	nop

000000000000cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cbc8:	55                   	push   %rbp
    cbc9:	48 89 e5             	mov    %rsp,%rbp
    cbcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cbd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd4:	5d                   	pop    %rbp
    cbd5:	c3                   	ret

000000000000cbd6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    cbd6:	55                   	push   %rbp
    cbd7:	48 89 e5             	mov    %rsp,%rbp
    cbda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbde:	90                   	nop
    cbdf:	5d                   	pop    %rbp
    cbe0:	c3                   	ret
    cbe1:	90                   	nop

000000000000cbe2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    cbe2:	55                   	push   %rbp
    cbe3:	48 89 e5             	mov    %rsp,%rbp
    cbe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbea:	90                   	nop
    cbeb:	5d                   	pop    %rbp
    cbec:	c3                   	ret

000000000000cbed <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    cbed:	55                   	push   %rbp
    cbee:	48 89 e5             	mov    %rsp,%rbp
    cbf1:	53                   	push   %rbx
    cbf2:	48 83 ec 28          	sub    $0x28,%rsp
    cbf6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cbfa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    cbfe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cc02:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    cc06:	48 89 d6             	mov    %rdx,%rsi
    cc09:	48 89 c7             	mov    %rax,%rdi
    cc0c:	e8 ed 00 00 00       	call   ccfe <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    cc11:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    cc15:	48 89 c7             	mov    %rax,%rdi
    cc18:	e8 0d 0d 00 00       	call   d92a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    cc1d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    cc21:	0f 92 c3             	setb   %bl
    cc24:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    cc28:	48 89 c7             	mov    %rax,%rdi
    cc2b:	e8 60 f5 ff ff       	call   c190 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    cc30:	84 db                	test   %bl,%bl
    cc32:	74 0f                	je     cc43 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    cc34:	48 8d 05 dd 52 00 00 	lea    0x52dd(%rip),%rax        # 11f18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    cc3b:	48 89 c7             	mov    %rax,%rdi
    cc3e:	e8 fd 64 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    cc43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    cc47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cc4b:	c9                   	leave
    cc4c:	c3                   	ret
    cc4d:	90                   	nop

000000000000cc4e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    cc4e:	55                   	push   %rbp
    cc4f:	48 89 e5             	mov    %rsp,%rbp
    cc52:	53                   	push   %rbx
    cc53:	48 83 ec 28          	sub    $0x28,%rsp
    cc57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc5b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc5f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    cc63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc67:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cc6b:	48 89 d6             	mov    %rdx,%rsi
    cc6e:	48 89 c7             	mov    %rax,%rdi
    cc71:	e8 f6 0c 00 00       	call   d96c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    cc76:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cc7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc7e:	48 89 d6             	mov    %rdx,%rsi
    cc81:	48 89 c7             	mov    %rax,%rdi
    cc84:	e8 15 0d 00 00       	call   d99e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    cc89:	eb 1a                	jmp    cca5 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    cc8b:	48 89 c3             	mov    %rax,%rbx
    cc8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc92:	48 89 c7             	mov    %rax,%rdi
    cc95:	e8 3c ed ff ff       	call   b9d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    cc9a:	48 89 d8             	mov    %rbx,%rax
    cc9d:	48 89 c7             	mov    %rax,%rdi
    cca0:	e8 3b 68 ff ff       	call   34e0 <_Unwind_Resume@plt>
    cca5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cca9:	c9                   	leave
    ccaa:	c3                   	ret
    ccab:	90                   	nop

000000000000ccac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ccac:	55                   	push   %rbp
    ccad:	48 89 e5             	mov    %rsp,%rbp
    ccb0:	48 83 ec 10          	sub    $0x10,%rsp
    ccb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ccbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccc0:	48 89 c7             	mov    %rax,%rdi
    ccc3:	e8 cc f5 ff ff       	call   c294 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ccc8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    cccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cccf:	48 8b 00             	mov    (%rax),%rax
    ccd2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ccd6:	48 89 ce             	mov    %rcx,%rsi
    ccd9:	48 89 c7             	mov    %rax,%rdi
    ccdc:	e8 13 0d 00 00       	call   d9f4 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    cce1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cce5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    cce9:	90                   	nop
    ccea:	c9                   	leave
    cceb:	c3                   	ret

000000000000ccec <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ccec:	55                   	push   %rbp
    cced:	48 89 e5             	mov    %rsp,%rbp
    ccf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ccf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ccfc:	5d                   	pop    %rbp
    ccfd:	c3                   	ret

000000000000ccfe <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ccfe:	55                   	push   %rbp
    ccff:	48 89 e5             	mov    %rsp,%rbp
    cd02:	48 83 ec 10          	sub    $0x10,%rsp
    cd06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    cd0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd16:	48 89 d6             	mov    %rdx,%rsi
    cd19:	48 89 c7             	mov    %rax,%rdi
    cd1c:	e8 fd 0c 00 00       	call   da1e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    cd21:	90                   	nop
    cd22:	c9                   	leave
    cd23:	c3                   	ret

000000000000cd24 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    cd24:	55                   	push   %rbp
    cd25:	48 89 e5             	mov    %rsp,%rbp
    cd28:	48 83 ec 20          	sub    $0x20,%rsp
    cd2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cd34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    cd38:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cd3d:	74 17                	je     cd56 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    cd3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cd4b:	48 89 ce             	mov    %rcx,%rsi
    cd4e:	48 89 c7             	mov    %rax,%rdi
    cd51:	e8 d7 0c 00 00       	call   da2d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    cd56:	90                   	nop
    cd57:	c9                   	leave
    cd58:	c3                   	ret

000000000000cd59 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cd59:	55                   	push   %rbp
    cd5a:	48 89 e5             	mov    %rsp,%rbp
    cd5d:	48 83 ec 10          	sub    $0x10,%rsp
    cd61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cd69:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd71:	48 89 d6             	mov    %rdx,%rsi
    cd74:	48 89 c7             	mov    %rax,%rdi
    cd77:	e8 df 0c 00 00       	call   da5b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    cd7c:	90                   	nop
    cd7d:	c9                   	leave
    cd7e:	c3                   	ret

000000000000cd7f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    cd7f:	55                   	push   %rbp
    cd80:	48 89 e5             	mov    %rsp,%rbp
    cd83:	48 83 ec 20          	sub    $0x20,%rsp
    cd87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    cd8b:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    cd92:	55 55 05 
    cd95:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    cd99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd9d:	48 89 c7             	mov    %rax,%rdi
    cda0:	e8 c5 0c 00 00       	call   da6a <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    cda5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    cda9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    cdad:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cdb1:	48 89 d6             	mov    %rdx,%rsi
    cdb4:	48 89 c7             	mov    %rax,%rdi
    cdb7:	e8 a8 6d ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    cdbc:	48 8b 00             	mov    (%rax),%rax
      }
    cdbf:	c9                   	leave
    cdc0:	c3                   	ret
    cdc1:	90                   	nop

000000000000cdc2 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    cdc2:	55                   	push   %rbp
    cdc3:	48 89 e5             	mov    %rsp,%rbp
    cdc6:	48 83 ec 10          	sub    $0x10,%rsp
    cdca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    cdd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cdd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdda:	48 89 d6             	mov    %rdx,%rsi
    cddd:	48 89 c7             	mov    %rax,%rdi
    cde0:	e8 9f 0c 00 00       	call   da84 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    cde5:	90                   	nop
    cde6:	c9                   	leave
    cde7:	c3                   	ret

000000000000cde8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    cde8:	55                   	push   %rbp
    cde9:	48 89 e5             	mov    %rsp,%rbp
    cdec:	48 83 ec 10          	sub    $0x10,%rsp
    cdf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    cdf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cdfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce00:	48 89 d6             	mov    %rdx,%rsi
    ce03:	48 89 c7             	mov    %rax,%rdi
    ce06:	e8 b7 ff ff ff       	call   cdc2 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    ce0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce0f:	48 89 c7             	mov    %rax,%rdi
    ce12:	e8 7d 0c 00 00       	call   da94 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ce17:	90                   	nop
    ce18:	c9                   	leave
    ce19:	c3                   	ret

000000000000ce1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ce1a:	55                   	push   %rbp
    ce1b:	48 89 e5             	mov    %rsp,%rbp
    ce1e:	48 83 ec 10          	sub    $0x10,%rsp
    ce22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ce2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce32:	48 89 d6             	mov    %rdx,%rsi
    ce35:	48 89 c7             	mov    %rax,%rdi
    ce38:	e8 85 0c 00 00       	call   dac2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    ce3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce41:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ce44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce48:	48 8b 10             	mov    (%rax),%rdx
    ce4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce4f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ce53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce57:	48 8b 08             	mov    (%rax),%rcx
    ce5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce5e:	48 89 d0             	mov    %rdx,%rax
    ce61:	48 01 c0             	add    %rax,%rax
    ce64:	48 01 d0             	add    %rdx,%rax
    ce67:	48 c1 e0 03          	shl    $0x3,%rax
    ce6b:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    ce6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce73:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    ce77:	90                   	nop
    ce78:	c9                   	leave
    ce79:	c3                   	ret

000000000000ce7a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    ce7a:	55                   	push   %rbp
    ce7b:	48 89 e5             	mov    %rsp,%rbp
    ce7e:	48 83 ec 20          	sub    $0x20,%rsp
    ce82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ce8e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ce93:	74 17                	je     ceac <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ce95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce99:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce9d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cea1:	48 89 ce             	mov    %rcx,%rsi
    cea4:	48 89 c7             	mov    %rax,%rdi
    cea7:	e8 49 0c 00 00       	call   daf5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    ceac:	90                   	nop
    cead:	c9                   	leave
    ceae:	c3                   	ret

000000000000ceaf <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ceaf:	55                   	push   %rbp
    ceb0:	48 89 e5             	mov    %rsp,%rbp
    ceb3:	48 83 ec 20          	sub    $0x20,%rsp
    ceb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cebb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cebf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    cec3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cecb:	48 89 d6             	mov    %rdx,%rsi
    cece:	48 89 c7             	mov    %rax,%rdi
    ced1:	e8 4d 0c 00 00       	call   db23 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    ced6:	c9                   	leave
    ced7:	c3                   	ret

000000000000ced8 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ced8:	55                   	push   %rbp
    ced9:	48 89 e5             	mov    %rsp,%rbp
    cedc:	48 83 ec 10          	sub    $0x10,%rsp
    cee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cee4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cee8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ceec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cef0:	48 89 d6             	mov    %rdx,%rsi
    cef3:	48 89 c7             	mov    %rax,%rdi
    cef6:	e8 51 0c 00 00       	call   db4c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    cefb:	90                   	nop
    cefc:	c9                   	leave
    cefd:	c3                   	ret

000000000000cefe <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    cefe:	55                   	push   %rbp
    ceff:	48 89 e5             	mov    %rsp,%rbp
    cf02:	48 83 ec 10          	sub    $0x10,%rsp
    cf06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    cf0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf16:	48 89 d6             	mov    %rdx,%rsi
    cf19:	48 89 c7             	mov    %rax,%rdi
    cf1c:	e8 3b 0c 00 00       	call   db5c <_ZNSaIPKcEC1ERKS1_>
    cf21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf25:	48 89 c7             	mov    %rax,%rdi
    cf28:	e8 55 0c 00 00       	call   db82 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    cf2d:	90                   	nop
    cf2e:	c9                   	leave
    cf2f:	c3                   	ret

000000000000cf30 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    cf30:	55                   	push   %rbp
    cf31:	48 89 e5             	mov    %rsp,%rbp
    cf34:	48 83 ec 20          	sub    $0x20,%rsp
    cf38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    cf44:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cf49:	74 17                	je     cf62 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    cf4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cf57:	48 89 ce             	mov    %rcx,%rsi
    cf5a:	48 89 c7             	mov    %rax,%rdi
    cf5d:	e8 4e 0c 00 00       	call   dbb0 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    cf62:	90                   	nop
    cf63:	c9                   	leave
    cf64:	c3                   	ret
    cf65:	90                   	nop

000000000000cf66 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    cf66:	55                   	push   %rbp
    cf67:	48 89 e5             	mov    %rsp,%rbp
    cf6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf72:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf76:	5d                   	pop    %rbp
    cf77:	c3                   	ret

000000000000cf78 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    cf78:	55                   	push   %rbp
    cf79:	48 89 e5             	mov    %rsp,%rbp
    cf7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cf80:	90                   	nop
    cf81:	5d                   	pop    %rbp
    cf82:	c3                   	ret

000000000000cf83 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    cf83:	55                   	push   %rbp
    cf84:	48 89 e5             	mov    %rsp,%rbp
    cf87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf8b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    cf8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cf93:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    cf97:	48 c1 f8 03          	sar    $0x3,%rax
    }
    cf9b:	5d                   	pop    %rbp
    cf9c:	c3                   	ret

000000000000cf9d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    cf9d:	55                   	push   %rbp
    cf9e:	48 89 e5             	mov    %rsp,%rbp
    cfa1:	53                   	push   %rbx
    cfa2:	48 83 ec 28          	sub    $0x28,%rsp
    cfa6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cfaa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    cfae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cfb2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    cfb6:	48 89 d6             	mov    %rdx,%rsi
    cfb9:	48 89 c7             	mov    %rax,%rdi
    cfbc:	e8 9b 0b 00 00       	call   db5c <_ZNSaIPKcEC1ERKS1_>
    cfc1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    cfc5:	48 89 c7             	mov    %rax,%rdi
    cfc8:	e8 11 0c 00 00       	call   dbde <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    cfcd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    cfd1:	0f 92 c3             	setb   %bl
    cfd4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    cfd8:	48 89 c7             	mov    %rax,%rdi
    cfdb:	e8 88 ec ff ff       	call   bc68 <_ZNSaIPKcED1Ev>
    cfe0:	84 db                	test   %bl,%bl
    cfe2:	74 0f                	je     cff3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    cfe4:	48 8d 05 2d 4f 00 00 	lea    0x4f2d(%rip),%rax        # 11f18 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    cfeb:	48 89 c7             	mov    %rax,%rdi
    cfee:	e8 4d 61 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    cff3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    cff7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cffb:	c9                   	leave
    cffc:	c3                   	ret
    cffd:	90                   	nop

000000000000cffe <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    cffe:	55                   	push   %rbp
    cfff:	48 89 e5             	mov    %rsp,%rbp
    d002:	48 83 ec 10          	sub    $0x10,%rsp
    d006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d00a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d00e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d013:	74 15                	je     d02a <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    d015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d019:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d01d:	48 89 d6             	mov    %rdx,%rsi
    d020:	48 89 c7             	mov    %rax,%rdi
    d023:	e8 f8 0b 00 00       	call   dc20 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    d028:	eb 05                	jmp    d02f <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    d02a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d02f:	c9                   	leave
    d030:	c3                   	ret

000000000000d031 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    d031:	55                   	push   %rbp
    d032:	48 89 e5             	mov    %rsp,%rbp
    d035:	48 83 ec 20          	sub    $0x20,%rsp
    d039:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d03d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d041:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d045:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    d049:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d04d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d055:	48 89 ce             	mov    %rcx,%rsi
    d058:	48 89 c7             	mov    %rax,%rdi
    d05b:	e8 ea 0b 00 00       	call   dc4a <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    d060:	c9                   	leave
    d061:	c3                   	ret

000000000000d062 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d062:	55                   	push   %rbp
    d063:	48 89 e5             	mov    %rsp,%rbp
    d066:	48 83 ec 10          	sub    $0x10,%rsp
    d06a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d06e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d072:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d07a:	48 89 d6             	mov    %rdx,%rsi
    d07d:	48 89 c7             	mov    %rax,%rdi
    d080:	e8 fa 0b 00 00       	call   dc7f <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    d085:	90                   	nop
    d086:	c9                   	leave
    d087:	c3                   	ret

000000000000d088 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d088:	55                   	push   %rbp
    d089:	48 89 e5             	mov    %rsp,%rbp
    d08c:	48 83 ec 20          	sub    $0x20,%rsp
    d090:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d094:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    d09b:	07 7e 00 
    d09e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d0a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0a6:	48 89 c7             	mov    %rax,%rdi
    d0a9:	e8 e0 0b 00 00       	call   dc8e <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    d0ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d0b2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d0b6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d0ba:	48 89 d6             	mov    %rdx,%rsi
    d0bd:	48 89 c7             	mov    %rax,%rdi
    d0c0:	e8 9f 6a ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    d0c5:	48 8b 00             	mov    (%rax),%rax
      }
    d0c8:	c9                   	leave
    d0c9:	c3                   	ret

000000000000d0ca <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    d0ca:	55                   	push   %rbp
    d0cb:	48 89 e5             	mov    %rsp,%rbp
    d0ce:	48 83 ec 10          	sub    $0x10,%rsp
    d0d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    d0da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e2:	48 89 d6             	mov    %rdx,%rsi
    d0e5:	48 89 c7             	mov    %rax,%rdi
    d0e8:	e8 bb 0b 00 00       	call   dca8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    d0ed:	90                   	nop
    d0ee:	c9                   	leave
    d0ef:	c3                   	ret

000000000000d0f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d0f0:	55                   	push   %rbp
    d0f1:	48 89 e5             	mov    %rsp,%rbp
    d0f4:	48 83 ec 10          	sub    $0x10,%rsp
    d0f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d100:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d108:	48 89 d6             	mov    %rdx,%rsi
    d10b:	48 89 c7             	mov    %rax,%rdi
    d10e:	e8 b7 ff ff ff       	call   d0ca <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    d113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d117:	48 89 c7             	mov    %rax,%rdi
    d11a:	e8 99 0b 00 00       	call   dcb8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d11f:	90                   	nop
    d120:	c9                   	leave
    d121:	c3                   	ret

000000000000d122 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d122:	55                   	push   %rbp
    d123:	48 89 e5             	mov    %rsp,%rbp
    d126:	48 83 ec 10          	sub    $0x10,%rsp
    d12a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d12e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d132:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d13a:	48 89 d6             	mov    %rdx,%rsi
    d13d:	48 89 c7             	mov    %rax,%rdi
    d140:	e8 a1 0b 00 00       	call   dce6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    d145:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d149:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d14c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d150:	48 8b 10             	mov    (%rax),%rdx
    d153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d157:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d15b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d15f:	48 8b 08             	mov    (%rax),%rcx
    d162:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d166:	48 89 d0             	mov    %rdx,%rax
    d169:	48 c1 e0 06          	shl    $0x6,%rax
    d16d:	48 01 d0             	add    %rdx,%rax
    d170:	48 c1 e0 02          	shl    $0x2,%rax
    d174:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    d178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d17c:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d180:	90                   	nop
    d181:	c9                   	leave
    d182:	c3                   	ret
    d183:	90                   	nop

000000000000d184 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    d184:	55                   	push   %rbp
    d185:	48 89 e5             	mov    %rsp,%rbp
    d188:	48 83 ec 20          	sub    $0x20,%rsp
    d18c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d190:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d194:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d198:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d19d:	74 17                	je     d1b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d19f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1ab:	48 89 ce             	mov    %rcx,%rsi
    d1ae:	48 89 c7             	mov    %rax,%rdi
    d1b1:	e8 63 0b 00 00       	call   dd19 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    d1b6:	90                   	nop
    d1b7:	c9                   	leave
    d1b8:	c3                   	ret

000000000000d1b9 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d1b9:	55                   	push   %rbp
    d1ba:	48 89 e5             	mov    %rsp,%rbp
    d1bd:	48 83 ec 20          	sub    $0x20,%rsp
    d1c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d1cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1d5:	48 89 d6             	mov    %rdx,%rsi
    d1d8:	48 89 c7             	mov    %rax,%rdi
    d1db:	e8 67 0b 00 00       	call   dd47 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    d1e0:	c9                   	leave
    d1e1:	c3                   	ret

000000000000d1e2 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d1e2:	55                   	push   %rbp
    d1e3:	48 89 e5             	mov    %rsp,%rbp
    d1e6:	48 83 ec 10          	sub    $0x10,%rsp
    d1ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d1f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1fa:	48 89 d6             	mov    %rdx,%rsi
    d1fd:	48 89 c7             	mov    %rax,%rdi
    d200:	e8 6b 0b 00 00       	call   dd70 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    d205:	90                   	nop
    d206:	c9                   	leave
    d207:	c3                   	ret

000000000000d208 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d208:	55                   	push   %rbp
    d209:	48 89 e5             	mov    %rsp,%rbp
    d20c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d210:	90                   	nop
    d211:	5d                   	pop    %rbp
    d212:	c3                   	ret

000000000000d213 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d213:	55                   	push   %rbp
    d214:	48 89 e5             	mov    %rsp,%rbp
    d217:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    d21b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d21f:	48 8b 40 18          	mov    0x18(%rax),%rax
    d223:	5d                   	pop    %rbp
    d224:	c3                   	ret

000000000000d225 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d225:	55                   	push   %rbp
    d226:	48 89 e5             	mov    %rsp,%rbp
    d229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    d22d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d231:	48 8b 40 10          	mov    0x10(%rax),%rax
    d235:	5d                   	pop    %rbp
    d236:	c3                   	ret
    d237:	90                   	nop

000000000000d238 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    d238:	55                   	push   %rbp
    d239:	48 89 e5             	mov    %rsp,%rbp
    d23c:	48 83 ec 10          	sub    $0x10,%rsp
    d240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d244:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    d248:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d24c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d250:	48 89 d6             	mov    %rdx,%rsi
    d253:	48 89 c7             	mov    %rax,%rdi
    d256:	e8 25 0b 00 00       	call   dd80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    d25b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d25f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d263:	48 89 d6             	mov    %rdx,%rsi
    d266:	48 89 c7             	mov    %rax,%rdi
    d269:	e8 50 0b 00 00       	call   ddbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    d26e:	90                   	nop
    d26f:	c9                   	leave
    d270:	c3                   	ret
    d271:	90                   	nop

000000000000d272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    d272:	55                   	push   %rbp
    d273:	48 89 e5             	mov    %rsp,%rbp
    d276:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    d27a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d27e:	48 8b 40 10          	mov    0x10(%rax),%rax
    d282:	5d                   	pop    %rbp
    d283:	c3                   	ret

000000000000d284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    d284:	55                   	push   %rbp
    d285:	48 89 e5             	mov    %rsp,%rbp
    d288:	53                   	push   %rbx
    d289:	48 83 ec 18          	sub    $0x18,%rsp
    d28d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d291:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    d295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d299:	48 89 c7             	mov    %rax,%rdi
    d29c:	e8 53 0b 00 00       	call   ddf4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d2a1:	48 89 c3             	mov    %rax,%rbx
    d2a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2a8:	48 89 c7             	mov    %rax,%rdi
    d2ab:	e8 92 f6 ff ff       	call   c942 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    d2b0:	48 89 c6             	mov    %rax,%rsi
    d2b3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d2b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2bb:	48 89 d1             	mov    %rdx,%rcx
    d2be:	48 89 da             	mov    %rbx,%rdx
    d2c1:	48 89 c7             	mov    %rax,%rdi
    d2c4:	e8 3d 0b 00 00       	call   de06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    d2c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d2cd:	c9                   	leave
    d2ce:	c3                   	ret
    d2cf:	90                   	nop

000000000000d2d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d2d0:	55                   	push   %rbp
    d2d1:	48 89 e5             	mov    %rsp,%rbp
    d2d4:	48 83 ec 20          	sub    $0x20,%rsp
    d2d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    d2dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2e0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d2e4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d2e8:	48 89 d6             	mov    %rdx,%rsi
    d2eb:	48 89 c7             	mov    %rax,%rdi
    d2ee:	e8 1d 06 00 00       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d2f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f7:	c9                   	leave
    d2f8:	c3                   	ret
    d2f9:	90                   	nop

000000000000d2fa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    d2fa:	55                   	push   %rbp
    d2fb:	48 89 e5             	mov    %rsp,%rbp
    d2fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    d302:	90                   	nop
    d303:	5d                   	pop    %rbp
    d304:	c3                   	ret
    d305:	90                   	nop

000000000000d306 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    d306:	55                   	push   %rbp
    d307:	48 89 e5             	mov    %rsp,%rbp
    d30a:	48 83 ec 10          	sub    $0x10,%rsp
    d30e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    d312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d316:	48 83 c0 20          	add    $0x20,%rax
    d31a:	48 89 c7             	mov    %rax,%rdi
    d31d:	e8 7a 0b 00 00       	call   de9c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    d322:	c9                   	leave
    d323:	c3                   	ret

000000000000d324 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    d324:	55                   	push   %rbp
    d325:	48 89 e5             	mov    %rsp,%rbp
    d328:	48 83 ec 10          	sub    $0x10,%rsp
    d32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d330:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    d334:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d33c:	48 89 d6             	mov    %rdx,%rsi
    d33f:	48 89 c7             	mov    %rax,%rdi
    d342:	e8 e9 5c ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    d347:	c1 e8 1f             	shr    $0x1f,%eax
    d34a:	c9                   	leave
    d34b:	c3                   	ret

000000000000d34c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d34c:	55                   	push   %rbp
    d34d:	48 89 e5             	mov    %rsp,%rbp
    d350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d358:	5d                   	pop    %rbp
    d359:	c3                   	ret

000000000000d35a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    d35a:	55                   	push   %rbp
    d35b:	48 89 e5             	mov    %rsp,%rbp
    d35e:	53                   	push   %rbx
    d35f:	48 83 ec 18          	sub    $0x18,%rsp
    d363:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d367:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    d36b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d36f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d373:	48 89 c7             	mov    %rax,%rdi
    d376:	e8 d1 ff ff ff       	call   d34c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    d37b:	48 89 c6             	mov    %rax,%rsi
    d37e:	48 89 df             	mov    %rbx,%rdi
    d381:	e8 30 0b 00 00       	call   deb6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    d386:	90                   	nop
    d387:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d38b:	c9                   	leave
    d38c:	c3                   	ret

000000000000d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d38d:	55                   	push   %rbp
    d38e:	48 89 e5             	mov    %rsp,%rbp
    d391:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d399:	5d                   	pop    %rbp
    d39a:	c3                   	ret
    d39b:	90                   	nop

000000000000d39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    d39c:	55                   	push   %rbp
    d39d:	48 89 e5             	mov    %rsp,%rbp
    d3a0:	41 54                	push   %r12
    d3a2:	53                   	push   %rbx
    d3a3:	48 83 ec 30          	sub    $0x30,%rsp
    d3a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d3ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d3af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d3b3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d3b7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    d3bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d3c3:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    d3c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d3ca:	48 89 c7             	mov    %rax,%rdi
    d3cd:	e8 67 a6 ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    d3d2:	49 89 c4             	mov    %rax,%r12
    d3d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3d9:	48 89 c7             	mov    %rax,%rdi
    d3dc:	e8 ac ff ff ff       	call   d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    d3e1:	48 89 c3             	mov    %rax,%rbx
    d3e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d3e8:	48 89 c7             	mov    %rax,%rdi
    d3eb:	e8 2d a6 ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    d3f0:	48 89 c6             	mov    %rax,%rsi
    d3f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d3f7:	4c 89 e1             	mov    %r12,%rcx
    d3fa:	48 89 da             	mov    %rbx,%rdx
    d3fd:	48 89 c7             	mov    %rax,%rdi
    d400:	e8 e5 0a 00 00       	call   deea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    d405:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d409:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    d40d:	90                   	nop
    d40e:	48 83 c4 30          	add    $0x30,%rsp
    d412:	5b                   	pop    %rbx
    d413:	41 5c                	pop    %r12
    d415:	5d                   	pop    %rbp
    d416:	c3                   	ret
    d417:	90                   	nop

000000000000d418 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    d418:	55                   	push   %rbp
    d419:	48 89 e5             	mov    %rsp,%rbp
    d41c:	48 83 ec 10          	sub    $0x10,%rsp
    d420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    d424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d428:	48 8b 40 08          	mov    0x8(%rax),%rax
    d42c:	48 85 c0             	test   %rax,%rax
    d42f:	74 1a                	je     d44b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    d431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d435:	48 8b 00             	mov    (%rax),%rax
    d438:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d43c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d440:	48 89 d6             	mov    %rdx,%rsi
    d443:	48 89 c7             	mov    %rax,%rdi
    d446:	e8 ed fd ff ff       	call   d238 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    d44b:	90                   	nop
    d44c:	c9                   	leave
    d44d:	c3                   	ret

000000000000d44e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d44e:	55                   	push   %rbp
    d44f:	48 89 e5             	mov    %rsp,%rbp
    d452:	53                   	push   %rbx
    d453:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    d45a:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    d461:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    d468:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    d46f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d476:	48 89 c7             	mov    %rax,%rdi
    d479:	e8 e8 0a 00 00       	call   df66 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    d47e:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    d485:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d48c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d493:	48 89 c7             	mov    %rax,%rdi
    d496:	e8 59 09 00 00       	call   ddf4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d49b:	48 39 c3             	cmp    %rax,%rbx
    d49e:	0f 94 c0             	sete   %al
    d4a1:	84 c0                	test   %al,%al
    d4a3:	0f 84 c8 00 00 00    	je     d571 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    d4a9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d4b0:	48 89 c7             	mov    %rax,%rdi
    d4b3:	e8 d6 0a 00 00       	call   df8e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    d4b8:	48 85 c0             	test   %rax,%rax
    d4bb:	74 44                	je     d501 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    d4bd:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d4c4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d4cb:	48 89 c7             	mov    %rax,%rdi
    d4ce:	e8 cd 0a 00 00       	call   dfa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d4d3:	48 8b 00             	mov    (%rax),%rax
    d4d6:	48 89 c7             	mov    %rax,%rdi
    d4d9:	e8 d4 0a 00 00       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d4de:	48 89 c1             	mov    %rax,%rcx
    d4e1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d4e8:	48 89 c2             	mov    %rax,%rdx
    d4eb:	48 89 ce             	mov    %rcx,%rsi
    d4ee:	48 89 df             	mov    %rbx,%rdi
    d4f1:	e8 2e f5 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d4f6:	84 c0                	test   %al,%al
    d4f8:	74 07                	je     d501 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    d4fa:	b8 01 00 00 00       	mov    $0x1,%eax
    d4ff:	eb 05                	jmp    d506 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    d501:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    d506:	84 c0                	test   %al,%al
    d508:	74 49                	je     d553 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    d50a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d511:	48 89 c7             	mov    %rax,%rdi
    d514:	e8 87 0a 00 00       	call   dfa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d519:	48 89 c2             	mov    %rax,%rdx
    d51c:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    d523:	00 00 00 00 
    d527:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    d52e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d535:	48 89 ce             	mov    %rcx,%rsi
    d538:	48 89 c7             	mov    %rax,%rdi
    d53b:	e8 8a b7 ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d540:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    d547:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d54e:	e9 43 03 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d553:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d55a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d561:	48 89 d6             	mov    %rdx,%rsi
    d564:	48 89 c7             	mov    %rax,%rdi
    d567:	e8 60 0a 00 00       	call   dfcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d56c:	e9 25 03 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    d571:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d578:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d57f:	48 89 c7             	mov    %rax,%rdi
    d582:	e8 2b 0a 00 00       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d587:	48 89 c2             	mov    %rax,%rdx
    d58a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d591:	48 89 c6             	mov    %rax,%rsi
    d594:	48 89 df             	mov    %rbx,%rdi
    d597:	e8 88 f4 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d59c:	84 c0                	test   %al,%al
    d59e:	0f 84 66 01 00 00    	je     d70a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    d5a4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d5ab:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    d5b2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d5b9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d5c0:	48 89 c7             	mov    %rax,%rdi
    d5c3:	e8 7a 0b 00 00       	call   e142 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d5c8:	48 8b 00             	mov    (%rax),%rax
    d5cb:	48 39 c3             	cmp    %rax,%rbx
    d5ce:	0f 94 c0             	sete   %al
    d5d1:	84 c0                	test   %al,%al
    d5d3:	74 4c                	je     d621 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    d5d5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d5dc:	48 89 c7             	mov    %rax,%rdi
    d5df:	e8 5e 0b 00 00       	call   e142 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d5e4:	48 89 c3             	mov    %rax,%rbx
    d5e7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d5ee:	48 89 c7             	mov    %rax,%rdi
    d5f1:	e8 4c 0b 00 00       	call   e142 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d5f6:	48 89 c1             	mov    %rax,%rcx
    d5f9:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d600:	48 89 da             	mov    %rbx,%rdx
    d603:	48 89 ce             	mov    %rcx,%rsi
    d606:	48 89 c7             	mov    %rax,%rdi
    d609:	e8 74 b8 ff ff       	call   8e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d60e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d615:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d61c:	e9 75 02 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    d621:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d628:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    d62f:	48 89 c7             	mov    %rax,%rdi
    d632:	e8 1d 0b 00 00       	call   e154 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    d637:	48 8b 00             	mov    (%rax),%rax
    d63a:	48 89 c7             	mov    %rax,%rdi
    d63d:	e8 70 09 00 00       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d642:	48 89 c1             	mov    %rax,%rcx
    d645:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d64c:	48 89 c2             	mov    %rax,%rdx
    d64f:	48 89 ce             	mov    %rcx,%rsi
    d652:	48 89 df             	mov    %rbx,%rdi
    d655:	e8 ca f3 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d65a:	84 c0                	test   %al,%al
    d65c:	0f 84 8a 00 00 00    	je     d6ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    d662:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d669:	48 89 c7             	mov    %rax,%rdi
    d66c:	e8 a2 fb ff ff       	call   d213 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d671:	48 85 c0             	test   %rax,%rax
    d674:	0f 94 c0             	sete   %al
    d677:	84 c0                	test   %al,%al
    d679:	74 3e                	je     d6b9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    d67b:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d682:	00 00 00 00 
    d686:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    d68d:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    d694:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    d69b:	48 89 ce             	mov    %rcx,%rsi
    d69e:	48 89 c7             	mov    %rax,%rdi
    d6a1:	e8 24 b6 ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d6a6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d6ad:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    d6b4:	e9 dd 01 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    d6b9:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    d6c0:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    d6c7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d6ce:	48 89 ce             	mov    %rcx,%rsi
    d6d1:	48 89 c7             	mov    %rax,%rdi
    d6d4:	e8 a9 b7 ff ff       	call   8e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d6d9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d6e0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    d6e7:	e9 aa 01 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d6ec:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d6f3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d6fa:	48 89 d6             	mov    %rdx,%rsi
    d6fd:	48 89 c7             	mov    %rax,%rdi
    d700:	e8 c7 08 00 00       	call   dfcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d705:	e9 8c 01 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    d70a:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d711:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d718:	48 89 c7             	mov    %rax,%rdi
    d71b:	e8 92 08 00 00       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d720:	48 89 c1             	mov    %rax,%rcx
    d723:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d72a:	48 89 c2             	mov    %rax,%rdx
    d72d:	48 89 ce             	mov    %rcx,%rsi
    d730:	48 89 df             	mov    %rbx,%rdi
    d733:	e8 ec f2 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d738:	84 c0                	test   %al,%al
    d73a:	0f 84 2c 01 00 00    	je     d86c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    d740:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d747:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    d74e:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d755:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d75c:	48 89 c7             	mov    %rax,%rdi
    d75f:	e8 3c 08 00 00       	call   dfa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d764:	48 8b 00             	mov    (%rax),%rax
    d767:	48 39 c3             	cmp    %rax,%rbx
    d76a:	0f 94 c0             	sete   %al
    d76d:	84 c0                	test   %al,%al
    d76f:	74 3a                	je     d7ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    d771:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d778:	48 89 c7             	mov    %rax,%rdi
    d77b:	e8 20 08 00 00       	call   dfa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d780:	48 89 c2             	mov    %rax,%rdx
    d783:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    d78a:	00 
    d78b:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    d78f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d793:	48 89 ce             	mov    %rcx,%rsi
    d796:	48 89 c7             	mov    %rax,%rdi
    d799:	e8 2c b5 ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d79e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d7a2:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d7a6:	e9 eb 00 00 00       	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    d7ab:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d7b2:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    d7b9:	48 89 c7             	mov    %rax,%rdi
    d7bc:	e8 bb 09 00 00       	call   e17c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    d7c1:	48 8b 00             	mov    (%rax),%rax
    d7c4:	48 89 c7             	mov    %rax,%rdi
    d7c7:	e8 e6 07 00 00       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d7cc:	48 89 c2             	mov    %rax,%rdx
    d7cf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d7d6:	48 89 c6             	mov    %rax,%rsi
    d7d9:	48 89 df             	mov    %rbx,%rdi
    d7dc:	e8 43 f2 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d7e1:	84 c0                	test   %al,%al
    d7e3:	74 6c                	je     d851 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    d7e5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7ec:	48 89 c7             	mov    %rax,%rdi
    d7ef:	e8 1f fa ff ff       	call   d213 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d7f4:	48 85 c0             	test   %rax,%rax
    d7f7:	0f 94 c0             	sete   %al
    d7fa:	84 c0                	test   %al,%al
    d7fc:	74 2c                	je     d82a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    d7fe:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    d805:	00 
    d806:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    d80d:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    d811:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d815:	48 89 ce             	mov    %rcx,%rsi
    d818:	48 89 c7             	mov    %rax,%rdi
    d81b:	e8 aa b4 ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d820:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d824:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d828:	eb 6c                	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    d82a:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    d831:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    d838:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d83c:	48 89 ce             	mov    %rcx,%rsi
    d83f:	48 89 c7             	mov    %rax,%rdi
    d842:	e8 3b b6 ff ff       	call   8e82 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d847:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d84b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d84f:	eb 45                	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d851:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d858:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d85f:	48 89 d6             	mov    %rdx,%rsi
    d862:	48 89 c7             	mov    %rax,%rdi
    d865:	e8 62 07 00 00       	call   dfcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d86a:	eb 2a                	jmp    d896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    d86c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d873:	00 
    d874:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    d878:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    d87f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d883:	48 89 ce             	mov    %rcx,%rsi
    d886:	48 89 c7             	mov    %rax,%rdi
    d889:	e8 3c b4 ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d88e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d892:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    d896:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d89a:	c9                   	leave
    d89b:	c3                   	ret

000000000000d89c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    d89c:	55                   	push   %rbp
    d89d:	48 89 e5             	mov    %rsp,%rbp
    d8a0:	48 83 ec 10          	sub    $0x10,%rsp
    d8a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    d8a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8ac:	48 8b 40 08          	mov    0x8(%rax),%rax
    d8b0:	48 89 c7             	mov    %rax,%rdi
    d8b3:	e8 ec 08 00 00       	call   e1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d8b8:	c9                   	leave
    d8b9:	c3                   	ret

000000000000d8ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    d8ba:	55                   	push   %rbp
    d8bb:	48 89 e5             	mov    %rsp,%rbp
    d8be:	48 83 ec 30          	sub    $0x30,%rsp
    d8c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d8c6:	48 89 d1             	mov    %rdx,%rcx
    d8c9:	48 89 f0             	mov    %rsi,%rax
    d8cc:	48 89 fa             	mov    %rdi,%rdx
    d8cf:	48 89 ca             	mov    %rcx,%rdx
    d8d2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d8d6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    d8da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8de:	48 8b 00             	mov    (%rax),%rax
    d8e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d8e5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    d8e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d8ed:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    d8f1:	48 89 c7             	mov    %rax,%rdi
    d8f4:	e8 d7 08 00 00       	call   e1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    d8f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    d8fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d901:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d908:	00 
	  return __it;
    d909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    d90d:	c9                   	leave
    d90e:	c3                   	ret
    d90f:	90                   	nop

000000000000d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d910:	55                   	push   %rbp
    d911:	48 89 e5             	mov    %rsp,%rbp
    d914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    d91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d920:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d924:	48 89 10             	mov    %rdx,(%rax)
    d927:	90                   	nop
    d928:	5d                   	pop    %rbp
    d929:	c3                   	ret

000000000000d92a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d92a:	55                   	push   %rbp
    d92b:	48 89 e5             	mov    %rsp,%rbp
    d92e:	48 83 ec 20          	sub    $0x20,%rsp
    d932:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d936:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d93d:	ff ff 0f 
    d940:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d948:	48 89 c7             	mov    %rax,%rdi
    d94b:	e8 43 09 00 00       	call   e293 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    d950:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d954:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d958:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d95c:	48 89 d6             	mov    %rdx,%rsi
    d95f:	48 89 c7             	mov    %rax,%rdi
    d962:	e8 fd 61 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    d967:	48 8b 00             	mov    (%rax),%rax
      }
    d96a:	c9                   	leave
    d96b:	c3                   	ret

000000000000d96c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d96c:	55                   	push   %rbp
    d96d:	48 89 e5             	mov    %rsp,%rbp
    d970:	48 83 ec 10          	sub    $0x10,%rsp
    d974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d978:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d97c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d984:	48 89 d6             	mov    %rdx,%rsi
    d987:	48 89 c7             	mov    %rax,%rdi
    d98a:	e8 6f f3 ff ff       	call   ccfe <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    d98f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d993:	48 89 c7             	mov    %rax,%rdi
    d996:	e8 13 09 00 00       	call   e2ae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    d99b:	90                   	nop
    d99c:	c9                   	leave
    d99d:	c3                   	ret

000000000000d99e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d99e:	55                   	push   %rbp
    d99f:	48 89 e5             	mov    %rsp,%rbp
    d9a2:	48 83 ec 10          	sub    $0x10,%rsp
    d9a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d9ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b6:	48 89 d6             	mov    %rdx,%rsi
    d9b9:	48 89 c7             	mov    %rax,%rdi
    d9bc:	e8 1b 09 00 00       	call   e2dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    d9c1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d9c5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d9c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9cc:	48 8b 10             	mov    (%rax),%rdx
    d9cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d9d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9db:	48 8b 00             	mov    (%rax),%rax
    d9de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9e2:	48 c1 e2 03          	shl    $0x3,%rdx
    d9e6:	48 01 c2             	add    %rax,%rdx
    d9e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9ed:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d9f1:	90                   	nop
    d9f2:	c9                   	leave
    d9f3:	c3                   	ret

000000000000d9f4 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d9f4:	55                   	push   %rbp
    d9f5:	48 89 e5             	mov    %rsp,%rbp
    d9f8:	48 83 ec 20          	sub    $0x20,%rsp
    d9fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da04:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    da08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da10:	48 89 d6             	mov    %rdx,%rsi
    da13:	48 89 c7             	mov    %rax,%rdi
    da16:	e8 f4 08 00 00       	call   e30f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    da1b:	c9                   	leave
    da1c:	c3                   	ret
    da1d:	90                   	nop

000000000000da1e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    da1e:	55                   	push   %rbp
    da1f:	48 89 e5             	mov    %rsp,%rbp
    da22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da2a:	90                   	nop
    da2b:	5d                   	pop    %rbp
    da2c:	c3                   	ret

000000000000da2d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    da2d:	55                   	push   %rbp
    da2e:	48 89 e5             	mov    %rsp,%rbp
    da31:	48 83 ec 20          	sub    $0x20,%rsp
    da35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    da41:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da45:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    da49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da4d:	48 89 ce             	mov    %rcx,%rsi
    da50:	48 89 c7             	mov    %rax,%rdi
    da53:	e8 e0 08 00 00       	call   e338 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    da58:	90                   	nop
    da59:	c9                   	leave
    da5a:	c3                   	ret

000000000000da5b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    da5b:	55                   	push   %rbp
    da5c:	48 89 e5             	mov    %rsp,%rbp
    da5f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da63:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da67:	90                   	nop
    da68:	5d                   	pop    %rbp
    da69:	c3                   	ret

000000000000da6a <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    da6a:	55                   	push   %rbp
    da6b:	48 89 e5             	mov    %rsp,%rbp
    da6e:	48 83 ec 10          	sub    $0x10,%rsp
    da72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    da76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da7a:	48 89 c7             	mov    %rax,%rdi
    da7d:	e8 e8 08 00 00       	call   e36a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    da82:	c9                   	leave
    da83:	c3                   	ret

000000000000da84 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    da84:	55                   	push   %rbp
    da85:	48 89 e5             	mov    %rsp,%rbp
    da88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da90:	90                   	nop
    da91:	5d                   	pop    %rbp
    da92:	c3                   	ret
    da93:	90                   	nop

000000000000da94 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    da94:	55                   	push   %rbp
    da95:	48 89 e5             	mov    %rsp,%rbp
    da98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    da9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daa0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    daa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daab:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dab2:	00 
    dab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dab7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    dabe:	00 
	{ }
    dabf:	90                   	nop
    dac0:	5d                   	pop    %rbp
    dac1:	c3                   	ret

000000000000dac2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    dac2:	55                   	push   %rbp
    dac3:	48 89 e5             	mov    %rsp,%rbp
    dac6:	48 83 ec 10          	sub    $0x10,%rsp
    daca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dace:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    dad2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dad7:	74 15                	je     daee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    dad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dadd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dae1:	48 89 d6             	mov    %rdx,%rsi
    dae4:	48 89 c7             	mov    %rax,%rdi
    dae7:	e8 98 08 00 00       	call   e384 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    daec:	eb 05                	jmp    daf3 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    daee:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    daf3:	c9                   	leave
    daf4:	c3                   	ret

000000000000daf5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    daf5:	55                   	push   %rbp
    daf6:	48 89 e5             	mov    %rsp,%rbp
    daf9:	48 83 ec 20          	sub    $0x20,%rsp
    dafd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db05:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    db09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    db0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    db11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db15:	48 89 ce             	mov    %rcx,%rsi
    db18:	48 89 c7             	mov    %rax,%rdi
    db1b:	e8 8e 08 00 00       	call   e3ae <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    db20:	90                   	nop
    db21:	c9                   	leave
    db22:	c3                   	ret

000000000000db23 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    db23:	55                   	push   %rbp
    db24:	48 89 e5             	mov    %rsp,%rbp
    db27:	48 83 ec 20          	sub    $0x20,%rsp
    db2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    db2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    db33:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    db37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    db3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db3f:	48 89 d6             	mov    %rdx,%rsi
    db42:	48 89 c7             	mov    %rax,%rdi
    db45:	e8 9d 08 00 00       	call   e3e7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    db4a:	c9                   	leave
    db4b:	c3                   	ret

000000000000db4c <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    db4c:	55                   	push   %rbp
    db4d:	48 89 e5             	mov    %rsp,%rbp
    db50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db58:	90                   	nop
    db59:	5d                   	pop    %rbp
    db5a:	c3                   	ret
    db5b:	90                   	nop

000000000000db5c <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    db5c:	55                   	push   %rbp
    db5d:	48 89 e5             	mov    %rsp,%rbp
    db60:	48 83 ec 10          	sub    $0x10,%rsp
    db64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    db6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db74:	48 89 d6             	mov    %rdx,%rsi
    db77:	48 89 c7             	mov    %rax,%rdi
    db7a:	e8 c5 08 00 00       	call   e444 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    db7f:	90                   	nop
    db80:	c9                   	leave
    db81:	c3                   	ret

000000000000db82 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    db82:	55                   	push   %rbp
    db83:	48 89 e5             	mov    %rsp,%rbp
    db86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    db8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db8e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    db95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db99:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dba0:	00 
    dba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    dbac:	00 
	{ }
    dbad:	90                   	nop
    dbae:	5d                   	pop    %rbp
    dbaf:	c3                   	ret

000000000000dbb0 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dbb0:	55                   	push   %rbp
    dbb1:	48 89 e5             	mov    %rsp,%rbp
    dbb4:	48 83 ec 20          	sub    $0x20,%rsp
    dbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dbc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dbc4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbc8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dbcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbd0:	48 89 ce             	mov    %rcx,%rsi
    dbd3:	48 89 c7             	mov    %rax,%rdi
    dbd6:	e8 79 08 00 00       	call   e454 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    dbdb:	90                   	nop
    dbdc:	c9                   	leave
    dbdd:	c3                   	ret

000000000000dbde <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    dbde:	55                   	push   %rbp
    dbdf:	48 89 e5             	mov    %rsp,%rbp
    dbe2:	48 83 ec 20          	sub    $0x20,%rsp
    dbe6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    dbea:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    dbf1:	ff ff 0f 
    dbf4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    dbf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbfc:	48 89 c7             	mov    %rax,%rdi
    dbff:	e8 81 08 00 00       	call   e485 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    dc04:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    dc08:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    dc0c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dc10:	48 89 d6             	mov    %rdx,%rsi
    dc13:	48 89 c7             	mov    %rax,%rdi
    dc16:	e8 49 5f ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    dc1b:	48 8b 00             	mov    (%rax),%rax
      }
    dc1e:	c9                   	leave
    dc1f:	c3                   	ret

000000000000dc20 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    dc20:	55                   	push   %rbp
    dc21:	48 89 e5             	mov    %rsp,%rbp
    dc24:	48 83 ec 10          	sub    $0x10,%rsp
    dc28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dc30:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc38:	ba 00 00 00 00       	mov    $0x0,%edx
    dc3d:	48 89 ce             	mov    %rcx,%rsi
    dc40:	48 89 c7             	mov    %rax,%rdi
    dc43:	e8 58 08 00 00       	call   e4a0 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    dc48:	c9                   	leave
    dc49:	c3                   	ret

000000000000dc4a <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    dc4a:	55                   	push   %rbp
    dc4b:	48 89 e5             	mov    %rsp,%rbp
    dc4e:	48 83 ec 30          	sub    $0x30,%rsp
    dc52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dc5a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    dc5e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    dc62:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    dc66:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dc6a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dc6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc72:	48 89 ce             	mov    %rcx,%rsi
    dc75:	48 89 c7             	mov    %rax,%rdi
    dc78:	e8 84 08 00 00       	call   e501 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    dc7d:	c9                   	leave
    dc7e:	c3                   	ret

000000000000dc7f <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    dc7f:	55                   	push   %rbp
    dc80:	48 89 e5             	mov    %rsp,%rbp
    dc83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc8b:	90                   	nop
    dc8c:	5d                   	pop    %rbp
    dc8d:	c3                   	ret

000000000000dc8e <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    dc8e:	55                   	push   %rbp
    dc8f:	48 89 e5             	mov    %rsp,%rbp
    dc92:	48 83 ec 10          	sub    $0x10,%rsp
    dc96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    dc9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc9e:	48 89 c7             	mov    %rax,%rdi
    dca1:	e8 88 08 00 00       	call   e52e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    dca6:	c9                   	leave
    dca7:	c3                   	ret

000000000000dca8 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    dca8:	55                   	push   %rbp
    dca9:	48 89 e5             	mov    %rsp,%rbp
    dcac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcb4:	90                   	nop
    dcb5:	5d                   	pop    %rbp
    dcb6:	c3                   	ret
    dcb7:	90                   	nop

000000000000dcb8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    dcb8:	55                   	push   %rbp
    dcb9:	48 89 e5             	mov    %rsp,%rbp
    dcbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    dcc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcc4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    dccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dccf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dcd6:	00 
    dcd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcdb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    dce2:	00 
	{ }
    dce3:	90                   	nop
    dce4:	5d                   	pop    %rbp
    dce5:	c3                   	ret

000000000000dce6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    dce6:	55                   	push   %rbp
    dce7:	48 89 e5             	mov    %rsp,%rbp
    dcea:	48 83 ec 10          	sub    $0x10,%rsp
    dcee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    dcf6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dcfb:	74 15                	je     dd12 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    dcfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd05:	48 89 d6             	mov    %rdx,%rsi
    dd08:	48 89 c7             	mov    %rax,%rdi
    dd0b:	e8 38 08 00 00       	call   e548 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    dd10:	eb 05                	jmp    dd17 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    dd12:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dd17:	c9                   	leave
    dd18:	c3                   	ret

000000000000dd19 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dd19:	55                   	push   %rbp
    dd1a:	48 89 e5             	mov    %rsp,%rbp
    dd1d:	48 83 ec 20          	sub    $0x20,%rsp
    dd21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd29:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dd2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd39:	48 89 ce             	mov    %rcx,%rsi
    dd3c:	48 89 c7             	mov    %rax,%rdi
    dd3f:	e8 2e 08 00 00       	call   e572 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    dd44:	90                   	nop
    dd45:	c9                   	leave
    dd46:	c3                   	ret

000000000000dd47 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    dd47:	55                   	push   %rbp
    dd48:	48 89 e5             	mov    %rsp,%rbp
    dd4b:	48 83 ec 20          	sub    $0x20,%rsp
    dd4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dd53:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    dd57:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    dd5b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dd5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd63:	48 89 d6             	mov    %rdx,%rsi
    dd66:	48 89 c7             	mov    %rax,%rdi
    dd69:	e8 3e 08 00 00       	call   e5ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    dd6e:	c9                   	leave
    dd6f:	c3                   	ret

000000000000dd70 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    dd70:	55                   	push   %rbp
    dd71:	48 89 e5             	mov    %rsp,%rbp
    dd74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd7c:	90                   	nop
    dd7d:	5d                   	pop    %rbp
    dd7e:	c3                   	ret
    dd7f:	90                   	nop

000000000000dd80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    dd80:	55                   	push   %rbp
    dd81:	48 89 e5             	mov    %rsp,%rbp
    dd84:	53                   	push   %rbx
    dd85:	48 83 ec 18          	sub    $0x18,%rsp
    dd89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dd8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    dd91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd95:	48 89 c7             	mov    %rax,%rdi
    dd98:	e8 69 f5 ff ff       	call   d306 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    dd9d:	48 89 c3             	mov    %rax,%rbx
    dda0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dda4:	48 89 c7             	mov    %rax,%rdi
    dda7:	e8 60 08 00 00       	call   e60c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    ddac:	48 89 de             	mov    %rbx,%rsi
    ddaf:	48 89 c7             	mov    %rax,%rdi
    ddb2:	e8 63 08 00 00       	call   e61a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    ddb7:	90                   	nop
    ddb8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ddbc:	c9                   	leave
    ddbd:	c3                   	ret

000000000000ddbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    ddbe:	55                   	push   %rbp
    ddbf:	48 89 e5             	mov    %rsp,%rbp
    ddc2:	48 83 ec 10          	sub    $0x10,%rsp
    ddc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    ddce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddd2:	48 89 c7             	mov    %rax,%rdi
    ddd5:	e8 32 08 00 00       	call   e60c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    ddda:	48 89 c1             	mov    %rax,%rcx
    dddd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dde1:	ba 01 00 00 00       	mov    $0x1,%edx
    dde6:	48 89 c6             	mov    %rax,%rsi
    dde9:	48 89 cf             	mov    %rcx,%rdi
    ddec:	e8 4f 08 00 00       	call   e640 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    ddf1:	90                   	nop
    ddf2:	c9                   	leave
    ddf3:	c3                   	ret

000000000000ddf4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    ddf4:	55                   	push   %rbp
    ddf5:	48 89 e5             	mov    %rsp,%rbp
    ddf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    ddfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de00:	48 83 c0 08          	add    $0x8,%rax
    de04:	5d                   	pop    %rbp
    de05:	c3                   	ret

000000000000de06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    de06:	55                   	push   %rbp
    de07:	48 89 e5             	mov    %rsp,%rbp
    de0a:	53                   	push   %rbx
    de0b:	48 83 ec 38          	sub    $0x38,%rsp
    de0f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    de13:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    de17:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    de1b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    de1f:	eb 56                	jmp    de77 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    de21:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    de25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de29:	48 89 c7             	mov    %rax,%rdi
    de2c:	e8 73 03 00 00       	call   e1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    de31:	48 89 c1             	mov    %rax,%rcx
    de34:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    de38:	48 89 c2             	mov    %rax,%rdx
    de3b:	48 89 ce             	mov    %rcx,%rsi
    de3e:	48 89 df             	mov    %rbx,%rdi
    de41:	e8 de eb ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    de46:	83 f0 01             	xor    $0x1,%eax
    de49:	84 c0                	test   %al,%al
    de4b:	74 1a                	je     de67 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    de4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de51:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    de55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de59:	48 89 c7             	mov    %rax,%rdi
    de5c:	e8 c4 f3 ff ff       	call   d225 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    de61:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    de65:	eb 10                	jmp    de77 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    de67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de6b:	48 89 c7             	mov    %rax,%rdi
    de6e:	e8 a0 f3 ff ff       	call   d213 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    de73:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    de77:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    de7c:	75 a3                	jne    de21 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    de7e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    de82:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    de86:	48 89 d6             	mov    %rdx,%rsi
    de89:	48 89 c7             	mov    %rax,%rdi
    de8c:	e8 7f fa ff ff       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    de91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    de95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de99:	c9                   	leave
    de9a:	c3                   	ret
    de9b:	90                   	nop

000000000000de9c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() noexcept
    de9c:	55                   	push   %rbp
    de9d:	48 89 e5             	mov    %rsp,%rbp
    dea0:	48 83 ec 10          	sub    $0x10,%rsp
    dea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    dea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deac:	48 89 c7             	mov    %rax,%rdi
    deaf:	e8 ba 07 00 00       	call   e66e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    deb4:	c9                   	leave
    deb5:	c3                   	ret

000000000000deb6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    deb6:	55                   	push   %rbp
    deb7:	48 89 e5             	mov    %rsp,%rbp
    deba:	53                   	push   %rbx
    debb:	48 83 ec 18          	sub    $0x18,%rsp
    debf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dec3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    dec7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    decb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    decf:	48 89 c7             	mov    %rax,%rdi
    ded2:	e8 75 f4 ff ff       	call   d34c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    ded7:	48 89 c6             	mov    %rax,%rsi
    deda:	48 89 df             	mov    %rbx,%rdi
    dedd:	e8 9a 07 00 00       	call   e67c <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    dee2:	90                   	nop
    dee3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dee7:	c9                   	leave
    dee8:	c3                   	ret
    dee9:	90                   	nop

000000000000deea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    deea:	55                   	push   %rbp
    deeb:	48 89 e5             	mov    %rsp,%rbp
    deee:	41 54                	push   %r12
    def0:	53                   	push   %rbx
    def1:	48 83 ec 30          	sub    $0x30,%rsp
    def5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    def9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    defd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    df01:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    df05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df09:	48 89 c7             	mov    %rax,%rdi
    df0c:	e8 91 07 00 00       	call   e6a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    df11:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    df15:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    df19:	48 89 c7             	mov    %rax,%rdi
    df1c:	e8 18 9b ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    df21:	49 89 c4             	mov    %rax,%r12
    df24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    df28:	48 89 c7             	mov    %rax,%rdi
    df2b:	e8 5d f4 ff ff       	call   d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    df30:	48 89 c3             	mov    %rax,%rbx
    df33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df37:	48 89 c7             	mov    %rax,%rdi
    df3a:	e8 de 9a ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    df3f:	48 89 c2             	mov    %rax,%rdx
    df42:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    df46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df4a:	4d 89 e0             	mov    %r12,%r8
    df4d:	48 89 d9             	mov    %rbx,%rcx
    df50:	48 89 c7             	mov    %rax,%rdi
    df53:	e8 72 07 00 00       	call   e6ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    df58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    df5c:	48 83 c4 30          	add    $0x30,%rsp
    df60:	5b                   	pop    %rbx
    df61:	41 5c                	pop    %r12
    df63:	5d                   	pop    %rbp
    df64:	c3                   	ret
    df65:	90                   	nop

000000000000df66 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    df66:	55                   	push   %rbp
    df67:	48 89 e5             	mov    %rsp,%rbp
    df6a:	48 83 ec 20          	sub    $0x20,%rsp
    df6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    df72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df76:	48 8b 10             	mov    (%rax),%rdx
    df79:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    df7d:	48 89 d6             	mov    %rdx,%rsi
    df80:	48 89 c7             	mov    %rax,%rdi
    df83:	e8 88 f9 ff ff       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    df88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df8c:	c9                   	leave
    df8d:	c3                   	ret

000000000000df8e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    df8e:	55                   	push   %rbp
    df8f:	48 89 e5             	mov    %rsp,%rbp
    df92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    df96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df9a:	48 8b 40 28          	mov    0x28(%rax),%rax
    df9e:	5d                   	pop    %rbp
    df9f:	c3                   	ret

000000000000dfa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    dfa0:	55                   	push   %rbp
    dfa1:	48 89 e5             	mov    %rsp,%rbp
    dfa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    dfa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfac:	48 83 c0 20          	add    $0x20,%rax
    dfb0:	5d                   	pop    %rbp
    dfb1:	c3                   	ret

000000000000dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    dfb2:	55                   	push   %rbp
    dfb3:	48 89 e5             	mov    %rsp,%rbp
    dfb6:	48 83 ec 10          	sub    $0x10,%rsp
    dfba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    dfbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfc2:	48 89 c7             	mov    %rax,%rdi
    dfc5:	e8 da 01 00 00       	call   e1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    dfca:	c9                   	leave
    dfcb:	c3                   	ret

000000000000dfcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    dfcc:	55                   	push   %rbp
    dfcd:	48 89 e5             	mov    %rsp,%rbp
    dfd0:	53                   	push   %rbx
    dfd1:	48 83 ec 78          	sub    $0x78,%rsp
    dfd5:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    dfd9:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    dfdd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dfe1:	48 89 c7             	mov    %rax,%rdi
    dfe4:	e8 59 e9 ff ff       	call   c942 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    dfe9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    dfed:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dff1:	48 89 c7             	mov    %rax,%rdi
    dff4:	e8 fb fd ff ff       	call   ddf4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    dff9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    dffd:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    e001:	eb 51                	jmp    e054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    e003:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e007:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    e00b:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e00f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e013:	48 89 c7             	mov    %rax,%rdi
    e016:	e8 89 01 00 00       	call   e1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e01b:	48 89 c2             	mov    %rax,%rdx
    e01e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e022:	48 89 c6             	mov    %rax,%rsi
    e025:	48 89 df             	mov    %rbx,%rdi
    e028:	e8 f7 e9 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e02d:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    e030:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e034:	74 0e                	je     e044 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    e036:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e03a:	48 89 c7             	mov    %rax,%rdi
    e03d:	e8 e3 f1 ff ff       	call   d225 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e042:	eb 0c                	jmp    e050 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    e044:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e048:	48 89 c7             	mov    %rax,%rdi
    e04b:	e8 c3 f1 ff ff       	call   d213 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e050:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    e054:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e058:	48 85 c0             	test   %rax,%rax
    e05b:	75 a6                	jne    e003 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    e05d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    e061:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e065:	48 89 d6             	mov    %rdx,%rsi
    e068:	48 89 c7             	mov    %rax,%rdi
    e06b:	e8 a0 f8 ff ff       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    e070:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e074:	74 54                	je     e0ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    e076:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e07a:	48 89 c7             	mov    %rax,%rdi
    e07d:	e8 1a 07 00 00       	call   e79c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    e082:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e086:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    e08a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e08e:	48 89 d6             	mov    %rdx,%rsi
    e091:	48 89 c7             	mov    %rax,%rdi
    e094:	e8 2f e9 ff ff       	call   c9c8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    e099:	84 c0                	test   %al,%al
    e09b:	74 21                	je     e0be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    e09d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e0a1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e0a5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e0a9:	48 89 ce             	mov    %rcx,%rsi
    e0ac:	48 89 c7             	mov    %rax,%rdi
    e0af:	e8 12 07 00 00       	call   e7c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e0b4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    e0b8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    e0bc:	eb 7d                	jmp    e13b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    e0be:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e0c2:	48 89 c7             	mov    %rax,%rdi
    e0c5:	e8 8a 00 00 00       	call   e154 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    e0ca:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e0ce:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    e0d2:	48 89 c7             	mov    %rax,%rdi
    e0d5:	e8 d8 fe ff ff       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e0da:	48 89 c1             	mov    %rax,%rcx
    e0dd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e0e1:	48 89 c2             	mov    %rax,%rdx
    e0e4:	48 89 ce             	mov    %rcx,%rsi
    e0e7:	48 89 df             	mov    %rbx,%rdi
    e0ea:	e8 35 e9 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e0ef:	84 c0                	test   %al,%al
    e0f1:	74 21                	je     e114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    e0f3:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e0f7:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e0fb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e0ff:	48 89 ce             	mov    %rcx,%rsi
    e102:	48 89 c7             	mov    %rax,%rdi
    e105:	e8 bc 06 00 00       	call   e7c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e10a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e10e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e112:	eb 27                	jmp    e13b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    e114:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e11b:	00 
    e11c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    e120:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e124:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e128:	48 89 ce             	mov    %rcx,%rsi
    e12b:	48 89 c7             	mov    %rax,%rdi
    e12e:	e8 97 ab ff ff       	call   8cca <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e133:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e137:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    e13b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e13f:	c9                   	leave
    e140:	c3                   	ret
    e141:	90                   	nop

000000000000e142 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    e142:	55                   	push   %rbp
    e143:	48 89 e5             	mov    %rsp,%rbp
    e146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    e14a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e14e:	48 83 c0 18          	add    $0x18,%rax
    e152:	5d                   	pop    %rbp
    e153:	c3                   	ret

000000000000e154 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    e154:	55                   	push   %rbp
    e155:	48 89 e5             	mov    %rsp,%rbp
    e158:	48 83 ec 10          	sub    $0x10,%rsp
    e15c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    e160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e164:	48 8b 00             	mov    (%rax),%rax
    e167:	48 89 c7             	mov    %rax,%rdi
    e16a:	e8 a1 51 ff ff       	call   3310 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    e16f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e173:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e17a:	c9                   	leave
    e17b:	c3                   	ret

000000000000e17c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e17c:	55                   	push   %rbp
    e17d:	48 89 e5             	mov    %rsp,%rbp
    e180:	48 83 ec 10          	sub    $0x10,%rsp
    e184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    e188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e18c:	48 8b 00             	mov    (%rax),%rax
    e18f:	48 89 c7             	mov    %rax,%rdi
    e192:	e8 09 50 ff ff       	call   31a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    e197:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e19b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e1a2:	c9                   	leave
    e1a3:	c3                   	ret

000000000000e1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    e1a4:	55                   	push   %rbp
    e1a5:	48 89 e5             	mov    %rsp,%rbp
    e1a8:	48 83 ec 20          	sub    $0x20,%rsp
    e1ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    e1b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1b4:	48 89 c7             	mov    %rax,%rdi
    e1b7:	e8 4e 06 00 00       	call   e80a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e1bc:	48 89 c2             	mov    %rax,%rdx
    e1bf:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    e1c3:	48 89 d6             	mov    %rdx,%rsi
    e1c6:	48 89 c7             	mov    %rax,%rdi
    e1c9:	e8 5a 06 00 00       	call   e828 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    e1ce:	c9                   	leave
    e1cf:	c3                   	ret

000000000000e1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e1d0:	55                   	push   %rbp
    e1d1:	48 89 e5             	mov    %rsp,%rbp
    e1d4:	41 54                	push   %r12
    e1d6:	53                   	push   %rbx
    e1d7:	48 83 ec 30          	sub    $0x30,%rsp
    e1db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e1df:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e1e3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e1e7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    e1eb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e1f0:	75 43                	jne    e235 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    e1f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1f6:	48 89 c7             	mov    %rax,%rdi
    e1f9:	e8 f6 fb ff ff       	call   ddf4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e1fe:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    e202:	74 31                	je     e235 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    e204:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e208:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e20c:	48 89 c7             	mov    %rax,%rdi
    e20f:	e8 9e fd ff ff       	call   dfb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e214:	49 89 c4             	mov    %rax,%r12
    e217:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e21b:	48 89 c7             	mov    %rax,%rdi
    e21e:	e8 81 ff ff ff       	call   e1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e223:	4c 89 e2             	mov    %r12,%rdx
    e226:	48 89 c6             	mov    %rax,%rsi
    e229:	48 89 df             	mov    %rbx,%rdi
    e22c:	e8 f3 e7 ff ff       	call   ca24 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e231:	84 c0                	test   %al,%al
    e233:	74 07                	je     e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    e235:	b8 01 00 00 00       	mov    $0x1,%eax
    e23a:	eb 05                	jmp    e241 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    e23c:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    e241:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    e244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e248:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    e24c:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    e250:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e254:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e258:	89 c7                	mov    %eax,%edi
    e25a:	e8 e1 4d ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    e25f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e263:	48 8b 40 28          	mov    0x28(%rax),%rax
    e267:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e26b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e26f:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    e273:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e277:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e27b:	48 89 d6             	mov    %rdx,%rsi
    e27e:	48 89 c7             	mov    %rax,%rdi
    e281:	e8 8a f6 ff ff       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e286:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    e28a:	48 83 c4 30          	add    $0x30,%rsp
    e28e:	5b                   	pop    %rbx
    e28f:	41 5c                	pop    %r12
    e291:	5d                   	pop    %rbp
    e292:	c3                   	ret

000000000000e293 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e293:	55                   	push   %rbp
    e294:	48 89 e5             	mov    %rsp,%rbp
    e297:	48 83 ec 10          	sub    $0x10,%rsp
    e29b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e29f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2a3:	48 89 c7             	mov    %rax,%rdi
    e2a6:	e8 8f 05 00 00       	call   e83a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    e2ab:	c9                   	leave
    e2ac:	c3                   	ret
    e2ad:	90                   	nop

000000000000e2ae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    e2ae:	55                   	push   %rbp
    e2af:	48 89 e5             	mov    %rsp,%rbp
    e2b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    e2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2ba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e2c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2c5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e2cc:	00 
    e2cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2d1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    e2d8:	00 
	{ }
    e2d9:	90                   	nop
    e2da:	5d                   	pop    %rbp
    e2db:	c3                   	ret

000000000000e2dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e2dc:	55                   	push   %rbp
    e2dd:	48 89 e5             	mov    %rsp,%rbp
    e2e0:	48 83 ec 10          	sub    $0x10,%rsp
    e2e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e2ec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e2f1:	74 15                	je     e308 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    e2f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2fb:	48 89 d6             	mov    %rdx,%rsi
    e2fe:	48 89 c7             	mov    %rax,%rdi
    e301:	e8 4e 05 00 00       	call   e854 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    e306:	eb 05                	jmp    e30d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    e308:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e30d:	c9                   	leave
    e30e:	c3                   	ret

000000000000e30f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    e30f:	55                   	push   %rbp
    e310:	48 89 e5             	mov    %rsp,%rbp
    e313:	48 83 ec 20          	sub    $0x20,%rsp
    e317:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e31b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    e31f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    e323:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e32b:	48 89 d6             	mov    %rdx,%rsi
    e32e:	48 89 c7             	mov    %rax,%rdi
    e331:	e8 48 05 00 00       	call   e87e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    e336:	c9                   	leave
    e337:	c3                   	ret

000000000000e338 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e338:	55                   	push   %rbp
    e339:	48 89 e5             	mov    %rsp,%rbp
    e33c:	48 83 ec 20          	sub    $0x20,%rsp
    e340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e348:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e34c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e350:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e357:	00 
    e358:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e35c:	48 89 d6             	mov    %rdx,%rsi
    e35f:	48 89 c7             	mov    %rax,%rdi
    e362:	e8 79 4f ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    e367:	c9                   	leave
    e368:	c3                   	ret
    e369:	90                   	nop

000000000000e36a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e36a:	55                   	push   %rbp
    e36b:	48 89 e5             	mov    %rsp,%rbp
    e36e:	48 83 ec 10          	sub    $0x10,%rsp
    e372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e37a:	48 89 c7             	mov    %rax,%rdi
    e37d:	e8 5a 05 00 00       	call   e8dc <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    e382:	c9                   	leave
    e383:	c3                   	ret

000000000000e384 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e384:	55                   	push   %rbp
    e385:	48 89 e5             	mov    %rsp,%rbp
    e388:	48 83 ec 10          	sub    $0x10,%rsp
    e38c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e390:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e394:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e39c:	ba 00 00 00 00       	mov    $0x0,%edx
    e3a1:	48 89 ce             	mov    %rcx,%rsi
    e3a4:	48 89 c7             	mov    %rax,%rdi
    e3a7:	e8 44 05 00 00       	call   e8f0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    e3ac:	c9                   	leave
    e3ad:	c3                   	ret

000000000000e3ae <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e3ae:	55                   	push   %rbp
    e3af:	48 89 e5             	mov    %rsp,%rbp
    e3b2:	48 83 ec 20          	sub    $0x20,%rsp
    e3b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e3be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e3c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3c6:	48 89 d0             	mov    %rdx,%rax
    e3c9:	48 01 c0             	add    %rax,%rax
    e3cc:	48 01 d0             	add    %rdx,%rax
    e3cf:	48 c1 e0 03          	shl    $0x3,%rax
    e3d3:	48 89 c2             	mov    %rax,%rdx
    e3d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e3da:	48 89 d6             	mov    %rdx,%rsi
    e3dd:	48 89 c7             	mov    %rax,%rdi
    e3e0:	e8 fb 4e ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    e3e5:	c9                   	leave
    e3e6:	c3                   	ret

000000000000e3e7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e3e7:	55                   	push   %rbp
    e3e8:	48 89 e5             	mov    %rsp,%rbp
    e3eb:	48 83 ec 20          	sub    $0x20,%rsp
    e3ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e3f7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e3fc:	74 40                	je     e43e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e3fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e402:	48 89 c7             	mov    %rax,%rdi
    e405:	e8 50 05 00 00       	call   e95a <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    e40a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e412:	48 89 c7             	mov    %rax,%rdi
    e415:	e8 4e 05 00 00       	call   e968 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e41a:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e41f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e423:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e427:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e42b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e42f:	48 89 ce             	mov    %rcx,%rsi
    e432:	48 89 c7             	mov    %rax,%rdi
    e435:	e8 77 05 00 00       	call   e9b1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    e43a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e43e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e442:	c9                   	leave
    e443:	c3                   	ret

000000000000e444 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    e444:	55                   	push   %rbp
    e445:	48 89 e5             	mov    %rsp,%rbp
    e448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e44c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e450:	90                   	nop
    e451:	5d                   	pop    %rbp
    e452:	c3                   	ret
    e453:	90                   	nop

000000000000e454 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e454:	55                   	push   %rbp
    e455:	48 89 e5             	mov    %rsp,%rbp
    e458:	48 83 ec 20          	sub    $0x20,%rsp
    e45c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e460:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e464:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e46c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e473:	00 
    e474:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e478:	48 89 d6             	mov    %rdx,%rsi
    e47b:	48 89 c7             	mov    %rax,%rdi
    e47e:	e8 5d 4e ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    e483:	c9                   	leave
    e484:	c3                   	ret

000000000000e485 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e485:	55                   	push   %rbp
    e486:	48 89 e5             	mov    %rsp,%rbp
    e489:	48 83 ec 10          	sub    $0x10,%rsp
    e48d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e495:	48 89 c7             	mov    %rax,%rdi
    e498:	e8 59 05 00 00       	call   e9f6 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    e49d:	c9                   	leave
    e49e:	c3                   	ret
    e49f:	90                   	nop

000000000000e4a0 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e4a0:	55                   	push   %rbp
    e4a1:	48 89 e5             	mov    %rsp,%rbp
    e4a4:	48 83 ec 20          	sub    $0x20,%rsp
    e4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e4b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4b8:	48 89 c7             	mov    %rax,%rdi
    e4bb:	e8 50 05 00 00       	call   ea10 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    e4c0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e4c4:	0f 92 c0             	setb   %al
    e4c7:	0f b6 c0             	movzbl %al,%eax
    e4ca:	48 85 c0             	test   %rax,%rax
    e4cd:	0f 95 c0             	setne  %al
    e4d0:	84 c0                	test   %al,%al
    e4d2:	74 1a                	je     e4ee <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e4d4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e4db:	ff ff 1f 
    e4de:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e4e2:	73 05                	jae    e4e9 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e4e4:	e8 37 4d ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e4e9:	e8 b2 4b ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e4ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e4f2:	48 c1 e0 03          	shl    $0x3,%rax
    e4f6:	48 89 c7             	mov    %rax,%rdi
    e4f9:	e8 d2 4d ff ff       	call   32d0 <_Znwm@plt>
    e4fe:	90                   	nop
      }
    e4ff:	c9                   	leave
    e500:	c3                   	ret

000000000000e501 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    e501:	55                   	push   %rbp
    e502:	48 89 e5             	mov    %rsp,%rbp
    e505:	48 83 ec 20          	sub    $0x20,%rsp
    e509:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e50d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e511:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    e515:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e519:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e521:	48 89 ce             	mov    %rcx,%rsi
    e524:	48 89 c7             	mov    %rax,%rdi
    e527:	e8 f8 04 00 00       	call   ea24 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    e52c:	c9                   	leave
    e52d:	c3                   	ret

000000000000e52e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e52e:	55                   	push   %rbp
    e52f:	48 89 e5             	mov    %rsp,%rbp
    e532:	48 83 ec 10          	sub    $0x10,%rsp
    e536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e53a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e53e:	48 89 c7             	mov    %rax,%rdi
    e541:	e8 2a 05 00 00       	call   ea70 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    e546:	c9                   	leave
    e547:	c3                   	ret

000000000000e548 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e548:	55                   	push   %rbp
    e549:	48 89 e5             	mov    %rsp,%rbp
    e54c:	48 83 ec 10          	sub    $0x10,%rsp
    e550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e558:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e55c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e560:	ba 00 00 00 00       	mov    $0x0,%edx
    e565:	48 89 ce             	mov    %rcx,%rsi
    e568:	48 89 c7             	mov    %rax,%rdi
    e56b:	e8 14 05 00 00       	call   ea84 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    e570:	c9                   	leave
    e571:	c3                   	ret

000000000000e572 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e572:	55                   	push   %rbp
    e573:	48 89 e5             	mov    %rsp,%rbp
    e576:	48 83 ec 20          	sub    $0x20,%rsp
    e57a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e57e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e582:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e586:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e58a:	48 89 d0             	mov    %rdx,%rax
    e58d:	48 c1 e0 06          	shl    $0x6,%rax
    e591:	48 01 d0             	add    %rdx,%rax
    e594:	48 c1 e0 02          	shl    $0x2,%rax
    e598:	48 89 c2             	mov    %rax,%rdx
    e59b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e59f:	48 89 d6             	mov    %rdx,%rsi
    e5a2:	48 89 c7             	mov    %rax,%rdi
    e5a5:	e8 36 4d ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    e5aa:	c9                   	leave
    e5ab:	c3                   	ret

000000000000e5ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e5ac:	55                   	push   %rbp
    e5ad:	48 89 e5             	mov    %rsp,%rbp
    e5b0:	48 83 ec 20          	sub    $0x20,%rsp
    e5b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e5bc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e5c1:	74 43                	je     e606 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    e5c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5c7:	48 89 c7             	mov    %rax,%rdi
    e5ca:	e8 20 05 00 00       	call   eaef <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    e5cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e5d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5d7:	48 89 c7             	mov    %rax,%rdi
    e5da:	e8 1e 05 00 00       	call   eafd <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e5df:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    e5e6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    e5e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e5eb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e5ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e5f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5f7:	48 89 ce             	mov    %rcx,%rsi
    e5fa:	48 89 c7             	mov    %rax,%rdi
    e5fd:	e8 55 05 00 00       	call   eb57 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    e602:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e606:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e60a:	c9                   	leave
    e60b:	c3                   	ret

000000000000e60c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    e60c:	55                   	push   %rbp
    e60d:	48 89 e5             	mov    %rsp,%rbp
    e610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e618:	5d                   	pop    %rbp
    e619:	c3                   	ret

000000000000e61a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    e61a:	55                   	push   %rbp
    e61b:	48 89 e5             	mov    %rsp,%rbp
    e61e:	48 83 ec 10          	sub    $0x10,%rsp
    e622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e626:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    e62a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e62e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e632:	48 89 d6             	mov    %rdx,%rsi
    e635:	48 89 c7             	mov    %rax,%rdi
    e638:	e8 7b 05 00 00       	call   ebb8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    e63d:	90                   	nop
    e63e:	c9                   	leave
    e63f:	c3                   	ret

000000000000e640 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    e640:	55                   	push   %rbp
    e641:	48 89 e5             	mov    %rsp,%rbp
    e644:	48 83 ec 20          	sub    $0x20,%rsp
    e648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e64c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e650:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    e654:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e658:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e65c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e660:	48 89 ce             	mov    %rcx,%rsi
    e663:	48 89 c7             	mov    %rax,%rdi
    e666:	e8 6d 05 00 00       	call   ebd8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    e66b:	90                   	nop
    e66c:	c9                   	leave
    e66d:	c3                   	ret

000000000000e66e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    e66e:	55                   	push   %rbp
    e66f:	48 89 e5             	mov    %rsp,%rbp
    e672:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    e676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e67a:	5d                   	pop    %rbp
    e67b:	c3                   	ret

000000000000e67c <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    e67c:	55                   	push   %rbp
    e67d:	48 89 e5             	mov    %rsp,%rbp
    e680:	48 83 ec 10          	sub    $0x10,%rsp
    e684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e688:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    e68c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e690:	48 89 c7             	mov    %rax,%rdi
    e693:	e8 b4 ec ff ff       	call   d34c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    e698:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e69c:	48 89 02             	mov    %rax,(%rdx)
    e69f:	90                   	nop
    e6a0:	c9                   	leave
    e6a1:	c3                   	ret

000000000000e6a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    e6a2:	55                   	push   %rbp
    e6a3:	48 89 e5             	mov    %rsp,%rbp
    e6a6:	48 83 ec 10          	sub    $0x10,%rsp
    e6aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    e6ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6b2:	48 89 c7             	mov    %rax,%rdi
    e6b5:	e8 52 ff ff ff       	call   e60c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e6ba:	be 01 00 00 00       	mov    $0x1,%esi
    e6bf:	48 89 c7             	mov    %rax,%rdi
    e6c2:	e8 4b 05 00 00       	call   ec12 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    e6c7:	c9                   	leave
    e6c8:	c3                   	ret
    e6c9:	90                   	nop

000000000000e6ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    e6ca:	55                   	push   %rbp
    e6cb:	48 89 e5             	mov    %rsp,%rbp
    e6ce:	41 56                	push   %r14
    e6d0:	41 55                	push   %r13
    e6d2:	41 54                	push   %r12
    e6d4:	53                   	push   %rbx
    e6d5:	48 83 ec 30          	sub    $0x30,%rsp
    e6d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e6dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e6e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e6e5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    e6e9:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    e6ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e6f1:	48 89 c6             	mov    %rax,%rsi
    e6f4:	bf 48 00 00 00       	mov    $0x48,%edi
    e6f9:	e8 8b 51 ff ff       	call   3889 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    e6fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e702:	48 89 c7             	mov    %rax,%rdi
    e705:	e8 2f 93 ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    e70a:	49 89 c6             	mov    %rax,%r14
    e70d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e711:	48 89 c7             	mov    %rax,%rdi
    e714:	e8 74 ec ff ff       	call   d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    e719:	49 89 c5             	mov    %rax,%r13
    e71c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e720:	48 89 c7             	mov    %rax,%rdi
    e723:	e8 f5 92 ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    e728:	49 89 c4             	mov    %rax,%r12
    e72b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e72f:	48 89 c7             	mov    %rax,%rdi
    e732:	e8 cf eb ff ff       	call   d306 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e737:	48 89 c3             	mov    %rax,%rbx
    e73a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e73e:	48 89 c7             	mov    %rax,%rdi
    e741:	e8 c6 fe ff ff       	call   e60c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e746:	4d 89 f0             	mov    %r14,%r8
    e749:	4c 89 e9             	mov    %r13,%rcx
    e74c:	4c 89 e2             	mov    %r12,%rdx
    e74f:	48 89 de             	mov    %rbx,%rsi
    e752:	48 89 c7             	mov    %rax,%rdi
    e755:	e8 e2 04 00 00       	call   ec3c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    e75a:	eb 33                	jmp    e78f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    e75c:	48 89 c7             	mov    %rax,%rdi
    e75f:	e8 7c 49 ff ff       	call   30e0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    e764:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e768:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e76c:	48 89 d6             	mov    %rdx,%rsi
    e76f:	48 89 c7             	mov    %rax,%rdi
    e772:	e8 47 f6 ff ff       	call   ddbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    e777:	e8 a4 4c ff ff       	call   3420 <__cxa_rethrow@plt>
	  __catch(...)
    e77c:	48 89 c3             	mov    %rax,%rbx
    e77f:	e8 0c 4d ff ff       	call   3490 <__cxa_end_catch@plt>
    e784:	48 89 d8             	mov    %rbx,%rax
    e787:	48 89 c7             	mov    %rax,%rdi
    e78a:	e8 51 4d ff ff       	call   34e0 <_Unwind_Resume@plt>
	}
    e78f:	48 83 c4 30          	add    $0x30,%rsp
    e793:	5b                   	pop    %rbx
    e794:	41 5c                	pop    %r12
    e796:	41 5d                	pop    %r13
    e798:	41 5e                	pop    %r14
    e79a:	5d                   	pop    %rbp
    e79b:	c3                   	ret

000000000000e79c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e79c:	55                   	push   %rbp
    e79d:	48 89 e5             	mov    %rsp,%rbp
    e7a0:	48 83 ec 20          	sub    $0x20,%rsp
    e7a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    e7a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7ac:	48 8b 50 18          	mov    0x18(%rax),%rdx
    e7b0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e7b4:	48 89 d6             	mov    %rdx,%rsi
    e7b7:	48 89 c7             	mov    %rax,%rdi
    e7ba:	e8 51 f1 ff ff       	call   d910 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e7bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7c3:	c9                   	leave
    e7c4:	c3                   	ret
    e7c5:	90                   	nop

000000000000e7c6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    e7c6:	55                   	push   %rbp
    e7c7:	48 89 e5             	mov    %rsp,%rbp
    e7ca:	48 83 ec 20          	sub    $0x20,%rsp
    e7ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e7d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    e7da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e7de:	48 89 c7             	mov    %rax,%rdi
    e7e1:	e8 c2 04 00 00       	call   eca8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    e7e6:	48 8b 10             	mov    (%rax),%rdx
    e7e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7ed:	48 89 10             	mov    %rdx,(%rax)
    e7f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7f4:	48 89 c7             	mov    %rax,%rdi
    e7f7:	e8 02 b3 ff ff       	call   9afe <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    e7fc:	48 8b 10             	mov    (%rax),%rdx
    e7ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e803:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e807:	90                   	nop
    e808:	c9                   	leave
    e809:	c3                   	ret

000000000000e80a <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    e80a:	55                   	push   %rbp
    e80b:	48 89 e5             	mov    %rsp,%rbp
    e80e:	48 83 ec 10          	sub    $0x10,%rsp
    e812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    e816:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e81a:	48 83 c0 20          	add    $0x20,%rax
    e81e:	48 89 c7             	mov    %rax,%rdi
    e821:	e8 90 04 00 00       	call   ecb6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    e826:	c9                   	leave
    e827:	c3                   	ret

000000000000e828 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      operator()(const _Pair& __x) const
    e828:	55                   	push   %rbp
    e829:	48 89 e5             	mov    %rsp,%rbp
    e82c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e830:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    e834:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e838:	5d                   	pop    %rbp
    e839:	c3                   	ret

000000000000e83a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e83a:	55                   	push   %rbp
    e83b:	48 89 e5             	mov    %rsp,%rbp
    e83e:	48 83 ec 10          	sub    $0x10,%rsp
    e842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e84a:	48 89 c7             	mov    %rax,%rdi
    e84d:	e8 7e 04 00 00       	call   ecd0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    e852:	c9                   	leave
    e853:	c3                   	ret

000000000000e854 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    e854:	55                   	push   %rbp
    e855:	48 89 e5             	mov    %rsp,%rbp
    e858:	48 83 ec 10          	sub    $0x10,%rsp
    e85c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e864:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e86c:	ba 00 00 00 00       	mov    $0x0,%edx
    e871:	48 89 ce             	mov    %rcx,%rsi
    e874:	48 89 c7             	mov    %rax,%rdi
    e877:	e8 68 04 00 00       	call   ece4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    e87c:	c9                   	leave
    e87d:	c3                   	ret

000000000000e87e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e87e:	55                   	push   %rbp
    e87f:	48 89 e5             	mov    %rsp,%rbp
    e882:	48 83 ec 20          	sub    $0x20,%rsp
    e886:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e88a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e88e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e893:	74 40                	je     e8d5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    e895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e899:	48 89 c7             	mov    %rax,%rdi
    e89c:	e8 a4 04 00 00       	call   ed45 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    e8a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8a9:	48 89 c7             	mov    %rax,%rdi
    e8ac:	e8 a2 04 00 00       	call   ed53 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    e8b1:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e8b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e8ba:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e8be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e8c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e8c6:	48 89 ce             	mov    %rcx,%rsi
    e8c9:	48 89 c7             	mov    %rax,%rdi
    e8cc:	e8 a9 04 00 00       	call   ed7a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    e8d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e8d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e8d9:	c9                   	leave
    e8da:	c3                   	ret
    e8db:	90                   	nop

000000000000e8dc <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e8dc:	55                   	push   %rbp
    e8dd:	48 89 e5             	mov    %rsp,%rbp
    e8e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e8e4:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    e8eb:	55 55 05 
      }
    e8ee:	5d                   	pop    %rbp
    e8ef:	c3                   	ret

000000000000e8f0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e8f0:	55                   	push   %rbp
    e8f1:	48 89 e5             	mov    %rsp,%rbp
    e8f4:	48 83 ec 20          	sub    $0x20,%rsp
    e8f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e900:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e908:	48 89 c7             	mov    %rax,%rdi
    e90b:	e8 cc ff ff ff       	call   e8dc <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    e910:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e914:	0f 92 c0             	setb   %al
    e917:	0f b6 c0             	movzbl %al,%eax
    e91a:	48 85 c0             	test   %rax,%rax
    e91d:	0f 95 c0             	setne  %al
    e920:	84 c0                	test   %al,%al
    e922:	74 1a                	je     e93e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e924:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    e92b:	aa aa 0a 
    e92e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e932:	73 05                	jae    e939 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e934:	e8 e7 48 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e939:	e8 62 47 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e93e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e942:	48 89 d0             	mov    %rdx,%rax
    e945:	48 01 c0             	add    %rax,%rax
    e948:	48 01 d0             	add    %rdx,%rax
    e94b:	48 c1 e0 03          	shl    $0x3,%rax
    e94f:	48 89 c7             	mov    %rax,%rdi
    e952:	e8 79 49 ff ff       	call   32d0 <_Znwm@plt>
    e957:	90                   	nop
      }
    e958:	c9                   	leave
    e959:	c3                   	ret

000000000000e95a <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e95a:	55                   	push   %rbp
    e95b:	48 89 e5             	mov    %rsp,%rbp
    e95e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e966:	5d                   	pop    %rbp
    e967:	c3                   	ret

000000000000e968 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e968:	55                   	push   %rbp
    e969:	48 89 e5             	mov    %rsp,%rbp
    e96c:	48 83 ec 10          	sub    $0x10,%rsp
    e970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e978:	48 89 c6             	mov    %rax,%rsi
    e97b:	bf 18 00 00 00       	mov    $0x18,%edi
    e980:	e8 04 4f ff ff       	call   3889 <_ZnwmPv>
    e985:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e98b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    e992:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    e999:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    e9a0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    e9a7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    e9ae:	90                   	nop
    e9af:	c9                   	leave
    e9b0:	c3                   	ret

000000000000e9b1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e9b1:	55                   	push   %rbp
    e9b2:	48 89 e5             	mov    %rsp,%rbp
    e9b5:	48 83 ec 20          	sub    $0x20,%rsp
    e9b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e9c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    e9c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e9c9:	48 89 c7             	mov    %rax,%rdi
    e9cc:	e8 ed 03 00 00       	call   edbe <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e9d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e9d5:	48 89 c7             	mov    %rax,%rdi
    e9d8:	e8 56 cf ff ff       	call   b933 <_ZSt17__size_to_integerm>
    e9dd:	48 89 c1             	mov    %rax,%rcx
    e9e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e9e8:	48 89 ce             	mov    %rcx,%rsi
    e9eb:	48 89 c7             	mov    %rax,%rdi
    e9ee:	e8 d6 03 00 00       	call   edc9 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    e9f3:	c9                   	leave
    e9f4:	c3                   	ret
    e9f5:	90                   	nop

000000000000e9f6 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e9f6:	55                   	push   %rbp
    e9f7:	48 89 e5             	mov    %rsp,%rbp
    e9fa:	48 83 ec 10          	sub    $0x10,%rsp
    e9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ea02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea06:	48 89 c7             	mov    %rax,%rdi
    ea09:	e8 02 00 00 00       	call   ea10 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    ea0e:	c9                   	leave
    ea0f:	c3                   	ret

000000000000ea10 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ea10:	55                   	push   %rbp
    ea11:	48 89 e5             	mov    %rsp,%rbp
    ea14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ea18:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ea1f:	ff ff 0f 
      }
    ea22:	5d                   	pop    %rbp
    ea23:	c3                   	ret

000000000000ea24 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    ea24:	55                   	push   %rbp
    ea25:	48 89 e5             	mov    %rsp,%rbp
    ea28:	53                   	push   %rbx
    ea29:	48 83 ec 28          	sub    $0x28,%rsp
    ea2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ea31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ea35:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    ea39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ea3d:	48 89 c7             	mov    %rax,%rdi
    ea40:	e8 f1 03 00 00       	call   ee36 <_ZSt12__miter_baseIPKPKcET_S4_>
    ea45:	48 89 c3             	mov    %rax,%rbx
    ea48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea4c:	48 89 c7             	mov    %rax,%rdi
    ea4f:	e8 e2 03 00 00       	call   ee36 <_ZSt12__miter_baseIPKPKcET_S4_>
    ea54:	48 89 c1             	mov    %rax,%rcx
    ea57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea5b:	48 89 c2             	mov    %rax,%rdx
    ea5e:	48 89 de             	mov    %rbx,%rsi
    ea61:	48 89 cf             	mov    %rcx,%rdi
    ea64:	e8 db 03 00 00       	call   ee44 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    ea69:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ea6d:	c9                   	leave
    ea6e:	c3                   	ret
    ea6f:	90                   	nop

000000000000ea70 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ea70:	55                   	push   %rbp
    ea71:	48 89 e5             	mov    %rsp,%rbp
    ea74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ea78:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    ea7f:	07 7e 00 
      }
    ea82:	5d                   	pop    %rbp
    ea83:	c3                   	ret

000000000000ea84 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ea84:	55                   	push   %rbp
    ea85:	48 89 e5             	mov    %rsp,%rbp
    ea88:	48 83 ec 20          	sub    $0x20,%rsp
    ea8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ea98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea9c:	48 89 c7             	mov    %rax,%rdi
    ea9f:	e8 cc ff ff ff       	call   ea70 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    eaa4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    eaa8:	0f 92 c0             	setb   %al
    eaab:	0f b6 c0             	movzbl %al,%eax
    eaae:	48 85 c0             	test   %rax,%rax
    eab1:	0f 95 c0             	setne  %al
    eab4:	84 c0                	test   %al,%al
    eab6:	74 1a                	je     ead2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    eab8:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    eabf:	0f fc 00 
    eac2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    eac6:	73 05                	jae    eacd <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    eac8:	e8 53 47 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    eacd:	e8 ce 45 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ead2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ead6:	48 89 d0             	mov    %rdx,%rax
    ead9:	48 c1 e0 06          	shl    $0x6,%rax
    eadd:	48 01 d0             	add    %rdx,%rax
    eae0:	48 c1 e0 02          	shl    $0x2,%rax
    eae4:	48 89 c7             	mov    %rax,%rdi
    eae7:	e8 e4 47 ff ff       	call   32d0 <_Znwm@plt>
    eaec:	90                   	nop
      }
    eaed:	c9                   	leave
    eaee:	c3                   	ret

000000000000eaef <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    eaef:	55                   	push   %rbp
    eaf0:	48 89 e5             	mov    %rsp,%rbp
    eaf3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    eaf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eafb:	5d                   	pop    %rbp
    eafc:	c3                   	ret

000000000000eafd <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    eafd:	55                   	push   %rbp
    eafe:	48 89 e5             	mov    %rsp,%rbp
    eb01:	48 83 ec 10          	sub    $0x10,%rsp
    eb05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    eb09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb0d:	48 89 c6             	mov    %rax,%rsi
    eb10:	bf 04 01 00 00       	mov    $0x104,%edi
    eb15:	e8 6f 4d ff ff       	call   3889 <_ZnwmPv>
    eb1a:	b9 04 01 00 00       	mov    $0x104,%ecx
    eb1f:	be 00 00 00 00       	mov    $0x0,%esi
    eb24:	48 89 30             	mov    %rsi,(%rax)
    eb27:	89 ca                	mov    %ecx,%edx
    eb29:	48 01 c2             	add    %rax,%rdx
    eb2c:	48 83 c2 08          	add    $0x8,%rdx
    eb30:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    eb34:	48 8d 50 08          	lea    0x8(%rax),%rdx
    eb38:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    eb3c:	48 29 d0             	sub    %rdx,%rax
    eb3f:	01 c1                	add    %eax,%ecx
    eb41:	83 e1 f8             	and    $0xfffffff8,%ecx
    eb44:	89 c8                	mov    %ecx,%eax
    eb46:	c1 e8 03             	shr    $0x3,%eax
    eb49:	89 c1                	mov    %eax,%ecx
    eb4b:	48 89 d7             	mov    %rdx,%rdi
    eb4e:	48 89 f0             	mov    %rsi,%rax
    eb51:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    eb54:	90                   	nop
    eb55:	c9                   	leave
    eb56:	c3                   	ret

000000000000eb57 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    eb57:	55                   	push   %rbp
    eb58:	48 89 e5             	mov    %rsp,%rbp
    eb5b:	48 83 ec 20          	sub    $0x20,%rsp
    eb5f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb63:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb67:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    eb6b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    eb6f:	48 89 c7             	mov    %rax,%rdi
    eb72:	e8 37 03 00 00       	call   eeae <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    eb77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb7b:	48 89 c7             	mov    %rax,%rdi
    eb7e:	e8 b0 cd ff ff       	call   b933 <_ZSt17__size_to_integerm>
    eb83:	48 89 c1             	mov    %rax,%rcx
    eb86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb8e:	48 89 ce             	mov    %rcx,%rsi
    eb91:	48 89 c7             	mov    %rax,%rdi
    eb94:	e8 20 03 00 00       	call   eeb9 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    eb99:	c9                   	leave
    eb9a:	c3                   	ret
    eb9b:	90                   	nop

000000000000eb9c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    eb9c:	55                   	push   %rbp
    eb9d:	48 89 e5             	mov    %rsp,%rbp
    eba0:	48 83 ec 10          	sub    $0x10,%rsp
    eba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebac:	48 89 c7             	mov    %rax,%rdi
    ebaf:	e8 bc 45 ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ebb4:	90                   	nop
    ebb5:	c9                   	leave
    ebb6:	c3                   	ret
    ebb7:	90                   	nop

000000000000ebb8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    ebb8:	55                   	push   %rbp
    ebb9:	48 89 e5             	mov    %rsp,%rbp
    ebbc:	48 83 ec 10          	sub    $0x10,%rsp
    ebc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    ebc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebcc:	48 89 c7             	mov    %rax,%rdi
    ebcf:	e8 c8 ff ff ff       	call   eb9c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    ebd4:	90                   	nop
    ebd5:	c9                   	leave
    ebd6:	c3                   	ret
    ebd7:	90                   	nop

000000000000ebd8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ebd8:	55                   	push   %rbp
    ebd9:	48 89 e5             	mov    %rsp,%rbp
    ebdc:	48 83 ec 20          	sub    $0x20,%rsp
    ebe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebe4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ebe8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ebec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ebf0:	48 89 d0             	mov    %rdx,%rax
    ebf3:	48 c1 e0 03          	shl    $0x3,%rax
    ebf7:	48 01 d0             	add    %rdx,%rax
    ebfa:	48 c1 e0 03          	shl    $0x3,%rax
    ebfe:	48 89 c2             	mov    %rax,%rdx
    ec01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec05:	48 89 d6             	mov    %rdx,%rsi
    ec08:	48 89 c7             	mov    %rax,%rdi
    ec0b:	e8 d0 46 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    ec10:	c9                   	leave
    ec11:	c3                   	ret

000000000000ec12 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    ec12:	55                   	push   %rbp
    ec13:	48 89 e5             	mov    %rsp,%rbp
    ec16:	48 83 ec 10          	sub    $0x10,%rsp
    ec1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ec22:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ec26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec2a:	ba 00 00 00 00       	mov    $0x0,%edx
    ec2f:	48 89 ce             	mov    %rcx,%rsi
    ec32:	48 89 c7             	mov    %rax,%rdi
    ec35:	e8 ee 02 00 00       	call   ef28 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    ec3a:	c9                   	leave
    ec3b:	c3                   	ret

000000000000ec3c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    ec3c:	55                   	push   %rbp
    ec3d:	48 89 e5             	mov    %rsp,%rbp
    ec40:	41 54                	push   %r12
    ec42:	53                   	push   %rbx
    ec43:	48 83 ec 30          	sub    $0x30,%rsp
    ec47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ec4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ec4f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ec53:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    ec57:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    ec5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec5f:	48 89 c7             	mov    %rax,%rdi
    ec62:	e8 d2 8d ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    ec67:	49 89 c4             	mov    %rax,%r12
    ec6a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ec6e:	48 89 c7             	mov    %rax,%rdi
    ec71:	e8 17 e7 ff ff       	call   d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ec76:	48 89 c3             	mov    %rax,%rbx
    ec79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec7d:	48 89 c7             	mov    %rax,%rdi
    ec80:	e8 98 8d ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ec85:	48 89 c2             	mov    %rax,%rdx
    ec88:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    ec8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec90:	4d 89 e0             	mov    %r12,%r8
    ec93:	48 89 d9             	mov    %rbx,%rcx
    ec96:	48 89 c7             	mov    %rax,%rdi
    ec99:	e8 1c 03 00 00       	call   efba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    ec9e:	90                   	nop
    ec9f:	48 83 c4 30          	add    $0x30,%rsp
    eca3:	5b                   	pop    %rbx
    eca4:	41 5c                	pop    %r12
    eca6:	5d                   	pop    %rbp
    eca7:	c3                   	ret

000000000000eca8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    eca8:	55                   	push   %rbp
    eca9:	48 89 e5             	mov    %rsp,%rbp
    ecac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ecb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecb4:	5d                   	pop    %rbp
    ecb5:	c3                   	ret

000000000000ecb6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() const noexcept
    ecb6:	55                   	push   %rbp
    ecb7:	48 89 e5             	mov    %rsp,%rbp
    ecba:	48 83 ec 10          	sub    $0x10,%rsp
    ecbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    ecc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecc6:	48 89 c7             	mov    %rax,%rdi
    ecc9:	e8 9c 03 00 00       	call   f06a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    ecce:	c9                   	leave
    eccf:	c3                   	ret

000000000000ecd0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ecd0:	55                   	push   %rbp
    ecd1:	48 89 e5             	mov    %rsp,%rbp
    ecd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ecd8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ecdf:	ff ff 0f 
      }
    ece2:	5d                   	pop    %rbp
    ece3:	c3                   	ret

000000000000ece4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ece4:	55                   	push   %rbp
    ece5:	48 89 e5             	mov    %rsp,%rbp
    ece8:	48 83 ec 20          	sub    $0x20,%rsp
    ecec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ecf4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ecf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecfc:	48 89 c7             	mov    %rax,%rdi
    ecff:	e8 cc ff ff ff       	call   ecd0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    ed04:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ed08:	0f 92 c0             	setb   %al
    ed0b:	0f b6 c0             	movzbl %al,%eax
    ed0e:	48 85 c0             	test   %rax,%rax
    ed11:	0f 95 c0             	setne  %al
    ed14:	84 c0                	test   %al,%al
    ed16:	74 1a                	je     ed32 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ed18:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    ed1f:	ff ff 1f 
    ed22:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ed26:	73 05                	jae    ed2d <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ed28:	e8 f3 44 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ed2d:	e8 6e 43 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ed32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed36:	48 c1 e0 03          	shl    $0x3,%rax
    ed3a:	48 89 c7             	mov    %rax,%rdi
    ed3d:	e8 8e 45 ff ff       	call   32d0 <_Znwm@plt>
    ed42:	90                   	nop
      }
    ed43:	c9                   	leave
    ed44:	c3                   	ret

000000000000ed45 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ed45:	55                   	push   %rbp
    ed46:	48 89 e5             	mov    %rsp,%rbp
    ed49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ed4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed51:	5d                   	pop    %rbp
    ed52:	c3                   	ret

000000000000ed53 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ed53:	55                   	push   %rbp
    ed54:	48 89 e5             	mov    %rsp,%rbp
    ed57:	48 83 ec 10          	sub    $0x10,%rsp
    ed5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ed5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed63:	48 89 c6             	mov    %rax,%rsi
    ed66:	bf 08 00 00 00       	mov    $0x8,%edi
    ed6b:	e8 19 4b ff ff       	call   3889 <_ZnwmPv>
    ed70:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    ed77:	90                   	nop
    ed78:	c9                   	leave
    ed79:	c3                   	ret

000000000000ed7a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ed7a:	55                   	push   %rbp
    ed7b:	48 89 e5             	mov    %rsp,%rbp
    ed7e:	48 83 ec 20          	sub    $0x20,%rsp
    ed82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ed8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ed8e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ed92:	48 89 c7             	mov    %rax,%rdi
    ed95:	e8 de 02 00 00       	call   f078 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ed9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed9e:	48 89 c7             	mov    %rax,%rdi
    eda1:	e8 8d cb ff ff       	call   b933 <_ZSt17__size_to_integerm>
    eda6:	48 89 c1             	mov    %rax,%rcx
    eda9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    edb1:	48 89 ce             	mov    %rcx,%rsi
    edb4:	48 89 c7             	mov    %rax,%rdi
    edb7:	e8 c7 02 00 00       	call   f083 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    edbc:	c9                   	leave
    edbd:	c3                   	ret

000000000000edbe <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    edbe:	55                   	push   %rbp
    edbf:	48 89 e5             	mov    %rsp,%rbp
    edc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    edc6:	90                   	nop
    edc7:	5d                   	pop    %rbp
    edc8:	c3                   	ret

000000000000edc9 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    edc9:	55                   	push   %rbp
    edca:	48 89 e5             	mov    %rsp,%rbp
    edcd:	48 83 ec 20          	sub    $0x20,%rsp
    edd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    edd5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    edd9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    eddd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ede2:	75 06                	jne    edea <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ede4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ede8:	eb 4a                	jmp    ee34 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    edea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    edee:	48 89 d0             	mov    %rdx,%rax
    edf1:	48 01 c0             	add    %rax,%rax
    edf4:	48 01 d0             	add    %rdx,%rax
    edf7:	48 c1 e0 03          	shl    $0x3,%rax
    edfb:	48 89 c2             	mov    %rax,%rdx
    edfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee02:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ee06:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee0e:	48 89 ce             	mov    %rcx,%rsi
    ee11:	48 89 c7             	mov    %rax,%rdi
    ee14:	e8 c7 02 00 00       	call   f0e0 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    ee19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ee1d:	48 89 d0             	mov    %rdx,%rax
    ee20:	48 01 c0             	add    %rax,%rax
    ee23:	48 01 d0             	add    %rdx,%rax
    ee26:	48 c1 e0 03          	shl    $0x3,%rax
    ee2a:	48 89 c2             	mov    %rax,%rdx
    ee2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee31:	48 01 d0             	add    %rdx,%rax
    }
    ee34:	c9                   	leave
    ee35:	c3                   	ret

000000000000ee36 <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
    ee36:	55                   	push   %rbp
    ee37:	48 89 e5             	mov    %rsp,%rbp
    ee3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    ee3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee42:	5d                   	pop    %rbp
    ee43:	c3                   	ret

000000000000ee44 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    ee44:	55                   	push   %rbp
    ee45:	48 89 e5             	mov    %rsp,%rbp
    ee48:	41 54                	push   %r12
    ee4a:	53                   	push   %rbx
    ee4b:	48 83 ec 20          	sub    $0x20,%rsp
    ee4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ee53:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ee57:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    ee5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee5f:	48 89 c7             	mov    %rax,%rdi
    ee62:	e8 b5 02 00 00       	call   f11c <_ZSt12__niter_baseIPPKcET_S3_>
    ee67:	49 89 c4             	mov    %rax,%r12
    ee6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ee6e:	48 89 c7             	mov    %rax,%rdi
    ee71:	e8 98 02 00 00       	call   f10e <_ZSt12__niter_baseIPKPKcET_S4_>
    ee76:	48 89 c3             	mov    %rax,%rbx
    ee79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee7d:	48 89 c7             	mov    %rax,%rdi
    ee80:	e8 89 02 00 00       	call   f10e <_ZSt12__niter_baseIPKPKcET_S4_>
    ee85:	4c 89 e2             	mov    %r12,%rdx
    ee88:	48 89 de             	mov    %rbx,%rsi
    ee8b:	48 89 c7             	mov    %rax,%rdi
    ee8e:	e8 97 02 00 00       	call   f12a <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    ee93:	48 89 c2             	mov    %rax,%rdx
    ee96:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ee9a:	48 89 d6             	mov    %rdx,%rsi
    ee9d:	48 89 c7             	mov    %rax,%rdi
    eea0:	e8 b2 02 00 00       	call   f157 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    eea5:	48 83 c4 20          	add    $0x20,%rsp
    eea9:	5b                   	pop    %rbx
    eeaa:	41 5c                	pop    %r12
    eeac:	5d                   	pop    %rbp
    eead:	c3                   	ret

000000000000eeae <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    eeae:	55                   	push   %rbp
    eeaf:	48 89 e5             	mov    %rsp,%rbp
    eeb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    eeb6:	90                   	nop
    eeb7:	5d                   	pop    %rbp
    eeb8:	c3                   	ret

000000000000eeb9 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    eeb9:	55                   	push   %rbp
    eeba:	48 89 e5             	mov    %rsp,%rbp
    eebd:	48 83 ec 20          	sub    $0x20,%rsp
    eec1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eec5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eec9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    eecd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eed2:	75 06                	jne    eeda <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    eed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eed8:	eb 4c                	jmp    ef26 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    eeda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eede:	48 89 d0             	mov    %rdx,%rax
    eee1:	48 c1 e0 06          	shl    $0x6,%rax
    eee5:	48 01 d0             	add    %rdx,%rax
    eee8:	48 c1 e0 02          	shl    $0x2,%rax
    eeec:	48 89 c2             	mov    %rax,%rdx
    eeef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eef3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    eef7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eefb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeff:	48 89 ce             	mov    %rcx,%rsi
    ef02:	48 89 c7             	mov    %rax,%rdi
    ef05:	e8 5f 02 00 00       	call   f169 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    ef0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef0e:	48 89 d0             	mov    %rdx,%rax
    ef11:	48 c1 e0 06          	shl    $0x6,%rax
    ef15:	48 01 d0             	add    %rdx,%rax
    ef18:	48 c1 e0 02          	shl    $0x2,%rax
    ef1c:	48 89 c2             	mov    %rax,%rdx
    ef1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef23:	48 01 d0             	add    %rdx,%rax
    }
    ef26:	c9                   	leave
    ef27:	c3                   	ret

000000000000ef28 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ef28:	55                   	push   %rbp
    ef29:	48 89 e5             	mov    %rsp,%rbp
    ef2c:	48 83 ec 20          	sub    $0x20,%rsp
    ef30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ef3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef40:	48 89 c7             	mov    %rax,%rdi
    ef43:	e8 50 02 00 00       	call   f198 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    ef48:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ef4c:	0f 92 c0             	setb   %al
    ef4f:	0f b6 c0             	movzbl %al,%eax
    ef52:	48 85 c0             	test   %rax,%rax
    ef55:	0f 95 c0             	setne  %al
    ef58:	84 c0                	test   %al,%al
    ef5a:	74 1a                	je     ef76 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ef5c:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    ef63:	38 8e 03 
    ef66:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ef6a:	73 05                	jae    ef71 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ef6c:	e8 af 42 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ef71:	e8 2a 41 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ef76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef7a:	48 89 d0             	mov    %rdx,%rax
    ef7d:	48 c1 e0 03          	shl    $0x3,%rax
    ef81:	48 01 d0             	add    %rdx,%rax
    ef84:	48 c1 e0 03          	shl    $0x3,%rax
    ef88:	48 89 c7             	mov    %rax,%rdi
    ef8b:	e8 40 43 ff ff       	call   32d0 <_Znwm@plt>
    ef90:	90                   	nop
      }
    ef91:	c9                   	leave
    ef92:	c3                   	ret
    ef93:	90                   	nop

000000000000ef94 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    ef94:	55                   	push   %rbp
    ef95:	48 89 e5             	mov    %rsp,%rbp
    ef98:	48 83 ec 10          	sub    $0x10,%rsp
    ef9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efa8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    efac:	48 89 d6             	mov    %rdx,%rsi
    efaf:	48 89 c7             	mov    %rax,%rdi
    efb2:	e8 f5 01 00 00       	call   f1ac <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    efb7:	90                   	nop
    efb8:	c9                   	leave
    efb9:	c3                   	ret

000000000000efba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    efba:	55                   	push   %rbp
    efbb:	48 89 e5             	mov    %rsp,%rbp
    efbe:	41 56                	push   %r14
    efc0:	41 55                	push   %r13
    efc2:	41 54                	push   %r12
    efc4:	53                   	push   %rbx
    efc5:	48 83 ec 40          	sub    $0x40,%rsp
    efc9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    efcd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    efd1:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    efd5:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    efd9:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    efdd:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    efe1:	48 89 de             	mov    %rbx,%rsi
    efe4:	bf 28 00 00 00       	mov    $0x28,%edi
    efe9:	e8 9b 48 ff ff       	call   3889 <_ZnwmPv>
    efee:	49 89 c4             	mov    %rax,%r12
    eff1:	41 be 01 00 00 00    	mov    $0x1,%r14d
    eff7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    effb:	48 89 c7             	mov    %rax,%rdi
    effe:	e8 36 8a ff ff       	call   7a39 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    f003:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f007:	48 89 c7             	mov    %rax,%rdi
    f00a:	e8 7e e3 ff ff       	call   d38d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    f00f:	48 89 c2             	mov    %rax,%rdx
    f012:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f016:	48 89 d6             	mov    %rdx,%rsi
    f019:	48 89 c7             	mov    %rax,%rdi
    f01c:	e8 73 ff ff ff       	call   ef94 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f021:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f025:	48 89 c7             	mov    %rax,%rdi
    f028:	e8 f0 89 ff ff       	call   7a1d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    f02d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f031:	48 89 c6             	mov    %rax,%rsi
    f034:	4c 89 e7             	mov    %r12,%rdi
    f037:	e8 8e 01 00 00       	call   f1ca <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    f03c:	eb 1e                	jmp    f05c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    f03e:	49 89 c5             	mov    %rax,%r13
    f041:	45 84 f6             	test   %r14b,%r14b
    f044:	74 0b                	je     f051 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    f046:	48 89 de             	mov    %rbx,%rsi
    f049:	4c 89 e7             	mov    %r12,%rdi
    f04c:	e8 4a 48 ff ff       	call   389b <_ZdlPvS_>
    f051:	4c 89 e8             	mov    %r13,%rax
    f054:	48 89 c7             	mov    %rax,%rdi
    f057:	e8 84 44 ff ff       	call   34e0 <_Unwind_Resume@plt>
    f05c:	48 83 c4 40          	add    $0x40,%rsp
    f060:	5b                   	pop    %rbx
    f061:	41 5c                	pop    %r12
    f063:	41 5d                	pop    %r13
    f065:	41 5e                	pop    %r14
    f067:	5d                   	pop    %rbp
    f068:	c3                   	ret
    f069:	90                   	nop

000000000000f06a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    f06a:	55                   	push   %rbp
    f06b:	48 89 e5             	mov    %rsp,%rbp
    f06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    f072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f076:	5d                   	pop    %rbp
    f077:	c3                   	ret

000000000000f078 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    f078:	55                   	push   %rbp
    f079:	48 89 e5             	mov    %rsp,%rbp
    f07c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    f080:	90                   	nop
    f081:	5d                   	pop    %rbp
    f082:	c3                   	ret

000000000000f083 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    f083:	55                   	push   %rbp
    f084:	48 89 e5             	mov    %rsp,%rbp
    f087:	48 83 ec 20          	sub    $0x20,%rsp
    f08b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f08f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f093:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    f097:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f09c:	75 06                	jne    f0a4 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    f09e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0a2:	eb 3a                	jmp    f0de <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    f0a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f0af:	00 
    f0b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0b4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f0b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f0bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0c0:	48 89 ce             	mov    %rcx,%rsi
    f0c3:	48 89 c7             	mov    %rax,%rdi
    f0c6:	e8 29 01 00 00       	call   f1f4 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    f0cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0cf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f0d6:	00 
    f0d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0db:	48 01 d0             	add    %rdx,%rax
    }
    f0de:	c9                   	leave
    f0df:	c3                   	ret

000000000000f0e0 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f0e0:	55                   	push   %rbp
    f0e1:	48 89 e5             	mov    %rsp,%rbp
    f0e4:	48 83 ec 20          	sub    $0x20,%rsp
    f0e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f0f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f0f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f0f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f0fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f100:	48 89 ce             	mov    %rcx,%rsi
    f103:	48 89 c7             	mov    %rax,%rdi
    f106:	e8 17 01 00 00       	call   f222 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    f10b:	90                   	nop
    f10c:	c9                   	leave
    f10d:	c3                   	ret

000000000000f10e <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    f10e:	55                   	push   %rbp
    f10f:	48 89 e5             	mov    %rsp,%rbp
    f112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f11a:	5d                   	pop    %rbp
    f11b:	c3                   	ret

000000000000f11c <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    f11c:	55                   	push   %rbp
    f11d:	48 89 e5             	mov    %rsp,%rbp
    f120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f128:	5d                   	pop    %rbp
    f129:	c3                   	ret

000000000000f12a <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    f12a:	55                   	push   %rbp
    f12b:	48 89 e5             	mov    %rsp,%rbp
    f12e:	48 83 ec 20          	sub    $0x20,%rsp
    f132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f136:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f13a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    f13e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f142:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f14a:	48 89 ce             	mov    %rcx,%rsi
    f14d:	48 89 c7             	mov    %rax,%rdi
    f150:	e8 10 01 00 00       	call   f265 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    f155:	c9                   	leave
    f156:	c3                   	ret

000000000000f157 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    f157:	55                   	push   %rbp
    f158:	48 89 e5             	mov    %rsp,%rbp
    f15b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f15f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    f163:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f167:	5d                   	pop    %rbp
    f168:	c3                   	ret

000000000000f169 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f169:	55                   	push   %rbp
    f16a:	48 89 e5             	mov    %rsp,%rbp
    f16d:	48 83 ec 20          	sub    $0x20,%rsp
    f171:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f175:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f179:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f17d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f181:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f189:	48 89 ce             	mov    %rcx,%rsi
    f18c:	48 89 c7             	mov    %rax,%rdi
    f18f:	e8 fe 00 00 00       	call   f292 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    f194:	90                   	nop
    f195:	c9                   	leave
    f196:	c3                   	ret
    f197:	90                   	nop

000000000000f198 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f198:	55                   	push   %rbp
    f199:	48 89 e5             	mov    %rsp,%rbp
    f19c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f1a0:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    f1a7:	1c c7 01 
      }
    f1aa:	5d                   	pop    %rbp
    f1ab:	c3                   	ret

000000000000f1ac <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    f1ac:	55                   	push   %rbp
    f1ad:	48 89 e5             	mov    %rsp,%rbp
    f1b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    f1b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f1c0:	48 8b 12             	mov    (%rdx),%rdx
    f1c3:	48 89 10             	mov    %rdx,(%rax)
      { }
    f1c6:	90                   	nop
    f1c7:	5d                   	pop    %rbp
    f1c8:	c3                   	ret
    f1c9:	90                   	nop

000000000000f1ca <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
      pair<_T1, _T2>::
    f1ca:	55                   	push   %rbp
    f1cb:	48 89 e5             	mov    %rsp,%rbp
    f1ce:	48 83 ec 20          	sub    $0x20,%rsp
    f1d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    f1da:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    f1de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f1e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1e6:	48 89 ce             	mov    %rcx,%rsi
    f1e9:	48 89 c7             	mov    %rax,%rdi
    f1ec:	e8 19 01 00 00       	call   f30a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    f1f1:	90                   	nop
    f1f2:	c9                   	leave
    f1f3:	c3                   	ret

000000000000f1f4 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f1f4:	55                   	push   %rbp
    f1f5:	48 89 e5             	mov    %rsp,%rbp
    f1f8:	48 83 ec 20          	sub    $0x20,%rsp
    f1fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f200:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f204:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f208:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f20c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f214:	48 89 ce             	mov    %rcx,%rsi
    f217:	48 89 c7             	mov    %rax,%rdi
    f21a:	e8 35 01 00 00       	call   f354 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    f21f:	90                   	nop
    f220:	c9                   	leave
    f221:	c3                   	ret

000000000000f222 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f222:	55                   	push   %rbp
    f223:	48 89 e5             	mov    %rsp,%rbp
    f226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f22a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f22e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f232:	eb 23                	jmp    f257 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    f234:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f238:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    f23c:	48 8b 06             	mov    (%rsi),%rax
    f23f:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    f243:	48 89 01             	mov    %rax,(%rcx)
    f246:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    f24a:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f24e:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    f252:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    f257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f25b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f25f:	75 d3                	jne    f234 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f261:	90                   	nop
    f262:	90                   	nop
    f263:	5d                   	pop    %rbp
    f264:	c3                   	ret

000000000000f265 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    f265:	55                   	push   %rbp
    f266:	48 89 e5             	mov    %rsp,%rbp
    f269:	48 83 ec 20          	sub    $0x20,%rsp
    f26d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f271:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f275:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    f279:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f27d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f285:	48 89 ce             	mov    %rcx,%rsi
    f288:	48 89 c7             	mov    %rax,%rdi
    f28b:	e8 ff 00 00 00       	call   f38f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    f290:	c9                   	leave
    f291:	c3                   	ret

000000000000f292 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f292:	55                   	push   %rbp
    f293:	48 89 e5             	mov    %rsp,%rbp
    f296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f29a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f29e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f2a2:	eb 58                	jmp    f2fc <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    f2a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f2ac:	b9 04 01 00 00       	mov    $0x104,%ecx
    f2b1:	48 8b 32             	mov    (%rdx),%rsi
    f2b4:	48 89 30             	mov    %rsi,(%rax)
    f2b7:	89 ce                	mov    %ecx,%esi
    f2b9:	48 01 c6             	add    %rax,%rsi
    f2bc:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    f2c0:	89 ce                	mov    %ecx,%esi
    f2c2:	48 01 d6             	add    %rdx,%rsi
    f2c5:	48 83 c6 08          	add    $0x8,%rsi
    f2c9:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    f2cd:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    f2d1:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f2d5:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f2d9:	48 29 f8             	sub    %rdi,%rax
    f2dc:	48 29 c2             	sub    %rax,%rdx
    f2df:	01 c1                	add    %eax,%ecx
    f2e1:	83 e1 f8             	and    $0xfffffff8,%ecx
    f2e4:	89 c8                	mov    %ecx,%eax
    f2e6:	c1 e8 03             	shr    $0x3,%eax
    f2e9:	89 c0                	mov    %eax,%eax
    f2eb:	48 89 d6             	mov    %rdx,%rsi
    f2ee:	48 89 c1             	mov    %rax,%rcx
    f2f1:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    f2f4:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    f2fb:	00 
    f2fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f300:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f304:	75 9e                	jne    f2a4 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f306:	90                   	nop
    f307:	90                   	nop
    f308:	5d                   	pop    %rbp
    f309:	c3                   	ret

000000000000f30a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:
      pair<_T1, _T2>::
    f30a:	55                   	push   %rbp
    f30b:	48 89 e5             	mov    %rsp,%rbp
    f30e:	53                   	push   %rbx
    f30f:	48 83 ec 28          	sub    $0x28,%rsp
    f313:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f317:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f31b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    f31f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f323:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f327:	48 89 c7             	mov    %rax,%rdi
    f32a:	e8 bf 00 00 00       	call   f3ee <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    f32f:	48 89 c7             	mov    %rax,%rdi
    f332:	e8 d1 00 00 00       	call   f408 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    f337:	48 89 c6             	mov    %rax,%rsi
    f33a:	48 89 df             	mov    %rbx,%rdi
    f33d:	e8 1e 3e ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    f342:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f346:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    f34d:	90                   	nop
    f34e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f352:	c9                   	leave
    f353:	c3                   	ret

000000000000f354 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f354:	55                   	push   %rbp
    f355:	48 89 e5             	mov    %rsp,%rbp
    f358:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f35c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f360:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    f364:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f368:	48 8b 00             	mov    (%rax),%rax
    f36b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    f36f:	eb 10                	jmp    f381 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    f371:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f375:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f379:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f37c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    f381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f385:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f389:	75 e6                	jne    f371 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    f38b:	90                   	nop
    f38c:	90                   	nop
    f38d:	5d                   	pop    %rbp
    f38e:	c3                   	ret

000000000000f38f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    f38f:	55                   	push   %rbp
    f390:	48 89 e5             	mov    %rsp,%rbp
    f393:	48 83 ec 30          	sub    $0x30,%rsp
    f397:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f39b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f39f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    f3a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f3a7:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f3ab:	48 c1 f8 03          	sar    $0x3,%rax
    f3af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    f3b3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f3b8:	74 1f                	je     f3d9 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    f3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f3c5:	00 
    f3c6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f3ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f3ce:	48 89 ce             	mov    %rcx,%rsi
    f3d1:	48 89 c7             	mov    %rax,%rdi
    f3d4:	e8 a7 40 ff ff       	call   3480 <memmove@plt>
	  return __result + _Num;
    f3d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3dd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f3e4:	00 
    f3e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f3e9:	48 01 d0             	add    %rdx,%rax
	}
    f3ec:	c9                   	leave
    f3ed:	c3                   	ret

000000000000f3ee <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    f3ee:	55                   	push   %rbp
    f3ef:	48 89 e5             	mov    %rsp,%rbp
    f3f2:	48 83 ec 10          	sub    $0x10,%rsp
    f3f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    f3fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3fe:	48 89 c7             	mov    %rax,%rdi
    f401:	e8 10 00 00 00       	call   f416 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    f406:	c9                   	leave
    f407:	c3                   	ret

000000000000f408 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f408:	55                   	push   %rbp
    f409:	48 89 e5             	mov    %rsp,%rbp
    f40c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f414:	5d                   	pop    %rbp
    f415:	c3                   	ret

000000000000f416 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    f416:	55                   	push   %rbp
    f417:	48 89 e5             	mov    %rsp,%rbp
    f41a:	48 83 ec 10          	sub    $0x10,%rsp
    f41e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    f422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f426:	48 89 c7             	mov    %rax,%rdi
    f429:	e8 02 00 00 00       	call   f430 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    f42e:	c9                   	leave
    f42f:	c3                   	ret

000000000000f430 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    f430:	55                   	push   %rbp
    f431:	48 89 e5             	mov    %rsp,%rbp
    f434:	48 83 ec 10          	sub    $0x10,%rsp
    f438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f43c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f440:	48 89 c7             	mov    %rax,%rdi
    f443:	e8 02 00 00 00       	call   f44a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    f448:	c9                   	leave
    f449:	c3                   	ret

000000000000f44a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    f44a:	55                   	push   %rbp
    f44b:	48 89 e5             	mov    %rsp,%rbp
    f44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f456:	48 8b 00             	mov    (%rax),%rax
    f459:	5d                   	pop    %rbp
    f45a:	c3                   	ret
    f45b:	90                   	nop

000000000000f45c <_ZN4neko7Context13createContextEv>:

namespace neko {

static std::atomic<u32> contextCount = 0;

void Context::createContext() {
    f45c:	55                   	push   %rbp
    f45d:	48 89 e5             	mov    %rsp,%rbp
    f460:	41 54                	push   %r12
    f462:	53                   	push   %rbx
  if (glfwInit() != GLFW_TRUE) {
    f463:	e8 18 3f ff ff       	call   3380 <glfwInit@plt>
    f468:	83 f8 01             	cmp    $0x1,%eax
    f46b:	0f 95 c0             	setne  %al
    f46e:	84 c0                	test   %al,%al
    f470:	74 3b                	je     f4ad <_ZN4neko7Context13createContextEv+0x51>
    throw std::runtime_error(
        "A bug or configuration error in GLFW, the underlying operating "
        "system or its drivers, or a lack of required resources.");
    f472:	bf 10 00 00 00       	mov    $0x10,%edi
    f477:	e8 a4 3c ff ff       	call   3120 <__cxa_allocate_exception@plt>
    f47c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f47f:	48 8d 05 fa 30 00 00 	lea    0x30fa(%rip),%rax        # 12580 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    f486:	48 89 c6             	mov    %rax,%rsi
    f489:	48 89 df             	mov    %rbx,%rdi
    f48c:	e8 2f 3c ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
        "system or its drivers, or a lack of required resources.");
    f491:	48 8b 05 20 fb 00 00 	mov    0xfb20(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f498:	48 89 c2             	mov    %rax,%rdx
    f49b:	48 8d 05 9e f8 00 00 	lea    0xf89e(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f4a2:	48 89 c6             	mov    %rax,%rsi
    f4a5:	48 89 df             	mov    %rbx,%rdi
    f4a8:	e8 13 40 ff ff       	call   34c0 <__cxa_throw@plt>
  }
  ++contextCount;
    f4ad:	48 8d 05 44 00 01 00 	lea    0x10044(%rip),%rax        # 1f4f8 <_ZN4nekoL12contextCountE>
    f4b4:	48 89 c7             	mov    %rax,%rdi
    f4b7:	e8 98 01 00 00       	call   f654 <_ZNSt13__atomic_baseIjEppEv>
}
    f4bc:	eb 16                	jmp    f4d4 <_ZN4neko7Context13createContextEv+0x78>
        "system or its drivers, or a lack of required resources.");
    f4be:	49 89 c4             	mov    %rax,%r12
    f4c1:	48 89 df             	mov    %rbx,%rdi
    f4c4:	e8 f7 3c ff ff       	call   31c0 <__cxa_free_exception@plt>
    f4c9:	4c 89 e0             	mov    %r12,%rax
    f4cc:	48 89 c7             	mov    %rax,%rdi
    f4cf:	e8 0c 40 ff ff       	call   34e0 <_Unwind_Resume@plt>
}
    f4d4:	5b                   	pop    %rbx
    f4d5:	41 5c                	pop    %r12
    f4d7:	5d                   	pop    %rbp
    f4d8:	c3                   	ret
    f4d9:	90                   	nop

000000000000f4da <_ZN4neko7Context17moveCreateContextEv>:

void Context::moveCreateContext() { ++contextCount; }
    f4da:	55                   	push   %rbp
    f4db:	48 89 e5             	mov    %rsp,%rbp
    f4de:	48 8d 05 13 00 01 00 	lea    0x10013(%rip),%rax        # 1f4f8 <_ZN4nekoL12contextCountE>
    f4e5:	48 89 c7             	mov    %rax,%rdi
    f4e8:	e8 67 01 00 00       	call   f654 <_ZNSt13__atomic_baseIjEppEv>
    f4ed:	90                   	nop
    f4ee:	5d                   	pop    %rbp
    f4ef:	c3                   	ret

000000000000f4f0 <_ZN4neko7Context14destroyContextEv>:

void Context::destroyContext() {
    f4f0:	55                   	push   %rbp
    f4f1:	48 89 e5             	mov    %rsp,%rbp
  --contextCount;
    f4f4:	48 8d 05 fd ff 00 00 	lea    0xfffd(%rip),%rax        # 1f4f8 <_ZN4nekoL12contextCountE>
    f4fb:	48 89 c7             	mov    %rax,%rdi
    f4fe:	e8 6b 01 00 00       	call   f66e <_ZNSt13__atomic_baseIjEmmEv>
  if (contextCount == 0) {
    f503:	48 8d 05 ee ff 00 00 	lea    0xffee(%rip),%rax        # 1f4f8 <_ZN4nekoL12contextCountE>
    f50a:	48 89 c7             	mov    %rax,%rdi
    f50d:	e8 7c 01 00 00       	call   f68e <_ZNKSt13__atomic_baseIjEcvjEv>
    f512:	85 c0                	test   %eax,%eax
    f514:	0f 94 c0             	sete   %al
    f517:	84 c0                	test   %al,%al
    f519:	74 05                	je     f520 <_ZN4neko7Context14destroyContextEv+0x30>
    glfwTerminate();
    f51b:	e8 e0 3d ff ff       	call   3300 <glfwTerminate@plt>
  }
}
    f520:	90                   	nop
    f521:	5d                   	pop    %rbp
    f522:	c3                   	ret
    f523:	90                   	nop

000000000000f524 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
    f524:	55                   	push   %rbp
    f525:	48 89 e5             	mov    %rsp,%rbp
    f528:	48 83 ec 40          	sub    $0x40,%rsp
    f52c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f530:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f534:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f538:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    f53c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f540:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f544:	48 8d 15 ad 30 00 00 	lea    0x30ad(%rip),%rdx        # 125f8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x80>
    f54b:	48 89 d6             	mov    %rdx,%rsi
    f54e:	48 89 c7             	mov    %rax,%rdi
    f551:	e8 4a 3d ff ff       	call   32a0 <vkGetInstanceProcAddr@plt>
    f556:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    f55a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f55f:	74 1c                	je     f57d <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    f561:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f565:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    f569:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f56d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    f571:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f575:	48 89 c7             	mov    %rax,%rdi
    f578:	41 ff d0             	call   *%r8
    f57b:	eb 05                	jmp    f582 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    f57d:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    f582:	c9                   	leave
    f583:	c3                   	ret

000000000000f584 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
    f584:	55                   	push   %rbp
    f585:	48 89 e5             	mov    %rsp,%rbp
    f588:	48 83 ec 30          	sub    $0x30,%rsp
    f58c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f590:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f594:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f598:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f59c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f5a0:	48 8d 15 71 30 00 00 	lea    0x3071(%rip),%rdx        # 12618 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa0>
    f5a7:	48 89 d6             	mov    %rdx,%rsi
    f5aa:	48 89 c7             	mov    %rax,%rdi
    f5ad:	e8 ee 3c ff ff       	call   32a0 <vkGetInstanceProcAddr@plt>
    f5b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    f5b6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f5bb:	74 19                	je     f5d6 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    f5bd:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f5c1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f5c5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f5c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f5cd:	48 89 ce             	mov    %rcx,%rsi
    f5d0:	48 89 c7             	mov    %rax,%rdi
    f5d3:	41 ff d0             	call   *%r8
  }
}
    f5d6:	90                   	nop
    f5d7:	c9                   	leave
    f5d8:	c3                   	ret

000000000000f5d9 <_Z41__static_initialization_and_destruction_0ii>:

    f5d9:	55                   	push   %rbp
    f5da:	48 89 e5             	mov    %rsp,%rbp
    f5dd:	48 83 ec 10          	sub    $0x10,%rsp
    f5e1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f5e4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f5e7:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    f5eb:	75 3b                	jne    f628 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f5ed:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    f5f4:	75 32                	jne    f628 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f5f6:	48 8d 05 f7 fe 00 00 	lea    0xfef7(%rip),%rax        # 1f4f4 <_ZStL8__ioinit>
    f5fd:	48 89 c7             	mov    %rax,%rdi
    f600:	e8 4b 3e ff ff       	call   3450 <_ZNSt8ios_base4InitC1Ev@plt>
    f605:	48 8d 05 84 fc 00 00 	lea    0xfc84(%rip),%rax        # 1f290 <__dso_handle>
    f60c:	48 89 c2             	mov    %rax,%rdx
    f60f:	48 8d 05 de fe 00 00 	lea    0xfede(%rip),%rax        # 1f4f4 <_ZStL8__ioinit>
    f616:	48 89 c6             	mov    %rax,%rsi
    f619:	48 8b 05 b8 f9 00 00 	mov    0xf9b8(%rip),%rax        # 1efd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    f620:	48 89 c7             	mov    %rax,%rdi
    f623:	e8 48 3c ff ff       	call   3270 <__cxa_atexit@plt>
    f628:	90                   	nop
    f629:	c9                   	leave
    f62a:	c3                   	ret

000000000000f62b <_GLOBAL__sub_I__ZN4neko7Context13createContextEv>:
    f62b:	55                   	push   %rbp
    f62c:	48 89 e5             	mov    %rsp,%rbp
    f62f:	be ff ff 00 00       	mov    $0xffff,%esi
    f634:	bf 01 00 00 00       	mov    $0x1,%edi
    f639:	e8 9b ff ff ff       	call   f5d9 <_Z41__static_initialization_and_destruction_0ii>
    f63e:	5d                   	pop    %rbp
    f63f:	c3                   	ret

000000000000f640 <_ZStanSt12memory_orderSt23__memory_order_modifier>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
    f640:	55                   	push   %rbp
    f641:	48 89 e5             	mov    %rsp,%rbp
    f644:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f647:	89 75 f8             	mov    %esi,-0x8(%rbp)
    return memory_order(int(__m) & int(__mod));
    f64a:	8b 55 fc             	mov    -0x4(%rbp),%edx
    f64d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    f650:	21 d0                	and    %edx,%eax
  }
    f652:	5d                   	pop    %rbp
    f653:	c3                   	ret

000000000000f654 <_ZNSt13__atomic_baseIjEppEv>:
      __int_type
      operator--(int) volatile noexcept
      { return fetch_sub(1); }

      __int_type
      operator++() noexcept
    f654:	55                   	push   %rbp
    f655:	48 89 e5             	mov    %rsp,%rbp
    f658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    f65c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f660:	b8 01 00 00 00       	mov    $0x1,%eax
    f665:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    f669:	83 c0 01             	add    $0x1,%eax
    f66c:	5d                   	pop    %rbp
    f66d:	c3                   	ret

000000000000f66e <_ZNSt13__atomic_baseIjEmmEv>:
      __int_type
      operator++() volatile noexcept
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }

      __int_type
      operator--() noexcept
    f66e:	55                   	push   %rbp
    f66f:	48 89 e5             	mov    %rsp,%rbp
    f672:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    f676:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f67a:	b8 01 00 00 00       	mov    $0x1,%eax
    f67f:	f7 d8                	neg    %eax
    f681:	89 c1                	mov    %eax,%ecx
    f683:	89 c8                	mov    %ecx,%eax
    f685:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    f689:	01 c8                	add    %ecx,%eax
    f68b:	5d                   	pop    %rbp
    f68c:	c3                   	ret
    f68d:	90                   	nop

000000000000f68e <_ZNKSt13__atomic_baseIjEcvjEv>:
      operator __int_type() const noexcept
    f68e:	55                   	push   %rbp
    f68f:	48 89 e5             	mov    %rsp,%rbp
    f692:	48 83 ec 20          	sub    $0x20,%rsp
    f696:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f69a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f69e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f6a2:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b __attribute__ ((__unused__))
	  = __m & __memory_order_mask;
    f6a9:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f6ac:	be ff ff 00 00       	mov    $0xffff,%esi
    f6b1:	89 c7                	mov    %eax,%edi
    f6b3:	e8 88 ff ff ff       	call   f640 <_ZStanSt12memory_orderSt23__memory_order_modifier>
    f6b8:	89 45 f0             	mov    %eax,-0x10(%rbp)
	__glibcxx_assert(__b != memory_order_release);
    f6bb:	e8 be 41 ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    f6c0:	84 c0                	test   %al,%al
    f6c2:	74 0d                	je     f6d1 <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    f6c4:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
    f6c8:	75 07                	jne    f6d1 <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    f6ca:	b8 01 00 00 00       	mov    $0x1,%eax
    f6cf:	eb 05                	jmp    f6d6 <_ZNKSt13__atomic_baseIjEcvjEv+0x48>
    f6d1:	b8 00 00 00 00       	mov    $0x0,%eax
    f6d6:	84 c0                	test   %al,%al
	__glibcxx_assert(__b != memory_order_acq_rel);
    f6d8:	e8 a1 41 ff ff       	call   387e <_ZSt23__is_constant_evaluatedv>
    f6dd:	84 c0                	test   %al,%al
    f6df:	74 0d                	je     f6ee <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    f6e1:	83 7d f0 04          	cmpl   $0x4,-0x10(%rbp)
    f6e5:	75 07                	jne    f6ee <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    f6e7:	b8 01 00 00 00       	mov    $0x1,%eax
    f6ec:	eb 05                	jmp    f6f3 <_ZNKSt13__atomic_baseIjEcvjEv+0x65>
    f6ee:	b8 00 00 00 00       	mov    $0x0,%eax
    f6f3:	84 c0                	test   %al,%al

	return __atomic_load_n(&_M_i, int(__m));
    f6f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6f9:	8b 00                	mov    (%rax),%eax
    f6fb:	90                   	nop
      { return load(); }
    f6fc:	c9                   	leave
    f6fd:	c3                   	ret

000000000000f6fe <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    f6fe:	55                   	push   %rbp
    f6ff:	48 89 e5             	mov    %rsp,%rbp
    f702:	48 83 ec 20          	sub    $0x20,%rsp
    f706:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f709:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f70c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    f710:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    f714:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f717:	83 f8 01             	cmp    $0x1,%eax
    f71a:	7e 3c                	jle    f758 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    f71c:	be 0a 00 00 00       	mov    $0xa,%esi
    f721:	48 8d 05 b8 fc 00 00 	lea    0xfcb8(%rip),%rax        # 1f3e0 <_ZSt4cerr@GLIBCXX_3.4>
    f728:	48 89 c7             	mov    %rax,%rdi
    f72b:	e8 60 3c ff ff       	call   3390 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    f730:	48 89 c2             	mov    %rax,%rdx
    f733:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f737:	48 8b 40 28          	mov    0x28(%rax),%rax
    f73b:	48 89 c6             	mov    %rax,%rsi
    f73e:	48 89 d7             	mov    %rdx,%rdi
    f741:	e8 7a 3b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f746:	48 8b 15 5b f8 00 00 	mov    0xf85b(%rip),%rdx        # 1efa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    f74d:	48 89 d6             	mov    %rdx,%rsi
    f750:	48 89 c7             	mov    %rax,%rdi
    f753:	e8 c8 3b ff ff       	call   3320 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    f758:	b8 00 00 00 00       	mov    $0x0,%eax
}
    f75d:	c9                   	leave
    f75e:	c3                   	ret
    f75f:	90                   	nop

000000000000f760 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
    f760:	55                   	push   %rbp
    f761:	48 89 e5             	mov    %rsp,%rbp
    f764:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f768:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
    f76c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f770:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
    f776:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f77a:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      // VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
    f781:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f785:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
    f78c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f790:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # f6fe <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    f797:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
    f79b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f79f:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    f7a6:	00 
}
    f7a7:	90                   	nop
    f7a8:	5d                   	pop    %rbp
    f7a9:	c3                   	ret

000000000000f7aa <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
    f7aa:	55                   	push   %rbp
    f7ab:	48 89 e5             	mov    %rsp,%rbp
    f7ae:	53                   	push   %rbx
    f7af:	48 83 ec 58          	sub    $0x58,%rsp
    f7b3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    f7b7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    f7bb:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f7bf:	48 89 c7             	mov    %rax,%rdi
    f7c2:	e8 49 3a ff ff       	call   3210 <glfwGetRequiredInstanceExtensions@plt>
    f7c7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    f7cb:	8b 45 c8             	mov    -0x38(%rbp),%eax
    f7ce:	89 c3                	mov    %eax,%ebx
    f7d0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f7d4:	48 89 c7             	mov    %rax,%rdi
    f7d7:	e8 70 c4 ff ff       	call   bc4c <_ZNSaIPKcEC1Ev>
    f7dc:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    f7e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f7e4:	48 89 de             	mov    %rbx,%rsi
    f7e7:	48 89 c7             	mov    %rax,%rdi
    f7ea:	e8 79 06 00 00       	call   fe68 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    f7ef:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f7f3:	48 89 c7             	mov    %rax,%rdi
    f7f6:	e8 6d c4 ff ff       	call   bc68 <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
    f7fb:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f802:	00 
  for (auto &extension : requiredExtensions) {
    f803:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f807:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f80b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f80f:	48 89 c7             	mov    %rax,%rdi
    f812:	e8 c7 06 00 00       	call   fede <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f817:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f81b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f81f:	48 89 c7             	mov    %rax,%rdi
    f822:	e8 dd 06 00 00       	call   ff04 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f827:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f82b:	eb 3e                	jmp    f86b <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
    f82d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f831:	48 89 c7             	mov    %rax,%rdi
    f834:	e8 4f 07 00 00       	call   ff88 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f839:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
    f83d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f841:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f848:	00 
    f849:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f84d:	48 01 d0             	add    %rdx,%rax
    f850:	48 8b 10             	mov    (%rax),%rdx
    f853:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f857:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
    f85a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
    f85f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f863:	48 89 c7             	mov    %rax,%rdi
    f866:	e8 fd 06 00 00       	call   ff68 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f86b:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    f86f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f873:	48 89 d6             	mov    %rdx,%rsi
    f876:	48 89 c7             	mov    %rax,%rdi
    f879:	e8 af 06 00 00       	call   ff2d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f87e:	84 c0                	test   %al,%al
    f880:	75 ab                	jne    f82d <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
    f882:	eb 1a                	jmp    f89e <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    f884:	48 89 c3             	mov    %rax,%rbx
    f887:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f88b:	48 89 c7             	mov    %rax,%rdi
    f88e:	e8 d5 c3 ff ff       	call   bc68 <_ZNSaIPKcED1Ev>
    f893:	48 89 d8             	mov    %rbx,%rax
    f896:	48 89 c7             	mov    %rax,%rdi
    f899:	e8 42 3c ff ff       	call   34e0 <_Unwind_Resume@plt>
}
    f89e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f8a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f8a6:	c9                   	leave
    f8a7:	c3                   	ret

000000000000f8a8 <_ZN4neko8InstanceC1ERKNS_8SettingsE>:

Instance::Instance(const Settings &settings) {
    f8a8:	55                   	push   %rbp
    f8a9:	48 89 e5             	mov    %rsp,%rbp
    f8ac:	41 55                	push   %r13
    f8ae:	41 54                	push   %r12
    f8b0:	53                   	push   %rbx
    f8b1:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    f8b8:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    f8bf:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    f8c6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f8cd:	48 89 c7             	mov    %rax,%rdi
    f8d0:	e8 67 05 00 00       	call   fe3c <_ZN4neko7ContextC1Ev>
    f8d5:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f8dc:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f8e3:	00 
    f8e4:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f8eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f8f2:	00 
    f8f3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f8fa:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
    f8fe:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    f902:	48 89 c7             	mov    %rax,%rdi
    f905:	e8 b6 3a ff ff       	call   33c0 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
    f90a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f90e:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    f915:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    f91c:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    f923:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    f92a:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
    f92d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    f934:	48 89 c7             	mov    %rax,%rdi
    f937:	e8 b4 37 ff ff       	call   30f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    f93c:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
    f943:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    f94a:	8b 40 20             	mov    0x20(%rax),%eax
    f94d:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
    f953:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    f95a:	48 83 c0 28          	add    $0x28,%rax
    f95e:	48 89 c7             	mov    %rax,%rdi
    f961:	e8 8a 37 ff ff       	call   30f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    f966:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
    f96d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    f974:	8b 40 48             	mov    0x48(%rax),%eax
    f977:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
    f97d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    f980:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    f986:	48 8d 05 db 32 00 00 	lea    0x32db(%rip),%rax        # 12c68 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    f98d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f991:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f995:	49 89 c4             	mov    %rax,%r12
    f998:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    f99e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f9a2:	48 89 c7             	mov    %rax,%rdi
    f9a5:	e8 a2 c2 ff ff       	call   bc4c <_ZNSaIPKcEC1Ev>
    f9aa:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    f9ae:	4c 89 e6             	mov    %r12,%rsi
    f9b1:	4c 89 ef             	mov    %r13,%rdi
    f9b4:	4c 89 e1             	mov    %r12,%rcx
    f9b7:	4c 89 eb             	mov    %r13,%rbx
    f9ba:	48 89 df             	mov    %rbx,%rdi
    f9bd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f9c1:	48 89 d1             	mov    %rdx,%rcx
    f9c4:	48 89 fa             	mov    %rdi,%rdx
    f9c7:	48 89 c7             	mov    %rax,%rdi
    f9ca:	e8 b5 c2 ff ff       	call   bc84 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f9cf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f9d3:	48 89 c7             	mov    %rax,%rdi
    f9d6:	e8 8d c2 ff ff       	call   bc68 <_ZNSaIPKcED1Ev>
  auto extensions = getRequiredExtensions();
    f9db:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f9df:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    f9e6:	48 89 d6             	mov    %rdx,%rsi
    f9e9:	48 89 c7             	mov    %rax,%rdi
    f9ec:	e8 b9 fd ff ff       	call   f7aa <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
    f9f1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    f9f8:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
    f9f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f9fd:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    fa04:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    fa0b:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
    fa12:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fa16:	48 8d 15 65 32 00 00 	lea    0x3265(%rip),%rdx        # 12c82 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
    fa1d:	48 89 d6             	mov    %rdx,%rsi
    fa20:	48 89 c7             	mov    %rax,%rdi
    fa23:	e8 72 05 00 00       	call   ff9a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    fa28:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fa2c:	48 8d 15 6b 32 00 00 	lea    0x326b(%rip),%rdx        # 12c9e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
    fa33:	48 89 d6             	mov    %rdx,%rsi
    fa36:	48 89 c7             	mov    %rax,%rdi
    fa39:	e8 00 06 00 00       	call   1003e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    populateDebugMessengerInfo(debugMessengerInfo);
    fa3e:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    fa45:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fa4c:	48 89 d6             	mov    %rdx,%rsi
    fa4f:	48 89 c7             	mov    %rax,%rdi
    fa52:	e8 09 fd ff ff       	call   f760 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
    fa57:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    fa5e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
    fa62:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fa66:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    fa6d:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    fa74:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    fa7b:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    fa82:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    fa89:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
    fa8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa90:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
    fa97:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    fa9e:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = vku32(layers.size());
    faa5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    faa9:	48 89 c7             	mov    %rax,%rdi
    faac:	e8 31 06 00 00       	call   100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fab1:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
    fab7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fabb:	48 89 c7             	mov    %rax,%rdi
    fabe:	e8 43 06 00 00       	call   10106 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fac3:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = vku32(extensions.size());
    faca:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    face:	48 89 c7             	mov    %rax,%rdi
    fad1:	e8 0c 06 00 00       	call   100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fad6:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
    fadc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fae0:	48 89 c7             	mov    %rax,%rdi
    fae3:	e8 1e 06 00 00       	call   10106 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fae8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
    faef:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    faf6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fafa:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fb01:	be 00 00 00 00       	mov    $0x0,%esi
    fb06:	48 89 c7             	mov    %rax,%rdi
    fb09:	e8 92 38 ff ff       	call   33a0 <vkCreateInstance@plt>
    fb0e:	85 c0                	test   %eax,%eax
    fb10:	0f 95 c0             	setne  %al
    fb13:	84 c0                	test   %al,%al
    fb15:	74 3b                	je     fb52 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x2aa>
    throw std::runtime_error("Failed to create instance.");
    fb17:	bf 10 00 00 00       	mov    $0x10,%edi
    fb1c:	e8 ff 35 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    fb21:	48 89 c3             	mov    %rax,%rbx
    fb24:	48 8d 05 86 31 00 00 	lea    0x3186(%rip),%rax        # 12cb1 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
    fb2b:	48 89 c6             	mov    %rax,%rsi
    fb2e:	48 89 df             	mov    %rbx,%rdi
    fb31:	e8 8a 35 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    fb36:	48 8b 05 7b f4 00 00 	mov    0xf47b(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fb3d:	48 89 c2             	mov    %rax,%rdx
    fb40:	48 8d 05 f9 f1 00 00 	lea    0xf1f9(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fb47:	48 89 c6             	mov    %rax,%rsi
    fb4a:	48 89 df             	mov    %rbx,%rdi
    fb4d:	e8 6e 39 ff ff       	call   34c0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    fb52:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fb59:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fb60:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    fb64:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fb6b:	48 8b 72 08          	mov    0x8(%rdx),%rsi
    fb6f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fb73:	49 89 c8             	mov    %rcx,%r8
    fb76:	b9 00 00 00 00       	mov    $0x0,%ecx
    fb7b:	48 89 c7             	mov    %rax,%rdi
    fb7e:	e8 a1 f9 ff ff       	call   f524 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                      &mDebugMessenger) != VK_SUCCESS) {
    fb83:	85 c0                	test   %eax,%eax
    fb85:	0f 95 c0             	setne  %al
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    fb88:	84 c0                	test   %al,%al
    fb8a:	74 3b                	je     fbc7 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x31f>
      throw std::runtime_error("Failed to create debug messenger");
    fb8c:	bf 10 00 00 00       	mov    $0x10,%edi
    fb91:	e8 8a 35 ff ff       	call   3120 <__cxa_allocate_exception@plt>
    fb96:	48 89 c3             	mov    %rax,%rbx
    fb99:	48 8d 05 30 31 00 00 	lea    0x3130(%rip),%rax        # 12cd0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    fba0:	48 89 c6             	mov    %rax,%rsi
    fba3:	48 89 df             	mov    %rbx,%rdi
    fba6:	e8 15 35 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
    fbab:	48 8b 05 06 f4 00 00 	mov    0xf406(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fbb2:	48 89 c2             	mov    %rax,%rdx
    fbb5:	48 8d 05 84 f1 00 00 	lea    0xf184(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fbbc:	48 89 c6             	mov    %rax,%rsi
    fbbf:	48 89 df             	mov    %rbx,%rdi
    fbc2:	e8 f9 38 ff ff       	call   34c0 <__cxa_throw@plt>
    }
  }

  mIsOwner = true;
    fbc7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fbce:	c6 40 18 01          	movb   $0x1,0x18(%rax)
}
    fbd2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fbd6:	48 89 c7             	mov    %rax,%rdi
    fbd9:	e8 2e c1 ff ff       	call   bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fbde:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fbe2:	48 89 c7             	mov    %rax,%rdi
    fbe5:	e8 22 c1 ff ff       	call   bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fbea:	eb 70                	jmp    fc5c <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x3b4>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    fbec:	48 89 c3             	mov    %rax,%rbx
    fbef:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fbf3:	48 89 c7             	mov    %rax,%rdi
    fbf6:	e8 6d c0 ff ff       	call   bc68 <_ZNSaIPKcED1Ev>
    fbfb:	eb 45                	jmp    fc42 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    throw std::runtime_error("Failed to create instance.");
    fbfd:	49 89 c4             	mov    %rax,%r12
    fc00:	48 89 df             	mov    %rbx,%rdi
    fc03:	e8 b8 35 ff ff       	call   31c0 <__cxa_free_exception@plt>
    fc08:	4c 89 e3             	mov    %r12,%rbx
    fc0b:	eb 13                	jmp    fc20 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
      throw std::runtime_error("Failed to create debug messenger");
    fc0d:	49 89 c4             	mov    %rax,%r12
    fc10:	48 89 df             	mov    %rbx,%rdi
    fc13:	e8 a8 35 ff ff       	call   31c0 <__cxa_free_exception@plt>
    fc18:	4c 89 e3             	mov    %r12,%rbx
    fc1b:	eb 03                	jmp    fc20 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
}
    fc1d:	48 89 c3             	mov    %rax,%rbx
    fc20:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fc24:	48 89 c7             	mov    %rax,%rdi
    fc27:	e8 e0 c0 ff ff       	call   bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fc2c:	eb 03                	jmp    fc31 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x389>
    fc2e:	48 89 c3             	mov    %rax,%rbx
    fc31:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fc35:	48 89 c7             	mov    %rax,%rdi
    fc38:	e8 cf c0 ff ff       	call   bd0c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fc3d:	eb 03                	jmp    fc42 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    fc3f:	48 89 c3             	mov    %rax,%rbx
    fc42:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fc49:	48 89 c7             	mov    %rax,%rdi
    fc4c:	e8 8b 3c ff ff       	call   38dc <_ZN4neko7ContextD1Ev>
    fc51:	48 89 d8             	mov    %rbx,%rax
    fc54:	48 89 c7             	mov    %rax,%rdi
    fc57:	e8 84 38 ff ff       	call   34e0 <_Unwind_Resume@plt>
    fc5c:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    fc63:	5b                   	pop    %rbx
    fc64:	41 5c                	pop    %r12
    fc66:	41 5d                	pop    %r13
    fc68:	5d                   	pop    %rbp
    fc69:	c3                   	ret

000000000000fc6a <_ZN4neko8InstanceC1EOS0_>:

Instance::Instance(Instance &&rhs) noexcept
    fc6a:	55                   	push   %rbp
    fc6b:	48 89 e5             	mov    %rsp,%rbp
    fc6e:	53                   	push   %rbx
    fc6f:	48 83 ec 28          	sub    $0x28,%rsp
    fc73:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fc77:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    : mContext{std::move(rhs.mContext)}, mInstance{std::move(rhs.mInstance)},
    fc7b:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    fc7f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc83:	48 89 c7             	mov    %rax,%rdi
    fc86:	e8 9f 04 00 00       	call   1012a <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
    fc8b:	48 89 c6             	mov    %rax,%rsi
    fc8e:	48 89 df             	mov    %rbx,%rdi
    fc91:	e8 ba 01 00 00       	call   fe50 <_ZN4neko7ContextC1EOS0_>
    fc96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc9a:	48 83 c0 08          	add    $0x8,%rax
    fc9e:	48 89 c7             	mov    %rax,%rdi
    fca1:	e8 92 04 00 00       	call   10138 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    fca6:	48 8b 10             	mov    (%rax),%rdx
    fca9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fcad:	48 89 50 08          	mov    %rdx,0x8(%rax)
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    fcb1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcb5:	48 83 c0 10          	add    $0x10,%rax
    fcb9:	48 89 c7             	mov    %rax,%rdi
    fcbc:	e8 85 04 00 00       	call   10146 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    fcc1:	48 8b 10             	mov    (%rax),%rdx
    fcc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fcc8:	48 89 50 10          	mov    %rdx,0x10(%rax)
                                                           rhs.mIsOwner,
                                                           false)} {}
    fccc:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
                                                           rhs.mIsOwner,
    fcd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcd4:	48 8d 50 18          	lea    0x18(%rax),%rdx
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    fcd8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    fcdc:	48 89 c6             	mov    %rax,%rsi
    fcdf:	48 89 d7             	mov    %rdx,%rdi
    fce2:	e8 6d 04 00 00       	call   10154 <_ZSt8exchangeIbbET_RS0_OT0_>
    fce7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fceb:	88 42 18             	mov    %al,0x18(%rdx)
                                                           false)} {}
    fcee:	90                   	nop
    fcef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fcf3:	c9                   	leave
    fcf4:	c3                   	ret
    fcf5:	90                   	nop

000000000000fcf6 <_ZN4neko8InstanceaSEOS0_>:

Instance &Instance::operator=(Instance &&rhs) {
    fcf6:	55                   	push   %rbp
    fcf7:	48 89 e5             	mov    %rsp,%rbp
    fcfa:	48 83 ec 20          	sub    $0x20,%rsp
    fcfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  release();
    fd06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd0a:	48 89 c7             	mov    %rax,%rdi
    fd0d:	e8 6a 00 00 00       	call   fd7c <_ZN4neko8Instance7releaseEv>
  mContext = std::move(rhs.mContext);
    fd12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd16:	48 89 c7             	mov    %rax,%rdi
    fd19:	e8 0c 04 00 00       	call   1012a <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
  mInstance = std::move(rhs.mInstance);
    fd1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd22:	48 83 c0 08          	add    $0x8,%rax
    fd26:	48 89 c7             	mov    %rax,%rdi
    fd29:	e8 0a 04 00 00       	call   10138 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    fd2e:	48 8b 10             	mov    (%rax),%rdx
    fd31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd35:	48 89 50 08          	mov    %rdx,0x8(%rax)
  mDebugMessenger = std::move(rhs.mDebugMessenger);
    fd39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd3d:	48 83 c0 10          	add    $0x10,%rax
    fd41:	48 89 c7             	mov    %rax,%rdi
    fd44:	e8 fd 03 00 00       	call   10146 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    fd49:	48 8b 10             	mov    (%rax),%rdx
    fd4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd50:	48 89 50 10          	mov    %rdx,0x10(%rax)
  mIsOwner = std::exchange(rhs.mIsOwner, false);
    fd54:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    fd58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd5c:	48 8d 50 18          	lea    0x18(%rax),%rdx
    fd60:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    fd64:	48 89 c6             	mov    %rax,%rsi
    fd67:	48 89 d7             	mov    %rdx,%rdi
    fd6a:	e8 e5 03 00 00       	call   10154 <_ZSt8exchangeIbbET_RS0_OT0_>
    fd6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd73:	88 42 18             	mov    %al,0x18(%rdx)
  return *this;
    fd76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
}
    fd7a:	c9                   	leave
    fd7b:	c3                   	ret

000000000000fd7c <_ZN4neko8Instance7releaseEv>:

void Instance::release() noexcept {
    fd7c:	55                   	push   %rbp
    fd7d:	48 89 e5             	mov    %rsp,%rbp
    fd80:	48 83 ec 10          	sub    $0x10,%rsp
    fd84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (mIsOwner) {
    fd88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd8c:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    fd90:	84 c0                	test   %al,%al
    fd92:	74 3e                	je     fdd2 <_ZN4neko8Instance7releaseEv+0x56>
    if constexpr (neko::debugMode) {
      mContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
    fd94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fd9c:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    fda0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    fda4:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    fda8:	b9 00 00 00 00       	mov    $0x0,%ecx
    fdad:	48 89 c7             	mov    %rax,%rdi
    fdb0:	e8 cf f7 ff ff       	call   f584 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
    }
    vkDestroyInstance(mInstance, nullptr);
    fdb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdb9:	48 8b 40 08          	mov    0x8(%rax),%rax
    fdbd:	be 00 00 00 00       	mov    $0x0,%esi
    fdc2:	48 89 c7             	mov    %rax,%rdi
    fdc5:	e8 26 35 ff ff       	call   32f0 <vkDestroyInstance@plt>
    mIsOwner = false;
    fdca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdce:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  }
}
    fdd2:	90                   	nop
    fdd3:	c9                   	leave
    fdd4:	c3                   	ret

000000000000fdd5 <_Z41__static_initialization_and_destruction_0ii>:

    fdd5:	55                   	push   %rbp
    fdd6:	48 89 e5             	mov    %rsp,%rbp
    fdd9:	48 83 ec 10          	sub    $0x10,%rsp
    fddd:	89 7d fc             	mov    %edi,-0x4(%rbp)
    fde0:	89 75 f8             	mov    %esi,-0x8(%rbp)
    fde3:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    fde7:	75 3b                	jne    fe24 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fde9:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    fdf0:	75 32                	jne    fe24 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fdf2:	48 8d 05 03 f7 00 00 	lea    0xf703(%rip),%rax        # 1f4fc <_ZStL8__ioinit>
    fdf9:	48 89 c7             	mov    %rax,%rdi
    fdfc:	e8 4f 36 ff ff       	call   3450 <_ZNSt8ios_base4InitC1Ev@plt>
    fe01:	48 8d 05 88 f4 00 00 	lea    0xf488(%rip),%rax        # 1f290 <__dso_handle>
    fe08:	48 89 c2             	mov    %rax,%rdx
    fe0b:	48 8d 05 ea f6 00 00 	lea    0xf6ea(%rip),%rax        # 1f4fc <_ZStL8__ioinit>
    fe12:	48 89 c6             	mov    %rax,%rsi
    fe15:	48 8b 05 bc f1 00 00 	mov    0xf1bc(%rip),%rax        # 1efd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    fe1c:	48 89 c7             	mov    %rax,%rdi
    fe1f:	e8 4c 34 ff ff       	call   3270 <__cxa_atexit@plt>
    fe24:	90                   	nop
    fe25:	c9                   	leave
    fe26:	c3                   	ret

000000000000fe27 <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    fe27:	55                   	push   %rbp
    fe28:	48 89 e5             	mov    %rsp,%rbp
    fe2b:	be ff ff 00 00       	mov    $0xffff,%esi
    fe30:	bf 01 00 00 00       	mov    $0x1,%edi
    fe35:	e8 9b ff ff ff       	call   fdd5 <_Z41__static_initialization_and_destruction_0ii>
    fe3a:	5d                   	pop    %rbp
    fe3b:	c3                   	ret

000000000000fe3c <_ZN4neko7ContextC1Ev>:
  Context() { createContext(); }
    fe3c:	55                   	push   %rbp
    fe3d:	48 89 e5             	mov    %rsp,%rbp
    fe40:	48 83 ec 10          	sub    $0x10,%rsp
    fe44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe48:	e8 0f f6 ff ff       	call   f45c <_ZN4neko7Context13createContextEv>
    fe4d:	90                   	nop
    fe4e:	c9                   	leave
    fe4f:	c3                   	ret

000000000000fe50 <_ZN4neko7ContextC1EOS0_>:
  Context(Context &&) { moveCreateContext(); }
    fe50:	55                   	push   %rbp
    fe51:	48 89 e5             	mov    %rsp,%rbp
    fe54:	48 83 ec 10          	sub    $0x10,%rsp
    fe58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fe60:	e8 75 f6 ff ff       	call   f4da <_ZN4neko7Context17moveCreateContextEv>
    fe65:	90                   	nop
    fe66:	c9                   	leave
    fe67:	c3                   	ret

000000000000fe68 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    fe68:	55                   	push   %rbp
    fe69:	48 89 e5             	mov    %rsp,%rbp
    fe6c:	53                   	push   %rbx
    fe6d:	48 83 ec 28          	sub    $0x28,%rsp
    fe71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fe75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fe79:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    fe7d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    fe81:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fe85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fe89:	48 89 d6             	mov    %rdx,%rsi
    fe8c:	48 89 c7             	mov    %rax,%rdi
    fe8f:	e8 09 d1 ff ff       	call   cf9d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    fe94:	48 89 c1             	mov    %rax,%rcx
    fe97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fe9b:	48 89 c2             	mov    %rax,%rdx
    fe9e:	48 89 ce             	mov    %rcx,%rsi
    fea1:	48 89 df             	mov    %rbx,%rdi
    fea4:	e8 db 02 00 00       	call   10184 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    fea9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fead:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    feb1:	48 89 d6             	mov    %rdx,%rsi
    feb4:	48 89 c7             	mov    %rax,%rdi
    feb7:	e8 26 03 00 00       	call   101e2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    febc:	eb 1a                	jmp    fed8 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    febe:	48 89 c3             	mov    %rax,%rbx
    fec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fec5:	48 89 c7             	mov    %rax,%rdi
    fec8:	e8 59 c6 ff ff       	call   c526 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    fecd:	48 89 d8             	mov    %rbx,%rax
    fed0:	48 89 c7             	mov    %rax,%rdi
    fed3:	e8 08 36 ff ff       	call   34e0 <_Unwind_Resume@plt>
    fed8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fedc:	c9                   	leave
    fedd:	c3                   	ret

000000000000fede <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    fede:	55                   	push   %rbp
    fedf:	48 89 e5             	mov    %rsp,%rbp
    fee2:	48 83 ec 20          	sub    $0x20,%rsp
    fee6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    feea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    feee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fef2:	48 89 d6             	mov    %rdx,%rsi
    fef5:	48 89 c7             	mov    %rax,%rdi
    fef8:	e8 25 03 00 00       	call   10222 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    fefd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff01:	c9                   	leave
    ff02:	c3                   	ret
    ff03:	90                   	nop

000000000000ff04 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ff04:	55                   	push   %rbp
    ff05:	48 89 e5             	mov    %rsp,%rbp
    ff08:	48 83 ec 20          	sub    $0x20,%rsp
    ff0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ff10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff14:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ff18:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ff1c:	48 89 d6             	mov    %rdx,%rsi
    ff1f:	48 89 c7             	mov    %rax,%rdi
    ff22:	e8 fb 02 00 00       	call   10222 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    ff27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff2b:	c9                   	leave
    ff2c:	c3                   	ret

000000000000ff2d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ff2d:	55                   	push   %rbp
    ff2e:	48 89 e5             	mov    %rsp,%rbp
    ff31:	53                   	push   %rbx
    ff32:	48 83 ec 18          	sub    $0x18,%rsp
    ff36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ff3a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    ff3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff42:	48 89 c7             	mov    %rax,%rdi
    ff45:	e8 f6 02 00 00       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ff4a:	48 8b 18             	mov    (%rax),%rbx
    ff4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ff51:	48 89 c7             	mov    %rax,%rdi
    ff54:	e8 e7 02 00 00       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ff59:	48 8b 00             	mov    (%rax),%rax
    ff5c:	48 39 c3             	cmp    %rax,%rbx
    ff5f:	0f 95 c0             	setne  %al
    ff62:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ff66:	c9                   	leave
    ff67:	c3                   	ret

000000000000ff68 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    ff68:	55                   	push   %rbp
    ff69:	48 89 e5             	mov    %rsp,%rbp
    ff6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    ff70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff74:	48 8b 00             	mov    (%rax),%rax
    ff77:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ff7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff7f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    ff82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ff86:	5d                   	pop    %rbp
    ff87:	c3                   	ret

000000000000ff88 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ff88:	55                   	push   %rbp
    ff89:	48 89 e5             	mov    %rsp,%rbp
    ff8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    ff90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff94:	48 8b 00             	mov    (%rax),%rax
    ff97:	5d                   	pop    %rbp
    ff98:	c3                   	ret
    ff99:	90                   	nop

000000000000ff9a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
    ff9a:	55                   	push   %rbp
    ff9b:	48 89 e5             	mov    %rsp,%rbp
    ff9e:	53                   	push   %rbx
    ff9f:	48 83 ec 18          	sub    $0x18,%rsp
    ffa3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ffa7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    ffab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffaf:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ffb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffb7:	48 8b 40 10          	mov    0x10(%rax),%rax
    ffbb:	48 39 c2             	cmp    %rax,%rdx
    ffbe:	74 3c                	je     fffc <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    ffc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffc4:	48 89 c7             	mov    %rax,%rdi
    ffc7:	e8 82 02 00 00       	call   1024e <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    ffcc:	48 89 c2             	mov    %rax,%rdx
    ffcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffd3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ffd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffdb:	48 89 ce             	mov    %rcx,%rsi
    ffde:	48 89 c7             	mov    %rax,%rdi
    ffe1:	e8 76 02 00 00       	call   1025c <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    ffe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffea:	48 8b 40 08          	mov    0x8(%rax),%rax
    ffee:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fff6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    fffa:	eb 30                	jmp    1002c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    fffc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10000:	48 89 c7             	mov    %rax,%rdi
   10003:	e8 46 02 00 00       	call   1024e <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10008:	48 89 c3             	mov    %rax,%rbx
   1000b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1000f:	48 89 c7             	mov    %rax,%rdi
   10012:	e8 ed fe ff ff       	call   ff04 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10017:	48 89 c1             	mov    %rax,%rcx
   1001a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1001e:	48 89 da             	mov    %rbx,%rdx
   10021:	48 89 ce             	mov    %rcx,%rsi
   10024:	48 89 c7             	mov    %rax,%rdi
   10027:	e8 6a 02 00 00       	call   10296 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   1002c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10030:	48 89 c7             	mov    %rax,%rdi
   10033:	e8 f0 03 00 00       	call   10428 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   10038:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1003c:	c9                   	leave
   1003d:	c3                   	ret

000000000001003e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   1003e:	55                   	push   %rbp
   1003f:	48 89 e5             	mov    %rsp,%rbp
   10042:	53                   	push   %rbx
   10043:	48 83 ec 18          	sub    $0x18,%rsp
   10047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1004b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1004f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10053:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10057:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1005b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1005f:	48 39 c2             	cmp    %rax,%rdx
   10062:	74 3c                	je     100a0 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   10064:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10068:	48 89 c7             	mov    %rax,%rdi
   1006b:	e8 f7 03 00 00       	call   10467 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10070:	48 89 c2             	mov    %rax,%rdx
   10073:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10077:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1007b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1007f:	48 89 ce             	mov    %rcx,%rsi
   10082:	48 89 c7             	mov    %rax,%rdi
   10085:	e8 eb 03 00 00       	call   10475 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   1008a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1008e:	48 8b 40 08          	mov    0x8(%rax),%rax
   10092:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1009a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1009e:	eb 30                	jmp    100d0 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   100a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   100a4:	48 89 c7             	mov    %rax,%rdi
   100a7:	e8 bb 03 00 00       	call   10467 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   100ac:	48 89 c3             	mov    %rax,%rbx
   100af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100b3:	48 89 c7             	mov    %rax,%rdi
   100b6:	e8 49 fe ff ff       	call   ff04 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   100bb:	48 89 c1             	mov    %rax,%rcx
   100be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100c2:	48 89 da             	mov    %rbx,%rdx
   100c5:	48 89 ce             	mov    %rcx,%rsi
   100c8:	48 89 c7             	mov    %rax,%rdi
   100cb:	e8 de 03 00 00       	call   104ae <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   100d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100d4:	48 89 c7             	mov    %rax,%rdi
   100d7:	e8 4c 03 00 00       	call   10428 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   100dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   100e0:	c9                   	leave
   100e1:	c3                   	ret

00000000000100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   100e2:	55                   	push   %rbp
   100e3:	48 89 e5             	mov    %rsp,%rbp
   100e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   100ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100ee:	48 8b 50 08          	mov    0x8(%rax),%rdx
   100f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100f6:	48 8b 00             	mov    (%rax),%rax
   100f9:	48 29 c2             	sub    %rax,%rdx
   100fc:	48 89 d0             	mov    %rdx,%rax
   100ff:	48 c1 f8 03          	sar    $0x3,%rax
   10103:	5d                   	pop    %rbp
   10104:	c3                   	ret
   10105:	90                   	nop

0000000000010106 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10106:	55                   	push   %rbp
   10107:	48 89 e5             	mov    %rsp,%rbp
   1010a:	48 83 ec 10          	sub    $0x10,%rsp
   1010e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10116:	48 8b 10             	mov    (%rax),%rdx
   10119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1011d:	48 89 d6             	mov    %rdx,%rsi
   10120:	48 89 c7             	mov    %rax,%rdi
   10123:	e8 18 05 00 00       	call   10640 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10128:	c9                   	leave
   10129:	c3                   	ret

000000000001012a <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1012a:	55                   	push   %rbp
   1012b:	48 89 e5             	mov    %rsp,%rbp
   1012e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10136:	5d                   	pop    %rbp
   10137:	c3                   	ret

0000000000010138 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   10138:	55                   	push   %rbp
   10139:	48 89 e5             	mov    %rsp,%rbp
   1013c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10144:	5d                   	pop    %rbp
   10145:	c3                   	ret

0000000000010146 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   10146:	55                   	push   %rbp
   10147:	48 89 e5             	mov    %rsp,%rbp
   1014a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1014e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10152:	5d                   	pop    %rbp
   10153:	c3                   	ret

0000000000010154 <_ZSt8exchangeIbbET_RS0_OT0_>:

  /// Assign @p __new_val to @p __obj and return its previous value.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    exchange(_Tp& __obj, _Up&& __new_val)
   10154:	55                   	push   %rbp
   10155:	48 89 e5             	mov    %rsp,%rbp
   10158:	48 83 ec 10          	sub    $0x10,%rsp
   1015c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10160:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
		    is_nothrow_assignable<_Tp&, _Up>>::value)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   10164:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10168:	48 89 c7             	mov    %rax,%rdi
   1016b:	e8 e2 04 00 00       	call   10652 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   10170:	48 89 c2             	mov    %rax,%rdx
   10173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10177:	48 89 d6             	mov    %rdx,%rsi
   1017a:	48 89 c7             	mov    %rax,%rdi
   1017d:	e8 de 04 00 00       	call   10660 <_ZSt10__exchangeIbbET_RS0_OT0_>
   10182:	c9                   	leave
   10183:	c3                   	ret

0000000000010184 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   10184:	55                   	push   %rbp
   10185:	48 89 e5             	mov    %rsp,%rbp
   10188:	53                   	push   %rbx
   10189:	48 83 ec 28          	sub    $0x28,%rsp
   1018d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10191:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10195:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   10199:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1019d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   101a1:	48 89 d6             	mov    %rdx,%rsi
   101a4:	48 89 c7             	mov    %rax,%rdi
   101a7:	e8 52 cd ff ff       	call   cefe <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   101ac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   101b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   101b4:	48 89 d6             	mov    %rdx,%rsi
   101b7:	48 89 c7             	mov    %rax,%rdi
   101ba:	e8 df 04 00 00       	call   1069e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
   101bf:	eb 1a                	jmp    101db <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
   101c1:	48 89 c3             	mov    %rax,%rbx
   101c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   101c8:	48 89 c7             	mov    %rax,%rdi
   101cb:	e8 14 c3 ff ff       	call   c4e4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
   101d0:	48 89 d8             	mov    %rbx,%rax
   101d3:	48 89 c7             	mov    %rax,%rdi
   101d6:	e8 05 33 ff ff       	call   34e0 <_Unwind_Resume@plt>
   101db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   101df:	c9                   	leave
   101e0:	c3                   	ret
   101e1:	90                   	nop

00000000000101e2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   101e2:	55                   	push   %rbp
   101e3:	48 89 e5             	mov    %rsp,%rbp
   101e6:	48 83 ec 10          	sub    $0x10,%rsp
   101ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   101f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f6:	48 89 c7             	mov    %rax,%rdi
   101f9:	e8 9e c4 ff ff       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   101fe:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   10201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10205:	48 8b 00             	mov    (%rax),%rax
   10208:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1020c:	48 89 ce             	mov    %rcx,%rsi
   1020f:	48 89 c7             	mov    %rax,%rdi
   10212:	e8 dd 04 00 00       	call   106f4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   10217:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1021b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1021f:	90                   	nop
   10220:	c9                   	leave
   10221:	c3                   	ret

0000000000010222 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   10222:	55                   	push   %rbp
   10223:	48 89 e5             	mov    %rsp,%rbp
   10226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1022a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1022e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10232:	48 8b 10             	mov    (%rax),%rdx
   10235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10239:	48 89 10             	mov    %rdx,(%rax)
   1023c:	90                   	nop
   1023d:	5d                   	pop    %rbp
   1023e:	c3                   	ret
   1023f:	90                   	nop

0000000000010240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   10240:	55                   	push   %rbp
   10241:	48 89 e5             	mov    %rsp,%rbp
   10244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   10248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1024c:	5d                   	pop    %rbp
   1024d:	c3                   	ret

000000000001024e <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1024e:	55                   	push   %rbp
   1024f:	48 89 e5             	mov    %rsp,%rbp
   10252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1025a:	5d                   	pop    %rbp
   1025b:	c3                   	ret

000000000001025c <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1025c:	55                   	push   %rbp
   1025d:	48 89 e5             	mov    %rsp,%rbp
   10260:	48 83 ec 20          	sub    $0x20,%rsp
   10264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1026c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   10270:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10274:	48 89 c7             	mov    %rax,%rdi
   10277:	e8 d2 ff ff ff       	call   1024e <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   1027c:	48 89 c2             	mov    %rax,%rdx
   1027f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10287:	48 89 ce             	mov    %rcx,%rsi
   1028a:	48 89 c7             	mov    %rax,%rdi
   1028d:	e8 8c 04 00 00       	call   1071e <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
   10292:	90                   	nop
   10293:	c9                   	leave
   10294:	c3                   	ret
   10295:	90                   	nop

0000000000010296 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   10296:	55                   	push   %rbp
   10297:	48 89 e5             	mov    %rsp,%rbp
   1029a:	53                   	push   %rbx
   1029b:	48 83 ec 68          	sub    $0x68,%rsp
   1029f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   102a3:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   102a7:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   102ab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   102af:	48 8d 15 73 2a 00 00 	lea    0x2a73(%rip),%rdx        # 12d29 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   102b6:	be 01 00 00 00       	mov    $0x1,%esi
   102bb:	48 89 c7             	mov    %rax,%rdi
   102be:	e8 9b 04 00 00       	call   1075e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   102c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   102c7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   102cb:	48 8b 00             	mov    (%rax),%rax
   102ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   102d2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   102d6:	48 8b 40 08          	mov    0x8(%rax),%rax
   102da:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   102de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   102e2:	48 89 c7             	mov    %rax,%rdi
   102e5:	e8 f4 fb ff ff       	call   fede <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   102ea:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   102ee:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   102f2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   102f6:	48 89 d6             	mov    %rdx,%rsi
   102f9:	48 89 c7             	mov    %rax,%rdi
   102fc:	e8 25 05 00 00       	call   10826 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   10301:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   10305:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10309:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1030d:	48 89 d6             	mov    %rdx,%rsi
   10310:	48 89 c7             	mov    %rax,%rdi
   10313:	e8 e6 cc ff ff       	call   cffe <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   10318:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   1031c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10320:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   10324:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10328:	48 89 c7             	mov    %rax,%rdi
   1032b:	e8 1e ff ff ff       	call   1024e <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10330:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   10333:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10337:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1033e:	00 
	  _Alloc_traits::construct(this->_M_impl,
   1033f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10343:	48 01 c1             	add    %rax,%rcx
   10346:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1034a:	48 89 ce             	mov    %rcx,%rsi
   1034d:	48 89 c7             	mov    %rax,%rdi
   10350:	e8 07 ff ff ff       	call   1025c <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   10355:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1035c:	00 
					 __new_start, _M_get_Tp_allocator());
   1035d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10361:	48 89 c7             	mov    %rax,%rdi
   10364:	e8 33 c3 ff ff       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10369:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   1036c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10370:	48 89 c7             	mov    %rax,%rdi
   10373:	e8 c8 fe ff ff       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10378:	48 8b 30             	mov    (%rax),%rsi
   1037b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1037f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10383:	48 89 d9             	mov    %rbx,%rcx
   10386:	48 89 c7             	mov    %rax,%rdi
   10389:	e8 da 04 00 00       	call   10868 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1038e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   10392:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   10397:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1039b:	48 89 c7             	mov    %rax,%rdi
   1039e:	e8 f9 c2 ff ff       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   103a3:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   103a6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   103aa:	48 89 c7             	mov    %rax,%rdi
   103ad:	e8 8e fe ff ff       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   103b2:	48 8b 00             	mov    (%rax),%rax
   103b5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   103b9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   103bd:	48 89 d9             	mov    %rbx,%rcx
   103c0:	48 89 c7             	mov    %rax,%rdi
   103c3:	e8 a0 04 00 00       	call   10868 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   103c8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   103cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   103d0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   103d4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   103d8:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   103dc:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   103e0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   103e4:	48 89 ce             	mov    %rcx,%rsi
   103e7:	48 89 c7             	mov    %rax,%rdi
   103ea:	e8 41 cb ff ff       	call   cf30 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   103ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103f3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   103f7:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   103fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103fe:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10402:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   10406:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1040a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10411:	00 
   10412:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10416:	48 01 c2             	add    %rax,%rdx
   10419:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1041d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10421:	90                   	nop
   10422:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10426:	c9                   	leave
   10427:	c3                   	ret

0000000000010428 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   10428:	55                   	push   %rbp
   10429:	48 89 e5             	mov    %rsp,%rbp
   1042c:	48 83 ec 20          	sub    $0x20,%rsp
   10430:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   10434:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10438:	48 89 c7             	mov    %rax,%rdi
   1043b:	e8 c4 fa ff ff       	call   ff04 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10440:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10444:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10448:	be 01 00 00 00       	mov    $0x1,%esi
   1044d:	48 89 c7             	mov    %rax,%rdi
   10450:	e8 45 04 00 00       	call   1089a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   10455:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10459:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1045d:	48 89 c7             	mov    %rax,%rdi
   10460:	e8 23 fb ff ff       	call   ff88 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   10465:	c9                   	leave
   10466:	c3                   	ret

0000000000010467 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10467:	55                   	push   %rbp
   10468:	48 89 e5             	mov    %rsp,%rbp
   1046b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1046f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10473:	5d                   	pop    %rbp
   10474:	c3                   	ret

0000000000010475 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   10475:	55                   	push   %rbp
   10476:	48 89 e5             	mov    %rsp,%rbp
   10479:	48 83 ec 20          	sub    $0x20,%rsp
   1047d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10481:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10485:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   10489:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1048d:	48 89 c7             	mov    %rax,%rdi
   10490:	e8 d2 ff ff ff       	call   10467 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10495:	48 89 c2             	mov    %rax,%rdx
   10498:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1049c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104a0:	48 89 ce             	mov    %rcx,%rsi
   104a3:	48 89 c7             	mov    %rax,%rdi
   104a6:	e8 31 04 00 00       	call   108dc <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
   104ab:	90                   	nop
   104ac:	c9                   	leave
   104ad:	c3                   	ret

00000000000104ae <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   104ae:	55                   	push   %rbp
   104af:	48 89 e5             	mov    %rsp,%rbp
   104b2:	53                   	push   %rbx
   104b3:	48 83 ec 68          	sub    $0x68,%rsp
   104b7:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   104bb:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   104bf:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   104c3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104c7:	48 8d 15 5b 28 00 00 	lea    0x285b(%rip),%rdx        # 12d29 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   104ce:	be 01 00 00 00       	mov    $0x1,%esi
   104d3:	48 89 c7             	mov    %rax,%rdi
   104d6:	e8 83 02 00 00       	call   1075e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   104db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   104df:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104e3:	48 8b 00             	mov    (%rax),%rax
   104e6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   104ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104ee:	48 8b 40 08          	mov    0x8(%rax),%rax
   104f2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   104f6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104fa:	48 89 c7             	mov    %rax,%rdi
   104fd:	e8 dc f9 ff ff       	call   fede <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   10502:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10506:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1050a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1050e:	48 89 d6             	mov    %rdx,%rsi
   10511:	48 89 c7             	mov    %rax,%rdi
   10514:	e8 0d 03 00 00       	call   10826 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   10519:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   1051d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10521:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10525:	48 89 d6             	mov    %rdx,%rsi
   10528:	48 89 c7             	mov    %rax,%rdi
   1052b:	e8 ce ca ff ff       	call   cffe <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   10530:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   10534:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10538:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   1053c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10540:	48 89 c7             	mov    %rax,%rdi
   10543:	e8 1f ff ff ff       	call   10467 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10548:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   1054b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1054f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10556:	00 
	  _Alloc_traits::construct(this->_M_impl,
   10557:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1055b:	48 01 c1             	add    %rax,%rcx
   1055e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10562:	48 89 ce             	mov    %rcx,%rsi
   10565:	48 89 c7             	mov    %rax,%rdi
   10568:	e8 08 ff ff ff       	call   10475 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   1056d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   10574:	00 
					 __new_start, _M_get_Tp_allocator());
   10575:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10579:	48 89 c7             	mov    %rax,%rdi
   1057c:	e8 1b c1 ff ff       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10581:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   10584:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10588:	48 89 c7             	mov    %rax,%rdi
   1058b:	e8 b0 fc ff ff       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10590:	48 8b 30             	mov    (%rax),%rsi
   10593:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10597:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1059b:	48 89 d9             	mov    %rbx,%rcx
   1059e:	48 89 c7             	mov    %rax,%rdi
   105a1:	e8 c2 02 00 00       	call   10868 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   105a6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   105aa:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   105af:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105b3:	48 89 c7             	mov    %rax,%rdi
   105b6:	e8 e1 c0 ff ff       	call   c69c <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   105bb:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   105be:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   105c2:	48 89 c7             	mov    %rax,%rdi
   105c5:	e8 76 fc ff ff       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   105ca:	48 8b 00             	mov    (%rax),%rax
   105cd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   105d1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   105d5:	48 89 d9             	mov    %rbx,%rcx
   105d8:	48 89 c7             	mov    %rax,%rdi
   105db:	e8 88 02 00 00       	call   10868 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   105e0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   105e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   105e8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   105ec:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   105f0:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   105f4:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   105f8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   105fc:	48 89 ce             	mov    %rcx,%rsi
   105ff:	48 89 c7             	mov    %rax,%rdi
   10602:	e8 29 c9 ff ff       	call   cf30 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   10607:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1060b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1060f:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   10612:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10616:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1061a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   1061e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10622:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10629:	00 
   1062a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1062e:	48 01 c2             	add    %rax,%rdx
   10631:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10635:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10639:	90                   	nop
   1063a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1063e:	c9                   	leave
   1063f:	c3                   	ret

0000000000010640 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10640:	55                   	push   %rbp
   10641:	48 89 e5             	mov    %rsp,%rbp
   10644:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10648:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1064c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10650:	5d                   	pop    %rbp
   10651:	c3                   	ret

0000000000010652 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10652:	55                   	push   %rbp
   10653:	48 89 e5             	mov    %rsp,%rbp
   10656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1065a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1065e:	5d                   	pop    %rbp
   1065f:	c3                   	ret

0000000000010660 <_ZSt10__exchangeIbbET_RS0_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   10660:	55                   	push   %rbp
   10661:	48 89 e5             	mov    %rsp,%rbp
   10664:	48 83 ec 20          	sub    $0x20,%rsp
   10668:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1066c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   10670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10674:	48 89 c7             	mov    %rax,%rdi
   10677:	e8 9f 02 00 00       	call   1091b <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
   1067c:	0f b6 00             	movzbl (%rax),%eax
   1067f:	88 45 ff             	mov    %al,-0x1(%rbp)
      __obj = std::forward<_Up>(__new_val);
   10682:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10686:	48 89 c7             	mov    %rax,%rdi
   10689:	e8 c4 ff ff ff       	call   10652 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   1068e:	0f b6 10             	movzbl (%rax),%edx
   10691:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10695:	88 10                	mov    %dl,(%rax)
      return __old_val;
   10697:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    }
   1069b:	c9                   	leave
   1069c:	c3                   	ret
   1069d:	90                   	nop

000000000001069e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   1069e:	55                   	push   %rbp
   1069f:	48 89 e5             	mov    %rsp,%rbp
   106a2:	48 83 ec 10          	sub    $0x10,%rsp
   106a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   106ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   106b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106b6:	48 89 d6             	mov    %rdx,%rsi
   106b9:	48 89 c7             	mov    %rax,%rdi
   106bc:	e8 3d c9 ff ff       	call   cffe <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   106c1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   106c5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   106c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106cc:	48 8b 10             	mov    (%rax),%rdx
   106cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   106d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106db:	48 8b 00             	mov    (%rax),%rax
   106de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   106e2:	48 c1 e2 03          	shl    $0x3,%rdx
   106e6:	48 01 c2             	add    %rax,%rdx
   106e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106ed:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   106f1:	90                   	nop
   106f2:	c9                   	leave
   106f3:	c3                   	ret

00000000000106f4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   106f4:	55                   	push   %rbp
   106f5:	48 89 e5             	mov    %rsp,%rbp
   106f8:	48 83 ec 20          	sub    $0x20,%rsp
   106fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10704:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   10708:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1070c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10710:	48 89 d6             	mov    %rdx,%rsi
   10713:	48 89 c7             	mov    %rax,%rdi
   10716:	e8 0e 02 00 00       	call   10929 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
   1071b:	c9                   	leave
   1071c:	c3                   	ret
   1071d:	90                   	nop

000000000001071e <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1071e:	55                   	push   %rbp
   1071f:	48 89 e5             	mov    %rsp,%rbp
   10722:	53                   	push   %rbx
   10723:	48 83 ec 28          	sub    $0x28,%rsp
   10727:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1072b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1072f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   10733:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10737:	48 89 c6             	mov    %rax,%rsi
   1073a:	bf 08 00 00 00       	mov    $0x8,%edi
   1073f:	e8 45 31 ff ff       	call   3889 <_ZnwmPv>
   10744:	48 89 c3             	mov    %rax,%rbx
   10747:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1074b:	48 89 c7             	mov    %rax,%rdi
   1074e:	e8 fb fa ff ff       	call   1024e <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10753:	48 89 03             	mov    %rax,(%rbx)
   10756:	90                   	nop
   10757:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1075b:	c9                   	leave
   1075c:	c3                   	ret
   1075d:	90                   	nop

000000000001075e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   1075e:	55                   	push   %rbp
   1075f:	48 89 e5             	mov    %rsp,%rbp
   10762:	53                   	push   %rbx
   10763:	48 83 ec 38          	sub    $0x38,%rsp
   10767:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1076b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1076f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   10773:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10777:	48 89 c7             	mov    %rax,%rdi
   1077a:	e8 d3 01 00 00       	call   10952 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1077f:	48 89 c3             	mov    %rax,%rbx
   10782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10786:	48 89 c7             	mov    %rax,%rdi
   10789:	e8 54 f9 ff ff       	call   100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1078e:	48 29 c3             	sub    %rax,%rbx
   10791:	48 89 da             	mov    %rbx,%rdx
   10794:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10798:	48 39 c2             	cmp    %rax,%rdx
   1079b:	0f 92 c0             	setb   %al
   1079e:	84 c0                	test   %al,%al
   107a0:	74 0c                	je     107ae <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   107a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   107a6:	48 89 c7             	mov    %rax,%rdi
   107a9:	e8 92 29 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   107ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107b2:	48 89 c7             	mov    %rax,%rdi
   107b5:	e8 28 f9 ff ff       	call   100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   107ba:	48 89 c3             	mov    %rax,%rbx
   107bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107c1:	48 89 c7             	mov    %rax,%rdi
   107c4:	e8 19 f9 ff ff       	call   100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   107c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   107cd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   107d1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   107d5:	48 89 d6             	mov    %rdx,%rsi
   107d8:	48 89 c7             	mov    %rax,%rdi
   107db:	e8 2e 40 ff ff       	call   480e <_ZSt3maxImERKT_S2_S2_>
   107e0:	48 8b 00             	mov    (%rax),%rax
   107e3:	48 01 d8             	add    %rbx,%rax
   107e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   107ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107ee:	48 89 c7             	mov    %rax,%rdi
   107f1:	e8 ec f8 ff ff       	call   100e2 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   107f6:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   107fa:	72 12                	jb     1080e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   107fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10800:	48 89 c7             	mov    %rax,%rdi
   10803:	e8 4a 01 00 00       	call   10952 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   10808:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1080c:	73 0e                	jae    1081c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1080e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10812:	48 89 c7             	mov    %rax,%rdi
   10815:	e8 38 01 00 00       	call   10952 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1081a:	eb 04                	jmp    10820 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   1081c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   10820:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10824:	c9                   	leave
   10825:	c3                   	ret

0000000000010826 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   10826:	55                   	push   %rbp
   10827:	48 89 e5             	mov    %rsp,%rbp
   1082a:	53                   	push   %rbx
   1082b:	48 83 ec 18          	sub    $0x18,%rsp
   1082f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10833:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   10837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1083b:	48 89 c7             	mov    %rax,%rdi
   1083e:	e8 fd f9 ff ff       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10843:	48 8b 18             	mov    (%rax),%rbx
   10846:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1084a:	48 89 c7             	mov    %rax,%rdi
   1084d:	e8 ee f9 ff ff       	call   10240 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10852:	48 8b 00             	mov    (%rax),%rax
   10855:	48 89 da             	mov    %rbx,%rdx
   10858:	48 29 c2             	sub    %rax,%rdx
   1085b:	48 89 d0             	mov    %rdx,%rax
   1085e:	48 c1 f8 03          	sar    $0x3,%rax
   10862:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10866:	c9                   	leave
   10867:	c3                   	ret

0000000000010868 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   10868:	55                   	push   %rbp
   10869:	48 89 e5             	mov    %rsp,%rbp
   1086c:	48 83 ec 20          	sub    $0x20,%rsp
   10870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10878:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1087c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   10880:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10884:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10888:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1088c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10890:	48 89 c7             	mov    %rax,%rdi
   10893:	e8 dc 00 00 00       	call   10974 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   10898:	c9                   	leave
   10899:	c3                   	ret

000000000001089a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   1089a:	55                   	push   %rbp
   1089b:	48 89 e5             	mov    %rsp,%rbp
   1089e:	48 83 ec 20          	sub    $0x20,%rsp
   108a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   108a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   108aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ae:	48 8b 00             	mov    (%rax),%rax
   108b1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   108b5:	48 c1 e2 03          	shl    $0x3,%rdx
   108b9:	48 f7 da             	neg    %rdx
   108bc:	48 01 d0             	add    %rdx,%rax
   108bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   108c3:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   108c7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   108cb:	48 89 d6             	mov    %rdx,%rsi
   108ce:	48 89 c7             	mov    %rax,%rdi
   108d1:	e8 4c f9 ff ff       	call   10222 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   108d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   108da:	c9                   	leave
   108db:	c3                   	ret

00000000000108dc <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   108dc:	55                   	push   %rbp
   108dd:	48 89 e5             	mov    %rsp,%rbp
   108e0:	53                   	push   %rbx
   108e1:	48 83 ec 28          	sub    $0x28,%rsp
   108e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   108e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   108ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   108f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   108f5:	48 89 c6             	mov    %rax,%rsi
   108f8:	bf 08 00 00 00       	mov    $0x8,%edi
   108fd:	e8 87 2f ff ff       	call   3889 <_ZnwmPv>
   10902:	48 89 c3             	mov    %rax,%rbx
   10905:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10909:	48 89 c7             	mov    %rax,%rdi
   1090c:	e8 56 fb ff ff       	call   10467 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10911:	48 89 03             	mov    %rax,(%rbx)
   10914:	90                   	nop
   10915:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10919:	c9                   	leave
   1091a:	c3                   	ret

000000000001091b <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
   1091b:	55                   	push   %rbp
   1091c:	48 89 e5             	mov    %rsp,%rbp
   1091f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10927:	5d                   	pop    %rbp
   10928:	c3                   	ret

0000000000010929 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   10929:	55                   	push   %rbp
   1092a:	48 89 e5             	mov    %rsp,%rbp
   1092d:	48 83 ec 20          	sub    $0x20,%rsp
   10931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10935:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   10939:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1093d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10945:	48 89 d6             	mov    %rdx,%rsi
   10948:	48 89 c7             	mov    %rax,%rdi
   1094b:	e8 87 00 00 00       	call   109d7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
   10950:	c9                   	leave
   10951:	c3                   	ret

0000000000010952 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   10952:	55                   	push   %rbp
   10953:	48 89 e5             	mov    %rsp,%rbp
   10956:	48 83 ec 10          	sub    $0x10,%rsp
   1095a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1095e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10962:	48 89 c7             	mov    %rax,%rdi
   10965:	e8 ca 00 00 00       	call   10a34 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1096a:	48 89 c7             	mov    %rax,%rdi
   1096d:	e8 6c d2 ff ff       	call   dbde <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   10972:	c9                   	leave
   10973:	c3                   	ret

0000000000010974 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   10974:	55                   	push   %rbp
   10975:	48 89 e5             	mov    %rsp,%rbp
   10978:	41 54                	push   %r12
   1097a:	53                   	push   %rbx
   1097b:	48 83 ec 20          	sub    $0x20,%rsp
   1097f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10983:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10987:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1098b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1098f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10993:	48 89 c7             	mov    %rax,%rdi
   10996:	e8 81 e7 ff ff       	call   f11c <_ZSt12__niter_baseIPPKcET_S3_>
   1099b:	49 89 c4             	mov    %rax,%r12
   1099e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109a2:	48 89 c7             	mov    %rax,%rdi
   109a5:	e8 72 e7 ff ff       	call   f11c <_ZSt12__niter_baseIPPKcET_S3_>
   109aa:	48 89 c3             	mov    %rax,%rbx
   109ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109b1:	48 89 c7             	mov    %rax,%rdi
   109b4:	e8 63 e7 ff ff       	call   f11c <_ZSt12__niter_baseIPPKcET_S3_>
   109b9:	48 89 c7             	mov    %rax,%rdi
   109bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   109c0:	48 89 c1             	mov    %rax,%rcx
   109c3:	4c 89 e2             	mov    %r12,%rdx
   109c6:	48 89 de             	mov    %rbx,%rsi
   109c9:	e8 74 00 00 00       	call   10a42 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   109ce:	48 83 c4 20          	add    $0x20,%rsp
   109d2:	5b                   	pop    %rbx
   109d3:	41 5c                	pop    %r12
   109d5:	5d                   	pop    %rbp
   109d6:	c3                   	ret

00000000000109d7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   109d7:	55                   	push   %rbp
   109d8:	48 89 e5             	mov    %rsp,%rbp
   109db:	48 83 ec 20          	sub    $0x20,%rsp
   109df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   109e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   109e7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   109ec:	74 40                	je     10a2e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   109ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109f2:	48 89 c7             	mov    %rax,%rdi
   109f5:	e8 ab 00 00 00       	call   10aa5 <_ZSt11__addressofIPKcEPT_RS2_>
   109fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   109fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a02:	48 89 c7             	mov    %rax,%rdi
   10a05:	e8 a9 00 00 00       	call   10ab3 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
   10a0a:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   10a0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a13:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10a17:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10a1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a1f:	48 89 ce             	mov    %rcx,%rsi
   10a22:	48 89 c7             	mov    %rax,%rdi
   10a25:	e8 b0 00 00 00       	call   10ada <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
   10a2a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   10a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10a32:	c9                   	leave
   10a33:	c3                   	ret

0000000000010a34 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   10a34:	55                   	push   %rbp
   10a35:	48 89 e5             	mov    %rsp,%rbp
   10a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10a3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a40:	5d                   	pop    %rbp
   10a41:	c3                   	ret

0000000000010a42 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   10a42:	55                   	push   %rbp
   10a43:	48 89 e5             	mov    %rsp,%rbp
   10a46:	48 83 ec 30          	sub    $0x30,%rsp
   10a4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a4e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10a52:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10a56:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   10a5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a5e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10a62:	48 c1 f8 03          	sar    $0x3,%rax
   10a66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   10a6a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10a6f:	7e 1f                	jle    10a90 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   10a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a75:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10a7c:	00 
   10a7d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10a81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a85:	48 89 ce             	mov    %rcx,%rsi
   10a88:	48 89 c7             	mov    %rax,%rdi
   10a8b:	e8 f0 29 ff ff       	call   3480 <memmove@plt>
      return __result + __count;
   10a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a94:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10a9b:	00 
   10a9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10aa0:	48 01 d0             	add    %rdx,%rax
    }
   10aa3:	c9                   	leave
   10aa4:	c3                   	ret

0000000000010aa5 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   10aa5:	55                   	push   %rbp
   10aa6:	48 89 e5             	mov    %rsp,%rbp
   10aa9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   10aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ab1:	5d                   	pop    %rbp
   10ab2:	c3                   	ret

0000000000010ab3 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   10ab3:	55                   	push   %rbp
   10ab4:	48 89 e5             	mov    %rsp,%rbp
   10ab7:	48 83 ec 10          	sub    $0x10,%rsp
   10abb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   10abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac3:	48 89 c6             	mov    %rax,%rsi
   10ac6:	bf 08 00 00 00       	mov    $0x8,%edi
   10acb:	e8 b9 2d ff ff       	call   3889 <_ZnwmPv>
   10ad0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   10ad7:	90                   	nop
   10ad8:	c9                   	leave
   10ad9:	c3                   	ret

0000000000010ada <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   10ada:	55                   	push   %rbp
   10adb:	48 89 e5             	mov    %rsp,%rbp
   10ade:	48 83 ec 20          	sub    $0x20,%rsp
   10ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10aea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   10aee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10af2:	48 89 c7             	mov    %rax,%rdi
   10af5:	e8 24 00 00 00       	call   10b1e <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   10afa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10afe:	48 89 c7             	mov    %rax,%rdi
   10b01:	e8 2d ae ff ff       	call   b933 <_ZSt17__size_to_integerm>
   10b06:	48 89 c1             	mov    %rax,%rcx
   10b09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b11:	48 89 ce             	mov    %rcx,%rsi
   10b14:	48 89 c7             	mov    %rax,%rdi
   10b17:	e8 0d 00 00 00       	call   10b29 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   10b1c:	c9                   	leave
   10b1d:	c3                   	ret

0000000000010b1e <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   10b1e:	55                   	push   %rbp
   10b1f:	48 89 e5             	mov    %rsp,%rbp
   10b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10b26:	90                   	nop
   10b27:	5d                   	pop    %rbp
   10b28:	c3                   	ret

0000000000010b29 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10b29:	55                   	push   %rbp
   10b2a:	48 89 e5             	mov    %rsp,%rbp
   10b2d:	48 83 ec 20          	sub    $0x20,%rsp
   10b31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10b39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10b3d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10b42:	75 06                	jne    10b4a <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b48:	eb 3a                	jmp    10b84 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   10b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b4e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10b55:	00 
   10b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b5a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10b5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b66:	48 89 ce             	mov    %rcx,%rsi
   10b69:	48 89 c7             	mov    %rax,%rdi
   10b6c:	e8 15 00 00 00       	call   10b86 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
   10b71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b75:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10b7c:	00 
   10b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b81:	48 01 d0             	add    %rdx,%rax
    }
   10b84:	c9                   	leave
   10b85:	c3                   	ret

0000000000010b86 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   10b86:	55                   	push   %rbp
   10b87:	48 89 e5             	mov    %rsp,%rbp
   10b8a:	48 83 ec 20          	sub    $0x20,%rsp
   10b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10b96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   10b9a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ba6:	48 89 ce             	mov    %rcx,%rsi
   10ba9:	48 89 c7             	mov    %rax,%rdi
   10bac:	e8 03 00 00 00       	call   10bb4 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   10bb1:	90                   	nop
   10bb2:	c9                   	leave
   10bb3:	c3                   	ret

0000000000010bb4 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10bb4:	55                   	push   %rbp
   10bb5:	48 89 e5             	mov    %rsp,%rbp
   10bb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10bbc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10bc0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   10bc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bc8:	48 8b 00             	mov    (%rax),%rax
   10bcb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   10bcf:	eb 10                	jmp    10be1 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   10bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bd5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10bd9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10bdc:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   10be1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10be5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10be9:	75 e6                	jne    10bd1 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   10beb:	90                   	nop
   10bec:	90                   	nop
   10bed:	5d                   	pop    %rbp
   10bee:	c3                   	ret
   10bef:	90                   	nop

0000000000010bf0 <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
   10bf0:	55                   	push   %rbp
   10bf1:	48 89 e5             	mov    %rsp,%rbp
   10bf4:	48 83 ec 10          	sub    $0x10,%rsp
   10bf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10bfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    : mWidth{settings.graphics.screenWidth},
   10c00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c04:	8b 50 50             	mov    0x50(%rax),%edx
   10c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c0b:	89 50 08             	mov    %edx,0x8(%rax)
      mHeight{settings.graphics.screenHeight} {
   10c0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c12:	8b 50 54             	mov    0x54(%rax),%edx
   10c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c19:	89 50 0c             	mov    %edx,0xc(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
   10c1c:	be 00 00 00 00       	mov    $0x0,%esi
   10c21:	bf 01 20 02 00       	mov    $0x22001,%edi
   10c26:	e8 35 26 ff ff       	call   3260 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
   10c2b:	be 00 00 00 00       	mov    $0x0,%esi
   10c30:	bf 03 00 02 00       	mov    $0x20003,%edi
   10c35:	e8 26 26 ff ff       	call   3260 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
   10c3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c3e:	48 89 c7             	mov    %rax,%rdi
   10c41:	e8 aa 24 ff ff       	call   30f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
   10c46:	48 89 c2             	mov    %rax,%rdx
   10c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c4d:	8b 40 0c             	mov    0xc(%rax),%eax
   10c50:	89 c6                	mov    %eax,%esi
   10c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c56:	8b 40 08             	mov    0x8(%rax),%eax
   10c59:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10c5f:	b9 00 00 00 00       	mov    $0x0,%ecx
   10c64:	89 c7                	mov    %eax,%edi
   10c66:	e8 05 28 ff ff       	call   3470 <glfwCreateWindow@plt>
   10c6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10c6f:	48 89 02             	mov    %rax,(%rdx)
                             nullptr, nullptr);
}
   10c72:	90                   	nop
   10c73:	c9                   	leave
   10c74:	c3                   	ret
   10c75:	90                   	nop

0000000000010c76 <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
   10c76:	55                   	push   %rbp
   10c77:	48 89 e5             	mov    %rsp,%rbp
   10c7a:	48 83 ec 10          	sub    $0x10,%rsp
   10c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c86:	48 8b 00             	mov    (%rax),%rax
   10c89:	48 89 c7             	mov    %rax,%rdi
   10c8c:	e8 ff 23 ff ff       	call   3090 <glfwDestroyWindow@plt>
   10c91:	90                   	nop
   10c92:	c9                   	leave
   10c93:	c3                   	ret

0000000000010c94 <_ZN4neko6Window4openEv>:

void Window::open() {
   10c94:	55                   	push   %rbp
   10c95:	48 89 e5             	mov    %rsp,%rbp
   10c98:	48 83 ec 10          	sub    $0x10,%rsp
   10c9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
   10ca0:	eb 05                	jmp    10ca7 <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
   10ca2:	e8 09 26 ff ff       	call   32b0 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
   10ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cab:	48 8b 00             	mov    (%rax),%rax
   10cae:	48 89 c7             	mov    %rax,%rdi
   10cb1:	e8 6a 28 ff ff       	call   3520 <glfwWindowShouldClose@plt>
   10cb6:	85 c0                	test   %eax,%eax
   10cb8:	0f 94 c0             	sete   %al
   10cbb:	84 c0                	test   %al,%al
   10cbd:	75 e3                	jne    10ca2 <_ZN4neko6Window4openEv+0xe>
  }
}
   10cbf:	90                   	nop
   10cc0:	90                   	nop
   10cc1:	c9                   	leave
   10cc2:	c3                   	ret
   10cc3:	90                   	nop

0000000000010cc4 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
   10cc4:	55                   	push   %rbp
   10cc5:	48 89 e5             	mov    %rsp,%rbp
   10cc8:	41 54                	push   %r12
   10cca:	53                   	push   %rbx
   10ccb:	48 83 ec 20          	sub    $0x20,%rsp
   10ccf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10cd3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10cd7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
   10cdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cdf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10ce3:	48 89 10             	mov    %rdx,(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
   10ce6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cea:	4c 8d 60 08          	lea    0x8(%rax),%r12
   10cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10cf2:	48 89 c7             	mov    %rax,%rdi
   10cf5:	e8 c8 00 00 00       	call   10dc2 <_ZNK4neko6WindowdeEv>
   10cfa:	48 8b 18             	mov    (%rax),%rbx
   10cfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d01:	48 89 c7             	mov    %rax,%rdi
   10d04:	e8 39 ac ff ff       	call   b942 <_ZNK4neko8InstancedeEv>
   10d09:	48 8b 00             	mov    (%rax),%rax
   10d0c:	4c 89 e1             	mov    %r12,%rcx
   10d0f:	ba 00 00 00 00       	mov    $0x0,%edx
   10d14:	48 89 de             	mov    %rbx,%rsi
   10d17:	48 89 c7             	mov    %rax,%rdi
   10d1a:	e8 41 27 ff ff       	call   3460 <glfwCreateWindowSurface@plt>
   10d1f:	85 c0                	test   %eax,%eax
   10d21:	0f 95 c0             	setne  %al
   10d24:	84 c0                	test   %al,%al
   10d26:	74 51                	je     10d79 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
   10d28:	bf 10 00 00 00       	mov    $0x10,%edi
   10d2d:	e8 ee 23 ff ff       	call   3120 <__cxa_allocate_exception@plt>
   10d32:	48 89 c3             	mov    %rax,%rbx
   10d35:	48 8d 05 6c 2c 00 00 	lea    0x2c6c(%rip),%rax        # 139a8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   10d3c:	48 89 c6             	mov    %rax,%rsi
   10d3f:	48 89 df             	mov    %rbx,%rdi
   10d42:	e8 79 23 ff ff       	call   30c0 <_ZNSt13runtime_errorC1EPKc@plt>
   10d47:	48 8b 05 6a e2 00 00 	mov    0xe26a(%rip),%rax        # 1efb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10d4e:	48 89 c2             	mov    %rax,%rdx
   10d51:	48 8d 05 e8 df 00 00 	lea    0xdfe8(%rip),%rax        # 1ed40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10d58:	48 89 c6             	mov    %rax,%rsi
   10d5b:	48 89 df             	mov    %rbx,%rdi
   10d5e:	e8 5d 27 ff ff       	call   34c0 <__cxa_throw@plt>
   10d63:	49 89 c4             	mov    %rax,%r12
   10d66:	48 89 df             	mov    %rbx,%rdi
   10d69:	e8 52 24 ff ff       	call   31c0 <__cxa_free_exception@plt>
   10d6e:	4c 89 e0             	mov    %r12,%rax
   10d71:	48 89 c7             	mov    %rax,%rdi
   10d74:	e8 67 27 ff ff       	call   34e0 <_Unwind_Resume@plt>
  }
}
   10d79:	90                   	nop
   10d7a:	48 83 c4 20          	add    $0x20,%rsp
   10d7e:	5b                   	pop    %rbx
   10d7f:	41 5c                	pop    %r12
   10d81:	5d                   	pop    %rbp
   10d82:	c3                   	ret
   10d83:	90                   	nop

0000000000010d84 <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
   10d84:	55                   	push   %rbp
   10d85:	48 89 e5             	mov    %rsp,%rbp
   10d88:	53                   	push   %rbx
   10d89:	48 83 ec 18          	sub    $0x18,%rsp
   10d8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d95:	48 8b 58 08          	mov    0x8(%rax),%rbx
   10d99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d9d:	48 8b 00             	mov    (%rax),%rax
   10da0:	48 89 c7             	mov    %rax,%rdi
   10da3:	e8 9a ab ff ff       	call   b942 <_ZNK4neko8InstancedeEv>
   10da8:	48 8b 00             	mov    (%rax),%rax
   10dab:	ba 00 00 00 00       	mov    $0x0,%edx
   10db0:	48 89 de             	mov    %rbx,%rsi
   10db3:	48 89 c7             	mov    %rax,%rdi
   10db6:	e8 15 27 ff ff       	call   34d0 <vkDestroySurfaceKHR@plt>
   10dbb:	90                   	nop
   10dbc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10dc0:	c9                   	leave
   10dc1:	c3                   	ret

0000000000010dc2 <_ZNK4neko6WindowdeEv>:

  Window &operator=(Window &&) = default;

  ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
   10dc2:	55                   	push   %rbp
   10dc3:	48 89 e5             	mov    %rsp,%rbp
   10dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dce:	5d                   	pop    %rbp
   10dcf:	c3                   	ret

0000000000010dd0 <_Z41__static_initialization_and_destruction_0ii>:

  // !{mThreadPool} must be destroyed last
  std::unique_ptr<ThreadPool> mThreadPool;
};

} /* namespace neko */
   10dd0:	55                   	push   %rbp
   10dd1:	48 89 e5             	mov    %rsp,%rbp
   10dd4:	48 83 ec 10          	sub    $0x10,%rsp
   10dd8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   10ddb:	89 75 f8             	mov    %esi,-0x8(%rbp)
   10dde:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   10de2:	75 3b                	jne    10e1f <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10de4:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   10deb:	75 32                	jne    10e1f <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10ded:	48 8d 05 09 e7 00 00 	lea    0xe709(%rip),%rax        # 1f4fd <_ZStL8__ioinit>
   10df4:	48 89 c7             	mov    %rax,%rdi
   10df7:	e8 54 26 ff ff       	call   3450 <_ZNSt8ios_base4InitC1Ev@plt>
   10dfc:	48 8d 05 8d e4 00 00 	lea    0xe48d(%rip),%rax        # 1f290 <__dso_handle>
   10e03:	48 89 c2             	mov    %rax,%rdx
   10e06:	48 8d 05 f0 e6 00 00 	lea    0xe6f0(%rip),%rax        # 1f4fd <_ZStL8__ioinit>
   10e0d:	48 89 c6             	mov    %rax,%rsi
   10e10:	48 8b 05 c1 e1 00 00 	mov    0xe1c1(%rip),%rax        # 1efd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   10e17:	48 89 c7             	mov    %rax,%rdi
   10e1a:	e8 51 24 ff ff       	call   3270 <__cxa_atexit@plt>
   10e1f:	90                   	nop
   10e20:	c9                   	leave
   10e21:	c3                   	ret

0000000000010e22 <_GLOBAL__sub_I_engine.cpp>:
   10e22:	55                   	push   %rbp
   10e23:	48 89 e5             	mov    %rsp,%rbp
   10e26:	be ff ff 00 00       	mov    $0xffff,%esi
   10e2b:	bf 01 00 00 00       	mov    $0x1,%edi
   10e30:	e8 9b ff ff ff       	call   10dd0 <_Z41__static_initialization_and_destruction_0ii>
   10e35:	5d                   	pop    %rbp
   10e36:	c3                   	ret

Disassembly of section .fini:

0000000000010e38 <_fini>:
   10e38:	48 83 ec 08          	sub    $0x8,%rsp
   10e3c:	48 83 c4 08          	add    $0x8,%rsp
   10e40:	c3                   	ret
