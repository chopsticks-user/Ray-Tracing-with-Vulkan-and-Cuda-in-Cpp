
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad 4f 01 00 	mov    0x14fad(%rip),%rax        # 17fb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca 4f 01 00    	push   0x14fca(%rip)        # 17ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc 4f 01 00    	jmp    *0x14fcc(%rip)        # 17ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca 4f 01 00    	jmp    *0x14fca(%rip)        # 18000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 4f 01 00    	jmp    *0x14fc2(%rip)        # 18008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba 4f 01 00    	jmp    *0x14fba(%rip)        # 18010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <vkDeviceWaitIdle@plt>:
    3060:	ff 25 b2 4f 01 00    	jmp    *0x14fb2(%rip)        # 18018 <vkDeviceWaitIdle@Base>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <vkDestroySwapchainKHR@plt>:
    3070:	ff 25 aa 4f 01 00    	jmp    *0x14faa(%rip)        # 18020 <vkDestroySwapchainKHR@Base>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <glfwDestroyWindow@plt>:
    3080:	ff 25 a2 4f 01 00    	jmp    *0x14fa2(%rip)        # 18028 <glfwDestroyWindow@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <_ZSt17__throw_bad_allocv@plt>:
    3090:	ff 25 9a 4f 01 00    	jmp    *0x14f9a(%rip)        # 18030 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30a0:	ff 25 92 4f 01 00    	jmp    *0x14f92(%rip)        # 18038 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <vkGetPhysicalDeviceProperties@plt>:
    30b0:	ff 25 8a 4f 01 00    	jmp    *0x14f8a(%rip)        # 18040 <vkGetPhysicalDeviceProperties@Base>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <__cxa_begin_catch@plt>:
    30c0:	ff 25 82 4f 01 00    	jmp    *0x14f82(%rip)        # 18048 <__cxa_begin_catch@CXXABI_1.3>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <strlen@plt>:
    30d0:	ff 25 7a 4f 01 00    	jmp    *0x14f7a(%rip)        # 18050 <strlen@GLIBC_2.2.5>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <memcmp@plt>:
    30e0:	ff 25 72 4f 01 00    	jmp    *0x14f72(%rip)        # 18058 <memcmp@GLIBC_2.2.5>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <__cxa_allocate_exception@plt>:
    30f0:	ff 25 6a 4f 01 00    	jmp    *0x14f6a(%rip)        # 18060 <__cxa_allocate_exception@CXXABI_1.3>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZSt20__throw_length_errorPKc@plt>:
    3100:	ff 25 62 4f 01 00    	jmp    *0x14f62(%rip)        # 18068 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <vkEnumeratePhysicalDevices@plt>:
    3110:	ff 25 5a 4f 01 00    	jmp    *0x14f5a(%rip)        # 18070 <vkEnumeratePhysicalDevices@Base>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3120:	ff 25 52 4f 01 00    	jmp    *0x14f52(%rip)        # 18078 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3130:	ff 25 4a 4f 01 00    	jmp    *0x14f4a(%rip)        # 18080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3140:	ff 25 42 4f 01 00    	jmp    *0x14f42(%rip)        # 18088 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3150:	ff 25 3a 4f 01 00    	jmp    *0x14f3a(%rip)        # 18090 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZSt19__throw_logic_errorPKc@plt>:
    3160:	ff 25 32 4f 01 00    	jmp    *0x14f32(%rip)        # 18098 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <__cxa_free_exception@plt>:
    3170:	ff 25 2a 4f 01 00    	jmp    *0x14f2a(%rip)        # 180a0 <__cxa_free_exception@CXXABI_1.3>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3180:	ff 25 22 4f 01 00    	jmp    *0x14f22(%rip)        # 180a8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <glfwGetRequiredInstanceExtensions@plt>:
    3190:	ff 25 1a 4f 01 00    	jmp    *0x14f1a(%rip)        # 180b0 <glfwGetRequiredInstanceExtensions@Base>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    31a0:	ff 25 12 4f 01 00    	jmp    *0x14f12(%rip)        # 180b8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    31b0:	ff 25 0a 4f 01 00    	jmp    *0x14f0a(%rip)        # 180c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <vkDestroyDevice@plt>:
    31c0:	ff 25 02 4f 01 00    	jmp    *0x14f02(%rip)        # 180c8 <vkDestroyDevice@Base>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <vkEnumerateInstanceExtensionProperties@plt>:
    31d0:	ff 25 fa 4e 01 00    	jmp    *0x14efa(%rip)        # 180d0 <vkEnumerateInstanceExtensionProperties@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    31e0:	ff 25 f2 4e 01 00    	jmp    *0x14ef2(%rip)        # 180d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <glfwWindowHint@plt>:
    31f0:	ff 25 ea 4e 01 00    	jmp    *0x14eea(%rip)        # 180e0 <glfwWindowHint@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    3200:	ff 25 e2 4e 01 00    	jmp    *0x14ee2(%rip)        # 180e8 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <__cxa_atexit@plt>:
    3210:	ff 25 da 4e 01 00    	jmp    *0x14eda(%rip)        # 180f0 <__cxa_atexit@GLIBC_2.2.5>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <vkGetPhysicalDeviceProperties2@plt>:
    3220:	ff 25 d2 4e 01 00    	jmp    *0x14ed2(%rip)        # 180f8 <vkGetPhysicalDeviceProperties2@Base>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkGetInstanceProcAddr@plt>:
    3230:	ff 25 ca 4e 01 00    	jmp    *0x14eca(%rip)        # 18100 <vkGetInstanceProcAddr@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <glfwPollEvents@plt>:
    3240:	ff 25 c2 4e 01 00    	jmp    *0x14ec2(%rip)        # 18108 <glfwPollEvents@Base>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3250:	ff 25 ba 4e 01 00    	jmp    *0x14eba(%rip)        # 18110 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <_Znwm@plt>:
    3260:	ff 25 b2 4e 01 00    	jmp    *0x14eb2(%rip)        # 18118 <_Znwm@GLIBCXX_3.4>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <_ZdlPvm@plt>:
    3270:	ff 25 aa 4e 01 00    	jmp    *0x14eaa(%rip)        # 18120 <_ZdlPvm@CXXABI_1.3.9>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <vkDestroyInstance@plt>:
    3280:	ff 25 a2 4e 01 00    	jmp    *0x14ea2(%rip)        # 18128 <vkDestroyInstance@Base>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <glfwTerminate@plt>:
    3290:	ff 25 9a 4e 01 00    	jmp    *0x14e9a(%rip)        # 18130 <glfwTerminate@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    32a0:	ff 25 92 4e 01 00    	jmp    *0x14e92(%rip)        # 18138 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZNSolsEPFRSoS_E@plt>:
    32b0:	ff 25 8a 4e 01 00    	jmp    *0x14e8a(%rip)        # 18140 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    32c0:	ff 25 82 4e 01 00    	jmp    *0x14e82(%rip)        # 18148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    32d0:	ff 25 7a 4e 01 00    	jmp    *0x14e7a(%rip)        # 18150 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZNSaIcED1Ev@plt>:
    32e0:	ff 25 72 4e 01 00    	jmp    *0x14e72(%rip)        # 18158 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    32f0:	ff 25 6a 4e 01 00    	jmp    *0x14e6a(%rip)        # 18160 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3300:	ff 25 62 4e 01 00    	jmp    *0x14e62(%rip)        # 18168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <vkEnumerateInstanceLayerProperties@plt>:
    3310:	ff 25 5a 4e 01 00    	jmp    *0x14e5a(%rip)        # 18170 <vkEnumerateInstanceLayerProperties@Base>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <glfwInit@plt>:
    3320:	ff 25 52 4e 01 00    	jmp    *0x14e52(%rip)        # 18178 <glfwInit@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3330:	ff 25 4a 4e 01 00    	jmp    *0x14e4a(%rip)        # 18180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkCreateSwapchainKHR@plt>:
    3340:	ff 25 42 4e 01 00    	jmp    *0x14e42(%rip)        # 18188 <vkCreateSwapchainKHR@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <vkCreateInstance@plt>:
    3350:	ff 25 3a 4e 01 00    	jmp    *0x14e3a(%rip)        # 18190 <vkCreateInstance@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    3360:	ff 25 32 4e 01 00    	jmp    *0x14e32(%rip)        # 18198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    3370:	ff 25 2a 4e 01 00    	jmp    *0x14e2a(%rip)        # 181a0 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    3380:	ff 25 22 4e 01 00    	jmp    *0x14e22(%rip)        # 181a8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkGetDeviceQueue@plt>:
    3390:	ff 25 1a 4e 01 00    	jmp    *0x14e1a(%rip)        # 181b0 <vkGetDeviceQueue@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    33a0:	ff 25 12 4e 01 00    	jmp    *0x14e12(%rip)        # 181b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <vkEnumerateDeviceExtensionProperties@plt>:
    33b0:	ff 25 0a 4e 01 00    	jmp    *0x14e0a(%rip)        # 181c0 <vkEnumerateDeviceExtensionProperties@Base>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    33c0:	ff 25 02 4e 01 00    	jmp    *0x14e02(%rip)        # 181c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <__cxa_rethrow@plt>:
    33d0:	ff 25 fa 4d 01 00    	jmp    *0x14dfa(%rip)        # 181d0 <__cxa_rethrow@CXXABI_1.3>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <vkCreateDevice@plt>:
    33e0:	ff 25 f2 4d 01 00    	jmp    *0x14df2(%rip)        # 181d8 <vkCreateDevice@Base>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <_ZNSt8ios_base4InitC1Ev@plt>:
    33f0:	ff 25 ea 4d 01 00    	jmp    *0x14dea(%rip)        # 181e0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <glfwCreateWindowSurface@plt>:
    3400:	ff 25 e2 4d 01 00    	jmp    *0x14de2(%rip)        # 181e8 <glfwCreateWindowSurface@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <glfwCreateWindow@plt>:
    3410:	ff 25 da 4d 01 00    	jmp    *0x14dda(%rip)        # 181f0 <glfwCreateWindow@Base>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <memmove@plt>:
    3420:	ff 25 d2 4d 01 00    	jmp    *0x14dd2(%rip)        # 181f8 <memmove@GLIBC_2.2.5>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <__cxa_end_catch@plt>:
    3430:	ff 25 ca 4d 01 00    	jmp    *0x14dca(%rip)        # 18200 <__cxa_end_catch@CXXABI_1.3>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <__cxa_throw@plt>:
    3440:	ff 25 c2 4d 01 00    	jmp    *0x14dc2(%rip)        # 18208 <__cxa_throw@CXXABI_1.3>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <vkDestroySurfaceKHR@plt>:
    3450:	ff 25 ba 4d 01 00    	jmp    *0x14dba(%rip)        # 18210 <vkDestroySurfaceKHR@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <_Unwind_Resume@plt>:
    3460:	ff 25 b2 4d 01 00    	jmp    *0x14db2(%rip)        # 18218 <_Unwind_Resume@GCC_3.0>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <_ZNSaIcEC1Ev@plt>:
    3470:	ff 25 aa 4d 01 00    	jmp    *0x14daa(%rip)        # 18220 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3480:	ff 25 a2 4d 01 00    	jmp    *0x14da2(%rip)        # 18228 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <_ZNSt9exceptionD2Ev@plt>:
    3490:	ff 25 9a 4d 01 00    	jmp    *0x14d9a(%rip)        # 18230 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <glfwWindowShouldClose@plt>:
    34a0:	ff 25 92 4d 01 00    	jmp    *0x14d92(%rip)        # 18238 <glfwWindowShouldClose@Base>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <_ZNSolsEd@plt>:
    34b0:	ff 25 8a 4d 01 00    	jmp    *0x14d8a(%rip)        # 18240 <_ZNSolsEd@GLIBCXX_3.4>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    34c0:	ff 25 82 4d 01 00    	jmp    *0x14d82(%rip)        # 18248 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

00000000000034d0 <__cxa_finalize@plt>:
    34d0:	ff 25 ba 4a 01 00    	jmp    *0x14aba(%rip)        # 17f90 <__cxa_finalize@GLIBC_2.2.5>
    34d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000034e0 <_start>:
    34e0:	31 ed                	xor    %ebp,%ebp
    34e2:	49 89 d1             	mov    %rdx,%r9
    34e5:	5e                   	pop    %rsi
    34e6:	48 89 e2             	mov    %rsp,%rdx
    34e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    34ed:	50                   	push   %rax
    34ee:	54                   	push   %rsp
    34ef:	45 31 c0             	xor    %r8d,%r8d
    34f2:	31 c9                	xor    %ecx,%ecx
    34f4:	48 8d 3d 33 01 00 00 	lea    0x133(%rip),%rdi        # 362e <main>
    34fb:	ff 15 9f 4a 01 00    	call   *0x14a9f(%rip)        # 17fa0 <__libc_start_main@GLIBC_2.34>
    3501:	f4                   	hlt
    3502:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3509:	00 00 00 
    350c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003510 <deregister_tm_clones>:
    3510:	48 8d 3d 59 4d 01 00 	lea    0x14d59(%rip),%rdi        # 18270 <__TMC_END__>
    3517:	48 8d 05 52 4d 01 00 	lea    0x14d52(%rip),%rax        # 18270 <__TMC_END__>
    351e:	48 39 f8             	cmp    %rdi,%rax
    3521:	74 15                	je     3538 <deregister_tm_clones+0x28>
    3523:	48 8b 05 86 4a 01 00 	mov    0x14a86(%rip),%rax        # 17fb0 <_ITM_deregisterTMCloneTable@Base>
    352a:	48 85 c0             	test   %rax,%rax
    352d:	74 09                	je     3538 <deregister_tm_clones+0x28>
    352f:	ff e0                	jmp    *%rax
    3531:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3538:	c3                   	ret
    3539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003540 <register_tm_clones>:
    3540:	48 8d 3d 29 4d 01 00 	lea    0x14d29(%rip),%rdi        # 18270 <__TMC_END__>
    3547:	48 8d 35 22 4d 01 00 	lea    0x14d22(%rip),%rsi        # 18270 <__TMC_END__>
    354e:	48 29 fe             	sub    %rdi,%rsi
    3551:	48 89 f0             	mov    %rsi,%rax
    3554:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3558:	48 c1 f8 03          	sar    $0x3,%rax
    355c:	48 01 c6             	add    %rax,%rsi
    355f:	48 d1 fe             	sar    %rsi
    3562:	74 14                	je     3578 <register_tm_clones+0x38>
    3564:	48 8b 05 55 4a 01 00 	mov    0x14a55(%rip),%rax        # 17fc0 <_ITM_registerTMCloneTable@Base>
    356b:	48 85 c0             	test   %rax,%rax
    356e:	74 08                	je     3578 <register_tm_clones+0x38>
    3570:	ff e0                	jmp    *%rax
    3572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3578:	c3                   	ret
    3579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003580 <__do_global_dtors_aux>:
    3580:	f3 0f 1e fa          	endbr64
    3584:	80 3d 25 4f 01 00 00 	cmpb   $0x0,0x14f25(%rip)        # 184b0 <completed.0>
    358b:	75 2b                	jne    35b8 <__do_global_dtors_aux+0x38>
    358d:	55                   	push   %rbp
    358e:	48 83 3d fa 49 01 00 	cmpq   $0x0,0x149fa(%rip)        # 17f90 <__cxa_finalize@GLIBC_2.2.5>
    3595:	00 
    3596:	48 89 e5             	mov    %rsp,%rbp
    3599:	74 0c                	je     35a7 <__do_global_dtors_aux+0x27>
    359b:	48 8b 3d b6 4c 01 00 	mov    0x14cb6(%rip),%rdi        # 18258 <__dso_handle>
    35a2:	e8 29 ff ff ff       	call   34d0 <__cxa_finalize@plt>
    35a7:	e8 64 ff ff ff       	call   3510 <deregister_tm_clones>
    35ac:	c6 05 fd 4e 01 00 01 	movb   $0x1,0x14efd(%rip)        # 184b0 <completed.0>
    35b3:	5d                   	pop    %rbp
    35b4:	c3                   	ret
    35b5:	0f 1f 00             	nopl   (%rax)
    35b8:	c3                   	ret
    35b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035c0 <frame_dummy>:
    35c0:	f3 0f 1e fa          	endbr64
    35c4:	e9 77 ff ff ff       	jmp    3540 <register_tm_clones>

00000000000035c9 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    35c9:	55                   	push   %rbp
    35ca:	48 89 e5             	mov    %rsp,%rbp
    35cd:	53                   	push   %rbx
    35ce:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  VulkanApp app;
    35d5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    35dc:	48 89 c7             	mov    %rax,%rdi
    35df:	e8 32 63 00 00       	call   9916 <_ZN9VulkanAppC1Ev>
  app.run();
    35e4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    35eb:	48 89 c7             	mov    %rax,%rdi
    35ee:	e8 7b 65 00 00       	call   9b6e <_ZN9VulkanApp3runEv>
  return EXIT_SUCCESS;
    35f3:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    35f8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    35ff:	48 89 c7             	mov    %rax,%rdi
    3602:	e8 a9 64 00 00       	call   9ab0 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    3607:	89 d8                	mov    %ebx,%eax
    3609:	eb 1d                	jmp    3628 <_Z14protected_mainv+0x5f>
}
    360b:	48 89 c3             	mov    %rax,%rbx
    360e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    3615:	48 89 c7             	mov    %rax,%rdi
    3618:	e8 93 64 00 00       	call   9ab0 <_ZN9VulkanAppD1Ev>
    361d:	48 89 d8             	mov    %rbx,%rax
    3620:	48 89 c7             	mov    %rax,%rdi
    3623:	e8 38 fe ff ff       	call   3460 <_Unwind_Resume@plt>
    3628:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    362c:	c9                   	leave
    362d:	c3                   	ret

000000000000362e <main>:

int main() {
    362e:	55                   	push   %rbp
    362f:	48 89 e5             	mov    %rsp,%rbp
    3632:	53                   	push   %rbx
    3633:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    3637:	e8 8d ff ff ff       	call   35c9 <_Z14protected_mainv>
    363c:	e9 aa 00 00 00       	jmp    36eb <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    3641:	b8 01 00 00 00       	mov    $0x1,%eax
    3646:	e9 a0 00 00 00       	jmp    36eb <main+0xbd>
  } catch (const std::exception &e) {
    364b:	48 83 fa 01          	cmp    $0x1,%rdx
    364f:	75 49                	jne    369a <main+0x6c>
    3651:	48 89 c7             	mov    %rax,%rdi
    3654:	e8 67 fa ff ff       	call   30c0 <__cxa_begin_catch@plt>
    3659:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    365d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3661:	48 8b 00             	mov    (%rax),%rax
    3664:	48 83 c0 10          	add    $0x10,%rax
    3668:	48 8b 10             	mov    (%rax),%rdx
    366b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    366f:	48 89 c7             	mov    %rax,%rdi
    3672:	ff d2                	call   *%rdx
    3674:	48 89 c6             	mov    %rax,%rsi
    3677:	48 8d 05 22 4d 01 00 	lea    0x14d22(%rip),%rax        # 183a0 <_ZSt4cerr@GLIBCXX_3.4>
    367e:	48 89 c7             	mov    %rax,%rdi
    3681:	e8 ca fb ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3686:	be 0a 00 00 00       	mov    $0xa,%esi
    368b:	48 89 c7             	mov    %rax,%rdi
    368e:	e8 9d fc ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    3693:	e8 98 fd ff ff       	call   3430 <__cxa_end_catch@plt>
    3698:	eb a7                	jmp    3641 <main+0x13>
    369a:	48 89 c7             	mov    %rax,%rdi
    369d:	e8 1e fa ff ff       	call   30c0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    36a2:	48 8d 05 3f 9f 00 00 	lea    0x9f3f(%rip),%rax        # d5e8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    36a9:	48 89 c6             	mov    %rax,%rsi
    36ac:	48 8d 05 ed 4c 01 00 	lea    0x14ced(%rip),%rax        # 183a0 <_ZSt4cerr@GLIBCXX_3.4>
    36b3:	48 89 c7             	mov    %rax,%rdi
    36b6:	e8 95 fb ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    36bb:	e8 70 fd ff ff       	call   3430 <__cxa_end_catch@plt>
    36c0:	e9 7c ff ff ff       	jmp    3641 <main+0x13>
  } catch (...) {
    36c5:	48 89 c3             	mov    %rax,%rbx
    36c8:	e8 63 fd ff ff       	call   3430 <__cxa_end_catch@plt>
    36cd:	48 89 d8             	mov    %rbx,%rax
    36d0:	48 89 c7             	mov    %rax,%rdi
    36d3:	e8 88 fd ff ff       	call   3460 <_Unwind_Resume@plt>
  }
    36d8:	48 89 c3             	mov    %rax,%rbx
    36db:	e8 50 fd ff ff       	call   3430 <__cxa_end_catch@plt>
    36e0:	48 89 d8             	mov    %rbx,%rax
    36e3:	48 89 c7             	mov    %rax,%rdi
    36e6:	e8 75 fd ff ff       	call   3460 <_Unwind_Resume@plt>
    36eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    36ef:	c9                   	leave
    36f0:	c3                   	ret

00000000000036f1 <_Z41__static_initialization_and_destruction_0ii>:
    36f1:	55                   	push   %rbp
    36f2:	48 89 e5             	mov    %rsp,%rbp
    36f5:	48 83 ec 10          	sub    $0x10,%rsp
    36f9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    36fc:	89 75 f8             	mov    %esi,-0x8(%rbp)
    36ff:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3703:	75 3b                	jne    3740 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    3705:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    370c:	75 32                	jne    3740 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    370e:	48 8d 05 9c 4d 01 00 	lea    0x14d9c(%rip),%rax        # 184b1 <_ZStL8__ioinit>
    3715:	48 89 c7             	mov    %rax,%rdi
    3718:	e8 d3 fc ff ff       	call   33f0 <_ZNSt8ios_base4InitC1Ev@plt>
    371d:	48 8d 05 34 4b 01 00 	lea    0x14b34(%rip),%rax        # 18258 <__dso_handle>
    3724:	48 89 c2             	mov    %rax,%rdx
    3727:	48 8d 05 83 4d 01 00 	lea    0x14d83(%rip),%rax        # 184b1 <_ZStL8__ioinit>
    372e:	48 89 c6             	mov    %rax,%rsi
    3731:	48 8b 05 90 48 01 00 	mov    0x14890(%rip),%rax        # 17fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    3738:	48 89 c7             	mov    %rax,%rdi
    373b:	e8 d0 fa ff ff       	call   3210 <__cxa_atexit@plt>
    3740:	90                   	nop
    3741:	c9                   	leave
    3742:	c3                   	ret

0000000000003743 <_GLOBAL__sub_I__Z14protected_mainv>:
    3743:	55                   	push   %rbp
    3744:	48 89 e5             	mov    %rsp,%rbp
    3747:	be ff ff 00 00       	mov    $0xffff,%esi
    374c:	bf 01 00 00 00       	mov    $0x1,%edi
    3751:	e8 9b ff ff ff       	call   36f1 <_Z41__static_initialization_and_destruction_0ii>
    3756:	5d                   	pop    %rbp
    3757:	c3                   	ret

0000000000003758 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    3758:	55                   	push   %rbp
    3759:	48 89 e5             	mov    %rsp,%rbp
    375c:	48 83 ec 20          	sub    $0x20,%rsp
    3760:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3763:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3766:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    376a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    376e:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    3772:	be 00 00 00 00       	mov    $0x0,%esi
    3777:	bf 01 20 02 00       	mov    $0x22001,%edi
    377c:	e8 6f fa ff ff       	call   31f0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    3781:	be 00 00 00 00       	mov    $0x0,%esi
    3786:	bf 03 00 02 00       	mov    $0x20003,%edi
    378b:	e8 60 fa ff ff       	call   31f0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    3790:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    3794:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    3798:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    379c:	8b 75 f8             	mov    -0x8(%rbp),%esi
    379f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    37a2:	49 89 f8             	mov    %rdi,%r8
    37a5:	89 c7                	mov    %eax,%edi
    37a7:	e8 64 fc ff ff       	call   3410 <glfwCreateWindow@plt>
}
    37ac:	c9                   	leave
    37ad:	c3                   	ret

00000000000037ae <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    37ae:	55                   	push   %rbp
    37af:	48 89 e5             	mov    %rsp,%rbp
    37b2:	41 54                	push   %r12
    37b4:	53                   	push   %rbx
    37b5:	48 83 ec 20          	sub    $0x20,%rsp
    37b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    37bd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    37c1:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    37c5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    37c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37cd:	48 89 ce             	mov    %rcx,%rsi
    37d0:	48 89 c7             	mov    %rax,%rdi
    37d3:	e8 78 fb ff ff       	call   3350 <vkCreateInstance@plt>
    37d8:	85 c0                	test   %eax,%eax
    37da:	0f 95 c0             	setne  %al
    37dd:	84 c0                	test   %al,%al
    37df:	74 3b                	je     381c <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    37e1:	bf 10 00 00 00       	mov    $0x10,%edi
    37e6:	e8 05 f9 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    37eb:	48 89 c3             	mov    %rax,%rbx
    37ee:	48 8d 05 e3 a3 00 00 	lea    0xa3e3(%rip),%rax        # dbd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    37f5:	48 89 c6             	mov    %rax,%rsi
    37f8:	48 89 df             	mov    %rbx,%rdi
    37fb:	e8 a0 f8 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3800:	48 8b 05 a1 47 01 00 	mov    0x147a1(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3807:	48 89 c2             	mov    %rax,%rdx
    380a:	48 8d 05 2f 45 01 00 	lea    0x1452f(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3811:	48 89 c6             	mov    %rax,%rsi
    3814:	48 89 df             	mov    %rbx,%rdi
    3817:	e8 24 fc ff ff       	call   3440 <__cxa_throw@plt>
  }
  return instance;
    381c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3820:	eb 16                	jmp    3838 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    3822:	49 89 c4             	mov    %rax,%r12
    3825:	48 89 df             	mov    %rbx,%rdi
    3828:	e8 43 f9 ff ff       	call   3170 <__cxa_free_exception@plt>
    382d:	4c 89 e0             	mov    %r12,%rax
    3830:	48 89 c7             	mov    %rax,%rdi
    3833:	e8 28 fc ff ff       	call   3460 <_Unwind_Resume@plt>
}
    3838:	48 83 c4 20          	add    $0x20,%rsp
    383c:	5b                   	pop    %rbx
    383d:	41 5c                	pop    %r12
    383f:	5d                   	pop    %rbp
    3840:	c3                   	ret

0000000000003841 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    3841:	55                   	push   %rbp
    3842:	48 89 e5             	mov    %rsp,%rbp
    3845:	41 54                	push   %r12
    3847:	53                   	push   %rbx
    3848:	48 83 ec 30          	sub    $0x30,%rsp
    384c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3850:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3854:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    3858:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    385c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3860:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    3864:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3868:	48 89 c7             	mov    %rax,%rdi
    386b:	e8 70 fb ff ff       	call   33e0 <vkCreateDevice@plt>
    3870:	85 c0                	test   %eax,%eax
    3872:	0f 95 c0             	setne  %al
    3875:	84 c0                	test   %al,%al
    3877:	74 3b                	je     38b4 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    3879:	bf 10 00 00 00       	mov    $0x10,%edi
    387e:	e8 6d f8 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3883:	48 89 c3             	mov    %rax,%rbx
    3886:	48 8d 05 6b a3 00 00 	lea    0xa36b(%rip),%rax        # dbf8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    388d:	48 89 c6             	mov    %rax,%rsi
    3890:	48 89 df             	mov    %rbx,%rdi
    3893:	e8 08 f8 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3898:	48 8b 05 09 47 01 00 	mov    0x14709(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    389f:	48 89 c2             	mov    %rax,%rdx
    38a2:	48 8d 05 97 44 01 00 	lea    0x14497(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    38a9:	48 89 c6             	mov    %rax,%rsi
    38ac:	48 89 df             	mov    %rbx,%rdi
    38af:	e8 8c fb ff ff       	call   3440 <__cxa_throw@plt>
  }
  return device;
    38b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38b8:	eb 16                	jmp    38d0 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    38ba:	49 89 c4             	mov    %rax,%r12
    38bd:	48 89 df             	mov    %rbx,%rdi
    38c0:	e8 ab f8 ff ff       	call   3170 <__cxa_free_exception@plt>
    38c5:	4c 89 e0             	mov    %r12,%rax
    38c8:	48 89 c7             	mov    %rax,%rdi
    38cb:	e8 90 fb ff ff       	call   3460 <_Unwind_Resume@plt>
}
    38d0:	48 83 c4 30          	add    $0x30,%rsp
    38d4:	5b                   	pop    %rbx
    38d5:	41 5c                	pop    %r12
    38d7:	5d                   	pop    %rbp
    38d8:	c3                   	ret

00000000000038d9 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    38d9:	55                   	push   %rbp
    38da:	48 89 e5             	mov    %rsp,%rbp
    38dd:	41 54                	push   %r12
    38df:	53                   	push   %rbx
    38e0:	48 83 ec 30          	sub    $0x30,%rsp
    38e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    38e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    38ec:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    38f0:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    38f4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    38f8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    38fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3900:	48 89 c7             	mov    %rax,%rdi
    3903:	e8 f8 fa ff ff       	call   3400 <glfwCreateWindowSurface@plt>
    3908:	85 c0                	test   %eax,%eax
    390a:	0f 95 c0             	setne  %al
    390d:	84 c0                	test   %al,%al
    390f:	74 3b                	je     394c <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    3911:	bf 10 00 00 00       	mov    $0x10,%edi
    3916:	e8 d5 f7 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    391b:	48 89 c3             	mov    %rax,%rbx
    391e:	48 8d 05 fb a2 00 00 	lea    0xa2fb(%rip),%rax        # dc20 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    3925:	48 89 c6             	mov    %rax,%rsi
    3928:	48 89 df             	mov    %rbx,%rdi
    392b:	e8 70 f7 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3930:	48 8b 05 71 46 01 00 	mov    0x14671(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3937:	48 89 c2             	mov    %rax,%rdx
    393a:	48 8d 05 ff 43 01 00 	lea    0x143ff(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3941:	48 89 c6             	mov    %rax,%rsi
    3944:	48 89 df             	mov    %rbx,%rdi
    3947:	e8 f4 fa ff ff       	call   3440 <__cxa_throw@plt>
  }
  return surface;
    394c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3950:	eb 16                	jmp    3968 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    3952:	49 89 c4             	mov    %rax,%r12
    3955:	48 89 df             	mov    %rbx,%rdi
    3958:	e8 13 f8 ff ff       	call   3170 <__cxa_free_exception@plt>
    395d:	4c 89 e0             	mov    %r12,%rax
    3960:	48 89 c7             	mov    %rax,%rdi
    3963:	e8 f8 fa ff ff       	call   3460 <_Unwind_Resume@plt>
}
    3968:	48 83 c4 30          	add    $0x30,%rsp
    396c:	5b                   	pop    %rbx
    396d:	41 5c                	pop    %r12
    396f:	5d                   	pop    %rbp
    3970:	c3                   	ret

0000000000003971 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    3971:	55                   	push   %rbp
    3972:	48 89 e5             	mov    %rsp,%rbp
    3975:	41 54                	push   %r12
    3977:	53                   	push   %rbx
    3978:	48 83 ec 30          	sub    $0x30,%rsp
    397c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3980:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3984:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    3988:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    398f:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    3990:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3994:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3998:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    399c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39a0:	48 89 c7             	mov    %rax,%rdi
    39a3:	e8 98 f9 ff ff       	call   3340 <vkCreateSwapchainKHR@plt>
    39a8:	85 c0                	test   %eax,%eax
    39aa:	0f 95 c0             	setne  %al
    39ad:	84 c0                	test   %al,%al
    39af:	74 3b                	je     39ec <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    39b1:	bf 10 00 00 00       	mov    $0x10,%edi
    39b6:	e8 35 f7 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    39bb:	48 89 c3             	mov    %rax,%rbx
    39be:	48 8d 05 7c a2 00 00 	lea    0xa27c(%rip),%rax        # dc41 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    39c5:	48 89 c6             	mov    %rax,%rsi
    39c8:	48 89 df             	mov    %rbx,%rdi
    39cb:	e8 d0 f6 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    39d0:	48 8b 05 d1 45 01 00 	mov    0x145d1(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    39d7:	48 89 c2             	mov    %rax,%rdx
    39da:	48 8d 05 5f 43 01 00 	lea    0x1435f(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    39e1:	48 89 c6             	mov    %rax,%rsi
    39e4:	48 89 df             	mov    %rbx,%rdi
    39e7:	e8 54 fa ff ff       	call   3440 <__cxa_throw@plt>
  }
  return swapchain;
    39ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39f0:	eb 16                	jmp    3a08 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    39f2:	49 89 c4             	mov    %rax,%r12
    39f5:	48 89 df             	mov    %rbx,%rdi
    39f8:	e8 73 f7 ff ff       	call   3170 <__cxa_free_exception@plt>
    39fd:	4c 89 e0             	mov    %r12,%rax
    3a00:	48 89 c7             	mov    %rax,%rdi
    3a03:	e8 58 fa ff ff       	call   3460 <_Unwind_Resume@plt>
}
    3a08:	48 83 c4 30          	add    $0x30,%rsp
    3a0c:	5b                   	pop    %rbx
    3a0d:	41 5c                	pop    %r12
    3a0f:	5d                   	pop    %rbp
    3a10:	c3                   	ret

0000000000003a11 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    3a11:	55                   	push   %rbp
    3a12:	48 89 e5             	mov    %rsp,%rbp
    3a15:	48 83 ec 10          	sub    $0x10,%rsp
    3a19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a21:	48 89 c7             	mov    %rax,%rdi
    3a24:	e8 57 f6 ff ff       	call   3080 <glfwDestroyWindow@plt>
    3a29:	90                   	nop
    3a2a:	c9                   	leave
    3a2b:	c3                   	ret

0000000000003a2c <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    3a2c:	55                   	push   %rbp
    3a2d:	48 89 e5             	mov    %rsp,%rbp
    3a30:	48 83 ec 10          	sub    $0x10,%rsp
    3a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    3a3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a44:	48 89 d6             	mov    %rdx,%rsi
    3a47:	48 89 c7             	mov    %rax,%rdi
    3a4a:	e8 31 f8 ff ff       	call   3280 <vkDestroyInstance@plt>
}
    3a4f:	90                   	nop
    3a50:	c9                   	leave
    3a51:	c3                   	ret

0000000000003a52 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    3a52:	55                   	push   %rbp
    3a53:	48 89 e5             	mov    %rsp,%rbp
    3a56:	48 83 ec 10          	sub    $0x10,%rsp
    3a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    3a62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a6a:	48 89 d6             	mov    %rdx,%rsi
    3a6d:	48 89 c7             	mov    %rax,%rdi
    3a70:	e8 4b f7 ff ff       	call   31c0 <vkDestroyDevice@plt>
}
    3a75:	90                   	nop
    3a76:	c9                   	leave
    3a77:	c3                   	ret

0000000000003a78 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    3a78:	55                   	push   %rbp
    3a79:	48 89 e5             	mov    %rsp,%rbp
    3a7c:	48 83 ec 20          	sub    $0x20,%rsp
    3a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    3a8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3a90:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a98:	48 89 ce             	mov    %rcx,%rsi
    3a9b:	48 89 c7             	mov    %rax,%rdi
    3a9e:	e8 ad f9 ff ff       	call   3450 <vkDestroySurfaceKHR@plt>
}
    3aa3:	90                   	nop
    3aa4:	c9                   	leave
    3aa5:	c3                   	ret

0000000000003aa6 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    3aa6:	55                   	push   %rbp
    3aa7:	48 89 e5             	mov    %rsp,%rbp
    3aaa:	48 83 ec 20          	sub    $0x20,%rsp
    3aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ab2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3ab6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    3aba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3abe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ac6:	48 89 ce             	mov    %rcx,%rsi
    3ac9:	48 89 c7             	mov    %rax,%rdi
    3acc:	e8 9f f5 ff ff       	call   3070 <vkDestroySwapchainKHR@plt>
}
    3ad1:	90                   	nop
    3ad2:	c9                   	leave
    3ad3:	c3                   	ret

0000000000003ad4 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    3ad4:	55                   	push   %rbp
    3ad5:	48 89 e5             	mov    %rsp,%rbp
    3ad8:	41 54                	push   %r12
    3ada:	53                   	push   %rbx
    3adb:	48 83 ec 20          	sub    $0x20,%rsp
    3adf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3ae3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3ae7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3aeb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3aef:	ba 00 00 00 00       	mov    $0x0,%edx
    3af4:	48 89 ce             	mov    %rcx,%rsi
    3af7:	48 89 c7             	mov    %rax,%rdi
    3afa:	e8 d1 f6 ff ff       	call   31d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    3aff:	85 c0                	test   %eax,%eax
    3b01:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3b04:	84 c0                	test   %al,%al
    3b06:	74 3b                	je     3b43 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    3b08:	bf 10 00 00 00       	mov    $0x10,%edi
    3b0d:	e8 de f5 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3b12:	48 89 c3             	mov    %rax,%rbx
    3b15:	48 8d 05 f4 ac 00 00 	lea    0xacf4(%rip),%rax        # e810 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3b1c:	48 89 c6             	mov    %rax,%rsi
    3b1f:	48 89 df             	mov    %rbx,%rdi
    3b22:	e8 79 f5 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3b27:	48 8b 05 7a 44 01 00 	mov    0x1447a(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3b2e:	48 89 c2             	mov    %rax,%rdx
    3b31:	48 8d 05 08 42 01 00 	lea    0x14208(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3b38:	48 89 c6             	mov    %rax,%rsi
    3b3b:	48 89 df             	mov    %rbx,%rdi
    3b3e:	e8 fd f8 ff ff       	call   3440 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    3b43:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3b46:	89 c3                	mov    %eax,%ebx
    3b48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b4c:	48 89 c7             	mov    %rax,%rdi
    3b4f:	e8 84 0c 00 00       	call   47d8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    3b54:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3b58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b5c:	48 89 de             	mov    %rbx,%rsi
    3b5f:	48 89 c7             	mov    %rax,%rdi
    3b62:	e8 a9 0c 00 00       	call   4810 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    3b67:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b6b:	48 89 c7             	mov    %rax,%rdi
    3b6e:	e8 81 0c 00 00       	call   47f4 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3b73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b77:	48 89 c7             	mov    %rax,%rdi
    3b7a:	e8 4b 0d 00 00       	call   48ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    3b7f:	48 89 c2             	mov    %rax,%rdx
    3b82:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3b86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b8a:	48 89 ce             	mov    %rcx,%rsi
    3b8d:	48 89 c7             	mov    %rax,%rdi
    3b90:	e8 3b f6 ff ff       	call   31d0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    3b95:	85 c0                	test   %eax,%eax
    3b97:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    3b9a:	84 c0                	test   %al,%al
    3b9c:	0f 84 95 00 00 00    	je     3c37 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    3ba2:	bf 10 00 00 00       	mov    $0x10,%edi
    3ba7:	e8 44 f5 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3bac:	48 89 c3             	mov    %rax,%rbx
    3baf:	48 8d 05 5a ac 00 00 	lea    0xac5a(%rip),%rax        # e810 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3bb6:	48 89 c6             	mov    %rax,%rsi
    3bb9:	48 89 df             	mov    %rbx,%rdi
    3bbc:	e8 df f4 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3bc1:	48 8b 05 e0 43 01 00 	mov    0x143e0(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3bc8:	48 89 c2             	mov    %rax,%rdx
    3bcb:	48 8d 05 6e 41 01 00 	lea    0x1416e(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3bd2:	48 89 c6             	mov    %rax,%rsi
    3bd5:	48 89 df             	mov    %rbx,%rdi
    3bd8:	e8 63 f8 ff ff       	call   3440 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    3bdd:	49 89 c4             	mov    %rax,%r12
    3be0:	48 89 df             	mov    %rbx,%rdi
    3be3:	e8 88 f5 ff ff       	call   3170 <__cxa_free_exception@plt>
    3be8:	4c 89 e0             	mov    %r12,%rax
    3beb:	48 89 c7             	mov    %rax,%rdi
    3bee:	e8 6d f8 ff ff       	call   3460 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    3bf3:	48 89 c3             	mov    %rax,%rbx
    3bf6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3bfa:	48 89 c7             	mov    %rax,%rdi
    3bfd:	e8 f2 0b 00 00       	call   47f4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    3c02:	48 89 d8             	mov    %rbx,%rax
    3c05:	48 89 c7             	mov    %rax,%rdi
    3c08:	e8 53 f8 ff ff       	call   3460 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    3c0d:	49 89 c4             	mov    %rax,%r12
    3c10:	48 89 df             	mov    %rbx,%rdi
    3c13:	e8 58 f5 ff ff       	call   3170 <__cxa_free_exception@plt>
    3c18:	4c 89 e3             	mov    %r12,%rbx
    3c1b:	eb 03                	jmp    3c20 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    3c1d:	48 89 c3             	mov    %rax,%rbx
    3c20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c24:	48 89 c7             	mov    %rax,%rdi
    3c27:	e8 5a 0c 00 00       	call   4886 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    3c2c:	48 89 d8             	mov    %rbx,%rax
    3c2f:	48 89 c7             	mov    %rax,%rdi
    3c32:	e8 29 f8 ff ff       	call   3460 <_Unwind_Resume@plt>
  return instanceExtensions;
    3c37:	90                   	nop
}
    3c38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c3c:	48 83 c4 20          	add    $0x20,%rsp
    3c40:	5b                   	pop    %rbx
    3c41:	41 5c                	pop    %r12
    3c43:	5d                   	pop    %rbp
    3c44:	c3                   	ret

0000000000003c45 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    3c45:	55                   	push   %rbp
    3c46:	48 89 e5             	mov    %rsp,%rbp
    3c49:	41 54                	push   %r12
    3c4b:	53                   	push   %rbx
    3c4c:	48 83 ec 30          	sub    $0x30,%rsp
    3c50:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c54:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3c58:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    3c5c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3c60:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3c64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c68:	b9 00 00 00 00       	mov    $0x0,%ecx
    3c6d:	48 89 c7             	mov    %rax,%rdi
    3c70:	e8 3b f7 ff ff       	call   33b0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    3c75:	85 c0                	test   %eax,%eax
    3c77:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    3c7a:	84 c0                	test   %al,%al
    3c7c:	74 3b                	je     3cb9 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    3c7e:	bf 10 00 00 00       	mov    $0x10,%edi
    3c83:	e8 68 f4 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3c88:	48 89 c3             	mov    %rax,%rbx
    3c8b:	48 8d 05 a6 ab 00 00 	lea    0xaba6(%rip),%rax        # e838 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    3c92:	48 89 c6             	mov    %rax,%rsi
    3c95:	48 89 df             	mov    %rbx,%rdi
    3c98:	e8 03 f4 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3c9d:	48 8b 05 04 43 01 00 	mov    0x14304(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3ca4:	48 89 c2             	mov    %rax,%rdx
    3ca7:	48 8d 05 92 40 01 00 	lea    0x14092(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3cae:	48 89 c6             	mov    %rax,%rsi
    3cb1:	48 89 df             	mov    %rbx,%rdi
    3cb4:	e8 87 f7 ff ff       	call   3440 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    3cb9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3cbc:	89 c3                	mov    %eax,%ebx
    3cbe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3cc2:	48 89 c7             	mov    %rax,%rdi
    3cc5:	e8 0e 0b 00 00       	call   47d8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    3cca:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3cce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cd2:	48 89 de             	mov    %rbx,%rsi
    3cd5:	48 89 c7             	mov    %rax,%rdi
    3cd8:	e8 33 0b 00 00       	call   4810 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    3cdd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ce1:	48 89 c7             	mov    %rax,%rdi
    3ce4:	e8 0b 0b 00 00       	call   47f4 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    3ce9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ced:	48 89 c7             	mov    %rax,%rdi
    3cf0:	e8 d5 0b 00 00       	call   48ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    3cf5:	48 89 c1             	mov    %rax,%rcx
    3cf8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3cfc:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3d00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3d04:	48 89 c7             	mov    %rax,%rdi
    3d07:	e8 a4 f6 ff ff       	call   33b0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    3d0c:	85 c0                	test   %eax,%eax
    3d0e:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    3d11:	84 c0                	test   %al,%al
    3d13:	0f 84 95 00 00 00    	je     3dae <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    3d19:	bf 10 00 00 00       	mov    $0x10,%edi
    3d1e:	e8 cd f3 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3d23:	48 89 c3             	mov    %rax,%rbx
    3d26:	48 8d 05 0b ab 00 00 	lea    0xab0b(%rip),%rax        # e838 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    3d2d:	48 89 c6             	mov    %rax,%rsi
    3d30:	48 89 df             	mov    %rbx,%rdi
    3d33:	e8 68 f3 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    3d38:	48 8b 05 69 42 01 00 	mov    0x14269(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3d3f:	48 89 c2             	mov    %rax,%rdx
    3d42:	48 8d 05 f7 3f 01 00 	lea    0x13ff7(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3d49:	48 89 c6             	mov    %rax,%rsi
    3d4c:	48 89 df             	mov    %rbx,%rdi
    3d4f:	e8 ec f6 ff ff       	call   3440 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    3d54:	49 89 c4             	mov    %rax,%r12
    3d57:	48 89 df             	mov    %rbx,%rdi
    3d5a:	e8 11 f4 ff ff       	call   3170 <__cxa_free_exception@plt>
    3d5f:	4c 89 e0             	mov    %r12,%rax
    3d62:	48 89 c7             	mov    %rax,%rdi
    3d65:	e8 f6 f6 ff ff       	call   3460 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    3d6a:	48 89 c3             	mov    %rax,%rbx
    3d6d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3d71:	48 89 c7             	mov    %rax,%rdi
    3d74:	e8 7b 0a 00 00       	call   47f4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    3d79:	48 89 d8             	mov    %rbx,%rax
    3d7c:	48 89 c7             	mov    %rax,%rdi
    3d7f:	e8 dc f6 ff ff       	call   3460 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    3d84:	49 89 c4             	mov    %rax,%r12
    3d87:	48 89 df             	mov    %rbx,%rdi
    3d8a:	e8 e1 f3 ff ff       	call   3170 <__cxa_free_exception@plt>
    3d8f:	4c 89 e3             	mov    %r12,%rbx
    3d92:	eb 03                	jmp    3d97 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    3d94:	48 89 c3             	mov    %rax,%rbx
    3d97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d9b:	48 89 c7             	mov    %rax,%rdi
    3d9e:	e8 e3 0a 00 00       	call   4886 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    3da3:	48 89 d8             	mov    %rbx,%rax
    3da6:	48 89 c7             	mov    %rax,%rdi
    3da9:	e8 b2 f6 ff ff       	call   3460 <_Unwind_Resume@plt>
  return deviceExtensions;
    3dae:	90                   	nop
}
    3daf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3db3:	48 83 c4 30          	add    $0x30,%rsp
    3db7:	5b                   	pop    %rbx
    3db8:	41 5c                	pop    %r12
    3dba:	5d                   	pop    %rbp
    3dbb:	c3                   	ret

0000000000003dbc <_ZN3vkh36getRequiredInstanceExtensionNameListEb>:

std::vector<const char *>
getRequiredInstanceExtensionNameList(bool enableValidationLayers) {
    3dbc:	55                   	push   %rbp
    3dbd:	48 89 e5             	mov    %rsp,%rbp
    3dc0:	53                   	push   %rbx
    3dc1:	48 83 ec 38          	sub    $0x38,%rsp
    3dc5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3dc9:	89 f0                	mov    %esi,%eax
    3dcb:	88 45 c4             	mov    %al,-0x3c(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    3dce:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3dd2:	48 89 c7             	mov    %rax,%rdi
    3dd5:	e8 b6 f3 ff ff       	call   3190 <glfwGetRequiredInstanceExtensions@plt>
    3dda:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    3dde:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3de1:	89 c3                	mov    %eax,%ebx
    3de3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3de7:	48 89 c7             	mov    %rax,%rdi
    3dea:	e8 57 0b 00 00       	call   4946 <_ZNSaIPKcEC1Ev>
    3def:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    3df3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3df7:	48 89 de             	mov    %rbx,%rsi
    3dfa:	48 89 c7             	mov    %rax,%rdi
    3dfd:	e8 7c 0b 00 00       	call   497e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    3e02:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3e06:	48 89 c7             	mov    %rax,%rdi
    3e09:	e8 54 0b 00 00       	call   4962 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    3e0e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3e15:	eb 2e                	jmp    3e45 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x89>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    3e17:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3e1a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3e21:	00 
    3e22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e26:	48 01 d0             	add    %rdx,%rax
    3e29:	48 8b 18             	mov    (%rax),%rbx
    3e2c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3e2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3e33:	48 89 d6             	mov    %rdx,%rsi
    3e36:	48 89 c7             	mov    %rax,%rdi
    3e39:	e8 fa 0b 00 00       	call   4a38 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    3e3e:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    3e41:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    3e45:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3e48:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    3e4b:	72 ca                	jb     3e17 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x5b>
  }
  if (enableValidationLayers) {
    3e4d:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    3e51:	74 54                	je     3ea7 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
    requiredInstanceExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    3e53:	48 8d 05 03 aa 00 00 	lea    0xaa03(%rip),%rax        # e85d <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x55>
    3e5a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3e5e:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    3e62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3e66:	48 89 d6             	mov    %rdx,%rsi
    3e69:	48 89 c7             	mov    %rax,%rdi
    3e6c:	e8 e7 0b 00 00       	call   4a58 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
  }
  return requiredInstanceExtensions;
    3e71:	eb 34                	jmp    3ea7 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    3e73:	48 89 c3             	mov    %rax,%rbx
    3e76:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3e7a:	48 89 c7             	mov    %rax,%rdi
    3e7d:	e8 e0 0a 00 00       	call   4962 <_ZNSaIPKcED1Ev>
    3e82:	48 89 d8             	mov    %rbx,%rax
    3e85:	48 89 c7             	mov    %rax,%rdi
    3e88:	e8 d3 f5 ff ff       	call   3460 <_Unwind_Resume@plt>
}
    3e8d:	48 89 c3             	mov    %rax,%rbx
    3e90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3e94:	48 89 c7             	mov    %rax,%rdi
    3e97:	e8 58 0b 00 00       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3e9c:	48 89 d8             	mov    %rbx,%rax
    3e9f:	48 89 c7             	mov    %rax,%rdi
    3ea2:	e8 b9 f5 ff ff       	call   3460 <_Unwind_Resume@plt>
  return requiredInstanceExtensions;
    3ea7:	90                   	nop
}
    3ea8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3eac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3eb0:	c9                   	leave
    3eb1:	c3                   	ret

0000000000003eb2 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    3eb2:	55                   	push   %rbp
    3eb3:	48 89 e5             	mov    %rsp,%rbp
    3eb6:	53                   	push   %rbx
    3eb7:	48 83 ec 28          	sub    $0x28,%rsp
    3ebb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    3ebf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3ec3:	be 00 00 00 00       	mov    $0x0,%esi
    3ec8:	48 89 c7             	mov    %rax,%rdi
    3ecb:	e8 40 f4 ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    3ed0:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3ed3:	89 c3                	mov    %eax,%ebx
    3ed5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ed9:	48 89 c7             	mov    %rax,%rdi
    3edc:	e8 f7 0b 00 00       	call   4ad8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    3ee1:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3ee5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ee9:	48 89 de             	mov    %rbx,%rsi
    3eec:	48 89 c7             	mov    %rax,%rdi
    3eef:	e8 1c 0c 00 00       	call   4b10 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    3ef4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ef8:	48 89 c7             	mov    %rax,%rdi
    3efb:	e8 f4 0b 00 00       	call   4af4 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    3f00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f04:	48 89 c7             	mov    %rax,%rdi
    3f07:	e8 be 0c 00 00       	call   4bca <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    3f0c:	48 89 c2             	mov    %rax,%rdx
    3f0f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3f13:	48 89 d6             	mov    %rdx,%rsi
    3f16:	48 89 c7             	mov    %rax,%rdi
    3f19:	e8 f2 f3 ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    3f1e:	eb 34                	jmp    3f54 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    3f20:	48 89 c3             	mov    %rax,%rbx
    3f23:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f27:	48 89 c7             	mov    %rax,%rdi
    3f2a:	e8 c5 0b 00 00       	call   4af4 <_ZNSaI17VkLayerPropertiesED1Ev>
    3f2f:	48 89 d8             	mov    %rbx,%rax
    3f32:	48 89 c7             	mov    %rax,%rdi
    3f35:	e8 26 f5 ff ff       	call   3460 <_Unwind_Resume@plt>
}
    3f3a:	48 89 c3             	mov    %rax,%rbx
    3f3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f41:	48 89 c7             	mov    %rax,%rdi
    3f44:	e8 3d 0c 00 00       	call   4b86 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    3f49:	48 89 d8             	mov    %rbx,%rax
    3f4c:	48 89 c7             	mov    %rax,%rdi
    3f4f:	e8 0c f5 ff ff       	call   3460 <_Unwind_Resume@plt>
    3f54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f58:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f5c:	c9                   	leave
    3f5d:	c3                   	ret

0000000000003f5e <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    3f5e:	55                   	push   %rbp
    3f5f:	48 89 e5             	mov    %rsp,%rbp
    3f62:	41 54                	push   %r12
    3f64:	53                   	push   %rbx
    3f65:	48 83 ec 20          	sub    $0x20,%rsp
    3f69:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3f6d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    3f71:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3f75:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3f79:	ba 00 00 00 00       	mov    $0x0,%edx
    3f7e:	48 89 ce             	mov    %rcx,%rsi
    3f81:	48 89 c7             	mov    %rax,%rdi
    3f84:	e8 87 f1 ff ff       	call   3110 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    3f89:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3f8c:	85 c0                	test   %eax,%eax
    3f8e:	75 3b                	jne    3fcb <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    3f90:	bf 10 00 00 00       	mov    $0x10,%edi
    3f95:	e8 56 f1 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    3f9a:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    3f9d:	48 8d 05 cc a8 00 00 	lea    0xa8cc(%rip),%rax        # e870 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    3fa4:	48 89 c6             	mov    %rax,%rsi
    3fa7:	48 89 df             	mov    %rbx,%rdi
    3faa:	e8 f1 f0 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    3faf:	48 8b 05 f2 3f 01 00 	mov    0x13ff2(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3fb6:	48 89 c2             	mov    %rax,%rdx
    3fb9:	48 8d 05 80 3d 01 00 	lea    0x13d80(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3fc0:	48 89 c6             	mov    %rax,%rsi
    3fc3:	48 89 df             	mov    %rbx,%rdi
    3fc6:	e8 75 f4 ff ff       	call   3440 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    3fcb:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3fce:	89 c3                	mov    %eax,%ebx
    3fd0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3fd4:	48 89 c7             	mov    %rax,%rdi
    3fd7:	e8 6a 0c 00 00       	call   4c46 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    3fdc:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3fe0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fe4:	48 89 de             	mov    %rbx,%rsi
    3fe7:	48 89 c7             	mov    %rax,%rdi
    3fea:	e8 8f 0c 00 00       	call   4c7e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    3fef:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ff3:	48 89 c7             	mov    %rax,%rdi
    3ff6:	e8 67 0c 00 00       	call   4c62 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    3ffb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fff:	48 89 c7             	mov    %rax,%rdi
    4002:	e8 31 0d 00 00       	call   4d38 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    4007:	48 89 c2             	mov    %rax,%rdx
    400a:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    400e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4012:	48 89 ce             	mov    %rcx,%rsi
    4015:	48 89 c7             	mov    %rax,%rdi
    4018:	e8 f3 f0 ff ff       	call   3110 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    401d:	85 c0                	test   %eax,%eax
    401f:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4022:	84 c0                	test   %al,%al
    4024:	0f 84 95 00 00 00    	je     40bf <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    402a:	bf 10 00 00 00       	mov    $0x10,%edi
    402f:	e8 bc f0 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    4034:	48 89 c3             	mov    %rax,%rbx
    4037:	48 8d 05 6a a8 00 00 	lea    0xa86a(%rip),%rax        # e8a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xa0>
    403e:	48 89 c6             	mov    %rax,%rsi
    4041:	48 89 df             	mov    %rbx,%rdi
    4044:	e8 57 f0 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    4049:	48 8b 05 58 3f 01 00 	mov    0x13f58(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4050:	48 89 c2             	mov    %rax,%rdx
    4053:	48 8d 05 e6 3c 01 00 	lea    0x13ce6(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    405a:	48 89 c6             	mov    %rax,%rsi
    405d:	48 89 df             	mov    %rbx,%rdi
    4060:	e8 db f3 ff ff       	call   3440 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    4065:	49 89 c4             	mov    %rax,%r12
    4068:	48 89 df             	mov    %rbx,%rdi
    406b:	e8 00 f1 ff ff       	call   3170 <__cxa_free_exception@plt>
    4070:	4c 89 e0             	mov    %r12,%rax
    4073:	48 89 c7             	mov    %rax,%rdi
    4076:	e8 e5 f3 ff ff       	call   3460 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    407b:	48 89 c3             	mov    %rax,%rbx
    407e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4082:	48 89 c7             	mov    %rax,%rdi
    4085:	e8 d8 0b 00 00       	call   4c62 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    408a:	48 89 d8             	mov    %rbx,%rax
    408d:	48 89 c7             	mov    %rax,%rdi
    4090:	e8 cb f3 ff ff       	call   3460 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    4095:	49 89 c4             	mov    %rax,%r12
    4098:	48 89 df             	mov    %rbx,%rdi
    409b:	e8 d0 f0 ff ff       	call   3170 <__cxa_free_exception@plt>
    40a0:	4c 89 e3             	mov    %r12,%rbx
    40a3:	eb 03                	jmp    40a8 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    40a5:	48 89 c3             	mov    %rax,%rbx
    40a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40ac:	48 89 c7             	mov    %rax,%rdi
    40af:	e8 40 0c 00 00       	call   4cf4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    40b4:	48 89 d8             	mov    %rbx,%rax
    40b7:	48 89 c7             	mov    %rax,%rdi
    40ba:	e8 a1 f3 ff ff       	call   3460 <_Unwind_Resume@plt>
  return physicalDevices;
    40bf:	90                   	nop
}
    40c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40c4:	48 83 c4 20          	add    $0x20,%rsp
    40c8:	5b                   	pop    %rbx
    40c9:	41 5c                	pop    %r12
    40cb:	5d                   	pop    %rbp
    40cc:	c3                   	ret

00000000000040cd <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    40cd:	55                   	push   %rbp
    40ce:	48 89 e5             	mov    %rsp,%rbp
    40d1:	48 83 ec 10          	sub    $0x10,%rsp
    40d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    40dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    40e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    40e5:	48 89 d6             	mov    %rdx,%rsi
    40e8:	48 89 c7             	mov    %rax,%rdi
    40eb:	e8 c0 ef ff ff       	call   30b0 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    40f0:	90                   	nop
}
    40f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40f5:	c9                   	leave
    40f6:	c3                   	ret

00000000000040f7 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    40f7:	55                   	push   %rbp
    40f8:	48 89 e5             	mov    %rsp,%rbp
    40fb:	48 83 ec 20          	sub    $0x20,%rsp
    40ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4103:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4107:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    410b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    410f:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    4115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4119:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    411d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    4121:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4125:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4129:	48 89 d6             	mov    %rdx,%rsi
    412c:	48 89 c7             	mov    %rax,%rdi
    412f:	e8 ec f0 ff ff       	call   3220 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    4134:	90                   	nop
}
    4135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4139:	c9                   	leave
    413a:	c3                   	ret

000000000000413b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    413b:	55                   	push   %rbp
    413c:	48 89 e5             	mov    %rsp,%rbp
    413f:	53                   	push   %rbx
    4140:	48 83 ec 28          	sub    $0x28,%rsp
    4144:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4148:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    414c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4150:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4154:	ba 00 00 00 00       	mov    $0x0,%edx
    4159:	48 89 ce             	mov    %rcx,%rsi
    415c:	48 89 c7             	mov    %rax,%rdi
    415f:	e8 1c f0 ff ff       	call   3180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    4164:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4167:	89 c3                	mov    %eax,%ebx
    4169:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    416d:	48 89 c7             	mov    %rax,%rdi
    4170:	e8 35 0c 00 00       	call   4daa <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    4175:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4179:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    417d:	48 89 de             	mov    %rbx,%rsi
    4180:	48 89 c7             	mov    %rax,%rdi
    4183:	e8 5a 0c 00 00       	call   4de2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    4188:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    418c:	48 89 c7             	mov    %rax,%rdi
    418f:	e8 32 0c 00 00       	call   4dc6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    4194:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4198:	48 89 c7             	mov    %rax,%rdi
    419b:	e8 fc 0c 00 00       	call   4e9c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    41a0:	48 89 c2             	mov    %rax,%rdx
    41a3:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    41a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    41ab:	48 89 ce             	mov    %rcx,%rsi
    41ae:	48 89 c7             	mov    %rax,%rdi
    41b1:	e8 ca ef ff ff       	call   3180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    41b6:	eb 34                	jmp    41ec <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    41b8:	48 89 c3             	mov    %rax,%rbx
    41bb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    41bf:	48 89 c7             	mov    %rax,%rdi
    41c2:	e8 ff 0b 00 00       	call   4dc6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    41c7:	48 89 d8             	mov    %rbx,%rax
    41ca:	48 89 c7             	mov    %rax,%rdi
    41cd:	e8 8e f2 ff ff       	call   3460 <_Unwind_Resume@plt>
}
    41d2:	48 89 c3             	mov    %rax,%rbx
    41d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41d9:	48 89 c7             	mov    %rax,%rdi
    41dc:	e8 77 0c 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    41e1:	48 89 d8             	mov    %rbx,%rax
    41e4:	48 89 c7             	mov    %rax,%rdi
    41e7:	e8 74 f2 ff ff       	call   3460 <_Unwind_Resume@plt>
    41ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    41f4:	c9                   	leave
    41f5:	c3                   	ret

00000000000041f6 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    41f6:	55                   	push   %rbp
    41f7:	48 89 e5             	mov    %rsp,%rbp
    41fa:	53                   	push   %rbx
    41fb:	48 83 ec 68          	sub    $0x68,%rsp
    41ff:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4203:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    4207:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    420b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    420f:	48 89 d6             	mov    %rdx,%rsi
    4212:	48 89 c7             	mov    %rax,%rdi
    4215:	e8 21 ff ff ff       	call   413b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    421a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    421e:	48 89 c7             	mov    %rax,%rdi
    4221:	e8 f2 0c 00 00       	call   4f18 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    4226:	48 89 c3             	mov    %rax,%rbx
    4229:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    422d:	48 89 c7             	mov    %rax,%rdi
    4230:	e8 11 0d 00 00       	call   4f46 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4235:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    4239:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    423d:	48 89 de             	mov    %rbx,%rsi
    4240:	48 89 c7             	mov    %rax,%rdi
    4243:	e8 36 0d 00 00       	call   4f7e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    4248:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    424c:	48 89 c7             	mov    %rax,%rdi
    424f:	e8 0e 0d 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    4254:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    425b:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    425c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4260:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4264:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4268:	48 89 c7             	mov    %rax,%rdi
    426b:	e8 c8 0d 00 00       	call   5038 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    4270:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4274:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4278:	48 89 c7             	mov    %rax,%rdi
    427b:	e8 de 0d 00 00       	call   505e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    4280:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4284:	eb 4e                	jmp    42d4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    4286:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    428a:	48 89 c7             	mov    %rax,%rdi
    428d:	e8 50 0e 00 00       	call   50e2 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4292:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    4296:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    429a:	8b 00                	mov    (%rax),%eax
    429c:	83 e0 01             	and    $0x1,%eax
    429f:	85 c0                	test   %eax,%eax
    42a1:	74 25                	je     42c8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    42a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42a7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    42ab:	48 89 d6             	mov    %rdx,%rsi
    42ae:	48 89 c7             	mov    %rax,%rdi
    42b1:	e8 3e 0e 00 00       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    42b6:	48 89 c2             	mov    %rax,%rdx
    42b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42bd:	48 89 c6             	mov    %rax,%rsi
    42c0:	48 89 d7             	mov    %rdx,%rdi
    42c3:	e8 56 0e 00 00       	call   511e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    42c8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    42cc:	48 89 c7             	mov    %rax,%rdi
    42cf:	e8 ee 0d 00 00       	call   50c2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    42d4:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    42d8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    42dc:	48 89 d6             	mov    %rdx,%rsi
    42df:	48 89 c7             	mov    %rax,%rdi
    42e2:	e8 a0 0d 00 00       	call   5087 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    42e7:	84 c0                	test   %al,%al
    42e9:	75 9b                	jne    4286 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    42eb:	90                   	nop
}
    42ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    42f0:	48 89 c7             	mov    %rax,%rdi
    42f3:	e8 60 0b 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    42f8:	eb 26                	jmp    4320 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    42fa:	48 89 c3             	mov    %rax,%rbx
    42fd:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4301:	48 89 c7             	mov    %rax,%rdi
    4304:	e8 59 0c 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    4309:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    430d:	48 89 c7             	mov    %rax,%rdi
    4310:	e8 43 0b 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4315:	48 89 d8             	mov    %rbx,%rax
    4318:	48 89 c7             	mov    %rax,%rdi
    431b:	e8 40 f1 ff ff       	call   3460 <_Unwind_Resume@plt>
    4320:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4324:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4328:	c9                   	leave
    4329:	c3                   	ret

000000000000432a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    432a:	55                   	push   %rbp
    432b:	48 89 e5             	mov    %rsp,%rbp
    432e:	53                   	push   %rbx
    432f:	48 83 ec 68          	sub    $0x68,%rsp
    4333:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4337:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    433b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    433f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4343:	48 89 d6             	mov    %rdx,%rsi
    4346:	48 89 c7             	mov    %rax,%rdi
    4349:	e8 ed fd ff ff       	call   413b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    434e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4352:	48 89 c7             	mov    %rax,%rdi
    4355:	e8 be 0b 00 00       	call   4f18 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    435a:	48 89 c3             	mov    %rax,%rbx
    435d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4361:	48 89 c7             	mov    %rax,%rdi
    4364:	e8 dd 0b 00 00       	call   4f46 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4369:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    436d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4371:	48 89 de             	mov    %rbx,%rsi
    4374:	48 89 c7             	mov    %rax,%rdi
    4377:	e8 02 0c 00 00       	call   4f7e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    437c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4380:	48 89 c7             	mov    %rax,%rdi
    4383:	e8 da 0b 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    4388:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    438f:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    4390:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4394:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4398:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    439c:	48 89 c7             	mov    %rax,%rdi
    439f:	e8 94 0c 00 00       	call   5038 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    43a4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    43a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43ac:	48 89 c7             	mov    %rax,%rdi
    43af:	e8 aa 0c 00 00       	call   505e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    43b4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    43b8:	eb 53                	jmp    440d <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    43ba:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    43be:	48 89 c7             	mov    %rax,%rdi
    43c1:	e8 1c 0d 00 00       	call   50e2 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    43c6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    43ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43ce:	8b 00                	mov    (%rax),%eax
    43d0:	83 e0 02             	and    $0x2,%eax
    43d3:	85 c0                	test   %eax,%eax
    43d5:	74 25                	je     43fc <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    43d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    43db:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    43df:	48 89 d6             	mov    %rdx,%rsi
    43e2:	48 89 c7             	mov    %rax,%rdi
    43e5:	e8 0a 0d 00 00       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    43ea:	48 89 c2             	mov    %rax,%rdx
    43ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43f1:	48 89 c6             	mov    %rax,%rsi
    43f4:	48 89 d7             	mov    %rdx,%rdi
    43f7:	e8 22 0d 00 00       	call   511e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    43fc:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    4401:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4405:	48 89 c7             	mov    %rax,%rdi
    4408:	e8 b5 0c 00 00       	call   50c2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    440d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    4411:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4415:	48 89 d6             	mov    %rdx,%rsi
    4418:	48 89 c7             	mov    %rax,%rdi
    441b:	e8 67 0c 00 00       	call   5087 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4420:	84 c0                	test   %al,%al
    4422:	75 96                	jne    43ba <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    4424:	90                   	nop
}
    4425:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4429:	48 89 c7             	mov    %rax,%rdi
    442c:	e8 27 0a 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    4431:	eb 26                	jmp    4459 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    4433:	48 89 c3             	mov    %rax,%rbx
    4436:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    443a:	48 89 c7             	mov    %rax,%rdi
    443d:	e8 20 0b 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    4442:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4446:	48 89 c7             	mov    %rax,%rdi
    4449:	e8 0a 0a 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    444e:	48 89 d8             	mov    %rbx,%rax
    4451:	48 89 c7             	mov    %rax,%rdi
    4454:	e8 07 f0 ff ff       	call   3460 <_Unwind_Resume@plt>
    4459:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    445d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4461:	c9                   	leave
    4462:	c3                   	ret

0000000000004463 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    4463:	55                   	push   %rbp
    4464:	48 89 e5             	mov    %rsp,%rbp
    4467:	53                   	push   %rbx
    4468:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    446f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    4473:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    4477:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    447e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4482:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    4486:	48 89 d6             	mov    %rdx,%rsi
    4489:	48 89 c7             	mov    %rax,%rdi
    448c:	e8 aa fc ff ff       	call   413b <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    4491:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4495:	48 89 c7             	mov    %rax,%rdi
    4498:	e8 7b 0a 00 00       	call   4f18 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    449d:	48 89 c3             	mov    %rax,%rbx
    44a0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    44a4:	48 89 c7             	mov    %rax,%rdi
    44a7:	e8 9a 0a 00 00       	call   4f46 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    44ac:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    44b0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    44b4:	48 89 de             	mov    %rbx,%rsi
    44b7:	48 89 c7             	mov    %rax,%rdi
    44ba:	e8 bf 0a 00 00       	call   4f7e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    44bf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    44c3:	48 89 c7             	mov    %rax,%rdi
    44c6:	e8 97 0a 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    44cb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    44d2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    44d6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    44da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    44de:	48 89 c7             	mov    %rax,%rdi
    44e1:	e8 52 0b 00 00       	call   5038 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    44e6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    44ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    44ee:	48 89 c7             	mov    %rax,%rdi
    44f1:	e8 68 0b 00 00       	call   505e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    44f6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    44fa:	eb 6c                	jmp    4568 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    44fc:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4500:	48 89 c7             	mov    %rax,%rdi
    4503:	e8 da 0b 00 00       	call   50e2 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4508:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    450c:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    4513:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    4517:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    451e:	8b 75 ec             	mov    -0x14(%rbp),%esi
    4521:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4525:	48 89 c7             	mov    %rax,%rdi
    4528:	e8 a3 ed ff ff       	call   32d0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    452d:	8b 45 9c             	mov    -0x64(%rbp),%eax
    4530:	85 c0                	test   %eax,%eax
    4532:	74 24                	je     4558 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    4534:	8b 55 ec             	mov    -0x14(%rbp),%edx
    4537:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    453b:	48 89 d6             	mov    %rdx,%rsi
    453e:	48 89 c7             	mov    %rax,%rdi
    4541:	e8 ae 0b 00 00       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    4546:	48 89 c2             	mov    %rax,%rdx
    4549:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    454d:	48 89 c6             	mov    %rax,%rsi
    4550:	48 89 d7             	mov    %rdx,%rdi
    4553:	e8 c6 0b 00 00       	call   511e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    4558:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    455c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4560:	48 89 c7             	mov    %rax,%rdi
    4563:	e8 5a 0b 00 00       	call   50c2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4568:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    456c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4570:	48 89 d6             	mov    %rdx,%rsi
    4573:	48 89 c7             	mov    %rax,%rdi
    4576:	e8 0c 0b 00 00       	call   5087 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    457b:	84 c0                	test   %al,%al
    457d:	0f 85 79 ff ff ff    	jne    44fc <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    4583:	90                   	nop
}
    4584:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4588:	48 89 c7             	mov    %rax,%rdi
    458b:	e8 c8 08 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    4590:	eb 37                	jmp    45c9 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    4592:	48 89 c3             	mov    %rax,%rbx
    4595:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4599:	48 89 c7             	mov    %rax,%rdi
    459c:	e8 c1 09 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    45a1:	eb 0f                	jmp    45b2 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    45a3:	48 89 c3             	mov    %rax,%rbx
    45a6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    45aa:	48 89 c7             	mov    %rax,%rdi
    45ad:	e8 42 0a 00 00       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    45b2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    45b6:	48 89 c7             	mov    %rax,%rdi
    45b9:	e8 9a 08 00 00       	call   4e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    45be:	48 89 d8             	mov    %rbx,%rax
    45c1:	48 89 c7             	mov    %rax,%rdi
    45c4:	e8 97 ee ff ff       	call   3460 <_Unwind_Resume@plt>
    45c9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    45cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    45d1:	c9                   	leave
    45d2:	c3                   	ret

00000000000045d3 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    45d3:	55                   	push   %rbp
    45d4:	48 89 e5             	mov    %rsp,%rbp
    45d7:	48 83 ec 20          	sub    $0x20,%rsp
    45db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    45e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    45ef:	0f 11 00             	movups %xmm0,(%rax)
    45f2:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    45f6:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    45fa:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface,
    45ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4603:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4607:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    460b:	48 89 ce             	mov    %rcx,%rsi
    460e:	48 89 c7             	mov    %rax,%rdi
    4611:	e8 ea eb ff ff       	call   3200 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
                                            &surfaceCapabilities);
  return surfaceCapabilities;
    4616:	90                   	nop
}
    4617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    461b:	c9                   	leave
    461c:	c3                   	ret

000000000000461d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    461d:	55                   	push   %rbp
    461e:	48 89 e5             	mov    %rsp,%rbp
    4621:	53                   	push   %rbx
    4622:	48 83 ec 38          	sub    $0x38,%rsp
    4626:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    462a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    462e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    4632:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    4636:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    463a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    463e:	b9 00 00 00 00       	mov    $0x0,%ecx
    4643:	48 89 c7             	mov    %rax,%rdi
    4646:	e8 25 ed ff ff       	call   3370 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                       &surfaceFormatCount, nullptr);
  std::vector<VkSurfaceFormatKHR> surfaceFormats{};
    464b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    464f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4653:	0f 11 00             	movups %xmm0,(%rax)
    4656:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    465b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    465f:	48 89 c7             	mov    %rax,%rdi
    4662:	e8 55 01 00 00       	call   47bc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
  vkGetPhysicalDeviceSurfaceFormatsKHR(
    4667:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    466b:	48 89 c7             	mov    %rax,%rdi
    466e:	e8 59 0c 00 00       	call   52cc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    4673:	48 89 c1             	mov    %rax,%rcx
    4676:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    467a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    467e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4682:	48 89 c7             	mov    %rax,%rdi
    4685:	e8 e6 ec ff ff       	call   3370 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
      physicalDevice, surface, &surfaceFormatCount, surfaceFormats.data());
  return surfaceFormats;
    468a:	eb 1a                	jmp    46a6 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x89>
}
    468c:	48 89 c3             	mov    %rax,%rbx
    468f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4693:	48 89 c7             	mov    %rax,%rdi
    4696:	e8 ed 0b 00 00       	call   5288 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    469b:	48 89 d8             	mov    %rbx,%rax
    469e:	48 89 c7             	mov    %rax,%rdi
    46a1:	e8 ba ed ff ff       	call   3460 <_Unwind_Resume@plt>
    46a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    46aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    46ae:	c9                   	leave
    46af:	c3                   	ret

00000000000046b0 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    46b0:	55                   	push   %rbp
    46b1:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    46b4:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    46b9:	5d                   	pop    %rbp
    46ba:	c3                   	ret

00000000000046bb <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    46bb:	55                   	push   %rbp
    46bc:	48 89 e5             	mov    %rsp,%rbp
    46bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    46cb:	5d                   	pop    %rbp
    46cc:	c3                   	ret

00000000000046cd <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    46cd:	55                   	push   %rbp
    46ce:	48 89 e5             	mov    %rsp,%rbp
    46d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46d9:	5d                   	pop    %rbp
    46da:	c3                   	ret
    46db:	90                   	nop

00000000000046dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    46dc:	55                   	push   %rbp
    46dd:	48 89 e5             	mov    %rsp,%rbp
    46e0:	48 83 ec 10          	sub    $0x10,%rsp
    46e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46ec:	48 89 c7             	mov    %rax,%rdi
    46ef:	e8 00 01 00 00       	call   47f4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    46f4:	90                   	nop
    46f5:	c9                   	leave
    46f6:	c3                   	ret
    46f7:	90                   	nop

00000000000046f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    46f8:	55                   	push   %rbp
    46f9:	48 89 e5             	mov    %rsp,%rbp
    46fc:	48 83 ec 10          	sub    $0x10,%rsp
    4700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4708:	48 89 c7             	mov    %rax,%rdi
    470b:	e8 52 02 00 00       	call   4962 <_ZNSaIPKcED1Ev>
    4710:	90                   	nop
    4711:	c9                   	leave
    4712:	c3                   	ret
    4713:	90                   	nop

0000000000004714 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
    4714:	55                   	push   %rbp
    4715:	48 89 e5             	mov    %rsp,%rbp
    4718:	48 83 ec 10          	sub    $0x10,%rsp
    471c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4724:	48 89 c7             	mov    %rax,%rdi
    4727:	e8 c8 03 00 00       	call   4af4 <_ZNSaI17VkLayerPropertiesED1Ev>
    472c:	90                   	nop
    472d:	c9                   	leave
    472e:	c3                   	ret
    472f:	90                   	nop

0000000000004730 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    4730:	55                   	push   %rbp
    4731:	48 89 e5             	mov    %rsp,%rbp
    4734:	48 83 ec 10          	sub    $0x10,%rsp
    4738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    473c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4740:	48 89 c7             	mov    %rax,%rdi
    4743:	e8 1a 05 00 00       	call   4c62 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4748:	90                   	nop
    4749:	c9                   	leave
    474a:	c3                   	ret
    474b:	90                   	nop

000000000000474c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    474c:	55                   	push   %rbp
    474d:	48 89 e5             	mov    %rsp,%rbp
    4750:	48 83 ec 10          	sub    $0x10,%rsp
    4754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    475c:	48 89 c7             	mov    %rax,%rdi
    475f:	e8 62 06 00 00       	call   4dc6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    4764:	90                   	nop
    4765:	c9                   	leave
    4766:	c3                   	ret
    4767:	90                   	nop

0000000000004768 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    4768:	55                   	push   %rbp
    4769:	48 89 e5             	mov    %rsp,%rbp
    476c:	48 83 ec 10          	sub    $0x10,%rsp
    4770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4778:	48 89 c7             	mov    %rax,%rdi
    477b:	e8 e2 07 00 00       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    4780:	90                   	nop
    4781:	c9                   	leave
    4782:	c3                   	ret
    4783:	90                   	nop

0000000000004784 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    4784:	55                   	push   %rbp
    4785:	48 89 e5             	mov    %rsp,%rbp
    4788:	48 83 ec 10          	sub    $0x10,%rsp
    478c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4794:	48 89 c7             	mov    %rax,%rdi
    4797:	e8 82 0a 00 00       	call   521e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    479c:	90                   	nop
    479d:	c9                   	leave
    479e:	c3                   	ret
    479f:	90                   	nop

00000000000047a0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    47a0:	55                   	push   %rbp
    47a1:	48 89 e5             	mov    %rsp,%rbp
    47a4:	48 83 ec 10          	sub    $0x10,%rsp
    47a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47b0:	48 89 c7             	mov    %rax,%rdi
    47b3:	e8 3e 0a 00 00       	call   51f6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>
    47b8:	90                   	nop
    47b9:	c9                   	leave
    47ba:	c3                   	ret
    47bb:	90                   	nop

00000000000047bc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    47bc:	55                   	push   %rbp
    47bd:	48 89 e5             	mov    %rsp,%rbp
    47c0:	48 83 ec 10          	sub    $0x10,%rsp
    47c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47cc:	48 89 c7             	mov    %rax,%rdi
    47cf:	e8 cc ff ff ff       	call   47a0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    47d4:	90                   	nop
    47d5:	c9                   	leave
    47d6:	c3                   	ret
    47d7:	90                   	nop

00000000000047d8 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    47d8:	55                   	push   %rbp
    47d9:	48 89 e5             	mov    %rsp,%rbp
    47dc:	48 83 ec 10          	sub    $0x10,%rsp
    47e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47e8:	48 89 c7             	mov    %rax,%rdi
    47eb:	e8 00 0b 00 00       	call   52f0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    47f0:	90                   	nop
    47f1:	c9                   	leave
    47f2:	c3                   	ret
    47f3:	90                   	nop

00000000000047f4 <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    47f4:	55                   	push   %rbp
    47f5:	48 89 e5             	mov    %rsp,%rbp
    47f8:	48 83 ec 10          	sub    $0x10,%rsp
    47fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4804:	48 89 c7             	mov    %rax,%rdi
    4807:	e8 f0 0a 00 00       	call   52fc <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    480c:	90                   	nop
    480d:	c9                   	leave
    480e:	c3                   	ret
    480f:	90                   	nop

0000000000004810 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4810:	55                   	push   %rbp
    4811:	48 89 e5             	mov    %rsp,%rbp
    4814:	53                   	push   %rbx
    4815:	48 83 ec 28          	sub    $0x28,%rsp
    4819:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    481d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4821:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4825:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4829:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    482d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4831:	48 89 d6             	mov    %rdx,%rsi
    4834:	48 89 c7             	mov    %rax,%rdi
    4837:	e8 cb 0a 00 00       	call   5307 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    483c:	48 89 c1             	mov    %rax,%rcx
    483f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4843:	48 89 c2             	mov    %rax,%rdx
    4846:	48 89 ce             	mov    %rcx,%rsi
    4849:	48 89 df             	mov    %rbx,%rdi
    484c:	e8 17 0b 00 00       	call   5368 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4851:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4855:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4859:	48 89 d6             	mov    %rdx,%rsi
    485c:	48 89 c7             	mov    %rax,%rdi
    485f:	e8 62 0b 00 00       	call   53c6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    4864:	eb 1a                	jmp    4880 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4866:	48 89 c3             	mov    %rax,%rbx
    4869:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    486d:	48 89 c7             	mov    %rax,%rdi
    4870:	e8 79 00 00 00       	call   48ee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    4875:	48 89 d8             	mov    %rbx,%rax
    4878:	48 89 c7             	mov    %rax,%rdi
    487b:	e8 e0 eb ff ff       	call   3460 <_Unwind_Resume@plt>
    4880:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4884:	c9                   	leave
    4885:	c3                   	ret

0000000000004886 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4886:	55                   	push   %rbp
    4887:	48 89 e5             	mov    %rsp,%rbp
    488a:	48 83 ec 10          	sub    $0x10,%rsp
    488e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4896:	48 89 c7             	mov    %rax,%rdi
    4899:	e8 68 0b 00 00       	call   5406 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    489e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    48a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48a5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    48a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48ad:	48 8b 00             	mov    (%rax),%rax
    48b0:	48 89 ce             	mov    %rcx,%rsi
    48b3:	48 89 c7             	mov    %rax,%rdi
    48b6:	e8 59 0b 00 00       	call   5414 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    48bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48bf:	48 89 c7             	mov    %rax,%rdi
    48c2:	e8 27 00 00 00       	call   48ee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    48c7:	90                   	nop
    48c8:	c9                   	leave
    48c9:	c3                   	ret

00000000000048ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    48ca:	55                   	push   %rbp
    48cb:	48 89 e5             	mov    %rsp,%rbp
    48ce:	48 83 ec 10          	sub    $0x10,%rsp
    48d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    48d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48da:	48 8b 10             	mov    (%rax),%rdx
    48dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48e1:	48 89 d6             	mov    %rdx,%rsi
    48e4:	48 89 c7             	mov    %rax,%rdi
    48e7:	e8 52 0b 00 00       	call   543e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    48ec:	c9                   	leave
    48ed:	c3                   	ret

00000000000048ee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    48ee:	55                   	push   %rbp
    48ef:	48 89 e5             	mov    %rsp,%rbp
    48f2:	48 83 ec 10          	sub    $0x10,%rsp
    48f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    48fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48fe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4906:	48 8b 00             	mov    (%rax),%rax
    4909:	48 29 c2             	sub    %rax,%rdx
    490c:	48 c1 fa 02          	sar    $0x2,%rdx
    4910:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    4917:	fc c0 0f 
    491a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    491e:	48 89 c2             	mov    %rax,%rdx
    4921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4925:	48 8b 08             	mov    (%rax),%rcx
    4928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    492c:	48 89 ce             	mov    %rcx,%rsi
    492f:	48 89 c7             	mov    %rax,%rdi
    4932:	e8 3f 0b 00 00       	call   5476 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    4937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    493b:	48 89 c7             	mov    %rax,%rdi
    493e:	e8 99 fd ff ff       	call   46dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    4943:	90                   	nop
    4944:	c9                   	leave
    4945:	c3                   	ret

0000000000004946 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4946:	55                   	push   %rbp
    4947:	48 89 e5             	mov    %rsp,%rbp
    494a:	48 83 ec 10          	sub    $0x10,%rsp
    494e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4956:	48 89 c7             	mov    %rax,%rdi
    4959:	e8 4e 0b 00 00       	call   54ac <_ZNSt15__new_allocatorIPKcEC1Ev>
    495e:	90                   	nop
    495f:	c9                   	leave
    4960:	c3                   	ret
    4961:	90                   	nop

0000000000004962 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4962:	55                   	push   %rbp
    4963:	48 89 e5             	mov    %rsp,%rbp
    4966:	48 83 ec 10          	sub    $0x10,%rsp
    496a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    496e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4972:	48 89 c7             	mov    %rax,%rdi
    4975:	e8 3e 0b 00 00       	call   54b8 <_ZNSt15__new_allocatorIPKcED1Ev>
    497a:	90                   	nop
    497b:	c9                   	leave
    497c:	c3                   	ret
    497d:	90                   	nop

000000000000497e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    497e:	55                   	push   %rbp
    497f:	48 89 e5             	mov    %rsp,%rbp
    4982:	53                   	push   %rbx
    4983:	48 83 ec 28          	sub    $0x28,%rsp
    4987:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    498b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    498f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4993:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4997:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    499b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    499f:	48 89 d6             	mov    %rdx,%rsi
    49a2:	48 89 c7             	mov    %rax,%rdi
    49a5:	e8 19 0b 00 00       	call   54c3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    49aa:	48 89 c1             	mov    %rax,%rcx
    49ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    49b1:	48 89 c2             	mov    %rax,%rdx
    49b4:	48 89 ce             	mov    %rcx,%rsi
    49b7:	48 89 df             	mov    %rbx,%rdi
    49ba:	e8 65 0b 00 00       	call   5524 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    49bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    49c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49c7:	48 89 d6             	mov    %rdx,%rsi
    49ca:	48 89 c7             	mov    %rax,%rdi
    49cd:	e8 b0 0b 00 00       	call   5582 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    49d2:	eb 1a                	jmp    49ee <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    49d4:	48 89 c3             	mov    %rax,%rbx
    49d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49db:	48 89 c7             	mov    %rax,%rdi
    49de:	e8 a7 00 00 00       	call   4a8a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    49e3:	48 89 d8             	mov    %rbx,%rax
    49e6:	48 89 c7             	mov    %rax,%rdi
    49e9:	e8 72 ea ff ff       	call   3460 <_Unwind_Resume@plt>
    49ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49f2:	c9                   	leave
    49f3:	c3                   	ret

00000000000049f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    49f4:	55                   	push   %rbp
    49f5:	48 89 e5             	mov    %rsp,%rbp
    49f8:	48 83 ec 10          	sub    $0x10,%rsp
    49fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a04:	48 89 c7             	mov    %rax,%rdi
    4a07:	e8 b6 0b 00 00       	call   55c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4a0c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a13:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a1b:	48 8b 00             	mov    (%rax),%rax
    4a1e:	48 89 ce             	mov    %rcx,%rsi
    4a21:	48 89 c7             	mov    %rax,%rdi
    4a24:	e8 a7 0b 00 00       	call   55d0 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    4a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a2d:	48 89 c7             	mov    %rax,%rdi
    4a30:	e8 55 00 00 00       	call   4a8a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    4a35:	90                   	nop
    4a36:	c9                   	leave
    4a37:	c3                   	ret

0000000000004a38 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    4a38:	55                   	push   %rbp
    4a39:	48 89 e5             	mov    %rsp,%rbp
    4a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    4a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a48:	48 8b 00             	mov    (%rax),%rax
    4a4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4a4f:	48 c1 e2 03          	shl    $0x3,%rdx
    4a53:	48 01 d0             	add    %rdx,%rax
      }
    4a56:	5d                   	pop    %rbp
    4a57:	c3                   	ret

0000000000004a58 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      }

#if __cplusplus >= 201103L
      _GLIBCXX20_CONSTEXPR
      void
      push_back(value_type&& __x)
    4a58:	55                   	push   %rbp
    4a59:	48 89 e5             	mov    %rsp,%rbp
    4a5c:	48 83 ec 10          	sub    $0x10,%rsp
    4a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    4a68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a6c:	48 89 c7             	mov    %rax,%rdi
    4a6f:	e8 86 0b 00 00       	call   55fa <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    4a74:	48 89 c2             	mov    %rax,%rdx
    4a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a7b:	48 89 d6             	mov    %rdx,%rsi
    4a7e:	48 89 c7             	mov    %rax,%rdi
    4a81:	e8 82 0b 00 00       	call   5608 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    4a86:	90                   	nop
    4a87:	c9                   	leave
    4a88:	c3                   	ret
    4a89:	90                   	nop

0000000000004a8a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4a8a:	55                   	push   %rbp
    4a8b:	48 89 e5             	mov    %rsp,%rbp
    4a8e:	48 83 ec 10          	sub    $0x10,%rsp
    4a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a9a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa2:	48 8b 00             	mov    (%rax),%rax
    4aa5:	48 29 c2             	sub    %rax,%rdx
    4aa8:	48 89 d0             	mov    %rdx,%rax
    4aab:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4aaf:	48 89 c2             	mov    %rax,%rdx
    4ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab6:	48 8b 08             	mov    (%rax),%rcx
    4ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4abd:	48 89 ce             	mov    %rcx,%rsi
    4ac0:	48 89 c7             	mov    %rax,%rdi
    4ac3:	e8 0a 0c 00 00       	call   56d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    4ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4acc:	48 89 c7             	mov    %rax,%rdi
    4acf:	e8 24 fc ff ff       	call   46f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    4ad4:	90                   	nop
    4ad5:	c9                   	leave
    4ad6:	c3                   	ret
    4ad7:	90                   	nop

0000000000004ad8 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4ad8:	55                   	push   %rbp
    4ad9:	48 89 e5             	mov    %rsp,%rbp
    4adc:	48 83 ec 10          	sub    $0x10,%rsp
    4ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae8:	48 89 c7             	mov    %rax,%rdi
    4aeb:	e8 18 0c 00 00       	call   5708 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    4af0:	90                   	nop
    4af1:	c9                   	leave
    4af2:	c3                   	ret
    4af3:	90                   	nop

0000000000004af4 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4af4:	55                   	push   %rbp
    4af5:	48 89 e5             	mov    %rsp,%rbp
    4af8:	48 83 ec 10          	sub    $0x10,%rsp
    4afc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b04:	48 89 c7             	mov    %rax,%rdi
    4b07:	e8 08 0c 00 00       	call   5714 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    4b0c:	90                   	nop
    4b0d:	c9                   	leave
    4b0e:	c3                   	ret
    4b0f:	90                   	nop

0000000000004b10 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4b10:	55                   	push   %rbp
    4b11:	48 89 e5             	mov    %rsp,%rbp
    4b14:	53                   	push   %rbx
    4b15:	48 83 ec 28          	sub    $0x28,%rsp
    4b19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4b21:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4b25:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4b29:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4b2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b31:	48 89 d6             	mov    %rdx,%rsi
    4b34:	48 89 c7             	mov    %rax,%rdi
    4b37:	e8 e3 0b 00 00       	call   571f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4b3c:	48 89 c1             	mov    %rax,%rcx
    4b3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b43:	48 89 c2             	mov    %rax,%rdx
    4b46:	48 89 ce             	mov    %rcx,%rsi
    4b49:	48 89 df             	mov    %rbx,%rdi
    4b4c:	e8 2f 0c 00 00       	call   5780 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4b51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4b55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b59:	48 89 d6             	mov    %rdx,%rsi
    4b5c:	48 89 c7             	mov    %rax,%rdi
    4b5f:	e8 7a 0c 00 00       	call   57de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    4b64:	eb 1a                	jmp    4b80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4b66:	48 89 c3             	mov    %rax,%rbx
    4b69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b6d:	48 89 c7             	mov    %rax,%rdi
    4b70:	e8 79 00 00 00       	call   4bee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    4b75:	48 89 d8             	mov    %rbx,%rax
    4b78:	48 89 c7             	mov    %rax,%rdi
    4b7b:	e8 e0 e8 ff ff       	call   3460 <_Unwind_Resume@plt>
    4b80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b84:	c9                   	leave
    4b85:	c3                   	ret

0000000000004b86 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4b86:	55                   	push   %rbp
    4b87:	48 89 e5             	mov    %rsp,%rbp
    4b8a:	48 83 ec 10          	sub    $0x10,%rsp
    4b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b96:	48 89 c7             	mov    %rax,%rdi
    4b99:	e8 80 0c 00 00       	call   581e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4b9e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4ba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ba5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bad:	48 8b 00             	mov    (%rax),%rax
    4bb0:	48 89 ce             	mov    %rcx,%rsi
    4bb3:	48 89 c7             	mov    %rax,%rdi
    4bb6:	e8 71 0c 00 00       	call   582c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    4bbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bbf:	48 89 c7             	mov    %rax,%rdi
    4bc2:	e8 27 00 00 00       	call   4bee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    4bc7:	90                   	nop
    4bc8:	c9                   	leave
    4bc9:	c3                   	ret

0000000000004bca <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    4bca:	55                   	push   %rbp
    4bcb:	48 89 e5             	mov    %rsp,%rbp
    4bce:	48 83 ec 10          	sub    $0x10,%rsp
    4bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bda:	48 8b 10             	mov    (%rax),%rdx
    4bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4be1:	48 89 d6             	mov    %rdx,%rsi
    4be4:	48 89 c7             	mov    %rax,%rdi
    4be7:	e8 6a 0c 00 00       	call   5856 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    4bec:	c9                   	leave
    4bed:	c3                   	ret

0000000000004bee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4bee:	55                   	push   %rbp
    4bef:	48 89 e5             	mov    %rsp,%rbp
    4bf2:	48 83 ec 10          	sub    $0x10,%rsp
    4bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bfe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c06:	48 8b 00             	mov    (%rax),%rax
    4c09:	48 29 c2             	sub    %rax,%rdx
    4c0c:	48 c1 fa 03          	sar    $0x3,%rdx
    4c10:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    4c17:	fc c0 0f 
    4c1a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    4c1e:	48 89 c2             	mov    %rax,%rdx
    4c21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c25:	48 8b 08             	mov    (%rax),%rcx
    4c28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c2c:	48 89 ce             	mov    %rcx,%rsi
    4c2f:	48 89 c7             	mov    %rax,%rdi
    4c32:	e8 57 0c 00 00       	call   588e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    4c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c3b:	48 89 c7             	mov    %rax,%rdi
    4c3e:	e8 d1 fa ff ff       	call   4714 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    4c43:	90                   	nop
    4c44:	c9                   	leave
    4c45:	c3                   	ret

0000000000004c46 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4c46:	55                   	push   %rbp
    4c47:	48 89 e5             	mov    %rsp,%rbp
    4c4a:	48 83 ec 10          	sub    $0x10,%rsp
    4c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c56:	48 89 c7             	mov    %rax,%rdi
    4c59:	e8 66 0c 00 00       	call   58c4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    4c5e:	90                   	nop
    4c5f:	c9                   	leave
    4c60:	c3                   	ret
    4c61:	90                   	nop

0000000000004c62 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4c62:	55                   	push   %rbp
    4c63:	48 89 e5             	mov    %rsp,%rbp
    4c66:	48 83 ec 10          	sub    $0x10,%rsp
    4c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c72:	48 89 c7             	mov    %rax,%rdi
    4c75:	e8 56 0c 00 00       	call   58d0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    4c7a:	90                   	nop
    4c7b:	c9                   	leave
    4c7c:	c3                   	ret
    4c7d:	90                   	nop

0000000000004c7e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4c7e:	55                   	push   %rbp
    4c7f:	48 89 e5             	mov    %rsp,%rbp
    4c82:	53                   	push   %rbx
    4c83:	48 83 ec 28          	sub    $0x28,%rsp
    4c87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4c8f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4c93:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4c97:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c9f:	48 89 d6             	mov    %rdx,%rsi
    4ca2:	48 89 c7             	mov    %rax,%rdi
    4ca5:	e8 31 0c 00 00       	call   58db <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4caa:	48 89 c1             	mov    %rax,%rcx
    4cad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cb1:	48 89 c2             	mov    %rax,%rdx
    4cb4:	48 89 ce             	mov    %rcx,%rsi
    4cb7:	48 89 df             	mov    %rbx,%rdi
    4cba:	e8 7d 0c 00 00       	call   593c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4cbf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4cc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cc7:	48 89 d6             	mov    %rdx,%rsi
    4cca:	48 89 c7             	mov    %rax,%rdi
    4ccd:	e8 c8 0c 00 00       	call   599a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    4cd2:	eb 1a                	jmp    4cee <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    4cd4:	48 89 c3             	mov    %rax,%rbx
    4cd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cdb:	48 89 c7             	mov    %rax,%rdi
    4cde:	e8 79 00 00 00       	call   4d5c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4ce3:	48 89 d8             	mov    %rbx,%rax
    4ce6:	48 89 c7             	mov    %rax,%rdi
    4ce9:	e8 72 e7 ff ff       	call   3460 <_Unwind_Resume@plt>
    4cee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cf2:	c9                   	leave
    4cf3:	c3                   	ret

0000000000004cf4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4cf4:	55                   	push   %rbp
    4cf5:	48 89 e5             	mov    %rsp,%rbp
    4cf8:	48 83 ec 10          	sub    $0x10,%rsp
    4cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d04:	48 89 c7             	mov    %rax,%rdi
    4d07:	e8 ce 0c 00 00       	call   59da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4d0c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d13:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d1b:	48 8b 00             	mov    (%rax),%rax
    4d1e:	48 89 ce             	mov    %rcx,%rsi
    4d21:	48 89 c7             	mov    %rax,%rdi
    4d24:	e8 bf 0c 00 00       	call   59e8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    4d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2d:	48 89 c7             	mov    %rax,%rdi
    4d30:	e8 27 00 00 00       	call   4d5c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4d35:	90                   	nop
    4d36:	c9                   	leave
    4d37:	c3                   	ret

0000000000004d38 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    4d38:	55                   	push   %rbp
    4d39:	48 89 e5             	mov    %rsp,%rbp
    4d3c:	48 83 ec 10          	sub    $0x10,%rsp
    4d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d48:	48 8b 10             	mov    (%rax),%rdx
    4d4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d4f:	48 89 d6             	mov    %rdx,%rsi
    4d52:	48 89 c7             	mov    %rax,%rdi
    4d55:	e8 b8 0c 00 00       	call   5a12 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4d5a:	c9                   	leave
    4d5b:	c3                   	ret

0000000000004d5c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4d5c:	55                   	push   %rbp
    4d5d:	48 89 e5             	mov    %rsp,%rbp
    4d60:	48 83 ec 10          	sub    $0x10,%rsp
    4d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d6c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d74:	48 8b 00             	mov    (%rax),%rax
    4d77:	48 29 c2             	sub    %rax,%rdx
    4d7a:	48 89 d0             	mov    %rdx,%rax
    4d7d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4d81:	48 89 c2             	mov    %rax,%rdx
    4d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d88:	48 8b 08             	mov    (%rax),%rcx
    4d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d8f:	48 89 ce             	mov    %rcx,%rsi
    4d92:	48 89 c7             	mov    %rax,%rdi
    4d95:	e8 b0 0c 00 00       	call   5a4a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d9e:	48 89 c7             	mov    %rax,%rdi
    4da1:	e8 8a f9 ff ff       	call   4730 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    4da6:	90                   	nop
    4da7:	c9                   	leave
    4da8:	c3                   	ret
    4da9:	90                   	nop

0000000000004daa <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4daa:	55                   	push   %rbp
    4dab:	48 89 e5             	mov    %rsp,%rbp
    4dae:	48 83 ec 10          	sub    $0x10,%rsp
    4db2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dba:	48 89 c7             	mov    %rax,%rdi
    4dbd:	e8 be 0c 00 00       	call   5a80 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    4dc2:	90                   	nop
    4dc3:	c9                   	leave
    4dc4:	c3                   	ret
    4dc5:	90                   	nop

0000000000004dc6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4dc6:	55                   	push   %rbp
    4dc7:	48 89 e5             	mov    %rsp,%rbp
    4dca:	48 83 ec 10          	sub    $0x10,%rsp
    4dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd6:	48 89 c7             	mov    %rax,%rdi
    4dd9:	e8 ae 0c 00 00       	call   5a8c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    4dde:	90                   	nop
    4ddf:	c9                   	leave
    4de0:	c3                   	ret
    4de1:	90                   	nop

0000000000004de2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4de2:	55                   	push   %rbp
    4de3:	48 89 e5             	mov    %rsp,%rbp
    4de6:	53                   	push   %rbx
    4de7:	48 83 ec 28          	sub    $0x28,%rsp
    4deb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4def:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4df3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4df7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4dfb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4dff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e03:	48 89 d6             	mov    %rdx,%rsi
    4e06:	48 89 c7             	mov    %rax,%rdi
    4e09:	e8 89 0c 00 00       	call   5a97 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4e0e:	48 89 c1             	mov    %rax,%rcx
    4e11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e15:	48 89 c2             	mov    %rax,%rdx
    4e18:	48 89 ce             	mov    %rcx,%rsi
    4e1b:	48 89 df             	mov    %rbx,%rdi
    4e1e:	e8 d5 0c 00 00       	call   5af8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4e23:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4e27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e2b:	48 89 d6             	mov    %rdx,%rsi
    4e2e:	48 89 c7             	mov    %rax,%rdi
    4e31:	e8 20 0d 00 00       	call   5b56 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    4e36:	eb 1a                	jmp    4e52 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4e38:	48 89 c3             	mov    %rax,%rbx
    4e3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e3f:	48 89 c7             	mov    %rax,%rdi
    4e42:	e8 79 00 00 00       	call   4ec0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4e47:	48 89 d8             	mov    %rbx,%rax
    4e4a:	48 89 c7             	mov    %rax,%rdi
    4e4d:	e8 0e e6 ff ff       	call   3460 <_Unwind_Resume@plt>
    4e52:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4e56:	c9                   	leave
    4e57:	c3                   	ret

0000000000004e58 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4e58:	55                   	push   %rbp
    4e59:	48 89 e5             	mov    %rsp,%rbp
    4e5c:	48 83 ec 10          	sub    $0x10,%rsp
    4e60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e68:	48 89 c7             	mov    %rax,%rdi
    4e6b:	e8 26 0d 00 00       	call   5b96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4e70:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4e73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e77:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4e7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7f:	48 8b 00             	mov    (%rax),%rax
    4e82:	48 89 ce             	mov    %rcx,%rsi
    4e85:	48 89 c7             	mov    %rax,%rdi
    4e88:	e8 17 0d 00 00       	call   5ba4 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    4e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e91:	48 89 c7             	mov    %rax,%rdi
    4e94:	e8 27 00 00 00       	call   4ec0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4e99:	90                   	nop
    4e9a:	c9                   	leave
    4e9b:	c3                   	ret

0000000000004e9c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    4e9c:	55                   	push   %rbp
    4e9d:	48 89 e5             	mov    %rsp,%rbp
    4ea0:	48 83 ec 10          	sub    $0x10,%rsp
    4ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eac:	48 8b 10             	mov    (%rax),%rdx
    4eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb3:	48 89 d6             	mov    %rdx,%rsi
    4eb6:	48 89 c7             	mov    %rax,%rdi
    4eb9:	e8 10 0d 00 00       	call   5bce <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    4ebe:	c9                   	leave
    4ebf:	c3                   	ret

0000000000004ec0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4ec0:	55                   	push   %rbp
    4ec1:	48 89 e5             	mov    %rsp,%rbp
    4ec4:	48 83 ec 10          	sub    $0x10,%rsp
    4ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ed0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ed8:	48 8b 00             	mov    (%rax),%rax
    4edb:	48 29 c2             	sub    %rax,%rdx
    4ede:	48 c1 fa 03          	sar    $0x3,%rdx
    4ee2:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    4ee9:	aa aa aa 
    4eec:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    4ef0:	48 89 c2             	mov    %rax,%rdx
    4ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ef7:	48 8b 08             	mov    (%rax),%rcx
    4efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4efe:	48 89 ce             	mov    %rcx,%rsi
    4f01:	48 89 c7             	mov    %rax,%rdi
    4f04:	e8 fd 0c 00 00       	call   5c06 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    4f09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f0d:	48 89 c7             	mov    %rax,%rdi
    4f10:	e8 37 f8 ff ff       	call   474c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    4f15:	90                   	nop
    4f16:	c9                   	leave
    4f17:	c3                   	ret

0000000000004f18 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    4f18:	55                   	push   %rbp
    4f19:	48 89 e5             	mov    %rsp,%rbp
    4f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f24:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f2c:	48 8b 00             	mov    (%rax),%rax
    4f2f:	48 29 c2             	sub    %rax,%rdx
    4f32:	48 c1 fa 03          	sar    $0x3,%rdx
    4f36:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    4f3d:	aa aa aa 
    4f40:	48 0f af c2          	imul   %rdx,%rax
    4f44:	5d                   	pop    %rbp
    4f45:	c3                   	ret

0000000000004f46 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4f46:	55                   	push   %rbp
    4f47:	48 89 e5             	mov    %rsp,%rbp
    4f4a:	48 83 ec 10          	sub    $0x10,%rsp
    4f4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f56:	48 89 c7             	mov    %rax,%rdi
    4f59:	e8 de 0c 00 00       	call   5c3c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4f5e:	90                   	nop
    4f5f:	c9                   	leave
    4f60:	c3                   	ret
    4f61:	90                   	nop

0000000000004f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4f62:	55                   	push   %rbp
    4f63:	48 89 e5             	mov    %rsp,%rbp
    4f66:	48 83 ec 10          	sub    $0x10,%rsp
    4f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f72:	48 89 c7             	mov    %rax,%rdi
    4f75:	e8 ce 0c 00 00       	call   5c48 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    4f7a:	90                   	nop
    4f7b:	c9                   	leave
    4f7c:	c3                   	ret
    4f7d:	90                   	nop

0000000000004f7e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4f7e:	55                   	push   %rbp
    4f7f:	48 89 e5             	mov    %rsp,%rbp
    4f82:	53                   	push   %rbx
    4f83:	48 83 ec 28          	sub    $0x28,%rsp
    4f87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4f8f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4f93:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4f97:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4f9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f9f:	48 89 d6             	mov    %rdx,%rsi
    4fa2:	48 89 c7             	mov    %rax,%rdi
    4fa5:	e8 a9 0c 00 00       	call   5c53 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    4faa:	48 89 c1             	mov    %rax,%rcx
    4fad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fb1:	48 89 c2             	mov    %rax,%rdx
    4fb4:	48 89 ce             	mov    %rcx,%rsi
    4fb7:	48 89 df             	mov    %rbx,%rdi
    4fba:	e8 f5 0c 00 00       	call   5cb4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    4fbf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4fc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fc7:	48 89 d6             	mov    %rdx,%rsi
    4fca:	48 89 c7             	mov    %rax,%rdi
    4fcd:	e8 40 0d 00 00       	call   5d12 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    4fd2:	eb 1a                	jmp    4fee <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    4fd4:	48 89 c3             	mov    %rax,%rbx
    4fd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fdb:	48 89 c7             	mov    %rax,%rdi
    4fde:	e8 bb 01 00 00       	call   519e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    4fe3:	48 89 d8             	mov    %rbx,%rax
    4fe6:	48 89 c7             	mov    %rax,%rdi
    4fe9:	e8 72 e4 ff ff       	call   3460 <_Unwind_Resume@plt>
    4fee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ff2:	c9                   	leave
    4ff3:	c3                   	ret

0000000000004ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4ff4:	55                   	push   %rbp
    4ff5:	48 89 e5             	mov    %rsp,%rbp
    4ff8:	48 83 ec 10          	sub    $0x10,%rsp
    4ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5004:	48 89 c7             	mov    %rax,%rdi
    5007:	e8 46 0d 00 00       	call   5d52 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    500c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    500f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5013:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    501b:	48 8b 00             	mov    (%rax),%rax
    501e:	48 89 ce             	mov    %rcx,%rsi
    5021:	48 89 c7             	mov    %rax,%rdi
    5024:	e8 37 0d 00 00       	call   5d60 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    5029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    502d:	48 89 c7             	mov    %rax,%rdi
    5030:	e8 69 01 00 00       	call   519e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    5035:	90                   	nop
    5036:	c9                   	leave
    5037:	c3                   	ret

0000000000005038 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    5038:	55                   	push   %rbp
    5039:	48 89 e5             	mov    %rsp,%rbp
    503c:	48 83 ec 20          	sub    $0x20,%rsp
    5040:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5044:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5048:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    504c:	48 89 d6             	mov    %rdx,%rsi
    504f:	48 89 c7             	mov    %rax,%rdi
    5052:	e8 33 0d 00 00       	call   5d8a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    505b:	c9                   	leave
    505c:	c3                   	ret
    505d:	90                   	nop

000000000000505e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    505e:	55                   	push   %rbp
    505f:	48 89 e5             	mov    %rsp,%rbp
    5062:	48 83 ec 20          	sub    $0x20,%rsp
    5066:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    506a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    506e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5072:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5076:	48 89 d6             	mov    %rdx,%rsi
    5079:	48 89 c7             	mov    %rax,%rdi
    507c:	e8 09 0d 00 00       	call   5d8a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5085:	c9                   	leave
    5086:	c3                   	ret

0000000000005087 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5087:	55                   	push   %rbp
    5088:	48 89 e5             	mov    %rsp,%rbp
    508b:	53                   	push   %rbx
    508c:	48 83 ec 18          	sub    $0x18,%rsp
    5090:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5094:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    5098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    509c:	48 89 c7             	mov    %rax,%rdi
    509f:	e8 04 0d 00 00       	call   5da8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    50a4:	48 8b 18             	mov    (%rax),%rbx
    50a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50ab:	48 89 c7             	mov    %rax,%rdi
    50ae:	e8 f5 0c 00 00       	call   5da8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    50b3:	48 8b 00             	mov    (%rax),%rax
    50b6:	48 39 c3             	cmp    %rax,%rbx
    50b9:	0f 95 c0             	setne  %al
    50bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50c0:	c9                   	leave
    50c1:	c3                   	ret

00000000000050c2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    50c2:	55                   	push   %rbp
    50c3:	48 89 e5             	mov    %rsp,%rbp
    50c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    50ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ce:	48 8b 00             	mov    (%rax),%rax
    50d1:	48 8d 50 18          	lea    0x18(%rax),%rdx
    50d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50d9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    50dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    50e0:	5d                   	pop    %rbp
    50e1:	c3                   	ret

00000000000050e2 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    50e2:	55                   	push   %rbp
    50e3:	48 89 e5             	mov    %rsp,%rbp
    50e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    50ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ee:	48 8b 00             	mov    (%rax),%rax
    50f1:	5d                   	pop    %rbp
    50f2:	c3                   	ret
    50f3:	90                   	nop

00000000000050f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    50f4:	55                   	push   %rbp
    50f5:	48 89 e5             	mov    %rsp,%rbp
    50f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    5100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5104:	48 8b 08             	mov    (%rax),%rcx
    5107:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    510b:	48 89 d0             	mov    %rdx,%rax
    510e:	48 c1 e0 03          	shl    $0x3,%rax
    5112:	48 29 d0             	sub    %rdx,%rax
    5115:	48 c1 e0 02          	shl    $0x2,%rax
    5119:	48 01 c8             	add    %rcx,%rax
      }
    511c:	5d                   	pop    %rbp
    511d:	c3                   	ret

000000000000511e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    511e:	55                   	push   %rbp
    511f:	48 89 e5             	mov    %rsp,%rbp
    5122:	53                   	push   %rbx
    5123:	48 83 ec 18          	sub    $0x18,%rsp
    5127:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    512b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    512f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5133:	48 89 c7             	mov    %rax,%rdi
    5136:	e8 7b 0c 00 00       	call   5db6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    513b:	84 c0                	test   %al,%al
    513d:	74 36                	je     5175 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    513f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5143:	48 89 c7             	mov    %rax,%rdi
    5146:	e8 c1 0c 00 00       	call   5e0c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    514b:	48 89 c3             	mov    %rax,%rbx
    514e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5152:	48 89 c7             	mov    %rax,%rdi
    5155:	e8 6e 0c 00 00       	call   5dc8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    515a:	48 89 c1             	mov    %rax,%rcx
    515d:	48 8b 03             	mov    (%rbx),%rax
    5160:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5164:	48 89 01             	mov    %rax,(%rcx)
    5167:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    516b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    516f:	48 89 41 10          	mov    %rax,0x10(%rcx)
    5173:	eb 1e                	jmp    5193 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    5175:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5179:	48 89 c7             	mov    %rax,%rdi
    517c:	e8 8b 0c 00 00       	call   5e0c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    5181:	48 89 c2             	mov    %rax,%rdx
    5184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5188:	48 89 d6             	mov    %rdx,%rsi
    518b:	48 89 c7             	mov    %rax,%rdi
    518e:	e8 87 0c 00 00       	call   5e1a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    5193:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5197:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    519b:	c9                   	leave
    519c:	c3                   	ret
    519d:	90                   	nop

000000000000519e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    519e:	55                   	push   %rbp
    519f:	48 89 e5             	mov    %rsp,%rbp
    51a2:	48 83 ec 10          	sub    $0x10,%rsp
    51a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    51aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ae:	48 8b 50 10          	mov    0x10(%rax),%rdx
    51b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51b6:	48 8b 00             	mov    (%rax),%rax
    51b9:	48 29 c2             	sub    %rax,%rdx
    51bc:	48 c1 fa 02          	sar    $0x2,%rdx
    51c0:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    51c7:	db b6 6d 
    51ca:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    51ce:	48 89 c2             	mov    %rax,%rdx
    51d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51d5:	48 8b 08             	mov    (%rax),%rcx
    51d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51dc:	48 89 ce             	mov    %rcx,%rsi
    51df:	48 89 c7             	mov    %rax,%rdi
    51e2:	e8 8d 0c 00 00       	call   5e74 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    51e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51eb:	48 89 c7             	mov    %rax,%rdi
    51ee:	e8 75 f5 ff ff       	call   4768 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    51f3:	90                   	nop
    51f4:	c9                   	leave
    51f5:	c3                   	ret

00000000000051f6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    51f6:	55                   	push   %rbp
    51f7:	48 89 e5             	mov    %rsp,%rbp
    51fa:	48 83 ec 10          	sub    $0x10,%rsp
    51fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    5202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5206:	48 89 c7             	mov    %rax,%rdi
    5209:	e8 9c 0c 00 00       	call   5eaa <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    520e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5212:	48 89 c7             	mov    %rax,%rdi
    5215:	e8 ac 0c 00 00       	call   5ec6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    521a:	90                   	nop
    521b:	c9                   	leave
    521c:	c3                   	ret
    521d:	90                   	nop

000000000000521e <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
    521e:	55                   	push   %rbp
    521f:	48 89 e5             	mov    %rsp,%rbp
    5222:	48 83 ec 10          	sub    $0x10,%rsp
    5226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    522a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    522e:	48 89 c7             	mov    %rax,%rdi
    5231:	e8 be 0c 00 00       	call   5ef4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    5236:	90                   	nop
    5237:	c9                   	leave
    5238:	c3                   	ret
    5239:	90                   	nop

000000000000523a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    523a:	55                   	push   %rbp
    523b:	48 89 e5             	mov    %rsp,%rbp
    523e:	48 83 ec 10          	sub    $0x10,%rsp
    5242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    524a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    524e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5252:	48 8b 00             	mov    (%rax),%rax
    5255:	48 29 c2             	sub    %rax,%rdx
    5258:	48 89 d0             	mov    %rdx,%rax
    525b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    525f:	48 89 c2             	mov    %rax,%rdx
    5262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5266:	48 8b 08             	mov    (%rax),%rcx
    5269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    526d:	48 89 ce             	mov    %rcx,%rsi
    5270:	48 89 c7             	mov    %rax,%rdi
    5273:	e8 88 0c 00 00       	call   5f00 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    5278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    527c:	48 89 c7             	mov    %rax,%rdi
    527f:	e8 00 f5 ff ff       	call   4784 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    5284:	90                   	nop
    5285:	c9                   	leave
    5286:	c3                   	ret
    5287:	90                   	nop

0000000000005288 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5288:	55                   	push   %rbp
    5289:	48 89 e5             	mov    %rsp,%rbp
    528c:	48 83 ec 10          	sub    $0x10,%rsp
    5290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5298:	48 89 c7             	mov    %rax,%rdi
    529b:	e8 96 0c 00 00       	call   5f36 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    52a0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    52a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    52ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52af:	48 8b 00             	mov    (%rax),%rax
    52b2:	48 89 ce             	mov    %rcx,%rsi
    52b5:	48 89 c7             	mov    %rax,%rdi
    52b8:	e8 87 0c 00 00       	call   5f44 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    52bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c1:	48 89 c7             	mov    %rax,%rdi
    52c4:	e8 71 ff ff ff       	call   523a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    52c9:	90                   	nop
    52ca:	c9                   	leave
    52cb:	c3                   	ret

00000000000052cc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    52cc:	55                   	push   %rbp
    52cd:	48 89 e5             	mov    %rsp,%rbp
    52d0:	48 83 ec 10          	sub    $0x10,%rsp
    52d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    52d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52dc:	48 8b 10             	mov    (%rax),%rdx
    52df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e3:	48 89 d6             	mov    %rdx,%rsi
    52e6:	48 89 c7             	mov    %rax,%rdi
    52e9:	e8 80 0c 00 00       	call   5f6e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    52ee:	c9                   	leave
    52ef:	c3                   	ret

00000000000052f0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    52f0:	55                   	push   %rbp
    52f1:	48 89 e5             	mov    %rsp,%rbp
    52f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52f8:	90                   	nop
    52f9:	5d                   	pop    %rbp
    52fa:	c3                   	ret
    52fb:	90                   	nop

00000000000052fc <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    52fc:	55                   	push   %rbp
    52fd:	48 89 e5             	mov    %rsp,%rbp
    5300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5304:	90                   	nop
    5305:	5d                   	pop    %rbp
    5306:	c3                   	ret

0000000000005307 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5307:	55                   	push   %rbp
    5308:	48 89 e5             	mov    %rsp,%rbp
    530b:	53                   	push   %rbx
    530c:	48 83 ec 28          	sub    $0x28,%rsp
    5310:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5314:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5318:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    531c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5320:	48 89 d6             	mov    %rdx,%rsi
    5323:	48 89 c7             	mov    %rax,%rdi
    5326:	e8 25 01 00 00       	call   5450 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    532b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    532f:	48 89 c7             	mov    %rax,%rdi
    5332:	e8 49 0c 00 00       	call   5f80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5337:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    533b:	0f 92 c3             	setb   %bl
    533e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5342:	48 89 c7             	mov    %rax,%rdi
    5345:	e8 aa f4 ff ff       	call   47f4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    534a:	84 db                	test   %bl,%bl
    534c:	74 0f                	je     535d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    534e:	48 8d 05 7b 95 00 00 	lea    0x957b(%rip),%rax        # e8d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    5355:	48 89 c7             	mov    %rax,%rdi
    5358:	e8 a3 dd ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    535d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5361:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5365:	c9                   	leave
    5366:	c3                   	ret
    5367:	90                   	nop

0000000000005368 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5368:	55                   	push   %rbp
    5369:	48 89 e5             	mov    %rsp,%rbp
    536c:	53                   	push   %rbx
    536d:	48 83 ec 28          	sub    $0x28,%rsp
    5371:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5375:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5379:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    537d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5381:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5385:	48 89 d6             	mov    %rdx,%rsi
    5388:	48 89 c7             	mov    %rax,%rdi
    538b:	e8 32 0c 00 00       	call   5fc2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5390:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5394:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5398:	48 89 d6             	mov    %rdx,%rsi
    539b:	48 89 c7             	mov    %rax,%rdi
    539e:	e8 51 0c 00 00       	call   5ff4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    53a3:	eb 1a                	jmp    53bf <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    53a5:	48 89 c3             	mov    %rax,%rbx
    53a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53ac:	48 89 c7             	mov    %rax,%rdi
    53af:	e8 28 f3 ff ff       	call   46dc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    53b4:	48 89 d8             	mov    %rbx,%rax
    53b7:	48 89 c7             	mov    %rax,%rdi
    53ba:	e8 a1 e0 ff ff       	call   3460 <_Unwind_Resume@plt>
    53bf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    53c3:	c9                   	leave
    53c4:	c3                   	ret
    53c5:	90                   	nop

00000000000053c6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    53c6:	55                   	push   %rbp
    53c7:	48 89 e5             	mov    %rsp,%rbp
    53ca:	48 83 ec 10          	sub    $0x10,%rsp
    53ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    53d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53da:	48 89 c7             	mov    %rax,%rdi
    53dd:	e8 24 00 00 00       	call   5406 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    53e2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    53e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e9:	48 8b 00             	mov    (%rax),%rax
    53ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    53f0:	48 89 ce             	mov    %rcx,%rsi
    53f3:	48 89 c7             	mov    %rax,%rdi
    53f6:	e8 5a 0c 00 00       	call   6055 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    53fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    53ff:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5403:	90                   	nop
    5404:	c9                   	leave
    5405:	c3                   	ret

0000000000005406 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5406:	55                   	push   %rbp
    5407:	48 89 e5             	mov    %rsp,%rbp
    540a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    540e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5412:	5d                   	pop    %rbp
    5413:	c3                   	ret

0000000000005414 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5414:	55                   	push   %rbp
    5415:	48 89 e5             	mov    %rsp,%rbp
    5418:	48 83 ec 20          	sub    $0x20,%rsp
    541c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5420:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5424:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5428:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    542c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5430:	48 89 d6             	mov    %rdx,%rsi
    5433:	48 89 c7             	mov    %rax,%rdi
    5436:	e8 43 0c 00 00       	call   607e <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    543b:	90                   	nop
    543c:	c9                   	leave
    543d:	c3                   	ret

000000000000543e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    543e:	55                   	push   %rbp
    543f:	48 89 e5             	mov    %rsp,%rbp
    5442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5446:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    544a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    544e:	5d                   	pop    %rbp
    544f:	c3                   	ret

0000000000005450 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5450:	55                   	push   %rbp
    5451:	48 89 e5             	mov    %rsp,%rbp
    5454:	48 83 ec 10          	sub    $0x10,%rsp
    5458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    545c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5460:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5468:	48 89 d6             	mov    %rdx,%rsi
    546b:	48 89 c7             	mov    %rax,%rdi
    546e:	e8 31 0c 00 00       	call   60a4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    5473:	90                   	nop
    5474:	c9                   	leave
    5475:	c3                   	ret

0000000000005476 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5476:	55                   	push   %rbp
    5477:	48 89 e5             	mov    %rsp,%rbp
    547a:	48 83 ec 20          	sub    $0x20,%rsp
    547e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5486:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    548a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    548f:	74 17                	je     54a8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5495:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5499:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    549d:	48 89 ce             	mov    %rcx,%rsi
    54a0:	48 89 c7             	mov    %rax,%rdi
    54a3:	e8 0b 0c 00 00       	call   60b3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    54a8:	90                   	nop
    54a9:	c9                   	leave
    54aa:	c3                   	ret
    54ab:	90                   	nop

00000000000054ac <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    54ac:	55                   	push   %rbp
    54ad:	48 89 e5             	mov    %rsp,%rbp
    54b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b4:	90                   	nop
    54b5:	5d                   	pop    %rbp
    54b6:	c3                   	ret
    54b7:	90                   	nop

00000000000054b8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    54b8:	55                   	push   %rbp
    54b9:	48 89 e5             	mov    %rsp,%rbp
    54bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54c0:	90                   	nop
    54c1:	5d                   	pop    %rbp
    54c2:	c3                   	ret

00000000000054c3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    54c3:	55                   	push   %rbp
    54c4:	48 89 e5             	mov    %rsp,%rbp
    54c7:	53                   	push   %rbx
    54c8:	48 83 ec 28          	sub    $0x28,%rsp
    54cc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    54d0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    54d4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    54d8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    54dc:	48 89 d6             	mov    %rdx,%rsi
    54df:	48 89 c7             	mov    %rax,%rdi
    54e2:	e8 c5 01 00 00       	call   56ac <_ZNSaIPKcEC1ERKS1_>
    54e7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    54eb:	48 89 c7             	mov    %rax,%rdi
    54ee:	e8 ee 0b 00 00       	call   60e1 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    54f3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    54f7:	0f 92 c3             	setb   %bl
    54fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    54fe:	48 89 c7             	mov    %rax,%rdi
    5501:	e8 5c f4 ff ff       	call   4962 <_ZNSaIPKcED1Ev>
    5506:	84 db                	test   %bl,%bl
    5508:	74 0f                	je     5519 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    550a:	48 8d 05 bf 93 00 00 	lea    0x93bf(%rip),%rax        # e8d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    5511:	48 89 c7             	mov    %rax,%rdi
    5514:	e8 e7 db ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    551d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5521:	c9                   	leave
    5522:	c3                   	ret
    5523:	90                   	nop

0000000000005524 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5524:	55                   	push   %rbp
    5525:	48 89 e5             	mov    %rsp,%rbp
    5528:	53                   	push   %rbx
    5529:	48 83 ec 28          	sub    $0x28,%rsp
    552d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5531:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5535:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5539:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    553d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5541:	48 89 d6             	mov    %rdx,%rsi
    5544:	48 89 c7             	mov    %rax,%rdi
    5547:	e8 d8 0b 00 00       	call   6124 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    554c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5550:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5554:	48 89 d6             	mov    %rdx,%rsi
    5557:	48 89 c7             	mov    %rax,%rdi
    555a:	e8 f7 0b 00 00       	call   6156 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    555f:	eb 1a                	jmp    557b <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    5561:	48 89 c3             	mov    %rax,%rbx
    5564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5568:	48 89 c7             	mov    %rax,%rdi
    556b:	e8 88 f1 ff ff       	call   46f8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5570:	48 89 d8             	mov    %rbx,%rax
    5573:	48 89 c7             	mov    %rax,%rdi
    5576:	e8 e5 de ff ff       	call   3460 <_Unwind_Resume@plt>
    557b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    557f:	c9                   	leave
    5580:	c3                   	ret
    5581:	90                   	nop

0000000000005582 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5582:	55                   	push   %rbp
    5583:	48 89 e5             	mov    %rsp,%rbp
    5586:	48 83 ec 10          	sub    $0x10,%rsp
    558a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    558e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5596:	48 89 c7             	mov    %rax,%rdi
    5599:	e8 24 00 00 00       	call   55c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    559e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    55a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a5:	48 8b 00             	mov    (%rax),%rax
    55a8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    55ac:	48 89 ce             	mov    %rcx,%rsi
    55af:	48 89 c7             	mov    %rax,%rdi
    55b2:	e8 f5 0b 00 00       	call   61ac <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    55b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    55bb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    55bf:	90                   	nop
    55c0:	c9                   	leave
    55c1:	c3                   	ret

00000000000055c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    55c2:	55                   	push   %rbp
    55c3:	48 89 e5             	mov    %rsp,%rbp
    55c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    55ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ce:	5d                   	pop    %rbp
    55cf:	c3                   	ret

00000000000055d0 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    55d0:	55                   	push   %rbp
    55d1:	48 89 e5             	mov    %rsp,%rbp
    55d4:	48 83 ec 20          	sub    $0x20,%rsp
    55d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    55e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    55e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ec:	48 89 d6             	mov    %rdx,%rsi
    55ef:	48 89 c7             	mov    %rax,%rdi
    55f2:	e8 de 0b 00 00       	call   61d5 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    55f7:	90                   	nop
    55f8:	c9                   	leave
    55f9:	c3                   	ret

00000000000055fa <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    55fa:	55                   	push   %rbp
    55fb:	48 89 e5             	mov    %rsp,%rbp
    55fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5606:	5d                   	pop    %rbp
    5607:	c3                   	ret

0000000000005608 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    5608:	55                   	push   %rbp
    5609:	48 89 e5             	mov    %rsp,%rbp
    560c:	53                   	push   %rbx
    560d:	48 83 ec 18          	sub    $0x18,%rsp
    5611:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5615:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    5619:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    561d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5621:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5625:	48 8b 40 10          	mov    0x10(%rax),%rax
    5629:	48 39 c2             	cmp    %rax,%rdx
    562c:	74 3c                	je     566a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    562e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5632:	48 89 c7             	mov    %rax,%rdi
    5635:	e8 c1 0b 00 00       	call   61fb <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    563a:	48 89 c2             	mov    %rax,%rdx
    563d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5641:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5649:	48 89 ce             	mov    %rcx,%rsi
    564c:	48 89 c7             	mov    %rax,%rdi
    564f:	e8 b5 0b 00 00       	call   6209 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    5654:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5658:	48 8b 40 08          	mov    0x8(%rax),%rax
    565c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5660:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5664:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5668:	eb 30                	jmp    569a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    566a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    566e:	48 89 c7             	mov    %rax,%rdi
    5671:	e8 85 0b 00 00       	call   61fb <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    5676:	48 89 c3             	mov    %rax,%rbx
    5679:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    567d:	48 89 c7             	mov    %rax,%rdi
    5680:	e8 bd 0b 00 00       	call   6242 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    5685:	48 89 c1             	mov    %rax,%rcx
    5688:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    568c:	48 89 da             	mov    %rbx,%rdx
    568f:	48 89 ce             	mov    %rcx,%rsi
    5692:	48 89 c7             	mov    %rax,%rdi
    5695:	e8 d2 0b 00 00       	call   626c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    569a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    569e:	48 89 c7             	mov    %rax,%rdi
    56a1:	e8 58 0d 00 00       	call   63fe <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    56a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56aa:	c9                   	leave
    56ab:	c3                   	ret

00000000000056ac <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    56ac:	55                   	push   %rbp
    56ad:	48 89 e5             	mov    %rsp,%rbp
    56b0:	48 83 ec 10          	sub    $0x10,%rsp
    56b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    56bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56c4:	48 89 d6             	mov    %rdx,%rsi
    56c7:	48 89 c7             	mov    %rax,%rdi
    56ca:	e8 6f 0d 00 00       	call   643e <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    56cf:	90                   	nop
    56d0:	c9                   	leave
    56d1:	c3                   	ret

00000000000056d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    56d2:	55                   	push   %rbp
    56d3:	48 89 e5             	mov    %rsp,%rbp
    56d6:	48 83 ec 20          	sub    $0x20,%rsp
    56da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    56e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    56e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    56eb:	74 17                	je     5704 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    56ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    56f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    56f9:	48 89 ce             	mov    %rcx,%rsi
    56fc:	48 89 c7             	mov    %rax,%rdi
    56ff:	e8 49 0d 00 00       	call   644d <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    5704:	90                   	nop
    5705:	c9                   	leave
    5706:	c3                   	ret
    5707:	90                   	nop

0000000000005708 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5708:	55                   	push   %rbp
    5709:	48 89 e5             	mov    %rsp,%rbp
    570c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5710:	90                   	nop
    5711:	5d                   	pop    %rbp
    5712:	c3                   	ret
    5713:	90                   	nop

0000000000005714 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5714:	55                   	push   %rbp
    5715:	48 89 e5             	mov    %rsp,%rbp
    5718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    571c:	90                   	nop
    571d:	5d                   	pop    %rbp
    571e:	c3                   	ret

000000000000571f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    571f:	55                   	push   %rbp
    5720:	48 89 e5             	mov    %rsp,%rbp
    5723:	53                   	push   %rbx
    5724:	48 83 ec 28          	sub    $0x28,%rsp
    5728:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    572c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5730:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5734:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5738:	48 89 d6             	mov    %rdx,%rsi
    573b:	48 89 c7             	mov    %rax,%rdi
    573e:	e8 25 01 00 00       	call   5868 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    5743:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5747:	48 89 c7             	mov    %rax,%rdi
    574a:	e8 2c 0d 00 00       	call   647b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    574f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5753:	0f 92 c3             	setb   %bl
    5756:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    575a:	48 89 c7             	mov    %rax,%rdi
    575d:	e8 92 f3 ff ff       	call   4af4 <_ZNSaI17VkLayerPropertiesED1Ev>
    5762:	84 db                	test   %bl,%bl
    5764:	74 0f                	je     5775 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5766:	48 8d 05 63 91 00 00 	lea    0x9163(%rip),%rax        # e8d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    576d:	48 89 c7             	mov    %rax,%rdi
    5770:	e8 8b d9 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5775:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5779:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    577d:	c9                   	leave
    577e:	c3                   	ret
    577f:	90                   	nop

0000000000005780 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5780:	55                   	push   %rbp
    5781:	48 89 e5             	mov    %rsp,%rbp
    5784:	53                   	push   %rbx
    5785:	48 83 ec 28          	sub    $0x28,%rsp
    5789:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    578d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5791:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5795:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5799:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    579d:	48 89 d6             	mov    %rdx,%rsi
    57a0:	48 89 c7             	mov    %rax,%rdi
    57a3:	e8 16 0d 00 00       	call   64be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    57a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    57ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57b0:	48 89 d6             	mov    %rdx,%rsi
    57b3:	48 89 c7             	mov    %rax,%rdi
    57b6:	e8 35 0d 00 00       	call   64f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    57bb:	eb 1a                	jmp    57d7 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    57bd:	48 89 c3             	mov    %rax,%rbx
    57c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57c4:	48 89 c7             	mov    %rax,%rdi
    57c7:	e8 48 ef ff ff       	call   4714 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    57cc:	48 89 d8             	mov    %rbx,%rax
    57cf:	48 89 c7             	mov    %rax,%rdi
    57d2:	e8 89 dc ff ff       	call   3460 <_Unwind_Resume@plt>
    57d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57db:	c9                   	leave
    57dc:	c3                   	ret
    57dd:	90                   	nop

00000000000057de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    57de:	55                   	push   %rbp
    57df:	48 89 e5             	mov    %rsp,%rbp
    57e2:	48 83 ec 10          	sub    $0x10,%rsp
    57e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    57ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57f2:	48 89 c7             	mov    %rax,%rdi
    57f5:	e8 24 00 00 00       	call   581e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    57fa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    57fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5801:	48 8b 00             	mov    (%rax),%rax
    5804:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5808:	48 89 ce             	mov    %rcx,%rsi
    580b:	48 89 c7             	mov    %rax,%rdi
    580e:	e8 3e 0d 00 00       	call   6551 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5813:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5817:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    581b:	90                   	nop
    581c:	c9                   	leave
    581d:	c3                   	ret

000000000000581e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    581e:	55                   	push   %rbp
    581f:	48 89 e5             	mov    %rsp,%rbp
    5822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    582a:	5d                   	pop    %rbp
    582b:	c3                   	ret

000000000000582c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    582c:	55                   	push   %rbp
    582d:	48 89 e5             	mov    %rsp,%rbp
    5830:	48 83 ec 20          	sub    $0x20,%rsp
    5834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    583c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5840:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5848:	48 89 d6             	mov    %rdx,%rsi
    584b:	48 89 c7             	mov    %rax,%rdi
    584e:	e8 27 0d 00 00       	call   657a <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    5853:	90                   	nop
    5854:	c9                   	leave
    5855:	c3                   	ret

0000000000005856 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5856:	55                   	push   %rbp
    5857:	48 89 e5             	mov    %rsp,%rbp
    585a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    585e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5862:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5866:	5d                   	pop    %rbp
    5867:	c3                   	ret

0000000000005868 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5868:	55                   	push   %rbp
    5869:	48 89 e5             	mov    %rsp,%rbp
    586c:	48 83 ec 10          	sub    $0x10,%rsp
    5870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5878:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    587c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5880:	48 89 d6             	mov    %rdx,%rsi
    5883:	48 89 c7             	mov    %rax,%rdi
    5886:	e8 15 0d 00 00       	call   65a0 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    588b:	90                   	nop
    588c:	c9                   	leave
    588d:	c3                   	ret

000000000000588e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    588e:	55                   	push   %rbp
    588f:	48 89 e5             	mov    %rsp,%rbp
    5892:	48 83 ec 20          	sub    $0x20,%rsp
    5896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    589a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    589e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    58a2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    58a7:	74 17                	je     58c0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    58a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    58b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    58b5:	48 89 ce             	mov    %rcx,%rsi
    58b8:	48 89 c7             	mov    %rax,%rdi
    58bb:	e8 ef 0c 00 00       	call   65af <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    58c0:	90                   	nop
    58c1:	c9                   	leave
    58c2:	c3                   	ret
    58c3:	90                   	nop

00000000000058c4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    58c4:	55                   	push   %rbp
    58c5:	48 89 e5             	mov    %rsp,%rbp
    58c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58cc:	90                   	nop
    58cd:	5d                   	pop    %rbp
    58ce:	c3                   	ret
    58cf:	90                   	nop

00000000000058d0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    58d0:	55                   	push   %rbp
    58d1:	48 89 e5             	mov    %rsp,%rbp
    58d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58d8:	90                   	nop
    58d9:	5d                   	pop    %rbp
    58da:	c3                   	ret

00000000000058db <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    58db:	55                   	push   %rbp
    58dc:	48 89 e5             	mov    %rsp,%rbp
    58df:	53                   	push   %rbx
    58e0:	48 83 ec 28          	sub    $0x28,%rsp
    58e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    58e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    58ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    58f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    58f4:	48 89 d6             	mov    %rdx,%rsi
    58f7:	48 89 c7             	mov    %rax,%rdi
    58fa:	e8 25 01 00 00       	call   5a24 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    58ff:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5903:	48 89 c7             	mov    %rax,%rdi
    5906:	e8 d2 0c 00 00       	call   65dd <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    590b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    590f:	0f 92 c3             	setb   %bl
    5912:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5916:	48 89 c7             	mov    %rax,%rdi
    5919:	e8 44 f3 ff ff       	call   4c62 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    591e:	84 db                	test   %bl,%bl
    5920:	74 0f                	je     5931 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5922:	48 8d 05 a7 8f 00 00 	lea    0x8fa7(%rip),%rax        # e8d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    5929:	48 89 c7             	mov    %rax,%rdi
    592c:	e8 cf d7 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5931:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5935:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5939:	c9                   	leave
    593a:	c3                   	ret
    593b:	90                   	nop

000000000000593c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    593c:	55                   	push   %rbp
    593d:	48 89 e5             	mov    %rsp,%rbp
    5940:	53                   	push   %rbx
    5941:	48 83 ec 28          	sub    $0x28,%rsp
    5945:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5949:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    594d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5955:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5959:	48 89 d6             	mov    %rdx,%rsi
    595c:	48 89 c7             	mov    %rax,%rdi
    595f:	e8 bc 0c 00 00       	call   6620 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5964:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    596c:	48 89 d6             	mov    %rdx,%rsi
    596f:	48 89 c7             	mov    %rax,%rdi
    5972:	e8 db 0c 00 00       	call   6652 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    5977:	eb 1a                	jmp    5993 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    5979:	48 89 c3             	mov    %rax,%rbx
    597c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5980:	48 89 c7             	mov    %rax,%rdi
    5983:	e8 a8 ed ff ff       	call   4730 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5988:	48 89 d8             	mov    %rbx,%rax
    598b:	48 89 c7             	mov    %rax,%rdi
    598e:	e8 cd da ff ff       	call   3460 <_Unwind_Resume@plt>
    5993:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5997:	c9                   	leave
    5998:	c3                   	ret
    5999:	90                   	nop

000000000000599a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    599a:	55                   	push   %rbp
    599b:	48 89 e5             	mov    %rsp,%rbp
    599e:	48 83 ec 10          	sub    $0x10,%rsp
    59a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    59aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59ae:	48 89 c7             	mov    %rax,%rdi
    59b1:	e8 24 00 00 00       	call   59da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    59b6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    59b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59bd:	48 8b 00             	mov    (%rax),%rax
    59c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    59c4:	48 89 ce             	mov    %rcx,%rsi
    59c7:	48 89 c7             	mov    %rax,%rdi
    59ca:	e8 d9 0c 00 00       	call   66a8 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    59cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    59d3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    59d7:	90                   	nop
    59d8:	c9                   	leave
    59d9:	c3                   	ret

00000000000059da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    59da:	55                   	push   %rbp
    59db:	48 89 e5             	mov    %rsp,%rbp
    59de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    59e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59e6:	5d                   	pop    %rbp
    59e7:	c3                   	ret

00000000000059e8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    59e8:	55                   	push   %rbp
    59e9:	48 89 e5             	mov    %rsp,%rbp
    59ec:	48 83 ec 20          	sub    $0x20,%rsp
    59f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    59fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a04:	48 89 d6             	mov    %rdx,%rsi
    5a07:	48 89 c7             	mov    %rax,%rdi
    5a0a:	e8 c2 0c 00 00       	call   66d1 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    5a0f:	90                   	nop
    5a10:	c9                   	leave
    5a11:	c3                   	ret

0000000000005a12 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5a12:	55                   	push   %rbp
    5a13:	48 89 e5             	mov    %rsp,%rbp
    5a16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5a1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a22:	5d                   	pop    %rbp
    5a23:	c3                   	ret

0000000000005a24 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5a24:	55                   	push   %rbp
    5a25:	48 89 e5             	mov    %rsp,%rbp
    5a28:	48 83 ec 10          	sub    $0x10,%rsp
    5a2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5a34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a3c:	48 89 d6             	mov    %rdx,%rsi
    5a3f:	48 89 c7             	mov    %rax,%rdi
    5a42:	e8 b1 0c 00 00       	call   66f8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    5a47:	90                   	nop
    5a48:	c9                   	leave
    5a49:	c3                   	ret

0000000000005a4a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5a4a:	55                   	push   %rbp
    5a4b:	48 89 e5             	mov    %rsp,%rbp
    5a4e:	48 83 ec 20          	sub    $0x20,%rsp
    5a52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5a5e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5a63:	74 17                	je     5a7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5a65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a6d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5a71:	48 89 ce             	mov    %rcx,%rsi
    5a74:	48 89 c7             	mov    %rax,%rdi
    5a77:	e8 8b 0c 00 00       	call   6707 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    5a7c:	90                   	nop
    5a7d:	c9                   	leave
    5a7e:	c3                   	ret
    5a7f:	90                   	nop

0000000000005a80 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a80:	55                   	push   %rbp
    5a81:	48 89 e5             	mov    %rsp,%rbp
    5a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a88:	90                   	nop
    5a89:	5d                   	pop    %rbp
    5a8a:	c3                   	ret
    5a8b:	90                   	nop

0000000000005a8c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a8c:	55                   	push   %rbp
    5a8d:	48 89 e5             	mov    %rsp,%rbp
    5a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a94:	90                   	nop
    5a95:	5d                   	pop    %rbp
    5a96:	c3                   	ret

0000000000005a97 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5a97:	55                   	push   %rbp
    5a98:	48 89 e5             	mov    %rsp,%rbp
    5a9b:	53                   	push   %rbx
    5a9c:	48 83 ec 28          	sub    $0x28,%rsp
    5aa0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5aa4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5aa8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5aac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5ab0:	48 89 d6             	mov    %rdx,%rsi
    5ab3:	48 89 c7             	mov    %rax,%rdi
    5ab6:	e8 25 01 00 00       	call   5be0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    5abb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5abf:	48 89 c7             	mov    %rax,%rdi
    5ac2:	e8 6e 0c 00 00       	call   6735 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5ac7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5acb:	0f 92 c3             	setb   %bl
    5ace:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5ad2:	48 89 c7             	mov    %rax,%rdi
    5ad5:	e8 ec f2 ff ff       	call   4dc6 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5ada:	84 db                	test   %bl,%bl
    5adc:	74 0f                	je     5aed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5ade:	48 8d 05 eb 8d 00 00 	lea    0x8deb(%rip),%rax        # e8d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    5ae5:	48 89 c7             	mov    %rax,%rdi
    5ae8:	e8 13 d6 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5aed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5af1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5af5:	c9                   	leave
    5af6:	c3                   	ret
    5af7:	90                   	nop

0000000000005af8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5af8:	55                   	push   %rbp
    5af9:	48 89 e5             	mov    %rsp,%rbp
    5afc:	53                   	push   %rbx
    5afd:	48 83 ec 28          	sub    $0x28,%rsp
    5b01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5b09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5b0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b15:	48 89 d6             	mov    %rdx,%rsi
    5b18:	48 89 c7             	mov    %rax,%rdi
    5b1b:	e8 58 0c 00 00       	call   6778 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5b20:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b28:	48 89 d6             	mov    %rdx,%rsi
    5b2b:	48 89 c7             	mov    %rax,%rdi
    5b2e:	e8 77 0c 00 00       	call   67aa <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    5b33:	eb 1a                	jmp    5b4f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5b35:	48 89 c3             	mov    %rax,%rbx
    5b38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b3c:	48 89 c7             	mov    %rax,%rdi
    5b3f:	e8 08 ec ff ff       	call   474c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    5b44:	48 89 d8             	mov    %rbx,%rax
    5b47:	48 89 c7             	mov    %rax,%rdi
    5b4a:	e8 11 d9 ff ff       	call   3460 <_Unwind_Resume@plt>
    5b4f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b53:	c9                   	leave
    5b54:	c3                   	ret
    5b55:	90                   	nop

0000000000005b56 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5b56:	55                   	push   %rbp
    5b57:	48 89 e5             	mov    %rsp,%rbp
    5b5a:	48 83 ec 10          	sub    $0x10,%rsp
    5b5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b6a:	48 89 c7             	mov    %rax,%rdi
    5b6d:	e8 24 00 00 00       	call   5b96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5b72:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b79:	48 8b 00             	mov    (%rax),%rax
    5b7c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5b80:	48 89 ce             	mov    %rcx,%rsi
    5b83:	48 89 c7             	mov    %rax,%rdi
    5b86:	e8 7f 0c 00 00       	call   680a <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5b8b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5b8f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5b93:	90                   	nop
    5b94:	c9                   	leave
    5b95:	c3                   	ret

0000000000005b96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5b96:	55                   	push   %rbp
    5b97:	48 89 e5             	mov    %rsp,%rbp
    5b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba2:	5d                   	pop    %rbp
    5ba3:	c3                   	ret

0000000000005ba4 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5ba4:	55                   	push   %rbp
    5ba5:	48 89 e5             	mov    %rsp,%rbp
    5ba8:	48 83 ec 20          	sub    $0x20,%rsp
    5bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5bb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bc0:	48 89 d6             	mov    %rdx,%rsi
    5bc3:	48 89 c7             	mov    %rax,%rdi
    5bc6:	e8 68 0c 00 00       	call   6833 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    5bcb:	90                   	nop
    5bcc:	c9                   	leave
    5bcd:	c3                   	ret

0000000000005bce <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5bce:	55                   	push   %rbp
    5bcf:	48 89 e5             	mov    %rsp,%rbp
    5bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5bda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bde:	5d                   	pop    %rbp
    5bdf:	c3                   	ret

0000000000005be0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5be0:	55                   	push   %rbp
    5be1:	48 89 e5             	mov    %rsp,%rbp
    5be4:	48 83 ec 10          	sub    $0x10,%rsp
    5be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5bf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bf8:	48 89 d6             	mov    %rdx,%rsi
    5bfb:	48 89 c7             	mov    %rax,%rdi
    5bfe:	e8 57 0c 00 00       	call   685a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    5c03:	90                   	nop
    5c04:	c9                   	leave
    5c05:	c3                   	ret

0000000000005c06 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5c06:	55                   	push   %rbp
    5c07:	48 89 e5             	mov    %rsp,%rbp
    5c0a:	48 83 ec 20          	sub    $0x20,%rsp
    5c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c16:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5c1a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5c1f:	74 17                	je     5c38 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5c21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c2d:	48 89 ce             	mov    %rcx,%rsi
    5c30:	48 89 c7             	mov    %rax,%rdi
    5c33:	e8 31 0c 00 00       	call   6869 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    5c38:	90                   	nop
    5c39:	c9                   	leave
    5c3a:	c3                   	ret
    5c3b:	90                   	nop

0000000000005c3c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5c3c:	55                   	push   %rbp
    5c3d:	48 89 e5             	mov    %rsp,%rbp
    5c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c44:	90                   	nop
    5c45:	5d                   	pop    %rbp
    5c46:	c3                   	ret
    5c47:	90                   	nop

0000000000005c48 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5c48:	55                   	push   %rbp
    5c49:	48 89 e5             	mov    %rsp,%rbp
    5c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c50:	90                   	nop
    5c51:	5d                   	pop    %rbp
    5c52:	c3                   	ret

0000000000005c53 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5c53:	55                   	push   %rbp
    5c54:	48 89 e5             	mov    %rsp,%rbp
    5c57:	53                   	push   %rbx
    5c58:	48 83 ec 28          	sub    $0x28,%rsp
    5c5c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5c60:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5c64:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5c68:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c6c:	48 89 d6             	mov    %rdx,%rsi
    5c6f:	48 89 c7             	mov    %rax,%rdi
    5c72:	e8 d7 01 00 00       	call   5e4e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    5c77:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c7b:	48 89 c7             	mov    %rax,%rdi
    5c7e:	e8 14 0c 00 00       	call   6897 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    5c83:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5c87:	0f 92 c3             	setb   %bl
    5c8a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c8e:	48 89 c7             	mov    %rax,%rdi
    5c91:	e8 cc f2 ff ff       	call   4f62 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    5c96:	84 db                	test   %bl,%bl
    5c98:	74 0f                	je     5ca9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    5c9a:	48 8d 05 2f 8c 00 00 	lea    0x8c2f(%rip),%rax        # e8d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    5ca1:	48 89 c7             	mov    %rax,%rdi
    5ca4:	e8 57 d4 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5ca9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5cad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5cb1:	c9                   	leave
    5cb2:	c3                   	ret
    5cb3:	90                   	nop

0000000000005cb4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5cb4:	55                   	push   %rbp
    5cb5:	48 89 e5             	mov    %rsp,%rbp
    5cb8:	53                   	push   %rbx
    5cb9:	48 83 ec 28          	sub    $0x28,%rsp
    5cbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5cc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5cc5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5cc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ccd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5cd1:	48 89 d6             	mov    %rdx,%rsi
    5cd4:	48 89 c7             	mov    %rax,%rdi
    5cd7:	e8 fe 0b 00 00       	call   68da <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    5cdc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5ce0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ce4:	48 89 d6             	mov    %rdx,%rsi
    5ce7:	48 89 c7             	mov    %rax,%rdi
    5cea:	e8 1d 0c 00 00       	call   690c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    5cef:	eb 1a                	jmp    5d0b <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    5cf1:	48 89 c3             	mov    %rax,%rbx
    5cf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cf8:	48 89 c7             	mov    %rax,%rdi
    5cfb:	e8 68 ea ff ff       	call   4768 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    5d00:	48 89 d8             	mov    %rbx,%rax
    5d03:	48 89 c7             	mov    %rax,%rdi
    5d06:	e8 55 d7 ff ff       	call   3460 <_Unwind_Resume@plt>
    5d0b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d0f:	c9                   	leave
    5d10:	c3                   	ret
    5d11:	90                   	nop

0000000000005d12 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5d12:	55                   	push   %rbp
    5d13:	48 89 e5             	mov    %rsp,%rbp
    5d16:	48 83 ec 10          	sub    $0x10,%rsp
    5d1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d26:	48 89 c7             	mov    %rax,%rdi
    5d29:	e8 24 00 00 00       	call   5d52 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    5d2e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d35:	48 8b 00             	mov    (%rax),%rax
    5d38:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d3c:	48 89 ce             	mov    %rcx,%rsi
    5d3f:	48 89 c7             	mov    %rax,%rdi
    5d42:	e8 26 0c 00 00       	call   696d <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5d47:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5d4b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5d4f:	90                   	nop
    5d50:	c9                   	leave
    5d51:	c3                   	ret

0000000000005d52 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5d52:	55                   	push   %rbp
    5d53:	48 89 e5             	mov    %rsp,%rbp
    5d56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d5e:	5d                   	pop    %rbp
    5d5f:	c3                   	ret

0000000000005d60 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5d60:	55                   	push   %rbp
    5d61:	48 89 e5             	mov    %rsp,%rbp
    5d64:	48 83 ec 20          	sub    $0x20,%rsp
    5d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d70:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5d74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d7c:	48 89 d6             	mov    %rdx,%rsi
    5d7f:	48 89 c7             	mov    %rax,%rdi
    5d82:	e8 0f 0c 00 00       	call   6996 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    5d87:	90                   	nop
    5d88:	c9                   	leave
    5d89:	c3                   	ret

0000000000005d8a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5d8a:	55                   	push   %rbp
    5d8b:	48 89 e5             	mov    %rsp,%rbp
    5d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5d96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d9a:	48 8b 10             	mov    (%rax),%rdx
    5d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da1:	48 89 10             	mov    %rdx,(%rax)
    5da4:	90                   	nop
    5da5:	5d                   	pop    %rbp
    5da6:	c3                   	ret
    5da7:	90                   	nop

0000000000005da8 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5da8:	55                   	push   %rbp
    5da9:	48 89 e5             	mov    %rsp,%rbp
    5dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5db4:	5d                   	pop    %rbp
    5db5:	c3                   	ret

0000000000005db6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    5db6:	55                   	push   %rbp
    5db7:	48 89 e5             	mov    %rsp,%rbp
    5dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    5dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc2:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    5dc6:	5d                   	pop    %rbp
    5dc7:	c3                   	ret

0000000000005dc8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    5dc8:	55                   	push   %rbp
    5dc9:	48 89 e5             	mov    %rsp,%rbp
    5dcc:	48 83 ec 10          	sub    $0x10,%rsp
    5dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    5dd4:	e8 d7 e8 ff ff       	call   46b0 <_ZSt23__is_constant_evaluatedv>
    5dd9:	84 c0                	test   %al,%al
    5ddb:	74 1a                	je     5df7 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    5ddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5de1:	48 89 c7             	mov    %rax,%rdi
    5de4:	e8 cd ff ff ff       	call   5db6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    5de9:	83 f0 01             	xor    $0x1,%eax
    5dec:	84 c0                	test   %al,%al
    5dee:	74 07                	je     5df7 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    5df0:	b8 01 00 00 00       	mov    $0x1,%eax
    5df5:	eb 05                	jmp    5dfc <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    5df7:	b8 00 00 00 00       	mov    $0x0,%eax
    5dfc:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    5dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e02:	48 89 c7             	mov    %rax,%rdi
    5e05:	e8 b2 0b 00 00       	call   69bc <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    5e0a:	c9                   	leave
    5e0b:	c3                   	ret

0000000000005e0c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    5e0c:	55                   	push   %rbp
    5e0d:	48 89 e5             	mov    %rsp,%rbp
    5e10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    5e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e18:	5d                   	pop    %rbp
    5e19:	c3                   	ret

0000000000005e1a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    5e1a:	55                   	push   %rbp
    5e1b:	48 89 e5             	mov    %rsp,%rbp
    5e1e:	53                   	push   %rbx
    5e1f:	48 83 ec 18          	sub    $0x18,%rsp
    5e23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5e27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    5e2b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5e2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5e33:	48 89 c7             	mov    %rax,%rdi
    5e36:	e8 d1 ff ff ff       	call   5e0c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    5e3b:	48 89 c6             	mov    %rax,%rsi
    5e3e:	48 89 df             	mov    %rbx,%rdi
    5e41:	e8 84 0b 00 00       	call   69ca <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    5e46:	90                   	nop
    5e47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e4b:	c9                   	leave
    5e4c:	c3                   	ret
    5e4d:	90                   	nop

0000000000005e4e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5e4e:	55                   	push   %rbp
    5e4f:	48 89 e5             	mov    %rsp,%rbp
    5e52:	48 83 ec 10          	sub    $0x10,%rsp
    5e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5e5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e66:	48 89 d6             	mov    %rdx,%rsi
    5e69:	48 89 c7             	mov    %rax,%rdi
    5e6c:	e8 9f 0b 00 00       	call   6a10 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    5e71:	90                   	nop
    5e72:	c9                   	leave
    5e73:	c3                   	ret

0000000000005e74 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    5e74:	55                   	push   %rbp
    5e75:	48 89 e5             	mov    %rsp,%rbp
    5e78:	48 83 ec 20          	sub    $0x20,%rsp
    5e7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5e88:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5e8d:	74 17                	je     5ea6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e93:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e97:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e9b:	48 89 ce             	mov    %rcx,%rsi
    5e9e:	48 89 c7             	mov    %rax,%rdi
    5ea1:	e8 79 0b 00 00       	call   6a1f <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    5ea6:	90                   	nop
    5ea7:	c9                   	leave
    5ea8:	c3                   	ret
    5ea9:	90                   	nop

0000000000005eaa <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5eaa:	55                   	push   %rbp
    5eab:	48 89 e5             	mov    %rsp,%rbp
    5eae:	48 83 ec 10          	sub    $0x10,%rsp
    5eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eba:	48 89 c7             	mov    %rax,%rdi
    5ebd:	e8 8c 0b 00 00       	call   6a4e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    5ec2:	90                   	nop
    5ec3:	c9                   	leave
    5ec4:	c3                   	ret
    5ec5:	90                   	nop

0000000000005ec6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5ec6:	55                   	push   %rbp
    5ec7:	48 89 e5             	mov    %rsp,%rbp
    5eca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5edd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5ee4:	00 
    5ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5ef0:	00 
	{ }
    5ef1:	90                   	nop
    5ef2:	5d                   	pop    %rbp
    5ef3:	c3                   	ret

0000000000005ef4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
    5ef4:	55                   	push   %rbp
    5ef5:	48 89 e5             	mov    %rsp,%rbp
    5ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5efc:	90                   	nop
    5efd:	5d                   	pop    %rbp
    5efe:	c3                   	ret
    5eff:	90                   	nop

0000000000005f00 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5f00:	55                   	push   %rbp
    5f01:	48 89 e5             	mov    %rsp,%rbp
    5f04:	48 83 ec 20          	sub    $0x20,%rsp
    5f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5f14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5f19:	74 17                	je     5f32 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f27:	48 89 ce             	mov    %rcx,%rsi
    5f2a:	48 89 c7             	mov    %rax,%rdi
    5f2d:	e8 27 0b 00 00       	call   6a59 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    5f32:	90                   	nop
    5f33:	c9                   	leave
    5f34:	c3                   	ret
    5f35:	90                   	nop

0000000000005f36 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5f36:	55                   	push   %rbp
    5f37:	48 89 e5             	mov    %rsp,%rbp
    5f3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f42:	5d                   	pop    %rbp
    5f43:	c3                   	ret

0000000000005f44 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5f44:	55                   	push   %rbp
    5f45:	48 89 e5             	mov    %rsp,%rbp
    5f48:	48 83 ec 20          	sub    $0x20,%rsp
    5f4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5f58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f60:	48 89 d6             	mov    %rdx,%rsi
    5f63:	48 89 c7             	mov    %rax,%rdi
    5f66:	e8 1c 0b 00 00       	call   6a87 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    5f6b:	90                   	nop
    5f6c:	c9                   	leave
    5f6d:	c3                   	ret

0000000000005f6e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5f6e:	55                   	push   %rbp
    5f6f:	48 89 e5             	mov    %rsp,%rbp
    5f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5f7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f7e:	5d                   	pop    %rbp
    5f7f:	c3                   	ret

0000000000005f80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5f80:	55                   	push   %rbp
    5f81:	48 89 e5             	mov    %rsp,%rbp
    5f84:	48 83 ec 20          	sub    $0x20,%rsp
    5f88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5f8c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    5f93:	07 7e 00 
    5f96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5f9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f9e:	48 89 c7             	mov    %rax,%rdi
    5fa1:	e8 07 0b 00 00       	call   6aad <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    5fa6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5faa:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5fae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5fb2:	48 89 d6             	mov    %rdx,%rsi
    5fb5:	48 89 c7             	mov    %rax,%rdi
    5fb8:	e8 0a 0b 00 00       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    5fbd:	48 8b 00             	mov    (%rax),%rax
      }
    5fc0:	c9                   	leave
    5fc1:	c3                   	ret

0000000000005fc2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5fc2:	55                   	push   %rbp
    5fc3:	48 89 e5             	mov    %rsp,%rbp
    5fc6:	48 83 ec 10          	sub    $0x10,%rsp
    5fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5fd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fda:	48 89 d6             	mov    %rdx,%rsi
    5fdd:	48 89 c7             	mov    %rax,%rdi
    5fe0:	e8 6b f4 ff ff       	call   5450 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    5fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe9:	48 89 c7             	mov    %rax,%rdi
    5fec:	e8 01 0b 00 00       	call   6af2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    5ff1:	90                   	nop
    5ff2:	c9                   	leave
    5ff3:	c3                   	ret

0000000000005ff4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5ff4:	55                   	push   %rbp
    5ff5:	48 89 e5             	mov    %rsp,%rbp
    5ff8:	48 83 ec 10          	sub    $0x10,%rsp
    5ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6000:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6004:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    600c:	48 89 d6             	mov    %rdx,%rsi
    600f:	48 89 c7             	mov    %rax,%rdi
    6012:	e8 09 0b 00 00       	call   6b20 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    6017:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    601b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    601e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6022:	48 8b 10             	mov    (%rax),%rdx
    6025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6029:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    602d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6031:	48 8b 08             	mov    (%rax),%rcx
    6034:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6038:	48 89 d0             	mov    %rdx,%rax
    603b:	48 c1 e0 06          	shl    $0x6,%rax
    603f:	48 01 d0             	add    %rdx,%rax
    6042:	48 c1 e0 02          	shl    $0x2,%rax
    6046:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    604a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    604e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6052:	90                   	nop
    6053:	c9                   	leave
    6054:	c3                   	ret

0000000000006055 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6055:	55                   	push   %rbp
    6056:	48 89 e5             	mov    %rsp,%rbp
    6059:	48 83 ec 20          	sub    $0x20,%rsp
    605d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6061:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6065:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    6069:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    606d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6071:	48 89 d6             	mov    %rdx,%rsi
    6074:	48 89 c7             	mov    %rax,%rdi
    6077:	e8 d7 0a 00 00       	call   6b53 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    607c:	c9                   	leave
    607d:	c3                   	ret

000000000000607e <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    607e:	55                   	push   %rbp
    607f:	48 89 e5             	mov    %rsp,%rbp
    6082:	48 83 ec 10          	sub    $0x10,%rsp
    6086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    608a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    608e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6096:	48 89 d6             	mov    %rdx,%rsi
    6099:	48 89 c7             	mov    %rax,%rdi
    609c:	e8 db 0a 00 00       	call   6b7c <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    60a1:	90                   	nop
    60a2:	c9                   	leave
    60a3:	c3                   	ret

00000000000060a4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    60a4:	55                   	push   %rbp
    60a5:	48 89 e5             	mov    %rsp,%rbp
    60a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60b0:	90                   	nop
    60b1:	5d                   	pop    %rbp
    60b2:	c3                   	ret

00000000000060b3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    60b3:	55                   	push   %rbp
    60b4:	48 89 e5             	mov    %rsp,%rbp
    60b7:	48 83 ec 20          	sub    $0x20,%rsp
    60bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    60c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    60cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60d3:	48 89 ce             	mov    %rcx,%rsi
    60d6:	48 89 c7             	mov    %rax,%rdi
    60d9:	e8 ae 0a 00 00       	call   6b8c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    60de:	90                   	nop
    60df:	c9                   	leave
    60e0:	c3                   	ret

00000000000060e1 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    60e1:	55                   	push   %rbp
    60e2:	48 89 e5             	mov    %rsp,%rbp
    60e5:	48 83 ec 20          	sub    $0x20,%rsp
    60e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    60ed:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    60f4:	ff ff 0f 
    60f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    60fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60ff:	48 89 c7             	mov    %rax,%rdi
    6102:	e8 bf 0a 00 00       	call   6bc6 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    6107:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    610b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    610f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6113:	48 89 d6             	mov    %rdx,%rsi
    6116:	48 89 c7             	mov    %rax,%rdi
    6119:	e8 a9 09 00 00       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    611e:	48 8b 00             	mov    (%rax),%rax
      }
    6121:	c9                   	leave
    6122:	c3                   	ret
    6123:	90                   	nop

0000000000006124 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6124:	55                   	push   %rbp
    6125:	48 89 e5             	mov    %rsp,%rbp
    6128:	48 83 ec 10          	sub    $0x10,%rsp
    612c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6130:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6134:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    613c:	48 89 d6             	mov    %rdx,%rsi
    613f:	48 89 c7             	mov    %rax,%rdi
    6142:	e8 65 f5 ff ff       	call   56ac <_ZNSaIPKcEC1ERKS1_>
    6147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614b:	48 89 c7             	mov    %rax,%rdi
    614e:	e8 8d 0a 00 00       	call   6be0 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6153:	90                   	nop
    6154:	c9                   	leave
    6155:	c3                   	ret

0000000000006156 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6156:	55                   	push   %rbp
    6157:	48 89 e5             	mov    %rsp,%rbp
    615a:	48 83 ec 10          	sub    $0x10,%rsp
    615e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6166:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    616a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616e:	48 89 d6             	mov    %rdx,%rsi
    6171:	48 89 c7             	mov    %rax,%rdi
    6174:	e8 95 0a 00 00       	call   6c0e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    6179:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    617d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6184:	48 8b 10             	mov    (%rax),%rdx
    6187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    618f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6193:	48 8b 00             	mov    (%rax),%rax
    6196:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    619a:	48 c1 e2 03          	shl    $0x3,%rdx
    619e:	48 01 c2             	add    %rax,%rdx
    61a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    61a9:	90                   	nop
    61aa:	c9                   	leave
    61ab:	c3                   	ret

00000000000061ac <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    61ac:	55                   	push   %rbp
    61ad:	48 89 e5             	mov    %rsp,%rbp
    61b0:	48 83 ec 20          	sub    $0x20,%rsp
    61b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    61c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c8:	48 89 d6             	mov    %rdx,%rsi
    61cb:	48 89 c7             	mov    %rax,%rdi
    61ce:	e8 6e 0a 00 00       	call   6c41 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    61d3:	c9                   	leave
    61d4:	c3                   	ret

00000000000061d5 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    61d5:	55                   	push   %rbp
    61d6:	48 89 e5             	mov    %rsp,%rbp
    61d9:	48 83 ec 10          	sub    $0x10,%rsp
    61dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    61e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ed:	48 89 d6             	mov    %rdx,%rsi
    61f0:	48 89 c7             	mov    %rax,%rdi
    61f3:	e8 72 0a 00 00       	call   6c6a <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    61f8:	90                   	nop
    61f9:	c9                   	leave
    61fa:	c3                   	ret

00000000000061fb <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    61fb:	55                   	push   %rbp
    61fc:	48 89 e5             	mov    %rsp,%rbp
    61ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6207:	5d                   	pop    %rbp
    6208:	c3                   	ret

0000000000006209 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    6209:	55                   	push   %rbp
    620a:	48 89 e5             	mov    %rsp,%rbp
    620d:	48 83 ec 20          	sub    $0x20,%rsp
    6211:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6215:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6219:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    621d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6221:	48 89 c7             	mov    %rax,%rdi
    6224:	e8 d2 ff ff ff       	call   61fb <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    6229:	48 89 c2             	mov    %rax,%rdx
    622c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6234:	48 89 ce             	mov    %rcx,%rsi
    6237:	48 89 c7             	mov    %rax,%rdi
    623a:	e8 3b 0a 00 00       	call   6c7a <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    623f:	90                   	nop
    6240:	c9                   	leave
    6241:	c3                   	ret

0000000000006242 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6242:	55                   	push   %rbp
    6243:	48 89 e5             	mov    %rsp,%rbp
    6246:	48 83 ec 20          	sub    $0x20,%rsp
    624a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    624e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6252:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6256:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    625a:	48 89 d6             	mov    %rdx,%rsi
    625d:	48 89 c7             	mov    %rax,%rdi
    6260:	e8 57 0a 00 00       	call   6cbc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6269:	c9                   	leave
    626a:	c3                   	ret
    626b:	90                   	nop

000000000000626c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    626c:	55                   	push   %rbp
    626d:	48 89 e5             	mov    %rsp,%rbp
    6270:	53                   	push   %rbx
    6271:	48 83 ec 68          	sub    $0x68,%rsp
    6275:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    6279:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    627d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    6281:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6285:	48 8d 15 75 86 00 00 	lea    0x8675(%rip),%rdx        # e901 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf9>
    628c:	be 01 00 00 00       	mov    $0x1,%esi
    6291:	48 89 c7             	mov    %rax,%rdi
    6294:	e8 41 0a 00 00       	call   6cda <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    6299:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    629d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    62a1:	48 8b 00             	mov    (%rax),%rax
    62a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    62a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    62ac:	48 8b 40 08          	mov    0x8(%rax),%rax
    62b0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    62b4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    62b8:	48 89 c7             	mov    %rax,%rdi
    62bb:	e8 e2 0a 00 00       	call   6da2 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    62c0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    62c4:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    62c8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    62cc:	48 89 d6             	mov    %rdx,%rsi
    62cf:	48 89 c7             	mov    %rax,%rdi
    62d2:	e8 f0 0a 00 00       	call   6dc7 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    62d7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    62db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    62df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62e3:	48 89 d6             	mov    %rdx,%rsi
    62e6:	48 89 c7             	mov    %rax,%rdi
    62e9:	e8 20 09 00 00       	call   6c0e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    62ee:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    62f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    62fa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    62fe:	48 89 c7             	mov    %rax,%rdi
    6301:	e8 f5 fe ff ff       	call   61fb <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    6306:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    6309:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    630d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    6314:	00 
	  _Alloc_traits::construct(this->_M_impl,
    6315:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6319:	48 01 c1             	add    %rax,%rcx
    631c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6320:	48 89 ce             	mov    %rcx,%rsi
    6323:	48 89 c7             	mov    %rax,%rdi
    6326:	e8 de fe ff ff       	call   6209 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    632b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    6332:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    6333:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6337:	48 89 c7             	mov    %rax,%rdi
    633a:	e8 83 f2 ff ff       	call   55c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    633f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    6342:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6346:	48 89 c7             	mov    %rax,%rdi
    6349:	e8 ee 0a 00 00       	call   6e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    634e:	48 8b 30             	mov    (%rax),%rsi
    6351:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6355:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6359:	48 89 d9             	mov    %rbx,%rcx
    635c:	48 89 c7             	mov    %rax,%rdi
    635f:	e8 a5 0a 00 00       	call   6e09 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    6364:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    6368:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    636d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6371:	48 89 c7             	mov    %rax,%rdi
    6374:	e8 49 f2 ff ff       	call   55c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    6379:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    637c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6380:	48 89 c7             	mov    %rax,%rdi
    6383:	e8 b4 0a 00 00       	call   6e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    6388:	48 8b 00             	mov    (%rax),%rax
    638b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    638f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    6393:	48 89 d9             	mov    %rbx,%rcx
    6396:	48 89 c7             	mov    %rax,%rdi
    6399:	e8 6b 0a 00 00       	call   6e09 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    639e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    63a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    63a6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    63aa:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    63ae:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    63b2:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    63b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    63ba:	48 89 ce             	mov    %rcx,%rsi
    63bd:	48 89 c7             	mov    %rax,%rdi
    63c0:	e8 0d f3 ff ff       	call   56d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    63c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    63c9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    63cd:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    63d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    63d4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    63d8:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    63dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63e0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    63e7:	00 
    63e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63ec:	48 01 c2             	add    %rax,%rdx
    63ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    63f3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    63f7:	90                   	nop
    63f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63fc:	c9                   	leave
    63fd:	c3                   	ret

00000000000063fe <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    63fe:	55                   	push   %rbp
    63ff:	48 89 e5             	mov    %rsp,%rbp
    6402:	48 83 ec 20          	sub    $0x20,%rsp
    6406:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    640a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    640e:	48 89 c7             	mov    %rax,%rdi
    6411:	e8 2c fe ff ff       	call   6242 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    6416:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    641a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    641e:	be 01 00 00 00       	mov    $0x1,%esi
    6423:	48 89 c7             	mov    %rax,%rdi
    6426:	e8 1f 0a 00 00       	call   6e4a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    642b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    642f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    6433:	48 89 c7             	mov    %rax,%rdi
    6436:	e8 51 0a 00 00       	call   6e8c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    643b:	c9                   	leave
    643c:	c3                   	ret
    643d:	90                   	nop

000000000000643e <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    643e:	55                   	push   %rbp
    643f:	48 89 e5             	mov    %rsp,%rbp
    6442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6446:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    644a:	90                   	nop
    644b:	5d                   	pop    %rbp
    644c:	c3                   	ret

000000000000644d <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    644d:	55                   	push   %rbp
    644e:	48 89 e5             	mov    %rsp,%rbp
    6451:	48 83 ec 20          	sub    $0x20,%rsp
    6455:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6459:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    645d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6461:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6465:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646d:	48 89 ce             	mov    %rcx,%rsi
    6470:	48 89 c7             	mov    %rax,%rdi
    6473:	e8 26 0a 00 00       	call   6e9e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    6478:	90                   	nop
    6479:	c9                   	leave
    647a:	c3                   	ret

000000000000647b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    647b:	55                   	push   %rbp
    647c:	48 89 e5             	mov    %rsp,%rbp
    647f:	48 83 ec 20          	sub    $0x20,%rsp
    6483:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6487:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    648e:	03 3f 00 
    6491:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6499:	48 89 c7             	mov    %rax,%rdi
    649c:	e8 2e 0a 00 00       	call   6ecf <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    64a1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    64a5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    64a9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    64ad:	48 89 d6             	mov    %rdx,%rsi
    64b0:	48 89 c7             	mov    %rax,%rdi
    64b3:	e8 0f 06 00 00       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    64b8:	48 8b 00             	mov    (%rax),%rax
      }
    64bb:	c9                   	leave
    64bc:	c3                   	ret
    64bd:	90                   	nop

00000000000064be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    64be:	55                   	push   %rbp
    64bf:	48 89 e5             	mov    %rsp,%rbp
    64c2:	48 83 ec 10          	sub    $0x10,%rsp
    64c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    64ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d6:	48 89 d6             	mov    %rdx,%rsi
    64d9:	48 89 c7             	mov    %rax,%rdi
    64dc:	e8 87 f3 ff ff       	call   5868 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    64e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e5:	48 89 c7             	mov    %rax,%rdi
    64e8:	e8 fd 09 00 00       	call   6eea <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    64ed:	90                   	nop
    64ee:	c9                   	leave
    64ef:	c3                   	ret

00000000000064f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    64f0:	55                   	push   %rbp
    64f1:	48 89 e5             	mov    %rsp,%rbp
    64f4:	48 83 ec 10          	sub    $0x10,%rsp
    64f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6500:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6508:	48 89 d6             	mov    %rdx,%rsi
    650b:	48 89 c7             	mov    %rax,%rdi
    650e:	e8 05 0a 00 00       	call   6f18 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    6513:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6517:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    651a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    651e:	48 8b 10             	mov    (%rax),%rdx
    6521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6525:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    652d:	48 8b 08             	mov    (%rax),%rcx
    6530:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6534:	48 89 d0             	mov    %rdx,%rax
    6537:	48 c1 e0 06          	shl    $0x6,%rax
    653b:	48 01 d0             	add    %rdx,%rax
    653e:	48 c1 e0 03          	shl    $0x3,%rax
    6542:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    654e:	90                   	nop
    654f:	c9                   	leave
    6550:	c3                   	ret

0000000000006551 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6551:	55                   	push   %rbp
    6552:	48 89 e5             	mov    %rsp,%rbp
    6555:	48 83 ec 20          	sub    $0x20,%rsp
    6559:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    655d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6561:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6565:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656d:	48 89 d6             	mov    %rdx,%rsi
    6570:	48 89 c7             	mov    %rax,%rdi
    6573:	e8 d3 09 00 00       	call   6f4b <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    6578:	c9                   	leave
    6579:	c3                   	ret

000000000000657a <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    657a:	55                   	push   %rbp
    657b:	48 89 e5             	mov    %rsp,%rbp
    657e:	48 83 ec 10          	sub    $0x10,%rsp
    6582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6586:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    658a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    658e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6592:	48 89 d6             	mov    %rdx,%rsi
    6595:	48 89 c7             	mov    %rax,%rdi
    6598:	e8 d7 09 00 00       	call   6f74 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    659d:	90                   	nop
    659e:	c9                   	leave
    659f:	c3                   	ret

00000000000065a0 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
    65a0:	55                   	push   %rbp
    65a1:	48 89 e5             	mov    %rsp,%rbp
    65a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65ac:	90                   	nop
    65ad:	5d                   	pop    %rbp
    65ae:	c3                   	ret

00000000000065af <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    65af:	55                   	push   %rbp
    65b0:	48 89 e5             	mov    %rsp,%rbp
    65b3:	48 83 ec 20          	sub    $0x20,%rsp
    65b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65bf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    65c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65c7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    65cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65cf:	48 89 ce             	mov    %rcx,%rsi
    65d2:	48 89 c7             	mov    %rax,%rdi
    65d5:	e8 aa 09 00 00       	call   6f84 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    65da:	90                   	nop
    65db:	c9                   	leave
    65dc:	c3                   	ret

00000000000065dd <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    65dd:	55                   	push   %rbp
    65de:	48 89 e5             	mov    %rsp,%rbp
    65e1:	48 83 ec 20          	sub    $0x20,%rsp
    65e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    65e9:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    65f0:	ff ff 0f 
    65f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    65f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65fb:	48 89 c7             	mov    %rax,%rdi
    65fe:	e8 bb 09 00 00       	call   6fbe <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    6603:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6607:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    660b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    660f:	48 89 d6             	mov    %rdx,%rsi
    6612:	48 89 c7             	mov    %rax,%rdi
    6615:	e8 ad 04 00 00       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    661a:	48 8b 00             	mov    (%rax),%rax
      }
    661d:	c9                   	leave
    661e:	c3                   	ret
    661f:	90                   	nop

0000000000006620 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6620:	55                   	push   %rbp
    6621:	48 89 e5             	mov    %rsp,%rbp
    6624:	48 83 ec 10          	sub    $0x10,%rsp
    6628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    662c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6630:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6638:	48 89 d6             	mov    %rdx,%rsi
    663b:	48 89 c7             	mov    %rax,%rdi
    663e:	e8 e1 f3 ff ff       	call   5a24 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6647:	48 89 c7             	mov    %rax,%rdi
    664a:	e8 89 09 00 00       	call   6fd8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    664f:	90                   	nop
    6650:	c9                   	leave
    6651:	c3                   	ret

0000000000006652 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6652:	55                   	push   %rbp
    6653:	48 89 e5             	mov    %rsp,%rbp
    6656:	48 83 ec 10          	sub    $0x10,%rsp
    665a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    665e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6662:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    666a:	48 89 d6             	mov    %rdx,%rsi
    666d:	48 89 c7             	mov    %rax,%rdi
    6670:	e8 91 09 00 00       	call   7006 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    6675:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6679:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    667c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6680:	48 8b 10             	mov    (%rax),%rdx
    6683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6687:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    668b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    668f:	48 8b 00             	mov    (%rax),%rax
    6692:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6696:	48 c1 e2 03          	shl    $0x3,%rdx
    669a:	48 01 c2             	add    %rax,%rdx
    669d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    66a5:	90                   	nop
    66a6:	c9                   	leave
    66a7:	c3                   	ret

00000000000066a8 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    66a8:	55                   	push   %rbp
    66a9:	48 89 e5             	mov    %rsp,%rbp
    66ac:	48 83 ec 20          	sub    $0x20,%rsp
    66b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    66bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c4:	48 89 d6             	mov    %rdx,%rsi
    66c7:	48 89 c7             	mov    %rax,%rdi
    66ca:	e8 6a 09 00 00       	call   7039 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    66cf:	c9                   	leave
    66d0:	c3                   	ret

00000000000066d1 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    66d1:	55                   	push   %rbp
    66d2:	48 89 e5             	mov    %rsp,%rbp
    66d5:	48 83 ec 10          	sub    $0x10,%rsp
    66d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    66e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e9:	48 89 d6             	mov    %rdx,%rsi
    66ec:	48 89 c7             	mov    %rax,%rdi
    66ef:	e8 6e 09 00 00       	call   7062 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    66f4:	90                   	nop
    66f5:	c9                   	leave
    66f6:	c3                   	ret
    66f7:	90                   	nop

00000000000066f8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    66f8:	55                   	push   %rbp
    66f9:	48 89 e5             	mov    %rsp,%rbp
    66fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6704:	90                   	nop
    6705:	5d                   	pop    %rbp
    6706:	c3                   	ret

0000000000006707 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6707:	55                   	push   %rbp
    6708:	48 89 e5             	mov    %rsp,%rbp
    670b:	48 83 ec 20          	sub    $0x20,%rsp
    670f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6713:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6717:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    671b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    671f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6727:	48 89 ce             	mov    %rcx,%rsi
    672a:	48 89 c7             	mov    %rax,%rdi
    672d:	e8 40 09 00 00       	call   7072 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    6732:	90                   	nop
    6733:	c9                   	leave
    6734:	c3                   	ret

0000000000006735 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6735:	55                   	push   %rbp
    6736:	48 89 e5             	mov    %rsp,%rbp
    6739:	48 83 ec 20          	sub    $0x20,%rsp
    673d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6741:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    6748:	55 55 05 
    674b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    674f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6753:	48 89 c7             	mov    %rax,%rdi
    6756:	e8 48 09 00 00       	call   70a3 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    675b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    675f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6763:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6767:	48 89 d6             	mov    %rdx,%rsi
    676a:	48 89 c7             	mov    %rax,%rdi
    676d:	e8 55 03 00 00       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    6772:	48 8b 00             	mov    (%rax),%rax
      }
    6775:	c9                   	leave
    6776:	c3                   	ret
    6777:	90                   	nop

0000000000006778 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6778:	55                   	push   %rbp
    6779:	48 89 e5             	mov    %rsp,%rbp
    677c:	48 83 ec 10          	sub    $0x10,%rsp
    6780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6788:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    678c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6790:	48 89 d6             	mov    %rdx,%rsi
    6793:	48 89 c7             	mov    %rax,%rdi
    6796:	e8 45 f4 ff ff       	call   5be0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    679b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    679f:	48 89 c7             	mov    %rax,%rdi
    67a2:	e8 17 09 00 00       	call   70be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    67a7:	90                   	nop
    67a8:	c9                   	leave
    67a9:	c3                   	ret

00000000000067aa <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    67aa:	55                   	push   %rbp
    67ab:	48 89 e5             	mov    %rsp,%rbp
    67ae:	48 83 ec 10          	sub    $0x10,%rsp
    67b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    67ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c2:	48 89 d6             	mov    %rdx,%rsi
    67c5:	48 89 c7             	mov    %rax,%rdi
    67c8:	e8 1f 09 00 00       	call   70ec <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    67cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67d1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    67d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67d8:	48 8b 10             	mov    (%rax),%rdx
    67db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67df:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    67e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67e7:	48 8b 08             	mov    (%rax),%rcx
    67ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67ee:	48 89 d0             	mov    %rdx,%rax
    67f1:	48 01 c0             	add    %rax,%rax
    67f4:	48 01 d0             	add    %rdx,%rax
    67f7:	48 c1 e0 03          	shl    $0x3,%rax
    67fb:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    67ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6803:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6807:	90                   	nop
    6808:	c9                   	leave
    6809:	c3                   	ret

000000000000680a <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    680a:	55                   	push   %rbp
    680b:	48 89 e5             	mov    %rsp,%rbp
    680e:	48 83 ec 20          	sub    $0x20,%rsp
    6812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6816:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    681a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    681e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6826:	48 89 d6             	mov    %rdx,%rsi
    6829:	48 89 c7             	mov    %rax,%rdi
    682c:	e8 ee 08 00 00       	call   711f <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    6831:	c9                   	leave
    6832:	c3                   	ret

0000000000006833 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6833:	55                   	push   %rbp
    6834:	48 89 e5             	mov    %rsp,%rbp
    6837:	48 83 ec 10          	sub    $0x10,%rsp
    683b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    683f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6843:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    684b:	48 89 d6             	mov    %rdx,%rsi
    684e:	48 89 c7             	mov    %rax,%rdi
    6851:	e8 f2 08 00 00       	call   7148 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    6856:	90                   	nop
    6857:	c9                   	leave
    6858:	c3                   	ret
    6859:	90                   	nop

000000000000685a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    685a:	55                   	push   %rbp
    685b:	48 89 e5             	mov    %rsp,%rbp
    685e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6866:	90                   	nop
    6867:	5d                   	pop    %rbp
    6868:	c3                   	ret

0000000000006869 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6869:	55                   	push   %rbp
    686a:	48 89 e5             	mov    %rsp,%rbp
    686d:	48 83 ec 20          	sub    $0x20,%rsp
    6871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6875:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6879:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    687d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6881:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6889:	48 89 ce             	mov    %rcx,%rsi
    688c:	48 89 c7             	mov    %rax,%rdi
    688f:	e8 c4 08 00 00       	call   7158 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    6894:	90                   	nop
    6895:	c9                   	leave
    6896:	c3                   	ret

0000000000006897 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6897:	55                   	push   %rbp
    6898:	48 89 e5             	mov    %rsp,%rbp
    689b:	48 83 ec 20          	sub    $0x20,%rsp
    689f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    68a3:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    68aa:	49 92 04 
    68ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    68b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68b5:	48 89 c7             	mov    %rax,%rdi
    68b8:	e8 d4 08 00 00       	call   7191 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    68bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    68c1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    68c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    68c9:	48 89 d6             	mov    %rdx,%rsi
    68cc:	48 89 c7             	mov    %rax,%rdi
    68cf:	e8 f3 01 00 00       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    68d4:	48 8b 00             	mov    (%rax),%rax
      }
    68d7:	c9                   	leave
    68d8:	c3                   	ret
    68d9:	90                   	nop

00000000000068da <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    68da:	55                   	push   %rbp
    68db:	48 89 e5             	mov    %rsp,%rbp
    68de:	48 83 ec 10          	sub    $0x10,%rsp
    68e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    68ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f2:	48 89 d6             	mov    %rdx,%rsi
    68f5:	48 89 c7             	mov    %rax,%rdi
    68f8:	e8 51 f5 ff ff       	call   5e4e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    68fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6901:	48 89 c7             	mov    %rax,%rdi
    6904:	e8 a3 08 00 00       	call   71ac <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    6909:	90                   	nop
    690a:	c9                   	leave
    690b:	c3                   	ret

000000000000690c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    690c:	55                   	push   %rbp
    690d:	48 89 e5             	mov    %rsp,%rbp
    6910:	48 83 ec 10          	sub    $0x10,%rsp
    6914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    691c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6924:	48 89 d6             	mov    %rdx,%rsi
    6927:	48 89 c7             	mov    %rax,%rdi
    692a:	e8 ab 08 00 00       	call   71da <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    692f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6933:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    693a:	48 8b 10             	mov    (%rax),%rdx
    693d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6941:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6949:	48 8b 08             	mov    (%rax),%rcx
    694c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6950:	48 89 d0             	mov    %rdx,%rax
    6953:	48 c1 e0 03          	shl    $0x3,%rax
    6957:	48 29 d0             	sub    %rdx,%rax
    695a:	48 c1 e0 02          	shl    $0x2,%rax
    695e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6966:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    696a:	90                   	nop
    696b:	c9                   	leave
    696c:	c3                   	ret

000000000000696d <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    696d:	55                   	push   %rbp
    696e:	48 89 e5             	mov    %rsp,%rbp
    6971:	48 83 ec 20          	sub    $0x20,%rsp
    6975:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6979:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    697d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6981:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6989:	48 89 d6             	mov    %rdx,%rsi
    698c:	48 89 c7             	mov    %rax,%rdi
    698f:	e8 79 08 00 00       	call   720d <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    6994:	c9                   	leave
    6995:	c3                   	ret

0000000000006996 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6996:	55                   	push   %rbp
    6997:	48 89 e5             	mov    %rsp,%rbp
    699a:	48 83 ec 10          	sub    $0x10,%rsp
    699e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    69a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ae:	48 89 d6             	mov    %rdx,%rsi
    69b1:	48 89 c7             	mov    %rax,%rdi
    69b4:	e8 7d 08 00 00       	call   7236 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    69b9:	90                   	nop
    69ba:	c9                   	leave
    69bb:	c3                   	ret

00000000000069bc <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    69bc:	55                   	push   %rbp
    69bd:	48 89 e5             	mov    %rsp,%rbp
    69c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    69c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69c8:	5d                   	pop    %rbp
    69c9:	c3                   	ret

00000000000069ca <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    69ca:	55                   	push   %rbp
    69cb:	48 89 e5             	mov    %rsp,%rbp
    69ce:	53                   	push   %rbx
    69cf:	48 83 ec 18          	sub    $0x18,%rsp
    69d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    69d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    69db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    69df:	48 89 c7             	mov    %rax,%rdi
    69e2:	e8 25 f4 ff ff       	call   5e0c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    69e7:	48 89 c3             	mov    %rax,%rbx
    69ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69ee:	48 89 c7             	mov    %rax,%rdi
    69f1:	e8 4f 08 00 00       	call   7245 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    69f6:	48 89 de             	mov    %rbx,%rsi
    69f9:	48 89 c7             	mov    %rax,%rdi
    69fc:	e8 52 08 00 00       	call   7253 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    6a01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a05:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    6a09:	90                   	nop
    6a0a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a0e:	c9                   	leave
    6a0f:	c3                   	ret

0000000000006a10 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    6a10:	55                   	push   %rbp
    6a11:	48 89 e5             	mov    %rsp,%rbp
    6a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a1c:	90                   	nop
    6a1d:	5d                   	pop    %rbp
    6a1e:	c3                   	ret

0000000000006a1f <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6a1f:	55                   	push   %rbp
    6a20:	48 89 e5             	mov    %rsp,%rbp
    6a23:	48 83 ec 20          	sub    $0x20,%rsp
    6a27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a2b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a2f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6a33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a37:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a3f:	48 89 ce             	mov    %rcx,%rsi
    6a42:	48 89 c7             	mov    %rax,%rdi
    6a45:	e8 5a 08 00 00       	call   72a4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    6a4a:	90                   	nop
    6a4b:	c9                   	leave
    6a4c:	c3                   	ret
    6a4d:	90                   	nop

0000000000006a4e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6a4e:	55                   	push   %rbp
    6a4f:	48 89 e5             	mov    %rsp,%rbp
    6a52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a56:	90                   	nop
    6a57:	5d                   	pop    %rbp
    6a58:	c3                   	ret

0000000000006a59 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6a59:	55                   	push   %rbp
    6a5a:	48 89 e5             	mov    %rsp,%rbp
    6a5d:	48 83 ec 20          	sub    $0x20,%rsp
    6a61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a69:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6a6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a71:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a79:	48 89 ce             	mov    %rcx,%rsi
    6a7c:	48 89 c7             	mov    %rax,%rdi
    6a7f:	e8 5a 08 00 00       	call   72de <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    6a84:	90                   	nop
    6a85:	c9                   	leave
    6a86:	c3                   	ret

0000000000006a87 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6a87:	55                   	push   %rbp
    6a88:	48 89 e5             	mov    %rsp,%rbp
    6a8b:	48 83 ec 10          	sub    $0x10,%rsp
    6a8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6a97:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a9f:	48 89 d6             	mov    %rdx,%rsi
    6aa2:	48 89 c7             	mov    %rax,%rdi
    6aa5:	e8 65 08 00 00       	call   730f <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    6aaa:	90                   	nop
    6aab:	c9                   	leave
    6aac:	c3                   	ret

0000000000006aad <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6aad:	55                   	push   %rbp
    6aae:	48 89 e5             	mov    %rsp,%rbp
    6ab1:	48 83 ec 10          	sub    $0x10,%rsp
    6ab5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6abd:	48 89 c7             	mov    %rax,%rdi
    6ac0:	e8 59 08 00 00       	call   731e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    6ac5:	c9                   	leave
    6ac6:	c3                   	ret

0000000000006ac7 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    6ac7:	55                   	push   %rbp
    6ac8:	48 89 e5             	mov    %rsp,%rbp
    6acb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6acf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    6ad3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ad7:	48 8b 10             	mov    (%rax),%rdx
    6ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ade:	48 8b 00             	mov    (%rax),%rax
    6ae1:	48 39 c2             	cmp    %rax,%rdx
    6ae4:	73 06                	jae    6aec <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    6ae6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6aea:	eb 04                	jmp    6af0 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    6aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    6af0:	5d                   	pop    %rbp
    6af1:	c3                   	ret

0000000000006af2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6af2:	55                   	push   %rbp
    6af3:	48 89 e5             	mov    %rsp,%rbp
    6af6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6afe:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b09:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6b10:	00 
    6b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b15:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6b1c:	00 
	{ }
    6b1d:	90                   	nop
    6b1e:	5d                   	pop    %rbp
    6b1f:	c3                   	ret

0000000000006b20 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6b20:	55                   	push   %rbp
    6b21:	48 89 e5             	mov    %rsp,%rbp
    6b24:	48 83 ec 10          	sub    $0x10,%rsp
    6b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6b30:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6b35:	74 15                	je     6b4c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    6b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b3f:	48 89 d6             	mov    %rdx,%rsi
    6b42:	48 89 c7             	mov    %rax,%rdi
    6b45:	e8 ee 07 00 00       	call   7338 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    6b4a:	eb 05                	jmp    6b51 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    6b4c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6b51:	c9                   	leave
    6b52:	c3                   	ret

0000000000006b53 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6b53:	55                   	push   %rbp
    6b54:	48 89 e5             	mov    %rsp,%rbp
    6b57:	48 83 ec 20          	sub    $0x20,%rsp
    6b5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b5f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6b63:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6b67:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6b6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b6f:	48 89 d6             	mov    %rdx,%rsi
    6b72:	48 89 c7             	mov    %rax,%rdi
    6b75:	e8 e8 07 00 00       	call   7362 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    6b7a:	c9                   	leave
    6b7b:	c3                   	ret

0000000000006b7c <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6b7c:	55                   	push   %rbp
    6b7d:	48 89 e5             	mov    %rsp,%rbp
    6b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b88:	90                   	nop
    6b89:	5d                   	pop    %rbp
    6b8a:	c3                   	ret
    6b8b:	90                   	nop

0000000000006b8c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6b8c:	55                   	push   %rbp
    6b8d:	48 89 e5             	mov    %rsp,%rbp
    6b90:	48 83 ec 20          	sub    $0x20,%rsp
    6b94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6ba0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ba4:	48 89 d0             	mov    %rdx,%rax
    6ba7:	48 c1 e0 06          	shl    $0x6,%rax
    6bab:	48 01 d0             	add    %rdx,%rax
    6bae:	48 c1 e0 02          	shl    $0x2,%rax
    6bb2:	48 89 c2             	mov    %rax,%rdx
    6bb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6bb9:	48 89 d6             	mov    %rdx,%rsi
    6bbc:	48 89 c7             	mov    %rax,%rdi
    6bbf:	e8 ac c6 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    6bc4:	c9                   	leave
    6bc5:	c3                   	ret

0000000000006bc6 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6bc6:	55                   	push   %rbp
    6bc7:	48 89 e5             	mov    %rsp,%rbp
    6bca:	48 83 ec 10          	sub    $0x10,%rsp
    6bce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6bd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bd6:	48 89 c7             	mov    %rax,%rdi
    6bd9:	e8 e4 07 00 00       	call   73c2 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    6bde:	c9                   	leave
    6bdf:	c3                   	ret

0000000000006be0 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6be0:	55                   	push   %rbp
    6be1:	48 89 e5             	mov    %rsp,%rbp
    6be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bec:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bf7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6bfe:	00 
    6bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c03:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6c0a:	00 
	{ }
    6c0b:	90                   	nop
    6c0c:	5d                   	pop    %rbp
    6c0d:	c3                   	ret

0000000000006c0e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6c0e:	55                   	push   %rbp
    6c0f:	48 89 e5             	mov    %rsp,%rbp
    6c12:	48 83 ec 10          	sub    $0x10,%rsp
    6c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6c1e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6c23:	74 15                	je     6c3a <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    6c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c2d:	48 89 d6             	mov    %rdx,%rsi
    6c30:	48 89 c7             	mov    %rax,%rdi
    6c33:	e8 a4 07 00 00       	call   73dc <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    6c38:	eb 05                	jmp    6c3f <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    6c3a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6c3f:	c9                   	leave
    6c40:	c3                   	ret

0000000000006c41 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6c41:	55                   	push   %rbp
    6c42:	48 89 e5             	mov    %rsp,%rbp
    6c45:	48 83 ec 20          	sub    $0x20,%rsp
    6c49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c4d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6c51:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6c55:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6c59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c5d:	48 89 d6             	mov    %rdx,%rsi
    6c60:	48 89 c7             	mov    %rax,%rdi
    6c63:	e8 9e 07 00 00       	call   7406 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    6c68:	c9                   	leave
    6c69:	c3                   	ret

0000000000006c6a <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    6c6a:	55                   	push   %rbp
    6c6b:	48 89 e5             	mov    %rsp,%rbp
    6c6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c76:	90                   	nop
    6c77:	5d                   	pop    %rbp
    6c78:	c3                   	ret
    6c79:	90                   	nop

0000000000006c7a <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    6c7a:	55                   	push   %rbp
    6c7b:	48 89 e5             	mov    %rsp,%rbp
    6c7e:	53                   	push   %rbx
    6c7f:	48 83 ec 28          	sub    $0x28,%rsp
    6c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6c8b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    6c8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6c93:	48 89 c6             	mov    %rax,%rsi
    6c96:	bf 08 00 00 00       	mov    $0x8,%edi
    6c9b:	e8 1b da ff ff       	call   46bb <_ZnwmPv>
    6ca0:	48 89 c3             	mov    %rax,%rbx
    6ca3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ca7:	48 89 c7             	mov    %rax,%rdi
    6caa:	e8 4c f5 ff ff       	call   61fb <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    6caf:	48 8b 00             	mov    (%rax),%rax
    6cb2:	48 89 03             	mov    %rax,(%rbx)
    6cb5:	90                   	nop
    6cb6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6cba:	c9                   	leave
    6cbb:	c3                   	ret

0000000000006cbc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6cbc:	55                   	push   %rbp
    6cbd:	48 89 e5             	mov    %rsp,%rbp
    6cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6cc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ccc:	48 8b 10             	mov    (%rax),%rdx
    6ccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cd3:	48 89 10             	mov    %rdx,(%rax)
    6cd6:	90                   	nop
    6cd7:	5d                   	pop    %rbp
    6cd8:	c3                   	ret
    6cd9:	90                   	nop

0000000000006cda <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    6cda:	55                   	push   %rbp
    6cdb:	48 89 e5             	mov    %rsp,%rbp
    6cde:	53                   	push   %rbx
    6cdf:	48 83 ec 38          	sub    $0x38,%rsp
    6ce3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ce7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6ceb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    6cef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6cf3:	48 89 c7             	mov    %rax,%rdi
    6cf6:	e8 69 07 00 00       	call   7464 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    6cfb:	48 89 c3             	mov    %rax,%rbx
    6cfe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d02:	48 89 c7             	mov    %rax,%rdi
    6d05:	e8 7c 07 00 00       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    6d0a:	48 29 c3             	sub    %rax,%rbx
    6d0d:	48 89 da             	mov    %rbx,%rdx
    6d10:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d14:	48 39 c2             	cmp    %rax,%rdx
    6d17:	0f 92 c0             	setb   %al
    6d1a:	84 c0                	test   %al,%al
    6d1c:	74 0c                	je     6d2a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    6d1e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6d22:	48 89 c7             	mov    %rax,%rdi
    6d25:	e8 d6 c3 ff ff       	call   3100 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    6d2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d2e:	48 89 c7             	mov    %rax,%rdi
    6d31:	e8 50 07 00 00       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    6d36:	48 89 c3             	mov    %rax,%rbx
    6d39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d3d:	48 89 c7             	mov    %rax,%rdi
    6d40:	e8 41 07 00 00       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    6d45:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6d49:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    6d4d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6d51:	48 89 d6             	mov    %rdx,%rsi
    6d54:	48 89 c7             	mov    %rax,%rdi
    6d57:	e8 4d 07 00 00       	call   74a9 <_ZSt3maxImERKT_S2_S2_>
    6d5c:	48 8b 00             	mov    (%rax),%rax
    6d5f:	48 01 d8             	add    %rbx,%rax
    6d62:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    6d66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d6a:	48 89 c7             	mov    %rax,%rdi
    6d6d:	e8 14 07 00 00       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    6d72:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    6d76:	72 12                	jb     6d8a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    6d78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d7c:	48 89 c7             	mov    %rax,%rdi
    6d7f:	e8 e0 06 00 00       	call   7464 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    6d84:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    6d88:	73 0e                	jae    6d98 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    6d8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d8e:	48 89 c7             	mov    %rax,%rdi
    6d91:	e8 ce 06 00 00       	call   7464 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    6d96:	eb 04                	jmp    6d9c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    6d98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    6d9c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6da0:	c9                   	leave
    6da1:	c3                   	ret

0000000000006da2 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6da2:	55                   	push   %rbp
    6da3:	48 89 e5             	mov    %rsp,%rbp
    6da6:	48 83 ec 20          	sub    $0x20,%rsp
    6daa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6dae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6db2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6db6:	48 89 d6             	mov    %rdx,%rsi
    6db9:	48 89 c7             	mov    %rax,%rdi
    6dbc:	e8 fb fe ff ff       	call   6cbc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dc5:	c9                   	leave
    6dc6:	c3                   	ret

0000000000006dc7 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    6dc7:	55                   	push   %rbp
    6dc8:	48 89 e5             	mov    %rsp,%rbp
    6dcb:	53                   	push   %rbx
    6dcc:	48 83 ec 18          	sub    $0x18,%rsp
    6dd0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6dd4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    6dd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ddc:	48 89 c7             	mov    %rax,%rdi
    6ddf:	e8 58 00 00 00       	call   6e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    6de4:	48 8b 18             	mov    (%rax),%rbx
    6de7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6deb:	48 89 c7             	mov    %rax,%rdi
    6dee:	e8 49 00 00 00       	call   6e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    6df3:	48 8b 00             	mov    (%rax),%rax
    6df6:	48 89 da             	mov    %rbx,%rdx
    6df9:	48 29 c2             	sub    %rax,%rdx
    6dfc:	48 89 d0             	mov    %rdx,%rax
    6dff:	48 c1 f8 03          	sar    $0x3,%rax
    6e03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e07:	c9                   	leave
    6e08:	c3                   	ret

0000000000006e09 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    6e09:	55                   	push   %rbp
    6e0a:	48 89 e5             	mov    %rsp,%rbp
    6e0d:	48 83 ec 20          	sub    $0x20,%rsp
    6e11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e19:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6e1d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    6e21:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6e25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e29:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    6e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e31:	48 89 c7             	mov    %rax,%rdi
    6e34:	e8 9b 06 00 00       	call   74d4 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    6e39:	c9                   	leave
    6e3a:	c3                   	ret
    6e3b:	90                   	nop

0000000000006e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6e3c:	55                   	push   %rbp
    6e3d:	48 89 e5             	mov    %rsp,%rbp
    6e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e48:	5d                   	pop    %rbp
    6e49:	c3                   	ret

0000000000006e4a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    6e4a:	55                   	push   %rbp
    6e4b:	48 89 e5             	mov    %rsp,%rbp
    6e4e:	48 83 ec 20          	sub    $0x20,%rsp
    6e52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    6e5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e5e:	48 8b 00             	mov    (%rax),%rax
    6e61:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6e65:	48 c1 e2 03          	shl    $0x3,%rdx
    6e69:	48 f7 da             	neg    %rdx
    6e6c:	48 01 d0             	add    %rdx,%rax
    6e6f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6e73:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    6e77:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    6e7b:	48 89 d6             	mov    %rdx,%rsi
    6e7e:	48 89 c7             	mov    %rax,%rdi
    6e81:	e8 36 fe ff ff       	call   6cbc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6e86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6e8a:	c9                   	leave
    6e8b:	c3                   	ret

0000000000006e8c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6e8c:	55                   	push   %rbp
    6e8d:	48 89 e5             	mov    %rsp,%rbp
    6e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e98:	48 8b 00             	mov    (%rax),%rax
    6e9b:	5d                   	pop    %rbp
    6e9c:	c3                   	ret
    6e9d:	90                   	nop

0000000000006e9e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6e9e:	55                   	push   %rbp
    6e9f:	48 89 e5             	mov    %rsp,%rbp
    6ea2:	48 83 ec 20          	sub    $0x20,%rsp
    6ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6eae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6eb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6eb6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6ebd:	00 
    6ebe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ec2:	48 89 d6             	mov    %rdx,%rsi
    6ec5:	48 89 c7             	mov    %rax,%rdi
    6ec8:	e8 a3 c3 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    6ecd:	c9                   	leave
    6ece:	c3                   	ret

0000000000006ecf <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6ecf:	55                   	push   %rbp
    6ed0:	48 89 e5             	mov    %rsp,%rbp
    6ed3:	48 83 ec 10          	sub    $0x10,%rsp
    6ed7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6edf:	48 89 c7             	mov    %rax,%rdi
    6ee2:	e8 51 06 00 00       	call   7538 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    6ee7:	c9                   	leave
    6ee8:	c3                   	ret
    6ee9:	90                   	nop

0000000000006eea <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6eea:	55                   	push   %rbp
    6eeb:	48 89 e5             	mov    %rsp,%rbp
    6eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ef6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f01:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6f08:	00 
    6f09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f0d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6f14:	00 
	{ }
    6f15:	90                   	nop
    6f16:	5d                   	pop    %rbp
    6f17:	c3                   	ret

0000000000006f18 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6f18:	55                   	push   %rbp
    6f19:	48 89 e5             	mov    %rsp,%rbp
    6f1c:	48 83 ec 10          	sub    $0x10,%rsp
    6f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6f28:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6f2d:	74 15                	je     6f44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    6f2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f37:	48 89 d6             	mov    %rdx,%rsi
    6f3a:	48 89 c7             	mov    %rax,%rdi
    6f3d:	e8 10 06 00 00       	call   7552 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    6f42:	eb 05                	jmp    6f49 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    6f44:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6f49:	c9                   	leave
    6f4a:	c3                   	ret

0000000000006f4b <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6f4b:	55                   	push   %rbp
    6f4c:	48 89 e5             	mov    %rsp,%rbp
    6f4f:	48 83 ec 20          	sub    $0x20,%rsp
    6f53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6f5b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6f5f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6f63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f67:	48 89 d6             	mov    %rdx,%rsi
    6f6a:	48 89 c7             	mov    %rax,%rdi
    6f6d:	e8 0a 06 00 00       	call   757c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    6f72:	c9                   	leave
    6f73:	c3                   	ret

0000000000006f74 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    6f74:	55                   	push   %rbp
    6f75:	48 89 e5             	mov    %rsp,%rbp
    6f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f80:	90                   	nop
    6f81:	5d                   	pop    %rbp
    6f82:	c3                   	ret
    6f83:	90                   	nop

0000000000006f84 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6f84:	55                   	push   %rbp
    6f85:	48 89 e5             	mov    %rsp,%rbp
    6f88:	48 83 ec 20          	sub    $0x20,%rsp
    6f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6f98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f9c:	48 89 d0             	mov    %rdx,%rax
    6f9f:	48 c1 e0 06          	shl    $0x6,%rax
    6fa3:	48 01 d0             	add    %rdx,%rax
    6fa6:	48 c1 e0 03          	shl    $0x3,%rax
    6faa:	48 89 c2             	mov    %rax,%rdx
    6fad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6fb1:	48 89 d6             	mov    %rdx,%rsi
    6fb4:	48 89 c7             	mov    %rax,%rdi
    6fb7:	e8 b4 c2 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    6fbc:	c9                   	leave
    6fbd:	c3                   	ret

0000000000006fbe <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6fbe:	55                   	push   %rbp
    6fbf:	48 89 e5             	mov    %rsp,%rbp
    6fc2:	48 83 ec 10          	sub    $0x10,%rsp
    6fc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fce:	48 89 c7             	mov    %rax,%rdi
    6fd1:	e8 06 06 00 00       	call   75dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    6fd6:	c9                   	leave
    6fd7:	c3                   	ret

0000000000006fd8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6fd8:	55                   	push   %rbp
    6fd9:	48 89 e5             	mov    %rsp,%rbp
    6fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fe4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fef:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6ff6:	00 
    6ff7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ffb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7002:	00 
	{ }
    7003:	90                   	nop
    7004:	5d                   	pop    %rbp
    7005:	c3                   	ret

0000000000007006 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7006:	55                   	push   %rbp
    7007:	48 89 e5             	mov    %rsp,%rbp
    700a:	48 83 ec 10          	sub    $0x10,%rsp
    700e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7012:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7016:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    701b:	74 15                	je     7032 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    701d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7021:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7025:	48 89 d6             	mov    %rdx,%rsi
    7028:	48 89 c7             	mov    %rax,%rdi
    702b:	e8 c6 05 00 00       	call   75f6 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    7030:	eb 05                	jmp    7037 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    7032:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7037:	c9                   	leave
    7038:	c3                   	ret

0000000000007039 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7039:	55                   	push   %rbp
    703a:	48 89 e5             	mov    %rsp,%rbp
    703d:	48 83 ec 20          	sub    $0x20,%rsp
    7041:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7045:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7049:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    704d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7055:	48 89 d6             	mov    %rdx,%rsi
    7058:	48 89 c7             	mov    %rax,%rdi
    705b:	e8 c0 05 00 00       	call   7620 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    7060:	c9                   	leave
    7061:	c3                   	ret

0000000000007062 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    7062:	55                   	push   %rbp
    7063:	48 89 e5             	mov    %rsp,%rbp
    7066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    706a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    706e:	90                   	nop
    706f:	5d                   	pop    %rbp
    7070:	c3                   	ret
    7071:	90                   	nop

0000000000007072 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7072:	55                   	push   %rbp
    7073:	48 89 e5             	mov    %rsp,%rbp
    7076:	48 83 ec 20          	sub    $0x20,%rsp
    707a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    707e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7082:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    708a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7091:	00 
    7092:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7096:	48 89 d6             	mov    %rdx,%rsi
    7099:	48 89 c7             	mov    %rax,%rdi
    709c:	e8 cf c1 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    70a1:	c9                   	leave
    70a2:	c3                   	ret

00000000000070a3 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    70a3:	55                   	push   %rbp
    70a4:	48 89 e5             	mov    %rsp,%rbp
    70a7:	48 83 ec 10          	sub    $0x10,%rsp
    70ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    70af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70b3:	48 89 c7             	mov    %rax,%rdi
    70b6:	e8 c3 05 00 00       	call   767e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    70bb:	c9                   	leave
    70bc:	c3                   	ret
    70bd:	90                   	nop

00000000000070be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    70be:	55                   	push   %rbp
    70bf:	48 89 e5             	mov    %rsp,%rbp
    70c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    70c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    70d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    70dc:	00 
    70dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    70e8:	00 
	{ }
    70e9:	90                   	nop
    70ea:	5d                   	pop    %rbp
    70eb:	c3                   	ret

00000000000070ec <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    70ec:	55                   	push   %rbp
    70ed:	48 89 e5             	mov    %rsp,%rbp
    70f0:	48 83 ec 10          	sub    $0x10,%rsp
    70f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    70fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7101:	74 15                	je     7118 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    7103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7107:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    710b:	48 89 d6             	mov    %rdx,%rsi
    710e:	48 89 c7             	mov    %rax,%rdi
    7111:	e8 82 05 00 00       	call   7698 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    7116:	eb 05                	jmp    711d <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    7118:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    711d:	c9                   	leave
    711e:	c3                   	ret

000000000000711f <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    711f:	55                   	push   %rbp
    7120:	48 89 e5             	mov    %rsp,%rbp
    7123:	48 83 ec 20          	sub    $0x20,%rsp
    7127:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    712b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    712f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7133:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    713b:	48 89 d6             	mov    %rdx,%rsi
    713e:	48 89 c7             	mov    %rax,%rdi
    7141:	e8 7c 05 00 00       	call   76c2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    7146:	c9                   	leave
    7147:	c3                   	ret

0000000000007148 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    7148:	55                   	push   %rbp
    7149:	48 89 e5             	mov    %rsp,%rbp
    714c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7150:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7154:	90                   	nop
    7155:	5d                   	pop    %rbp
    7156:	c3                   	ret
    7157:	90                   	nop

0000000000007158 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7158:	55                   	push   %rbp
    7159:	48 89 e5             	mov    %rsp,%rbp
    715c:	48 83 ec 20          	sub    $0x20,%rsp
    7160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7168:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    716c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7170:	48 89 d0             	mov    %rdx,%rax
    7173:	48 01 c0             	add    %rax,%rax
    7176:	48 01 d0             	add    %rdx,%rax
    7179:	48 c1 e0 03          	shl    $0x3,%rax
    717d:	48 89 c2             	mov    %rax,%rdx
    7180:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7184:	48 89 d6             	mov    %rdx,%rsi
    7187:	48 89 c7             	mov    %rax,%rdi
    718a:	e8 e1 c0 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    718f:	c9                   	leave
    7190:	c3                   	ret

0000000000007191 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7191:	55                   	push   %rbp
    7192:	48 89 e5             	mov    %rsp,%rbp
    7195:	48 83 ec 10          	sub    $0x10,%rsp
    7199:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    719d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71a1:	48 89 c7             	mov    %rax,%rdi
    71a4:	e8 77 05 00 00       	call   7720 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    71a9:	c9                   	leave
    71aa:	c3                   	ret
    71ab:	90                   	nop

00000000000071ac <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    71ac:	55                   	push   %rbp
    71ad:	48 89 e5             	mov    %rsp,%rbp
    71b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    71b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    71bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    71ca:	00 
    71cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71cf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    71d6:	00 
	{ }
    71d7:	90                   	nop
    71d8:	5d                   	pop    %rbp
    71d9:	c3                   	ret

00000000000071da <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    71da:	55                   	push   %rbp
    71db:	48 89 e5             	mov    %rsp,%rbp
    71de:	48 83 ec 10          	sub    $0x10,%rsp
    71e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    71ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    71ef:	74 15                	je     7206 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    71f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71f9:	48 89 d6             	mov    %rdx,%rsi
    71fc:	48 89 c7             	mov    %rax,%rdi
    71ff:	e8 36 05 00 00       	call   773a <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    7204:	eb 05                	jmp    720b <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    7206:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    720b:	c9                   	leave
    720c:	c3                   	ret

000000000000720d <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    720d:	55                   	push   %rbp
    720e:	48 89 e5             	mov    %rsp,%rbp
    7211:	48 83 ec 20          	sub    $0x20,%rsp
    7215:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7219:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    721d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7221:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7229:	48 89 d6             	mov    %rdx,%rsi
    722c:	48 89 c7             	mov    %rax,%rdi
    722f:	e8 30 05 00 00       	call   7764 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    7234:	c9                   	leave
    7235:	c3                   	ret

0000000000007236 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    7236:	55                   	push   %rbp
    7237:	48 89 e5             	mov    %rsp,%rbp
    723a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    723e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7242:	90                   	nop
    7243:	5d                   	pop    %rbp
    7244:	c3                   	ret

0000000000007245 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7245:	55                   	push   %rbp
    7246:	48 89 e5             	mov    %rsp,%rbp
    7249:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    724d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7251:	5d                   	pop    %rbp
    7252:	c3                   	ret

0000000000007253 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7253:	55                   	push   %rbp
    7254:	48 89 e5             	mov    %rsp,%rbp
    7257:	53                   	push   %rbx
    7258:	48 83 ec 18          	sub    $0x18,%rsp
    725c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7260:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7268:	48 89 c6             	mov    %rax,%rsi
    726b:	bf 18 00 00 00       	mov    $0x18,%edi
    7270:	e8 46 d4 ff ff       	call   46bb <_ZnwmPv>
    7275:	48 89 c3             	mov    %rax,%rbx
    7278:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    727c:	48 89 c7             	mov    %rax,%rdi
    727f:	e8 88 eb ff ff       	call   5e0c <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    7284:	48 89 c1             	mov    %rax,%rcx
    7287:	48 8b 01             	mov    (%rcx),%rax
    728a:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    728e:	48 89 03             	mov    %rax,(%rbx)
    7291:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7295:	48 8b 41 10          	mov    0x10(%rcx),%rax
    7299:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    729d:	90                   	nop
    729e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    72a2:	c9                   	leave
    72a3:	c3                   	ret

00000000000072a4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    72a4:	55                   	push   %rbp
    72a5:	48 89 e5             	mov    %rsp,%rbp
    72a8:	48 83 ec 20          	sub    $0x20,%rsp
    72ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    72b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72bc:	48 89 d0             	mov    %rdx,%rax
    72bf:	48 c1 e0 03          	shl    $0x3,%rax
    72c3:	48 29 d0             	sub    %rdx,%rax
    72c6:	48 c1 e0 02          	shl    $0x2,%rax
    72ca:	48 89 c2             	mov    %rax,%rdx
    72cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72d1:	48 89 d6             	mov    %rdx,%rsi
    72d4:	48 89 c7             	mov    %rax,%rdi
    72d7:	e8 94 bf ff ff       	call   3270 <_ZdlPvm@plt>
      }
    72dc:	c9                   	leave
    72dd:	c3                   	ret

00000000000072de <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    72de:	55                   	push   %rbp
    72df:	48 89 e5             	mov    %rsp,%rbp
    72e2:	48 83 ec 20          	sub    $0x20,%rsp
    72e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    72f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72f6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    72fd:	00 
    72fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7302:	48 89 d6             	mov    %rdx,%rsi
    7305:	48 89 c7             	mov    %rax,%rdi
    7308:	e8 63 bf ff ff       	call   3270 <_ZdlPvm@plt>
      }
    730d:	c9                   	leave
    730e:	c3                   	ret

000000000000730f <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    730f:	55                   	push   %rbp
    7310:	48 89 e5             	mov    %rsp,%rbp
    7313:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7317:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    731b:	90                   	nop
    731c:	5d                   	pop    %rbp
    731d:	c3                   	ret

000000000000731e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    731e:	55                   	push   %rbp
    731f:	48 89 e5             	mov    %rsp,%rbp
    7322:	48 83 ec 10          	sub    $0x10,%rsp
    7326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    732a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    732e:	48 89 c7             	mov    %rax,%rdi
    7331:	e8 74 04 00 00       	call   77aa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7336:	c9                   	leave
    7337:	c3                   	ret

0000000000007338 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7338:	55                   	push   %rbp
    7339:	48 89 e5             	mov    %rsp,%rbp
    733c:	48 83 ec 10          	sub    $0x10,%rsp
    7340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7348:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    734c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7350:	ba 00 00 00 00       	mov    $0x0,%edx
    7355:	48 89 ce             	mov    %rcx,%rsi
    7358:	48 89 c7             	mov    %rax,%rdi
    735b:	e8 5e 04 00 00       	call   77be <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    7360:	c9                   	leave
    7361:	c3                   	ret

0000000000007362 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7362:	55                   	push   %rbp
    7363:	48 89 e5             	mov    %rsp,%rbp
    7366:	48 83 ec 20          	sub    $0x20,%rsp
    736a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    736e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7372:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7377:	74 43                	je     73bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    737d:	48 89 c7             	mov    %rax,%rdi
    7380:	e8 a4 04 00 00       	call   7829 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    7385:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738d:	48 89 c7             	mov    %rax,%rdi
    7390:	e8 a2 04 00 00       	call   7837 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7395:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    739c:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    739d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73a1:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    73a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    73a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    73ad:	48 89 ce             	mov    %rcx,%rsi
    73b0:	48 89 c7             	mov    %rax,%rdi
    73b3:	e8 d9 04 00 00       	call   7891 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    73b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    73bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    73c0:	c9                   	leave
    73c1:	c3                   	ret

00000000000073c2 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    73c2:	55                   	push   %rbp
    73c3:	48 89 e5             	mov    %rsp,%rbp
    73c6:	48 83 ec 10          	sub    $0x10,%rsp
    73ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    73ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73d2:	48 89 c7             	mov    %rax,%rdi
    73d5:	e8 fc 04 00 00       	call   78d6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    73da:	c9                   	leave
    73db:	c3                   	ret

00000000000073dc <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    73dc:	55                   	push   %rbp
    73dd:	48 89 e5             	mov    %rsp,%rbp
    73e0:	48 83 ec 10          	sub    $0x10,%rsp
    73e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    73ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    73f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73f4:	ba 00 00 00 00       	mov    $0x0,%edx
    73f9:	48 89 ce             	mov    %rcx,%rsi
    73fc:	48 89 c7             	mov    %rax,%rdi
    73ff:	e8 e6 04 00 00       	call   78ea <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    7404:	c9                   	leave
    7405:	c3                   	ret

0000000000007406 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7406:	55                   	push   %rbp
    7407:	48 89 e5             	mov    %rsp,%rbp
    740a:	48 83 ec 20          	sub    $0x20,%rsp
    740e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7412:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7416:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    741b:	74 40                	je     745d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    741d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7421:	48 89 c7             	mov    %rax,%rdi
    7424:	e8 22 05 00 00       	call   794b <_ZSt11__addressofIPKcEPT_RS2_>
    7429:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    742d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7431:	48 89 c7             	mov    %rax,%rdi
    7434:	e8 20 05 00 00       	call   7959 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    7439:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    743e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7442:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7446:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    744a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    744e:	48 89 ce             	mov    %rcx,%rsi
    7451:	48 89 c7             	mov    %rax,%rdi
    7454:	e8 27 05 00 00       	call   7980 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    7459:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    745d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7461:	c9                   	leave
    7462:	c3                   	ret
    7463:	90                   	nop

0000000000007464 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    7464:	55                   	push   %rbp
    7465:	48 89 e5             	mov    %rsp,%rbp
    7468:	48 83 ec 10          	sub    $0x10,%rsp
    746c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    7470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7474:	48 89 c7             	mov    %rax,%rdi
    7477:	e8 48 05 00 00       	call   79c4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    747c:	48 89 c7             	mov    %rax,%rdi
    747f:	e8 5d ec ff ff       	call   60e1 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    7484:	c9                   	leave
    7485:	c3                   	ret

0000000000007486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7486:	55                   	push   %rbp
    7487:	48 89 e5             	mov    %rsp,%rbp
    748a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    748e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7492:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    749a:	48 8b 00             	mov    (%rax),%rax
    749d:	48 29 c2             	sub    %rax,%rdx
    74a0:	48 89 d0             	mov    %rdx,%rax
    74a3:	48 c1 f8 03          	sar    $0x3,%rax
    74a7:	5d                   	pop    %rbp
    74a8:	c3                   	ret

00000000000074a9 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    74a9:	55                   	push   %rbp
    74aa:	48 89 e5             	mov    %rsp,%rbp
    74ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    74b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74b9:	48 8b 10             	mov    (%rax),%rdx
    74bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    74c0:	48 8b 00             	mov    (%rax),%rax
    74c3:	48 39 c2             	cmp    %rax,%rdx
    74c6:	73 06                	jae    74ce <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    74c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    74cc:	eb 04                	jmp    74d2 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    74ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    74d2:	5d                   	pop    %rbp
    74d3:	c3                   	ret

00000000000074d4 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    74d4:	55                   	push   %rbp
    74d5:	48 89 e5             	mov    %rsp,%rbp
    74d8:	41 54                	push   %r12
    74da:	53                   	push   %rbx
    74db:	48 83 ec 20          	sub    $0x20,%rsp
    74df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    74e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    74e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    74eb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    74ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74f3:	48 89 c7             	mov    %rax,%rdi
    74f6:	e8 d7 04 00 00       	call   79d2 <_ZSt12__niter_baseIPPKcET_S3_>
    74fb:	49 89 c4             	mov    %rax,%r12
    74fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7502:	48 89 c7             	mov    %rax,%rdi
    7505:	e8 c8 04 00 00       	call   79d2 <_ZSt12__niter_baseIPPKcET_S3_>
    750a:	48 89 c3             	mov    %rax,%rbx
    750d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7511:	48 89 c7             	mov    %rax,%rdi
    7514:	e8 b9 04 00 00       	call   79d2 <_ZSt12__niter_baseIPPKcET_S3_>
    7519:	48 89 c7             	mov    %rax,%rdi
    751c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7520:	48 89 c1             	mov    %rax,%rcx
    7523:	4c 89 e2             	mov    %r12,%rdx
    7526:	48 89 de             	mov    %rbx,%rsi
    7529:	e8 b2 04 00 00       	call   79e0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    752e:	48 83 c4 20          	add    $0x20,%rsp
    7532:	5b                   	pop    %rbx
    7533:	41 5c                	pop    %r12
    7535:	5d                   	pop    %rbp
    7536:	c3                   	ret
    7537:	90                   	nop

0000000000007538 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7538:	55                   	push   %rbp
    7539:	48 89 e5             	mov    %rsp,%rbp
    753c:	48 83 ec 10          	sub    $0x10,%rsp
    7540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7548:	48 89 c7             	mov    %rax,%rdi
    754b:	e8 f4 04 00 00       	call   7a44 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    7550:	c9                   	leave
    7551:	c3                   	ret

0000000000007552 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7552:	55                   	push   %rbp
    7553:	48 89 e5             	mov    %rsp,%rbp
    7556:	48 83 ec 10          	sub    $0x10,%rsp
    755a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    755e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7562:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    756a:	ba 00 00 00 00       	mov    $0x0,%edx
    756f:	48 89 ce             	mov    %rcx,%rsi
    7572:	48 89 c7             	mov    %rax,%rdi
    7575:	e8 de 04 00 00       	call   7a58 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    757a:	c9                   	leave
    757b:	c3                   	ret

000000000000757c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    757c:	55                   	push   %rbp
    757d:	48 89 e5             	mov    %rsp,%rbp
    7580:	48 83 ec 20          	sub    $0x20,%rsp
    7584:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7588:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    758c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7591:	74 43                	je     75d6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7593:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7597:	48 89 c7             	mov    %rax,%rdi
    759a:	e8 24 05 00 00       	call   7ac3 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    759f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    75a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75a7:	48 89 c7             	mov    %rax,%rdi
    75aa:	e8 22 05 00 00       	call   7ad1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    75af:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    75b6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    75b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    75bb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    75bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    75c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75c7:	48 89 ce             	mov    %rcx,%rsi
    75ca:	48 89 c7             	mov    %rax,%rdi
    75cd:	e8 59 05 00 00       	call   7b2b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    75d2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    75d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    75da:	c9                   	leave
    75db:	c3                   	ret

00000000000075dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    75dc:	55                   	push   %rbp
    75dd:	48 89 e5             	mov    %rsp,%rbp
    75e0:	48 83 ec 10          	sub    $0x10,%rsp
    75e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    75e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75ec:	48 89 c7             	mov    %rax,%rdi
    75ef:	e8 7c 05 00 00       	call   7b70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    75f4:	c9                   	leave
    75f5:	c3                   	ret

00000000000075f6 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    75f6:	55                   	push   %rbp
    75f7:	48 89 e5             	mov    %rsp,%rbp
    75fa:	48 83 ec 10          	sub    $0x10,%rsp
    75fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7602:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7606:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    760a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    760e:	ba 00 00 00 00       	mov    $0x0,%edx
    7613:	48 89 ce             	mov    %rcx,%rsi
    7616:	48 89 c7             	mov    %rax,%rdi
    7619:	e8 66 05 00 00       	call   7b84 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    761e:	c9                   	leave
    761f:	c3                   	ret

0000000000007620 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7620:	55                   	push   %rbp
    7621:	48 89 e5             	mov    %rsp,%rbp
    7624:	48 83 ec 20          	sub    $0x20,%rsp
    7628:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    762c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7630:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7635:	74 40                	je     7677 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    763b:	48 89 c7             	mov    %rax,%rdi
    763e:	e8 a2 05 00 00       	call   7be5 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    7643:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7647:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    764b:	48 89 c7             	mov    %rax,%rdi
    764e:	e8 a0 05 00 00       	call   7bf3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    7653:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7658:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    765c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7660:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7668:	48 89 ce             	mov    %rcx,%rsi
    766b:	48 89 c7             	mov    %rax,%rdi
    766e:	e8 a7 05 00 00       	call   7c1a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    7673:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    767b:	c9                   	leave
    767c:	c3                   	ret
    767d:	90                   	nop

000000000000767e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    767e:	55                   	push   %rbp
    767f:	48 89 e5             	mov    %rsp,%rbp
    7682:	48 83 ec 10          	sub    $0x10,%rsp
    7686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    768a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    768e:	48 89 c7             	mov    %rax,%rdi
    7691:	e8 c8 05 00 00       	call   7c5e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7696:	c9                   	leave
    7697:	c3                   	ret

0000000000007698 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7698:	55                   	push   %rbp
    7699:	48 89 e5             	mov    %rsp,%rbp
    769c:	48 83 ec 10          	sub    $0x10,%rsp
    76a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    76a8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    76ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76b0:	ba 00 00 00 00       	mov    $0x0,%edx
    76b5:	48 89 ce             	mov    %rcx,%rsi
    76b8:	48 89 c7             	mov    %rax,%rdi
    76bb:	e8 b2 05 00 00       	call   7c72 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    76c0:	c9                   	leave
    76c1:	c3                   	ret

00000000000076c2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    76c2:	55                   	push   %rbp
    76c3:	48 89 e5             	mov    %rsp,%rbp
    76c6:	48 83 ec 20          	sub    $0x20,%rsp
    76ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    76d2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    76d7:	74 40                	je     7719 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    76d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76dd:	48 89 c7             	mov    %rax,%rdi
    76e0:	e8 60 fb ff ff       	call   7245 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    76e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    76e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ed:	48 89 c7             	mov    %rax,%rdi
    76f0:	e8 e7 05 00 00       	call   7cdc <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    76f5:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    76fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76fe:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7702:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    770a:	48 89 ce             	mov    %rcx,%rsi
    770d:	48 89 c7             	mov    %rax,%rdi
    7710:	e8 10 06 00 00       	call   7d25 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    7715:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7719:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    771d:	c9                   	leave
    771e:	c3                   	ret
    771f:	90                   	nop

0000000000007720 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7720:	55                   	push   %rbp
    7721:	48 89 e5             	mov    %rsp,%rbp
    7724:	48 83 ec 10          	sub    $0x10,%rsp
    7728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    772c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7730:	48 89 c7             	mov    %rax,%rdi
    7733:	e8 32 06 00 00       	call   7d6a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    7738:	c9                   	leave
    7739:	c3                   	ret

000000000000773a <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    773a:	55                   	push   %rbp
    773b:	48 89 e5             	mov    %rsp,%rbp
    773e:	48 83 ec 10          	sub    $0x10,%rsp
    7742:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7746:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    774a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    774e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7752:	ba 00 00 00 00       	mov    $0x0,%edx
    7757:	48 89 ce             	mov    %rcx,%rsi
    775a:	48 89 c7             	mov    %rax,%rdi
    775d:	e8 1c 06 00 00       	call   7d7e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    7762:	c9                   	leave
    7763:	c3                   	ret

0000000000007764 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7764:	55                   	push   %rbp
    7765:	48 89 e5             	mov    %rsp,%rbp
    7768:	48 83 ec 20          	sub    $0x20,%rsp
    776c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7770:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    7774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7778:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    777c:	eb 1e                	jmp    779c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    777e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7782:	48 89 c7             	mov    %rax,%rdi
    7785:	e8 5f 06 00 00       	call   7de9 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    778a:	48 89 c7             	mov    %rax,%rdi
    778d:	e8 65 06 00 00       	call   7df7 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    7792:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    7797:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    779c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    77a1:	75 db                	jne    777e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    77a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    77a7:	c9                   	leave
    77a8:	c3                   	ret
    77a9:	90                   	nop

00000000000077aa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    77aa:	55                   	push   %rbp
    77ab:	48 89 e5             	mov    %rsp,%rbp
    77ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    77b2:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    77b9:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    77bc:	5d                   	pop    %rbp
    77bd:	c3                   	ret

00000000000077be <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    77be:	55                   	push   %rbp
    77bf:	48 89 e5             	mov    %rsp,%rbp
    77c2:	48 83 ec 20          	sub    $0x20,%rsp
    77c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    77d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77d6:	48 89 c7             	mov    %rax,%rdi
    77d9:	e8 cc ff ff ff       	call   77aa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    77de:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    77e2:	0f 92 c0             	setb   %al
    77e5:	0f b6 c0             	movzbl %al,%eax
    77e8:	48 85 c0             	test   %rax,%rax
    77eb:	0f 95 c0             	setne  %al
    77ee:	84 c0                	test   %al,%al
    77f0:	74 1a                	je     780c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    77f2:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    77f9:	0f fc 00 
    77fc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7800:	73 05                	jae    7807 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7802:	e8 99 b9 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7807:	e8 84 b8 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    780c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7810:	48 89 d0             	mov    %rdx,%rax
    7813:	48 c1 e0 06          	shl    $0x6,%rax
    7817:	48 01 d0             	add    %rdx,%rax
    781a:	48 c1 e0 02          	shl    $0x2,%rax
    781e:	48 89 c7             	mov    %rax,%rdi
    7821:	e8 3a ba ff ff       	call   3260 <_Znwm@plt>
    7826:	90                   	nop
      }
    7827:	c9                   	leave
    7828:	c3                   	ret

0000000000007829 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7829:	55                   	push   %rbp
    782a:	48 89 e5             	mov    %rsp,%rbp
    782d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7835:	5d                   	pop    %rbp
    7836:	c3                   	ret

0000000000007837 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7837:	55                   	push   %rbp
    7838:	48 89 e5             	mov    %rsp,%rbp
    783b:	48 83 ec 10          	sub    $0x10,%rsp
    783f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7847:	48 89 c6             	mov    %rax,%rsi
    784a:	bf 04 01 00 00       	mov    $0x104,%edi
    784f:	e8 67 ce ff ff       	call   46bb <_ZnwmPv>
    7854:	b9 04 01 00 00       	mov    $0x104,%ecx
    7859:	be 00 00 00 00       	mov    $0x0,%esi
    785e:	48 89 30             	mov    %rsi,(%rax)
    7861:	89 ca                	mov    %ecx,%edx
    7863:	48 01 c2             	add    %rax,%rdx
    7866:	48 83 c2 08          	add    $0x8,%rdx
    786a:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    786e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7872:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    7876:	48 29 d0             	sub    %rdx,%rax
    7879:	01 c1                	add    %eax,%ecx
    787b:	83 e1 f8             	and    $0xfffffff8,%ecx
    787e:	89 c8                	mov    %ecx,%eax
    7880:	c1 e8 03             	shr    $0x3,%eax
    7883:	89 c1                	mov    %eax,%ecx
    7885:	48 89 d7             	mov    %rdx,%rdi
    7888:	48 89 f0             	mov    %rsi,%rax
    788b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    788e:	90                   	nop
    788f:	c9                   	leave
    7890:	c3                   	ret

0000000000007891 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7891:	55                   	push   %rbp
    7892:	48 89 e5             	mov    %rsp,%rbp
    7895:	48 83 ec 20          	sub    $0x20,%rsp
    7899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    789d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    78a5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    78a9:	48 89 c7             	mov    %rax,%rdi
    78ac:	e8 6e 05 00 00       	call   7e1f <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    78b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    78b5:	48 89 c7             	mov    %rax,%rdi
    78b8:	e8 10 ce ff ff       	call   46cd <_ZSt17__size_to_integerm>
    78bd:	48 89 c1             	mov    %rax,%rcx
    78c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78c8:	48 89 ce             	mov    %rcx,%rsi
    78cb:	48 89 c7             	mov    %rax,%rdi
    78ce:	e8 57 05 00 00       	call   7e2a <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    78d3:	c9                   	leave
    78d4:	c3                   	ret
    78d5:	90                   	nop

00000000000078d6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    78d6:	55                   	push   %rbp
    78d7:	48 89 e5             	mov    %rsp,%rbp
    78da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    78de:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    78e5:	ff ff 0f 
      }
    78e8:	5d                   	pop    %rbp
    78e9:	c3                   	ret

00000000000078ea <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    78ea:	55                   	push   %rbp
    78eb:	48 89 e5             	mov    %rsp,%rbp
    78ee:	48 83 ec 20          	sub    $0x20,%rsp
    78f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    78fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7902:	48 89 c7             	mov    %rax,%rdi
    7905:	e8 cc ff ff ff       	call   78d6 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    790a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    790e:	0f 92 c0             	setb   %al
    7911:	0f b6 c0             	movzbl %al,%eax
    7914:	48 85 c0             	test   %rax,%rax
    7917:	0f 95 c0             	setne  %al
    791a:	84 c0                	test   %al,%al
    791c:	74 1a                	je     7938 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    791e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7925:	ff ff 1f 
    7928:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    792c:	73 05                	jae    7933 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    792e:	e8 6d b8 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7933:	e8 58 b7 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    793c:	48 c1 e0 03          	shl    $0x3,%rax
    7940:	48 89 c7             	mov    %rax,%rdi
    7943:	e8 18 b9 ff ff       	call   3260 <_Znwm@plt>
    7948:	90                   	nop
      }
    7949:	c9                   	leave
    794a:	c3                   	ret

000000000000794b <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    794b:	55                   	push   %rbp
    794c:	48 89 e5             	mov    %rsp,%rbp
    794f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7957:	5d                   	pop    %rbp
    7958:	c3                   	ret

0000000000007959 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7959:	55                   	push   %rbp
    795a:	48 89 e5             	mov    %rsp,%rbp
    795d:	48 83 ec 10          	sub    $0x10,%rsp
    7961:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7969:	48 89 c6             	mov    %rax,%rsi
    796c:	bf 08 00 00 00       	mov    $0x8,%edi
    7971:	e8 45 cd ff ff       	call   46bb <_ZnwmPv>
    7976:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    797d:	90                   	nop
    797e:	c9                   	leave
    797f:	c3                   	ret

0000000000007980 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7980:	55                   	push   %rbp
    7981:	48 89 e5             	mov    %rsp,%rbp
    7984:	48 83 ec 20          	sub    $0x20,%rsp
    7988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    798c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7990:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    7994:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7998:	48 89 c7             	mov    %rax,%rdi
    799b:	e8 f9 04 00 00       	call   7e99 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    79a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79a4:	48 89 c7             	mov    %rax,%rdi
    79a7:	e8 21 cd ff ff       	call   46cd <_ZSt17__size_to_integerm>
    79ac:	48 89 c1             	mov    %rax,%rcx
    79af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79b7:	48 89 ce             	mov    %rcx,%rsi
    79ba:	48 89 c7             	mov    %rax,%rdi
    79bd:	e8 e2 04 00 00       	call   7ea4 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    79c2:	c9                   	leave
    79c3:	c3                   	ret

00000000000079c4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    79c4:	55                   	push   %rbp
    79c5:	48 89 e5             	mov    %rsp,%rbp
    79c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    79cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79d0:	5d                   	pop    %rbp
    79d1:	c3                   	ret

00000000000079d2 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    79d2:	55                   	push   %rbp
    79d3:	48 89 e5             	mov    %rsp,%rbp
    79d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    79da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79de:	5d                   	pop    %rbp
    79df:	c3                   	ret

00000000000079e0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    79e0:	55                   	push   %rbp
    79e1:	48 89 e5             	mov    %rsp,%rbp
    79e4:	48 83 ec 30          	sub    $0x30,%rsp
    79e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    79f0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    79f4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    79f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79fc:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    7a00:	48 c1 f8 03          	sar    $0x3,%rax
    7a04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    7a08:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7a0d:	7e 1f                	jle    7a2e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    7a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a13:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7a1a:	00 
    7a1b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7a1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a23:	48 89 ce             	mov    %rcx,%rsi
    7a26:	48 89 c7             	mov    %rax,%rdi
    7a29:	e8 f2 b9 ff ff       	call   3420 <memmove@plt>
      return __result + __count;
    7a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a32:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7a39:	00 
    7a3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a3e:	48 01 d0             	add    %rdx,%rax
    }
    7a41:	c9                   	leave
    7a42:	c3                   	ret
    7a43:	90                   	nop

0000000000007a44 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7a44:	55                   	push   %rbp
    7a45:	48 89 e5             	mov    %rsp,%rbp
    7a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7a4c:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    7a53:	03 3f 00 
      }
    7a56:	5d                   	pop    %rbp
    7a57:	c3                   	ret

0000000000007a58 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7a58:	55                   	push   %rbp
    7a59:	48 89 e5             	mov    %rsp,%rbp
    7a5c:	48 83 ec 20          	sub    $0x20,%rsp
    7a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a70:	48 89 c7             	mov    %rax,%rdi
    7a73:	e8 cc ff ff ff       	call   7a44 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    7a78:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7a7c:	0f 92 c0             	setb   %al
    7a7f:	0f b6 c0             	movzbl %al,%eax
    7a82:	48 85 c0             	test   %rax,%rax
    7a85:	0f 95 c0             	setne  %al
    7a88:	84 c0                	test   %al,%al
    7a8a:	74 1a                	je     7aa6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7a8c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    7a93:	07 7e 00 
    7a96:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7a9a:	73 05                	jae    7aa1 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7a9c:	e8 ff b6 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7aa1:	e8 ea b5 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7aa6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7aaa:	48 89 d0             	mov    %rdx,%rax
    7aad:	48 c1 e0 06          	shl    $0x6,%rax
    7ab1:	48 01 d0             	add    %rdx,%rax
    7ab4:	48 c1 e0 03          	shl    $0x3,%rax
    7ab8:	48 89 c7             	mov    %rax,%rdi
    7abb:	e8 a0 b7 ff ff       	call   3260 <_Znwm@plt>
    7ac0:	90                   	nop
      }
    7ac1:	c9                   	leave
    7ac2:	c3                   	ret

0000000000007ac3 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7ac3:	55                   	push   %rbp
    7ac4:	48 89 e5             	mov    %rsp,%rbp
    7ac7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7acf:	5d                   	pop    %rbp
    7ad0:	c3                   	ret

0000000000007ad1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7ad1:	55                   	push   %rbp
    7ad2:	48 89 e5             	mov    %rsp,%rbp
    7ad5:	48 83 ec 10          	sub    $0x10,%rsp
    7ad9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ae1:	48 89 c6             	mov    %rax,%rsi
    7ae4:	bf 08 02 00 00       	mov    $0x208,%edi
    7ae9:	e8 cd cb ff ff       	call   46bb <_ZnwmPv>
    7aee:	b9 08 02 00 00       	mov    $0x208,%ecx
    7af3:	be 00 00 00 00       	mov    $0x0,%esi
    7af8:	48 89 30             	mov    %rsi,(%rax)
    7afb:	89 ca                	mov    %ecx,%edx
    7afd:	48 01 c2             	add    %rax,%rdx
    7b00:	48 83 c2 08          	add    $0x8,%rdx
    7b04:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    7b08:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7b0c:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    7b10:	48 29 d0             	sub    %rdx,%rax
    7b13:	01 c1                	add    %eax,%ecx
    7b15:	83 e1 f8             	and    $0xfffffff8,%ecx
    7b18:	89 c8                	mov    %ecx,%eax
    7b1a:	c1 e8 03             	shr    $0x3,%eax
    7b1d:	89 c1                	mov    %eax,%ecx
    7b1f:	48 89 d7             	mov    %rdx,%rdi
    7b22:	48 89 f0             	mov    %rsi,%rax
    7b25:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    7b28:	90                   	nop
    7b29:	c9                   	leave
    7b2a:	c3                   	ret

0000000000007b2b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7b2b:	55                   	push   %rbp
    7b2c:	48 89 e5             	mov    %rsp,%rbp
    7b2f:	48 83 ec 20          	sub    $0x20,%rsp
    7b33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    7b3f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7b43:	48 89 c7             	mov    %rax,%rdi
    7b46:	e8 b6 03 00 00       	call   7f01 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7b4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b4f:	48 89 c7             	mov    %rax,%rdi
    7b52:	e8 76 cb ff ff       	call   46cd <_ZSt17__size_to_integerm>
    7b57:	48 89 c1             	mov    %rax,%rcx
    7b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b62:	48 89 ce             	mov    %rcx,%rsi
    7b65:	48 89 c7             	mov    %rax,%rdi
    7b68:	e8 9f 03 00 00       	call   7f0c <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    7b6d:	c9                   	leave
    7b6e:	c3                   	ret
    7b6f:	90                   	nop

0000000000007b70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7b70:	55                   	push   %rbp
    7b71:	48 89 e5             	mov    %rsp,%rbp
    7b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7b78:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7b7f:	ff ff 0f 
      }
    7b82:	5d                   	pop    %rbp
    7b83:	c3                   	ret

0000000000007b84 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7b84:	55                   	push   %rbp
    7b85:	48 89 e5             	mov    %rsp,%rbp
    7b88:	48 83 ec 20          	sub    $0x20,%rsp
    7b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b9c:	48 89 c7             	mov    %rax,%rdi
    7b9f:	e8 cc ff ff ff       	call   7b70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    7ba4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7ba8:	0f 92 c0             	setb   %al
    7bab:	0f b6 c0             	movzbl %al,%eax
    7bae:	48 85 c0             	test   %rax,%rax
    7bb1:	0f 95 c0             	setne  %al
    7bb4:	84 c0                	test   %al,%al
    7bb6:	74 1a                	je     7bd2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7bb8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7bbf:	ff ff 1f 
    7bc2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7bc6:	73 05                	jae    7bcd <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7bc8:	e8 d3 b5 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7bcd:	e8 be b4 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7bd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7bd6:	48 c1 e0 03          	shl    $0x3,%rax
    7bda:	48 89 c7             	mov    %rax,%rdi
    7bdd:	e8 7e b6 ff ff       	call   3260 <_Znwm@plt>
    7be2:	90                   	nop
      }
    7be3:	c9                   	leave
    7be4:	c3                   	ret

0000000000007be5 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7be5:	55                   	push   %rbp
    7be6:	48 89 e5             	mov    %rsp,%rbp
    7be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bf1:	5d                   	pop    %rbp
    7bf2:	c3                   	ret

0000000000007bf3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7bf3:	55                   	push   %rbp
    7bf4:	48 89 e5             	mov    %rsp,%rbp
    7bf7:	48 83 ec 10          	sub    $0x10,%rsp
    7bfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c03:	48 89 c6             	mov    %rax,%rsi
    7c06:	bf 08 00 00 00       	mov    $0x8,%edi
    7c0b:	e8 ab ca ff ff       	call   46bb <_ZnwmPv>
    7c10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    7c17:	90                   	nop
    7c18:	c9                   	leave
    7c19:	c3                   	ret

0000000000007c1a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7c1a:	55                   	push   %rbp
    7c1b:	48 89 e5             	mov    %rsp,%rbp
    7c1e:	48 83 ec 20          	sub    $0x20,%rsp
    7c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    7c2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7c32:	48 89 c7             	mov    %rax,%rdi
    7c35:	e8 41 03 00 00       	call   7f7b <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7c3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7c3e:	48 89 c7             	mov    %rax,%rdi
    7c41:	e8 87 ca ff ff       	call   46cd <_ZSt17__size_to_integerm>
    7c46:	48 89 c1             	mov    %rax,%rcx
    7c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7c51:	48 89 ce             	mov    %rcx,%rsi
    7c54:	48 89 c7             	mov    %rax,%rdi
    7c57:	e8 2a 03 00 00       	call   7f86 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    7c5c:	c9                   	leave
    7c5d:	c3                   	ret

0000000000007c5e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7c5e:	55                   	push   %rbp
    7c5f:	48 89 e5             	mov    %rsp,%rbp
    7c62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7c66:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    7c6d:	55 55 05 
      }
    7c70:	5d                   	pop    %rbp
    7c71:	c3                   	ret

0000000000007c72 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7c72:	55                   	push   %rbp
    7c73:	48 89 e5             	mov    %rsp,%rbp
    7c76:	48 83 ec 20          	sub    $0x20,%rsp
    7c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7c86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c8a:	48 89 c7             	mov    %rax,%rdi
    7c8d:	e8 cc ff ff ff       	call   7c5e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7c92:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7c96:	0f 92 c0             	setb   %al
    7c99:	0f b6 c0             	movzbl %al,%eax
    7c9c:	48 85 c0             	test   %rax,%rax
    7c9f:	0f 95 c0             	setne  %al
    7ca2:	84 c0                	test   %al,%al
    7ca4:	74 1a                	je     7cc0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7ca6:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    7cad:	aa aa 0a 
    7cb0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7cb4:	73 05                	jae    7cbb <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7cb6:	e8 e5 b4 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7cbb:	e8 d0 b3 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7cc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7cc4:	48 89 d0             	mov    %rdx,%rax
    7cc7:	48 01 c0             	add    %rax,%rax
    7cca:	48 01 d0             	add    %rdx,%rax
    7ccd:	48 c1 e0 03          	shl    $0x3,%rax
    7cd1:	48 89 c7             	mov    %rax,%rdi
    7cd4:	e8 87 b5 ff ff       	call   3260 <_Znwm@plt>
    7cd9:	90                   	nop
      }
    7cda:	c9                   	leave
    7cdb:	c3                   	ret

0000000000007cdc <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7cdc:	55                   	push   %rbp
    7cdd:	48 89 e5             	mov    %rsp,%rbp
    7ce0:	48 83 ec 10          	sub    $0x10,%rsp
    7ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cec:	48 89 c6             	mov    %rax,%rsi
    7cef:	bf 18 00 00 00       	mov    $0x18,%edi
    7cf4:	e8 c2 c9 ff ff       	call   46bb <_ZnwmPv>
    7cf9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    7cff:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    7d06:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    7d0d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    7d14:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    7d1b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    7d22:	90                   	nop
    7d23:	c9                   	leave
    7d24:	c3                   	ret

0000000000007d25 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7d25:	55                   	push   %rbp
    7d26:	48 89 e5             	mov    %rsp,%rbp
    7d29:	48 83 ec 20          	sub    $0x20,%rsp
    7d2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d35:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    7d39:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7d3d:	48 89 c7             	mov    %rax,%rdi
    7d40:	e8 9e 02 00 00       	call   7fe3 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7d45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d49:	48 89 c7             	mov    %rax,%rdi
    7d4c:	e8 7c c9 ff ff       	call   46cd <_ZSt17__size_to_integerm>
    7d51:	48 89 c1             	mov    %rax,%rcx
    7d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7d5c:	48 89 ce             	mov    %rcx,%rsi
    7d5f:	48 89 c7             	mov    %rax,%rdi
    7d62:	e8 87 02 00 00       	call   7fee <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    7d67:	c9                   	leave
    7d68:	c3                   	ret
    7d69:	90                   	nop

0000000000007d6a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7d6a:	55                   	push   %rbp
    7d6b:	48 89 e5             	mov    %rsp,%rbp
    7d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7d72:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    7d79:	49 92 04 
      }
    7d7c:	5d                   	pop    %rbp
    7d7d:	c3                   	ret

0000000000007d7e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7d7e:	55                   	push   %rbp
    7d7f:	48 89 e5             	mov    %rsp,%rbp
    7d82:	48 83 ec 20          	sub    $0x20,%rsp
    7d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d96:	48 89 c7             	mov    %rax,%rdi
    7d99:	e8 cc ff ff ff       	call   7d6a <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    7d9e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7da2:	0f 92 c0             	setb   %al
    7da5:	0f b6 c0             	movzbl %al,%eax
    7da8:	48 85 c0             	test   %rax,%rax
    7dab:	0f 95 c0             	setne  %al
    7dae:	84 c0                	test   %al,%al
    7db0:	74 1a                	je     7dcc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7db2:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    7db9:	92 24 09 
    7dbc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7dc0:	73 05                	jae    7dc7 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7dc2:	e8 d9 b3 ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7dc7:	e8 c4 b2 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7dcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7dd0:	48 89 d0             	mov    %rdx,%rax
    7dd3:	48 c1 e0 03          	shl    $0x3,%rax
    7dd7:	48 29 d0             	sub    %rdx,%rax
    7dda:	48 c1 e0 02          	shl    $0x2,%rax
    7dde:	48 89 c7             	mov    %rax,%rdi
    7de1:	e8 7a b4 ff ff       	call   3260 <_Znwm@plt>
    7de6:	90                   	nop
      }
    7de7:	c9                   	leave
    7de8:	c3                   	ret

0000000000007de9 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7de9:	55                   	push   %rbp
    7dea:	48 89 e5             	mov    %rsp,%rbp
    7ded:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7df5:	5d                   	pop    %rbp
    7df6:	c3                   	ret

0000000000007df7 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7df7:	55                   	push   %rbp
    7df8:	48 89 e5             	mov    %rsp,%rbp
    7dfb:	48 83 ec 10          	sub    $0x10,%rsp
    7dff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e07:	48 89 c6             	mov    %rax,%rsi
    7e0a:	bf 1c 00 00 00       	mov    $0x1c,%edi
    7e0f:	e8 a7 c8 ff ff       	call   46bb <_ZnwmPv>
    7e14:	48 89 c7             	mov    %rax,%rdi
    7e17:	e8 9c 02 00 00       	call   80b8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    7e1c:	90                   	nop
    7e1d:	c9                   	leave
    7e1e:	c3                   	ret

0000000000007e1f <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    7e1f:	55                   	push   %rbp
    7e20:	48 89 e5             	mov    %rsp,%rbp
    7e23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7e27:	90                   	nop
    7e28:	5d                   	pop    %rbp
    7e29:	c3                   	ret

0000000000007e2a <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7e2a:	55                   	push   %rbp
    7e2b:	48 89 e5             	mov    %rsp,%rbp
    7e2e:	48 83 ec 20          	sub    $0x20,%rsp
    7e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7e3e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7e43:	75 06                	jne    7e4b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7e45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e49:	eb 4c                	jmp    7e97 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    7e4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e4f:	48 89 d0             	mov    %rdx,%rax
    7e52:	48 c1 e0 06          	shl    $0x6,%rax
    7e56:	48 01 d0             	add    %rdx,%rax
    7e59:	48 c1 e0 02          	shl    $0x2,%rax
    7e5d:	48 89 c2             	mov    %rax,%rdx
    7e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e64:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7e68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e70:	48 89 ce             	mov    %rcx,%rsi
    7e73:	48 89 c7             	mov    %rax,%rdi
    7e76:	e8 58 02 00 00       	call   80d3 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    7e7b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e7f:	48 89 d0             	mov    %rdx,%rax
    7e82:	48 c1 e0 06          	shl    $0x6,%rax
    7e86:	48 01 d0             	add    %rdx,%rax
    7e89:	48 c1 e0 02          	shl    $0x2,%rax
    7e8d:	48 89 c2             	mov    %rax,%rdx
    7e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e94:	48 01 d0             	add    %rdx,%rax
    }
    7e97:	c9                   	leave
    7e98:	c3                   	ret

0000000000007e99 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    7e99:	55                   	push   %rbp
    7e9a:	48 89 e5             	mov    %rsp,%rbp
    7e9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7ea1:	90                   	nop
    7ea2:	5d                   	pop    %rbp
    7ea3:	c3                   	ret

0000000000007ea4 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7ea4:	55                   	push   %rbp
    7ea5:	48 89 e5             	mov    %rsp,%rbp
    7ea8:	48 83 ec 20          	sub    $0x20,%rsp
    7eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7eb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7eb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7eb8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7ebd:	75 06                	jne    7ec5 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ec3:	eb 3a                	jmp    7eff <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    7ec5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7ec9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ed0:	00 
    7ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ed5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7ed9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ee1:	48 89 ce             	mov    %rcx,%rsi
    7ee4:	48 89 c7             	mov    %rax,%rdi
    7ee7:	e8 15 02 00 00       	call   8101 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    7eec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7ef0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ef7:	00 
    7ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7efc:	48 01 d0             	add    %rdx,%rax
    }
    7eff:	c9                   	leave
    7f00:	c3                   	ret

0000000000007f01 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    7f01:	55                   	push   %rbp
    7f02:	48 89 e5             	mov    %rsp,%rbp
    7f05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7f09:	90                   	nop
    7f0a:	5d                   	pop    %rbp
    7f0b:	c3                   	ret

0000000000007f0c <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7f0c:	55                   	push   %rbp
    7f0d:	48 89 e5             	mov    %rsp,%rbp
    7f10:	48 83 ec 20          	sub    $0x20,%rsp
    7f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7f20:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7f25:	75 06                	jne    7f2d <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f2b:	eb 4c                	jmp    7f79 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    7f2d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f31:	48 89 d0             	mov    %rdx,%rax
    7f34:	48 c1 e0 06          	shl    $0x6,%rax
    7f38:	48 01 d0             	add    %rdx,%rax
    7f3b:	48 c1 e0 03          	shl    $0x3,%rax
    7f3f:	48 89 c2             	mov    %rax,%rdx
    7f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f46:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7f4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f52:	48 89 ce             	mov    %rcx,%rsi
    7f55:	48 89 c7             	mov    %rax,%rdi
    7f58:	e8 d2 01 00 00       	call   812f <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    7f5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f61:	48 89 d0             	mov    %rdx,%rax
    7f64:	48 c1 e0 06          	shl    $0x6,%rax
    7f68:	48 01 d0             	add    %rdx,%rax
    7f6b:	48 c1 e0 03          	shl    $0x3,%rax
    7f6f:	48 89 c2             	mov    %rax,%rdx
    7f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f76:	48 01 d0             	add    %rdx,%rax
    }
    7f79:	c9                   	leave
    7f7a:	c3                   	ret

0000000000007f7b <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    7f7b:	55                   	push   %rbp
    7f7c:	48 89 e5             	mov    %rsp,%rbp
    7f7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7f83:	90                   	nop
    7f84:	5d                   	pop    %rbp
    7f85:	c3                   	ret

0000000000007f86 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7f86:	55                   	push   %rbp
    7f87:	48 89 e5             	mov    %rsp,%rbp
    7f8a:	48 83 ec 20          	sub    $0x20,%rsp
    7f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7f9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7f9f:	75 06                	jne    7fa7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa5:	eb 3a                	jmp    7fe1 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    7fa7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7fb2:	00 
    7fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fb7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7fbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7fbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc3:	48 89 ce             	mov    %rcx,%rsi
    7fc6:	48 89 c7             	mov    %rax,%rdi
    7fc9:	e8 8f 01 00 00       	call   815d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    7fce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fd2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7fd9:	00 
    7fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fde:	48 01 d0             	add    %rdx,%rax
    }
    7fe1:	c9                   	leave
    7fe2:	c3                   	ret

0000000000007fe3 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    7fe3:	55                   	push   %rbp
    7fe4:	48 89 e5             	mov    %rsp,%rbp
    7fe7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7feb:	90                   	nop
    7fec:	5d                   	pop    %rbp
    7fed:	c3                   	ret

0000000000007fee <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7fee:	55                   	push   %rbp
    7fef:	48 89 e5             	mov    %rsp,%rbp
    7ff2:	48 83 ec 20          	sub    $0x20,%rsp
    7ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ffa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ffe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8002:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8007:	75 06                	jne    800f <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800d:	eb 4a                	jmp    8059 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    800f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8013:	48 89 d0             	mov    %rdx,%rax
    8016:	48 01 c0             	add    %rax,%rax
    8019:	48 01 d0             	add    %rdx,%rax
    801c:	48 c1 e0 03          	shl    $0x3,%rax
    8020:	48 89 c2             	mov    %rax,%rdx
    8023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8027:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    802b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    802f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8033:	48 89 ce             	mov    %rcx,%rsi
    8036:	48 89 c7             	mov    %rax,%rdi
    8039:	e8 4d 01 00 00       	call   818b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    803e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8042:	48 89 d0             	mov    %rdx,%rax
    8045:	48 01 c0             	add    %rax,%rax
    8048:	48 01 d0             	add    %rdx,%rax
    804b:	48 c1 e0 03          	shl    $0x3,%rax
    804f:	48 89 c2             	mov    %rax,%rdx
    8052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8056:	48 01 d0             	add    %rdx,%rax
    }
    8059:	c9                   	leave
    805a:	c3                   	ret
    805b:	90                   	nop

000000000000805c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    805c:	55                   	push   %rbp
    805d:	48 89 e5             	mov    %rsp,%rbp
    8060:	48 83 ec 10          	sub    $0x10,%rsp
    8064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    806c:	48 89 c7             	mov    %rax,%rdi
    806f:	e8 46 01 00 00       	call   81ba <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    8074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8078:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    807c:	90                   	nop
    807d:	c9                   	leave
    807e:	c3                   	ret
    807f:	90                   	nop

0000000000008080 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    8080:	55                   	push   %rbp
    8081:	48 89 e5             	mov    %rsp,%rbp
    8084:	48 83 ec 10          	sub    $0x10,%rsp
    8088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    808c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8090:	48 89 c7             	mov    %rax,%rdi
    8093:	e8 c4 ff ff ff       	call   805c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    8098:	90                   	nop
    8099:	c9                   	leave
    809a:	c3                   	ret
    809b:	90                   	nop

000000000000809c <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    809c:	55                   	push   %rbp
    809d:	48 89 e5             	mov    %rsp,%rbp
    80a0:	48 83 ec 10          	sub    $0x10,%rsp
    80a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ac:	48 89 c7             	mov    %rax,%rdi
    80af:	e8 cc ff ff ff       	call   8080 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    80b4:	90                   	nop
    80b5:	c9                   	leave
    80b6:	c3                   	ret
    80b7:	90                   	nop

00000000000080b8 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    80b8:	55                   	push   %rbp
    80b9:	48 89 e5             	mov    %rsp,%rbp
    80bc:	48 83 ec 10          	sub    $0x10,%rsp
    80c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80c8:	48 89 c7             	mov    %rax,%rdi
    80cb:	e8 cc ff ff ff       	call   809c <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    80d0:	90                   	nop
    80d1:	c9                   	leave
    80d2:	c3                   	ret

00000000000080d3 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    80d3:	55                   	push   %rbp
    80d4:	48 89 e5             	mov    %rsp,%rbp
    80d7:	48 83 ec 20          	sub    $0x20,%rsp
    80db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    80e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    80e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    80eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    80ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80f3:	48 89 ce             	mov    %rcx,%rsi
    80f6:	48 89 c7             	mov    %rax,%rdi
    80f9:	e8 c7 00 00 00       	call   81c5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    80fe:	90                   	nop
    80ff:	c9                   	leave
    8100:	c3                   	ret

0000000000008101 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8101:	55                   	push   %rbp
    8102:	48 89 e5             	mov    %rsp,%rbp
    8105:	48 83 ec 20          	sub    $0x20,%rsp
    8109:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    810d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8111:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8115:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8119:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    811d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8121:	48 89 ce             	mov    %rcx,%rsi
    8124:	48 89 c7             	mov    %rax,%rdi
    8127:	e8 11 01 00 00       	call   823d <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    812c:	90                   	nop
    812d:	c9                   	leave
    812e:	c3                   	ret

000000000000812f <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    812f:	55                   	push   %rbp
    8130:	48 89 e5             	mov    %rsp,%rbp
    8133:	48 83 ec 20          	sub    $0x20,%rsp
    8137:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    813b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    813f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8143:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8147:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    814b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    814f:	48 89 ce             	mov    %rcx,%rsi
    8152:	48 89 c7             	mov    %rax,%rdi
    8155:	e8 1e 01 00 00       	call   8278 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    815a:	90                   	nop
    815b:	c9                   	leave
    815c:	c3                   	ret

000000000000815d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    815d:	55                   	push   %rbp
    815e:	48 89 e5             	mov    %rsp,%rbp
    8161:	48 83 ec 20          	sub    $0x20,%rsp
    8165:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8169:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    816d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8171:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8175:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    817d:	48 89 ce             	mov    %rcx,%rsi
    8180:	48 89 c7             	mov    %rax,%rdi
    8183:	e8 68 01 00 00       	call   82f0 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    8188:	90                   	nop
    8189:	c9                   	leave
    818a:	c3                   	ret

000000000000818b <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    818b:	55                   	push   %rbp
    818c:	48 89 e5             	mov    %rsp,%rbp
    818f:	48 83 ec 20          	sub    $0x20,%rsp
    8193:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8197:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    819b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    819f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    81a3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    81a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81ab:	48 89 ce             	mov    %rcx,%rsi
    81ae:	48 89 c7             	mov    %rax,%rdi
    81b1:	e8 75 01 00 00       	call   832b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    81b6:	90                   	nop
    81b7:	c9                   	leave
    81b8:	c3                   	ret
    81b9:	90                   	nop

00000000000081ba <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    81ba:	55                   	push   %rbp
    81bb:	48 89 e5             	mov    %rsp,%rbp
    81be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81c2:	90                   	nop
    81c3:	5d                   	pop    %rbp
    81c4:	c3                   	ret

00000000000081c5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    81c5:	55                   	push   %rbp
    81c6:	48 89 e5             	mov    %rsp,%rbp
    81c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    81d5:	eb 58                	jmp    822f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    81d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    81df:	b9 04 01 00 00       	mov    $0x104,%ecx
    81e4:	48 8b 32             	mov    (%rdx),%rsi
    81e7:	48 89 30             	mov    %rsi,(%rax)
    81ea:	89 ce                	mov    %ecx,%esi
    81ec:	48 01 c6             	add    %rax,%rsi
    81ef:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    81f3:	89 ce                	mov    %ecx,%esi
    81f5:	48 01 d6             	add    %rdx,%rsi
    81f8:	48 83 c6 08          	add    $0x8,%rsi
    81fc:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    8200:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    8204:	48 8d 78 08          	lea    0x8(%rax),%rdi
    8208:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    820c:	48 29 f8             	sub    %rdi,%rax
    820f:	48 29 c2             	sub    %rax,%rdx
    8212:	01 c1                	add    %eax,%ecx
    8214:	83 e1 f8             	and    $0xfffffff8,%ecx
    8217:	89 c8                	mov    %ecx,%eax
    8219:	c1 e8 03             	shr    $0x3,%eax
    821c:	89 c0                	mov    %eax,%eax
    821e:	48 89 d6             	mov    %rdx,%rsi
    8221:	48 89 c1             	mov    %rax,%rcx
    8224:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    8227:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    822e:	00 
    822f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8233:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8237:	75 9e                	jne    81d7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    8239:	90                   	nop
    823a:	90                   	nop
    823b:	5d                   	pop    %rbp
    823c:	c3                   	ret

000000000000823d <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    823d:	55                   	push   %rbp
    823e:	48 89 e5             	mov    %rsp,%rbp
    8241:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8245:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8249:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    824d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8251:	48 8b 00             	mov    (%rax),%rax
    8254:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    8258:	eb 10                	jmp    826a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    825a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    825e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8262:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    8265:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    826a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    826e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    8272:	75 e6                	jne    825a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    8274:	90                   	nop
    8275:	90                   	nop
    8276:	5d                   	pop    %rbp
    8277:	c3                   	ret

0000000000008278 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8278:	55                   	push   %rbp
    8279:	48 89 e5             	mov    %rsp,%rbp
    827c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8284:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    8288:	eb 58                	jmp    82e2 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    828a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8292:	b9 08 02 00 00       	mov    $0x208,%ecx
    8297:	48 8b 32             	mov    (%rdx),%rsi
    829a:	48 89 30             	mov    %rsi,(%rax)
    829d:	89 ce                	mov    %ecx,%esi
    829f:	48 01 c6             	add    %rax,%rsi
    82a2:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    82a6:	89 ce                	mov    %ecx,%esi
    82a8:	48 01 d6             	add    %rdx,%rsi
    82ab:	48 83 c6 08          	add    $0x8,%rsi
    82af:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    82b3:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    82b7:	48 8d 78 08          	lea    0x8(%rax),%rdi
    82bb:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    82bf:	48 29 f8             	sub    %rdi,%rax
    82c2:	48 29 c2             	sub    %rax,%rdx
    82c5:	01 c1                	add    %eax,%ecx
    82c7:	83 e1 f8             	and    $0xfffffff8,%ecx
    82ca:	89 c8                	mov    %ecx,%eax
    82cc:	c1 e8 03             	shr    $0x3,%eax
    82cf:	89 c0                	mov    %eax,%eax
    82d1:	48 89 d6             	mov    %rdx,%rsi
    82d4:	48 89 c1             	mov    %rax,%rcx
    82d7:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    82da:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    82e1:	00 
    82e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82e6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    82ea:	75 9e                	jne    828a <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    82ec:	90                   	nop
    82ed:	90                   	nop
    82ee:	5d                   	pop    %rbp
    82ef:	c3                   	ret

00000000000082f0 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    82f0:	55                   	push   %rbp
    82f1:	48 89 e5             	mov    %rsp,%rbp
    82f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    8300:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8304:	48 8b 00             	mov    (%rax),%rax
    8307:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    830b:	eb 10                	jmp    831d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    830d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8311:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8315:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    8318:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    831d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8321:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    8325:	75 e6                	jne    830d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    8327:	90                   	nop
    8328:	90                   	nop
    8329:	5d                   	pop    %rbp
    832a:	c3                   	ret

000000000000832b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    832b:	55                   	push   %rbp
    832c:	48 89 e5             	mov    %rsp,%rbp
    832f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8333:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8337:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    833b:	eb 23                	jmp    8360 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    833d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8341:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    8345:	48 8b 06             	mov    (%rsi),%rax
    8348:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    834c:	48 89 01             	mov    %rax,(%rcx)
    834f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    8353:	48 8b 46 10          	mov    0x10(%rsi),%rax
    8357:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    835b:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    8360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8364:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8368:	75 d3                	jne    833d <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    836a:	90                   	nop
    836b:	90                   	nop
    836c:	5d                   	pop    %rbp
    836d:	c3                   	ret

000000000000836e <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    836e:	55                   	push   %rbp
    836f:	48 89 e5             	mov    %rsp,%rbp
    8372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8376:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    837a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    837e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8382:	0f 11 00             	movups %xmm0,(%rax)
    8385:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8389:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    838d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8391:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    8397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    839b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    839f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    83a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83a7:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    83ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b2:	48 8d 15 47 6b 00 00 	lea    0x6b47(%rip),%rdx        # ef00 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    83b9:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    83bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83c1:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    83c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83cc:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    83d3:	90                   	nop
}
    83d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83d8:	5d                   	pop    %rbp
    83d9:	c3                   	ret

00000000000083da <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledExtensionCount,
    const char *const *ppEnabledExtensionNames, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    83da:	55                   	push   %rbp
    83db:	48 89 e5             	mov    %rsp,%rbp
    83de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83e6:	89 55 ec             	mov    %edx,-0x14(%rbp)
    83e9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    83ed:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
    83f1:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkInstanceCreateInfo createInfo{};
    83f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    83fd:	0f 11 00             	movups %xmm0,(%rax)
    8400:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8404:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    8408:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    840c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8410:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    8416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    841a:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    841e:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    8422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8426:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    842a:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    842e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8432:	8b 55 e8             	mov    -0x18(%rbp),%edx
    8435:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    8438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    843c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8440:	48 89 50 28          	mov    %rdx,0x28(%rax)
  createInfo.enabledExtensionCount = enabledExtensionCount;
    8444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8448:	8b 55 ec             	mov    -0x14(%rbp),%edx
    844b:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    844e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8452:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8456:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    845a:	90                   	nop
}
    845b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    845f:	5d                   	pop    %rbp
    8460:	c3                   	ret

0000000000008461 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfojPKPKcPK24VkPhysicalDeviceFeaturesjS6_PKv>:
    uint32_t queueCreateInfoCount,
    const VkDeviceQueueCreateInfo *pQueueCreateInfos,
    uint32_t enabledExtensionCount, const char *const *ppEnabledExtensionNames,
    const VkPhysicalDeviceFeatures *pEnabledFeatures,
    uint32_t enabledLayerCount, const char *const *ppEnabledLayerNames,
    const void *pNext) {
    8461:	55                   	push   %rbp
    8462:	48 89 e5             	mov    %rsp,%rbp
    8465:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8469:	89 75 f4             	mov    %esi,-0xc(%rbp)
    846c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    8470:	89 4d f0             	mov    %ecx,-0x10(%rbp)
    8473:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
    8477:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkDeviceCreateInfo deviceCreateInfo{};
    847b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    847f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8483:	0f 11 00             	movups %xmm0,(%rax)
    8486:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    848a:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    848e:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    8492:	66 0f d6 40 40       	movq   %xmm0,0x40(%rax)
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    8497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    849b:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  deviceCreateInfo.pNext = pNext;
    84a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84a5:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    84a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  deviceCreateInfo.queueCreateInfoCount = queueCreateInfoCount;
    84ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b1:	8b 55 f4             	mov    -0xc(%rbp),%edx
    84b4:	89 50 14             	mov    %edx,0x14(%rax)
  deviceCreateInfo.pQueueCreateInfos = pQueueCreateInfos;
    84b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    84bf:	48 89 50 18          	mov    %rdx,0x18(%rax)
  deviceCreateInfo.enabledExtensionCount = enabledExtensionCount;
    84c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84c7:	8b 55 f0             	mov    -0x10(%rbp),%edx
    84ca:	89 50 30             	mov    %edx,0x30(%rax)
  deviceCreateInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    84cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    84d5:	48 89 50 38          	mov    %rdx,0x38(%rax)
  deviceCreateInfo.pEnabledFeatures = pEnabledFeatures;
    84d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    84e1:	48 89 50 40          	mov    %rdx,0x40(%rax)
  deviceCreateInfo.enabledLayerCount = enabledLayerCount;
    84e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e9:	8b 55 10             	mov    0x10(%rbp),%edx
    84ec:	89 50 20             	mov    %edx,0x20(%rax)
  deviceCreateInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    84ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84f3:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    84f7:	48 89 50 28          	mov    %rdx,0x28(%rax)
  return deviceCreateInfo;
    84fb:	90                   	nop
}
    84fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8500:	5d                   	pop    %rbp
    8501:	c3                   	ret

0000000000008502 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>:

VkDeviceQueueCreateInfo makeDeviceQueueCreateInfo(uint32_t queueFamilyIndex,
                                                  uint32_t queueCount,
                                                  const float *pQueuePriorities,
                                                  const void *pNext) {
    8502:	55                   	push   %rbp
    8503:	48 89 e5             	mov    %rsp,%rbp
    8506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    850a:	89 75 f4             	mov    %esi,-0xc(%rbp)
    850d:	89 55 f0             	mov    %edx,-0x10(%rbp)
    8510:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    8514:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo{};
    8518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8520:	0f 11 00             	movups %xmm0,(%rax)
    8523:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8527:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
  queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    852c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8530:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  queueCreateInfo.pNext = pNext;
    8536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    853a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    853e:	48 89 50 08          	mov    %rdx,0x8(%rax)
  queueCreateInfo.queueFamilyIndex = queueFamilyIndex;
    8542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8546:	8b 55 f4             	mov    -0xc(%rbp),%edx
    8549:	89 50 14             	mov    %edx,0x14(%rax)
  queueCreateInfo.queueCount = queueCount;
    854c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8550:	8b 55 f0             	mov    -0x10(%rbp),%edx
    8553:	89 50 18             	mov    %edx,0x18(%rax)
  queueCreateInfo.pQueuePriorities = pQueuePriorities;
    8556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    855a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    855e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  return queueCreateInfo;
    8562:	90                   	nop
}
    8563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8567:	5d                   	pop    %rbp
    8568:	c3                   	ret

0000000000008569 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    8569:	55                   	push   %rbp
    856a:	48 89 e5             	mov    %rsp,%rbp
    856d:	53                   	push   %rbx
    856e:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    8572:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8576:	be 00 00 00 00       	mov    $0x0,%esi
    857b:	48 89 c7             	mov    %rax,%rdi
    857e:	e8 8d ad ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    8583:	8b 45 c8             	mov    -0x38(%rbp),%eax
    8586:	89 c3                	mov    %eax,%ebx
    8588:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    858c:	48 89 c7             	mov    %rax,%rdi
    858f:	e8 44 c5 ff ff       	call   4ad8 <_ZNSaI17VkLayerPropertiesEC1Ev>
    8594:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    8598:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    859c:	48 89 de             	mov    %rbx,%rsi
    859f:	48 89 c7             	mov    %rax,%rdi
    85a2:	e8 69 c5 ff ff       	call   4b10 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    85a7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    85ab:	48 89 c7             	mov    %rax,%rdi
    85ae:	e8 41 c5 ff ff       	call   4af4 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    85b3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    85b7:	48 89 c7             	mov    %rax,%rdi
    85ba:	e8 0b c6 ff ff       	call   4bca <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    85bf:	48 89 c2             	mov    %rax,%rdx
    85c2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    85c6:	48 89 d6             	mov    %rdx,%rsi
    85c9:	48 89 c7             	mov    %rax,%rdi
    85cc:	e8 3f ad ff ff       	call   3310 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    85d1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    85d5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    85d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85dd:	48 89 c7             	mov    %rax,%rdi
    85e0:	e8 fd 04 00 00       	call   8ae2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    85e5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    85e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85ed:	48 89 c7             	mov    %rax,%rdi
    85f0:	e8 13 05 00 00       	call   8b08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    85f5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    85f9:	eb 5b                	jmp    8656 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    85fb:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    85ff:	48 89 c7             	mov    %rax,%rdi
    8602:	e8 89 05 00 00       	call   8b90 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    8607:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    860b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    860f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8613:	48 89 d6             	mov    %rdx,%rsi
    8616:	48 89 c7             	mov    %rax,%rdi
    8619:	e8 2a 04 00 00       	call   8a48 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    861e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8622:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8626:	48 8b 3d 93 f6 00 00 	mov    0xf693(%rip),%rdi        # 17cc0 <_ZN3vkh19validationLayerNameE>
    862d:	48 8b 35 94 f6 00 00 	mov    0xf694(%rip),%rsi        # 17cc8 <_ZN3vkh19validationLayerNameE+0x8>
    8634:	48 89 d1             	mov    %rdx,%rcx
    8637:	48 89 c2             	mov    %rax,%rdx
    863a:	e8 74 05 00 00       	call   8bb3 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    863f:	84 c0                	test   %al,%al
    8641:	74 07                	je     864a <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    8643:	bb 01 00 00 00       	mov    $0x1,%ebx
    8648:	eb 28                	jmp    8672 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    864a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    864e:	48 89 c7             	mov    %rax,%rdi
    8651:	e8 16 05 00 00       	call   8b6c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8656:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    865a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    865e:	48 89 d6             	mov    %rdx,%rsi
    8661:	48 89 c7             	mov    %rax,%rdi
    8664:	e8 c8 04 00 00       	call   8b31 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8669:	84 c0                	test   %al,%al
    866b:	75 8e                	jne    85fb <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    866d:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    8672:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8676:	48 89 c7             	mov    %rax,%rdi
    8679:	e8 08 c5 ff ff       	call   4b86 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    867e:	89 d8                	mov    %ebx,%eax
    8680:	eb 34                	jmp    86b6 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    8682:	48 89 c3             	mov    %rax,%rbx
    8685:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8689:	48 89 c7             	mov    %rax,%rdi
    868c:	e8 63 c4 ff ff       	call   4af4 <_ZNSaI17VkLayerPropertiesED1Ev>
    8691:	48 89 d8             	mov    %rbx,%rax
    8694:	48 89 c7             	mov    %rax,%rdi
    8697:	e8 c4 ad ff ff       	call   3460 <_Unwind_Resume@plt>
}
    869c:	48 89 c3             	mov    %rax,%rbx
    869f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    86a3:	48 89 c7             	mov    %rax,%rdi
    86a6:	e8 db c4 ff ff       	call   4b86 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    86ab:	48 89 d8             	mov    %rbx,%rax
    86ae:	48 89 c7             	mov    %rax,%rdi
    86b1:	e8 aa ad ff ff       	call   3460 <_Unwind_Resume@plt>
    86b6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86ba:	c9                   	leave
    86bb:	c3                   	ret

00000000000086bc <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    86bc:	55                   	push   %rbp
    86bd:	48 89 e5             	mov    %rsp,%rbp
    86c0:	48 83 ec 20          	sub    $0x20,%rsp
    86c4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    86c7:	89 75 f8             	mov    %esi,-0x8(%rbp)
    86ca:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    86ce:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    86d2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    86d5:	83 f8 01             	cmp    $0x1,%eax
    86d8:	7e 3c                	jle    8716 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    86da:	be 0a 00 00 00       	mov    $0xa,%esi
    86df:	48 8d 05 ba fc 00 00 	lea    0xfcba(%rip),%rax        # 183a0 <_ZSt4cerr@GLIBCXX_3.4>
    86e6:	48 89 c7             	mov    %rax,%rdi
    86e9:	e8 42 ac ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    86ee:	48 89 c2             	mov    %rax,%rdx
    86f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86f5:	48 8b 40 28          	mov    0x28(%rax),%rax
    86f9:	48 89 c6             	mov    %rax,%rsi
    86fc:	48 89 d7             	mov    %rdx,%rdi
    86ff:	e8 4c ab ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8704:	48 8b 15 8d f8 00 00 	mov    0xf88d(%rip),%rdx        # 17f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    870b:	48 89 d6             	mov    %rdx,%rsi
    870e:	48 89 c7             	mov    %rax,%rdi
    8711:	e8 9a ab ff ff       	call   32b0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    8716:	b8 00 00 00 00       	mov    $0x0,%eax
}
    871b:	c9                   	leave
    871c:	c3                   	ret

000000000000871d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    871d:	55                   	push   %rbp
    871e:	48 89 e5             	mov    %rsp,%rbp
    8721:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    8725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8729:	66 0f ef c0          	pxor   %xmm0,%xmm0
    872d:	0f 11 00             	movups %xmm0,(%rax)
    8730:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8734:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    8738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    873c:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    8742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8746:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    874d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8751:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    8758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    875c:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # 86bc <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    8763:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    8767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    876b:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8772:	00 
}
    8773:	90                   	nop
    8774:	5d                   	pop    %rbp
    8775:	c3                   	ret

0000000000008776 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    8776:	55                   	push   %rbp
    8777:	48 89 e5             	mov    %rsp,%rbp
    877a:	48 83 ec 30          	sub    $0x30,%rsp
    877e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8782:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8786:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    878a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    878e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8792:	48 8d 15 6f 6d 00 00 	lea    0x6d6f(%rip),%rdx        # f508 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    8799:	48 89 d6             	mov    %rdx,%rsi
    879c:	48 89 c7             	mov    %rax,%rdi
    879f:	e8 8c aa ff ff       	call   3230 <vkGetInstanceProcAddr@plt>
    87a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    87a8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    87ad:	75 07                	jne    87b6 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    87af:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    87b4:	eb 1b                	jmp    87d1 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    87b6:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    87ba:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    87be:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    87c2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    87c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87ca:	48 89 c7             	mov    %rax,%rdi
    87cd:	41 ff d0             	call   *%r8
    87d0:	90                   	nop
}
    87d1:	c9                   	leave
    87d2:	c3                   	ret

00000000000087d3 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    87d3:	55                   	push   %rbp
    87d4:	48 89 e5             	mov    %rsp,%rbp
    87d7:	41 54                	push   %r12
    87d9:	53                   	push   %rbx
    87da:	48 83 ec 50          	sub    $0x50,%rsp
    87de:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    87e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    87e6:	48 89 c7             	mov    %rax,%rdi
    87e9:	e8 2f ff ff ff       	call   871d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    87ee:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    87f5:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    87f6:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    87fa:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    87fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8802:	48 89 d1             	mov    %rdx,%rcx
    8805:	ba 00 00 00 00       	mov    $0x0,%edx
    880a:	48 89 c7             	mov    %rax,%rdi
    880d:	e8 64 ff ff ff       	call   8776 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    8812:	85 c0                	test   %eax,%eax
    8814:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    8817:	84 c0                	test   %al,%al
    8819:	74 3b                	je     8856 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    881b:	bf 10 00 00 00       	mov    $0x10,%edi
    8820:	e8 cb a8 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    8825:	48 89 c3             	mov    %rax,%rbx
    8828:	48 8d 05 f9 6c 00 00 	lea    0x6cf9(%rip),%rax        # f528 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    882f:	48 89 c6             	mov    %rax,%rsi
    8832:	48 89 df             	mov    %rbx,%rdi
    8835:	e8 66 a8 ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    883a:	48 8b 05 67 f7 00 00 	mov    0xf767(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8841:	48 89 c2             	mov    %rax,%rdx
    8844:	48 8d 05 f5 f4 00 00 	lea    0xf4f5(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    884b:	48 89 c6             	mov    %rax,%rsi
    884e:	48 89 df             	mov    %rbx,%rdi
    8851:	e8 ea ab ff ff       	call   3440 <__cxa_throw@plt>
  }
  return debugMessenger;
    8856:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    885a:	eb 16                	jmp    8872 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    885c:	49 89 c4             	mov    %rax,%r12
    885f:	48 89 df             	mov    %rbx,%rdi
    8862:	e8 09 a9 ff ff       	call   3170 <__cxa_free_exception@plt>
    8867:	4c 89 e0             	mov    %r12,%rax
    886a:	48 89 c7             	mov    %rax,%rdi
    886d:	e8 ee ab ff ff       	call   3460 <_Unwind_Resume@plt>
}
    8872:	48 83 c4 50          	add    $0x50,%rsp
    8876:	5b                   	pop    %rbx
    8877:	41 5c                	pop    %r12
    8879:	5d                   	pop    %rbp
    887a:	c3                   	ret

000000000000887b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    887b:	55                   	push   %rbp
    887c:	48 89 e5             	mov    %rsp,%rbp
    887f:	48 83 ec 30          	sub    $0x30,%rsp
    8883:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8887:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    888b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    888f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8893:	48 8d 15 ae 6c 00 00 	lea    0x6cae(%rip),%rdx        # f548 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    889a:	48 89 d6             	mov    %rdx,%rsi
    889d:	48 89 c7             	mov    %rax,%rdi
    88a0:	e8 8b a9 ff ff       	call   3230 <vkGetInstanceProcAddr@plt>
    88a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    88a9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    88ae:	74 19                	je     88c9 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    88b0:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    88b4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    88b8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    88bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88c0:	48 89 ce             	mov    %rcx,%rsi
    88c3:	48 89 c7             	mov    %rax,%rdi
    88c6:	41 ff d0             	call   *%r8
  }
}
    88c9:	90                   	nop
    88ca:	c9                   	leave
    88cb:	c3                   	ret

00000000000088cc <_Z41__static_initialization_and_destruction_0ii>:

    88cc:	55                   	push   %rbp
    88cd:	48 89 e5             	mov    %rsp,%rbp
    88d0:	48 83 ec 10          	sub    $0x10,%rsp
    88d4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    88d7:	89 75 f8             	mov    %esi,-0x8(%rbp)
    88da:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    88de:	75 3b                	jne    891b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    88e0:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    88e7:	75 32                	jne    891b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    88e9:	48 8d 05 c2 fb 00 00 	lea    0xfbc2(%rip),%rax        # 184b2 <_ZStL8__ioinit>
    88f0:	48 89 c7             	mov    %rax,%rdi
    88f3:	e8 f8 aa ff ff       	call   33f0 <_ZNSt8ios_base4InitC1Ev@plt>
    88f8:	48 8d 05 59 f9 00 00 	lea    0xf959(%rip),%rax        # 18258 <__dso_handle>
    88ff:	48 89 c2             	mov    %rax,%rdx
    8902:	48 8d 05 a9 fb 00 00 	lea    0xfba9(%rip),%rax        # 184b2 <_ZStL8__ioinit>
    8909:	48 89 c6             	mov    %rax,%rsi
    890c:	48 8b 05 b5 f6 00 00 	mov    0xf6b5(%rip),%rax        # 17fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 f5 a8 ff ff       	call   3210 <__cxa_atexit@plt>
    891b:	90                   	nop
    891c:	c9                   	leave
    891d:	c3                   	ret

000000000000891e <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    891e:	55                   	push   %rbp
    891f:	48 89 e5             	mov    %rsp,%rbp
    8922:	be ff ff 00 00       	mov    $0xffff,%esi
    8927:	bf 01 00 00 00       	mov    $0x1,%edi
    892c:	e8 9b ff ff ff       	call   88cc <_Z41__static_initialization_and_destruction_0ii>
    8931:	5d                   	pop    %rbp
    8932:	c3                   	ret

0000000000008933 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      static _GLIBCXX_CONSTEXPR bool
      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { return __c1 == __c2; }

      static _GLIBCXX_CONSTEXPR bool
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    8933:	55                   	push   %rbp
    8934:	48 89 e5             	mov    %rsp,%rbp
    8937:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    893b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	// LWG 467.
	return (static_cast<unsigned char>(__c1)
    893f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8943:	0f b6 00             	movzbl (%rax),%eax
    8946:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    8948:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    894c:	0f b6 00             	movzbl (%rax),%eax
    894f:	38 c2                	cmp    %al,%dl
    8951:	0f 92 c0             	setb   %al
      }
    8954:	5d                   	pop    %rbp
    8955:	c3                   	ret

0000000000008956 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:

      static _GLIBCXX17_CONSTEXPR int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    8956:	55                   	push   %rbp
    8957:	48 89 e5             	mov    %rsp,%rbp
    895a:	48 83 ec 30          	sub    $0x30,%rsp
    895e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8962:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8966:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      {
	if (__n == 0)
    896a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    896f:	75 0a                	jne    897b <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    8971:	b8 00 00 00 00       	mov    $0x0,%eax
    8976:	e9 99 00 00 00       	jmp    8a14 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    897b:	e8 30 bd ff ff       	call   46b0 <_ZSt23__is_constant_evaluatedv>
    8980:	84 c0                	test   %al,%al
    8982:	74 78                	je     89fc <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	  {
	    for (size_t __i = 0; __i < __n; ++__i)
    8984:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    898b:	00 
    898c:	eb 5d                	jmp    89eb <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    898e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8996:	48 01 c2             	add    %rax,%rdx
    8999:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    899d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a1:	48 01 c8             	add    %rcx,%rax
    89a4:	48 89 d6             	mov    %rdx,%rsi
    89a7:	48 89 c7             	mov    %rax,%rdi
    89aa:	e8 84 ff ff ff       	call   8933 <_ZNSt11char_traitsIcE2ltERKcS2_>
    89af:	84 c0                	test   %al,%al
    89b1:	74 07                	je     89ba <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    89b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    89b8:	eb 5a                	jmp    8a14 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    89ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    89be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c2:	48 01 c2             	add    %rax,%rdx
    89c5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    89c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89cd:	48 01 c8             	add    %rcx,%rax
    89d0:	48 89 d6             	mov    %rdx,%rsi
    89d3:	48 89 c7             	mov    %rax,%rdi
    89d6:	e8 58 ff ff ff       	call   8933 <_ZNSt11char_traitsIcE2ltERKcS2_>
    89db:	84 c0                	test   %al,%al
    89dd:	74 07                	je     89e6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    89df:	b8 01 00 00 00       	mov    $0x1,%eax
    89e4:	eb 2e                	jmp    8a14 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    89e6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    89eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ef:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    89f3:	72 99                	jb     898e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    89f5:	b8 00 00 00 00       	mov    $0x0,%eax
    89fa:	eb 18                	jmp    8a14 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	  }
#endif
	return __builtin_memcmp(__s1, __s2, __n);
    89fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a00:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    8a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a08:	48 89 ce             	mov    %rcx,%rsi
    8a0b:	48 89 c7             	mov    %rax,%rdi
    8a0e:	e8 cd a6 ff ff       	call   30e0 <memcmp@plt>
    8a13:	90                   	nop
      }
    8a14:	c9                   	leave
    8a15:	c3                   	ret

0000000000008a16 <_ZNSt11char_traitsIcE6lengthEPKc>:

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    8a16:	55                   	push   %rbp
    8a17:	48 89 e5             	mov    %rsp,%rbp
    8a1a:	48 83 ec 10          	sub    $0x10,%rsp
    8a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    8a22:	e8 89 bc ff ff       	call   46b0 <_ZSt23__is_constant_evaluatedv>
    8a27:	84 c0                	test   %al,%al
    8a29:	74 0e                	je     8a39 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    8a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a2f:	48 89 c7             	mov    %rax,%rdi
    8a32:	e8 43 00 00 00       	call   8a7a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    8a37:	eb 0d                	jmp    8a46 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    8a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a3d:	48 89 c7             	mov    %rax,%rdi
    8a40:	e8 8b a6 ff ff       	call   30d0 <strlen@plt>
    8a45:	90                   	nop
      }
    8a46:	c9                   	leave
    8a47:	c3                   	ret

0000000000008a48 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    8a48:	55                   	push   %rbp
    8a49:	48 89 e5             	mov    %rsp,%rbp
    8a4c:	48 83 ec 10          	sub    $0x10,%rsp
    8a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    8a58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a5c:	48 89 c7             	mov    %rax,%rdi
    8a5f:	e8 b2 ff ff ff       	call   8a16 <_ZNSt11char_traitsIcE6lengthEPKc>
    8a64:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8a68:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    8a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a6f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a73:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    8a77:	90                   	nop
    8a78:	c9                   	leave
    8a79:	c3                   	ret

0000000000008a7a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    8a7a:	55                   	push   %rbp
    8a7b:	48 89 e5             	mov    %rsp,%rbp
    8a7e:	48 83 ec 20          	sub    $0x20,%rsp
    8a82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    8a86:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8a8d:	00 
      while (!eq(__p[__i], char_type()))
    8a8e:	eb 05                	jmp    8a95 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    8a90:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    8a95:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    8a99:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aa1:	48 01 c2             	add    %rax,%rdx
    8aa4:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    8aa8:	48 89 c6             	mov    %rax,%rsi
    8aab:	48 89 d7             	mov    %rdx,%rdi
    8aae:	e8 0d 00 00 00       	call   8ac0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    8ab3:	83 f0 01             	xor    $0x1,%eax
    8ab6:	84 c0                	test   %al,%al
    8ab8:	75 d6                	jne    8a90 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    8aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8abe:	c9                   	leave
    8abf:	c3                   	ret

0000000000008ac0 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    8ac0:	55                   	push   %rbp
    8ac1:	48 89 e5             	mov    %rsp,%rbp
    8ac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ac8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    8acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ad0:	0f b6 10             	movzbl (%rax),%edx
    8ad3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ad7:	0f b6 00             	movzbl (%rax),%eax
    8ada:	38 c2                	cmp    %al,%dl
    8adc:	0f 94 c0             	sete   %al
    8adf:	5d                   	pop    %rbp
    8ae0:	c3                   	ret
    8ae1:	90                   	nop

0000000000008ae2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8ae2:	55                   	push   %rbp
    8ae3:	48 89 e5             	mov    %rsp,%rbp
    8ae6:	48 83 ec 20          	sub    $0x20,%rsp
    8aea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8aee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8af2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8af6:	48 89 d6             	mov    %rdx,%rsi
    8af9:	48 89 c7             	mov    %rax,%rdi
    8afc:	e8 27 01 00 00       	call   8c28 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b05:	c9                   	leave
    8b06:	c3                   	ret
    8b07:	90                   	nop

0000000000008b08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8b08:	55                   	push   %rbp
    8b09:	48 89 e5             	mov    %rsp,%rbp
    8b0c:	48 83 ec 20          	sub    $0x20,%rsp
    8b10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8b14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b18:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8b1c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8b20:	48 89 d6             	mov    %rdx,%rsi
    8b23:	48 89 c7             	mov    %rax,%rdi
    8b26:	e8 fd 00 00 00       	call   8c28 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b2f:	c9                   	leave
    8b30:	c3                   	ret

0000000000008b31 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8b31:	55                   	push   %rbp
    8b32:	48 89 e5             	mov    %rsp,%rbp
    8b35:	53                   	push   %rbx
    8b36:	48 83 ec 18          	sub    $0x18,%rsp
    8b3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8b42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b46:	48 89 c7             	mov    %rax,%rdi
    8b49:	e8 f8 00 00 00       	call   8c46 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8b4e:	48 8b 18             	mov    (%rax),%rbx
    8b51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8b55:	48 89 c7             	mov    %rax,%rdi
    8b58:	e8 e9 00 00 00       	call   8c46 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8b5d:	48 8b 00             	mov    (%rax),%rax
    8b60:	48 39 c3             	cmp    %rax,%rbx
    8b63:	0f 95 c0             	setne  %al
    8b66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b6a:	c9                   	leave
    8b6b:	c3                   	ret

0000000000008b6c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8b6c:	55                   	push   %rbp
    8b6d:	48 89 e5             	mov    %rsp,%rbp
    8b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b78:	48 8b 00             	mov    (%rax),%rax
    8b7b:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    8b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b86:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8b89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8b8d:	5d                   	pop    %rbp
    8b8e:	c3                   	ret
    8b8f:	90                   	nop

0000000000008b90 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8b90:	55                   	push   %rbp
    8b91:	48 89 e5             	mov    %rsp,%rbp
    8b94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b9c:	48 8b 00             	mov    (%rax),%rax
    8b9f:	5d                   	pop    %rbp
    8ba0:	c3                   	ret
    8ba1:	90                   	nop

0000000000008ba2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    8ba2:	55                   	push   %rbp
    8ba3:	48 89 e5             	mov    %rsp,%rbp
    8ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    8baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bae:	48 8b 00             	mov    (%rax),%rax
    8bb1:	5d                   	pop    %rbp
    8bb2:	c3                   	ret

0000000000008bb3 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    8bb3:	55                   	push   %rbp
    8bb4:	48 89 e5             	mov    %rsp,%rbp
    8bb7:	53                   	push   %rbx
    8bb8:	48 83 ec 28          	sub    $0x28,%rsp
    8bbc:	48 89 f0             	mov    %rsi,%rax
    8bbf:	49 89 f8             	mov    %rdi,%r8
    8bc2:	4c 89 c6             	mov    %r8,%rsi
    8bc5:	4c 89 cf             	mov    %r9,%rdi
    8bc8:	48 89 c7             	mov    %rax,%rdi
    8bcb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8bcf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8bd3:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    8bd7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    8bdb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8bdf:	48 89 c7             	mov    %rax,%rdi
    8be2:	e8 bb ff ff ff       	call   8ba2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    8be7:	48 89 c3             	mov    %rax,%rbx
    8bea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8bee:	48 89 c7             	mov    %rax,%rdi
    8bf1:	e8 ac ff ff ff       	call   8ba2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    8bf6:	48 39 c3             	cmp    %rax,%rbx
    8bf9:	75 22                	jne    8c1d <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    8bfb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    8bff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c03:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8c07:	48 89 ce             	mov    %rcx,%rsi
    8c0a:	48 89 c7             	mov    %rax,%rdi
    8c0d:	e8 42 00 00 00       	call   8c54 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    8c12:	85 c0                	test   %eax,%eax
    8c14:	75 07                	jne    8c1d <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    8c16:	b8 01 00 00 00       	mov    $0x1,%eax
    8c1b:	eb 05                	jmp    8c22 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    8c1d:	b8 00 00 00 00       	mov    $0x0,%eax
    8c22:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c26:	c9                   	leave
    8c27:	c3                   	ret

0000000000008c28 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    8c28:	55                   	push   %rbp
    8c29:	48 89 e5             	mov    %rsp,%rbp
    8c2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    8c34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c38:	48 8b 10             	mov    (%rax),%rdx
    8c3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c3f:	48 89 10             	mov    %rdx,(%rax)
    8c42:	90                   	nop
    8c43:	5d                   	pop    %rbp
    8c44:	c3                   	ret
    8c45:	90                   	nop

0000000000008c46 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    8c46:	55                   	push   %rbp
    8c47:	48 89 e5             	mov    %rsp,%rbp
    8c4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    8c4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c52:	5d                   	pop    %rbp
    8c53:	c3                   	ret

0000000000008c54 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    8c54:	55                   	push   %rbp
    8c55:	48 89 e5             	mov    %rsp,%rbp
    8c58:	48 83 ec 30          	sub    $0x30,%rsp
    8c5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c60:	48 89 d1             	mov    %rdx,%rcx
    8c63:	48 89 f0             	mov    %rsi,%rax
    8c66:	48 89 fa             	mov    %rdi,%rdx
    8c69:	48 89 ca             	mov    %rcx,%rdx
    8c6c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8c70:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    8c74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c78:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    8c7c:	48 89 d6             	mov    %rdx,%rsi
    8c7f:	48 89 c7             	mov    %rax,%rdi
    8c82:	e8 40 de ff ff       	call   6ac7 <_ZSt3minImERKT_S2_S2_>
    8c87:	48 8b 00             	mov    (%rax),%rax
    8c8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    8c8e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    8c92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c96:	48 8b 40 08          	mov    0x8(%rax),%rax
    8c9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8c9e:	48 89 ce             	mov    %rcx,%rsi
    8ca1:	48 89 c7             	mov    %rax,%rdi
    8ca4:	e8 ad fc ff ff       	call   8956 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    8ca9:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    8cac:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    8cb0:	75 19                	jne    8ccb <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    8cb2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8cb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8cba:	48 8b 00             	mov    (%rax),%rax
    8cbd:	48 89 d6             	mov    %rdx,%rsi
    8cc0:	48 89 c7             	mov    %rax,%rdi
    8cc3:	e8 08 00 00 00       	call   8cd0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    8cc8:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    8ccb:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    8cce:	c9                   	leave
    8ccf:	c3                   	ret

0000000000008cd0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    8cd0:	55                   	push   %rbp
    8cd1:	48 89 e5             	mov    %rsp,%rbp
    8cd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8cd8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    8cdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ce0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    8ce4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    8ce8:	b8 00 00 00 80       	mov    $0x80000000,%eax
    8ced:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    8cf1:	7c 07                	jl     8cfa <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    8cf3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    8cf8:	eb 1b                	jmp    8d15 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    8cfa:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    8d01:	ff ff ff 
    8d04:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    8d08:	7f 07                	jg     8d11 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    8d0a:	b8 00 00 00 80       	mov    $0x80000000,%eax
    8d0f:	eb 04                	jmp    8d15 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    8d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8d15:	5d                   	pop    %rbp
    8d16:	c3                   	ret
    8d17:	90                   	nop

0000000000008d18 <_ZN9VulkanApp12createWindowEv>:
#include "vkh.hpp"

void VulkanApp::createWindow() {
    8d18:	55                   	push   %rbp
    8d19:	48 89 e5             	mov    %rsp,%rbp
    8d1c:	48 83 ec 10          	sub    $0x10,%rsp
    8d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    8d24:	e8 f7 a5 ff ff       	call   3320 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    8d29:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    8d2f:	b9 00 00 00 00       	mov    $0x0,%ecx
    8d34:	48 8d 05 59 6e 00 00 	lea    0x6e59(%rip),%rax        # fb94 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    8d3b:	48 89 c2             	mov    %rax,%rdx
    8d3e:	be 58 02 00 00       	mov    $0x258,%esi
    8d43:	bf 20 03 00 00       	mov    $0x320,%edi
    8d48:	e8 0b aa ff ff       	call   3758 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    8d4d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8d51:	48 89 02             	mov    %rax,(%rdx)
}
    8d54:	90                   	nop
    8d55:	c9                   	leave
    8d56:	c3                   	ret
    8d57:	90                   	nop

0000000000008d58 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    8d58:	55                   	push   %rbp
    8d59:	48 89 e5             	mov    %rsp,%rbp
    8d5c:	41 55                	push   %r13
    8d5e:	41 54                	push   %r12
    8d60:	53                   	push   %rbx
    8d61:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    8d68:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  auto appInfo = vkh::makeApplicationInfo();
    8d6f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8d73:	48 8d 15 1a 6e 00 00 	lea    0x6e1a(%rip),%rdx        # fb94 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    8d7a:	48 89 d6             	mov    %rdx,%rsi
    8d7d:	48 89 c7             	mov    %rax,%rdi
    8d80:	e8 e9 f5 ff ff       	call   836e <_ZN3vkh19makeApplicationInfoEPKc>
  auto extensions = vkh::getRequiredInstanceExtensionNameList(true);
    8d85:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8d89:	be 01 00 00 00       	mov    $0x1,%esi
    8d8e:	48 89 c7             	mov    %rax,%rdi
    8d91:	e8 26 b0 ff ff       	call   3dbc <_ZN3vkh36getRequiredInstanceExtensionNameListEb>
  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    8d96:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8d9a:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    8da1:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    8da8:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    8daf:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    8db6:	48 89 c7             	mov    %rax,%rdi
    8db9:	e8 5f f9 ff ff       	call   871d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  auto createInfo = vkh::makeInstanceCreateInfo(
    8dbe:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8dc5:	48 83 c0 10          	add    $0x10,%rax
    8dc9:	48 89 c7             	mov    %rax,%rdi
    8dcc:	e8 49 14 00 00       	call   a21a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    8dd1:	49 89 c4             	mov    %rax,%r12
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
      static_cast<uint32_t>(layers.size()), layers.data(),
    8dd4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8ddb:	48 83 c0 10          	add    $0x10,%rax
    8ddf:	48 89 c7             	mov    %rax,%rdi
    8de2:	e8 9f e6 ff ff       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    8de7:	41 89 c5             	mov    %eax,%r13d
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
    8dea:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8dee:	48 89 c7             	mov    %rax,%rdi
    8df1:	e8 00 14 00 00       	call   a1f6 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8df6:	48 89 c3             	mov    %rax,%rbx
    8df9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8dfd:	48 89 c7             	mov    %rax,%rdi
    8e00:	e8 81 e6 ff ff       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    8e05:	89 c7                	mov    %eax,%edi
    8e07:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    8e0e:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    8e12:	48 83 ec 08          	sub    $0x8,%rsp
    8e16:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    8e1d:	52                   	push   %rdx
    8e1e:	4d 89 e1             	mov    %r12,%r9
    8e21:	45 89 e8             	mov    %r13d,%r8d
    8e24:	48 89 d9             	mov    %rbx,%rcx
    8e27:	89 fa                	mov    %edi,%edx
    8e29:	48 89 c7             	mov    %rax,%rdi
    8e2c:	e8 a9 f5 ff ff       	call   83da <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>
    8e31:	48 83 c4 10          	add    $0x10,%rsp
      (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo);
  instance = vkh::createInstance(&createInfo);
    8e35:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    8e3c:	be 00 00 00 00       	mov    $0x0,%esi
    8e41:	48 89 c7             	mov    %rax,%rdi
    8e44:	e8 65 a9 ff ff       	call   37ae <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    8e49:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    8e50:	48 89 42 08          	mov    %rax,0x8(%rdx)

  for (const auto &ext : extensions) {
    8e54:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8e58:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8e5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e60:	48 89 c7             	mov    %rax,%rdi
    8e63:	e8 3a df ff ff       	call   6da2 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    8e68:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    8e6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e73:	48 89 c7             	mov    %rax,%rdi
    8e76:	e8 c7 d3 ff ff       	call   6242 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    8e7b:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    8e82:	eb 48                	jmp    8ecc <_ZN9VulkanApp14createInstanceEv+0x174>
    8e84:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    8e8b:	48 89 c7             	mov    %rax,%rdi
    8e8e:	e8 f9 df ff ff       	call   6e8c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    8e93:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    std::cout << ext << '\n';
    8e97:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e9b:	48 8b 00             	mov    (%rax),%rax
    8e9e:	48 89 c6             	mov    %rax,%rsi
    8ea1:	48 8d 05 d8 f3 00 00 	lea    0xf3d8(%rip),%rax        # 18280 <_ZSt4cout@GLIBCXX_3.4>
    8ea8:	48 89 c7             	mov    %rax,%rdi
    8eab:	e8 a0 a3 ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8eb0:	be 0a 00 00 00       	mov    $0xa,%esi
    8eb5:	48 89 c7             	mov    %rax,%rdi
    8eb8:	e8 73 a4 ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &ext : extensions) {
    8ebd:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    8ec4:	48 89 c7             	mov    %rax,%rdi
    8ec7:	e8 ae 13 00 00       	call   a27a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    8ecc:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    8ed3:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    8eda:	48 89 d6             	mov    %rdx,%rsi
    8edd:	48 89 c7             	mov    %rax,%rdi
    8ee0:	e8 59 13 00 00       	call   a23e <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    8ee5:	84 c0                	test   %al,%al
    8ee7:	75 9b                	jne    8e84 <_ZN9VulkanApp14createInstanceEv+0x12c>
  }
}
    8ee9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8eed:	48 89 c7             	mov    %rax,%rdi
    8ef0:	e8 ff ba ff ff       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8ef5:	eb 1a                	jmp    8f11 <_ZN9VulkanApp14createInstanceEv+0x1b9>
    8ef7:	48 89 c3             	mov    %rax,%rbx
    8efa:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8efe:	48 89 c7             	mov    %rax,%rdi
    8f01:	e8 ee ba ff ff       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8f06:	48 89 d8             	mov    %rbx,%rax
    8f09:	48 89 c7             	mov    %rax,%rdi
    8f0c:	e8 4f a5 ff ff       	call   3460 <_Unwind_Resume@plt>
    8f11:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    8f15:	5b                   	pop    %rbx
    8f16:	41 5c                	pop    %r12
    8f18:	41 5d                	pop    %r13
    8f1a:	5d                   	pop    %rbp
    8f1b:	c3                   	ret

0000000000008f1c <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    8f1c:	55                   	push   %rbp
    8f1d:	48 89 e5             	mov    %rsp,%rbp
    8f20:	48 83 ec 10          	sub    $0x10,%rsp
    8f24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  debugMessenger = vkh::createDebugMessenger(instance);
    8f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f2c:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f30:	48 89 c7             	mov    %rax,%rdi
    8f33:	e8 9b f8 ff ff       	call   87d3 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    8f38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f3c:	48 89 42 28          	mov    %rax,0x28(%rdx)
}
    8f40:	90                   	nop
    8f41:	c9                   	leave
    8f42:	c3                   	ret
    8f43:	90                   	nop

0000000000008f44 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    8f44:	55                   	push   %rbp
    8f45:	48 89 e5             	mov    %rsp,%rbp
    8f48:	48 83 ec 10          	sub    $0x10,%rsp
    8f4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    8f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f54:	48 8b 08             	mov    (%rax),%rcx
    8f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f5b:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f5f:	ba 00 00 00 00       	mov    $0x0,%edx
    8f64:	48 89 ce             	mov    %rcx,%rsi
    8f67:	48 89 c7             	mov    %rax,%rdi
    8f6a:	e8 6a a9 ff ff       	call   38d9 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    8f6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f73:	48 89 42 30          	mov    %rax,0x30(%rdx)
}
    8f77:	90                   	nop
    8f78:	c9                   	leave
    8f79:	c3                   	ret

0000000000008f7a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    8f7a:	55                   	push   %rbp
    8f7b:	48 89 e5             	mov    %rsp,%rbp
    8f7e:	53                   	push   %rbx
    8f7f:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    8f86:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    8f8d:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    8f94:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    8f9b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8f9f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    8fa6:	48 89 d6             	mov    %rdx,%rsi
    8fa9:	48 89 c7             	mov    %rax,%rdi
    8fac:	e8 45 b2 ff ff       	call   41f6 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    8fb1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8fb5:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    8fbc:	48 89 d6             	mov    %rdx,%rsi
    8fbf:	48 89 c7             	mov    %rax,%rdi
    8fc2:	e8 63 b3 ff ff       	call   432a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    8fc7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8fce:	48 8b 50 30          	mov    0x30(%rax),%rdx
    8fd2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    8fd9:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    8fe0:	48 89 ce             	mov    %rcx,%rsi
    8fe3:	48 89 c7             	mov    %rax,%rdi
    8fe6:	e8 78 b4 ff ff       	call   4463 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    8feb:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8ff2:	00 
    8ff3:	e9 c5 00 00 00       	jmp    90bd <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    8ff8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ffc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9000:	48 89 d6             	mov    %rdx,%rsi
    9003:	48 89 c7             	mov    %rax,%rdi
    9006:	e8 e9 c0 ff ff       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    900b:	48 89 c7             	mov    %rax,%rdi
    900e:	e8 b5 12 00 00       	call   a2c8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    9013:	84 c0                	test   %al,%al
    9015:	74 48                	je     905f <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    9017:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    901b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    901f:	48 89 d6             	mov    %rdx,%rsi
    9022:	48 89 c7             	mov    %rax,%rdi
    9025:	e8 ca c0 ff ff       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    902a:	48 89 c7             	mov    %rax,%rdi
    902d:	e8 96 12 00 00       	call   a2c8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    9032:	84 c0                	test   %al,%al
    9034:	74 29                	je     905f <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    9036:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    903a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9041:	48 89 d6             	mov    %rdx,%rsi
    9044:	48 89 c7             	mov    %rax,%rdi
    9047:	e8 a8 c0 ff ff       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    904c:	48 89 c7             	mov    %rax,%rdi
    904f:	e8 74 12 00 00       	call   a2c8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    9054:	84 c0                	test   %al,%al
    9056:	74 07                	je     905f <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    9058:	b8 01 00 00 00       	mov    $0x1,%eax
    905d:	eb 05                	jmp    9064 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    905f:	b8 00 00 00 00       	mov    $0x0,%eax
    9064:	84 c0                	test   %al,%al
    9066:	74 50                	je     90b8 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    9068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    906c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    906f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9073:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9077:	48 89 d6             	mov    %rdx,%rsi
    907a:	48 89 c7             	mov    %rax,%rdi
    907d:	e8 72 c0 ff ff       	call   50f4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9082:	48 89 c7             	mov    %rax,%rdi
    9085:	e8 58 12 00 00       	call   a2e2 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    908a:	48 89 c2             	mov    %rax,%rdx
    908d:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    9091:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9095:	48 89 ce             	mov    %rcx,%rsi
    9098:	48 89 c7             	mov    %rax,%rdi
    909b:	e8 74 12 00 00       	call   a314 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    90a0:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    90a4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    90ab:	48 89 d6             	mov    %rdx,%rsi
    90ae:	48 89 c7             	mov    %rax,%rdi
    90b1:	e8 b4 12 00 00       	call   a36a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    90b6:	eb 2f                	jmp    90e7 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    90b8:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    90bd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    90c1:	48 89 c7             	mov    %rax,%rdi
    90c4:	e8 d1 11 00 00       	call   a29a <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    90c9:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    90cd:	0f 92 c0             	setb   %al
    90d0:	84 c0                	test   %al,%al
    90d2:	0f 85 20 ff ff ff    	jne    8ff8 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    90d8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    90df:	48 89 c7             	mov    %rax,%rdi
    90e2:	e8 f7 0d 00 00       	call   9ede <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    90e7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    90ee:	48 89 c7             	mov    %rax,%rdi
    90f1:	e8 fe be ff ff       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    90f6:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    90fa:	48 89 c7             	mov    %rax,%rdi
    90fd:	e8 f2 be ff ff       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9102:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9106:	48 89 c7             	mov    %rax,%rdi
    9109:	e8 e6 be ff ff       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    910e:	eb 3f                	jmp    914f <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    9110:	48 89 c3             	mov    %rax,%rbx
    9113:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    911a:	48 89 c7             	mov    %rax,%rdi
    911d:	e8 d2 be ff ff       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9122:	eb 03                	jmp    9127 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    9124:	48 89 c3             	mov    %rax,%rbx
    9127:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    912b:	48 89 c7             	mov    %rax,%rdi
    912e:	e8 c1 be ff ff       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9133:	eb 03                	jmp    9138 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    9135:	48 89 c3             	mov    %rax,%rbx
    9138:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    913c:	48 89 c7             	mov    %rax,%rdi
    913f:	e8 b0 be ff ff       	call   4ff4 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9144:	48 89 d8             	mov    %rbx,%rax
    9147:	48 89 c7             	mov    %rax,%rdi
    914a:	e8 11 a3 ff ff       	call   3460 <_Unwind_Resume@plt>
    914f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9156:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    915a:	c9                   	leave
    915b:	c3                   	ret

000000000000915c <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    915c:	55                   	push   %rbp
    915d:	48 89 e5             	mov    %rsp,%rbp
    9160:	41 55                	push   %r13
    9162:	41 54                	push   %r12
    9164:	53                   	push   %rbx
    9165:	48 81 ec 78 05 00 00 	sub    $0x578,%rsp
    916c:	48 89 bd a8 fa ff ff 	mov    %rdi,-0x558(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    9173:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    917a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    917e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9182:	48 89 d6             	mov    %rdx,%rsi
    9185:	48 89 c7             	mov    %rax,%rdi
    9188:	e8 d1 ad ff ff       	call   3f5e <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    918d:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    9194:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    9195:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9199:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    919d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    91a1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    91a5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    91a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    91ad:	48 89 c7             	mov    %rax,%rdi
    91b0:	e8 e9 11 00 00       	call   a39e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    91b5:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    91bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    91c0:	48 89 c7             	mov    %rax,%rdi
    91c3:	e8 fc 11 00 00       	call   a3c4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    91c8:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    91cf:	e9 c7 00 00 00       	jmp    929b <_ZN9VulkanApp12createDeviceEv+0x13f>
    91d4:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    91db:	48 89 c7             	mov    %rax,%rdi
    91de:	e8 65 12 00 00       	call   a448 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    91e3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    91e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    91eb:	48 8b 10             	mov    (%rax),%rdx
    91ee:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    91f5:	48 89 d6             	mov    %rdx,%rsi
    91f8:	48 89 c7             	mov    %rax,%rdi
    91fb:	e8 cd ae ff ff       	call   40cd <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    /* Only selected a discrete GPU that has a queue family supporting
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    if ((physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) &&
    9200:	8b 85 e0 fa ff ff    	mov    -0x520(%rbp),%eax
    9206:	83 f8 02             	cmp    $0x2,%eax
    9209:	75 24                	jne    922f <_ZN9VulkanApp12createDeviceEv+0xd3>
        checkDeviceExtensionSupport(physDev)) {
    920b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    920f:	48 8b 10             	mov    (%rax),%rdx
    9212:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    9219:	48 89 d6             	mov    %rdx,%rsi
    921c:	48 89 c7             	mov    %rax,%rdi
    921f:	e8 c2 02 00 00       	call   94e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if ((physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) &&
    9224:	84 c0                	test   %al,%al
    9226:	74 07                	je     922f <_ZN9VulkanApp12createDeviceEv+0xd3>
    9228:	b8 01 00 00 00       	mov    $0x1,%eax
    922d:	eb 05                	jmp    9234 <_ZN9VulkanApp12createDeviceEv+0xd8>
    922f:	b8 00 00 00 00       	mov    $0x0,%eax
    9234:	84 c0                	test   %al,%al
    9236:	74 54                	je     928c <_ZN9VulkanApp12createDeviceEv+0x130>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    9238:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    923c:	48 8b 10             	mov    (%rax),%rdx
    923f:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    9246:	48 8b 8d a8 fa ff ff 	mov    -0x558(%rbp),%rcx
    924d:	48 89 ce             	mov    %rcx,%rsi
    9250:	48 89 c7             	mov    %rax,%rdi
    9253:	e8 22 fd ff ff       	call   8f7a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    9258:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    925f:	48 89 c7             	mov    %rax,%rdi
    9262:	e8 f3 11 00 00       	call   a45a <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    9267:	84 c0                	test   %al,%al
    9269:	74 21                	je     928c <_ZN9VulkanApp12createDeviceEv+0x130>
        selectedQueueFamily = returnedQueueFamily;
    926b:	48 8d 95 b0 fa ff ff 	lea    -0x550(%rbp),%rdx
    9272:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9276:	48 89 d6             	mov    %rdx,%rsi
    9279:	48 89 c7             	mov    %rax,%rdi
    927c:	e8 af 0c 00 00       	call   9f30 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    9281:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9285:	48 8b 00             	mov    (%rax),%rax
    9288:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    928c:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    9293:	48 89 c7             	mov    %rax,%rdi
    9296:	e8 8d 11 00 00       	call   a428 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    929b:	48 8d 95 10 fe ff ff 	lea    -0x1f0(%rbp),%rdx
    92a2:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    92a9:	48 89 d6             	mov    %rdx,%rsi
    92ac:	48 89 c7             	mov    %rax,%rdi
    92af:	e8 39 11 00 00       	call   a3ed <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    92b4:	84 c0                	test   %al,%al
    92b6:	0f 85 18 ff ff ff    	jne    91d4 <_ZN9VulkanApp12createDeviceEv+0x78>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    92bc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    92c1:	75 3b                	jne    92fe <_ZN9VulkanApp12createDeviceEv+0x1a2>
    throw std::runtime_error("Failed to select a physical device.");
    92c3:	bf 10 00 00 00       	mov    $0x10,%edi
    92c8:	e8 23 9e ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    92cd:	48 89 c3             	mov    %rax,%rbx
    92d0:	48 8d 05 d1 68 00 00 	lea    0x68d1(%rip),%rax        # fba8 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    92d7:	48 89 c6             	mov    %rax,%rsi
    92da:	48 89 df             	mov    %rbx,%rdi
    92dd:	e8 be 9d ff ff       	call   30a0 <_ZNSt13runtime_errorC1EPKc@plt>
    92e2:	48 8b 05 bf ec 00 00 	mov    0xecbf(%rip),%rax        # 17fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    92e9:	48 89 c2             	mov    %rax,%rdx
    92ec:	48 8d 05 4d ea 00 00 	lea    0xea4d(%rip),%rax        # 17d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    92f3:	48 89 c6             	mov    %rax,%rsi
    92f6:	48 89 df             	mov    %rbx,%rdi
    92f9:	e8 42 a1 ff ff       	call   3440 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    92fe:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9302:	48 89 c7             	mov    %rax,%rdi
    9305:	e8 50 0c 00 00       	call   9f5a <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    930a:	8b 00                	mov    (%rax),%eax
    930c:	89 45 cc             	mov    %eax,-0x34(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo;
  const float queuePriority = 1.0f;
    930f:	f3 0f 10 05 55 69 00 	movss  0x6955(%rip),%xmm0        # fc6c <_ZN6__pstl9execution2v1L5unseqE+0xd9>
    9316:	00 
    9317:	f3 0f 11 85 4c ff ff 	movss  %xmm0,-0xb4(%rbp)
    931e:	ff 
  queueCreateInfo = vkh::makeDeviceQueueCreateInfo(
      selectedQueueFamily.value().first, 1, &queuePriority);
    931f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9323:	48 89 c7             	mov    %rax,%rdi
    9326:	e8 2f 0c 00 00       	call   9f5a <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
  queueCreateInfo = vkh::makeDeviceQueueCreateInfo(
    932b:	8b 30                	mov    (%rax),%esi
    932d:	48 8d 85 70 fa ff ff 	lea    -0x590(%rbp),%rax
    9334:	48 8d 95 4c ff ff ff 	lea    -0xb4(%rbp),%rdx
    933b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9341:	48 89 d1             	mov    %rdx,%rcx
    9344:	ba 01 00 00 00       	mov    $0x1,%edx
    9349:	48 89 c7             	mov    %rax,%rdi
    934c:	e8 b1 f1 ff ff       	call   8502 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    9351:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
    9358:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    935f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    9366:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    936d:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
    9374:	48 8b 95 88 fa ff ff 	mov    -0x578(%rbp),%rdx
    937b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    9382:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    9389:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
    9390:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    9397:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
    939e:	b8 00 00 00 00       	mov    $0x0,%eax
    93a3:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    93a8:	48 89 d7             	mov    %rdx,%rdi
    93ab:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    93ae:	48 89 fa             	mov    %rdi,%rdx
    93b1:	89 02                	mov    %eax,(%rdx)
    93b3:	48 83 c2 04          	add    $0x4,%rdx
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    93b7:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    93be:	48 83 c0 10          	add    $0x10,%rax
    93c2:	48 89 c7             	mov    %rax,%rdi
    93c5:	e8 50 0e 00 00       	call   a21a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    93ca:	48 89 c3             	mov    %rax,%rbx
      1, &queueCreateInfo, static_cast<uint32_t>(deviceExtensions.size()),
      deviceExtensions.data(), &deviceFeatures,
      static_cast<uint32_t>(layers.size()), layers.data());
    93cd:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    93d4:	48 83 c0 10          	add    $0x10,%rax
    93d8:	48 89 c7             	mov    %rax,%rdi
    93db:	e8 a6 e0 ff ff       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    93e0:	41 89 c5             	mov    %eax,%r13d
      deviceExtensions.data(), &deviceFeatures,
    93e3:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    93ea:	48 83 c0 70          	add    $0x70,%rax
    93ee:	48 89 c7             	mov    %rax,%rdi
    93f1:	e8 00 0e 00 00       	call   a1f6 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    93f6:	49 89 c4             	mov    %rax,%r12
      1, &queueCreateInfo, static_cast<uint32_t>(deviceExtensions.size()),
    93f9:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    9400:	48 83 c0 70          	add    $0x70,%rax
    9404:	48 89 c7             	mov    %rax,%rdi
    9407:	e8 7a e0 ff ff       	call   7486 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    940c:	89 c6                	mov    %eax,%esi
    940e:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    9415:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
    941c:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    9423:	48 83 ec 08          	sub    $0x8,%rsp
    9427:	6a 00                	push   $0x0
    9429:	53                   	push   %rbx
    942a:	41 55                	push   %r13
    942c:	49 89 c9             	mov    %rcx,%r9
    942f:	4d 89 e0             	mov    %r12,%r8
    9432:	89 f1                	mov    %esi,%ecx
    9434:	be 01 00 00 00       	mov    $0x1,%esi
    9439:	48 89 c7             	mov    %rax,%rdi
    943c:	e8 20 f0 ff ff       	call   8461 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfojPKPKcPK24VkPhysicalDeviceFeaturesjS6_PKv>
    9441:	48 83 c4 20          	add    $0x20,%rsp
  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    9445:	48 8d 8d 20 fe ff ff 	lea    -0x1e0(%rbp),%rcx
    944c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9450:	ba 00 00 00 00       	mov    $0x0,%edx
    9455:	48 89 ce             	mov    %rcx,%rsi
    9458:	48 89 c7             	mov    %rax,%rdi
    945b:	e8 e1 a3 ff ff       	call   3841 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    9460:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    9467:	48 89 42 40          	mov    %rax,0x40(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    946b:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    9472:	48 8d 50 48          	lea    0x48(%rax),%rdx
    9476:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    947d:	48 8b 40 40          	mov    0x40(%rax),%rax
    9481:	8b 75 cc             	mov    -0x34(%rbp),%esi
    9484:	48 89 d1             	mov    %rdx,%rcx
    9487:	ba 00 00 00 00       	mov    $0x0,%edx
    948c:	48 89 c7             	mov    %rax,%rdi
    948f:	e8 fc 9e ff ff       	call   3390 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  this->physicalDevice = selectedPhysDev;
    9494:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    949b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    949f:	48 89 50 38          	mov    %rdx,0x38(%rax)
}
    94a3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    94a7:	48 89 c7             	mov    %rax,%rdi
    94aa:	e8 45 b8 ff ff       	call   4cf4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    94af:	eb 2a                	jmp    94db <_ZN9VulkanApp12createDeviceEv+0x37f>
    throw std::runtime_error("Failed to select a physical device.");
    94b1:	49 89 c4             	mov    %rax,%r12
    94b4:	48 89 df             	mov    %rbx,%rdi
    94b7:	e8 b4 9c ff ff       	call   3170 <__cxa_free_exception@plt>
    94bc:	4c 89 e3             	mov    %r12,%rbx
    94bf:	eb 03                	jmp    94c4 <_ZN9VulkanApp12createDeviceEv+0x368>
}
    94c1:	48 89 c3             	mov    %rax,%rbx
    94c4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    94c8:	48 89 c7             	mov    %rax,%rdi
    94cb:	e8 24 b8 ff ff       	call   4cf4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    94d0:	48 89 d8             	mov    %rbx,%rax
    94d3:	48 89 c7             	mov    %rax,%rdi
    94d6:	e8 85 9f ff ff       	call   3460 <_Unwind_Resume@plt>
    94db:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    94df:	5b                   	pop    %rbx
    94e0:	41 5c                	pop    %r12
    94e2:	41 5d                	pop    %r13
    94e4:	5d                   	pop    %rbp
    94e5:	c3                   	ret

00000000000094e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    94e6:	55                   	push   %rbp
    94e7:	48 89 e5             	mov    %rsp,%rbp
    94ea:	53                   	push   %rbx
    94eb:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    94f2:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    94f9:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    9500:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    9507:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    950e:	ba 00 00 00 00       	mov    $0x0,%edx
    9513:	48 89 ce             	mov    %rcx,%rsi
    9516:	48 89 c7             	mov    %rax,%rdi
    9519:	e8 27 a7 ff ff       	call   3c45 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    951e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    9525:	48 89 c7             	mov    %rax,%rdi
    9528:	e8 a9 0a 00 00       	call   9fd6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    952d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    9534:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    953c:	48 89 c7             	mov    %rax,%rdi
    953f:	e8 2c 10 00 00       	call   a570 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    9544:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    954b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    954f:	48 89 c7             	mov    %rax,%rdi
    9552:	e8 3f 10 00 00       	call   a596 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    9557:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    955e:	e9 8c 00 00 00       	jmp    95ef <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    9563:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    956a:	48 89 c7             	mov    %rax,%rdi
    956d:	e8 ac 10 00 00       	call   a61e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    9572:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    9576:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    957d:	48 89 c7             	mov    %rax,%rdi
    9580:	e8 eb 9e ff ff       	call   3470 <_ZNSaIcEC1Ev@plt>
    9585:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9589:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    9590:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    9597:	48 89 ce             	mov    %rcx,%rsi
    959a:	48 89 c7             	mov    %rax,%rdi
    959d:	e8 2c 0b 00 00       	call   a0ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    95a2:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    95a9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    95b0:	48 89 d6             	mov    %rdx,%rsi
    95b3:	48 89 c7             	mov    %rax,%rdi
    95b6:	e8 75 10 00 00       	call   a630 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    95bb:	8b 10                	mov    (%rax),%edx
    95bd:	83 c2 01             	add    $0x1,%edx
    95c0:	89 10                	mov    %edx,(%rax)
    95c2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    95c9:	48 89 c7             	mov    %rax,%rdi
    95cc:	e8 5f 9b ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    95d1:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    95d8:	48 89 c7             	mov    %rax,%rdi
    95db:	e8 00 9d ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    95e0:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    95e7:	48 89 c7             	mov    %rax,%rdi
    95ea:	e8 0b 10 00 00       	call   a5fa <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    95ef:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    95f6:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    95fd:	48 89 d6             	mov    %rdx,%rsi
    9600:	48 89 c7             	mov    %rax,%rdi
    9603:	e8 b7 0f 00 00       	call   a5bf <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    9608:	84 c0                	test   %al,%al
    960a:	0f 85 53 ff ff ff    	jne    9563 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
  }
  for (const auto &deviceExtension : deviceExtensions) {
    9610:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    9617:	48 83 c0 70          	add    $0x70,%rax
    961b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    961f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9623:	48 89 c7             	mov    %rax,%rdi
    9626:	e8 77 d7 ff ff       	call   6da2 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    962b:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    9632:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9636:	48 89 c7             	mov    %rax,%rdi
    9639:	e8 04 cc ff ff       	call   6242 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    963e:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    9645:	e9 ed 00 00 00       	jmp    9737 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x251>
    964a:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    9651:	48 89 c7             	mov    %rax,%rdi
    9654:	e8 33 d8 ff ff       	call   6e8c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    9659:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    965d:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    9661:	48 89 c7             	mov    %rax,%rdi
    9664:	e8 07 9e ff ff       	call   3470 <_ZNSaIcEC1Ev@plt>
    9669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    966d:	48 8b 08             	mov    (%rax),%rcx
    9670:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    9674:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    967b:	48 89 ce             	mov    %rcx,%rsi
    967e:	48 89 c7             	mov    %rax,%rdi
    9681:	e8 48 0a 00 00       	call   a0ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    9686:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    968d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    9694:	48 89 d6             	mov    %rdx,%rsi
    9697:	48 89 c7             	mov    %rax,%rdi
    969a:	e8 91 0f 00 00       	call   a630 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    969f:	8b 10                	mov    (%rax),%edx
    96a1:	83 c2 01             	add    $0x1,%edx
    96a4:	89 10                	mov    %edx,(%rax)
    96a6:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    96ad:	48 89 c7             	mov    %rax,%rdi
    96b0:	e8 7b 9a ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    96b5:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    96b9:	48 89 c7             	mov    %rax,%rdi
    96bc:	e8 1f 9c ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    96c1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    96c5:	48 89 c7             	mov    %rax,%rdi
    96c8:	e8 a3 9d ff ff       	call   3470 <_ZNSaIcEC1Ev@plt>
    96cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96d1:	48 8b 08             	mov    (%rax),%rcx
    96d4:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    96d8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    96dc:	48 89 ce             	mov    %rcx,%rsi
    96df:	48 89 c7             	mov    %rax,%rdi
    96e2:	e8 e7 09 00 00       	call   a0ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    96e7:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    96eb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    96f2:	48 89 d6             	mov    %rdx,%rsi
    96f5:	48 89 c7             	mov    %rax,%rdi
    96f8:	e8 33 0f 00 00       	call   a630 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    96fd:	8b 00                	mov    (%rax),%eax
    96ff:	83 f8 01             	cmp    $0x1,%eax
    9702:	0f 96 c3             	setbe  %bl
    9705:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9709:	48 89 c7             	mov    %rax,%rdi
    970c:	e8 1f 9a ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9711:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9715:	48 89 c7             	mov    %rax,%rdi
    9718:	e8 c3 9b ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    971d:	84 db                	test   %bl,%bl
    971f:	74 07                	je     9728 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x242>
      return false;
    9721:	bb 00 00 00 00       	mov    $0x0,%ebx
    9726:	eb 35                	jmp    975d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x277>
  for (const auto &deviceExtension : deviceExtensions) {
    9728:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    972f:	48 89 c7             	mov    %rax,%rdi
    9732:	e8 43 0b 00 00       	call   a27a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    9737:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    973e:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    9745:	48 89 d6             	mov    %rdx,%rsi
    9748:	48 89 c7             	mov    %rax,%rdi
    974b:	e8 ee 0a 00 00       	call   a23e <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    9750:	84 c0                	test   %al,%al
    9752:	0f 85 f2 fe ff ff    	jne    964a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x164>
    }
  }
  return true;
    9758:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    975d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    9764:	48 89 c7             	mov    %rax,%rdi
    9767:	e8 86 08 00 00       	call   9ff2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    976c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    9773:	48 89 c7             	mov    %rax,%rdi
    9776:	e8 0b b1 ff ff       	call   4886 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    977b:	89 d8                	mov    %ebx,%eax
    977d:	e9 96 00 00 00       	jmp    9818 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x332>
    helper[availableExtension.extensionName]++;
    9782:	48 89 c3             	mov    %rax,%rbx
    9785:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    978c:	48 89 c7             	mov    %rax,%rdi
    978f:	e8 9c 99 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9794:	eb 03                	jmp    9799 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b3>
    9796:	48 89 c3             	mov    %rax,%rbx
    9799:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    97a0:	48 89 c7             	mov    %rax,%rdi
    97a3:	e8 38 9b ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    97a8:	eb 45                	jmp    97ef <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x309>
    helper[deviceExtension]++;
    97aa:	48 89 c3             	mov    %rax,%rbx
    97ad:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    97b4:	48 89 c7             	mov    %rax,%rdi
    97b7:	e8 74 99 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    97bc:	eb 03                	jmp    97c1 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2db>
    97be:	48 89 c3             	mov    %rax,%rbx
    97c1:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    97c5:	48 89 c7             	mov    %rax,%rdi
    97c8:	e8 13 9b ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
    97cd:	eb 20                	jmp    97ef <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x309>
    if (helper[deviceExtension] < 2) {
    97cf:	48 89 c3             	mov    %rax,%rbx
    97d2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    97d6:	48 89 c7             	mov    %rax,%rdi
    97d9:	e8 52 99 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    97de:	eb 03                	jmp    97e3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2fd>
    97e0:	48 89 c3             	mov    %rax,%rbx
    97e3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    97e7:	48 89 c7             	mov    %rax,%rdi
    97ea:	e8 f1 9a ff ff       	call   32e0 <_ZNSaIcED1Ev@plt>
}
    97ef:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    97f6:	48 89 c7             	mov    %rax,%rdi
    97f9:	e8 f4 07 00 00       	call   9ff2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    97fe:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    9805:	48 89 c7             	mov    %rax,%rdi
    9808:	e8 79 b0 ff ff       	call   4886 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    980d:	48 89 d8             	mov    %rbx,%rax
    9810:	48 89 c7             	mov    %rax,%rdi
    9813:	e8 48 9c ff ff       	call   3460 <_Unwind_Resume@plt>
    9818:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    981c:	c9                   	leave
    981d:	c3                   	ret

000000000000981e <_ZN9VulkanApp30populateSwapchainCreateInfoKHREv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfoKHR() {
    981e:	55                   	push   %rbp
    981f:	48 89 e5             	mov    %rsp,%rbp
    9822:	48 83 ec 70          	sub    $0x70,%rsp
    9826:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    982a:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    982e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9832:	48 8b 50 30          	mov    0x30(%rax),%rdx
    9836:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    983a:	48 8b 48 38          	mov    0x38(%rax),%rcx
    983e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9842:	48 89 ce             	mov    %rcx,%rsi
    9845:	48 89 c7             	mov    %rax,%rdi
    9848:	e8 86 ad ff ff       	call   45d3 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFomats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    984d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9851:	48 8b 50 30          	mov    0x30(%rax),%rdx
    9855:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9859:	48 8b 48 38          	mov    0x38(%rax),%rcx
    985d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9861:	48 89 ce             	mov    %rcx,%rsi
    9864:	48 89 c7             	mov    %rax,%rdi
    9867:	e8 b1 ad ff ff       	call   461d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    986c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9870:	48 89 c6             	mov    %rax,%rsi
    9873:	b8 00 00 00 00       	mov    $0x0,%eax
    9878:	ba 0d 00 00 00       	mov    $0xd,%edx
    987d:	48 89 f7             	mov    %rsi,%rdi
    9880:	48 89 d1             	mov    %rdx,%rcx
    9883:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    9886:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    988a:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    9890:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9894:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    989b:	00 

  /* Images of the swapchain can be used to create a VkImageView with a
   * different format than what the swapchain was create with. */
  swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;
    989c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    98a0:	c7 40 10 04 00 00 00 	movl   $0x4,0x10(%rax)

  swapchainCreateInfo.surface = surface;
    98a7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    98ab:	48 8b 50 30          	mov    0x30(%rax),%rdx
    98af:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    98b3:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal opeerations
   * before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    98b7:	8b 45 c0             	mov    -0x40(%rbp),%eax
    98ba:	83 c0 01             	add    $0x1,%eax
    98bd:	89 45 fc             	mov    %eax,-0x4(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    98c0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    98c3:	85 c0                	test   %eax,%eax
    98c5:	74 0e                	je     98d5 <_ZN9VulkanApp30populateSwapchainCreateInfoKHREv+0xb7>
      minImageCount > surfaceCapabilities.maxImageCount) {
    98c7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    98ca:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    98cd:	73 06                	jae    98d5 <_ZN9VulkanApp30populateSwapchainCreateInfoKHREv+0xb7>
    minImageCount = surfaceCapabilities.maxImageCount;
    98cf:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    98d2:	89 45 fc             	mov    %eax,-0x4(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    98d5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    98d9:	8b 55 fc             	mov    -0x4(%rbp),%edx
    98dc:	89 50 20             	mov    %edx,0x20(%rax)

  /*  */

  // swapchainCreateInfo.imageFormat = ;

  return swapchainCreateInfo;
    98df:	90                   	nop
}
    98e0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    98e4:	48 89 c7             	mov    %rax,%rdi
    98e7:	e8 9c b9 ff ff       	call   5288 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    98ec:	90                   	nop
}
    98ed:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    98f1:	c9                   	leave
    98f2:	c3                   	ret
    98f3:	90                   	nop

00000000000098f4 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    98f4:	55                   	push   %rbp
    98f5:	48 89 e5             	mov    %rsp,%rbp
    98f8:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    98fc:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  [[maybe_unused]] auto swapchainCreateInfo = populateSwapchainCreateInfoKHR();
    9900:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9904:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    9908:	48 89 d6             	mov    %rdx,%rsi
    990b:	48 89 c7             	mov    %rax,%rdi
    990e:	e8 0b ff ff ff       	call   981e <_ZN9VulkanApp30populateSwapchainCreateInfoKHREv>
  // swapchain = vkh::createSwapchain(device, &swapchainCreateInfo);
}
    9913:	90                   	nop
    9914:	c9                   	leave
    9915:	c3                   	ret

0000000000009916 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    9916:	55                   	push   %rbp
    9917:	48 89 e5             	mov    %rsp,%rbp
    991a:	41 57                	push   %r15
    991c:	41 56                	push   %r14
    991e:	41 55                	push   %r13
    9920:	41 54                	push   %r12
    9922:	53                   	push   %rbx
    9923:	48 83 ec 38          	sub    $0x38,%rsp
    9927:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    992b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    992f:	48 8d 58 10          	lea    0x10(%rax),%rbx
    9933:	48 8d 05 92 62 00 00 	lea    0x6292(%rip),%rax        # fbcc <_ZN6__pstl9execution2v1L5unseqE+0x39>
    993a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    993e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9942:	49 89 c6             	mov    %rax,%r14
    9945:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    994b:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    994f:	48 89 c7             	mov    %rax,%rdi
    9952:	e8 ef af ff ff       	call   4946 <_ZNSaIPKcEC1Ev>
    9957:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    995b:	4d 89 f0             	mov    %r14,%r8
    995e:	4d 89 f9             	mov    %r15,%r9
    9961:	4c 89 f6             	mov    %r14,%rsi
    9964:	4c 89 ff             	mov    %r15,%rdi
    9967:	48 89 fa             	mov    %rdi,%rdx
    996a:	48 89 c1             	mov    %rax,%rcx
    996d:	4c 89 c6             	mov    %r8,%rsi
    9970:	48 89 df             	mov    %rbx,%rdi
    9973:	e8 f6 07 00 00       	call   a16e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    9978:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    997c:	48 89 c7             	mov    %rax,%rdi
    997f:	e8 de af ff ff       	call   4962 <_ZNSaIPKcED1Ev>
    9984:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9988:	48 83 c0 58          	add    $0x58,%rax
    998c:	48 89 c7             	mov    %rax,%rdi
    998f:	e8 b2 06 00 00       	call   a046 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    9994:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9998:	48 8d 58 70          	lea    0x70(%rax),%rbx
    999c:	48 8d 05 45 62 00 00 	lea    0x6245(%rip),%rax        # fbe8 <_ZN6__pstl9execution2v1L5unseqE+0x55>
    99a3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    99a7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    99ab:	49 89 c4             	mov    %rax,%r12
    99ae:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    99b4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    99b8:	48 89 c7             	mov    %rax,%rdi
    99bb:	e8 86 af ff ff       	call   4946 <_ZNSaIPKcEC1Ev>
    99c0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    99c4:	4d 89 e0             	mov    %r12,%r8
    99c7:	4d 89 e9             	mov    %r13,%r9
    99ca:	4c 89 e6             	mov    %r12,%rsi
    99cd:	4c 89 ef             	mov    %r13,%rdi
    99d0:	48 89 fa             	mov    %rdi,%rdx
    99d3:	48 89 c1             	mov    %rax,%rcx
    99d6:	4c 89 c6             	mov    %r8,%rsi
    99d9:	48 89 df             	mov    %rbx,%rdi
    99dc:	e8 8d 07 00 00       	call   a16e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    99e1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    99e5:	48 89 c7             	mov    %rax,%rdi
    99e8:	e8 75 af ff ff       	call   4962 <_ZNSaIPKcED1Ev>
  createWindow();
    99ed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    99f1:	48 89 c7             	mov    %rax,%rdi
    99f4:	e8 1f f3 ff ff       	call   8d18 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    99f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    99fd:	48 89 c7             	mov    %rax,%rdi
    9a00:	e8 53 f3 ff ff       	call   8d58 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    9a05:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a09:	48 89 c7             	mov    %rax,%rdi
    9a0c:	e8 0b f5 ff ff       	call   8f1c <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    9a11:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a15:	48 89 c7             	mov    %rax,%rdi
    9a18:	e8 27 f5 ff ff       	call   8f44 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    9a1d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a21:	48 89 c7             	mov    %rax,%rdi
    9a24:	e8 33 f7 ff ff       	call   915c <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    9a29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a2d:	48 89 c7             	mov    %rax,%rdi
    9a30:	e8 bf fe ff ff       	call   98f4 <_ZN9VulkanApp15createSwapchainEv>
}
    9a35:	eb 69                	jmp    9aa0 <_ZN9VulkanAppC1Ev+0x18a>
VulkanApp::VulkanApp() {
    9a37:	48 89 c3             	mov    %rax,%rbx
    9a3a:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    9a3e:	48 89 c7             	mov    %rax,%rdi
    9a41:	e8 1c af ff ff       	call   4962 <_ZNSaIPKcED1Ev>
    9a46:	48 89 d8             	mov    %rbx,%rax
    9a49:	48 89 c7             	mov    %rax,%rdi
    9a4c:	e8 0f 9a ff ff       	call   3460 <_Unwind_Resume@plt>
    9a51:	48 89 c3             	mov    %rax,%rbx
    9a54:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9a58:	48 89 c7             	mov    %rax,%rdi
    9a5b:	e8 02 af ff ff       	call   4962 <_ZNSaIPKcED1Ev>
    9a60:	eb 13                	jmp    9a75 <_ZN9VulkanAppC1Ev+0x15f>
}
    9a62:	48 89 c3             	mov    %rax,%rbx
    9a65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a69:	48 83 c0 70          	add    $0x70,%rax
    9a6d:	48 89 c7             	mov    %rax,%rdi
    9a70:	e8 7f af ff ff       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9a75:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a79:	48 83 c0 58          	add    $0x58,%rax
    9a7d:	48 89 c7             	mov    %rax,%rdi
    9a80:	e8 41 0d 00 00       	call   a7c6 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    9a85:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9a89:	48 83 c0 10          	add    $0x10,%rax
}
    9a8d:	48 89 c7             	mov    %rax,%rdi
    9a90:	e8 5f af ff ff       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9a95:	48 89 d8             	mov    %rbx,%rax
    9a98:	48 89 c7             	mov    %rax,%rdi
    9a9b:	e8 c0 99 ff ff       	call   3460 <_Unwind_Resume@plt>
    9aa0:	48 83 c4 38          	add    $0x38,%rsp
    9aa4:	5b                   	pop    %rbx
    9aa5:	41 5c                	pop    %r12
    9aa7:	41 5d                	pop    %r13
    9aa9:	41 5e                	pop    %r14
    9aab:	41 5f                	pop    %r15
    9aad:	5d                   	pop    %rbp
    9aae:	c3                   	ret
    9aaf:	90                   	nop

0000000000009ab0 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    9ab0:	55                   	push   %rbp
    9ab1:	48 89 e5             	mov    %rsp,%rbp
    9ab4:	48 83 ec 10          	sub    $0x10,%rsp
    9ab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  // vkh::destroySwapchain(device, swapchain);
  vkh::destroyDevice(device);
    9abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac0:	48 8b 40 40          	mov    0x40(%rax),%rax
    9ac4:	be 00 00 00 00       	mov    $0x0,%esi
    9ac9:	48 89 c7             	mov    %rax,%rdi
    9acc:	e8 81 9f ff ff       	call   3a52 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    9ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ad5:	48 8b 48 28          	mov    0x28(%rax),%rcx
    9ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9add:	48 8b 40 08          	mov    0x8(%rax),%rax
    9ae1:	ba 00 00 00 00       	mov    $0x0,%edx
    9ae6:	48 89 ce             	mov    %rcx,%rsi
    9ae9:	48 89 c7             	mov    %rax,%rdi
    9aec:	e8 8a ed ff ff       	call   887b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    9af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af5:	48 8b 48 30          	mov    0x30(%rax),%rcx
    9af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9afd:	48 8b 40 08          	mov    0x8(%rax),%rax
    9b01:	ba 00 00 00 00       	mov    $0x0,%edx
    9b06:	48 89 ce             	mov    %rcx,%rsi
    9b09:	48 89 c7             	mov    %rax,%rdi
    9b0c:	e8 67 9f ff ff       	call   3a78 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    9b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b15:	48 8b 40 08          	mov    0x8(%rax),%rax
    9b19:	be 00 00 00 00       	mov    $0x0,%esi
    9b1e:	48 89 c7             	mov    %rax,%rdi
    9b21:	e8 06 9f ff ff       	call   3a2c <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(window);
    9b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b2a:	48 8b 00             	mov    (%rax),%rax
    9b2d:	48 89 c7             	mov    %rax,%rdi
    9b30:	e8 4b 95 ff ff       	call   3080 <glfwDestroyWindow@plt>
  glfwTerminate();
    9b35:	e8 56 97 ff ff       	call   3290 <glfwTerminate@plt>
}
    9b3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b3e:	48 83 c0 70          	add    $0x70,%rax
    9b42:	48 89 c7             	mov    %rax,%rdi
    9b45:	e8 aa ae ff ff       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b4e:	48 83 c0 58          	add    $0x58,%rax
    9b52:	48 89 c7             	mov    %rax,%rdi
    9b55:	e8 6c 0c 00 00       	call   a7c6 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    9b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b5e:	48 83 c0 10          	add    $0x10,%rax
}
    9b62:	48 89 c7             	mov    %rax,%rdi
    9b65:	e8 8a ae ff ff       	call   49f4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9b6a:	90                   	nop
    9b6b:	c9                   	leave
    9b6c:	c3                   	ret
    9b6d:	90                   	nop

0000000000009b6e <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    9b6e:	55                   	push   %rbp
    9b6f:	48 89 e5             	mov    %rsp,%rbp
    9b72:	53                   	push   %rbx
    9b73:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    9b7a:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    9b81:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9b85:	48 89 c7             	mov    %rax,%rdi
    9b88:	e8 7d 0c 00 00       	call   a80a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    9b8d:	f2 0f 10 05 db 60 00 	movsd  0x60db(%rip),%xmm0        # fc70 <_ZN6__pstl9execution2v1L5unseqE+0xdd>
    9b94:	00 
    9b95:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    9b9a:	e9 a1 00 00 00       	jmp    9c40 <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    9b9f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9ba3:	48 89 c7             	mov    %rax,%rdi
    9ba6:	e8 5f 0c 00 00       	call   a80a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>

    glfwPollEvents();
    9bab:	e8 90 96 ff ff       	call   3240 <glfwPollEvents@plt>

    double current = static_cast<double>(time_total.current());
    9bb0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9bb4:	48 89 c7             	mov    %rax,%rdi
    9bb7:	e8 a6 04 00 00       	call   a062 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    9bbc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9bc0:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    9bc5:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    9bca:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    9bcf:	66 0f 2f 05 99 60 00 	comisd 0x6099(%rip),%xmm0        # fc70 <_ZN6__pstl9execution2v1L5unseqE+0xdd>
    9bd6:	00 
    9bd7:	72 5b                	jb     9c34 <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    9bd9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9bdd:	48 89 c7             	mov    %rax,%rdi
    9be0:	e8 7d 04 00 00       	call   a062 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    9be5:	66 0f ef c9          	pxor   %xmm1,%xmm1
    9be9:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    9bee:	f2 0f 10 05 7a 60 00 	movsd  0x607a(%rip),%xmm0        # fc70 <_ZN6__pstl9execution2v1L5unseqE+0xdd>
    9bf5:	00 
    9bf6:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    9bfa:	66 48 0f 7e c0       	movq   %xmm0,%rax
    9bff:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9c04:	48 8d 05 75 e6 00 00 	lea    0xe675(%rip),%rax        # 18280 <_ZSt4cout@GLIBCXX_3.4>
    9c0b:	48 89 c7             	mov    %rax,%rdi
    9c0e:	e8 9d 98 ff ff       	call   34b0 <_ZNSolsEd@plt>
    9c13:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    9c16:	48 8d 05 dc 5f 00 00 	lea    0x5fdc(%rip),%rax        # fbf9 <_ZN6__pstl9execution2v1L5unseqE+0x66>
    9c1d:	48 89 c6             	mov    %rax,%rsi
    9c20:	48 89 d7             	mov    %rdx,%rdi
    9c23:	e8 28 96 ff ff       	call   3250 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    9c28:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9c2c:	48 89 c7             	mov    %rax,%rdi
    9c2f:	e8 e6 0c 00 00       	call   a91a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    9c34:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9c38:	48 89 c7             	mov    %rax,%rdi
    9c3b:	e8 40 0c 00 00       	call   a880 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    9c40:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    9c47:	48 8b 00             	mov    (%rax),%rax
    9c4a:	48 89 c7             	mov    %rax,%rdi
    9c4d:	e8 4e 98 ff ff       	call   34a0 <glfwWindowShouldClose@plt>
    9c52:	85 c0                	test   %eax,%eax
    9c54:	0f 94 c0             	sete   %al
    9c57:	84 c0                	test   %al,%al
    9c59:	0f 85 40 ff ff ff    	jne    9b9f <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    9c5f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    9c66:	48 8b 40 40          	mov    0x40(%rax),%rax
    9c6a:	48 89 c7             	mov    %rax,%rdi
    9c6d:	e8 ee 93 ff ff       	call   3060 <vkDeviceWaitIdle@plt>
    9c72:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9c76:	48 89 c7             	mov    %rax,%rdi
    9c79:	e8 02 0c 00 00       	call   a880 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    9c7e:	eb 2b                	jmp    9cab <_ZN9VulkanApp3runEv+0x13d>
  }
    9c80:	48 89 c3             	mov    %rax,%rbx
    9c83:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9c87:	48 89 c7             	mov    %rax,%rdi
    9c8a:	e8 f1 0b 00 00       	call   a880 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    9c8f:	eb 03                	jmp    9c94 <_ZN9VulkanApp3runEv+0x126>
    9c91:	48 89 c3             	mov    %rax,%rbx
    9c94:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9c98:	48 89 c7             	mov    %rax,%rdi
    9c9b:	e8 e0 0b 00 00       	call   a880 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    9ca0:	48 89 d8             	mov    %rbx,%rax
    9ca3:	48 89 c7             	mov    %rax,%rdi
    9ca6:	e8 b5 97 ff ff       	call   3460 <_Unwind_Resume@plt>
    9cab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9caf:	c9                   	leave
    9cb0:	c3                   	ret

0000000000009cb1 <_Z41__static_initialization_and_destruction_0ii>:
    9cb1:	55                   	push   %rbp
    9cb2:	48 89 e5             	mov    %rsp,%rbp
    9cb5:	48 83 ec 10          	sub    $0x10,%rsp
    9cb9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    9cbc:	89 75 f8             	mov    %esi,-0x8(%rbp)
    9cbf:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    9cc3:	75 3b                	jne    9d00 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9cc5:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    9ccc:	75 32                	jne    9d00 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9cce:	48 8d 05 de e7 00 00 	lea    0xe7de(%rip),%rax        # 184b3 <_ZStL8__ioinit>
    9cd5:	48 89 c7             	mov    %rax,%rdi
    9cd8:	e8 13 97 ff ff       	call   33f0 <_ZNSt8ios_base4InitC1Ev@plt>
    9cdd:	48 8d 05 74 e5 00 00 	lea    0xe574(%rip),%rax        # 18258 <__dso_handle>
    9ce4:	48 89 c2             	mov    %rax,%rdx
    9ce7:	48 8d 05 c5 e7 00 00 	lea    0xe7c5(%rip),%rax        # 184b3 <_ZStL8__ioinit>
    9cee:	48 89 c6             	mov    %rax,%rsi
    9cf1:	48 8b 05 d0 e2 00 00 	mov    0xe2d0(%rip),%rax        # 17fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    9cf8:	48 89 c7             	mov    %rax,%rdi
    9cfb:	e8 10 95 ff ff       	call   3210 <__cxa_atexit@plt>
    9d00:	90                   	nop
    9d01:	c9                   	leave
    9d02:	c3                   	ret

0000000000009d03 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    9d03:	55                   	push   %rbp
    9d04:	48 89 e5             	mov    %rsp,%rbp
    9d07:	be ff ff 00 00       	mov    $0xffff,%esi
    9d0c:	bf 01 00 00 00       	mov    $0x1,%edi
    9d11:	e8 9b ff ff ff       	call   9cb1 <_Z41__static_initialization_and_destruction_0ii>
    9d16:	5d                   	pop    %rbp
    9d17:	c3                   	ret

0000000000009d18 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    9d18:	55                   	push   %rbp
    9d19:	48 89 e5             	mov    %rsp,%rbp
    9d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d20:	48 8d 15 e9 df 00 00 	lea    0xdfe9(%rip),%rdx        # 17d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    9d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2b:	48 89 10             	mov    %rdx,(%rax)
    9d2e:	90                   	nop
    9d2f:	5d                   	pop    %rbp
    9d30:	c3                   	ret

0000000000009d31 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    9d31:	55                   	push   %rbp
    9d32:	48 89 e5             	mov    %rsp,%rbp
    9d35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d3d:	90                   	nop
    9d3e:	5d                   	pop    %rbp
    9d3f:	c3                   	ret

0000000000009d40 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    9d40:	55                   	push   %rbp
    9d41:	48 89 e5             	mov    %rsp,%rbp
    9d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    9d48:	48 8d 05 29 5e 00 00 	lea    0x5e29(%rip),%rax        # fb78 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    9d4f:	5d                   	pop    %rbp
    9d50:	c3                   	ret
    9d51:	90                   	nop

0000000000009d52 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    9d52:	55                   	push   %rbp
    9d53:	48 89 e5             	mov    %rsp,%rbp
    9d56:	48 83 ec 10          	sub    $0x10,%rsp
    9d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d62:	48 89 c7             	mov    %rax,%rdi
    9d65:	e8 ae ff ff ff       	call   9d18 <_ZNSt9exceptionC1Ev>
    9d6a:	48 8d 15 6f df 00 00 	lea    0xdf6f(%rip),%rdx        # 17ce0 <_ZTVSt19bad_optional_access+0x10>
    9d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d75:	48 89 10             	mov    %rdx,(%rax)
    9d78:	90                   	nop
    9d79:	c9                   	leave
    9d7a:	c3                   	ret

0000000000009d7b <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    9d7b:	55                   	push   %rbp
    9d7c:	48 89 e5             	mov    %rsp,%rbp
    9d7f:	53                   	push   %rbx
    9d80:	48 83 ec 08          	sub    $0x8,%rsp
    9d84:	bf 08 00 00 00       	mov    $0x8,%edi
    9d89:	e8 62 93 ff ff       	call   30f0 <__cxa_allocate_exception@plt>
    9d8e:	48 89 c3             	mov    %rax,%rbx
    9d91:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    9d98:	48 89 df             	mov    %rbx,%rdi
    9d9b:	e8 b2 ff ff ff       	call   9d52 <_ZNSt19bad_optional_accessC1Ev>
    9da0:	48 8d 05 ff 2b 00 00 	lea    0x2bff(%rip),%rax        # c9a6 <_ZNSt19bad_optional_accessD1Ev>
    9da7:	48 89 c2             	mov    %rax,%rdx
    9daa:	48 8d 05 a7 df 00 00 	lea    0xdfa7(%rip),%rax        # 17d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    9db1:	48 89 c6             	mov    %rax,%rsi
    9db4:	48 89 df             	mov    %rbx,%rdi
    9db7:	e8 84 96 ff ff       	call   3440 <__cxa_throw@plt>

0000000000009dbc <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    9dbc:	55                   	push   %rbp
    9dbd:	48 89 e5             	mov    %rsp,%rbp
    9dc0:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    9dc4:	e8 3a 00 00 00       	call   9e03 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    9dc9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9dcd:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    9dd1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    9dd5:	48 89 d6             	mov    %rdx,%rsi
    9dd8:	48 89 c7             	mov    %rax,%rdi
    9ddb:	e8 06 00 00 00       	call   9de6 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    9de0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9de4:	c9                   	leave
    9de5:	c3                   	ret

0000000000009de6 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    9de6:	55                   	push   %rbp
    9de7:	48 89 e5             	mov    %rsp,%rbp
    9dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    9df2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9df6:	48 8b 10             	mov    (%rax),%rdx
    9df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dfd:	48 89 10             	mov    %rdx,(%rax)
    9e00:	90                   	nop
    9e01:	5d                   	pop    %rbp
    9e02:	c3                   	ret

0000000000009e03 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    9e03:	55                   	push   %rbp
    9e04:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    9e07:	b8 00 00 00 00       	mov    $0x0,%eax
    9e0c:	5d                   	pop    %rbp
    9e0d:	c3                   	ret

0000000000009e0e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    9e0e:	55                   	push   %rbp
    9e0f:	48 89 e5             	mov    %rsp,%rbp
    9e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	48 8b 00             	mov    (%rax),%rax
    9e1d:	5d                   	pop    %rbp
    9e1e:	c3                   	ret
    9e1f:	90                   	nop

0000000000009e20 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    9e20:	55                   	push   %rbp
    9e21:	48 89 e5             	mov    %rsp,%rbp
    9e24:	48 83 ec 10          	sub    $0x10,%rsp
    9e28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    9e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e30:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    9e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e3a:	48 89 c7             	mov    %rax,%rdi
    9e3d:	e8 04 00 00 00       	call   9e46 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    9e42:	90                   	nop
    9e43:	c9                   	leave
    9e44:	c3                   	ret
    9e45:	90                   	nop

0000000000009e46 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    9e46:	55                   	push   %rbp
    9e47:	48 89 e5             	mov    %rsp,%rbp
    9e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    9e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e52:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9e59:	00 
      _M_header._M_left = &_M_header;
    9e5a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e62:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    9e66:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6e:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    9e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e76:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    9e7d:	00 
    }
    9e7e:	90                   	nop
    9e7f:	5d                   	pop    %rbp
    9e80:	c3                   	ret
    9e81:	90                   	nop

0000000000009e82 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    9e82:	55                   	push   %rbp
    9e83:	48 89 e5             	mov    %rsp,%rbp
    9e86:	48 83 ec 10          	sub    $0x10,%rsp
    9e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e92:	48 89 c7             	mov    %rax,%rdi
    9e95:	e8 60 00 00 00       	call   9efa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    9e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9e:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    9ea2:	90                   	nop
    9ea3:	c9                   	leave
    9ea4:	c3                   	ret
    9ea5:	90                   	nop

0000000000009ea6 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    9ea6:	55                   	push   %rbp
    9ea7:	48 89 e5             	mov    %rsp,%rbp
    9eaa:	48 83 ec 10          	sub    $0x10,%rsp
    9eae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eb6:	48 89 c7             	mov    %rax,%rdi
    9eb9:	e8 c4 ff ff ff       	call   9e82 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    9ebe:	90                   	nop
    9ebf:	c9                   	leave
    9ec0:	c3                   	ret
    9ec1:	90                   	nop

0000000000009ec2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    9ec2:	55                   	push   %rbp
    9ec3:	48 89 e5             	mov    %rsp,%rbp
    9ec6:	48 83 ec 10          	sub    $0x10,%rsp
    9eca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ed2:	48 89 c7             	mov    %rax,%rdi
    9ed5:	e8 cc ff ff ff       	call   9ea6 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    9eda:	90                   	nop
    9edb:	c9                   	leave
    9edc:	c3                   	ret
    9edd:	90                   	nop

0000000000009ede <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    9ede:	55                   	push   %rbp
    9edf:	48 89 e5             	mov    %rsp,%rbp
    9ee2:	48 83 ec 10          	sub    $0x10,%rsp
    9ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eee:	48 89 c7             	mov    %rax,%rdi
    9ef1:	e8 cc ff ff ff       	call   9ec2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    9ef6:	90                   	nop
    9ef7:	c9                   	leave
    9ef8:	c3                   	ret
    9ef9:	90                   	nop

0000000000009efa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    9efa:	55                   	push   %rbp
    9efb:	48 89 e5             	mov    %rsp,%rbp
    9efe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f02:	90                   	nop
    9f03:	5d                   	pop    %rbp
    9f04:	c3                   	ret
    9f05:	90                   	nop

0000000000009f06 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    9f06:	55                   	push   %rbp
    9f07:	48 89 e5             	mov    %rsp,%rbp
    9f0a:	48 83 ec 10          	sub    $0x10,%rsp
    9f0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1e:	48 89 d6             	mov    %rdx,%rsi
    9f21:	48 89 c7             	mov    %rax,%rdi
    9f24:	e8 4b 05 00 00       	call   a474 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    9f29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f2d:	c9                   	leave
    9f2e:	c3                   	ret
    9f2f:	90                   	nop

0000000000009f30 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    9f30:	55                   	push   %rbp
    9f31:	48 89 e5             	mov    %rsp,%rbp
    9f34:	48 83 ec 10          	sub    $0x10,%rsp
    9f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f48:	48 89 d6             	mov    %rdx,%rsi
    9f4b:	48 89 c7             	mov    %rax,%rdi
    9f4e:	e8 b3 ff ff ff       	call   9f06 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    9f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f57:	c9                   	leave
    9f58:	c3                   	ret
    9f59:	90                   	nop

0000000000009f5a <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    9f5a:	55                   	push   %rbp
    9f5b:	48 89 e5             	mov    %rsp,%rbp
    9f5e:	48 83 ec 10          	sub    $0x10,%rsp
    9f62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    9f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f6a:	48 89 c7             	mov    %rax,%rdi
    9f6d:	e8 1a 00 00 00       	call   9f8c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    9f72:	84 c0                	test   %al,%al
    9f74:	74 0e                	je     9f84 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    9f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f7a:	48 89 c7             	mov    %rax,%rdi
    9f7d:	e8 1c 05 00 00       	call   a49e <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    9f82:	eb 05                	jmp    9f89 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    9f84:	e8 f2 fd ff ff       	call   9d7b <_ZSt27__throw_bad_optional_accessv>
      }
    9f89:	c9                   	leave
    9f8a:	c3                   	ret
    9f8b:	90                   	nop

0000000000009f8c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    9f8c:	55                   	push   %rbp
    9f8d:	48 89 e5             	mov    %rsp,%rbp
    9f90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f98:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    9f9c:	5d                   	pop    %rbp
    9f9d:	c3                   	ret

0000000000009f9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    9f9e:	55                   	push   %rbp
    9f9f:	48 89 e5             	mov    %rsp,%rbp
    9fa2:	48 83 ec 10          	sub    $0x10,%rsp
    9fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fae:	48 89 c7             	mov    %rax,%rdi
    9fb1:	e8 64 05 00 00       	call   a51a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    9fb6:	90                   	nop
    9fb7:	c9                   	leave
    9fb8:	c3                   	ret
    9fb9:	90                   	nop

0000000000009fba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    9fba:	55                   	push   %rbp
    9fbb:	48 89 e5             	mov    %rsp,%rbp
    9fbe:	48 83 ec 10          	sub    $0x10,%rsp
    9fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fca:	48 89 c7             	mov    %rax,%rdi
    9fcd:	e8 10 05 00 00       	call   a4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    9fd2:	90                   	nop
    9fd3:	c9                   	leave
    9fd4:	c3                   	ret
    9fd5:	90                   	nop

0000000000009fd6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    9fd6:	55                   	push   %rbp
    9fd7:	48 89 e5             	mov    %rsp,%rbp
    9fda:	48 83 ec 10          	sub    $0x10,%rsp
    9fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fe6:	48 89 c7             	mov    %rax,%rdi
    9fe9:	e8 cc ff ff ff       	call   9fba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    9fee:	90                   	nop
    9fef:	c9                   	leave
    9ff0:	c3                   	ret
    9ff1:	90                   	nop

0000000000009ff2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    9ff2:	55                   	push   %rbp
    9ff3:	48 89 e5             	mov    %rsp,%rbp
    9ff6:	48 83 ec 10          	sub    $0x10,%rsp
    9ffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a002:	48 89 c7             	mov    %rax,%rdi
    a005:	e8 2c 05 00 00       	call   a536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    a00a:	90                   	nop
    a00b:	c9                   	leave
    a00c:	c3                   	ret
    a00d:	90                   	nop

000000000000a00e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    a00e:	55                   	push   %rbp
    a00f:	48 89 e5             	mov    %rsp,%rbp
    a012:	48 83 ec 10          	sub    $0x10,%rsp
    a016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a01a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a01e:	48 89 c7             	mov    %rax,%rdi
    a021:	e8 36 07 00 00       	call   a75c <_ZNSaIP9VkImage_TED1Ev>
    a026:	90                   	nop
    a027:	c9                   	leave
    a028:	c3                   	ret
    a029:	90                   	nop

000000000000a02a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    a02a:	55                   	push   %rbp
    a02b:	48 89 e5             	mov    %rsp,%rbp
    a02e:	48 83 ec 10          	sub    $0x10,%rsp
    a032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a03a:	48 89 c7             	mov    %rax,%rdi
    a03d:	e8 f2 06 00 00       	call   a734 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    a042:	90                   	nop
    a043:	c9                   	leave
    a044:	c3                   	ret
    a045:	90                   	nop

000000000000a046 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
    a046:	55                   	push   %rbp
    a047:	48 89 e5             	mov    %rsp,%rbp
    a04a:	48 83 ec 10          	sub    $0x10,%rsp
    a04e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a056:	48 89 c7             	mov    %rax,%rdi
    a059:	e8 cc ff ff ff       	call   a02a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    a05e:	90                   	nop
    a05f:	c9                   	leave
    a060:	c3                   	ret
    a061:	90                   	nop

000000000000a062 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
    a062:	55                   	push   %rbp
    a063:	48 89 e5             	mov    %rsp,%rbp
    a066:	53                   	push   %rbx
    a067:	48 83 ec 38          	sub    $0x38,%rsp
    a06b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    a06f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    a073:	e8 08 93 ff ff       	call   3380 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    a078:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a07c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    a080:	48 89 de             	mov    %rbx,%rsi
    a083:	48 89 c7             	mov    %rax,%rdi
    a086:	e8 1d 08 00 00       	call   a8a8 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    a08b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    a08f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a093:	48 89 c7             	mov    %rax,%rdi
    a096:	e8 52 08 00 00       	call   a8ed <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    a09b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    a09f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a0a3:	48 89 c7             	mov    %rax,%rdi
    a0a6:	e8 5d 08 00 00       	call   a908 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
    a0ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a0af:	c9                   	leave
    a0b0:	c3                   	ret
    a0b1:	90                   	nop

000000000000a0b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    a0b2:	55                   	push   %rbp
    a0b3:	48 89 e5             	mov    %rsp,%rbp
    a0b6:	48 83 ec 10          	sub    $0x10,%rsp
    a0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0c2:	48 89 c7             	mov    %rax,%rdi
    a0c5:	e8 86 8f ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    a0ca:	90                   	nop
    a0cb:	c9                   	leave
    a0cc:	c3                   	ret
    a0cd:	90                   	nop

000000000000a0ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    a0ce:	55                   	push   %rbp
    a0cf:	48 89 e5             	mov    %rsp,%rbp
    a0d2:	53                   	push   %rbx
    a0d3:	48 83 ec 38          	sub    $0x38,%rsp
    a0d7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a0db:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a0df:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    a0e3:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    a0e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a0eb:	48 89 c7             	mov    %rax,%rdi
    a0ee:	e8 bd 90 ff ff       	call   31b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    a0f3:	48 89 c1             	mov    %rax,%rcx
    a0f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a0fa:	48 89 c2             	mov    %rax,%rdx
    a0fd:	48 89 ce             	mov    %rcx,%rsi
    a100:	48 89 df             	mov    %rbx,%rdi
    a103:	e8 b8 91 ff ff       	call   32c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    a108:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a10d:	75 0f                	jne    a11e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    a10f:	48 8d 05 ea 5a 00 00 	lea    0x5aea(%rip),%rax        # fc00 <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    a116:	48 89 c7             	mov    %rax,%rdi
    a119:	e8 42 90 ff ff       	call   3160 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    a11e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a122:	48 89 c7             	mov    %rax,%rdi
    a125:	e8 ec e8 ff ff       	call   8a16 <_ZNSt11char_traitsIcE6lengthEPKc>
    a12a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a12e:	48 01 d0             	add    %rdx,%rax
    a131:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    a135:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a139:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a13d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a141:	48 89 ce             	mov    %rcx,%rsi
    a144:	48 89 c7             	mov    %rax,%rdi
    a147:	e8 32 08 00 00       	call   a97e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    a14c:	eb 1a                	jmp    a168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    a14e:	48 89 c3             	mov    %rax,%rbx
    a151:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a155:	48 89 c7             	mov    %rax,%rdi
    a158:	e8 55 ff ff ff       	call   a0b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    a15d:	48 89 d8             	mov    %rbx,%rax
    a160:	48 89 c7             	mov    %rax,%rdi
    a163:	e8 f8 92 ff ff       	call   3460 <_Unwind_Resume@plt>
    a168:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a16c:	c9                   	leave
    a16d:	c3                   	ret

000000000000a16e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    a16e:	55                   	push   %rbp
    a16f:	48 89 e5             	mov    %rsp,%rbp
    a172:	53                   	push   %rbx
    a173:	48 83 ec 38          	sub    $0x38,%rsp
    a177:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a17b:	48 89 f0             	mov    %rsi,%rax
    a17e:	48 89 d6             	mov    %rdx,%rsi
    a181:	48 89 f2             	mov    %rsi,%rdx
    a184:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a188:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a18c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    a190:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a194:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a198:	48 89 d6             	mov    %rdx,%rsi
    a19b:	48 89 c7             	mov    %rax,%rdi
    a19e:	e8 d1 08 00 00       	call   aa74 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    a1a3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    a1a7:	48 89 c7             	mov    %rax,%rdi
    a1aa:	e8 fd 08 00 00       	call   aaac <_ZNKSt16initializer_listIPKcE3endEv>
    a1af:	48 89 c3             	mov    %rax,%rbx
    a1b2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    a1b6:	48 89 c7             	mov    %rax,%rdi
    a1b9:	e8 dc 08 00 00       	call   aa9a <_ZNKSt16initializer_listIPKcE5beginEv>
    a1be:	48 89 c1             	mov    %rax,%rcx
    a1c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a1c5:	48 89 da             	mov    %rbx,%rdx
    a1c8:	48 89 ce             	mov    %rcx,%rsi
    a1cb:	48 89 c7             	mov    %rax,%rdi
    a1ce:	e8 3f 09 00 00       	call   ab12 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    a1d3:	eb 1a                	jmp    a1ef <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    a1d5:	48 89 c3             	mov    %rax,%rbx
    a1d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a1dc:	48 89 c7             	mov    %rax,%rdi
    a1df:	e8 a6 a8 ff ff       	call   4a8a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    a1e4:	48 89 d8             	mov    %rbx,%rax
    a1e7:	48 89 c7             	mov    %rax,%rdi
    a1ea:	e8 71 92 ff ff       	call   3460 <_Unwind_Resume@plt>
    a1ef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a1f3:	c9                   	leave
    a1f4:	c3                   	ret
    a1f5:	90                   	nop

000000000000a1f6 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a1f6:	55                   	push   %rbp
    a1f7:	48 89 e5             	mov    %rsp,%rbp
    a1fa:	48 83 ec 10          	sub    $0x10,%rsp
    a1fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a206:	48 8b 10             	mov    (%rax),%rdx
    a209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a20d:	48 89 d6             	mov    %rdx,%rsi
    a210:	48 89 c7             	mov    %rax,%rdi
    a213:	e8 aa 09 00 00       	call   abc2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    a218:	c9                   	leave
    a219:	c3                   	ret

000000000000a21a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    a21a:	55                   	push   %rbp
    a21b:	48 89 e5             	mov    %rsp,%rbp
    a21e:	48 83 ec 10          	sub    $0x10,%rsp
    a222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a22a:	48 8b 10             	mov    (%rax),%rdx
    a22d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a231:	48 89 d6             	mov    %rdx,%rsi
    a234:	48 89 c7             	mov    %rax,%rdi
    a237:	e8 86 09 00 00       	call   abc2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    a23c:	c9                   	leave
    a23d:	c3                   	ret

000000000000a23e <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    a23e:	55                   	push   %rbp
    a23f:	48 89 e5             	mov    %rsp,%rbp
    a242:	53                   	push   %rbx
    a243:	48 83 ec 18          	sub    $0x18,%rsp
    a247:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a24b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    a24f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a253:	48 89 c7             	mov    %rax,%rdi
    a256:	e8 e1 cb ff ff       	call   6e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    a25b:	48 8b 18             	mov    (%rax),%rbx
    a25e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a262:	48 89 c7             	mov    %rax,%rdi
    a265:	e8 d2 cb ff ff       	call   6e3c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    a26a:	48 8b 00             	mov    (%rax),%rax
    a26d:	48 39 c3             	cmp    %rax,%rbx
    a270:	0f 95 c0             	setne  %al
    a273:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a277:	c9                   	leave
    a278:	c3                   	ret
    a279:	90                   	nop

000000000000a27a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a27a:	55                   	push   %rbp
    a27b:	48 89 e5             	mov    %rsp,%rbp
    a27e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    a282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a286:	48 8b 00             	mov    (%rax),%rax
    a289:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a28d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a291:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    a294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a298:	5d                   	pop    %rbp
    a299:	c3                   	ret

000000000000a29a <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a29a:	55                   	push   %rbp
    a29b:	48 89 e5             	mov    %rsp,%rbp
    a29e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    a2a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a2aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ae:	48 8b 00             	mov    (%rax),%rax
    a2b1:	48 29 c2             	sub    %rax,%rdx
    a2b4:	48 c1 fa 02          	sar    $0x2,%rdx
    a2b8:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    a2bf:	db b6 6d 
    a2c2:	48 0f af c2          	imul   %rdx,%rax
    a2c6:	5d                   	pop    %rbp
    a2c7:	c3                   	ret

000000000000a2c8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
    a2c8:	55                   	push   %rbp
    a2c9:	48 89 e5             	mov    %rsp,%rbp
    a2cc:	48 83 ec 10          	sub    $0x10,%rsp
    a2d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    a2d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d8:	48 89 c7             	mov    %rax,%rdi
    a2db:	e8 d6 ba ff ff       	call   5db6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    a2e0:	c9                   	leave
    a2e1:	c3                   	ret

000000000000a2e2 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
    a2e2:	55                   	push   %rbp
    a2e3:	48 89 e5             	mov    %rsp,%rbp
    a2e6:	48 83 ec 10          	sub    $0x10,%rsp
    a2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
    a2ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f2:	48 89 c7             	mov    %rax,%rdi
    a2f5:	e8 bc ba ff ff       	call   5db6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    a2fa:	84 c0                	test   %al,%al
    a2fc:	74 0e                	je     a30c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
    a2fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a302:	48 89 c7             	mov    %rax,%rdi
    a305:	e8 be ba ff ff       	call   5dc8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    a30a:	eb 05                	jmp    a311 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
    a30c:	e8 6a fa ff ff       	call   9d7b <_ZSt27__throw_bad_optional_accessv>
      }
    a311:	c9                   	leave
    a312:	c3                   	ret
    a313:	90                   	nop

000000000000a314 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    a314:	55                   	push   %rbp
    a315:	48 89 e5             	mov    %rsp,%rbp
    a318:	48 83 ec 20          	sub    $0x20,%rsp
    a31c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a320:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a324:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    a328:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a32c:	48 89 c7             	mov    %rax,%rdi
    a32f:	e8 a0 08 00 00       	call   abd4 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
    a334:	8b 10                	mov    (%rax),%edx
    a336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33a:	89 10                	mov    %edx,(%rax)
    a33c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a340:	48 89 c7             	mov    %rax,%rdi
    a343:	e8 9a 08 00 00       	call   abe2 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
    a348:	48 89 c1             	mov    %rax,%rcx
    a34b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a34f:	48 8b 01             	mov    (%rcx),%rax
    a352:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    a356:	48 89 46 04          	mov    %rax,0x4(%rsi)
    a35a:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
    a35e:	48 8b 41 10          	mov    0x10(%rcx),%rax
    a362:	48 89 46 14          	mov    %rax,0x14(%rsi)
    a366:	90                   	nop
    a367:	c9                   	leave
    a368:	c3                   	ret
    a369:	90                   	nop

000000000000a36a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
    a36a:	55                   	push   %rbp
    a36b:	48 89 e5             	mov    %rsp,%rbp
    a36e:	53                   	push   %rbx
    a36f:	48 83 ec 18          	sub    $0x18,%rsp
    a373:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a377:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
    a37b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a37f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a383:	48 89 c7             	mov    %rax,%rdi
    a386:	e8 65 08 00 00       	call   abf0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    a38b:	48 89 c6             	mov    %rax,%rsi
    a38e:	48 89 df             	mov    %rbx,%rdi
    a391:	e8 8e 08 00 00       	call   ac24 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
    a396:	90                   	nop
    a397:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a39b:	c9                   	leave
    a39c:	c3                   	ret
    a39d:	90                   	nop

000000000000a39e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    a39e:	55                   	push   %rbp
    a39f:	48 89 e5             	mov    %rsp,%rbp
    a3a2:	48 83 ec 20          	sub    $0x20,%rsp
    a3a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    a3aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3b2:	48 89 d6             	mov    %rdx,%rsi
    a3b5:	48 89 c7             	mov    %rax,%rdi
    a3b8:	e8 9b 08 00 00       	call   ac58 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    a3bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c1:	c9                   	leave
    a3c2:	c3                   	ret
    a3c3:	90                   	nop

000000000000a3c4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    a3c4:	55                   	push   %rbp
    a3c5:	48 89 e5             	mov    %rsp,%rbp
    a3c8:	48 83 ec 20          	sub    $0x20,%rsp
    a3cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    a3d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3d4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a3d8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3dc:	48 89 d6             	mov    %rdx,%rsi
    a3df:	48 89 c7             	mov    %rax,%rdi
    a3e2:	e8 71 08 00 00       	call   ac58 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    a3e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3eb:	c9                   	leave
    a3ec:	c3                   	ret

000000000000a3ed <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    a3ed:	55                   	push   %rbp
    a3ee:	48 89 e5             	mov    %rsp,%rbp
    a3f1:	53                   	push   %rbx
    a3f2:	48 83 ec 18          	sub    $0x18,%rsp
    a3f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a3fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    a3fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a402:	48 89 c7             	mov    %rax,%rdi
    a405:	e8 6c 08 00 00       	call   ac76 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    a40a:	48 8b 18             	mov    (%rax),%rbx
    a40d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a411:	48 89 c7             	mov    %rax,%rdi
    a414:	e8 5d 08 00 00       	call   ac76 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    a419:	48 8b 00             	mov    (%rax),%rax
    a41c:	48 39 c3             	cmp    %rax,%rbx
    a41f:	0f 95 c0             	setne  %al
    a422:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a426:	c9                   	leave
    a427:	c3                   	ret

000000000000a428 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a428:	55                   	push   %rbp
    a429:	48 89 e5             	mov    %rsp,%rbp
    a42c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    a430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a434:	48 8b 00             	mov    (%rax),%rax
    a437:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a43b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a43f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    a442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a446:	5d                   	pop    %rbp
    a447:	c3                   	ret

000000000000a448 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    a448:	55                   	push   %rbp
    a449:	48 89 e5             	mov    %rsp,%rbp
    a44c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    a450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a454:	48 8b 00             	mov    (%rax),%rax
    a457:	5d                   	pop    %rbp
    a458:	c3                   	ret
    a459:	90                   	nop

000000000000a45a <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
    a45a:	55                   	push   %rbp
    a45b:	48 89 e5             	mov    %rsp,%rbp
    a45e:	48 83 ec 10          	sub    $0x10,%rsp
    a462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    a466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a46a:	48 89 c7             	mov    %rax,%rdi
    a46d:	e8 1a fb ff ff       	call   9f8c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    a472:	c9                   	leave
    a473:	c3                   	ret

000000000000a474 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
    a474:	55                   	push   %rbp
    a475:	48 89 e5             	mov    %rsp,%rbp
    a478:	48 83 ec 10          	sub    $0x10,%rsp
    a47c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a480:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
    a484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a488:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a48c:	48 89 d6             	mov    %rdx,%rsi
    a48f:	48 89 c7             	mov    %rax,%rdi
    a492:	e8 ed 07 00 00       	call   ac84 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
    a497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a49b:	c9                   	leave
    a49c:	c3                   	ret
    a49d:	90                   	nop

000000000000a49e <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    a49e:	55                   	push   %rbp
    a49f:	48 89 e5             	mov    %rsp,%rbp
    a4a2:	48 83 ec 10          	sub    $0x10,%rsp
    a4a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    a4aa:	e8 01 a2 ff ff       	call   46b0 <_ZSt23__is_constant_evaluatedv>
    a4af:	84 c0                	test   %al,%al
    a4b1:	74 1a                	je     a4cd <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    a4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b7:	48 89 c7             	mov    %rax,%rdi
    a4ba:	e8 cd fa ff ff       	call   9f8c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    a4bf:	83 f0 01             	xor    $0x1,%eax
    a4c2:	84 c0                	test   %al,%al
    a4c4:	74 07                	je     a4cd <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    a4c6:	b8 01 00 00 00       	mov    $0x1,%eax
    a4cb:	eb 05                	jmp    a4d2 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
    a4cd:	b8 00 00 00 00       	mov    $0x0,%eax
    a4d2:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    a4d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d8:	48 89 c7             	mov    %rax,%rdi
    a4db:	e8 36 08 00 00       	call   ad16 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
    a4e0:	c9                   	leave
    a4e1:	c3                   	ret

000000000000a4e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    a4e2:	55                   	push   %rbp
    a4e3:	48 89 e5             	mov    %rsp,%rbp
    a4e6:	48 83 ec 10          	sub    $0x10,%rsp
    a4ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    a4ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f2:	48 89 c7             	mov    %rax,%rdi
    a4f5:	e8 2a 08 00 00       	call   ad24 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    a4fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4fe:	48 89 c7             	mov    %rax,%rdi
    a501:	e8 3a 08 00 00       	call   ad40 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    a506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a50a:	48 83 c0 08          	add    $0x8,%rax
    a50e:	48 89 c7             	mov    %rax,%rdi
    a511:	e8 0a f9 ff ff       	call   9e20 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    a516:	90                   	nop
    a517:	c9                   	leave
    a518:	c3                   	ret
    a519:	90                   	nop

000000000000a51a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a51a:	55                   	push   %rbp
    a51b:	48 89 e5             	mov    %rsp,%rbp
    a51e:	48 83 ec 10          	sub    $0x10,%rsp
    a522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a52a:	48 89 c7             	mov    %rax,%rdi
    a52d:	e8 1a 08 00 00       	call   ad4c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    a532:	90                   	nop
    a533:	c9                   	leave
    a534:	c3                   	ret
    a535:	90                   	nop

000000000000a536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    a536:	55                   	push   %rbp
    a537:	48 89 e5             	mov    %rsp,%rbp
    a53a:	48 83 ec 10          	sub    $0x10,%rsp
    a53e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    a542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a546:	48 89 c7             	mov    %rax,%rdi
    a549:	e8 70 08 00 00       	call   adbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    a54e:	48 89 c2             	mov    %rax,%rdx
    a551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a555:	48 89 d6             	mov    %rdx,%rsi
    a558:	48 89 c7             	mov    %rax,%rdi
    a55b:	e8 f8 07 00 00       	call   ad58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    a560:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a564:	48 89 c7             	mov    %rax,%rdi
    a567:	e8 32 fa ff ff       	call   9f9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    a56c:	90                   	nop
    a56d:	c9                   	leave
    a56e:	c3                   	ret
    a56f:	90                   	nop

000000000000a570 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    a570:	55                   	push   %rbp
    a571:	48 89 e5             	mov    %rsp,%rbp
    a574:	48 83 ec 20          	sub    $0x20,%rsp
    a578:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    a57c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a580:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a584:	48 89 d6             	mov    %rdx,%rsi
    a587:	48 89 c7             	mov    %rax,%rdi
    a58a:	e8 49 08 00 00       	call   add8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    a58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a593:	c9                   	leave
    a594:	c3                   	ret
    a595:	90                   	nop

000000000000a596 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    a596:	55                   	push   %rbp
    a597:	48 89 e5             	mov    %rsp,%rbp
    a59a:	48 83 ec 20          	sub    $0x20,%rsp
    a59e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    a5a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5a6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a5aa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a5ae:	48 89 d6             	mov    %rdx,%rsi
    a5b1:	48 89 c7             	mov    %rax,%rdi
    a5b4:	e8 1f 08 00 00       	call   add8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    a5b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5bd:	c9                   	leave
    a5be:	c3                   	ret

000000000000a5bf <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    a5bf:	55                   	push   %rbp
    a5c0:	48 89 e5             	mov    %rsp,%rbp
    a5c3:	53                   	push   %rbx
    a5c4:	48 83 ec 18          	sub    $0x18,%rsp
    a5c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a5cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    a5d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5d4:	48 89 c7             	mov    %rax,%rdi
    a5d7:	e8 1a 08 00 00       	call   adf6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    a5dc:	48 8b 18             	mov    (%rax),%rbx
    a5df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a5e3:	48 89 c7             	mov    %rax,%rdi
    a5e6:	e8 0b 08 00 00       	call   adf6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    a5eb:	48 8b 00             	mov    (%rax),%rax
    a5ee:	48 39 c3             	cmp    %rax,%rbx
    a5f1:	0f 95 c0             	setne  %al
    a5f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a5f8:	c9                   	leave
    a5f9:	c3                   	ret

000000000000a5fa <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a5fa:	55                   	push   %rbp
    a5fb:	48 89 e5             	mov    %rsp,%rbp
    a5fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    a602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a606:	48 8b 00             	mov    (%rax),%rax
    a609:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    a610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a614:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    a617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a61b:	5d                   	pop    %rbp
    a61c:	c3                   	ret
    a61d:	90                   	nop

000000000000a61e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    a61e:	55                   	push   %rbp
    a61f:	48 89 e5             	mov    %rsp,%rbp
    a622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    a626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a62a:	48 8b 00             	mov    (%rax),%rax
    a62d:	5d                   	pop    %rbp
    a62e:	c3                   	ret
    a62f:	90                   	nop

000000000000a630 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    a630:	55                   	push   %rbp
    a631:	48 89 e5             	mov    %rsp,%rbp
    a634:	53                   	push   %rbx
    a635:	48 83 ec 48          	sub    $0x48,%rsp
    a639:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    a63d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    a641:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    a645:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a649:	48 89 d6             	mov    %rdx,%rsi
    a64c:	48 89 c7             	mov    %rax,%rdi
    a64f:	e8 b0 07 00 00       	call   ae04 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    a654:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    a658:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a65c:	48 89 c7             	mov    %rax,%rdi
    a65f:	e8 c6 07 00 00       	call   ae2a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    a664:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    a668:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    a66c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    a670:	48 89 d6             	mov    %rdx,%rsi
    a673:	48 89 c7             	mov    %rax,%rdi
    a676:	e8 c9 07 00 00       	call   ae44 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    a67b:	84 c0                	test   %al,%al
    a67d:	75 32                	jne    a6b1 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    a67f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a683:	48 89 c7             	mov    %rax,%rdi
    a686:	e8 db 07 00 00       	call   ae66 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    a68b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    a68f:	48 89 c7             	mov    %rax,%rdi
    a692:	e8 eb 07 00 00       	call   ae82 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    a697:	48 89 c2             	mov    %rax,%rdx
    a69a:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    a69e:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    a6a2:	48 89 ce             	mov    %rcx,%rsi
    a6a5:	48 89 c7             	mov    %rax,%rdi
    a6a8:	e8 f3 07 00 00       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    a6ad:	84 c0                	test   %al,%al
    a6af:	74 07                	je     a6b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    a6b1:	b8 01 00 00 00       	mov    $0x1,%eax
    a6b6:	eb 05                	jmp    a6bd <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    a6b8:	b8 00 00 00 00       	mov    $0x0,%eax
    a6bd:	84 c0                	test   %al,%al
    a6bf:	74 5d                	je     a71e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    a6c1:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    a6c5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a6c9:	48 89 c7             	mov    %rax,%rdi
    a6cc:	e8 94 03 00 00       	call   aa65 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    a6d1:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    a6d4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a6d8:	48 89 d6             	mov    %rdx,%rsi
    a6db:	48 89 c7             	mov    %rax,%rdi
    a6de:	e8 e6 07 00 00       	call   aec9 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    a6e3:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    a6e7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    a6eb:	48 89 d6             	mov    %rdx,%rsi
    a6ee:	48 89 c7             	mov    %rax,%rdi
    a6f1:	e8 08 08 00 00       	call   aefe <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    a6f6:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    a6fa:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    a6fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a702:	49 89 c8             	mov    %rcx,%r8
    a705:	48 89 d1             	mov    %rdx,%rcx
    a708:	48 8d 15 69 55 00 00 	lea    0x5569(%rip),%rdx        # fc78 <_ZSt19piecewise_construct>
    a70f:	48 89 c6             	mov    %rax,%rsi
    a712:	48 89 df             	mov    %rbx,%rdi
    a715:	e8 02 08 00 00       	call   af1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    a71a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    a71e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    a722:	48 89 c7             	mov    %rax,%rdi
    a725:	e8 58 07 00 00       	call   ae82 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    a72a:	48 83 c0 20          	add    $0x20,%rax
      }
    a72e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a732:	c9                   	leave
    a733:	c3                   	ret

000000000000a734 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    a734:	55                   	push   %rbp
    a735:	48 89 e5             	mov    %rsp,%rbp
    a738:	48 83 ec 10          	sub    $0x10,%rsp
    a73c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    a740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a744:	48 89 c7             	mov    %rax,%rdi
    a747:	e8 cc 08 00 00       	call   b018 <_ZNSaIP9VkImage_TEC1Ev>
    a74c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a750:	48 89 c7             	mov    %rax,%rdi
    a753:	e8 dc 08 00 00       	call   b034 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a758:	90                   	nop
    a759:	c9                   	leave
    a75a:	c3                   	ret
    a75b:	90                   	nop

000000000000a75c <_ZNSaIP9VkImage_TED1Ev>:
    a75c:	55                   	push   %rbp
    a75d:	48 89 e5             	mov    %rsp,%rbp
    a760:	48 83 ec 10          	sub    $0x10,%rsp
    a764:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a768:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a76c:	48 89 c7             	mov    %rax,%rdi
    a76f:	e8 ee 08 00 00       	call   b062 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    a774:	90                   	nop
    a775:	c9                   	leave
    a776:	c3                   	ret
    a777:	90                   	nop

000000000000a778 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a778:	55                   	push   %rbp
    a779:	48 89 e5             	mov    %rsp,%rbp
    a77c:	48 83 ec 10          	sub    $0x10,%rsp
    a780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a788:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a78c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a790:	48 8b 00             	mov    (%rax),%rax
    a793:	48 29 c2             	sub    %rax,%rdx
    a796:	48 89 d0             	mov    %rdx,%rax
    a799:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    a79d:	48 89 c2             	mov    %rax,%rdx
    a7a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a4:	48 8b 08             	mov    (%rax),%rcx
    a7a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ab:	48 89 ce             	mov    %rcx,%rsi
    a7ae:	48 89 c7             	mov    %rax,%rdi
    a7b1:	e8 b8 08 00 00       	call   b06e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    a7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ba:	48 89 c7             	mov    %rax,%rdi
    a7bd:	e8 4c f8 ff ff       	call   a00e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    a7c2:	90                   	nop
    a7c3:	c9                   	leave
    a7c4:	c3                   	ret
    a7c5:	90                   	nop

000000000000a7c6 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a7c6:	55                   	push   %rbp
    a7c7:	48 89 e5             	mov    %rsp,%rbp
    a7ca:	48 83 ec 10          	sub    $0x10,%rsp
    a7ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a7d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d6:	48 89 c7             	mov    %rax,%rdi
    a7d9:	e8 c6 08 00 00       	call   b0a4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a7de:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a7e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a7e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ed:	48 8b 00             	mov    (%rax),%rax
    a7f0:	48 89 ce             	mov    %rcx,%rsi
    a7f3:	48 89 c7             	mov    %rax,%rdi
    a7f6:	e8 b7 08 00 00       	call   b0b2 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    a7fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ff:	48 89 c7             	mov    %rax,%rdi
    a802:	e8 71 ff ff ff       	call   a778 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    a807:	90                   	nop
    a808:	c9                   	leave
    a809:	c3                   	ret

000000000000a80a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
    a80a:	55                   	push   %rbp
    a80b:	48 89 e5             	mov    %rsp,%rbp
    a80e:	53                   	push   %rbx
    a80f:	48 83 ec 18          	sub    $0x18,%rsp
    a813:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a817:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a81b:	48 89 c7             	mov    %rax,%rdi
    a81e:	e8 b9 08 00 00       	call   b0dc <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    a823:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a827:	48 83 c0 08          	add    $0x8,%rax
    a82b:	48 89 c7             	mov    %rax,%rdi
    a82e:	e8 8d 8b ff ff       	call   33c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
    a833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a837:	48 83 c0 08          	add    $0x8,%rax
    a83b:	48 8d 15 f0 53 00 00 	lea    0x53f0(%rip),%rdx        # fc32 <_ZN6__pstl9execution2v1L5unseqE+0x9f>
    a842:	48 89 d6             	mov    %rdx,%rsi
    a845:	48 89 c7             	mov    %rax,%rdi
    a848:	e8 53 8b ff ff       	call   33a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
    a84d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a851:	e8 2a 8b ff ff       	call   3380 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    a856:	48 89 03             	mov    %rax,(%rbx)
  }
    a859:	eb 1e                	jmp    a879 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    a85b:	48 89 c3             	mov    %rax,%rbx
    a85e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a862:	48 83 c0 08          	add    $0x8,%rax
    a866:	48 89 c7             	mov    %rax,%rdi
    a869:	e8 c2 88 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a86e:	48 89 d8             	mov    %rbx,%rax
    a871:	48 89 c7             	mov    %rax,%rdi
    a874:	e8 e7 8b ff ff       	call   3460 <_Unwind_Resume@plt>
    a879:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a87d:	c9                   	leave
    a87e:	c3                   	ret
    a87f:	90                   	nop

000000000000a880 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
    a880:	55                   	push   %rbp
    a881:	48 89 e5             	mov    %rsp,%rbp
    a884:	48 83 ec 20          	sub    $0x20,%rsp
    a888:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    a88c:	e8 ef 8a ff ff       	call   3380 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    a891:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
    a895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a899:	48 83 c0 08          	add    $0x8,%rax
    a89d:	48 89 c7             	mov    %rax,%rdi
    a8a0:	e8 8b 88 ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a8a5:	90                   	nop
    a8a6:	c9                   	leave
    a8a7:	c3                   	ret

000000000000a8a8 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    a8a8:	55                   	push   %rbp
    a8a9:	48 89 e5             	mov    %rsp,%rbp
    a8ac:	48 83 ec 20          	sub    $0x20,%rsp
    a8b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a8b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    a8b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a8bc:	48 89 c7             	mov    %rax,%rdi
    a8bf:	e8 38 08 00 00       	call   b0fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    a8c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a8c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8cc:	48 89 c7             	mov    %rax,%rdi
    a8cf:	e8 28 08 00 00       	call   b0fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    a8d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a8d8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a8dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a8e0:	48 89 d6             	mov    %rdx,%rsi
    a8e3:	48 89 c7             	mov    %rax,%rdi
    a8e6:	e8 22 08 00 00       	call   b10d <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    a8eb:	c9                   	leave
    a8ec:	c3                   	ret

000000000000a8ed <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    a8ed:	55                   	push   %rbp
    a8ee:	48 89 e5             	mov    %rsp,%rbp
    a8f1:	48 83 ec 10          	sub    $0x10,%rsp
    a8f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    a8f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8fd:	48 89 c7             	mov    %rax,%rdi
    a900:	e8 71 08 00 00       	call   b176 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    a905:	c9                   	leave
    a906:	c3                   	ret
    a907:	90                   	nop

000000000000a908 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    a908:	55                   	push   %rbp
    a909:	48 89 e5             	mov    %rsp,%rbp
    a90c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    a910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a914:	48 8b 00             	mov    (%rax),%rax
    a917:	5d                   	pop    %rbp
    a918:	c3                   	ret
    a919:	90                   	nop

000000000000a91a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    a91a:	55                   	push   %rbp
    a91b:	48 89 e5             	mov    %rsp,%rbp
    a91e:	53                   	push   %rbx
    a91f:	48 83 ec 18          	sub    $0x18,%rsp
    a923:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a927:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a92b:	e8 50 8a ff ff       	call   3380 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    a930:	48 89 03             	mov    %rax,(%rbx)
    a933:	90                   	nop
    a934:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a938:	c9                   	leave
    a939:	c3                   	ret

000000000000a93a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    a93a:	55                   	push   %rbp
    a93b:	48 89 e5             	mov    %rsp,%rbp
    a93e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a942:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a94a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a94e:	48 89 10             	mov    %rdx,(%rax)
    a951:	90                   	nop
    a952:	5d                   	pop    %rbp
    a953:	c3                   	ret

000000000000a954 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    a954:	55                   	push   %rbp
    a955:	48 89 e5             	mov    %rsp,%rbp
    a958:	48 83 ec 10          	sub    $0x10,%rsp
    a95c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a964:	48 8b 00             	mov    (%rax),%rax
    a967:	48 85 c0             	test   %rax,%rax
    a96a:	74 0f                	je     a97b <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    a96c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a970:	48 8b 00             	mov    (%rax),%rax
    a973:	48 89 c7             	mov    %rax,%rdi
    a976:	e8 e5 89 ff ff       	call   3360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    a97b:	90                   	nop
    a97c:	c9                   	leave
    a97d:	c3                   	ret

000000000000a97e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    a97e:	55                   	push   %rbp
    a97f:	48 89 e5             	mov    %rsp,%rbp
    a982:	48 83 ec 40          	sub    $0x40,%rsp
    a986:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a98a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a98e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    a992:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a996:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a99a:	48 89 d6             	mov    %rdx,%rsi
    a99d:	48 89 c7             	mov    %rax,%rdi
    a9a0:	e8 2a 08 00 00       	call   b1cf <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    a9a5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    a9a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a9ad:	48 83 f8 0f          	cmp    $0xf,%rax
    a9b1:	76 3f                	jbe    a9f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    a9b3:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    a9b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a9bb:	ba 00 00 00 00       	mov    $0x0,%edx
    a9c0:	48 89 ce             	mov    %rcx,%rsi
    a9c3:	48 89 c7             	mov    %rax,%rdi
    a9c6:	e8 b5 8a ff ff       	call   3480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a9cb:	48 89 c2             	mov    %rax,%rdx
    a9ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a9d2:	48 89 d6             	mov    %rdx,%rsi
    a9d5:	48 89 c7             	mov    %rax,%rdi
    a9d8:	e8 03 88 ff ff       	call   31e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    a9dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a9e5:	48 89 d6             	mov    %rdx,%rsi
    a9e8:	48 89 c7             	mov    %rax,%rdi
    a9eb:	e8 d0 8a ff ff       	call   34c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    a9f0:	eb 15                	jmp    aa07 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    a9f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a9f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    a9fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9fe:	48 89 c7             	mov    %rax,%rdi
    aa01:	e8 aa 87 ff ff       	call   31b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    aa06:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    aa07:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    aa0b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    aa0f:	48 89 d6             	mov    %rdx,%rsi
    aa12:	48 89 c7             	mov    %rax,%rdi
    aa15:	e8 20 ff ff ff       	call   a93a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    aa1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aa1e:	48 89 c7             	mov    %rax,%rdi
    aa21:	e8 ca 88 ff ff       	call   32f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    aa26:	48 89 c1             	mov    %rax,%rcx
    aa29:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    aa2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    aa31:	48 89 c6             	mov    %rax,%rsi
    aa34:	48 89 cf             	mov    %rcx,%rdi
    aa37:	e8 c4 88 ff ff       	call   3300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    aa3c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    aa43:	00 

	_M_set_length(__dnew);
    aa44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aa4c:	48 89 d6             	mov    %rdx,%rsi
    aa4f:	48 89 c7             	mov    %rax,%rdi
    aa52:	e8 e9 86 ff ff       	call   3140 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    aa57:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    aa5b:	48 89 c7             	mov    %rax,%rdi
    aa5e:	e8 f1 fe ff ff       	call   a954 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    aa63:	c9                   	leave
    aa64:	c3                   	ret

000000000000aa65 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    aa65:	55                   	push   %rbp
    aa66:	48 89 e5             	mov    %rsp,%rbp
    aa69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    aa6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa71:	5d                   	pop    %rbp
    aa72:	c3                   	ret
    aa73:	90                   	nop

000000000000aa74 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    aa74:	55                   	push   %rbp
    aa75:	48 89 e5             	mov    %rsp,%rbp
    aa78:	48 83 ec 10          	sub    $0x10,%rsp
    aa7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    aa84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa8c:	48 89 d6             	mov    %rdx,%rsi
    aa8f:	48 89 c7             	mov    %rax,%rdi
    aa92:	e8 8d b6 ff ff       	call   6124 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    aa97:	90                   	nop
    aa98:	c9                   	leave
    aa99:	c3                   	ret

000000000000aa9a <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    aa9a:	55                   	push   %rbp
    aa9b:	48 89 e5             	mov    %rsp,%rbp
    aa9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaa6:	48 8b 00             	mov    (%rax),%rax
    aaa9:	5d                   	pop    %rbp
    aaaa:	c3                   	ret
    aaab:	90                   	nop

000000000000aaac <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    aaac:	55                   	push   %rbp
    aaad:	48 89 e5             	mov    %rsp,%rbp
    aab0:	53                   	push   %rbx
    aab1:	48 83 ec 18          	sub    $0x18,%rsp
    aab5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aabd:	48 89 c7             	mov    %rax,%rdi
    aac0:	e8 d5 ff ff ff       	call   aa9a <_ZNKSt16initializer_listIPKcE5beginEv>
    aac5:	48 89 c3             	mov    %rax,%rbx
    aac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aacc:	48 89 c7             	mov    %rax,%rdi
    aacf:	e8 2c 07 00 00       	call   b200 <_ZNKSt16initializer_listIPKcE4sizeEv>
    aad4:	48 c1 e0 03          	shl    $0x3,%rax
    aad8:	48 01 d8             	add    %rbx,%rax
    aadb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aadf:	c9                   	leave
    aae0:	c3                   	ret

000000000000aae1 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    aae1:	55                   	push   %rbp
    aae2:	48 89 e5             	mov    %rsp,%rbp
    aae5:	48 83 ec 10          	sub    $0x10,%rsp
    aae9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    aaf1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    aaf5:	48 89 c7             	mov    %rax,%rdi
    aaf8:	e8 15 07 00 00       	call   b212 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    aafd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab05:	48 89 d6             	mov    %rdx,%rsi
    ab08:	48 89 c7             	mov    %rax,%rdi
    ab0b:	e8 0d 07 00 00       	call   b21d <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    ab10:	c9                   	leave
    ab11:	c3                   	ret

000000000000ab12 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    ab12:	55                   	push   %rbp
    ab13:	48 89 e5             	mov    %rsp,%rbp
    ab16:	53                   	push   %rbx
    ab17:	48 83 ec 38          	sub    $0x38,%rsp
    ab1b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ab1f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ab23:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    ab27:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ab2b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ab2f:	48 89 d6             	mov    %rdx,%rsi
    ab32:	48 89 c7             	mov    %rax,%rdi
    ab35:	e8 a7 ff ff ff       	call   aae1 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    ab3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    ab3e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    ab42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab46:	48 89 c7             	mov    %rax,%rdi
    ab49:	e8 74 aa ff ff       	call   55c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ab4e:	48 89 c2             	mov    %rax,%rdx
    ab51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab55:	48 89 d6             	mov    %rdx,%rsi
    ab58:	48 89 c7             	mov    %rax,%rdi
    ab5b:	e8 63 a9 ff ff       	call   54c3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    ab60:	48 89 c6             	mov    %rax,%rsi
    ab63:	48 89 df             	mov    %rbx,%rdi
    ab66:	e8 a3 c0 ff ff       	call   6c0e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    ab6b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ab6f:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ab72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab76:	48 8b 00             	mov    (%rax),%rax
    ab79:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab7d:	48 c1 e2 03          	shl    $0x3,%rdx
    ab81:	48 01 c2             	add    %rax,%rdx
    ab84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab88:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    ab8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab90:	48 89 c7             	mov    %rax,%rdi
    ab93:	e8 2a aa ff ff       	call   55c2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ab98:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    ab9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab9f:	48 8b 10             	mov    (%rax),%rdx
    aba2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    aba6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    abaa:	48 89 c7             	mov    %rax,%rdi
    abad:	e8 85 06 00 00       	call   b237 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    abb2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    abb6:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    abba:	90                   	nop
    abbb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    abbf:	c9                   	leave
    abc0:	c3                   	ret
    abc1:	90                   	nop

000000000000abc2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    abc2:	55                   	push   %rbp
    abc3:	48 89 e5             	mov    %rsp,%rbp
    abc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    abce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    abd2:	5d                   	pop    %rbp
    abd3:	c3                   	ret

000000000000abd4 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    abd4:	55                   	push   %rbp
    abd5:	48 89 e5             	mov    %rsp,%rbp
    abd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    abdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abe0:	5d                   	pop    %rbp
    abe1:	c3                   	ret

000000000000abe2 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    abe2:	55                   	push   %rbp
    abe3:	48 89 e5             	mov    %rsp,%rbp
    abe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    abea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abee:	5d                   	pop    %rbp
    abef:	c3                   	ret

000000000000abf0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    abf0:	55                   	push   %rbp
    abf1:	48 89 e5             	mov    %rsp,%rbp
    abf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    abf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfc:	5d                   	pop    %rbp
    abfd:	c3                   	ret

000000000000abfe <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
    abfe:	55                   	push   %rbp
    abff:	48 89 e5             	mov    %rsp,%rbp
    ac02:	48 83 ec 20          	sub    $0x20,%rsp
    ac06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac0a:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    ac0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac16:	48 89 d6             	mov    %rdx,%rsi
    ac19:	48 89 c7             	mov    %rax,%rdi
    ac1c:	e8 47 06 00 00       	call   b268 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
    ac21:	90                   	nop
    ac22:	c9                   	leave
    ac23:	c3                   	ret

000000000000ac24 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
    ac24:	55                   	push   %rbp
    ac25:	48 89 e5             	mov    %rsp,%rbp
    ac28:	53                   	push   %rbx
    ac29:	48 83 ec 18          	sub    $0x18,%rsp
    ac2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
    ac35:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ac39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac3d:	48 89 c7             	mov    %rax,%rdi
    ac40:	e8 ab ff ff ff       	call   abf0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    ac45:	48 89 c6             	mov    %rax,%rsi
    ac48:	48 89 df             	mov    %rbx,%rdi
    ac4b:	e8 ae ff ff ff       	call   abfe <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
    ac50:	90                   	nop
    ac51:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac55:	c9                   	leave
    ac56:	c3                   	ret
    ac57:	90                   	nop

000000000000ac58 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ac58:	55                   	push   %rbp
    ac59:	48 89 e5             	mov    %rsp,%rbp
    ac5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ac64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac68:	48 8b 10             	mov    (%rax),%rdx
    ac6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac6f:	48 89 10             	mov    %rdx,(%rax)
    ac72:	90                   	nop
    ac73:	5d                   	pop    %rbp
    ac74:	c3                   	ret
    ac75:	90                   	nop

000000000000ac76 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ac76:	55                   	push   %rbp
    ac77:	48 89 e5             	mov    %rsp,%rbp
    ac7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ac7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac82:	5d                   	pop    %rbp
    ac83:	c3                   	ret

000000000000ac84 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
    ac84:	55                   	push   %rbp
    ac85:	48 89 e5             	mov    %rsp,%rbp
    ac88:	53                   	push   %rbx
    ac89:	48 83 ec 18          	sub    $0x18,%rsp
    ac8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
    ac95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac99:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    ac9d:	84 c0                	test   %al,%al
    ac9f:	74 35                	je     acd6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
    aca1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aca5:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    aca9:	84 c0                	test   %al,%al
    acab:	74 29                	je     acd6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
    acad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    acb1:	48 89 c7             	mov    %rax,%rdi
    acb4:	e8 eb 05 00 00       	call   b2a4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    acb9:	48 89 c3             	mov    %rax,%rbx
    acbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acc0:	48 89 c7             	mov    %rax,%rdi
    acc3:	e8 4e 00 00 00       	call   ad16 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    acc8:	48 89 de             	mov    %rbx,%rsi
    accb:	48 89 c7             	mov    %rax,%rdi
    acce:	e8 df 05 00 00       	call   b2b2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
    acd3:	90                   	nop
      }
    acd4:	eb 38                	jmp    ad0e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
    acd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    acda:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    acde:	84 c0                	test   %al,%al
    ace0:	74 20                	je     ad02 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
    ace2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ace6:	48 89 c7             	mov    %rax,%rdi
    ace9:	e8 b6 05 00 00       	call   b2a4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    acee:	48 89 c2             	mov    %rax,%rdx
    acf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acf5:	48 89 d6             	mov    %rdx,%rsi
    acf8:	48 89 c7             	mov    %rax,%rdi
    acfb:	e8 f0 05 00 00       	call   b2f0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
    ad00:	eb 0c                	jmp    ad0e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
    ad02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad06:	48 89 c7             	mov    %rax,%rdi
    ad09:	e8 28 06 00 00       	call   b336 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
    ad0e:	90                   	nop
    ad0f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad13:	c9                   	leave
    ad14:	c3                   	ret
    ad15:	90                   	nop

000000000000ad16 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
    ad16:	55                   	push   %rbp
    ad17:	48 89 e5             	mov    %rsp,%rbp
    ad1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    ad1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad22:	5d                   	pop    %rbp
    ad23:	c3                   	ret

000000000000ad24 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ad24:	55                   	push   %rbp
    ad25:	48 89 e5             	mov    %rsp,%rbp
    ad28:	48 83 ec 10          	sub    $0x10,%rsp
    ad2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad34:	48 89 c7             	mov    %rax,%rdi
    ad37:	e8 22 06 00 00       	call   b35e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    ad3c:	90                   	nop
    ad3d:	c9                   	leave
    ad3e:	c3                   	ret
    ad3f:	90                   	nop

000000000000ad40 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    ad40:	55                   	push   %rbp
    ad41:	48 89 e5             	mov    %rsp,%rbp
    ad44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    ad48:	90                   	nop
    ad49:	5d                   	pop    %rbp
    ad4a:	c3                   	ret
    ad4b:	90                   	nop

000000000000ad4c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ad4c:	55                   	push   %rbp
    ad4d:	48 89 e5             	mov    %rsp,%rbp
    ad50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad54:	90                   	nop
    ad55:	5d                   	pop    %rbp
    ad56:	c3                   	ret
    ad57:	90                   	nop

000000000000ad58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    ad58:	55                   	push   %rbp
    ad59:	48 89 e5             	mov    %rsp,%rbp
    ad5c:	48 83 ec 20          	sub    $0x20,%rsp
    ad60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad64:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    ad68:	eb 49                	jmp    adb3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    ad6a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad6e:	48 89 c7             	mov    %rax,%rdi
    ad71:	e8 f3 05 00 00       	call   b369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    ad76:	48 89 c2             	mov    %rax,%rdx
    ad79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad7d:	48 89 d6             	mov    %rdx,%rsi
    ad80:	48 89 c7             	mov    %rax,%rdi
    ad83:	e8 d0 ff ff ff       	call   ad58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    ad88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad8c:	48 89 c7             	mov    %rax,%rdi
    ad8f:	e8 e7 05 00 00       	call   b37b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    ad94:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    ad98:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ada0:	48 89 d6             	mov    %rdx,%rsi
    ada3:	48 89 c7             	mov    %rax,%rdi
    ada6:	e8 e3 05 00 00       	call   b38e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    adab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adaf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    adb3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    adb8:	75 b0                	jne    ad6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    adba:	90                   	nop
    adbb:	90                   	nop
    adbc:	c9                   	leave
    adbd:	c3                   	ret

000000000000adbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    adbe:	55                   	push   %rbp
    adbf:	48 89 e5             	mov    %rsp,%rbp
    adc2:	48 83 ec 10          	sub    $0x10,%rsp
    adc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    adca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adce:	48 89 c7             	mov    %rax,%rdi
    add1:	e8 f2 05 00 00       	call   b3c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    add6:	c9                   	leave
    add7:	c3                   	ret

000000000000add8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    add8:	55                   	push   %rbp
    add9:	48 89 e5             	mov    %rsp,%rbp
    addc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ade0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ade4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ade8:	48 8b 10             	mov    (%rax),%rdx
    adeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adef:	48 89 10             	mov    %rdx,(%rax)
    adf2:	90                   	nop
    adf3:	5d                   	pop    %rbp
    adf4:	c3                   	ret
    adf5:	90                   	nop

000000000000adf6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    adf6:	55                   	push   %rbp
    adf7:	48 89 e5             	mov    %rsp,%rbp
    adfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    adfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae02:	5d                   	pop    %rbp
    ae03:	c3                   	ret

000000000000ae04 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    ae04:	55                   	push   %rbp
    ae05:	48 89 e5             	mov    %rsp,%rbp
    ae08:	48 83 ec 10          	sub    $0x10,%rsp
    ae0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    ae14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae1c:	48 89 d6             	mov    %rdx,%rsi
    ae1f:	48 89 c7             	mov    %rax,%rdi
    ae22:	e8 b3 05 00 00       	call   b3da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    ae27:	c9                   	leave
    ae28:	c3                   	ret
    ae29:	90                   	nop

000000000000ae2a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ae2a:	55                   	push   %rbp
    ae2b:	48 89 e5             	mov    %rsp,%rbp
    ae2e:	48 83 ec 10          	sub    $0x10,%rsp
    ae32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    ae36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3a:	48 89 c7             	mov    %rax,%rdi
    ae3d:	e8 e4 05 00 00       	call   b426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    ae42:	c9                   	leave
    ae43:	c3                   	ret

000000000000ae44 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    ae44:	55                   	push   %rbp
    ae45:	48 89 e5             	mov    %rsp,%rbp
    ae48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    ae50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae54:	48 8b 10             	mov    (%rax),%rdx
    ae57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae5b:	48 8b 00             	mov    (%rax),%rax
    ae5e:	48 39 c2             	cmp    %rax,%rdx
    ae61:	0f 94 c0             	sete   %al
    ae64:	5d                   	pop    %rbp
    ae65:	c3                   	ret

000000000000ae66 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    ae66:	55                   	push   %rbp
    ae67:	48 89 e5             	mov    %rsp,%rbp
    ae6a:	48 83 ec 10          	sub    $0x10,%rsp
    ae6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    ae72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae76:	48 89 c7             	mov    %rax,%rdi
    ae79:	e8 d2 05 00 00       	call   b450 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    ae7e:	90                   	nop
    ae7f:	c9                   	leave
    ae80:	c3                   	ret
    ae81:	90                   	nop

000000000000ae82 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ae82:	55                   	push   %rbp
    ae83:	48 89 e5             	mov    %rsp,%rbp
    ae86:	48 83 ec 10          	sub    $0x10,%rsp
    ae8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    ae8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae92:	48 8b 00             	mov    (%rax),%rax
    ae95:	48 89 c7             	mov    %rax,%rdi
    ae98:	e8 bf 05 00 00       	call   b45c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    ae9d:	c9                   	leave
    ae9e:	c3                   	ret
    ae9f:	90                   	nop

000000000000aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    aea0:	55                   	push   %rbp
    aea1:	48 89 e5             	mov    %rsp,%rbp
    aea4:	48 83 ec 20          	sub    $0x20,%rsp
    aea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aeb0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    aeb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aeb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aebc:	48 89 d6             	mov    %rdx,%rsi
    aebf:	48 89 c7             	mov    %rax,%rdi
    aec2:	e8 b3 05 00 00       	call   b47a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    aec7:	c9                   	leave
    aec8:	c3                   	ret

000000000000aec9 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    aec9:	55                   	push   %rbp
    aeca:	48 89 e5             	mov    %rsp,%rbp
    aecd:	48 83 ec 10          	sub    $0x10,%rsp
    aed1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    aed9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aedd:	48 89 c7             	mov    %rax,%rdi
    aee0:	e8 bd 05 00 00       	call   b4a2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    aee5:	48 89 c2             	mov    %rax,%rdx
    aee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeec:	48 89 d6             	mov    %rdx,%rsi
    aeef:	48 89 c7             	mov    %rax,%rdi
    aef2:	e8 b9 05 00 00       	call   b4b0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    aef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aefb:	c9                   	leave
    aefc:	c3                   	ret
    aefd:	90                   	nop

000000000000aefe <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    aefe:	55                   	push   %rbp
    aeff:	48 89 e5             	mov    %rsp,%rbp
    af02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    af0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af0e:	48 8b 10             	mov    (%rax),%rdx
    af11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af15:	48 89 10             	mov    %rdx,(%rax)
    af18:	90                   	nop
    af19:	5d                   	pop    %rbp
    af1a:	c3                   	ret
    af1b:	90                   	nop

000000000000af1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    af1c:	55                   	push   %rbp
    af1d:	48 89 e5             	mov    %rsp,%rbp
    af20:	41 54                	push   %r12
    af22:	53                   	push   %rbx
    af23:	48 83 ec 60          	sub    $0x60,%rsp
    af27:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    af2b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    af2f:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    af33:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    af37:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    af3b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    af3f:	48 89 c7             	mov    %rax,%rdi
    af42:	e8 b8 05 00 00       	call   b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    af47:	49 89 c4             	mov    %rax,%r12
    af4a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    af4e:	48 89 c7             	mov    %rax,%rdi
    af51:	e8 9b 05 00 00       	call   b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    af56:	48 89 c3             	mov    %rax,%rbx
    af59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    af5d:	48 89 c7             	mov    %rax,%rdi
    af60:	e8 7e 05 00 00       	call   b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    af65:	48 89 c2             	mov    %rax,%rdx
    af68:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    af6c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    af70:	4d 89 e0             	mov    %r12,%r8
    af73:	48 89 d9             	mov    %rbx,%rcx
    af76:	48 89 c7             	mov    %rax,%rdi
    af79:	e8 90 05 00 00       	call   b50e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    af7e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    af82:	48 89 c7             	mov    %rax,%rdi
    af85:	e8 84 0a 00 00       	call   ba0e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    af8a:	48 89 c2             	mov    %rax,%rdx
    af8d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    af91:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    af95:	48 89 ce             	mov    %rcx,%rsi
    af98:	48 89 c7             	mov    %rax,%rdi
    af9b:	e8 20 06 00 00       	call   b5c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    afa0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    afa4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    afa8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    afac:	48 85 c0             	test   %rax,%rax
    afaf:	74 1c                	je     afcd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    afb1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    afb5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    afb9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    afbd:	48 89 ce             	mov    %rcx,%rsi
    afc0:	48 89 c7             	mov    %rax,%rdi
    afc3:	e8 64 0a 00 00       	call   ba2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    afc8:	48 89 c3             	mov    %rax,%rbx
    afcb:	eb 17                	jmp    afe4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    afcd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    afd1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    afd5:	48 89 d6             	mov    %rdx,%rsi
    afd8:	48 89 c7             	mov    %rax,%rdi
    afdb:	e8 a2 0a 00 00       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    afe0:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    afe4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    afe8:	48 89 c7             	mov    %rax,%rdi
    afeb:	e8 9a 05 00 00       	call   b58a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    aff0:	48 89 d8             	mov    %rbx,%rax
    aff3:	eb 1a                	jmp    b00f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    aff5:	48 89 c3             	mov    %rax,%rbx
    aff8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    affc:	48 89 c7             	mov    %rax,%rdi
    afff:	e8 86 05 00 00       	call   b58a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    b004:	48 89 d8             	mov    %rbx,%rax
    b007:	48 89 c7             	mov    %rax,%rdi
    b00a:	e8 51 84 ff ff       	call   3460 <_Unwind_Resume@plt>
    b00f:	48 83 c4 60          	add    $0x60,%rsp
    b013:	5b                   	pop    %rbx
    b014:	41 5c                	pop    %r12
    b016:	5d                   	pop    %rbp
    b017:	c3                   	ret

000000000000b018 <_ZNSaIP9VkImage_TEC1Ev>:
    b018:	55                   	push   %rbp
    b019:	48 89 e5             	mov    %rsp,%rbp
    b01c:	48 83 ec 10          	sub    $0x10,%rsp
    b020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b028:	48 89 c7             	mov    %rax,%rdi
    b02b:	e8 6c 0a 00 00       	call   ba9c <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    b030:	90                   	nop
    b031:	c9                   	leave
    b032:	c3                   	ret
    b033:	90                   	nop

000000000000b034 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b034:	55                   	push   %rbp
    b035:	48 89 e5             	mov    %rsp,%rbp
    b038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b03c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b040:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b04b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b052:	00 
    b053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b057:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b05e:	00 
	{ }
    b05f:	90                   	nop
    b060:	5d                   	pop    %rbp
    b061:	c3                   	ret

000000000000b062 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    b062:	55                   	push   %rbp
    b063:	48 89 e5             	mov    %rsp,%rbp
    b066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b06a:	90                   	nop
    b06b:	5d                   	pop    %rbp
    b06c:	c3                   	ret
    b06d:	90                   	nop

000000000000b06e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    b06e:	55                   	push   %rbp
    b06f:	48 89 e5             	mov    %rsp,%rbp
    b072:	48 83 ec 20          	sub    $0x20,%rsp
    b076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b07a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b07e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b082:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b087:	74 17                	je     b0a0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b08d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b091:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b095:	48 89 ce             	mov    %rcx,%rsi
    b098:	48 89 c7             	mov    %rax,%rdi
    b09b:	e8 07 0a 00 00       	call   baa7 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    b0a0:	90                   	nop
    b0a1:	c9                   	leave
    b0a2:	c3                   	ret
    b0a3:	90                   	nop

000000000000b0a4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b0a4:	55                   	push   %rbp
    b0a5:	48 89 e5             	mov    %rsp,%rbp
    b0a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b0ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0b0:	5d                   	pop    %rbp
    b0b1:	c3                   	ret

000000000000b0b2 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b0b2:	55                   	push   %rbp
    b0b3:	48 89 e5             	mov    %rsp,%rbp
    b0b6:	48 83 ec 20          	sub    $0x20,%rsp
    b0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b0c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b0ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0ce:	48 89 d6             	mov    %rdx,%rsi
    b0d1:	48 89 c7             	mov    %rax,%rdi
    b0d4:	e8 fc 09 00 00       	call   bad5 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    b0d9:	90                   	nop
    b0da:	c9                   	leave
    b0db:	c3                   	ret

000000000000b0dc <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
    b0dc:	55                   	push   %rbp
    b0dd:	48 89 e5             	mov    %rsp,%rbp
    b0e0:	53                   	push   %rbx
    b0e1:	48 83 ec 18          	sub    $0x18,%rsp
    b0e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b0e9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b0ed:	e8 ca ec ff ff       	call   9dbc <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
    b0f2:	48 89 03             	mov    %rax,(%rbx)
	{ }
    b0f5:	90                   	nop
    b0f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b0fa:	c9                   	leave
    b0fb:	c3                   	ret

000000000000b0fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    b0fc:	55                   	push   %rbp
    b0fd:	48 89 e5             	mov    %rsp,%rbp
    b100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    b104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b108:	48 8b 00             	mov    (%rax),%rax
    b10b:	5d                   	pop    %rbp
    b10c:	c3                   	ret

000000000000b10d <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    b10d:	55                   	push   %rbp
    b10e:	48 89 e5             	mov    %rsp,%rbp
    b111:	53                   	push   %rbx
    b112:	48 83 ec 38          	sub    $0x38,%rsp
    b116:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b11a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    b11e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b122:	48 8b 00             	mov    (%rax),%rax
    b125:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b129:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    b12d:	48 89 c7             	mov    %rax,%rdi
    b130:	e8 d9 ec ff ff       	call   9e0e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    b135:	48 89 c3             	mov    %rax,%rbx
    b138:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b13c:	48 8b 00             	mov    (%rax),%rax
    b13f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b143:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b147:	48 89 c7             	mov    %rax,%rdi
    b14a:	e8 bf ec ff ff       	call   9e0e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    b14f:	48 29 c3             	sub    %rax,%rbx
    b152:	48 89 da             	mov    %rbx,%rdx
    b155:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b159:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    b15d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b161:	48 89 d6             	mov    %rdx,%rsi
    b164:	48 89 c7             	mov    %rax,%rdi
    b167:	e8 7a ec ff ff       	call   9de6 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    b16c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    b170:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b174:	c9                   	leave
    b175:	c3                   	ret

000000000000b176 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    b176:	55                   	push   %rbp
    b177:	48 89 e5             	mov    %rsp,%rbp
    b17a:	48 83 ec 20          	sub    $0x20,%rsp
    b17e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    b182:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b186:	48 89 c7             	mov    %rax,%rdi
    b189:	e8 80 ec ff ff       	call   9e0e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    b18e:	48 89 c1             	mov    %rax,%rcx
    b191:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    b198:	9b c4 20 
    b19b:	48 89 c8             	mov    %rcx,%rax
    b19e:	48 f7 ea             	imul   %rdx
    b1a1:	48 89 d0             	mov    %rdx,%rax
    b1a4:	48 c1 f8 07          	sar    $0x7,%rax
    b1a8:	48 c1 f9 3f          	sar    $0x3f,%rcx
    b1ac:	48 89 ca             	mov    %rcx,%rdx
    b1af:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    b1b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b1b6:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b1ba:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b1be:	48 89 d6             	mov    %rdx,%rsi
    b1c1:	48 89 c7             	mov    %rax,%rdi
    b1c4:	e8 33 09 00 00       	call   bafc <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    b1c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    b1cd:	c9                   	leave
    b1ce:	c3                   	ret

000000000000b1cf <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    b1cf:	55                   	push   %rbp
    b1d0:	48 89 e5             	mov    %rsp,%rbp
    b1d3:	48 83 ec 10          	sub    $0x10,%rsp
    b1d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    b1df:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b1e3:	48 89 c7             	mov    %rax,%rdi
    b1e6:	e8 2e 09 00 00       	call   bb19 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    b1eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b1f3:	48 89 d6             	mov    %rdx,%rsi
    b1f6:	48 89 c7             	mov    %rax,%rdi
    b1f9:	e8 26 09 00 00       	call   bb24 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    b1fe:	c9                   	leave
    b1ff:	c3                   	ret

000000000000b200 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    b200:	55                   	push   %rbp
    b201:	48 89 e5             	mov    %rsp,%rbp
    b204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b20c:	48 8b 40 08          	mov    0x8(%rax),%rax
    b210:	5d                   	pop    %rbp
    b211:	c3                   	ret

000000000000b212 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    b212:	55                   	push   %rbp
    b213:	48 89 e5             	mov    %rsp,%rbp
    b216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    b21a:	90                   	nop
    b21b:	5d                   	pop    %rbp
    b21c:	c3                   	ret

000000000000b21d <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    b21d:	55                   	push   %rbp
    b21e:	48 89 e5             	mov    %rsp,%rbp
    b221:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b225:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    b229:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b22d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    b231:	48 c1 f8 03          	sar    $0x3,%rax
    }
    b235:	5d                   	pop    %rbp
    b236:	c3                   	ret

000000000000b237 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    b237:	55                   	push   %rbp
    b238:	48 89 e5             	mov    %rsp,%rbp
    b23b:	48 83 ec 20          	sub    $0x20,%rsp
    b23f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b243:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b247:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    b24b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    b24f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b253:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b25b:	48 89 ce             	mov    %rcx,%rsi
    b25e:	48 89 c7             	mov    %rax,%rdi
    b261:	e8 d4 08 00 00       	call   bb3a <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    b266:	c9                   	leave
    b267:	c3                   	ret

000000000000b268 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
    b268:	55                   	push   %rbp
    b269:	48 89 e5             	mov    %rsp,%rbp
    b26c:	53                   	push   %rbx
    b26d:	48 83 ec 28          	sub    $0x28,%rsp
    b271:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b275:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
    b279:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b27d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b281:	48 89 c7             	mov    %rax,%rdi
    b284:	e8 67 f9 ff ff       	call   abf0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    b289:	48 89 c6             	mov    %rax,%rsi
    b28c:	48 89 df             	mov    %rbx,%rdi
    b28f:	e8 dc 08 00 00       	call   bb70 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
    b294:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b298:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
    b29c:	90                   	nop
    b29d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b2a1:	c9                   	leave
    b2a2:	c3                   	ret
    b2a3:	90                   	nop

000000000000b2a4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
    b2a4:	55                   	push   %rbp
    b2a5:	48 89 e5             	mov    %rsp,%rbp
    b2a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    b2ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2b0:	5d                   	pop    %rbp
    b2b1:	c3                   	ret

000000000000b2b2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
    b2b2:	55                   	push   %rbp
    b2b3:	48 89 e5             	mov    %rsp,%rbp
    b2b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
    b2be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b2c2:	8b 10                	mov    (%rax),%edx
    b2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c8:	89 10                	mov    %edx,(%rax)
	second = __p.second;
    b2ca:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    b2ce:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    b2d2:	48 8b 46 04          	mov    0x4(%rsi),%rax
    b2d6:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
    b2da:	48 89 41 04          	mov    %rax,0x4(%rcx)
    b2de:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
    b2e2:	48 8b 46 14          	mov    0x14(%rsi),%rax
    b2e6:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
    b2ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    b2ee:	5d                   	pop    %rbp
    b2ef:	c3                   	ret

000000000000b2f0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    b2f0:	55                   	push   %rbp
    b2f1:	48 89 e5             	mov    %rsp,%rbp
    b2f4:	53                   	push   %rbx
    b2f5:	48 83 ec 18          	sub    $0x18,%rsp
    b2f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    b301:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b305:	48 89 c7             	mov    %rax,%rdi
    b308:	e8 b5 08 00 00       	call   bbc2 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    b30d:	48 89 c3             	mov    %rax,%rbx
    b310:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b314:	48 89 c7             	mov    %rax,%rdi
    b317:	e8 98 08 00 00       	call   bbb4 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
    b31c:	48 89 de             	mov    %rbx,%rsi
    b31f:	48 89 c7             	mov    %rax,%rdi
    b322:	e8 a9 08 00 00       	call   bbd0 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    b327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b32b:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
    b32f:	90                   	nop
    b330:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b334:	c9                   	leave
    b335:	c3                   	ret

000000000000b336 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
    b336:	55                   	push   %rbp
    b337:	48 89 e5             	mov    %rsp,%rbp
    b33a:	48 83 ec 10          	sub    $0x10,%rsp
    b33e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
    b342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b346:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    b34a:	84 c0                	test   %al,%al
    b34c:	74 0c                	je     b35a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
    b34e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b352:	48 89 c7             	mov    %rax,%rdi
    b355:	e8 d0 08 00 00       	call   bc2a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
    b35a:	90                   	nop
    b35b:	c9                   	leave
    b35c:	c3                   	ret
    b35d:	90                   	nop

000000000000b35e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b35e:	55                   	push   %rbp
    b35f:	48 89 e5             	mov    %rsp,%rbp
    b362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b366:	90                   	nop
    b367:	5d                   	pop    %rbp
    b368:	c3                   	ret

000000000000b369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    b369:	55                   	push   %rbp
    b36a:	48 89 e5             	mov    %rsp,%rbp
    b36d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    b371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b375:	48 8b 40 18          	mov    0x18(%rax),%rax
    b379:	5d                   	pop    %rbp
    b37a:	c3                   	ret

000000000000b37b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    b37b:	55                   	push   %rbp
    b37c:	48 89 e5             	mov    %rsp,%rbp
    b37f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    b383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b387:	48 8b 40 10          	mov    0x10(%rax),%rax
    b38b:	5d                   	pop    %rbp
    b38c:	c3                   	ret
    b38d:	90                   	nop

000000000000b38e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    b38e:	55                   	push   %rbp
    b38f:	48 89 e5             	mov    %rsp,%rbp
    b392:	48 83 ec 10          	sub    $0x10,%rsp
    b396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b39a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    b39e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a6:	48 89 d6             	mov    %rdx,%rsi
    b3a9:	48 89 c7             	mov    %rax,%rdi
    b3ac:	e8 8d 08 00 00       	call   bc3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    b3b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3b9:	48 89 d6             	mov    %rdx,%rsi
    b3bc:	48 89 c7             	mov    %rax,%rdi
    b3bf:	e8 b8 08 00 00       	call   bc7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    b3c4:	90                   	nop
    b3c5:	c9                   	leave
    b3c6:	c3                   	ret
    b3c7:	90                   	nop

000000000000b3c8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    b3c8:	55                   	push   %rbp
    b3c9:	48 89 e5             	mov    %rsp,%rbp
    b3cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    b3d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3d4:	48 8b 40 10          	mov    0x10(%rax),%rax
    b3d8:	5d                   	pop    %rbp
    b3d9:	c3                   	ret

000000000000b3da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    b3da:	55                   	push   %rbp
    b3db:	48 89 e5             	mov    %rsp,%rbp
    b3de:	53                   	push   %rbx
    b3df:	48 83 ec 18          	sub    $0x18,%rsp
    b3e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    b3eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3ef:	48 89 c7             	mov    %rax,%rdi
    b3f2:	e8 bb 08 00 00       	call   bcb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    b3f7:	48 89 c3             	mov    %rax,%rbx
    b3fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3fe:	48 89 c7             	mov    %rax,%rdi
    b401:	e8 b8 f9 ff ff       	call   adbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    b406:	48 89 c6             	mov    %rax,%rsi
    b409:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b40d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b411:	48 89 d1             	mov    %rdx,%rcx
    b414:	48 89 da             	mov    %rbx,%rdx
    b417:	48 89 c7             	mov    %rax,%rdi
    b41a:	e8 a5 08 00 00       	call   bcc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    b41f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b423:	c9                   	leave
    b424:	c3                   	ret
    b425:	90                   	nop

000000000000b426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    b426:	55                   	push   %rbp
    b427:	48 89 e5             	mov    %rsp,%rbp
    b42a:	48 83 ec 20          	sub    $0x20,%rsp
    b42e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    b432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b436:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b43a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b43e:	48 89 d6             	mov    %rdx,%rsi
    b441:	48 89 c7             	mov    %rax,%rdi
    b444:	e8 39 06 00 00       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    b449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44d:	c9                   	leave
    b44e:	c3                   	ret
    b44f:	90                   	nop

000000000000b450 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    b450:	55                   	push   %rbp
    b451:	48 89 e5             	mov    %rsp,%rbp
    b454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    b458:	90                   	nop
    b459:	5d                   	pop    %rbp
    b45a:	c3                   	ret
    b45b:	90                   	nop

000000000000b45c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    b45c:	55                   	push   %rbp
    b45d:	48 89 e5             	mov    %rsp,%rbp
    b460:	48 83 ec 10          	sub    $0x10,%rsp
    b464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    b468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b46c:	48 83 c0 20          	add    $0x20,%rax
    b470:	48 89 c7             	mov    %rax,%rdi
    b473:	e8 e2 08 00 00       	call   bd5a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    b478:	c9                   	leave
    b479:	c3                   	ret

000000000000b47a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    b47a:	55                   	push   %rbp
    b47b:	48 89 e5             	mov    %rsp,%rbp
    b47e:	48 83 ec 10          	sub    $0x10,%rsp
    b482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b486:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    b48a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b48e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b492:	48 89 d6             	mov    %rdx,%rsi
    b495:	48 89 c7             	mov    %rax,%rdi
    b498:	e8 93 7b ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    b49d:	c1 e8 1f             	shr    $0x1f,%eax
    b4a0:	c9                   	leave
    b4a1:	c3                   	ret

000000000000b4a2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b4a2:	55                   	push   %rbp
    b4a3:	48 89 e5             	mov    %rsp,%rbp
    b4a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b4aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4ae:	5d                   	pop    %rbp
    b4af:	c3                   	ret

000000000000b4b0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    b4b0:	55                   	push   %rbp
    b4b1:	48 89 e5             	mov    %rsp,%rbp
    b4b4:	53                   	push   %rbx
    b4b5:	48 83 ec 18          	sub    $0x18,%rsp
    b4b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    b4c1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b4c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4c9:	48 89 c7             	mov    %rax,%rdi
    b4cc:	e8 d1 ff ff ff       	call   b4a2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    b4d1:	48 89 c6             	mov    %rax,%rsi
    b4d4:	48 89 df             	mov    %rbx,%rdi
    b4d7:	e8 98 08 00 00       	call   bd74 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    b4dc:	90                   	nop
    b4dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b4e1:	c9                   	leave
    b4e2:	c3                   	ret

000000000000b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b4e3:	55                   	push   %rbp
    b4e4:	48 89 e5             	mov    %rsp,%rbp
    b4e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b4eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4ef:	5d                   	pop    %rbp
    b4f0:	c3                   	ret

000000000000b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b4f1:	55                   	push   %rbp
    b4f2:	48 89 e5             	mov    %rsp,%rbp
    b4f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b4f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4fd:	5d                   	pop    %rbp
    b4fe:	c3                   	ret

000000000000b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b4ff:	55                   	push   %rbp
    b500:	48 89 e5             	mov    %rsp,%rbp
    b503:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b50b:	5d                   	pop    %rbp
    b50c:	c3                   	ret
    b50d:	90                   	nop

000000000000b50e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    b50e:	55                   	push   %rbp
    b50f:	48 89 e5             	mov    %rsp,%rbp
    b512:	41 54                	push   %r12
    b514:	53                   	push   %rbx
    b515:	48 83 ec 30          	sub    $0x30,%rsp
    b519:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b51d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b521:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b525:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    b529:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    b52d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b531:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b535:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    b538:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b53c:	48 89 c7             	mov    %rax,%rdi
    b53f:	e8 bb ff ff ff       	call   b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    b544:	49 89 c4             	mov    %rax,%r12
    b547:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b54b:	48 89 c7             	mov    %rax,%rdi
    b54e:	e8 9e ff ff ff       	call   b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    b553:	48 89 c3             	mov    %rax,%rbx
    b556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b55a:	48 89 c7             	mov    %rax,%rdi
    b55d:	e8 81 ff ff ff       	call   b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    b562:	48 89 c6             	mov    %rax,%rsi
    b565:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b569:	4c 89 e1             	mov    %r12,%rcx
    b56c:	48 89 da             	mov    %rbx,%rdx
    b56f:	48 89 c7             	mov    %rax,%rdi
    b572:	e8 31 08 00 00       	call   bda8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    b577:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b57b:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    b57f:	90                   	nop
    b580:	48 83 c4 30          	add    $0x30,%rsp
    b584:	5b                   	pop    %rbx
    b585:	41 5c                	pop    %r12
    b587:	5d                   	pop    %rbp
    b588:	c3                   	ret
    b589:	90                   	nop

000000000000b58a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    b58a:	55                   	push   %rbp
    b58b:	48 89 e5             	mov    %rsp,%rbp
    b58e:	48 83 ec 10          	sub    $0x10,%rsp
    b592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    b596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b59a:	48 8b 40 08          	mov    0x8(%rax),%rax
    b59e:	48 85 c0             	test   %rax,%rax
    b5a1:	74 1a                	je     b5bd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    b5a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a7:	48 8b 00             	mov    (%rax),%rax
    b5aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b5ae:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    b5b2:	48 89 d6             	mov    %rdx,%rsi
    b5b5:	48 89 c7             	mov    %rax,%rdi
    b5b8:	e8 d1 fd ff ff       	call   b38e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    b5bd:	90                   	nop
    b5be:	c9                   	leave
    b5bf:	c3                   	ret

000000000000b5c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    b5c0:	55                   	push   %rbp
    b5c1:	48 89 e5             	mov    %rsp,%rbp
    b5c4:	53                   	push   %rbx
    b5c5:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    b5cc:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    b5d3:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    b5da:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    b5e1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b5e8:	48 89 c7             	mov    %rax,%rdi
    b5eb:	e8 34 08 00 00       	call   be24 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    b5f0:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    b5f7:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    b5fe:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b605:	48 89 c7             	mov    %rax,%rdi
    b608:	e8 a5 06 00 00       	call   bcb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    b60d:	48 39 c3             	cmp    %rax,%rbx
    b610:	0f 94 c0             	sete   %al
    b613:	84 c0                	test   %al,%al
    b615:	0f 84 c8 00 00 00    	je     b6e3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    b61b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b622:	48 89 c7             	mov    %rax,%rdi
    b625:	e8 22 08 00 00       	call   be4c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    b62a:	48 85 c0             	test   %rax,%rax
    b62d:	74 44                	je     b673 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    b62f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    b636:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b63d:	48 89 c7             	mov    %rax,%rdi
    b640:	e8 19 08 00 00       	call   be5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    b645:	48 8b 00             	mov    (%rax),%rax
    b648:	48 89 c7             	mov    %rax,%rdi
    b64b:	e8 20 08 00 00       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    b650:	48 89 c1             	mov    %rax,%rcx
    b653:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    b65a:	48 89 c2             	mov    %rax,%rdx
    b65d:	48 89 ce             	mov    %rcx,%rsi
    b660:	48 89 df             	mov    %rbx,%rdi
    b663:	e8 38 f8 ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b668:	84 c0                	test   %al,%al
    b66a:	74 07                	je     b673 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    b66c:	b8 01 00 00 00       	mov    $0x1,%eax
    b671:	eb 05                	jmp    b678 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    b673:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    b678:	84 c0                	test   %al,%al
    b67a:	74 49                	je     b6c5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    b67c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b683:	48 89 c7             	mov    %rax,%rdi
    b686:	e8 d3 07 00 00       	call   be5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    b68b:	48 89 c2             	mov    %rax,%rdx
    b68e:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    b695:	00 00 00 00 
    b699:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    b6a0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b6a7:	48 89 ce             	mov    %rcx,%rsi
    b6aa:	48 89 c7             	mov    %rax,%rdi
    b6ad:	e8 d8 07 00 00       	call   be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    b6b2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b6b9:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b6c0:	e9 43 03 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    b6c5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    b6cc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b6d3:	48 89 d6             	mov    %rdx,%rsi
    b6d6:	48 89 c7             	mov    %rax,%rdi
    b6d9:	e8 dc 07 00 00       	call   beba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    b6de:	e9 25 03 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    b6e3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    b6ea:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b6f1:	48 89 c7             	mov    %rax,%rdi
    b6f4:	e8 77 07 00 00       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    b6f9:	48 89 c2             	mov    %rax,%rdx
    b6fc:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    b703:	48 89 c6             	mov    %rax,%rsi
    b706:	48 89 df             	mov    %rbx,%rdi
    b709:	e8 92 f7 ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b70e:	84 c0                	test   %al,%al
    b710:	0f 84 66 01 00 00    	je     b87c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    b716:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b71d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    b724:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    b72b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b732:	48 89 c7             	mov    %rax,%rdi
    b735:	e8 f6 08 00 00       	call   c030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    b73a:	48 8b 00             	mov    (%rax),%rax
    b73d:	48 39 c3             	cmp    %rax,%rbx
    b740:	0f 94 c0             	sete   %al
    b743:	84 c0                	test   %al,%al
    b745:	74 4c                	je     b793 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    b747:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b74e:	48 89 c7             	mov    %rax,%rdi
    b751:	e8 da 08 00 00       	call   c030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    b756:	48 89 c3             	mov    %rax,%rbx
    b759:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b760:	48 89 c7             	mov    %rax,%rdi
    b763:	e8 c8 08 00 00       	call   c030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    b768:	48 89 c1             	mov    %rax,%rcx
    b76b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    b772:	48 89 da             	mov    %rbx,%rdx
    b775:	48 89 ce             	mov    %rcx,%rsi
    b778:	48 89 c7             	mov    %rax,%rdi
    b77b:	e8 c2 08 00 00       	call   c042 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    b780:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    b787:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    b78e:	e9 75 02 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    b793:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    b79a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    b7a1:	48 89 c7             	mov    %rax,%rdi
    b7a4:	e8 dd 08 00 00       	call   c086 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    b7a9:	48 8b 00             	mov    (%rax),%rax
    b7ac:	48 89 c7             	mov    %rax,%rdi
    b7af:	e8 bc 06 00 00       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    b7b4:	48 89 c1             	mov    %rax,%rcx
    b7b7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    b7be:	48 89 c2             	mov    %rax,%rdx
    b7c1:	48 89 ce             	mov    %rcx,%rsi
    b7c4:	48 89 df             	mov    %rbx,%rdi
    b7c7:	e8 d4 f6 ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b7cc:	84 c0                	test   %al,%al
    b7ce:	0f 84 8a 00 00 00    	je     b85e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    b7d4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    b7db:	48 89 c7             	mov    %rax,%rdi
    b7de:	e8 86 fb ff ff       	call   b369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    b7e3:	48 85 c0             	test   %rax,%rax
    b7e6:	0f 94 c0             	sete   %al
    b7e9:	84 c0                	test   %al,%al
    b7eb:	74 3e                	je     b82b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    b7ed:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    b7f4:	00 00 00 00 
    b7f8:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    b7ff:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    b806:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    b80d:	48 89 ce             	mov    %rcx,%rsi
    b810:	48 89 c7             	mov    %rax,%rdi
    b813:	e8 72 06 00 00       	call   be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    b818:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b81f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    b826:	e9 dd 01 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    b82b:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    b832:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    b839:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    b840:	48 89 ce             	mov    %rcx,%rsi
    b843:	48 89 c7             	mov    %rax,%rdi
    b846:	e8 f7 07 00 00       	call   c042 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    b84b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    b852:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    b859:	e9 aa 01 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    b85e:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    b865:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b86c:	48 89 d6             	mov    %rdx,%rsi
    b86f:	48 89 c7             	mov    %rax,%rdi
    b872:	e8 43 06 00 00       	call   beba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    b877:	e9 8c 01 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    b87c:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    b883:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b88a:	48 89 c7             	mov    %rax,%rdi
    b88d:	e8 de 05 00 00       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    b892:	48 89 c1             	mov    %rax,%rcx
    b895:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    b89c:	48 89 c2             	mov    %rax,%rdx
    b89f:	48 89 ce             	mov    %rcx,%rsi
    b8a2:	48 89 df             	mov    %rbx,%rdi
    b8a5:	e8 f6 f5 ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b8aa:	84 c0                	test   %al,%al
    b8ac:	0f 84 2c 01 00 00    	je     b9de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    b8b2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b8b9:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    b8c0:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    b8c7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b8ce:	48 89 c7             	mov    %rax,%rdi
    b8d1:	e8 88 05 00 00       	call   be5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    b8d6:	48 8b 00             	mov    (%rax),%rax
    b8d9:	48 39 c3             	cmp    %rax,%rbx
    b8dc:	0f 94 c0             	sete   %al
    b8df:	84 c0                	test   %al,%al
    b8e1:	74 3a                	je     b91d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    b8e3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b8ea:	48 89 c7             	mov    %rax,%rdi
    b8ed:	e8 6c 05 00 00       	call   be5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    b8f2:	48 89 c2             	mov    %rax,%rdx
    b8f5:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    b8fc:	00 
    b8fd:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    b901:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    b905:	48 89 ce             	mov    %rcx,%rsi
    b908:	48 89 c7             	mov    %rax,%rdi
    b90b:	e8 7a 05 00 00       	call   be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    b910:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b914:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    b918:	e9 eb 00 00 00       	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    b91d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    b924:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    b92b:	48 89 c7             	mov    %rax,%rdi
    b92e:	e8 7b 07 00 00       	call   c0ae <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    b933:	48 8b 00             	mov    (%rax),%rax
    b936:	48 89 c7             	mov    %rax,%rdi
    b939:	e8 32 05 00 00       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    b93e:	48 89 c2             	mov    %rax,%rdx
    b941:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    b948:	48 89 c6             	mov    %rax,%rsi
    b94b:	48 89 df             	mov    %rbx,%rdi
    b94e:	e8 4d f5 ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b953:	84 c0                	test   %al,%al
    b955:	74 6c                	je     b9c3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    b957:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b95e:	48 89 c7             	mov    %rax,%rdi
    b961:	e8 03 fa ff ff       	call   b369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    b966:	48 85 c0             	test   %rax,%rax
    b969:	0f 94 c0             	sete   %al
    b96c:	84 c0                	test   %al,%al
    b96e:	74 2c                	je     b99c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    b970:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    b977:	00 
    b978:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    b97f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    b983:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b987:	48 89 ce             	mov    %rcx,%rsi
    b98a:	48 89 c7             	mov    %rax,%rdi
    b98d:	e8 f8 04 00 00       	call   be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    b992:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b996:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b99a:	eb 6c                	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    b99c:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    b9a3:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    b9aa:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b9ae:	48 89 ce             	mov    %rcx,%rsi
    b9b1:	48 89 c7             	mov    %rax,%rdi
    b9b4:	e8 89 06 00 00       	call   c042 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    b9b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b9bd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b9c1:	eb 45                	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    b9c3:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    b9ca:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    b9d1:	48 89 d6             	mov    %rdx,%rsi
    b9d4:	48 89 c7             	mov    %rax,%rdi
    b9d7:	e8 de 04 00 00       	call   beba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    b9dc:	eb 2a                	jmp    ba08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    b9de:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b9e5:	00 
    b9e6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    b9ea:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    b9f1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b9f5:	48 89 ce             	mov    %rcx,%rsi
    b9f8:	48 89 c7             	mov    %rax,%rdi
    b9fb:	e8 8a 04 00 00       	call   be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ba00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ba04:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    ba08:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ba0c:	c9                   	leave
    ba0d:	c3                   	ret

000000000000ba0e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    ba0e:	55                   	push   %rbp
    ba0f:	48 89 e5             	mov    %rsp,%rbp
    ba12:	48 83 ec 10          	sub    $0x10,%rsp
    ba16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    ba1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba1e:	48 8b 40 08          	mov    0x8(%rax),%rax
    ba22:	48 89 c7             	mov    %rax,%rdi
    ba25:	e8 ac 06 00 00       	call   c0d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    ba2a:	c9                   	leave
    ba2b:	c3                   	ret

000000000000ba2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    ba2c:	55                   	push   %rbp
    ba2d:	48 89 e5             	mov    %rsp,%rbp
    ba30:	48 83 ec 30          	sub    $0x30,%rsp
    ba34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ba38:	48 89 d1             	mov    %rdx,%rcx
    ba3b:	48 89 f0             	mov    %rsi,%rax
    ba3e:	48 89 fa             	mov    %rdi,%rdx
    ba41:	48 89 ca             	mov    %rcx,%rdx
    ba44:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    ba48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    ba4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba50:	48 8b 00             	mov    (%rax),%rax
    ba53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba57:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    ba5b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ba5f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    ba63:	48 89 c7             	mov    %rax,%rdi
    ba66:	e8 97 06 00 00       	call   c102 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    ba6b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    ba6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba73:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ba7a:	00 
	  return __it;
    ba7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    ba7f:	c9                   	leave
    ba80:	c3                   	ret
    ba81:	90                   	nop

000000000000ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    ba82:	55                   	push   %rbp
    ba83:	48 89 e5             	mov    %rsp,%rbp
    ba86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    ba8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba96:	48 89 10             	mov    %rdx,(%rax)
    ba99:	90                   	nop
    ba9a:	5d                   	pop    %rbp
    ba9b:	c3                   	ret

000000000000ba9c <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
    ba9c:	55                   	push   %rbp
    ba9d:	48 89 e5             	mov    %rsp,%rbp
    baa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baa4:	90                   	nop
    baa5:	5d                   	pop    %rbp
    baa6:	c3                   	ret

000000000000baa7 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    baa7:	55                   	push   %rbp
    baa8:	48 89 e5             	mov    %rsp,%rbp
    baab:	48 83 ec 20          	sub    $0x20,%rsp
    baaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bab3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bab7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    babb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    babf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bac7:	48 89 ce             	mov    %rcx,%rsi
    baca:	48 89 c7             	mov    %rax,%rdi
    bacd:	e8 f4 06 00 00       	call   c1c6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    bad2:	90                   	nop
    bad3:	c9                   	leave
    bad4:	c3                   	ret

000000000000bad5 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bad5:	55                   	push   %rbp
    bad6:	48 89 e5             	mov    %rsp,%rbp
    bad9:	48 83 ec 10          	sub    $0x10,%rsp
    badd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bae1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bae5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baed:	48 89 d6             	mov    %rdx,%rsi
    baf0:	48 89 c7             	mov    %rax,%rdi
    baf3:	e8 ff 06 00 00       	call   c1f7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    baf8:	90                   	nop
    baf9:	c9                   	leave
    bafa:	c3                   	ret
    bafb:	90                   	nop

000000000000bafc <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    bafc:	55                   	push   %rbp
    bafd:	48 89 e5             	mov    %rsp,%rbp
    bb00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    bb08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb0c:	48 8b 10             	mov    (%rax),%rdx
    bb0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb13:	48 89 10             	mov    %rdx,(%rax)
    bb16:	90                   	nop
    bb17:	5d                   	pop    %rbp
    bb18:	c3                   	ret

000000000000bb19 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bb19:	55                   	push   %rbp
    bb1a:	48 89 e5             	mov    %rsp,%rbp
    bb1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bb21:	90                   	nop
    bb22:	5d                   	pop    %rbp
    bb23:	c3                   	ret

000000000000bb24 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    bb24:	55                   	push   %rbp
    bb25:	48 89 e5             	mov    %rsp,%rbp
    bb28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    bb30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb34:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    bb38:	5d                   	pop    %rbp
    bb39:	c3                   	ret

000000000000bb3a <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    bb3a:	55                   	push   %rbp
    bb3b:	48 89 e5             	mov    %rsp,%rbp
    bb3e:	48 83 ec 30          	sub    $0x30,%rsp
    bb42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb46:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bb4a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    bb4e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    bb52:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    bb56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bb5a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bb5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb62:	48 89 ce             	mov    %rcx,%rsi
    bb65:	48 89 c7             	mov    %rax,%rdi
    bb68:	e8 99 06 00 00       	call   c206 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    bb6d:	c9                   	leave
    bb6e:	c3                   	ret
    bb6f:	90                   	nop

000000000000bb70 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
    bb70:	55                   	push   %rbp
    bb71:	48 89 e5             	mov    %rsp,%rbp
    bb74:	48 83 ec 10          	sub    $0x10,%rsp
    bb78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
    bb80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb84:	48 89 c7             	mov    %rax,%rdi
    bb87:	e8 64 f0 ff ff       	call   abf0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    bb8c:	48 89 c1             	mov    %rax,%rcx
    bb8f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    bb93:	48 8b 01             	mov    (%rcx),%rax
    bb96:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    bb9a:	48 89 06             	mov    %rax,(%rsi)
    bb9d:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    bba1:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    bba5:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    bba9:	48 89 46 0c          	mov    %rax,0xc(%rsi)
    bbad:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
    bbb1:	90                   	nop
    bbb2:	c9                   	leave
    bbb3:	c3                   	ret

000000000000bbb4 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bbb4:	55                   	push   %rbp
    bbb5:	48 89 e5             	mov    %rsp,%rbp
    bbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bbbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc0:	5d                   	pop    %rbp
    bbc1:	c3                   	ret

000000000000bbc2 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    bbc2:	55                   	push   %rbp
    bbc3:	48 89 e5             	mov    %rsp,%rbp
    bbc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    bbca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbce:	5d                   	pop    %rbp
    bbcf:	c3                   	ret

000000000000bbd0 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bbd0:	55                   	push   %rbp
    bbd1:	48 89 e5             	mov    %rsp,%rbp
    bbd4:	53                   	push   %rbx
    bbd5:	48 83 ec 18          	sub    $0x18,%rsp
    bbd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bbdd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bbe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bbe5:	48 89 c6             	mov    %rax,%rsi
    bbe8:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bbed:	e8 c9 8a ff ff       	call   46bb <_ZnwmPv>
    bbf2:	48 89 c3             	mov    %rax,%rbx
    bbf5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bbf9:	48 89 c7             	mov    %rax,%rdi
    bbfc:	e8 c1 ff ff ff       	call   bbc2 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    bc01:	48 89 c1             	mov    %rax,%rcx
    bc04:	48 8b 01             	mov    (%rcx),%rax
    bc07:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    bc0b:	48 89 03             	mov    %rax,(%rbx)
    bc0e:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    bc12:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    bc16:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    bc1a:	48 89 43 0c          	mov    %rax,0xc(%rbx)
    bc1e:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
    bc22:	90                   	nop
    bc23:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bc27:	c9                   	leave
    bc28:	c3                   	ret
    bc29:	90                   	nop

000000000000bc2a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
    bc2a:	55                   	push   %rbp
    bc2b:	48 89 e5             	mov    %rsp,%rbp
    bc2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
    bc32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc36:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
    bc3a:	90                   	nop
    bc3b:	5d                   	pop    %rbp
    bc3c:	c3                   	ret
    bc3d:	90                   	nop

000000000000bc3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    bc3e:	55                   	push   %rbp
    bc3f:	48 89 e5             	mov    %rsp,%rbp
    bc42:	53                   	push   %rbx
    bc43:	48 83 ec 18          	sub    $0x18,%rsp
    bc47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    bc4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bc53:	48 89 c7             	mov    %rax,%rdi
    bc56:	e8 01 f8 ff ff       	call   b45c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    bc5b:	48 89 c3             	mov    %rax,%rbx
    bc5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc62:	48 89 c7             	mov    %rax,%rdi
    bc65:	e8 ca 05 00 00       	call   c234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    bc6a:	48 89 de             	mov    %rbx,%rsi
    bc6d:	48 89 c7             	mov    %rax,%rdi
    bc70:	e8 cd 05 00 00       	call   c242 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    bc75:	90                   	nop
    bc76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bc7a:	c9                   	leave
    bc7b:	c3                   	ret

000000000000bc7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    bc7c:	55                   	push   %rbp
    bc7d:	48 89 e5             	mov    %rsp,%rbp
    bc80:	48 83 ec 10          	sub    $0x10,%rsp
    bc84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    bc8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc90:	48 89 c7             	mov    %rax,%rdi
    bc93:	e8 9c 05 00 00       	call   c234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    bc98:	48 89 c1             	mov    %rax,%rcx
    bc9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc9f:	ba 01 00 00 00       	mov    $0x1,%edx
    bca4:	48 89 c6             	mov    %rax,%rsi
    bca7:	48 89 cf             	mov    %rcx,%rdi
    bcaa:	e8 b9 05 00 00       	call   c268 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    bcaf:	90                   	nop
    bcb0:	c9                   	leave
    bcb1:	c3                   	ret

000000000000bcb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    bcb2:	55                   	push   %rbp
    bcb3:	48 89 e5             	mov    %rsp,%rbp
    bcb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    bcba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcbe:	48 83 c0 08          	add    $0x8,%rax
    bcc2:	5d                   	pop    %rbp
    bcc3:	c3                   	ret

000000000000bcc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    bcc4:	55                   	push   %rbp
    bcc5:	48 89 e5             	mov    %rsp,%rbp
    bcc8:	53                   	push   %rbx
    bcc9:	48 83 ec 38          	sub    $0x38,%rsp
    bccd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bcd1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    bcd5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    bcd9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    bcdd:	eb 56                	jmp    bd35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    bcdf:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    bce3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bce7:	48 89 c7             	mov    %rax,%rdi
    bcea:	e8 e7 03 00 00       	call   c0d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    bcef:	48 89 c1             	mov    %rax,%rcx
    bcf2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bcf6:	48 89 c2             	mov    %rax,%rdx
    bcf9:	48 89 ce             	mov    %rcx,%rsi
    bcfc:	48 89 df             	mov    %rbx,%rdi
    bcff:	e8 9c f1 ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    bd04:	83 f0 01             	xor    $0x1,%eax
    bd07:	84 c0                	test   %al,%al
    bd09:	74 1a                	je     bd25 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    bd0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bd0f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    bd13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bd17:	48 89 c7             	mov    %rax,%rdi
    bd1a:	e8 5c f6 ff ff       	call   b37b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    bd1f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    bd23:	eb 10                	jmp    bd35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    bd25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bd29:	48 89 c7             	mov    %rax,%rdi
    bd2c:	e8 38 f6 ff ff       	call   b369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    bd31:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    bd35:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    bd3a:	75 a3                	jne    bcdf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    bd3c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    bd40:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    bd44:	48 89 d6             	mov    %rdx,%rsi
    bd47:	48 89 c7             	mov    %rax,%rdi
    bd4a:	e8 33 fd ff ff       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    bd4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    bd53:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bd57:	c9                   	leave
    bd58:	c3                   	ret
    bd59:	90                   	nop

000000000000bd5a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    bd5a:	55                   	push   %rbp
    bd5b:	48 89 e5             	mov    %rsp,%rbp
    bd5e:	48 83 ec 10          	sub    $0x10,%rsp
    bd62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    bd66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd6a:	48 89 c7             	mov    %rax,%rdi
    bd6d:	e8 24 05 00 00       	call   c296 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    bd72:	c9                   	leave
    bd73:	c3                   	ret

000000000000bd74 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    bd74:	55                   	push   %rbp
    bd75:	48 89 e5             	mov    %rsp,%rbp
    bd78:	53                   	push   %rbx
    bd79:	48 83 ec 18          	sub    $0x18,%rsp
    bd7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd81:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    bd85:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bd89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bd8d:	48 89 c7             	mov    %rax,%rdi
    bd90:	e8 0d f7 ff ff       	call   b4a2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    bd95:	48 89 c6             	mov    %rax,%rsi
    bd98:	48 89 df             	mov    %rbx,%rdi
    bd9b:	e8 04 05 00 00       	call   c2a4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    bda0:	90                   	nop
    bda1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bda5:	c9                   	leave
    bda6:	c3                   	ret
    bda7:	90                   	nop

000000000000bda8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    bda8:	55                   	push   %rbp
    bda9:	48 89 e5             	mov    %rsp,%rbp
    bdac:	41 54                	push   %r12
    bdae:	53                   	push   %rbx
    bdaf:	48 83 ec 30          	sub    $0x30,%rsp
    bdb3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bdb7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    bdbb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    bdbf:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    bdc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bdc7:	48 89 c7             	mov    %rax,%rdi
    bdca:	e8 fb 04 00 00       	call   c2ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    bdcf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    bdd3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bdd7:	48 89 c7             	mov    %rax,%rdi
    bdda:	e8 20 f7 ff ff       	call   b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    bddf:	49 89 c4             	mov    %rax,%r12
    bde2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    bde6:	48 89 c7             	mov    %rax,%rdi
    bde9:	e8 03 f7 ff ff       	call   b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    bdee:	48 89 c3             	mov    %rax,%rbx
    bdf1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bdf5:	48 89 c7             	mov    %rax,%rdi
    bdf8:	e8 e6 f6 ff ff       	call   b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    bdfd:	48 89 c2             	mov    %rax,%rdx
    be00:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    be04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    be08:	4d 89 e0             	mov    %r12,%r8
    be0b:	48 89 d9             	mov    %rbx,%rcx
    be0e:	48 89 c7             	mov    %rax,%rdi
    be11:	e8 dc 04 00 00       	call   c2f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    be16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    be1a:	48 83 c4 30          	add    $0x30,%rsp
    be1e:	5b                   	pop    %rbx
    be1f:	41 5c                	pop    %r12
    be21:	5d                   	pop    %rbp
    be22:	c3                   	ret
    be23:	90                   	nop

000000000000be24 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    be24:	55                   	push   %rbp
    be25:	48 89 e5             	mov    %rsp,%rbp
    be28:	48 83 ec 20          	sub    $0x20,%rsp
    be2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    be30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be34:	48 8b 10             	mov    (%rax),%rdx
    be37:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be3b:	48 89 d6             	mov    %rdx,%rsi
    be3e:	48 89 c7             	mov    %rax,%rdi
    be41:	e8 3c fc ff ff       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    be46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be4a:	c9                   	leave
    be4b:	c3                   	ret

000000000000be4c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    be4c:	55                   	push   %rbp
    be4d:	48 89 e5             	mov    %rsp,%rbp
    be50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    be54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be58:	48 8b 40 28          	mov    0x28(%rax),%rax
    be5c:	5d                   	pop    %rbp
    be5d:	c3                   	ret

000000000000be5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    be5e:	55                   	push   %rbp
    be5f:	48 89 e5             	mov    %rsp,%rbp
    be62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    be66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be6a:	48 83 c0 20          	add    $0x20,%rax
    be6e:	5d                   	pop    %rbp
    be6f:	c3                   	ret

000000000000be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    be70:	55                   	push   %rbp
    be71:	48 89 e5             	mov    %rsp,%rbp
    be74:	48 83 ec 10          	sub    $0x10,%rsp
    be78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    be7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be80:	48 89 c7             	mov    %rax,%rdi
    be83:	e8 4e 02 00 00       	call   c0d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    be88:	c9                   	leave
    be89:	c3                   	ret

000000000000be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
    be8a:	55                   	push   %rbp
    be8b:	48 89 e5             	mov    %rsp,%rbp
    be8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    be9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be9e:	48 8b 10             	mov    (%rax),%rdx
    bea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bea5:	48 89 10             	mov    %rdx,(%rax)
    bea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    beac:	48 8b 10             	mov    (%rax),%rdx
    beaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    beb7:	90                   	nop
    beb8:	5d                   	pop    %rbp
    beb9:	c3                   	ret

000000000000beba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    beba:	55                   	push   %rbp
    bebb:	48 89 e5             	mov    %rsp,%rbp
    bebe:	53                   	push   %rbx
    bebf:	48 83 ec 78          	sub    $0x78,%rsp
    bec3:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    bec7:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    becb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    becf:	48 89 c7             	mov    %rax,%rdi
    bed2:	e8 e7 ee ff ff       	call   adbe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    bed7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    bedb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bedf:	48 89 c7             	mov    %rax,%rdi
    bee2:	e8 cb fd ff ff       	call   bcb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    bee7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    beeb:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    beef:	eb 51                	jmp    bf42 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    bef1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bef5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    bef9:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    befd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bf01:	48 89 c7             	mov    %rax,%rdi
    bf04:	e8 cd 01 00 00       	call   c0d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    bf09:	48 89 c2             	mov    %rax,%rdx
    bf0c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    bf10:	48 89 c6             	mov    %rax,%rsi
    bf13:	48 89 df             	mov    %rbx,%rdi
    bf16:	e8 85 ef ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    bf1b:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    bf1e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    bf22:	74 0e                	je     bf32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    bf24:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bf28:	48 89 c7             	mov    %rax,%rdi
    bf2b:	e8 4b f4 ff ff       	call   b37b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    bf30:	eb 0c                	jmp    bf3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    bf32:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bf36:	48 89 c7             	mov    %rax,%rdi
    bf39:	e8 2b f4 ff ff       	call   b369 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    bf3e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    bf42:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bf46:	48 85 c0             	test   %rax,%rax
    bf49:	75 a6                	jne    bef1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    bf4b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    bf4f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    bf53:	48 89 d6             	mov    %rdx,%rsi
    bf56:	48 89 c7             	mov    %rax,%rdi
    bf59:	e8 24 fb ff ff       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    bf5e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    bf62:	74 54                	je     bfb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    bf64:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bf68:	48 89 c7             	mov    %rax,%rdi
    bf6b:	e8 54 04 00 00       	call   c3c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    bf70:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    bf74:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    bf78:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    bf7c:	48 89 d6             	mov    %rdx,%rsi
    bf7f:	48 89 c7             	mov    %rax,%rdi
    bf82:	e8 bd ee ff ff       	call   ae44 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    bf87:	84 c0                	test   %al,%al
    bf89:	74 21                	je     bfac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    bf8b:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    bf8f:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    bf93:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    bf97:	48 89 ce             	mov    %rcx,%rsi
    bf9a:	48 89 c7             	mov    %rax,%rdi
    bf9d:	e8 4c 04 00 00       	call   c3ee <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    bfa2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    bfa6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    bfaa:	eb 7d                	jmp    c029 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    bfac:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    bfb0:	48 89 c7             	mov    %rax,%rdi
    bfb3:	e8 ce 00 00 00       	call   c086 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    bfb8:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    bfbc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    bfc0:	48 89 c7             	mov    %rax,%rdi
    bfc3:	e8 a8 fe ff ff       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    bfc8:	48 89 c1             	mov    %rax,%rcx
    bfcb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    bfcf:	48 89 c2             	mov    %rax,%rdx
    bfd2:	48 89 ce             	mov    %rcx,%rsi
    bfd5:	48 89 df             	mov    %rbx,%rdi
    bfd8:	e8 c3 ee ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    bfdd:	84 c0                	test   %al,%al
    bfdf:	74 21                	je     c002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    bfe1:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    bfe5:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    bfe9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bfed:	48 89 ce             	mov    %rcx,%rsi
    bff0:	48 89 c7             	mov    %rax,%rdi
    bff3:	e8 f6 03 00 00       	call   c3ee <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    bff8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bffc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c000:	eb 27                	jmp    c029 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    c002:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    c009:	00 
    c00a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    c00e:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    c012:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c016:	48 89 ce             	mov    %rcx,%rsi
    c019:	48 89 c7             	mov    %rax,%rdi
    c01c:	e8 69 fe ff ff       	call   be8a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    c021:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c025:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    c029:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c02d:	c9                   	leave
    c02e:	c3                   	ret
    c02f:	90                   	nop

000000000000c030 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    c030:	55                   	push   %rbp
    c031:	48 89 e5             	mov    %rsp,%rbp
    c034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    c038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c03c:	48 83 c0 18          	add    $0x18,%rax
    c040:	5d                   	pop    %rbp
    c041:	c3                   	ret

000000000000c042 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    c042:	55                   	push   %rbp
    c043:	48 89 e5             	mov    %rsp,%rbp
    c046:	48 83 ec 20          	sub    $0x20,%rsp
    c04a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c04e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c052:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    c056:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c05a:	48 89 c7             	mov    %rax,%rdi
    c05d:	e8 d0 03 00 00       	call   c432 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    c062:	48 8b 10             	mov    (%rax),%rdx
    c065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c069:	48 89 10             	mov    %rdx,(%rax)
    c06c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c070:	48 89 c7             	mov    %rax,%rdi
    c073:	e8 ba 03 00 00       	call   c432 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    c078:	48 8b 10             	mov    (%rax),%rdx
    c07b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c07f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c083:	90                   	nop
    c084:	c9                   	leave
    c085:	c3                   	ret

000000000000c086 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    c086:	55                   	push   %rbp
    c087:	48 89 e5             	mov    %rsp,%rbp
    c08a:	48 83 ec 10          	sub    $0x10,%rsp
    c08e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    c092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c096:	48 8b 00             	mov    (%rax),%rax
    c099:	48 89 c7             	mov    %rax,%rdi
    c09c:	e8 ff 71 ff ff       	call   32a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    c0a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c0a5:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    c0a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c0ac:	c9                   	leave
    c0ad:	c3                   	ret

000000000000c0ae <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c0ae:	55                   	push   %rbp
    c0af:	48 89 e5             	mov    %rsp,%rbp
    c0b2:	48 83 ec 10          	sub    $0x10,%rsp
    c0b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    c0ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0be:	48 8b 00             	mov    (%rax),%rax
    c0c1:	48 89 c7             	mov    %rax,%rdi
    c0c4:	e8 87 70 ff ff       	call   3150 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    c0c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c0cd:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    c0d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c0d4:	c9                   	leave
    c0d5:	c3                   	ret

000000000000c0d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    c0d6:	55                   	push   %rbp
    c0d7:	48 89 e5             	mov    %rsp,%rbp
    c0da:	48 83 ec 20          	sub    $0x20,%rsp
    c0de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    c0e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0e6:	48 89 c7             	mov    %rax,%rdi
    c0e9:	e8 52 03 00 00       	call   c440 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    c0ee:	48 89 c2             	mov    %rax,%rdx
    c0f1:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    c0f5:	48 89 d6             	mov    %rdx,%rsi
    c0f8:	48 89 c7             	mov    %rax,%rdi
    c0fb:	e8 5e 03 00 00       	call   c45e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    c100:	c9                   	leave
    c101:	c3                   	ret

000000000000c102 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    c102:	55                   	push   %rbp
    c103:	48 89 e5             	mov    %rsp,%rbp
    c106:	41 54                	push   %r12
    c108:	53                   	push   %rbx
    c109:	48 83 ec 30          	sub    $0x30,%rsp
    c10d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c111:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c115:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c119:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    c11d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c122:	75 43                	jne    c167 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    c124:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c128:	48 89 c7             	mov    %rax,%rdi
    c12b:	e8 82 fb ff ff       	call   bcb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    c130:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    c134:	74 31                	je     c167 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    c136:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c13a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c13e:	48 89 c7             	mov    %rax,%rdi
    c141:	e8 2a fd ff ff       	call   be70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    c146:	49 89 c4             	mov    %rax,%r12
    c149:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c14d:	48 89 c7             	mov    %rax,%rdi
    c150:	e8 81 ff ff ff       	call   c0d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    c155:	4c 89 e2             	mov    %r12,%rdx
    c158:	48 89 c6             	mov    %rax,%rsi
    c15b:	48 89 df             	mov    %rbx,%rdi
    c15e:	e8 3d ed ff ff       	call   aea0 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    c163:	84 c0                	test   %al,%al
    c165:	74 07                	je     c16e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    c167:	b8 01 00 00 00       	mov    $0x1,%eax
    c16c:	eb 05                	jmp    c173 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    c16e:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    c173:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    c176:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c17a:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    c17e:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    c182:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c186:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    c18a:	89 c7                	mov    %eax,%edi
    c18c:	e8 af 6e ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    c191:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c195:	48 8b 40 28          	mov    0x28(%rax),%rax
    c199:	48 8d 50 01          	lea    0x1(%rax),%rdx
    c19d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1a1:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    c1a5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c1a9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c1ad:	48 89 d6             	mov    %rdx,%rsi
    c1b0:	48 89 c7             	mov    %rax,%rdi
    c1b3:	e8 ca f8 ff ff       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    c1b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    c1bc:	48 83 c4 30          	add    $0x30,%rsp
    c1c0:	5b                   	pop    %rbx
    c1c1:	41 5c                	pop    %r12
    c1c3:	5d                   	pop    %rbp
    c1c4:	c3                   	ret
    c1c5:	90                   	nop

000000000000c1c6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c1c6:	55                   	push   %rbp
    c1c7:	48 89 e5             	mov    %rsp,%rbp
    c1ca:	48 83 ec 20          	sub    $0x20,%rsp
    c1ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c1da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c1e5:	00 
    c1e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1ea:	48 89 d6             	mov    %rdx,%rsi
    c1ed:	48 89 c7             	mov    %rax,%rdi
    c1f0:	e8 7b 70 ff ff       	call   3270 <_ZdlPvm@plt>
      }
    c1f5:	c9                   	leave
    c1f6:	c3                   	ret

000000000000c1f7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    c1f7:	55                   	push   %rbp
    c1f8:	48 89 e5             	mov    %rsp,%rbp
    c1fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c203:	90                   	nop
    c204:	5d                   	pop    %rbp
    c205:	c3                   	ret

000000000000c206 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    c206:	55                   	push   %rbp
    c207:	48 89 e5             	mov    %rsp,%rbp
    c20a:	48 83 ec 20          	sub    $0x20,%rsp
    c20e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c216:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    c21a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c21e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c226:	48 89 ce             	mov    %rcx,%rsi
    c229:	48 89 c7             	mov    %rax,%rdi
    c22c:	e8 3f 02 00 00       	call   c470 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    c231:	c9                   	leave
    c232:	c3                   	ret
    c233:	90                   	nop

000000000000c234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    c234:	55                   	push   %rbp
    c235:	48 89 e5             	mov    %rsp,%rbp
    c238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c240:	5d                   	pop    %rbp
    c241:	c3                   	ret

000000000000c242 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    c242:	55                   	push   %rbp
    c243:	48 89 e5             	mov    %rsp,%rbp
    c246:	48 83 ec 10          	sub    $0x10,%rsp
    c24a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c24e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    c252:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c25a:	48 89 d6             	mov    %rdx,%rsi
    c25d:	48 89 c7             	mov    %rax,%rdi
    c260:	e8 73 02 00 00       	call   c4d8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    c265:	90                   	nop
    c266:	c9                   	leave
    c267:	c3                   	ret

000000000000c268 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    c268:	55                   	push   %rbp
    c269:	48 89 e5             	mov    %rsp,%rbp
    c26c:	48 83 ec 20          	sub    $0x20,%rsp
    c270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c274:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c278:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    c27c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c280:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c288:	48 89 ce             	mov    %rcx,%rsi
    c28b:	48 89 c7             	mov    %rax,%rdi
    c28e:	e8 65 02 00 00       	call   c4f8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    c293:	90                   	nop
    c294:	c9                   	leave
    c295:	c3                   	ret

000000000000c296 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    c296:	55                   	push   %rbp
    c297:	48 89 e5             	mov    %rsp,%rbp
    c29a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    c29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a2:	5d                   	pop    %rbp
    c2a3:	c3                   	ret

000000000000c2a4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    c2a4:	55                   	push   %rbp
    c2a5:	48 89 e5             	mov    %rsp,%rbp
    c2a8:	48 83 ec 10          	sub    $0x10,%rsp
    c2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    c2b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2b8:	48 89 c7             	mov    %rax,%rdi
    c2bb:	e8 e2 f1 ff ff       	call   b4a2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    c2c0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c2c4:	48 89 02             	mov    %rax,(%rdx)
    c2c7:	90                   	nop
    c2c8:	c9                   	leave
    c2c9:	c3                   	ret

000000000000c2ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    c2ca:	55                   	push   %rbp
    c2cb:	48 89 e5             	mov    %rsp,%rbp
    c2ce:	48 83 ec 10          	sub    $0x10,%rsp
    c2d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    c2d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2da:	48 89 c7             	mov    %rax,%rdi
    c2dd:	e8 52 ff ff ff       	call   c234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    c2e2:	be 01 00 00 00       	mov    $0x1,%esi
    c2e7:	48 89 c7             	mov    %rax,%rdi
    c2ea:	e8 43 02 00 00       	call   c532 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    c2ef:	c9                   	leave
    c2f0:	c3                   	ret
    c2f1:	90                   	nop

000000000000c2f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    c2f2:	55                   	push   %rbp
    c2f3:	48 89 e5             	mov    %rsp,%rbp
    c2f6:	41 56                	push   %r14
    c2f8:	41 55                	push   %r13
    c2fa:	41 54                	push   %r12
    c2fc:	53                   	push   %rbx
    c2fd:	48 83 ec 30          	sub    $0x30,%rsp
    c301:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c305:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c309:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c30d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    c311:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    c315:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c319:	48 89 c6             	mov    %rax,%rsi
    c31c:	bf 48 00 00 00       	mov    $0x48,%edi
    c321:	e8 95 83 ff ff       	call   46bb <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    c326:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c32a:	48 89 c7             	mov    %rax,%rdi
    c32d:	e8 cd f1 ff ff       	call   b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    c332:	49 89 c6             	mov    %rax,%r14
    c335:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c339:	48 89 c7             	mov    %rax,%rdi
    c33c:	e8 b0 f1 ff ff       	call   b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    c341:	49 89 c5             	mov    %rax,%r13
    c344:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c348:	48 89 c7             	mov    %rax,%rdi
    c34b:	e8 93 f1 ff ff       	call   b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    c350:	49 89 c4             	mov    %rax,%r12
    c353:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c357:	48 89 c7             	mov    %rax,%rdi
    c35a:	e8 fd f0 ff ff       	call   b45c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    c35f:	48 89 c3             	mov    %rax,%rbx
    c362:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c366:	48 89 c7             	mov    %rax,%rdi
    c369:	e8 c6 fe ff ff       	call   c234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    c36e:	4d 89 f0             	mov    %r14,%r8
    c371:	4c 89 e9             	mov    %r13,%rcx
    c374:	4c 89 e2             	mov    %r12,%rdx
    c377:	48 89 de             	mov    %rbx,%rsi
    c37a:	48 89 c7             	mov    %rax,%rdi
    c37d:	e8 da 01 00 00       	call   c55c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    c382:	eb 33                	jmp    c3b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    c384:	48 89 c7             	mov    %rax,%rdi
    c387:	e8 34 6d ff ff       	call   30c0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    c38c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c390:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c394:	48 89 d6             	mov    %rdx,%rsi
    c397:	48 89 c7             	mov    %rax,%rdi
    c39a:	e8 dd f8 ff ff       	call   bc7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    c39f:	e8 2c 70 ff ff       	call   33d0 <__cxa_rethrow@plt>
	  __catch(...)
    c3a4:	48 89 c3             	mov    %rax,%rbx
    c3a7:	e8 84 70 ff ff       	call   3430 <__cxa_end_catch@plt>
    c3ac:	48 89 d8             	mov    %rbx,%rax
    c3af:	48 89 c7             	mov    %rax,%rdi
    c3b2:	e8 a9 70 ff ff       	call   3460 <_Unwind_Resume@plt>
	}
    c3b7:	48 83 c4 30          	add    $0x30,%rsp
    c3bb:	5b                   	pop    %rbx
    c3bc:	41 5c                	pop    %r12
    c3be:	41 5d                	pop    %r13
    c3c0:	41 5e                	pop    %r14
    c3c2:	5d                   	pop    %rbp
    c3c3:	c3                   	ret

000000000000c3c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c3c4:	55                   	push   %rbp
    c3c5:	48 89 e5             	mov    %rsp,%rbp
    c3c8:	48 83 ec 20          	sub    $0x20,%rsp
    c3cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    c3d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3d4:	48 8b 50 18          	mov    0x18(%rax),%rdx
    c3d8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c3dc:	48 89 d6             	mov    %rdx,%rsi
    c3df:	48 89 c7             	mov    %rax,%rdi
    c3e2:	e8 9b f6 ff ff       	call   ba82 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    c3e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3eb:	c9                   	leave
    c3ec:	c3                   	ret
    c3ed:	90                   	nop

000000000000c3ee <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    c3ee:	55                   	push   %rbp
    c3ef:	48 89 e5             	mov    %rsp,%rbp
    c3f2:	48 83 ec 20          	sub    $0x20,%rsp
    c3f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    c402:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c406:	48 89 c7             	mov    %rax,%rdi
    c409:	e8 ba 01 00 00       	call   c5c8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    c40e:	48 8b 10             	mov    (%rax),%rdx
    c411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c415:	48 89 10             	mov    %rdx,(%rax)
    c418:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c41c:	48 89 c7             	mov    %rax,%rdi
    c41f:	e8 0e 00 00 00       	call   c432 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    c424:	48 8b 10             	mov    (%rax),%rdx
    c427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c42b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c42f:	90                   	nop
    c430:	c9                   	leave
    c431:	c3                   	ret

000000000000c432 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c432:	55                   	push   %rbp
    c433:	48 89 e5             	mov    %rsp,%rbp
    c436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c43e:	5d                   	pop    %rbp
    c43f:	c3                   	ret

000000000000c440 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    c440:	55                   	push   %rbp
    c441:	48 89 e5             	mov    %rsp,%rbp
    c444:	48 83 ec 10          	sub    $0x10,%rsp
    c448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    c44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c450:	48 83 c0 20          	add    $0x20,%rax
    c454:	48 89 c7             	mov    %rax,%rdi
    c457:	e8 7a 01 00 00       	call   c5d6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    c45c:	c9                   	leave
    c45d:	c3                   	ret

000000000000c45e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    c45e:	55                   	push   %rbp
    c45f:	48 89 e5             	mov    %rsp,%rbp
    c462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c466:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    c46a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c46e:	5d                   	pop    %rbp
    c46f:	c3                   	ret

000000000000c470 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    c470:	55                   	push   %rbp
    c471:	48 89 e5             	mov    %rsp,%rbp
    c474:	53                   	push   %rbx
    c475:	48 83 ec 28          	sub    $0x28,%rsp
    c479:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c47d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c481:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    c485:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c489:	48 89 c7             	mov    %rax,%rdi
    c48c:	e8 5f 01 00 00       	call   c5f0 <_ZSt12__miter_baseIPKPKcET_S4_>
    c491:	48 89 c3             	mov    %rax,%rbx
    c494:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c498:	48 89 c7             	mov    %rax,%rdi
    c49b:	e8 50 01 00 00       	call   c5f0 <_ZSt12__miter_baseIPKPKcET_S4_>
    c4a0:	48 89 c1             	mov    %rax,%rcx
    c4a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4a7:	48 89 c2             	mov    %rax,%rdx
    c4aa:	48 89 de             	mov    %rbx,%rsi
    c4ad:	48 89 cf             	mov    %rcx,%rdi
    c4b0:	e8 49 01 00 00       	call   c5fe <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    c4b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c4b9:	c9                   	leave
    c4ba:	c3                   	ret
    c4bb:	90                   	nop

000000000000c4bc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    c4bc:	55                   	push   %rbp
    c4bd:	48 89 e5             	mov    %rsp,%rbp
    c4c0:	48 83 ec 10          	sub    $0x10,%rsp
    c4c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4cc:	48 89 c7             	mov    %rax,%rdi
    c4cf:	e8 5c 6c ff ff       	call   3130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    c4d4:	90                   	nop
    c4d5:	c9                   	leave
    c4d6:	c3                   	ret
    c4d7:	90                   	nop

000000000000c4d8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    c4d8:	55                   	push   %rbp
    c4d9:	48 89 e5             	mov    %rsp,%rbp
    c4dc:	48 83 ec 10          	sub    $0x10,%rsp
    c4e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    c4e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4ec:	48 89 c7             	mov    %rax,%rdi
    c4ef:	e8 c8 ff ff ff       	call   c4bc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    c4f4:	90                   	nop
    c4f5:	c9                   	leave
    c4f6:	c3                   	ret
    c4f7:	90                   	nop

000000000000c4f8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c4f8:	55                   	push   %rbp
    c4f9:	48 89 e5             	mov    %rsp,%rbp
    c4fc:	48 83 ec 20          	sub    $0x20,%rsp
    c500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c504:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c508:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c50c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c510:	48 89 d0             	mov    %rdx,%rax
    c513:	48 c1 e0 03          	shl    $0x3,%rax
    c517:	48 01 d0             	add    %rdx,%rax
    c51a:	48 c1 e0 03          	shl    $0x3,%rax
    c51e:	48 89 c2             	mov    %rax,%rdx
    c521:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c525:	48 89 d6             	mov    %rdx,%rsi
    c528:	48 89 c7             	mov    %rax,%rdi
    c52b:	e8 40 6d ff ff       	call   3270 <_ZdlPvm@plt>
      }
    c530:	c9                   	leave
    c531:	c3                   	ret

000000000000c532 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    c532:	55                   	push   %rbp
    c533:	48 89 e5             	mov    %rsp,%rbp
    c536:	48 83 ec 10          	sub    $0x10,%rsp
    c53a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c53e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    c542:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c54a:	ba 00 00 00 00       	mov    $0x0,%edx
    c54f:	48 89 ce             	mov    %rcx,%rsi
    c552:	48 89 c7             	mov    %rax,%rdi
    c555:	e8 0e 01 00 00       	call   c668 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    c55a:	c9                   	leave
    c55b:	c3                   	ret

000000000000c55c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    c55c:	55                   	push   %rbp
    c55d:	48 89 e5             	mov    %rsp,%rbp
    c560:	41 54                	push   %r12
    c562:	53                   	push   %rbx
    c563:	48 83 ec 30          	sub    $0x30,%rsp
    c567:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c56b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c56f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c573:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    c577:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    c57b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c57f:	48 89 c7             	mov    %rax,%rdi
    c582:	e8 78 ef ff ff       	call   b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    c587:	49 89 c4             	mov    %rax,%r12
    c58a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c58e:	48 89 c7             	mov    %rax,%rdi
    c591:	e8 5b ef ff ff       	call   b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    c596:	48 89 c3             	mov    %rax,%rbx
    c599:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c59d:	48 89 c7             	mov    %rax,%rdi
    c5a0:	e8 3e ef ff ff       	call   b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    c5a5:	48 89 c2             	mov    %rax,%rdx
    c5a8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c5ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5b0:	4d 89 e0             	mov    %r12,%r8
    c5b3:	48 89 d9             	mov    %rbx,%rcx
    c5b6:	48 89 c7             	mov    %rax,%rdi
    c5b9:	e8 3c 01 00 00       	call   c6fa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    c5be:	90                   	nop
    c5bf:	48 83 c4 30          	add    $0x30,%rsp
    c5c3:	5b                   	pop    %rbx
    c5c4:	41 5c                	pop    %r12
    c5c6:	5d                   	pop    %rbp
    c5c7:	c3                   	ret

000000000000c5c8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c5c8:	55                   	push   %rbp
    c5c9:	48 89 e5             	mov    %rsp,%rbp
    c5cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c5d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d4:	5d                   	pop    %rbp
    c5d5:	c3                   	ret

000000000000c5d6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    c5d6:	55                   	push   %rbp
    c5d7:	48 89 e5             	mov    %rsp,%rbp
    c5da:	48 83 ec 10          	sub    $0x10,%rsp
    c5de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    c5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e6:	48 89 c7             	mov    %rax,%rdi
    c5e9:	e8 bc 01 00 00       	call   c7aa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    c5ee:	c9                   	leave
    c5ef:	c3                   	ret

000000000000c5f0 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    c5f0:	55                   	push   %rbp
    c5f1:	48 89 e5             	mov    %rsp,%rbp
    c5f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    c5f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5fc:	5d                   	pop    %rbp
    c5fd:	c3                   	ret

000000000000c5fe <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    c5fe:	55                   	push   %rbp
    c5ff:	48 89 e5             	mov    %rsp,%rbp
    c602:	41 54                	push   %r12
    c604:	53                   	push   %rbx
    c605:	48 83 ec 20          	sub    $0x20,%rsp
    c609:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c60d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c611:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    c615:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c619:	48 89 c7             	mov    %rax,%rdi
    c61c:	e8 b1 b3 ff ff       	call   79d2 <_ZSt12__niter_baseIPPKcET_S3_>
    c621:	49 89 c4             	mov    %rax,%r12
    c624:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c628:	48 89 c7             	mov    %rax,%rdi
    c62b:	e8 88 01 00 00       	call   c7b8 <_ZSt12__niter_baseIPKPKcET_S4_>
    c630:	48 89 c3             	mov    %rax,%rbx
    c633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c637:	48 89 c7             	mov    %rax,%rdi
    c63a:	e8 79 01 00 00       	call   c7b8 <_ZSt12__niter_baseIPKPKcET_S4_>
    c63f:	4c 89 e2             	mov    %r12,%rdx
    c642:	48 89 de             	mov    %rbx,%rsi
    c645:	48 89 c7             	mov    %rax,%rdi
    c648:	e8 79 01 00 00       	call   c7c6 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    c64d:	48 89 c2             	mov    %rax,%rdx
    c650:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c654:	48 89 d6             	mov    %rdx,%rsi
    c657:	48 89 c7             	mov    %rax,%rdi
    c65a:	e8 94 01 00 00       	call   c7f3 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    c65f:	48 83 c4 20          	add    $0x20,%rsp
    c663:	5b                   	pop    %rbx
    c664:	41 5c                	pop    %r12
    c666:	5d                   	pop    %rbp
    c667:	c3                   	ret

000000000000c668 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c668:	55                   	push   %rbp
    c669:	48 89 e5             	mov    %rsp,%rbp
    c66c:	48 83 ec 20          	sub    $0x20,%rsp
    c670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c674:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c678:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c67c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c680:	48 89 c7             	mov    %rax,%rdi
    c683:	e8 7e 01 00 00       	call   c806 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    c688:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c68c:	0f 92 c0             	setb   %al
    c68f:	0f b6 c0             	movzbl %al,%eax
    c692:	48 85 c0             	test   %rax,%rax
    c695:	0f 95 c0             	setne  %al
    c698:	84 c0                	test   %al,%al
    c69a:	74 1a                	je     c6b6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c69c:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    c6a3:	38 8e 03 
    c6a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c6aa:	73 05                	jae    c6b1 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c6ac:	e8 ef 6a ff ff       	call   31a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c6b1:	e8 da 69 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c6b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c6ba:	48 89 d0             	mov    %rdx,%rax
    c6bd:	48 c1 e0 03          	shl    $0x3,%rax
    c6c1:	48 01 d0             	add    %rdx,%rax
    c6c4:	48 c1 e0 03          	shl    $0x3,%rax
    c6c8:	48 89 c7             	mov    %rax,%rdi
    c6cb:	e8 90 6b ff ff       	call   3260 <_Znwm@plt>
    c6d0:	90                   	nop
      }
    c6d1:	c9                   	leave
    c6d2:	c3                   	ret
    c6d3:	90                   	nop

000000000000c6d4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    c6d4:	55                   	push   %rbp
    c6d5:	48 89 e5             	mov    %rsp,%rbp
    c6d8:	48 83 ec 10          	sub    $0x10,%rsp
    c6dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c6ec:	48 89 d6             	mov    %rdx,%rsi
    c6ef:	48 89 c7             	mov    %rax,%rdi
    c6f2:	e8 23 01 00 00       	call   c81a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    c6f7:	90                   	nop
    c6f8:	c9                   	leave
    c6f9:	c3                   	ret

000000000000c6fa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    c6fa:	55                   	push   %rbp
    c6fb:	48 89 e5             	mov    %rsp,%rbp
    c6fe:	41 56                	push   %r14
    c700:	41 55                	push   %r13
    c702:	41 54                	push   %r12
    c704:	53                   	push   %rbx
    c705:	48 83 ec 40          	sub    $0x40,%rsp
    c709:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c70d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    c711:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    c715:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    c719:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    c71d:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    c721:	48 89 de             	mov    %rbx,%rsi
    c724:	bf 28 00 00 00       	mov    $0x28,%edi
    c729:	e8 8d 7f ff ff       	call   46bb <_ZnwmPv>
    c72e:	49 89 c4             	mov    %rax,%r12
    c731:	41 be 01 00 00 00    	mov    $0x1,%r14d
    c737:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c73b:	48 89 c7             	mov    %rax,%rdi
    c73e:	e8 bc ed ff ff       	call   b4ff <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    c743:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c747:	48 89 c7             	mov    %rax,%rdi
    c74a:	e8 a2 ed ff ff       	call   b4f1 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    c74f:	48 89 c2             	mov    %rax,%rdx
    c752:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c756:	48 89 d6             	mov    %rdx,%rsi
    c759:	48 89 c7             	mov    %rax,%rdi
    c75c:	e8 73 ff ff ff       	call   c6d4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    c761:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c765:	48 89 c7             	mov    %rax,%rdi
    c768:	e8 76 ed ff ff       	call   b4e3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    c76d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    c771:	48 89 c6             	mov    %rax,%rsi
    c774:	4c 89 e7             	mov    %r12,%rdi
    c777:	e8 bc 00 00 00       	call   c838 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    c77c:	eb 1e                	jmp    c79c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    c77e:	49 89 c5             	mov    %rax,%r13
    c781:	45 84 f6             	test   %r14b,%r14b
    c784:	74 0b                	je     c791 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    c786:	48 89 de             	mov    %rbx,%rsi
    c789:	4c 89 e7             	mov    %r12,%rdi
    c78c:	e8 a0 d5 ff ff       	call   9d31 <_ZdlPvS_>
    c791:	4c 89 e8             	mov    %r13,%rax
    c794:	48 89 c7             	mov    %rax,%rdi
    c797:	e8 c4 6c ff ff       	call   3460 <_Unwind_Resume@plt>
    c79c:	48 83 c4 40          	add    $0x40,%rsp
    c7a0:	5b                   	pop    %rbx
    c7a1:	41 5c                	pop    %r12
    c7a3:	41 5d                	pop    %r13
    c7a5:	41 5e                	pop    %r14
    c7a7:	5d                   	pop    %rbp
    c7a8:	c3                   	ret
    c7a9:	90                   	nop

000000000000c7aa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    c7aa:	55                   	push   %rbp
    c7ab:	48 89 e5             	mov    %rsp,%rbp
    c7ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    c7b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7b6:	5d                   	pop    %rbp
    c7b7:	c3                   	ret

000000000000c7b8 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    c7b8:	55                   	push   %rbp
    c7b9:	48 89 e5             	mov    %rsp,%rbp
    c7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    c7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c4:	5d                   	pop    %rbp
    c7c5:	c3                   	ret

000000000000c7c6 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    c7c6:	55                   	push   %rbp
    c7c7:	48 89 e5             	mov    %rsp,%rbp
    c7ca:	48 83 ec 20          	sub    $0x20,%rsp
    c7ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    c7da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c7e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e6:	48 89 ce             	mov    %rcx,%rsi
    c7e9:	48 89 c7             	mov    %rax,%rdi
    c7ec:	e8 71 00 00 00       	call   c862 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    c7f1:	c9                   	leave
    c7f2:	c3                   	ret

000000000000c7f3 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    c7f3:	55                   	push   %rbp
    c7f4:	48 89 e5             	mov    %rsp,%rbp
    c7f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    c7ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c803:	5d                   	pop    %rbp
    c804:	c3                   	ret
    c805:	90                   	nop

000000000000c806 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c806:	55                   	push   %rbp
    c807:	48 89 e5             	mov    %rsp,%rbp
    c80a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c80e:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    c815:	1c c7 01 
      }
    c818:	5d                   	pop    %rbp
    c819:	c3                   	ret

000000000000c81a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    c81a:	55                   	push   %rbp
    c81b:	48 89 e5             	mov    %rsp,%rbp
    c81e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c822:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    c826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c82e:	48 8b 12             	mov    (%rdx),%rdx
    c831:	48 89 10             	mov    %rdx,(%rax)
      { }
    c834:	90                   	nop
    c835:	5d                   	pop    %rbp
    c836:	c3                   	ret
    c837:	90                   	nop

000000000000c838 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    c838:	55                   	push   %rbp
    c839:	48 89 e5             	mov    %rsp,%rbp
    c83c:	48 83 ec 20          	sub    $0x20,%rsp
    c840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c844:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    c848:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    c84c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c854:	48 89 ce             	mov    %rcx,%rsi
    c857:	48 89 c7             	mov    %rax,%rdi
    c85a:	e8 31 00 00 00       	call   c890 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    c85f:	90                   	nop
    c860:	c9                   	leave
    c861:	c3                   	ret

000000000000c862 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    c862:	55                   	push   %rbp
    c863:	48 89 e5             	mov    %rsp,%rbp
    c866:	48 83 ec 20          	sub    $0x20,%rsp
    c86a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c86e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c872:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    c876:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c87a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c87e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c882:	48 89 ce             	mov    %rcx,%rsi
    c885:	48 89 c7             	mov    %rax,%rdi
    c888:	e8 4d 00 00 00       	call   c8da <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    c88d:	c9                   	leave
    c88e:	c3                   	ret
    c88f:	90                   	nop

000000000000c890 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    c890:	55                   	push   %rbp
    c891:	48 89 e5             	mov    %rsp,%rbp
    c894:	53                   	push   %rbx
    c895:	48 83 ec 28          	sub    $0x28,%rsp
    c899:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c89d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c8a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    c8a5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c8a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c8ad:	48 89 c7             	mov    %rax,%rdi
    c8b0:	e8 84 00 00 00       	call   c939 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    c8b5:	48 89 c7             	mov    %rax,%rdi
    c8b8:	e8 96 00 00 00       	call   c953 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    c8bd:	48 89 c6             	mov    %rax,%rsi
    c8c0:	48 89 df             	mov    %rbx,%rdi
    c8c3:	e8 58 68 ff ff       	call   3120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    c8c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8cc:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    c8d3:	90                   	nop
    c8d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c8d8:	c9                   	leave
    c8d9:	c3                   	ret

000000000000c8da <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    c8da:	55                   	push   %rbp
    c8db:	48 89 e5             	mov    %rsp,%rbp
    c8de:	48 83 ec 30          	sub    $0x30,%rsp
    c8e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c8ea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    c8ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c8f2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    c8f6:	48 c1 f8 03          	sar    $0x3,%rax
    c8fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    c8fe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c903:	74 1f                	je     c924 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    c905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c909:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c910:	00 
    c911:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c915:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c919:	48 89 ce             	mov    %rcx,%rsi
    c91c:	48 89 c7             	mov    %rax,%rdi
    c91f:	e8 fc 6a ff ff       	call   3420 <memmove@plt>
	  return __result + _Num;
    c924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c928:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c92f:	00 
    c930:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c934:	48 01 d0             	add    %rdx,%rax
	}
    c937:	c9                   	leave
    c938:	c3                   	ret

000000000000c939 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    c939:	55                   	push   %rbp
    c93a:	48 89 e5             	mov    %rsp,%rbp
    c93d:	48 83 ec 10          	sub    $0x10,%rsp
    c941:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    c945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c949:	48 89 c7             	mov    %rax,%rdi
    c94c:	e8 10 00 00 00       	call   c961 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    c951:	c9                   	leave
    c952:	c3                   	ret

000000000000c953 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c953:	55                   	push   %rbp
    c954:	48 89 e5             	mov    %rsp,%rbp
    c957:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c95b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95f:	5d                   	pop    %rbp
    c960:	c3                   	ret

000000000000c961 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    c961:	55                   	push   %rbp
    c962:	48 89 e5             	mov    %rsp,%rbp
    c965:	48 83 ec 10          	sub    $0x10,%rsp
    c969:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    c96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c971:	48 89 c7             	mov    %rax,%rdi
    c974:	e8 02 00 00 00       	call   c97b <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    c979:	c9                   	leave
    c97a:	c3                   	ret

000000000000c97b <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c97b:	55                   	push   %rbp
    c97c:	48 89 e5             	mov    %rsp,%rbp
    c97f:	48 83 ec 10          	sub    $0x10,%rsp
    c983:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c98b:	48 89 c7             	mov    %rax,%rdi
    c98e:	e8 02 00 00 00       	call   c995 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    c993:	c9                   	leave
    c994:	c3                   	ret

000000000000c995 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c995:	55                   	push   %rbp
    c996:	48 89 e5             	mov    %rsp,%rbp
    c999:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c99d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a1:	48 8b 00             	mov    (%rax),%rax
    c9a4:	5d                   	pop    %rbp
    c9a5:	c3                   	ret

000000000000c9a6 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    c9a6:	55                   	push   %rbp
    c9a7:	48 89 e5             	mov    %rsp,%rbp
    c9aa:	48 83 ec 10          	sub    $0x10,%rsp
    c9ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9b2:	48 8d 15 27 b3 00 00 	lea    0xb327(%rip),%rdx        # 17ce0 <_ZTVSt19bad_optional_access+0x10>
    c9b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9bd:	48 89 10             	mov    %rdx,(%rax)
    c9c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c4:	48 89 c7             	mov    %rax,%rdi
    c9c7:	e8 c4 6a ff ff       	call   3490 <_ZNSt9exceptionD2Ev@plt>
    c9cc:	90                   	nop
    c9cd:	c9                   	leave
    c9ce:	c3                   	ret
    c9cf:	90                   	nop

000000000000c9d0 <_ZNSt19bad_optional_accessD0Ev>:
    c9d0:	55                   	push   %rbp
    c9d1:	48 89 e5             	mov    %rsp,%rbp
    c9d4:	48 83 ec 10          	sub    $0x10,%rsp
    c9d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9e0:	48 89 c7             	mov    %rax,%rdi
    c9e3:	e8 be ff ff ff       	call   c9a6 <_ZNSt19bad_optional_accessD1Ev>
    c9e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ec:	be 08 00 00 00       	mov    $0x8,%esi
    c9f1:	48 89 c7             	mov    %rax,%rdi
    c9f4:	e8 77 68 ff ff       	call   3270 <_ZdlPvm@plt>
    c9f9:	c9                   	leave
    c9fa:	c3                   	ret

Disassembly of section .fini:

000000000000c9fc <_fini>:
    c9fc:	48 83 ec 08          	sub    $0x8,%rsp
    ca00:	48 83 c4 08          	add    $0x8,%rsp
    ca04:	c3                   	ret
