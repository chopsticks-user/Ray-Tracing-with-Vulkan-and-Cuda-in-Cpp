
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	48 83 ec 08          	sub    $0x8,%rsp
    5004:	48 8b 05 ad 0f 01 00 	mov    0x10fad(%rip),%rax        # 15fb8 <__gmon_start__@Base>
    500b:	48 85 c0             	test   %rax,%rax
    500e:	74 02                	je     5012 <_init+0x12>
    5010:	ff d0                	call   *%rax
    5012:	48 83 c4 08          	add    $0x8,%rsp
    5016:	c3                   	ret

Disassembly of section .plt:

0000000000005020 <_Znam@plt-0x10>:
    5020:	ff 35 ca 0f 01 00    	push   0x10fca(%rip)        # 15ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 cc 0f 01 00    	jmp    *0x10fcc(%rip)        # 15ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <_Znam@plt>:
    5030:	ff 25 ca 0f 01 00    	jmp    *0x10fca(%rip)        # 16000 <_Znam@GLIBCXX_3.4>
    5036:	68 00 00 00 00       	push   $0x0
    503b:	e9 e0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005040 <_ZNSaIcED2Ev@plt>:
    5040:	ff 25 c2 0f 01 00    	jmp    *0x10fc2(%rip)        # 16008 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    5046:	68 01 00 00 00       	push   $0x1
    504b:	e9 d0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005050 <glfwDestroyWindow@plt>:
    5050:	ff 25 ba 0f 01 00    	jmp    *0x10fba(%rip)        # 16010 <glfwDestroyWindow@Base>
    5056:	68 02 00 00 00       	push   $0x2
    505b:	e9 c0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005060 <_ZNSolsEPFRSt8ios_baseS0_E@plt>:
    5060:	ff 25 b2 0f 01 00    	jmp    *0x10fb2(%rip)        # 16018 <_ZNSolsEPFRSt8ios_baseS0_E@GLIBCXX_3.4>
    5066:	68 03 00 00 00       	push   $0x3
    506b:	e9 b0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005070 <_ZSt17__throw_bad_allocv@plt>:
    5070:	ff 25 aa 0f 01 00    	jmp    *0x10faa(%rip)        # 16020 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    5076:	68 04 00 00 00       	push   $0x4
    507b:	e9 a0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005080 <_ZNSt13runtime_errorC1EPKc@plt>:
    5080:	ff 25 a2 0f 01 00    	jmp    *0x10fa2(%rip)        # 16028 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    5086:	68 05 00 00 00       	push   $0x5
    508b:	e9 90 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005090 <__cxa_begin_catch@plt>:
    5090:	ff 25 9a 0f 01 00    	jmp    *0x10f9a(%rip)        # 16030 <__cxa_begin_catch@CXXABI_1.3>
    5096:	68 06 00 00 00       	push   $0x6
    509b:	e9 80 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050a0 <strlen@plt>:
    50a0:	ff 25 92 0f 01 00    	jmp    *0x10f92(%rip)        # 16038 <strlen@GLIBC_2.2.5>
    50a6:	68 07 00 00 00       	push   $0x7
    50ab:	e9 70 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050b0 <__cxa_allocate_exception@plt>:
    50b0:	ff 25 8a 0f 01 00    	jmp    *0x10f8a(%rip)        # 16040 <__cxa_allocate_exception@CXXABI_1.3>
    50b6:	68 08 00 00 00       	push   $0x8
    50bb:	e9 60 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050c0 <_ZSt20__throw_length_errorPKc@plt>:
    50c0:	ff 25 82 0f 01 00    	jmp    *0x10f82(%rip)        # 16048 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    50c6:	68 09 00 00 00       	push   $0x9
    50cb:	e9 50 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050d0 <__cxa_guard_release@plt>:
    50d0:	ff 25 7a 0f 01 00    	jmp    *0x10f7a(%rip)        # 16050 <__cxa_guard_release@CXXABI_1.3>
    50d6:	68 0a 00 00 00       	push   $0xa
    50db:	e9 40 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050e0 <__assert_fail@plt>:
    50e0:	ff 25 72 0f 01 00    	jmp    *0x10f72(%rip)        # 16058 <__assert_fail@GLIBC_2.2.5>
    50e6:	68 0b 00 00 00       	push   $0xb
    50eb:	e9 30 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    50f0:	ff 25 6a 0f 01 00    	jmp    *0x10f6a(%rip)        # 16060 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.26>
    50f6:	68 0c 00 00 00       	push   $0xc
    50fb:	e9 20 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005100 <_ZSt19__throw_logic_errorPKc@plt>:
    5100:	ff 25 62 0f 01 00    	jmp    *0x10f62(%rip)        # 16068 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    5106:	68 0d 00 00 00       	push   $0xd
    510b:	e9 10 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005110 <__cxa_free_exception@plt>:
    5110:	ff 25 5a 0f 01 00    	jmp    *0x10f5a(%rip)        # 16070 <__cxa_free_exception@CXXABI_1.3>
    5116:	68 0e 00 00 00       	push   $0xe
    511b:	e9 00 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005120 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    5120:	ff 25 52 0f 01 00    	jmp    *0x10f52(%rip)        # 16078 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    5126:	68 0f 00 00 00       	push   $0xf
    512b:	e9 f0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005130 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    5130:	ff 25 4a 0f 01 00    	jmp    *0x10f4a(%rip)        # 16080 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    5136:	68 10 00 00 00       	push   $0x10
    513b:	e9 e0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005140 <dlclose@plt>:
    5140:	ff 25 42 0f 01 00    	jmp    *0x10f42(%rip)        # 16088 <dlclose@GLIBC_2.34>
    5146:	68 11 00 00 00       	push   $0x11
    514b:	e9 d0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005150 <memcpy@plt>:
    5150:	ff 25 3a 0f 01 00    	jmp    *0x10f3a(%rip)        # 16090 <memcpy@GLIBC_2.14>
    5156:	68 12 00 00 00       	push   $0x12
    515b:	e9 c0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005160 <glfwWindowHint@plt>:
    5160:	ff 25 32 0f 01 00    	jmp    *0x10f32(%rip)        # 16098 <glfwWindowHint@Base>
    5166:	68 13 00 00 00       	push   $0x13
    516b:	e9 b0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005170 <_ZNSt12system_errorD2Ev@plt>:
    5170:	ff 25 2a 0f 01 00    	jmp    *0x10f2a(%rip)        # 160a0 <_ZNSt12system_errorD2Ev@GLIBCXX_3.4.11>
    5176:	68 14 00 00 00       	push   $0x14
    517b:	e9 a0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005180 <__cxa_atexit@plt>:
    5180:	ff 25 22 0f 01 00    	jmp    *0x10f22(%rip)        # 160a8 <__cxa_atexit@GLIBC_2.2.5>
    5186:	68 15 00 00 00       	push   $0x15
    518b:	e9 90 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005190 <dlsym@plt>:
    5190:	ff 25 1a 0f 01 00    	jmp    *0x10f1a(%rip)        # 160b0 <dlsym@GLIBC_2.34>
    5196:	68 16 00 00 00       	push   $0x16
    519b:	e9 80 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051a0 <_ZdlPv@plt>:
    51a0:	ff 25 12 0f 01 00    	jmp    *0x10f12(%rip)        # 160b8 <_ZdlPv@GLIBCXX_3.4>
    51a6:	68 17 00 00 00       	push   $0x17
    51ab:	e9 70 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051b0 <glfwPollEvents@plt>:
    51b0:	ff 25 0a 0f 01 00    	jmp    *0x10f0a(%rip)        # 160c0 <glfwPollEvents@Base>
    51b6:	68 18 00 00 00       	push   $0x18
    51bb:	e9 60 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    51c0:	ff 25 02 0f 01 00    	jmp    *0x10f02(%rip)        # 160c8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    51c6:	68 19 00 00 00       	push   $0x19
    51cb:	e9 50 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051d0 <_Znwm@plt>:
    51d0:	ff 25 fa 0e 01 00    	jmp    *0x10efa(%rip)        # 160d0 <_Znwm@GLIBCXX_3.4>
    51d6:	68 1a 00 00 00       	push   $0x1a
    51db:	e9 40 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051e0 <_ZdlPvm@plt>:
    51e0:	ff 25 f2 0e 01 00    	jmp    *0x10ef2(%rip)        # 160d8 <_ZdlPvm@CXXABI_1.3.9>
    51e6:	68 1b 00 00 00       	push   $0x1b
    51eb:	e9 30 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051f0 <glfwTerminate@plt>:
    51f0:	ff 25 ea 0e 01 00    	jmp    *0x10eea(%rip)        # 160e0 <glfwTerminate@Base>
    51f6:	68 1c 00 00 00       	push   $0x1c
    51fb:	e9 20 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005200 <_ZNSolsEPFRSoS_E@plt>:
    5200:	ff 25 e2 0e 01 00    	jmp    *0x10ee2(%rip)        # 160e8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    5206:	68 1d 00 00 00       	push   $0x1d
    520b:	e9 10 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005210 <_ZNSaIcED1Ev@plt>:
    5210:	ff 25 da 0e 01 00    	jmp    *0x10eda(%rip)        # 160f0 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    5216:	68 1e 00 00 00       	push   $0x1e
    521b:	e9 00 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005220 <glfwInit@plt>:
    5220:	ff 25 d2 0e 01 00    	jmp    *0x10ed2(%rip)        # 160f8 <glfwInit@Base>
    5226:	68 1f 00 00 00       	push   $0x1f
    522b:	e9 f0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005230 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    5230:	ff 25 ca 0e 01 00    	jmp    *0x10eca(%rip)        # 16100 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    5236:	68 20 00 00 00       	push   $0x20
    523b:	e9 e0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005240 <_ZdaPv@plt>:
    5240:	ff 25 c2 0e 01 00    	jmp    *0x10ec2(%rip)        # 16108 <_ZdaPv@GLIBCXX_3.4>
    5246:	68 21 00 00 00       	push   $0x21
    524b:	e9 d0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005250 <_ZNSolsEj@plt>:
    5250:	ff 25 ba 0e 01 00    	jmp    *0x10eba(%rip)        # 16110 <_ZNSolsEj@GLIBCXX_3.4>
    5256:	68 22 00 00 00       	push   $0x22
    525b:	e9 c0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005260 <_ZNKSt13runtime_error4whatEv@plt>:
    5260:	ff 25 b2 0e 01 00    	jmp    *0x10eb2(%rip)        # 16118 <_ZNKSt13runtime_error4whatEv@GLIBCXX_3.4>
    5266:	68 23 00 00 00       	push   $0x23
    526b:	e9 b0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005270 <dlopen@plt>:
    5270:	ff 25 aa 0e 01 00    	jmp    *0x10eaa(%rip)        # 16120 <dlopen@GLIBC_2.34>
    5276:	68 24 00 00 00       	push   $0x24
    527b:	e9 a0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005280 <_ZNSaIcEC2ERKS_@plt>:
    5280:	ff 25 a2 0e 01 00    	jmp    *0x10ea2(%rip)        # 16128 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    5286:	68 25 00 00 00       	push   $0x25
    528b:	e9 90 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005290 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    5290:	ff 25 9a 0e 01 00    	jmp    *0x10e9a(%rip)        # 16130 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    5296:	68 26 00 00 00       	push   $0x26
    529b:	e9 80 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052a0 <_ZNSt8ios_base4InitC1Ev@plt>:
    52a0:	ff 25 92 0e 01 00    	jmp    *0x10e92(%rip)        # 16138 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    52a6:	68 27 00 00 00       	push   $0x27
    52ab:	e9 70 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052b0 <glfwCreateWindow@plt>:
    52b0:	ff 25 8a 0e 01 00    	jmp    *0x10e8a(%rip)        # 16140 <glfwCreateWindow@Base>
    52b6:	68 28 00 00 00       	push   $0x28
    52bb:	e9 60 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052c0 <memmove@plt>:
    52c0:	ff 25 82 0e 01 00    	jmp    *0x10e82(%rip)        # 16148 <memmove@GLIBC_2.2.5>
    52c6:	68 29 00 00 00       	push   $0x29
    52cb:	e9 50 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052d0 <__cxa_end_catch@plt>:
    52d0:	ff 25 7a 0e 01 00    	jmp    *0x10e7a(%rip)        # 16150 <__cxa_end_catch@CXXABI_1.3>
    52d6:	68 2a 00 00 00       	push   $0x2a
    52db:	e9 40 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052e0 <__cxa_throw@plt>:
    52e0:	ff 25 72 0e 01 00    	jmp    *0x10e72(%rip)        # 16158 <__cxa_throw@CXXABI_1.3>
    52e6:	68 2b 00 00 00       	push   $0x2b
    52eb:	e9 30 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052f0 <_ZNSt3_V214error_categoryD2Ev@plt>:
    52f0:	ff 25 6a 0e 01 00    	jmp    *0x10e6a(%rip)        # 16160 <_ZNSt3_V214error_categoryD2Ev@GLIBCXX_3.4.21>
    52f6:	68 2c 00 00 00       	push   $0x2c
    52fb:	e9 20 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005300 <_Unwind_Resume@plt>:
    5300:	ff 25 62 0e 01 00    	jmp    *0x10e62(%rip)        # 16168 <_Unwind_Resume@GCC_3.0>
    5306:	68 2d 00 00 00       	push   $0x2d
    530b:	e9 10 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005310 <_ZNSaIcEC1Ev@plt>:
    5310:	ff 25 5a 0e 01 00    	jmp    *0x10e5a(%rip)        # 16170 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    5316:	68 2e 00 00 00       	push   $0x2e
    531b:	e9 00 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005320 <__cxa_guard_acquire@plt>:
    5320:	ff 25 52 0e 01 00    	jmp    *0x10e52(%rip)        # 16178 <__cxa_guard_acquire@CXXABI_1.3>
    5326:	68 2f 00 00 00       	push   $0x2f
    532b:	e9 f0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005330 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>:
    5330:	ff 25 4a 0e 01 00    	jmp    *0x10e4a(%rip)        # 16180 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@GLIBCXX_3.4.29>
    5336:	68 30 00 00 00       	push   $0x30
    533b:	e9 e0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005340 <glfwWindowShouldClose@plt>:
    5340:	ff 25 42 0e 01 00    	jmp    *0x10e42(%rip)        # 16188 <glfwWindowShouldClose@Base>
    5346:	68 31 00 00 00       	push   $0x31
    534b:	e9 d0 fc ff ff       	jmp    5020 <_init+0x20>

Disassembly of section .plt.got:

0000000000005350 <__cxa_finalize@plt>:
    5350:	ff 25 3a 0c 01 00    	jmp    *0x10c3a(%rip)        # 15f90 <__cxa_finalize@GLIBC_2.2.5>
    5356:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000005360 <_start>:
    5360:	31 ed                	xor    %ebp,%ebp
    5362:	49 89 d1             	mov    %rdx,%r9
    5365:	5e                   	pop    %rsi
    5366:	48 89 e2             	mov    %rsp,%rdx
    5369:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    536d:	50                   	push   %rax
    536e:	54                   	push   %rsp
    536f:	45 31 c0             	xor    %r8d,%r8d
    5372:	31 c9                	xor    %ecx,%ecx
    5374:	48 8d 3d c1 0b 00 00 	lea    0xbc1(%rip),%rdi        # 5f3c <main>
    537b:	ff 15 1f 0c 01 00    	call   *0x10c1f(%rip)        # 15fa0 <__libc_start_main@GLIBC_2.34>
    5381:	f4                   	hlt
    5382:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5389:	00 00 00 
    538c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005390 <deregister_tm_clones>:
    5390:	48 8d 3d 29 0e 01 00 	lea    0x10e29(%rip),%rdi        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    5397:	48 8d 05 22 0e 01 00 	lea    0x10e22(%rip),%rax        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    539e:	48 39 f8             	cmp    %rdi,%rax
    53a1:	74 15                	je     53b8 <deregister_tm_clones+0x28>
    53a3:	48 8b 05 06 0c 01 00 	mov    0x10c06(%rip),%rax        # 15fb0 <_ITM_deregisterTMCloneTable@Base>
    53aa:	48 85 c0             	test   %rax,%rax
    53ad:	74 09                	je     53b8 <deregister_tm_clones+0x28>
    53af:	ff e0                	jmp    *%rax
    53b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    53b8:	c3                   	ret
    53b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000053c0 <register_tm_clones>:
    53c0:	48 8d 3d f9 0d 01 00 	lea    0x10df9(%rip),%rdi        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    53c7:	48 8d 35 f2 0d 01 00 	lea    0x10df2(%rip),%rsi        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    53ce:	48 29 fe             	sub    %rdi,%rsi
    53d1:	48 89 f0             	mov    %rsi,%rax
    53d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    53d8:	48 c1 f8 03          	sar    $0x3,%rax
    53dc:	48 01 c6             	add    %rax,%rsi
    53df:	48 d1 fe             	sar    %rsi
    53e2:	74 14                	je     53f8 <register_tm_clones+0x38>
    53e4:	48 8b 05 d5 0b 01 00 	mov    0x10bd5(%rip),%rax        # 15fc0 <_ITM_registerTMCloneTable@Base>
    53eb:	48 85 c0             	test   %rax,%rax
    53ee:	74 08                	je     53f8 <register_tm_clones+0x38>
    53f0:	ff e0                	jmp    *%rax
    53f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    53f8:	c3                   	ret
    53f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005400 <__do_global_dtors_aux>:
    5400:	f3 0f 1e fa          	endbr64
    5404:	80 3d c5 0e 01 00 00 	cmpb   $0x0,0x10ec5(%rip)        # 162d0 <completed.0>
    540b:	75 2b                	jne    5438 <__do_global_dtors_aux+0x38>
    540d:	55                   	push   %rbp
    540e:	48 83 3d 7a 0b 01 00 	cmpq   $0x0,0x10b7a(%rip)        # 15f90 <__cxa_finalize@GLIBC_2.2.5>
    5415:	00 
    5416:	48 89 e5             	mov    %rsp,%rbp
    5419:	74 0c                	je     5427 <__do_global_dtors_aux+0x27>
    541b:	48 8b 3d 76 0d 01 00 	mov    0x10d76(%rip),%rdi        # 16198 <__dso_handle>
    5422:	e8 29 ff ff ff       	call   5350 <__cxa_finalize@plt>
    5427:	e8 64 ff ff ff       	call   5390 <deregister_tm_clones>
    542c:	c6 05 9d 0e 01 00 01 	movb   $0x1,0x10e9d(%rip)        # 162d0 <completed.0>
    5433:	5d                   	pop    %rbp
    5434:	c3                   	ret
    5435:	0f 1f 00             	nopl   (%rax)
    5438:	c3                   	ret
    5439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005440 <frame_dummy>:
    5440:	f3 0f 1e fa          	endbr64
    5444:	e9 77 ff ff ff       	jmp    53c0 <register_tm_clones>

0000000000005449 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
  };

  namespace
  {
    [[noreturn]] void throwResultException( Result result, char const * message )
    {
    5449:	55                   	push   %rbp
    544a:	48 89 e5             	mov    %rsp,%rbp
    544d:	41 54                	push   %r12
    544f:	53                   	push   %rbx
    5450:	48 83 ec 30          	sub    $0x30,%rsp
    5454:	89 7d cc             	mov    %edi,-0x34(%rbp)
    5457:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    545b:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    545f:	0f 89 28 07 00 00    	jns    5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5465:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    5469:	0f 8d 3d 01 00 00    	jge    55ac <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    546f:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    5476:	0f 84 19 05 00 00    	je     5995 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    547c:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    5483:	0f 8f 04 07 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5489:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    5490:	0f 84 37 05 00 00    	je     59cd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    5496:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    549d:	0f 8f ea 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54a3:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    54aa:	0f 84 55 05 00 00    	je     5a05 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    54b0:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    54b7:	0f 8f d0 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54bd:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    54c4:	0f 84 73 05 00 00    	je     5a3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    54ca:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    54d1:	0f 8f b6 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54d7:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    54de:	0f 84 91 05 00 00    	je     5a75 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    54e4:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    54eb:	0f 8f 9c 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54f1:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    54f8:	0f 84 af 05 00 00    	je     5aad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    54fe:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    5505:	0f 8f 82 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    550b:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    5512:	0f 84 9d 03 00 00    	je     58b5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    5518:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    551f:	0f 8f 68 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5525:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    552c:	0f 84 bb 03 00 00    	je     58ed <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    5532:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    5539:	0f 8f 4e 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    553f:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    5546:	0f 84 99 05 00 00    	je     5ae5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    554c:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    5553:	0f 8f 34 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5559:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    5560:	0f 84 bf 03 00 00    	je     5925 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    5566:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    556d:	0f 8f 1a 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5573:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    557a:	0f 84 9d 05 00 00    	je     5b1d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    5580:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    5587:	0f 8f 00 06 00 00    	jg     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    558d:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    5594:	0f 84 bb 05 00 00    	je     5b55 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    559a:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    55a1:	0f 84 b6 03 00 00    	je     595d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    55a7:	e9 e1 05 00 00       	jmp    5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55ac:	8b 45 cc             	mov    -0x34(%rbp),%eax
    55af:	83 c0 0d             	add    $0xd,%eax
    55b2:	83 f8 0c             	cmp    $0xc,%eax
    55b5:	0f 87 d2 05 00 00    	ja     5b8d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55bb:	89 c0                	mov    %eax,%eax
    55bd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    55c4:	00 
    55c5:	48 8d 05 14 94 00 00 	lea    0x9414(%rip),%rax        # e9e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    55cc:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    55cf:	48 98                	cltq
    55d1:	48 8d 15 08 94 00 00 	lea    0x9408(%rip),%rdx        # e9e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    55d8:	48 01 d0             	add    %rdx,%rax
    55db:	ff e0                	jmp    *%rax
      {
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    55dd:	bf 28 00 00 00       	mov    $0x28,%edi
    55e2:	e8 c9 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    55e7:	48 89 c3             	mov    %rax,%rbx
    55ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    55ee:	48 89 c6             	mov    %rax,%rsi
    55f1:	48 89 df             	mov    %rbx,%rdi
    55f4:	e8 1b 23 00 00       	call   7914 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    55f9:	48 8d 05 d8 63 00 00 	lea    0x63d8(%rip),%rax        # b9d8 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    5600:	48 89 c2             	mov    %rax,%rdx
    5603:	48 8d 05 fe 06 01 00 	lea    0x106fe(%rip),%rax        # 15d08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    560a:	48 89 c6             	mov    %rax,%rsi
    560d:	48 89 df             	mov    %rbx,%rdi
    5610:	e8 cb fc ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5615:	bf 28 00 00 00       	mov    $0x28,%edi
    561a:	e8 91 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    561f:	48 89 c3             	mov    %rax,%rbx
    5622:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5626:	48 89 c6             	mov    %rax,%rsi
    5629:	48 89 df             	mov    %rbx,%rdi
    562c:	e8 b5 23 00 00       	call   79e6 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    5631:	48 8d 05 30 63 00 00 	lea    0x6330(%rip),%rax        # b968 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    5638:	48 89 c2             	mov    %rax,%rdx
    563b:	48 8d 05 ae 06 01 00 	lea    0x106ae(%rip),%rax        # 15cf0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5642:	48 89 c6             	mov    %rax,%rsi
    5645:	48 89 df             	mov    %rbx,%rdi
    5648:	e8 93 fc ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    564d:	bf 28 00 00 00       	mov    $0x28,%edi
    5652:	e8 59 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5657:	48 89 c3             	mov    %rax,%rbx
    565a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    565e:	48 89 c6             	mov    %rax,%rsi
    5661:	48 89 df             	mov    %rbx,%rdi
    5664:	e8 4f 24 00 00       	call   7ab8 <_ZN2vk25InitializationFailedErrorC1EPKc>
    5669:	48 8d 05 88 62 00 00 	lea    0x6288(%rip),%rax        # b8f8 <_ZN2vk25InitializationFailedErrorD1Ev>
    5670:	48 89 c2             	mov    %rax,%rdx
    5673:	48 8d 05 5e 06 01 00 	lea    0x1065e(%rip),%rax        # 15cd8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    567a:	48 89 c6             	mov    %rax,%rsi
    567d:	48 89 df             	mov    %rbx,%rdi
    5680:	e8 5b fc ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    5685:	bf 28 00 00 00       	mov    $0x28,%edi
    568a:	e8 21 fa ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    568f:	48 89 c3             	mov    %rax,%rbx
    5692:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5696:	48 89 c6             	mov    %rax,%rsi
    5699:	48 89 df             	mov    %rbx,%rdi
    569c:	e8 e9 24 00 00       	call   7b8a <_ZN2vk15DeviceLostErrorC1EPKc>
    56a1:	48 8d 05 e0 61 00 00 	lea    0x61e0(%rip),%rax        # b888 <_ZN2vk15DeviceLostErrorD1Ev>
    56a8:	48 89 c2             	mov    %rax,%rdx
    56ab:	48 8d 05 0e 06 01 00 	lea    0x1060e(%rip),%rax        # 15cc0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56b2:	48 89 c6             	mov    %rax,%rsi
    56b5:	48 89 df             	mov    %rbx,%rdi
    56b8:	e8 23 fc ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    56bd:	bf 28 00 00 00       	mov    $0x28,%edi
    56c2:	e8 e9 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    56c7:	48 89 c3             	mov    %rax,%rbx
    56ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56ce:	48 89 c6             	mov    %rax,%rsi
    56d1:	48 89 df             	mov    %rbx,%rdi
    56d4:	e8 83 25 00 00       	call   7c5c <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    56d9:	48 8d 05 38 61 00 00 	lea    0x6138(%rip),%rax        # b818 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    56e0:	48 89 c2             	mov    %rax,%rdx
    56e3:	48 8d 05 be 05 01 00 	lea    0x105be(%rip),%rax        # 15ca8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56ea:	48 89 c6             	mov    %rax,%rsi
    56ed:	48 89 df             	mov    %rbx,%rdi
    56f0:	e8 eb fb ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    56f5:	bf 28 00 00 00       	mov    $0x28,%edi
    56fa:	e8 b1 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    56ff:	48 89 c3             	mov    %rax,%rbx
    5702:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5706:	48 89 c6             	mov    %rax,%rsi
    5709:	48 89 df             	mov    %rbx,%rdi
    570c:	e8 1d 26 00 00       	call   7d2e <_ZN2vk20LayerNotPresentErrorC1EPKc>
    5711:	48 8d 05 90 60 00 00 	lea    0x6090(%rip),%rax        # b7a8 <_ZN2vk20LayerNotPresentErrorD1Ev>
    5718:	48 89 c2             	mov    %rax,%rdx
    571b:	48 8d 05 6e 05 01 00 	lea    0x1056e(%rip),%rax        # 15c90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5722:	48 89 c6             	mov    %rax,%rsi
    5725:	48 89 df             	mov    %rbx,%rdi
    5728:	e8 b3 fb ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    572d:	bf 28 00 00 00       	mov    $0x28,%edi
    5732:	e8 79 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5737:	48 89 c3             	mov    %rax,%rbx
    573a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    573e:	48 89 c6             	mov    %rax,%rsi
    5741:	48 89 df             	mov    %rbx,%rdi
    5744:	e8 b7 26 00 00       	call   7e00 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    5749:	48 8d 05 e8 5f 00 00 	lea    0x5fe8(%rip),%rax        # b738 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    5750:	48 89 c2             	mov    %rax,%rdx
    5753:	48 8d 05 1e 05 01 00 	lea    0x1051e(%rip),%rax        # 15c78 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    575a:	48 89 c6             	mov    %rax,%rsi
    575d:	48 89 df             	mov    %rbx,%rdi
    5760:	e8 7b fb ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5765:	bf 28 00 00 00       	mov    $0x28,%edi
    576a:	e8 41 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    576f:	48 89 c3             	mov    %rax,%rbx
    5772:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5776:	48 89 c6             	mov    %rax,%rsi
    5779:	48 89 df             	mov    %rbx,%rdi
    577c:	e8 51 27 00 00       	call   7ed2 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    5781:	48 8d 05 40 5f 00 00 	lea    0x5f40(%rip),%rax        # b6c8 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    5788:	48 89 c2             	mov    %rax,%rdx
    578b:	48 8d 05 ce 04 01 00 	lea    0x104ce(%rip),%rax        # 15c60 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5792:	48 89 c6             	mov    %rax,%rsi
    5795:	48 89 df             	mov    %rbx,%rdi
    5798:	e8 43 fb ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    579d:	bf 28 00 00 00       	mov    $0x28,%edi
    57a2:	e8 09 f9 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    57a7:	48 89 c3             	mov    %rax,%rbx
    57aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57ae:	48 89 c6             	mov    %rax,%rsi
    57b1:	48 89 df             	mov    %rbx,%rdi
    57b4:	e8 eb 27 00 00       	call   7fa4 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    57b9:	48 8d 05 98 5e 00 00 	lea    0x5e98(%rip),%rax        # b658 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    57c0:	48 89 c2             	mov    %rax,%rdx
    57c3:	48 8d 05 7e 04 01 00 	lea    0x1047e(%rip),%rax        # 15c48 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    57ca:	48 89 c6             	mov    %rax,%rsi
    57cd:	48 89 df             	mov    %rbx,%rdi
    57d0:	e8 0b fb ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    57d5:	bf 28 00 00 00       	mov    $0x28,%edi
    57da:	e8 d1 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    57df:	48 89 c3             	mov    %rax,%rbx
    57e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57e6:	48 89 c6             	mov    %rax,%rsi
    57e9:	48 89 df             	mov    %rbx,%rdi
    57ec:	e8 85 28 00 00       	call   8076 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    57f1:	48 8d 05 f0 5d 00 00 	lea    0x5df0(%rip),%rax        # b5e8 <_ZN2vk19TooManyObjectsErrorD1Ev>
    57f8:	48 89 c2             	mov    %rax,%rdx
    57fb:	48 8d 05 2e 04 01 00 	lea    0x1042e(%rip),%rax        # 15c30 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5802:	48 89 c6             	mov    %rax,%rsi
    5805:	48 89 df             	mov    %rbx,%rdi
    5808:	e8 d3 fa ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    580d:	bf 28 00 00 00       	mov    $0x28,%edi
    5812:	e8 99 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5817:	48 89 c3             	mov    %rax,%rbx
    581a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    581e:	48 89 c6             	mov    %rax,%rsi
    5821:	48 89 df             	mov    %rbx,%rdi
    5824:	e8 1f 29 00 00       	call   8148 <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    5829:	48 8d 05 48 5d 00 00 	lea    0x5d48(%rip),%rax        # b578 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    5830:	48 89 c2             	mov    %rax,%rdx
    5833:	48 8d 05 de 03 01 00 	lea    0x103de(%rip),%rax        # 15c18 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    583a:	48 89 c6             	mov    %rax,%rsi
    583d:	48 89 df             	mov    %rbx,%rdi
    5840:	e8 9b fa ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5845:	bf 28 00 00 00       	mov    $0x28,%edi
    584a:	e8 61 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    584f:	48 89 c3             	mov    %rax,%rbx
    5852:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5856:	48 89 c6             	mov    %rax,%rsi
    5859:	48 89 df             	mov    %rbx,%rdi
    585c:	e8 b9 29 00 00       	call   821a <_ZN2vk19FragmentedPoolErrorC1EPKc>
    5861:	48 8d 05 a0 5c 00 00 	lea    0x5ca0(%rip),%rax        # b508 <_ZN2vk19FragmentedPoolErrorD1Ev>
    5868:	48 89 c2             	mov    %rax,%rdx
    586b:	48 8d 05 8e 03 01 00 	lea    0x1038e(%rip),%rax        # 15c00 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5872:	48 89 c6             	mov    %rax,%rsi
    5875:	48 89 df             	mov    %rbx,%rdi
    5878:	e8 63 fa ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    587d:	bf 28 00 00 00       	mov    $0x28,%edi
    5882:	e8 29 f8 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5887:	48 89 c3             	mov    %rax,%rbx
    588a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    588e:	48 89 c6             	mov    %rax,%rsi
    5891:	48 89 df             	mov    %rbx,%rdi
    5894:	e8 53 2a 00 00       	call   82ec <_ZN2vk12UnknownErrorC1EPKc>
    5899:	48 8d 05 f8 5b 00 00 	lea    0x5bf8(%rip),%rax        # b498 <_ZN2vk12UnknownErrorD1Ev>
    58a0:	48 89 c2             	mov    %rax,%rdx
    58a3:	48 8d 05 3e 03 01 00 	lea    0x1033e(%rip),%rax        # 15be8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58aa:	48 89 c6             	mov    %rax,%rsi
    58ad:	48 89 df             	mov    %rbx,%rdi
    58b0:	e8 2b fa ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    58b5:	bf 28 00 00 00       	mov    $0x28,%edi
    58ba:	e8 f1 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    58bf:	48 89 c3             	mov    %rax,%rbx
    58c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58c6:	48 89 c6             	mov    %rax,%rsi
    58c9:	48 89 df             	mov    %rbx,%rdi
    58cc:	e8 ed 2a 00 00       	call   83be <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    58d1:	48 8d 05 50 5b 00 00 	lea    0x5b50(%rip),%rax        # b428 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    58d8:	48 89 c2             	mov    %rax,%rdx
    58db:	48 8d 05 ee 02 01 00 	lea    0x102ee(%rip),%rax        # 15bd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58e2:	48 89 c6             	mov    %rax,%rsi
    58e5:	48 89 df             	mov    %rbx,%rdi
    58e8:	e8 f3 f9 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    58ed:	bf 28 00 00 00       	mov    $0x28,%edi
    58f2:	e8 b9 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    58f7:	48 89 c3             	mov    %rax,%rbx
    58fa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58fe:	48 89 c6             	mov    %rax,%rsi
    5901:	48 89 df             	mov    %rbx,%rdi
    5904:	e8 87 2b 00 00       	call   8490 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    5909:	48 8d 05 a8 5a 00 00 	lea    0x5aa8(%rip),%rax        # b3b8 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    5910:	48 89 c2             	mov    %rax,%rdx
    5913:	48 8d 05 9e 02 01 00 	lea    0x1029e(%rip),%rax        # 15bb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    591a:	48 89 c6             	mov    %rax,%rsi
    591d:	48 89 df             	mov    %rbx,%rdi
    5920:	e8 bb f9 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5925:	bf 28 00 00 00       	mov    $0x28,%edi
    592a:	e8 81 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    592f:	48 89 c3             	mov    %rax,%rbx
    5932:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5936:	48 89 c6             	mov    %rax,%rsi
    5939:	48 89 df             	mov    %rbx,%rdi
    593c:	e8 21 2c 00 00       	call   8562 <_ZN2vk18FragmentationErrorC1EPKc>
    5941:	48 8d 05 00 5a 00 00 	lea    0x5a00(%rip),%rax        # b348 <_ZN2vk18FragmentationErrorD1Ev>
    5948:	48 89 c2             	mov    %rax,%rdx
    594b:	48 8d 05 4e 02 01 00 	lea    0x1024e(%rip),%rax        # 15ba0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5952:	48 89 c6             	mov    %rax,%rsi
    5955:	48 89 df             	mov    %rbx,%rdi
    5958:	e8 83 f9 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    595d:	bf 28 00 00 00       	mov    $0x28,%edi
    5962:	e8 49 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5967:	48 89 c3             	mov    %rax,%rbx
    596a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    596e:	48 89 c6             	mov    %rax,%rsi
    5971:	48 89 df             	mov    %rbx,%rdi
    5974:	e8 bb 2c 00 00       	call   8634 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    5979:	48 8d 05 58 59 00 00 	lea    0x5958(%rip),%rax        # b2d8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    5980:	48 89 c2             	mov    %rax,%rdx
    5983:	48 8d 05 fe 01 01 00 	lea    0x101fe(%rip),%rax        # 15b88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    598a:	48 89 c6             	mov    %rax,%rsi
    598d:	48 89 df             	mov    %rbx,%rdi
    5990:	e8 4b f9 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    5995:	bf 28 00 00 00       	mov    $0x28,%edi
    599a:	e8 11 f7 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    599f:	48 89 c3             	mov    %rax,%rbx
    59a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59a6:	48 89 c6             	mov    %rax,%rsi
    59a9:	48 89 df             	mov    %rbx,%rdi
    59ac:	e8 55 2d 00 00       	call   8706 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    59b1:	48 8d 05 b0 58 00 00 	lea    0x58b0(%rip),%rax        # b268 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    59b8:	48 89 c2             	mov    %rax,%rdx
    59bb:	48 8d 05 ae 01 01 00 	lea    0x101ae(%rip),%rax        # 15b70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59c2:	48 89 c6             	mov    %rax,%rsi
    59c5:	48 89 df             	mov    %rbx,%rdi
    59c8:	e8 13 f9 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    59cd:	bf 28 00 00 00       	mov    $0x28,%edi
    59d2:	e8 d9 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    59d7:	48 89 c3             	mov    %rax,%rbx
    59da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59de:	48 89 c6             	mov    %rax,%rsi
    59e1:	48 89 df             	mov    %rbx,%rdi
    59e4:	e8 ef 2d 00 00       	call   87d8 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    59e9:	48 8d 05 08 58 00 00 	lea    0x5808(%rip),%rax        # b1f8 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    59f0:	48 89 c2             	mov    %rax,%rdx
    59f3:	48 8d 05 5e 01 01 00 	lea    0x1015e(%rip),%rax        # 15b58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59fa:	48 89 c6             	mov    %rax,%rsi
    59fd:	48 89 df             	mov    %rbx,%rdi
    5a00:	e8 db f8 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5a05:	bf 28 00 00 00       	mov    $0x28,%edi
    5a0a:	e8 a1 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5a0f:	48 89 c3             	mov    %rax,%rbx
    5a12:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a16:	48 89 c6             	mov    %rax,%rsi
    5a19:	48 89 df             	mov    %rbx,%rdi
    5a1c:	e8 89 2e 00 00       	call   88aa <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    5a21:	48 8d 05 60 57 00 00 	lea    0x5760(%rip),%rax        # b188 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    5a28:	48 89 c2             	mov    %rax,%rdx
    5a2b:	48 8d 05 0e 01 01 00 	lea    0x1010e(%rip),%rax        # 15b40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a32:	48 89 c6             	mov    %rax,%rsi
    5a35:	48 89 df             	mov    %rbx,%rdi
    5a38:	e8 a3 f8 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5a3d:	bf 28 00 00 00       	mov    $0x28,%edi
    5a42:	e8 69 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5a47:	48 89 c3             	mov    %rax,%rbx
    5a4a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a4e:	48 89 c6             	mov    %rax,%rsi
    5a51:	48 89 df             	mov    %rbx,%rdi
    5a54:	e8 23 2f 00 00       	call   897c <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    5a59:	48 8d 05 b8 56 00 00 	lea    0x56b8(%rip),%rax        # b118 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    5a60:	48 89 c2             	mov    %rax,%rdx
    5a63:	48 8d 05 be 00 01 00 	lea    0x100be(%rip),%rax        # 15b28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a6a:	48 89 c6             	mov    %rax,%rsi
    5a6d:	48 89 df             	mov    %rbx,%rdi
    5a70:	e8 6b f8 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5a75:	bf 28 00 00 00       	mov    $0x28,%edi
    5a7a:	e8 31 f6 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5a7f:	48 89 c3             	mov    %rax,%rbx
    5a82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a86:	48 89 c6             	mov    %rax,%rsi
    5a89:	48 89 df             	mov    %rbx,%rdi
    5a8c:	e8 bd 2f 00 00       	call   8a4e <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    5a91:	48 8d 05 10 56 00 00 	lea    0x5610(%rip),%rax        # b0a8 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    5a98:	48 89 c2             	mov    %rax,%rdx
    5a9b:	48 8d 05 6e 00 01 00 	lea    0x1006e(%rip),%rax        # 15b10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5aa2:	48 89 c6             	mov    %rax,%rsi
    5aa5:	48 89 df             	mov    %rbx,%rdi
    5aa8:	e8 33 f8 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5aad:	bf 28 00 00 00       	mov    $0x28,%edi
    5ab2:	e8 f9 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5ab7:	48 89 c3             	mov    %rax,%rbx
    5aba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5abe:	48 89 c6             	mov    %rax,%rsi
    5ac1:	48 89 df             	mov    %rbx,%rdi
    5ac4:	e8 57 30 00 00       	call   8b20 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    5ac9:	48 8d 05 68 55 00 00 	lea    0x5568(%rip),%rax        # b038 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    5ad0:	48 89 c2             	mov    %rax,%rdx
    5ad3:	48 8d 05 1e 00 01 00 	lea    0x1001e(%rip),%rax        # 15af8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5ada:	48 89 c6             	mov    %rax,%rsi
    5add:	48 89 df             	mov    %rbx,%rdi
    5ae0:	e8 fb f7 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorVideoProfileCodecNotSupportedKHR: throw VideoProfileCodecNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
#  if defined( VK_ENABLE_BETA_EXTENSIONS )
        case Result::eErrorVideoStdVersionNotSupportedKHR: throw VideoStdVersionNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5ae5:	bf 28 00 00 00       	mov    $0x28,%edi
    5aea:	e8 c1 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5aef:	48 89 c3             	mov    %rax,%rbx
    5af2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5af6:	48 89 c6             	mov    %rax,%rsi
    5af9:	48 89 df             	mov    %rbx,%rdi
    5afc:	e8 f1 30 00 00       	call   8bf2 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    5b01:	48 8d 05 c0 54 00 00 	lea    0x54c0(%rip),%rax        # afc8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    5b08:	48 89 c2             	mov    %rax,%rdx
    5b0b:	48 8d 05 ce ff 00 00 	lea    0xffce(%rip),%rax        # 15ae0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b12:	48 89 c6             	mov    %rax,%rsi
    5b15:	48 89 df             	mov    %rbx,%rdi
    5b18:	e8 c3 f7 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5b1d:	bf 28 00 00 00       	mov    $0x28,%edi
    5b22:	e8 89 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5b27:	48 89 c3             	mov    %rax,%rbx
    5b2a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b2e:	48 89 c6             	mov    %rax,%rsi
    5b31:	48 89 df             	mov    %rbx,%rdi
    5b34:	e8 8b 31 00 00       	call   8cc4 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    5b39:	48 8d 05 18 54 00 00 	lea    0x5418(%rip),%rax        # af58 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    5b40:	48 89 c2             	mov    %rax,%rdx
    5b43:	48 8d 05 7e ff 00 00 	lea    0xff7e(%rip),%rax        # 15ac8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b4a:	48 89 c6             	mov    %rax,%rsi
    5b4d:	48 89 df             	mov    %rbx,%rdi
    5b50:	e8 8b f7 ff ff       	call   52e0 <__cxa_throw@plt>
#  if defined( VK_USE_PLATFORM_WIN32_KHR )
        case Result::eErrorFullScreenExclusiveModeLostEXT: throw FullScreenExclusiveModeLostEXTError( message );
#  endif /*VK_USE_PLATFORM_WIN32_KHR*/
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5b55:	bf 28 00 00 00       	mov    $0x28,%edi
    5b5a:	e8 51 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5b5f:	48 89 c3             	mov    %rax,%rbx
    5b62:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b66:	48 89 c6             	mov    %rax,%rsi
    5b69:	48 89 df             	mov    %rbx,%rdi
    5b6c:	e8 25 32 00 00       	call   8d96 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    5b71:	48 8d 05 70 53 00 00 	lea    0x5370(%rip),%rax        # aee8 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    5b78:	48 89 c2             	mov    %rax,%rdx
    5b7b:	48 8d 05 2e ff 00 00 	lea    0xff2e(%rip),%rax        # 15ab0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b82:	48 89 c6             	mov    %rax,%rsi
    5b85:	48 89 df             	mov    %rbx,%rdi
    5b88:	e8 53 f7 ff ff       	call   52e0 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    5b8d:	bf 28 00 00 00       	mov    $0x28,%edi
    5b92:	e8 19 f5 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    5b97:	48 89 c3             	mov    %rax,%rbx
    5b9a:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5b9d:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    5ba0:	0f b6 05 31 07 01 00 	movzbl 0x10731(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5ba7:	84 c0                	test   %al,%al
    5ba9:	0f 94 c0             	sete   %al
    5bac:	84 c0                	test   %al,%al
    5bae:	74 4a                	je     5bfa <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5bb0:	48 8d 05 21 07 01 00 	lea    0x10721(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5bb7:	48 89 c7             	mov    %rax,%rdi
    5bba:	e8 61 f7 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    5bbf:	85 c0                	test   %eax,%eax
    5bc1:	0f 95 c0             	setne  %al
    5bc4:	84 c0                	test   %al,%al
    5bc6:	74 32                	je     5bfa <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5bc8:	48 8d 05 c9 05 01 00 	lea    0x105c9(%rip),%rax        # 16198 <__dso_handle>
    5bcf:	48 89 c2             	mov    %rax,%rdx
    5bd2:	48 8d 05 c7 05 01 00 	lea    0x105c7(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    5bd9:	48 89 c6             	mov    %rax,%rsi
    5bdc:	48 8d 05 65 5e 00 00 	lea    0x5e65(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    5be3:	48 89 c7             	mov    %rax,%rdi
    5be6:	e8 95 f5 ff ff       	call   5180 <__cxa_atexit@plt>
    5beb:	48 8d 05 e6 06 01 00 	lea    0x106e6(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5bf2:	48 89 c7             	mov    %rax,%rdi
    5bf5:	e8 d6 f4 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    5bfa:	48 8d 15 9f 05 01 00 	lea    0x1059f(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    5c01:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    5c04:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c08:	89 ce                	mov    %ecx,%esi
    5c0a:	48 89 c7             	mov    %rax,%rdi
    5c0d:	e8 44 06 00 00       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    5c12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5c16:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    5c1a:	48 89 c6             	mov    %rax,%rsi
    5c1d:	48 89 d7             	mov    %rdx,%rdi
    5c20:	89 f1                	mov    %esi,%ecx
    5c22:	48 89 d0             	mov    %rdx,%rax
    5c25:	89 ce                	mov    %ecx,%esi
    5c27:	48 89 c2             	mov    %rax,%rdx
    5c2a:	48 89 df             	mov    %rbx,%rdi
    5c2d:	e8 2c 1b 00 00       	call   775e <_ZN2vk11SystemErrorC1ESt10error_code>
    5c32:	48 8d 05 5b 1c 00 00 	lea    0x1c5b(%rip),%rax        # 7894 <_ZN2vk11SystemErrorD1Ev>
    5c39:	48 89 c2             	mov    %rax,%rdx
    5c3c:	48 8d 05 dd 00 01 00 	lea    0x100dd(%rip),%rax        # 15d20 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    5c43:	48 89 c6             	mov    %rax,%rsi
    5c46:	48 89 df             	mov    %rbx,%rdi
    5c49:	e8 92 f6 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    5c4e:	49 89 c4             	mov    %rax,%r12
    5c51:	48 89 df             	mov    %rbx,%rdi
    5c54:	e8 b7 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5c59:	4c 89 e0             	mov    %r12,%rax
    5c5c:	48 89 c7             	mov    %rax,%rdi
    5c5f:	e8 9c f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5c64:	49 89 c4             	mov    %rax,%r12
    5c67:	48 89 df             	mov    %rbx,%rdi
    5c6a:	e8 a1 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5c6f:	4c 89 e0             	mov    %r12,%rax
    5c72:	48 89 c7             	mov    %rax,%rdi
    5c75:	e8 86 f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    5c7a:	49 89 c4             	mov    %rax,%r12
    5c7d:	48 89 df             	mov    %rbx,%rdi
    5c80:	e8 8b f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5c85:	4c 89 e0             	mov    %r12,%rax
    5c88:	48 89 c7             	mov    %rax,%rdi
    5c8b:	e8 70 f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    5c90:	49 89 c4             	mov    %rax,%r12
    5c93:	48 89 df             	mov    %rbx,%rdi
    5c96:	e8 75 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5c9b:	4c 89 e0             	mov    %r12,%rax
    5c9e:	48 89 c7             	mov    %rax,%rdi
    5ca1:	e8 5a f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    5ca6:	49 89 c4             	mov    %rax,%r12
    5ca9:	48 89 df             	mov    %rbx,%rdi
    5cac:	e8 5f f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cb1:	4c 89 e0             	mov    %r12,%rax
    5cb4:	48 89 c7             	mov    %rax,%rdi
    5cb7:	e8 44 f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    5cbc:	49 89 c4             	mov    %rax,%r12
    5cbf:	48 89 df             	mov    %rbx,%rdi
    5cc2:	e8 49 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cc7:	4c 89 e0             	mov    %r12,%rax
    5cca:	48 89 c7             	mov    %rax,%rdi
    5ccd:	e8 2e f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    5cd2:	49 89 c4             	mov    %rax,%r12
    5cd5:	48 89 df             	mov    %rbx,%rdi
    5cd8:	e8 33 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cdd:	4c 89 e0             	mov    %r12,%rax
    5ce0:	48 89 c7             	mov    %rax,%rdi
    5ce3:	e8 18 f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5ce8:	49 89 c4             	mov    %rax,%r12
    5ceb:	48 89 df             	mov    %rbx,%rdi
    5cee:	e8 1d f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5cf3:	4c 89 e0             	mov    %r12,%rax
    5cf6:	48 89 c7             	mov    %rax,%rdi
    5cf9:	e8 02 f6 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    5cfe:	49 89 c4             	mov    %rax,%r12
    5d01:	48 89 df             	mov    %rbx,%rdi
    5d04:	e8 07 f4 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d09:	4c 89 e0             	mov    %r12,%rax
    5d0c:	48 89 c7             	mov    %rax,%rdi
    5d0f:	e8 ec f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    5d14:	49 89 c4             	mov    %rax,%r12
    5d17:	48 89 df             	mov    %rbx,%rdi
    5d1a:	e8 f1 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d1f:	4c 89 e0             	mov    %r12,%rax
    5d22:	48 89 c7             	mov    %rax,%rdi
    5d25:	e8 d6 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    5d2a:	49 89 c4             	mov    %rax,%r12
    5d2d:	48 89 df             	mov    %rbx,%rdi
    5d30:	e8 db f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d35:	4c 89 e0             	mov    %r12,%rax
    5d38:	48 89 c7             	mov    %rax,%rdi
    5d3b:	e8 c0 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5d40:	49 89 c4             	mov    %rax,%r12
    5d43:	48 89 df             	mov    %rbx,%rdi
    5d46:	e8 c5 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d4b:	4c 89 e0             	mov    %r12,%rax
    5d4e:	48 89 c7             	mov    %rax,%rdi
    5d51:	e8 aa f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    5d56:	49 89 c4             	mov    %rax,%r12
    5d59:	48 89 df             	mov    %rbx,%rdi
    5d5c:	e8 af f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d61:	4c 89 e0             	mov    %r12,%rax
    5d64:	48 89 c7             	mov    %rax,%rdi
    5d67:	e8 94 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    5d6c:	49 89 c4             	mov    %rax,%r12
    5d6f:	48 89 df             	mov    %rbx,%rdi
    5d72:	e8 99 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d77:	4c 89 e0             	mov    %r12,%rax
    5d7a:	48 89 c7             	mov    %rax,%rdi
    5d7d:	e8 7e f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    5d82:	49 89 c4             	mov    %rax,%r12
    5d85:	48 89 df             	mov    %rbx,%rdi
    5d88:	e8 83 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5d8d:	4c 89 e0             	mov    %r12,%rax
    5d90:	48 89 c7             	mov    %rax,%rdi
    5d93:	e8 68 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5d98:	49 89 c4             	mov    %rax,%r12
    5d9b:	48 89 df             	mov    %rbx,%rdi
    5d9e:	e8 6d f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5da3:	4c 89 e0             	mov    %r12,%rax
    5da6:	48 89 c7             	mov    %rax,%rdi
    5da9:	e8 52 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    5dae:	49 89 c4             	mov    %rax,%r12
    5db1:	48 89 df             	mov    %rbx,%rdi
    5db4:	e8 57 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5db9:	4c 89 e0             	mov    %r12,%rax
    5dbc:	48 89 c7             	mov    %rax,%rdi
    5dbf:	e8 3c f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    5dc4:	49 89 c4             	mov    %rax,%r12
    5dc7:	48 89 df             	mov    %rbx,%rdi
    5dca:	e8 41 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5dcf:	4c 89 e0             	mov    %r12,%rax
    5dd2:	48 89 c7             	mov    %rax,%rdi
    5dd5:	e8 26 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    5dda:	49 89 c4             	mov    %rax,%r12
    5ddd:	48 89 df             	mov    %rbx,%rdi
    5de0:	e8 2b f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5de5:	4c 89 e0             	mov    %r12,%rax
    5de8:	48 89 c7             	mov    %rax,%rdi
    5deb:	e8 10 f5 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5df0:	49 89 c4             	mov    %rax,%r12
    5df3:	48 89 df             	mov    %rbx,%rdi
    5df6:	e8 15 f3 ff ff       	call   5110 <__cxa_free_exception@plt>
    5dfb:	4c 89 e0             	mov    %r12,%rax
    5dfe:	48 89 c7             	mov    %rax,%rdi
    5e01:	e8 fa f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5e06:	49 89 c4             	mov    %rax,%r12
    5e09:	48 89 df             	mov    %rbx,%rdi
    5e0c:	e8 ff f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e11:	4c 89 e0             	mov    %r12,%rax
    5e14:	48 89 c7             	mov    %rax,%rdi
    5e17:	e8 e4 f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5e1c:	49 89 c4             	mov    %rax,%r12
    5e1f:	48 89 df             	mov    %rbx,%rdi
    5e22:	e8 e9 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e27:	4c 89 e0             	mov    %r12,%rax
    5e2a:	48 89 c7             	mov    %rax,%rdi
    5e2d:	e8 ce f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5e32:	49 89 c4             	mov    %rax,%r12
    5e35:	48 89 df             	mov    %rbx,%rdi
    5e38:	e8 d3 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e3d:	4c 89 e0             	mov    %r12,%rax
    5e40:	48 89 c7             	mov    %rax,%rdi
    5e43:	e8 b8 f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5e48:	49 89 c4             	mov    %rax,%r12
    5e4b:	48 89 df             	mov    %rbx,%rdi
    5e4e:	e8 bd f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e53:	4c 89 e0             	mov    %r12,%rax
    5e56:	48 89 c7             	mov    %rax,%rdi
    5e59:	e8 a2 f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5e5e:	49 89 c4             	mov    %rax,%r12
    5e61:	48 89 df             	mov    %rbx,%rdi
    5e64:	e8 a7 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e69:	4c 89 e0             	mov    %r12,%rax
    5e6c:	48 89 c7             	mov    %rax,%rdi
    5e6f:	e8 8c f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5e74:	49 89 c4             	mov    %rax,%r12
    5e77:	48 89 df             	mov    %rbx,%rdi
    5e7a:	e8 91 f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e7f:	4c 89 e0             	mov    %r12,%rax
    5e82:	48 89 c7             	mov    %rax,%rdi
    5e85:	e8 76 f4 ff ff       	call   5300 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    5e8a:	49 89 c4             	mov    %rax,%r12
    5e8d:	48 89 df             	mov    %rbx,%rdi
    5e90:	e8 7b f2 ff ff       	call   5110 <__cxa_free_exception@plt>
    5e95:	4c 89 e0             	mov    %r12,%rax
    5e98:	48 89 c7             	mov    %rax,%rdi
    5e9b:	e8 60 f4 ff ff       	call   5300 <_Unwind_Resume@plt>

0000000000005ea0 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>

int protected_main() {
    5ea0:	55                   	push   %rbp
    5ea1:	48 89 e5             	mov    %rsp,%rbp
    5ea4:	41 55                	push   %r13
    5ea6:	41 54                	push   %r12
    5ea8:	53                   	push   %rbx
    5ea9:	48 83 ec 18          	sub    $0x18,%rsp
  auto app = new rtvc::VulkanApp{};
    5ead:	bf 38 00 00 00       	mov    $0x38,%edi
    5eb2:	e8 19 f3 ff ff       	call   51d0 <_Znwm@plt>
    5eb7:	48 89 c3             	mov    %rax,%rbx
    5eba:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    5ec0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5ec4:	0f 11 03             	movups %xmm0,(%rbx)
    5ec7:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    5ecb:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
    5ecf:	66 0f d6 43 30       	movq   %xmm0,0x30(%rbx)
    5ed4:	48 89 df             	mov    %rbx,%rdi
    5ed7:	e8 9a 34 00 00       	call   9376 <_ZN4rtvc9VulkanAppC1Ev>
    5edc:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
  app->render();
    5ee0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ee4:	48 89 c7             	mov    %rax,%rdi
    5ee7:	e8 4e 34 00 00       	call   933a <_ZN4rtvc9VulkanApp6renderEv>
  delete app;
    5eec:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5ef0:	48 85 db             	test   %rbx,%rbx
    5ef3:	74 15                	je     5f0a <_Z14protected_mainv+0x6a>
    5ef5:	48 89 df             	mov    %rbx,%rdi
    5ef8:	e8 15 35 00 00       	call   9412 <_ZN4rtvc9VulkanAppD1Ev>
    5efd:	be 38 00 00 00       	mov    $0x38,%esi
    5f02:	48 89 df             	mov    %rbx,%rdi
    5f05:	e8 d6 f2 ff ff       	call   51e0 <_ZdlPvm@plt>
  return EXIT_SUCCESS;
    5f0a:	b8 00 00 00 00       	mov    $0x0,%eax
    5f0f:	eb 20                	jmp    5f31 <_Z14protected_mainv+0x91>
  auto app = new rtvc::VulkanApp{};
    5f11:	49 89 c4             	mov    %rax,%r12
    5f14:	45 84 ed             	test   %r13b,%r13b
    5f17:	74 0d                	je     5f26 <_Z14protected_mainv+0x86>
    5f19:	be 38 00 00 00       	mov    $0x38,%esi
    5f1e:	48 89 df             	mov    %rbx,%rdi
    5f21:	e8 ba f2 ff ff       	call   51e0 <_ZdlPvm@plt>
    5f26:	4c 89 e0             	mov    %r12,%rax
    5f29:	48 89 c7             	mov    %rax,%rdi
    5f2c:	e8 cf f3 ff ff       	call   5300 <_Unwind_Resume@plt>
}
    5f31:	48 83 c4 18          	add    $0x18,%rsp
    5f35:	5b                   	pop    %rbx
    5f36:	41 5c                	pop    %r12
    5f38:	41 5d                	pop    %r13
    5f3a:	5d                   	pop    %rbp
    5f3b:	c3                   	ret

0000000000005f3c <main>:

int main() {
    5f3c:	55                   	push   %rbp
    5f3d:	48 89 e5             	mov    %rsp,%rbp
    5f40:	53                   	push   %rbx
    5f41:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    5f45:	e8 56 ff ff ff       	call   5ea0 <_Z14protected_mainv>
    5f4a:	e9 30 01 00 00       	jmp    607f <main+0x143>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    5f4f:	b8 01 00 00 00       	mov    $0x1,%eax
    5f54:	e9 26 01 00 00       	jmp    607f <main+0x143>
  } catch (vk::SystemError &e) {
    5f59:	48 83 fa 01          	cmp    $0x1,%rdx
    5f5d:	74 0b                	je     5f6a <main+0x2e>
    5f5f:	48 83 fa 02          	cmp    $0x2,%rdx
    5f63:	74 53                	je     5fb8 <main+0x7c>
    5f65:	e9 9f 00 00 00       	jmp    6009 <main+0xcd>
    5f6a:	48 89 c7             	mov    %rax,%rdi
    5f6d:	e8 1e f1 ff ff       	call   5090 <__cxa_begin_catch@plt>
    5f72:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    std::cerr << e.what() << std::endl;
    5f76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f7a:	48 8b 00             	mov    (%rax),%rax
    5f7d:	48 83 c0 10          	add    $0x10,%rax
    5f81:	48 8b 10             	mov    (%rax),%rdx
    5f84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f88:	48 89 c7             	mov    %rax,%rdi
    5f8b:	ff d2                	call   *%rdx
    5f8d:	48 89 c6             	mov    %rax,%rsi
    5f90:	48 8d 05 29 02 01 00 	lea    0x10229(%rip),%rax        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    5f97:	48 89 c7             	mov    %rax,%rdi
    5f9a:	e8 21 f2 ff ff       	call   51c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    5f9f:	48 8b 15 f2 ff 00 00 	mov    0xfff2(%rip),%rdx        # 15f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    5fa6:	48 89 d6             	mov    %rdx,%rsi
    5fa9:	48 89 c7             	mov    %rax,%rdi
    5fac:	e8 4f f2 ff ff       	call   5200 <_ZNSolsEPFRSoS_E@plt>
  } catch (std::exception &e) {
    5fb1:	e8 1a f3 ff ff       	call   52d0 <__cxa_end_catch@plt>
    5fb6:	eb 97                	jmp    5f4f <main+0x13>
    5fb8:	48 89 c7             	mov    %rax,%rdi
    5fbb:	e8 d0 f0 ff ff       	call   5090 <__cxa_begin_catch@plt>
    5fc0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    5fc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fc8:	48 8b 00             	mov    (%rax),%rax
    5fcb:	48 83 c0 10          	add    $0x10,%rax
    5fcf:	48 8b 10             	mov    (%rax),%rdx
    5fd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fd6:	48 89 c7             	mov    %rax,%rdi
    5fd9:	ff d2                	call   *%rdx
    5fdb:	48 89 c6             	mov    %rax,%rsi
    5fde:	48 8d 05 db 01 01 00 	lea    0x101db(%rip),%rax        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    5fe5:	48 89 c7             	mov    %rax,%rdi
    5fe8:	e8 d3 f1 ff ff       	call   51c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    5fed:	48 8b 15 a4 ff 00 00 	mov    0xffa4(%rip),%rdx        # 15f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    5ff4:	48 89 d6             	mov    %rdx,%rsi
    5ff7:	48 89 c7             	mov    %rax,%rdi
    5ffa:	e8 01 f2 ff ff       	call   5200 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    5fff:	e8 cc f2 ff ff       	call   52d0 <__cxa_end_catch@plt>
    6004:	e9 46 ff ff ff       	jmp    5f4f <main+0x13>
    6009:	48 89 c7             	mov    %rax,%rdi
    600c:	e8 7f f0 ff ff       	call   5090 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    6011:	48 8d 05 aa 8b 00 00 	lea    0x8baa(%rip),%rax        # ebc2 <_ZNSt8__detailL19__atomic_spin_countE+0x15e>
    6018:	48 89 c6             	mov    %rax,%rsi
    601b:	48 8d 05 9e 01 01 00 	lea    0x1019e(%rip),%rax        # 161c0 <_ZSt4cerr@GLIBCXX_3.4>
    6022:	48 89 c7             	mov    %rax,%rdi
    6025:	e8 96 f1 ff ff       	call   51c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    602a:	48 8b 15 67 ff 00 00 	mov    0xff67(%rip),%rdx        # 15f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    6031:	48 89 d6             	mov    %rdx,%rsi
    6034:	48 89 c7             	mov    %rax,%rdi
    6037:	e8 c4 f1 ff ff       	call   5200 <_ZNSolsEPFRSoS_E@plt>
  }
    603c:	e8 8f f2 ff ff       	call   52d0 <__cxa_end_catch@plt>
    6041:	e9 09 ff ff ff       	jmp    5f4f <main+0x13>
  } catch (std::exception &e) {
    6046:	48 89 c3             	mov    %rax,%rbx
    6049:	e8 82 f2 ff ff       	call   52d0 <__cxa_end_catch@plt>
    604e:	48 89 d8             	mov    %rbx,%rax
    6051:	48 89 c7             	mov    %rax,%rdi
    6054:	e8 a7 f2 ff ff       	call   5300 <_Unwind_Resume@plt>
  } catch (...) {
    6059:	48 89 c3             	mov    %rax,%rbx
    605c:	e8 6f f2 ff ff       	call   52d0 <__cxa_end_catch@plt>
    6061:	48 89 d8             	mov    %rbx,%rax
    6064:	48 89 c7             	mov    %rax,%rdi
    6067:	e8 94 f2 ff ff       	call   5300 <_Unwind_Resume@plt>
  }
    606c:	48 89 c3             	mov    %rax,%rbx
    606f:	e8 5c f2 ff ff       	call   52d0 <__cxa_end_catch@plt>
    6074:	48 89 d8             	mov    %rbx,%rax
    6077:	48 89 c7             	mov    %rax,%rdi
    607a:	e8 81 f2 ff ff       	call   5300 <_Unwind_Resume@plt>
    607f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6083:	c9                   	leave
    6084:	c3                   	ret

0000000000006085 <_Z41__static_initialization_and_destruction_0ii>:
    6085:	55                   	push   %rbp
    6086:	48 89 e5             	mov    %rsp,%rbp
    6089:	48 83 ec 10          	sub    $0x10,%rsp
    608d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6090:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6093:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    6097:	75 3b                	jne    60d4 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6099:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    60a0:	75 32                	jne    60d4 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    60a2:	48 8d 05 28 02 01 00 	lea    0x10228(%rip),%rax        # 162d1 <_ZStL8__ioinit>
    60a9:	48 89 c7             	mov    %rax,%rdi
    60ac:	e8 ef f1 ff ff       	call   52a0 <_ZNSt8ios_base4InitC1Ev@plt>
    60b1:	48 8d 05 e0 00 01 00 	lea    0x100e0(%rip),%rax        # 16198 <__dso_handle>
    60b8:	48 89 c2             	mov    %rax,%rdx
    60bb:	48 8d 05 0f 02 01 00 	lea    0x1020f(%rip),%rax        # 162d1 <_ZStL8__ioinit>
    60c2:	48 89 c6             	mov    %rax,%rsi
    60c5:	48 8b 05 fc fe 00 00 	mov    0xfefc(%rip),%rax        # 15fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    60cc:	48 89 c7             	mov    %rax,%rdi
    60cf:	e8 ac f0 ff ff       	call   5180 <__cxa_atexit@plt>
    60d4:	90                   	nop
    60d5:	c9                   	leave
    60d6:	c3                   	ret

00000000000060d7 <_GLOBAL__sub_I__Z14protected_mainv>:
    60d7:	55                   	push   %rbp
    60d8:	48 89 e5             	mov    %rsp,%rbp
    60db:	be ff ff 00 00       	mov    $0xffff,%esi
    60e0:	bf 01 00 00 00       	mov    $0x1,%edi
    60e5:	e8 9b ff ff ff       	call   6085 <_Z41__static_initialization_and_destruction_0ii>
    60ea:	5d                   	pop    %rbp
    60eb:	c3                   	ret

00000000000060ec <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    60ec:	55                   	push   %rbp
    60ed:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    60f0:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    60f5:	5d                   	pop    %rbp
    60f6:	c3                   	ret

00000000000060f7 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    60f7:	55                   	push   %rbp
    60f8:	48 89 e5             	mov    %rsp,%rbp
    60fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6103:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6107:	5d                   	pop    %rbp
    6108:	c3                   	ret

0000000000006109 <_ZSt21is_constant_evaluatedv>:

  /// Returns true only when called during constant evaluation.
  /// @since C++20
  constexpr inline bool
  is_constant_evaluated() noexcept
  {
    6109:	55                   	push   %rbp
    610a:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
    if consteval { return true; } else { return false; }
#else
    return __builtin_is_constant_evaluated();
    610d:	b8 00 00 00 00       	mov    $0x0,%eax
#endif
  }
    6112:	5d                   	pop    %rbp
    6113:	c3                   	ret

0000000000006114 <_ZNSt11char_traitsIcE6assignERcRKc>:
#if __cpp_lib_three_way_comparison
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    6114:	55                   	push   %rbp
    6115:	48 89 e5             	mov    %rsp,%rbp
    6118:	48 83 ec 10          	sub    $0x10,%rsp
    611c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6120:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
#if __cpp_constexpr_dynamic_alloc
	if (std::__is_constant_evaluated())
    6124:	e8 c3 ff ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    6129:	84 c0                	test   %al,%al
    612b:	74 15                	je     6142 <_ZNSt11char_traitsIcE6assignERcRKc+0x2e>
	  std::construct_at(__builtin_addressof(__c1), __c2);
    612d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6135:	48 89 d6             	mov    %rdx,%rsi
    6138:	48 89 c7             	mov    %rax,%rdi
    613b:	e8 1d 33 00 00       	call   945d <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	else
#endif
	__c1 = __c2;
      }
    6140:	eb 0d                	jmp    614f <_ZNSt11char_traitsIcE6assignERcRKc+0x3b>
	__c1 = __c2;
    6142:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6146:	0f b6 10             	movzbl (%rax),%edx
    6149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614d:	88 10                	mov    %dl,(%rax)
      }
    614f:	90                   	nop
    6150:	c9                   	leave
    6151:	c3                   	ret

0000000000006152 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    6152:	55                   	push   %rbp
    6153:	48 89 e5             	mov    %rsp,%rbp
    6156:	48 83 ec 10          	sub    $0x10,%rsp
    615a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    615e:	e8 89 ff ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    6163:	84 c0                	test   %al,%al
    6165:	74 0e                	je     6175 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    6167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616b:	48 89 c7             	mov    %rax,%rdi
    616e:	e8 29 33 00 00       	call   949c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    6173:	eb 0d                	jmp    6182 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    6175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6179:	48 89 c7             	mov    %rax,%rdi
    617c:	e8 1f ef ff ff       	call   50a0 <strlen@plt>
    6181:	90                   	nop
      }
    6182:	c9                   	leave
    6183:	c3                   	ret

0000000000006184 <_ZNSt11char_traitsIcE4moveEPcPKcm>:
#endif
	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
    6184:	55                   	push   %rbp
    6185:	48 89 e5             	mov    %rsp,%rbp
    6188:	48 83 ec 20          	sub    $0x20,%rsp
    618c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6190:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6194:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    6198:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    619d:	75 06                	jne    61a5 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x21>
	  return __s1;
    619f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a3:	eb 3a                	jmp    61df <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    61a5:	e8 42 ff ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    61aa:	84 c0                	test   %al,%al
    61ac:	74 19                	je     61c7 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
    61ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    61b2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ba:	48 89 ce             	mov    %rcx,%rsi
    61bd:	48 89 c7             	mov    %rax,%rdi
    61c0:	e8 1d 33 00 00       	call   94e2 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>
    61c5:	eb 18                	jmp    61df <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#endif
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
    61c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    61cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d3:	48 89 ce             	mov    %rcx,%rsi
    61d6:	48 89 c7             	mov    %rax,%rdi
    61d9:	e8 e2 f0 ff ff       	call   52c0 <memmove@plt>
    61de:	90                   	nop
      }
    61df:	c9                   	leave
    61e0:	c3                   	ret

00000000000061e1 <_ZNSt11char_traitsIcE4copyEPcPKcm>:

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
    61e1:	55                   	push   %rbp
    61e2:	48 89 e5             	mov    %rsp,%rbp
    61e5:	48 83 ec 20          	sub    $0x20,%rsp
    61e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    61f5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    61fa:	75 06                	jne    6202 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x21>
	  return __s1;
    61fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6200:	eb 40                	jmp    6242 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    6202:	e8 e5 fe ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    6207:	84 c0                	test   %al,%al
    6209:	74 19                	je     6224 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
    620b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    620f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6217:	48 89 ce             	mov    %rcx,%rsi
    621a:	48 89 c7             	mov    %rax,%rdi
    621d:	e8 72 33 00 00       	call   9594 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
    6222:	eb 1e                	jmp    6242 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    6224:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6228:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    622c:	48 89 d1             	mov    %rdx,%rcx
    622f:	48 89 c6             	mov    %rax,%rsi
    6232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6236:	48 89 c2             	mov    %rax,%rdx
    6239:	48 89 cf             	mov    %rcx,%rdi
    623c:	e8 0f ef ff ff       	call   5150 <memcpy@plt>
    6241:	90                   	nop
      }
    6242:	c9                   	leave
    6243:	c3                   	ret

0000000000006244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
      // Capacity:
      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
    6244:	55                   	push   %rbp
    6245:	48 89 e5             	mov    %rsp,%rbp
    6248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    624c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6250:	48 8b 40 08          	mov    0x8(%rax),%rax
    6254:	5d                   	pop    %rbp
    6255:	c3                   	ret

0000000000006256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>:
  {
  public:
    error_code() noexcept
    : _M_value(0), _M_cat(&system_category()) { }

    error_code(int __v, const error_category& __cat) noexcept
    6256:	55                   	push   %rbp
    6257:	48 89 e5             	mov    %rsp,%rbp
    625a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    625e:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6261:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    : _M_value(__v), _M_cat(&__cat) { }
    6265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6269:	8b 55 f4             	mov    -0xc(%rbp),%edx
    626c:	89 10                	mov    %edx,(%rax)
    626e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6272:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6276:	48 89 50 08          	mov    %rdx,0x8(%rax)
    627a:	90                   	nop
    627b:	5d                   	pop    %rbp
    627c:	c3                   	ret
    627d:	90                   	nop

000000000000627e <_ZNKSt10error_code5valueEv>:
			 error_code&>::type
      operator=(_ErrorCodeEnum __e) noexcept
      { return *this = make_error_code(__e); }

    int
    value() const noexcept { return _M_value; }
    627e:	55                   	push   %rbp
    627f:	48 89 e5             	mov    %rsp,%rbp
    6282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628a:	8b 00                	mov    (%rax),%eax
    628c:	5d                   	pop    %rbp
    628d:	c3                   	ret

000000000000628e <_ZNKSt10error_code8categoryEv>:

    const error_category&
    category() const noexcept { return *_M_cat; }
    628e:	55                   	push   %rbp
    628f:	48 89 e5             	mov    %rsp,%rbp
    6292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    629a:	48 8b 40 08          	mov    0x8(%rax),%rax
    629e:	5d                   	pop    %rbp
    629f:	c3                   	ret

00000000000062a0 <_ZNKSt10error_code7messageB5cxx11Ev>:
    error_condition
    default_error_condition() const noexcept;

    _GLIBCXX_DEFAULT_ABI_TAG
    string
    message() const
    62a0:	55                   	push   %rbp
    62a1:	48 89 e5             	mov    %rsp,%rbp
    62a4:	41 54                	push   %r12
    62a6:	53                   	push   %rbx
    62a7:	48 83 ec 10          	sub    $0x10,%rsp
    62ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    62af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return category().message(value()); }
    62b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62b7:	48 89 c7             	mov    %rax,%rdi
    62ba:	e8 cf ff ff ff       	call   628e <_ZNKSt10error_code8categoryEv>
    62bf:	48 89 c3             	mov    %rax,%rbx
    62c2:	48 8b 03             	mov    (%rbx),%rax
    62c5:	48 83 c0 20          	add    $0x20,%rax
    62c9:	4c 8b 20             	mov    (%rax),%r12
    62cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62d0:	48 89 c7             	mov    %rax,%rdi
    62d3:	e8 a6 ff ff ff       	call   627e <_ZNKSt10error_code5valueEv>
    62d8:	89 c2                	mov    %eax,%edx
    62da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62de:	48 89 de             	mov    %rbx,%rsi
    62e1:	48 89 c7             	mov    %rax,%rdi
    62e4:	41 ff d4             	call   *%r12
    62e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62eb:	48 83 c4 10          	add    $0x10,%rsp
    62ef:	5b                   	pop    %rbx
    62f0:	41 5c                	pop    %r12
    62f2:	5d                   	pop    %rbp
    62f3:	c3                   	ret

00000000000062f4 <_ZNSt12system_errorC1ESt10error_code>:
  {
  private:
    error_code 	_M_code;

  public:
    system_error(error_code __ec = error_code())
    62f4:	55                   	push   %rbp
    62f5:	48 89 e5             	mov    %rsp,%rbp
    62f8:	53                   	push   %rbx
    62f9:	48 83 ec 48          	sub    $0x48,%rsp
    62fd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6301:	48 89 d1             	mov    %rdx,%rcx
    6304:	48 89 f0             	mov    %rsi,%rax
    6307:	48 89 fa             	mov    %rdi,%rdx
    630a:	48 89 ca             	mov    %rcx,%rdx
    630d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6311:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    : runtime_error(__ec.message()), _M_code(__ec) { }
    6315:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    6319:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    631d:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    6321:	48 89 d6             	mov    %rdx,%rsi
    6324:	48 89 c7             	mov    %rax,%rdi
    6327:	e8 74 ff ff ff       	call   62a0 <_ZNKSt10error_code7messageB5cxx11Ev>
    632c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6330:	48 89 c6             	mov    %rax,%rsi
    6333:	48 89 df             	mov    %rbx,%rdi
    6336:	e8 f5 ee ff ff       	call   5230 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    633b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    633f:	48 89 c7             	mov    %rax,%rdi
    6342:	e8 e7 32 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6347:	48 8d 15 a2 f6 00 00 	lea    0xf6a2(%rip),%rdx        # 159f0 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    634e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6352:	48 89 10             	mov    %rdx,(%rax)
    6355:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    6359:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    635d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    6361:	48 89 41 10          	mov    %rax,0x10(%rcx)
    6365:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    6369:	eb 1a                	jmp    6385 <_ZNSt12system_errorC1ESt10error_code+0x91>
    636b:	48 89 c3             	mov    %rax,%rbx
    636e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6372:	48 89 c7             	mov    %rax,%rdi
    6375:	e8 b4 32 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    637a:	48 89 d8             	mov    %rbx,%rax
    637d:	48 89 c7             	mov    %rax,%rdi
    6380:	e8 7b ef ff ff       	call   5300 <_Unwind_Resume@plt>
    6385:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6389:	c9                   	leave
    638a:	c3                   	ret
    638b:	90                   	nop

000000000000638c <_ZNSt12system_errorC1ESt10error_codePKc>:

    system_error(error_code __ec, const string& __what)
    : runtime_error(__what + ": " + __ec.message()), _M_code(__ec) { }

    system_error(error_code __ec, const char* __what)
    638c:	55                   	push   %rbp
    638d:	48 89 e5             	mov    %rsp,%rbp
    6390:	53                   	push   %rbx
    6391:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    6398:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    639c:	89 f0                	mov    %esi,%eax
    639e:	48 89 d6             	mov    %rdx,%rsi
    63a1:	48 89 f2             	mov    %rsi,%rdx
    63a4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    63ab:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    63b2:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    : runtime_error(__what + (": " + __ec.message())), _M_code(__ec) { }
    63b6:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    63ba:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63be:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    63c5:	48 89 d6             	mov    %rdx,%rsi
    63c8:	48 89 c7             	mov    %rax,%rdi
    63cb:	e8 d0 fe ff ff       	call   62a0 <_ZNKSt10error_code7messageB5cxx11Ev>
    63d0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    63d4:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    63d8:	48 8d 0d 61 82 00 00 	lea    0x8261(%rip),%rcx        # e640 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    63df:	48 89 ce             	mov    %rcx,%rsi
    63e2:	48 89 c7             	mov    %rax,%rdi
    63e5:	e8 90 33 00 00       	call   977a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    63ea:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    63ee:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    63f2:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    63f6:	48 89 ce             	mov    %rcx,%rsi
    63f9:	48 89 c7             	mov    %rax,%rdi
    63fc:	e8 79 33 00 00       	call   977a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    6401:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6405:	48 89 c6             	mov    %rax,%rsi
    6408:	48 89 df             	mov    %rbx,%rdi
    640b:	e8 20 ee ff ff       	call   5230 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    6410:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6414:	48 89 c7             	mov    %rax,%rdi
    6417:	e8 12 32 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    641c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6420:	48 89 c7             	mov    %rax,%rdi
    6423:	e8 06 32 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6428:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    642c:	48 89 c7             	mov    %rax,%rdi
    642f:	e8 fa 31 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6434:	48 8d 15 b5 f5 00 00 	lea    0xf5b5(%rip),%rdx        # 159f0 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    643b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    643f:	48 89 10             	mov    %rdx,(%rax)
    6442:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    6446:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    644d:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6454:	48 89 41 10          	mov    %rax,0x10(%rcx)
    6458:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    645c:	eb 3c                	jmp    649a <_ZNSt12system_errorC1ESt10error_codePKc+0x10e>
    645e:	48 89 c3             	mov    %rax,%rbx
    6461:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6465:	48 89 c7             	mov    %rax,%rdi
    6468:	e8 c1 31 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    646d:	eb 03                	jmp    6472 <_ZNSt12system_errorC1ESt10error_codePKc+0xe6>
    646f:	48 89 c3             	mov    %rax,%rbx
    6472:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6476:	48 89 c7             	mov    %rax,%rdi
    6479:	e8 b0 31 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    647e:	eb 03                	jmp    6483 <_ZNSt12system_errorC1ESt10error_codePKc+0xf7>
    6480:	48 89 c3             	mov    %rax,%rbx
    6483:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6487:	48 89 c7             	mov    %rax,%rdi
    648a:	e8 9f 31 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    648f:	48 89 d8             	mov    %rbx,%rax
    6492:	48 89 c7             	mov    %rax,%rdi
    6495:	e8 66 ee ff ff       	call   5300 <_Unwind_Resume@plt>
    649a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    649e:	c9                   	leave
    649f:	c3                   	ret

00000000000064a0 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>:
    size_t getVkHeaderVersion() const
    64a0:	55                   	push   %rbp
    64a1:	48 89 e5             	mov    %rsp,%rbp
    64a4:	48 83 ec 10          	sub    $0x10,%rsp
    64a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      VULKAN_HPP_ASSERT( m_valid );
    64ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b0:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    64b4:	84 c0                	test   %al,%al
    64b6:	75 28                	jne    64e0 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv+0x40>
    64b8:	48 8d 05 89 81 00 00 	lea    0x8189(%rip),%rax        # e648 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x10>
    64bf:	48 89 c1             	mov    %rax,%rcx
    64c2:	ba 16 05 00 00       	mov    $0x516,%edx
    64c7:	48 8d 05 ba 81 00 00 	lea    0x81ba(%rip),%rax        # e688 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    64ce:	48 89 c6             	mov    %rax,%rsi
    64d1:	48 8d 05 cf 81 00 00 	lea    0x81cf(%rip),%rax        # e6a7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x6f>
    64d8:	48 89 c7             	mov    %rax,%rdi
    64db:	e8 00 ec ff ff       	call   50e0 <__assert_fail@plt>
      return vkHeaderVersion;
    64e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e4:	48 8b 00             	mov    (%rax),%rax
    }
    64e7:	c9                   	leave
    64e8:	c3                   	ret
    64e9:	90                   	nop

00000000000064ea <_ZN2vk18DispatchLoaderBaseC1Ev>:
    DispatchLoaderBase() = default;
    64ea:	55                   	push   %rbp
    64eb:	48 89 e5             	mov    %rsp,%rbp
    64ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f6:	48 c7 00 e7 00 00 00 	movq   $0xe7,(%rax)
    64fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6501:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    6505:	90                   	nop
    6506:	5d                   	pop    %rbp
    6507:	c3                   	ret

0000000000006508 <_ZStanSt13_Ios_FmtflagsS_>:
      _S_ios_fmtflags_min = ~__INT_MAX__
    };

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
    6508:	55                   	push   %rbp
    6509:	48 89 e5             	mov    %rsp,%rbp
    650c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    650f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6512:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6515:	23 45 f8             	and    -0x8(%rbp),%eax
    6518:	5d                   	pop    %rbp
    6519:	c3                   	ret

000000000000651a <_ZStorSt13_Ios_FmtflagsS_>:

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
    651a:	55                   	push   %rbp
    651b:	48 89 e5             	mov    %rsp,%rbp
    651e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6521:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6524:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6527:	0b 45 f8             	or     -0x8(%rbp),%eax
    652a:	5d                   	pop    %rbp
    652b:	c3                   	ret

000000000000652c <_ZStcoSt13_Ios_Fmtflags>:
  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator~(_Ios_Fmtflags __a)
  { return _Ios_Fmtflags(~static_cast<int>(__a)); }
    652c:	55                   	push   %rbp
    652d:	48 89 e5             	mov    %rsp,%rbp
    6530:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6533:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6536:	f7 d0                	not    %eax
    6538:	5d                   	pop    %rbp
    6539:	c3                   	ret

000000000000653a <_ZStoRRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a | __b; }
    653a:	55                   	push   %rbp
    653b:	48 89 e5             	mov    %rsp,%rbp
    653e:	48 83 ec 10          	sub    $0x10,%rsp
    6542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6546:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654d:	8b 00                	mov    (%rax),%eax
    654f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6552:	89 d6                	mov    %edx,%esi
    6554:	89 c7                	mov    %eax,%edi
    6556:	e8 bf ff ff ff       	call   651a <_ZStorSt13_Ios_FmtflagsS_>
    655b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    655f:	89 02                	mov    %eax,(%rdx)
    6561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6565:	c9                   	leave
    6566:	c3                   	ret

0000000000006567 <_ZStaNRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a & __b; }
    6567:	55                   	push   %rbp
    6568:	48 89 e5             	mov    %rsp,%rbp
    656b:	48 83 ec 10          	sub    $0x10,%rsp
    656f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6573:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    657a:	8b 00                	mov    (%rax),%eax
    657c:	8b 55 f4             	mov    -0xc(%rbp),%edx
    657f:	89 d6                	mov    %edx,%esi
    6581:	89 c7                	mov    %eax,%edi
    6583:	e8 80 ff ff ff       	call   6508 <_ZStanSt13_Ios_FmtflagsS_>
    6588:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    658c:	89 02                	mov    %eax,(%rdx)
    658e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6592:	c9                   	leave
    6593:	c3                   	ret

0000000000006594 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>:
     *
     *  This function clears @a mask in the format flags, then sets
     *  @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.
    */
    fmtflags
    setf(fmtflags __fmtfl, fmtflags __mask)
    6594:	55                   	push   %rbp
    6595:	48 89 e5             	mov    %rsp,%rbp
    6598:	48 83 ec 20          	sub    $0x20,%rsp
    659c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65a0:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    65a3:	89 55 e0             	mov    %edx,-0x20(%rbp)
    {
      fmtflags __old = _M_flags;
    65a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65aa:	8b 40 18             	mov    0x18(%rax),%eax
    65ad:	89 45 fc             	mov    %eax,-0x4(%rbp)
      _M_flags &= ~__mask;
    65b0:	8b 45 e0             	mov    -0x20(%rbp),%eax
    65b3:	89 c7                	mov    %eax,%edi
    65b5:	e8 72 ff ff ff       	call   652c <_ZStcoSt13_Ios_Fmtflags>
    65ba:	89 c2                	mov    %eax,%edx
    65bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65c0:	48 83 c0 18          	add    $0x18,%rax
    65c4:	89 d6                	mov    %edx,%esi
    65c6:	48 89 c7             	mov    %rax,%rdi
    65c9:	e8 99 ff ff ff       	call   6567 <_ZStaNRSt13_Ios_FmtflagsS_>
      _M_flags |= (__fmtfl & __mask);
    65ce:	8b 55 e0             	mov    -0x20(%rbp),%edx
    65d1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    65d4:	89 d6                	mov    %edx,%esi
    65d6:	89 c7                	mov    %eax,%edi
    65d8:	e8 2b ff ff ff       	call   6508 <_ZStanSt13_Ios_FmtflagsS_>
    65dd:	89 c2                	mov    %eax,%edx
    65df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e3:	48 83 c0 18          	add    $0x18,%rax
    65e7:	89 d6                	mov    %edx,%esi
    65e9:	48 89 c7             	mov    %rax,%rdi
    65ec:	e8 49 ff ff ff       	call   653a <_ZStoRRSt13_Ios_FmtflagsS_>
      return __old;
    65f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
    65f4:	c9                   	leave
    65f5:	c3                   	ret

00000000000065f6 <_ZSt3hexRSt8ios_base>:
  }

  /// Calls base.setf(ios_base::hex, ios_base::basefield).
  inline ios_base&
  hex(ios_base& __base)
  {
    65f6:	55                   	push   %rbp
    65f7:	48 89 e5             	mov    %rsp,%rbp
    65fa:	48 83 ec 10          	sub    $0x10,%rsp
    65fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    __base.setf(ios_base::hex, ios_base::basefield);
    6602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6606:	ba 4a 00 00 00       	mov    $0x4a,%edx
    660b:	be 08 00 00 00       	mov    $0x8,%esi
    6610:	48 89 c7             	mov    %rax,%rdi
    6613:	e8 7c ff ff ff       	call   6594 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>
    return __base;
    6618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  }
    661c:	c9                   	leave
    661d:	c3                   	ret

000000000000661e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
    661e:	55                   	push   %rbp
    661f:	48 89 e5             	mov    %rsp,%rbp
    6622:	48 83 ec 10          	sub    $0x10,%rsp
    6626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    662a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    662e:	48 89 c7             	mov    %rax,%rdi
    6631:	e8 0a ea ff ff       	call   5040 <_ZNSaIcED2Ev@plt>
    6636:	90                   	nop
    6637:	c9                   	leave
    6638:	c3                   	ret
    6639:	90                   	nop

000000000000663a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
      basic_string()
    663a:	55                   	push   %rbp
    663b:	48 89 e5             	mov    %rsp,%rbp
    663e:	53                   	push   %rbx
    663f:	48 83 ec 48          	sub    $0x48,%rsp
    6643:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
      : _M_dataplus(_M_local_data())
    6647:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    664b:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    664f:	48 89 c7             	mov    %rax,%rdi
    6652:	e8 b9 ec ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6657:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    665b:	48 89 c7             	mov    %rax,%rdi
    665e:	e8 97 00 00 00       	call   66fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6663:	48 89 c1             	mov    %rax,%rcx
    6666:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    666a:	48 89 c2             	mov    %rax,%rdx
    666d:	48 89 ce             	mov    %rcx,%rsi
    6670:	48 89 df             	mov    %rbx,%rdi
    6673:	e8 e2 00 00 00       	call   675a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
    6678:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    667c:	48 89 c7             	mov    %rax,%rdi
    667f:	e8 8c eb ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6684:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6688:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::is_constant_evaluated())
    668c:	e8 78 fa ff ff       	call   6109 <_ZSt21is_constant_evaluatedv>
    6691:	84 c0                	test   %al,%al
    6693:	74 40                	je     66d5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x9b>
	  for (_CharT& __c : _M_local_buf)
    6695:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6699:	48 83 c0 10          	add    $0x10,%rax
    669d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    66a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    66a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66ad:	48 83 c0 10          	add    $0x10,%rax
    66b1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    66b5:	eb 14                	jmp    66cb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x91>
    66b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66bb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	    __c = _CharT();
    66bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66c3:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    66c6:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    66cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    66cf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    66d3:	75 e2                	jne    66b7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x7d>
	return _M_local_data();
    66d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66d9:	48 89 c7             	mov    %rax,%rdi
    66dc:	e8 19 00 00 00       	call   66fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    66e1:	90                   	nop
	_M_set_length(0);
    66e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    66e6:	be 00 00 00 00       	mov    $0x0,%esi
    66eb:	48 89 c7             	mov    %rax,%rdi
    66ee:	e8 71 31 00 00       	call   9864 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    66f3:	90                   	nop
    66f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    66f8:	c9                   	leave
    66f9:	c3                   	ret

00000000000066fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data()
    66fa:	55                   	push   %rbp
    66fb:	48 89 e5             	mov    %rsp,%rbp
    66fe:	48 83 ec 10          	sub    $0x10,%rsp
    6702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    6706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    670a:	48 83 c0 10          	add    $0x10,%rax
    670e:	48 89 c7             	mov    %rax,%rdi
    6711:	e8 02 00 00 00       	call   6718 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>
      }
    6716:	c9                   	leave
    6717:	c3                   	ret

0000000000006718 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>:
       *  @brief  Obtain a pointer to an object
       *  @param  __r  A reference to an object of type `element_type`
       *  @return `addressof(__r)`
      */
      static _GLIBCXX20_CONSTEXPR pointer
      pointer_to(element_type& __r) noexcept
    6718:	55                   	push   %rbp
    6719:	48 89 e5             	mov    %rsp,%rbp
    671c:	48 83 ec 10          	sub    $0x10,%rsp
    6720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    6724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6728:	48 89 c7             	mov    %rax,%rdi
    672b:	e8 02 00 00 00       	call   6732 <_ZSt9addressofIcEPT_RS0_>
    6730:	c9                   	leave
    6731:	c3                   	ret

0000000000006732 <_ZSt9addressofIcEPT_RS0_>:
   *  @return   The actual address.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
    6732:	55                   	push   %rbp
    6733:	48 89 e5             	mov    %rsp,%rbp
    6736:	48 83 ec 10          	sub    $0x10,%rsp
    673a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    673e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6742:	48 89 c7             	mov    %rax,%rdi
    6745:	e8 02 00 00 00       	call   674c <_ZSt11__addressofIcEPT_RS0_>
    674a:	c9                   	leave
    674b:	c3                   	ret

000000000000674c <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    674c:	55                   	push   %rbp
    674d:	48 89 e5             	mov    %rsp,%rbp
    6750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6758:	5d                   	pop    %rbp
    6759:	c3                   	ret

000000000000675a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
    675a:	55                   	push   %rbp
    675b:	48 89 e5             	mov    %rsp,%rbp
    675e:	48 83 ec 20          	sub    $0x20,%rsp
    6762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6766:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    676a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    676e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6772:	48 89 c7             	mov    %rax,%rdi
    6775:	e8 20 00 00 00       	call   679a <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    677a:	48 89 c2             	mov    %rax,%rdx
    677d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6781:	48 89 d6             	mov    %rdx,%rsi
    6784:	48 89 c7             	mov    %rax,%rdi
    6787:	e8 f4 ea ff ff       	call   5280 <_ZNSaIcEC2ERKS_@plt>
    678c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6790:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6794:	48 89 10             	mov    %rdx,(%rax)
    6797:	90                   	nop
    6798:	c9                   	leave
    6799:	c3                   	ret

000000000000679a <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    679a:	55                   	push   %rbp
    679b:	48 89 e5             	mov    %rsp,%rbp
    679e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    67a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a6:	5d                   	pop    %rbp
    67a7:	c3                   	ret

00000000000067a8 <_ZNK2vk17ErrorCategoryImpl4nameEv>:
    virtual const char * name() const VULKAN_HPP_NOEXCEPT override
    67a8:	55                   	push   %rbp
    67a9:	48 89 e5             	mov    %rsp,%rbp
    67ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return VULKAN_HPP_NAMESPACE_STRING "::Result";
    67b0:	48 8d 05 f8 7e 00 00 	lea    0x7ef8(%rip),%rax        # e6af <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x77>
    }
    67b7:	5d                   	pop    %rbp
    67b8:	c3                   	ret
    67b9:	90                   	nop

00000000000067ba <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei>:
    virtual std::string message( int ev ) const override
    67ba:	55                   	push   %rbp
    67bb:	48 89 e5             	mov    %rsp,%rbp
    67be:	41 54                	push   %r12
    67c0:	53                   	push   %rbx
    67c1:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    67c8:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
    67cf:	48 89 b5 e0 fd ff ff 	mov    %rsi,-0x220(%rbp)
    67d6:	89 95 dc fd ff ff    	mov    %edx,-0x224(%rbp)
    67dc:	8b 85 dc fd ff ff    	mov    -0x224(%rbp),%eax
    67e2:	89 45 ec             	mov    %eax,-0x14(%rbp)
    67e5:	48 8b 9d e8 fd ff ff 	mov    -0x218(%rbp),%rbx

  //=== VK_VERSION_1_0 ===

  VULKAN_HPP_INLINE std::string to_string( Result value )
  {
    switch ( value )
    67ec:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    67f3:	0f 84 eb 06 00 00    	je     6ee4 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x72a>
    67f9:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    6800:	0f 8f 08 0a 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6806:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    680d:	0f 84 8f 09 00 00    	je     71a2 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9e8>
    6813:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    681a:	0f 8f ee 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6820:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    6827:	0f 84 3f 09 00 00    	je     716c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9b2>
    682d:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    6834:	0f 8f d4 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    683a:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    6841:	0f 84 ef 08 00 00    	je     7136 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x97c>
    6847:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    684e:	0f 8f ba 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6854:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    685b:	0f 84 9f 08 00 00    	je     7100 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x946>
    6861:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    6868:	0f 8f a0 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    686e:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    6875:	0f 84 0b 07 00 00    	je     6f86 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x7cc>
    687b:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    6882:	0f 8f 86 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6888:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    688c:	0f 8f 7c 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6892:	83 7d ec f3          	cmpl   $0xfffffff3,-0x14(%rbp)
    6896:	0f 8d 3d 01 00 00    	jge    69d9 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x21f>
    689c:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    68a3:	0f 84 71 06 00 00    	je     6f1a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x760>
    68a9:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    68b0:	0f 8f 58 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68b6:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    68bd:	0f 84 8d 06 00 00    	je     6f50 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x796>
    68c3:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    68ca:	0f 8f 3e 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68d0:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    68d7:	0f 84 df 06 00 00    	je     6fbc <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x802>
    68dd:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    68e4:	0f 8f 24 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68ea:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    68f1:	0f 84 fb 06 00 00    	je     6ff2 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x838>
    68f7:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    68fe:	0f 8f 0a 09 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6904:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    690b:	0f 84 17 07 00 00    	je     7028 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x86e>
    6911:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    6918:	0f 8f f0 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    691e:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    6925:	0f 84 33 07 00 00    	je     705e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8a4>
    692b:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    6932:	0f 8f d6 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6938:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    693f:	0f 84 c7 04 00 00    	je     6e0c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x652>
    6945:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    694c:	0f 8f bc 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6952:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6959:	0f 84 e3 04 00 00    	je     6e42 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x688>
    695f:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6966:	0f 8f a2 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    696c:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    6973:	0f 84 1b 07 00 00    	je     7094 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8da>
    6979:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    6980:	0f 8f 88 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6986:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    698d:	0f 84 e5 04 00 00    	je     6e78 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6be>
    6993:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    699a:	0f 8f 6e 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69a0:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    69a7:	0f 84 1d 07 00 00    	je     70ca <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x910>
    69ad:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    69b4:	0f 8f 54 08 00 00    	jg     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69ba:	81 7d ec b0 0d 60 c4 	cmpl   $0xc4600db0,-0x14(%rbp)
    69c1:	0f 84 11 08 00 00    	je     71d8 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa1e>
    69c7:	81 7d ec 18 4a 61 c4 	cmpl   $0xc4614a18,-0x14(%rbp)
    69ce:	0f 84 da 04 00 00    	je     6eae <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6f4>
    69d4:	e9 35 08 00 00       	jmp    720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69d9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    69dc:	83 c0 0d             	add    $0xd,%eax
    69df:	83 f8 12             	cmp    $0x12,%eax
    69e2:	0f 87 26 08 00 00    	ja     720e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69e8:	89 c0                	mov    %eax,%eax
    69ea:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    69f1:	00 
    69f2:	48 8d 05 a7 82 00 00 	lea    0x82a7(%rip),%rax        # eca0 <_ZNSt8__detailL19__atomic_spin_countE+0x23c>
    69f9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    69fc:	48 98                	cltq
    69fe:	48 8d 15 9b 82 00 00 	lea    0x829b(%rip),%rdx        # eca0 <_ZNSt8__detailL19__atomic_spin_countE+0x23c>
    6a05:	48 01 d0             	add    %rdx,%rax
    6a08:	ff e0                	jmp    *%rax
    {
      case Result::eSuccess: return "Success";
    6a0a:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a0e:	48 89 c7             	mov    %rax,%rdi
    6a11:	e8 fa e8 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6a16:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a1a:	48 89 c2             	mov    %rax,%rdx
    6a1d:	48 8d 05 96 7c 00 00 	lea    0x7c96(%rip),%rax        # e6ba <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x82>
    6a24:	48 89 c6             	mov    %rax,%rsi
    6a27:	48 89 df             	mov    %rbx,%rdi
    6a2a:	e8 95 2d 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a2f:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a33:	48 89 c7             	mov    %rax,%rdi
    6a36:	e8 d5 e7 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
      return VULKAN_HPP_NAMESPACE::to_string( static_cast<VULKAN_HPP_NAMESPACE::Result>( ev ) );
    6a3b:	e9 aa 0c 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eNotReady: return "NotReady";
    6a40:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a44:	48 89 c7             	mov    %rax,%rdi
    6a47:	e8 c4 e8 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6a4c:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a50:	48 89 c2             	mov    %rax,%rdx
    6a53:	48 8d 05 68 7c 00 00 	lea    0x7c68(%rip),%rax        # e6c2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8a>
    6a5a:	48 89 c6             	mov    %rax,%rsi
    6a5d:	48 89 df             	mov    %rbx,%rdi
    6a60:	e8 5f 2d 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a65:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a69:	48 89 c7             	mov    %rax,%rdi
    6a6c:	e8 9f e7 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6a71:	e9 74 0c 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eTimeout: return "Timeout";
    6a76:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6a7a:	48 89 c7             	mov    %rax,%rdi
    6a7d:	e8 8e e8 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6a82:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6a86:	48 89 c2             	mov    %rax,%rdx
    6a89:	48 8d 05 3b 7c 00 00 	lea    0x7c3b(%rip),%rax        # e6cb <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    6a90:	48 89 c6             	mov    %rax,%rsi
    6a93:	48 89 df             	mov    %rbx,%rdi
    6a96:	e8 29 2d 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a9b:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6a9f:	48 89 c7             	mov    %rax,%rdi
    6aa2:	e8 69 e7 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6aa7:	e9 3e 0c 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventSet: return "EventSet";
    6aac:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6ab0:	48 89 c7             	mov    %rax,%rdi
    6ab3:	e8 58 e8 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6ab8:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6abc:	48 89 c2             	mov    %rax,%rdx
    6abf:	48 8d 05 0d 7c 00 00 	lea    0x7c0d(%rip),%rax        # e6d3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9b>
    6ac6:	48 89 c6             	mov    %rax,%rsi
    6ac9:	48 89 df             	mov    %rbx,%rdi
    6acc:	e8 f3 2c 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ad1:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6ad5:	48 89 c7             	mov    %rax,%rdi
    6ad8:	e8 33 e7 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6add:	e9 08 0c 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventReset: return "EventReset";
    6ae2:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6ae6:	48 89 c7             	mov    %rax,%rdi
    6ae9:	e8 22 e8 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6aee:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6af2:	48 89 c2             	mov    %rax,%rdx
    6af5:	48 8d 05 e0 7b 00 00 	lea    0x7be0(%rip),%rax        # e6dc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa4>
    6afc:	48 89 c6             	mov    %rax,%rsi
    6aff:	48 89 df             	mov    %rbx,%rdi
    6b02:	e8 bd 2c 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b07:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b0b:	48 89 c7             	mov    %rax,%rdi
    6b0e:	e8 fd e6 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6b13:	e9 d2 0b 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eIncomplete: return "Incomplete";
    6b18:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b1c:	48 89 c7             	mov    %rax,%rdi
    6b1f:	e8 ec e7 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6b24:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b28:	48 89 c2             	mov    %rax,%rdx
    6b2b:	48 8d 05 b5 7b 00 00 	lea    0x7bb5(%rip),%rax        # e6e7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xaf>
    6b32:	48 89 c6             	mov    %rax,%rsi
    6b35:	48 89 df             	mov    %rbx,%rdi
    6b38:	e8 87 2c 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b3d:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b41:	48 89 c7             	mov    %rax,%rdi
    6b44:	e8 c7 e6 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6b49:	e9 9c 0b 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    6b4e:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b52:	48 89 c7             	mov    %rax,%rdi
    6b55:	e8 b6 e7 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6b5a:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b5e:	48 89 c2             	mov    %rax,%rdx
    6b61:	48 8d 05 8a 7b 00 00 	lea    0x7b8a(%rip),%rax        # e6f2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xba>
    6b68:	48 89 c6             	mov    %rax,%rsi
    6b6b:	48 89 df             	mov    %rbx,%rdi
    6b6e:	e8 51 2c 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b73:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b77:	48 89 c7             	mov    %rax,%rdi
    6b7a:	e8 91 e6 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6b7f:	e9 66 0b 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    6b84:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6b88:	48 89 c7             	mov    %rax,%rdi
    6b8b:	e8 80 e7 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6b90:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6b94:	48 89 c2             	mov    %rax,%rdx
    6b97:	48 8d 05 69 7b 00 00 	lea    0x7b69(%rip),%rax        # e707 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xcf>
    6b9e:	48 89 c6             	mov    %rax,%rsi
    6ba1:	48 89 df             	mov    %rbx,%rdi
    6ba4:	e8 1b 2c 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ba9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bad:	48 89 c7             	mov    %rax,%rdi
    6bb0:	e8 5b e6 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6bb5:	e9 30 0b 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    6bba:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6bbe:	48 89 c7             	mov    %rax,%rdi
    6bc1:	e8 4a e7 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6bc6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6bca:	48 89 c2             	mov    %rax,%rdx
    6bcd:	48 8d 05 4a 7b 00 00 	lea    0x7b4a(%rip),%rax        # e71e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe6>
    6bd4:	48 89 c6             	mov    %rax,%rsi
    6bd7:	48 89 df             	mov    %rbx,%rdi
    6bda:	e8 e5 2b 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6bdf:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6be3:	48 89 c7             	mov    %rax,%rdi
    6be6:	e8 25 e6 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6beb:	e9 fa 0a 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    6bf0:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6bf4:	48 89 c7             	mov    %rax,%rdi
    6bf7:	e8 14 e7 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6bfc:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c00:	48 89 c2             	mov    %rax,%rdx
    6c03:	48 8d 05 2e 7b 00 00 	lea    0x7b2e(%rip),%rax        # e738 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x100>
    6c0a:	48 89 c6             	mov    %rax,%rsi
    6c0d:	48 89 df             	mov    %rbx,%rdi
    6c10:	e8 af 2b 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c15:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c19:	48 89 c7             	mov    %rax,%rdi
    6c1c:	e8 ef e5 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6c21:	e9 c4 0a 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    6c26:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c2a:	48 89 c7             	mov    %rax,%rdi
    6c2d:	e8 de e6 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6c32:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c36:	48 89 c2             	mov    %rax,%rdx
    6c39:	48 8d 05 08 7b 00 00 	lea    0x7b08(%rip),%rax        # e748 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x110>
    6c40:	48 89 c6             	mov    %rax,%rsi
    6c43:	48 89 df             	mov    %rbx,%rdi
    6c46:	e8 79 2b 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c4b:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c4f:	48 89 c7             	mov    %rax,%rdi
    6c52:	e8 b9 e5 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6c57:	e9 8e 0a 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    6c5c:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c60:	48 89 c7             	mov    %rax,%rdi
    6c63:	e8 a8 e6 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6c68:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c6c:	48 89 c2             	mov    %rax,%rdx
    6c6f:	48 8d 05 e7 7a 00 00 	lea    0x7ae7(%rip),%rax        # e75d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x125>
    6c76:	48 89 c6             	mov    %rax,%rsi
    6c79:	48 89 df             	mov    %rbx,%rdi
    6c7c:	e8 43 2b 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c81:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c85:	48 89 c7             	mov    %rax,%rdi
    6c88:	e8 83 e5 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6c8d:	e9 58 0a 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    6c92:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6c96:	48 89 c7             	mov    %rax,%rdi
    6c99:	e8 72 e6 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6c9e:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6ca2:	48 89 c2             	mov    %rax,%rdx
    6ca5:	48 8d 05 c6 7a 00 00 	lea    0x7ac6(%rip),%rax        # e772 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13a>
    6cac:	48 89 c6             	mov    %rax,%rsi
    6caf:	48 89 df             	mov    %rbx,%rdi
    6cb2:	e8 0d 2b 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6cb7:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cbb:	48 89 c7             	mov    %rax,%rdi
    6cbe:	e8 4d e5 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6cc3:	e9 22 0a 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    6cc8:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6ccc:	48 89 c7             	mov    %rax,%rdi
    6ccf:	e8 3c e6 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6cd4:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6cd8:	48 89 c2             	mov    %rax,%rdx
    6cdb:	48 8d 05 a9 7a 00 00 	lea    0x7aa9(%rip),%rax        # e78b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x153>
    6ce2:	48 89 c6             	mov    %rax,%rsi
    6ce5:	48 89 df             	mov    %rbx,%rdi
    6ce8:	e8 d7 2a 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ced:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6cf1:	48 89 c7             	mov    %rax,%rdi
    6cf4:	e8 17 e5 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6cf9:	e9 ec 09 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    6cfe:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d02:	48 89 c7             	mov    %rax,%rdi
    6d05:	e8 06 e6 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6d0a:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d0e:	48 89 c2             	mov    %rax,%rdx
    6d11:	48 8d 05 8a 7a 00 00 	lea    0x7a8a(%rip),%rax        # e7a2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x16a>
    6d18:	48 89 c6             	mov    %rax,%rsi
    6d1b:	48 89 df             	mov    %rbx,%rdi
    6d1e:	e8 a1 2a 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d23:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d27:	48 89 c7             	mov    %rax,%rdi
    6d2a:	e8 e1 e4 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6d2f:	e9 b6 09 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    6d34:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d38:	48 89 c7             	mov    %rax,%rdi
    6d3b:	e8 d0 e5 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6d40:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d44:	48 89 c2             	mov    %rax,%rdx
    6d47:	48 8d 05 6c 7a 00 00 	lea    0x7a6c(%rip),%rax        # e7ba <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x182>
    6d4e:	48 89 c6             	mov    %rax,%rsi
    6d51:	48 89 df             	mov    %rbx,%rdi
    6d54:	e8 6b 2a 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d59:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d5d:	48 89 c7             	mov    %rax,%rdi
    6d60:	e8 ab e4 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6d65:	e9 80 09 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    6d6a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d6e:	48 89 c7             	mov    %rax,%rdi
    6d71:	e8 9a e5 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6d76:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d7a:	48 89 c2             	mov    %rax,%rdx
    6d7d:	48 8d 05 4a 7a 00 00 	lea    0x7a4a(%rip),%rax        # e7ce <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x196>
    6d84:	48 89 c6             	mov    %rax,%rsi
    6d87:	48 89 df             	mov    %rbx,%rdi
    6d8a:	e8 35 2a 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d8f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d93:	48 89 c7             	mov    %rax,%rdi
    6d96:	e8 75 e4 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6d9b:	e9 4a 09 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    6da0:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6da4:	48 89 c7             	mov    %rax,%rdi
    6da7:	e8 64 e5 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6dac:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6db0:	48 89 c2             	mov    %rax,%rdx
    6db3:	48 8d 05 2c 7a 00 00 	lea    0x7a2c(%rip),%rax        # e7e6 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1ae>
    6dba:	48 89 c6             	mov    %rax,%rsi
    6dbd:	48 89 df             	mov    %rbx,%rdi
    6dc0:	e8 ff 29 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6dc5:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6dc9:	48 89 c7             	mov    %rax,%rdi
    6dcc:	e8 3f e4 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6dd1:	e9 14 09 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorUnknown: return "ErrorUnknown";
    6dd6:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6dda:	48 89 c7             	mov    %rax,%rdi
    6ddd:	e8 2e e5 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6de2:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6de6:	48 89 c2             	mov    %rax,%rdx
    6de9:	48 8d 05 0a 7a 00 00 	lea    0x7a0a(%rip),%rax        # e7fa <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c2>
    6df0:	48 89 c6             	mov    %rax,%rsi
    6df3:	48 89 df             	mov    %rbx,%rdi
    6df6:	e8 c9 29 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6dfb:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6dff:	48 89 c7             	mov    %rax,%rdi
    6e02:	e8 09 e4 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6e07:	e9 de 08 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    6e0c:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e10:	48 89 c7             	mov    %rax,%rdi
    6e13:	e8 f8 e4 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6e18:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e1c:	48 89 c2             	mov    %rax,%rdx
    6e1f:	48 8d 05 e1 79 00 00 	lea    0x79e1(%rip),%rax        # e807 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1cf>
    6e26:	48 89 c6             	mov    %rax,%rsi
    6e29:	48 89 df             	mov    %rbx,%rdi
    6e2c:	e8 93 29 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e31:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e35:	48 89 c7             	mov    %rax,%rdi
    6e38:	e8 d3 e3 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6e3d:	e9 a8 08 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    6e42:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e46:	48 89 c7             	mov    %rax,%rdi
    6e49:	e8 c2 e4 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6e4e:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e52:	48 89 c2             	mov    %rax,%rdx
    6e55:	48 8d 05 c0 79 00 00 	lea    0x79c0(%rip),%rax        # e81c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1e4>
    6e5c:	48 89 c6             	mov    %rax,%rsi
    6e5f:	48 89 df             	mov    %rbx,%rdi
    6e62:	e8 5d 29 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e67:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e6b:	48 89 c7             	mov    %rax,%rdi
    6e6e:	e8 9d e3 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6e73:	e9 72 08 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    6e78:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6e7c:	48 89 c7             	mov    %rax,%rdi
    6e7f:	e8 8c e4 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6e84:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6e88:	48 89 c2             	mov    %rax,%rdx
    6e8b:	48 8d 05 a5 79 00 00 	lea    0x79a5(%rip),%rax        # e837 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1ff>
    6e92:	48 89 c6             	mov    %rax,%rsi
    6e95:	48 89 df             	mov    %rbx,%rdi
    6e98:	e8 27 29 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e9d:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6ea1:	48 89 c7             	mov    %rax,%rdi
    6ea4:	e8 67 e3 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6ea9:	e9 3c 08 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    6eae:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6eb2:	48 89 c7             	mov    %rax,%rdi
    6eb5:	e8 56 e4 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6eba:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ebe:	48 89 c2             	mov    %rax,%rdx
    6ec1:	48 8d 05 88 79 00 00 	lea    0x7988(%rip),%rax        # e850 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x218>
    6ec8:	48 89 c6             	mov    %rax,%rsi
    6ecb:	48 89 df             	mov    %rbx,%rdi
    6ece:	e8 f1 28 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ed3:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ed7:	48 89 c7             	mov    %rax,%rdi
    6eda:	e8 31 e3 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6edf:	e9 06 08 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    6ee4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6ee8:	48 89 c7             	mov    %rax,%rdi
    6eeb:	e8 20 e4 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6ef0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6ef4:	48 89 c2             	mov    %rax,%rdx
    6ef7:	48 8d 05 73 79 00 00 	lea    0x7973(%rip),%rax        # e871 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x239>
    6efe:	48 89 c6             	mov    %rax,%rsi
    6f01:	48 89 df             	mov    %rbx,%rdi
    6f04:	e8 bb 28 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f09:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f0d:	48 89 c7             	mov    %rax,%rdi
    6f10:	e8 fb e2 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6f15:	e9 d0 07 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    6f1a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f1e:	48 89 c7             	mov    %rax,%rdi
    6f21:	e8 ea e3 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6f26:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f2a:	48 89 c2             	mov    %rax,%rdx
    6f2d:	48 8d 05 55 79 00 00 	lea    0x7955(%rip),%rax        # e889 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x251>
    6f34:	48 89 c6             	mov    %rax,%rsi
    6f37:	48 89 df             	mov    %rbx,%rdi
    6f3a:	e8 85 28 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f3f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f43:	48 89 c7             	mov    %rax,%rdi
    6f46:	e8 c5 e2 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6f4b:	e9 9a 07 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    6f50:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f54:	48 89 c7             	mov    %rax,%rdi
    6f57:	e8 b4 e3 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6f5c:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f60:	48 89 c2             	mov    %rax,%rdx
    6f63:	48 8d 05 33 79 00 00 	lea    0x7933(%rip),%rax        # e89d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x265>
    6f6a:	48 89 c6             	mov    %rax,%rsi
    6f6d:	48 89 df             	mov    %rbx,%rdi
    6f70:	e8 4f 28 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f75:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f79:	48 89 c7             	mov    %rax,%rdi
    6f7c:	e8 8f e2 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6f81:	e9 64 07 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    6f86:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6f8a:	48 89 c7             	mov    %rax,%rdi
    6f8d:	e8 7e e3 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6f92:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6f96:	48 89 c2             	mov    %rax,%rdx
    6f99:	48 8d 05 17 79 00 00 	lea    0x7917(%rip),%rax        # e8b7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x27f>
    6fa0:	48 89 c6             	mov    %rax,%rsi
    6fa3:	48 89 df             	mov    %rbx,%rdi
    6fa6:	e8 19 28 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6fab:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6faf:	48 89 c7             	mov    %rax,%rdi
    6fb2:	e8 59 e2 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6fb7:	e9 2e 07 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    6fbc:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fc0:	48 89 c7             	mov    %rax,%rdi
    6fc3:	e8 48 e3 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6fc8:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fcc:	48 89 c2             	mov    %rax,%rdx
    6fcf:	48 8d 05 ef 78 00 00 	lea    0x78ef(%rip),%rax        # e8c5 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28d>
    6fd6:	48 89 c6             	mov    %rax,%rsi
    6fd9:	48 89 df             	mov    %rbx,%rdi
    6fdc:	e8 e3 27 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6fe1:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fe5:	48 89 c7             	mov    %rax,%rdi
    6fe8:	e8 23 e2 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    6fed:	e9 f8 06 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    6ff2:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    6ff6:	48 89 c7             	mov    %rax,%rdi
    6ff9:	e8 12 e3 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    6ffe:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    7002:	48 89 c2             	mov    %rax,%rdx
    7005:	48 8d 05 cb 78 00 00 	lea    0x78cb(%rip),%rax        # e8d7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29f>
    700c:	48 89 c6             	mov    %rax,%rsi
    700f:	48 89 df             	mov    %rbx,%rdi
    7012:	e8 ad 27 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7017:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    701b:	48 89 c7             	mov    %rax,%rdi
    701e:	e8 ed e1 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7023:	e9 c2 06 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    7028:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    702c:	48 89 c7             	mov    %rax,%rdi
    702f:	e8 dc e2 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    7034:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    7038:	48 89 c2             	mov    %rax,%rdx
    703b:	48 8d 05 b1 78 00 00 	lea    0x78b1(%rip),%rax        # e8f3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2bb>
    7042:	48 89 c6             	mov    %rax,%rsi
    7045:	48 89 df             	mov    %rbx,%rdi
    7048:	e8 77 27 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    704d:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    7051:	48 89 c7             	mov    %rax,%rdi
    7054:	e8 b7 e1 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7059:	e9 8c 06 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    705e:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7062:	48 89 c7             	mov    %rax,%rdi
    7065:	e8 a6 e2 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    706a:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    706e:	48 89 c2             	mov    %rax,%rdx
    7071:	48 8d 05 94 78 00 00 	lea    0x7894(%rip),%rax        # e90c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2d4>
    7078:	48 89 c6             	mov    %rax,%rsi
    707b:	48 89 df             	mov    %rbx,%rdi
    707e:	e8 41 27 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7083:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7087:	48 89 c7             	mov    %rax,%rdi
    708a:	e8 81 e1 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    708f:	e9 56 06 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorVideoProfileOperationNotSupportedKHR: return "ErrorVideoProfileOperationNotSupportedKHR";
      case Result::eErrorVideoProfileFormatNotSupportedKHR: return "ErrorVideoProfileFormatNotSupportedKHR";
      case Result::eErrorVideoProfileCodecNotSupportedKHR: return "ErrorVideoProfileCodecNotSupportedKHR";
      case Result::eErrorVideoStdVersionNotSupportedKHR: return "ErrorVideoStdVersionNotSupportedKHR";
#endif /*VK_ENABLE_BETA_EXTENSIONS*/
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    7094:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    7098:	48 89 c7             	mov    %rax,%rdi
    709b:	e8 70 e2 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    70a0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70a4:	48 89 c2             	mov    %rax,%rdx
    70a7:	48 8d 05 7a 78 00 00 	lea    0x787a(%rip),%rax        # e928 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f0>
    70ae:	48 89 c6             	mov    %rax,%rsi
    70b1:	48 89 df             	mov    %rbx,%rdi
    70b4:	e8 0b 27 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70b9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70bd:	48 89 c7             	mov    %rax,%rdi
    70c0:	e8 4b e1 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    70c5:	e9 20 06 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    70ca:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70ce:	48 89 c7             	mov    %rax,%rdi
    70d1:	e8 3a e2 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    70d6:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70da:	48 89 c2             	mov    %rax,%rdx
    70dd:	48 8d 05 70 78 00 00 	lea    0x7870(%rip),%rax        # e954 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x31c>
    70e4:	48 89 c6             	mov    %rax,%rsi
    70e7:	48 89 df             	mov    %rbx,%rdi
    70ea:	e8 d5 26 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70ef:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70f3:	48 89 c7             	mov    %rax,%rdi
    70f6:	e8 15 e1 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    70fb:	e9 ea 05 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
#if defined( VK_USE_PLATFORM_WIN32_KHR )
      case Result::eErrorFullScreenExclusiveModeLostEXT: return "ErrorFullScreenExclusiveModeLostEXT";
#endif /*VK_USE_PLATFORM_WIN32_KHR*/
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    7100:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7104:	48 89 c7             	mov    %rax,%rdi
    7107:	e8 04 e2 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    710c:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7110:	48 89 c2             	mov    %rax,%rdx
    7113:	48 8d 05 4f 78 00 00 	lea    0x784f(%rip),%rax        # e969 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x331>
    711a:	48 89 c6             	mov    %rax,%rsi
    711d:	48 89 df             	mov    %rbx,%rdi
    7120:	e8 9f 26 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7125:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7129:	48 89 c7             	mov    %rax,%rdi
    712c:	e8 df e0 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7131:	e9 b4 05 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7136:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    713a:	48 89 c7             	mov    %rax,%rdi
    713d:	e8 ce e1 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    7142:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    7146:	48 89 c2             	mov    %rax,%rdx
    7149:	48 8d 05 27 78 00 00 	lea    0x7827(%rip),%rax        # e977 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x33f>
    7150:	48 89 c6             	mov    %rax,%rsi
    7153:	48 89 df             	mov    %rbx,%rdi
    7156:	e8 69 26 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    715b:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    715f:	48 89 c7             	mov    %rax,%rdi
    7162:	e8 a9 e0 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7167:	e9 7e 05 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    716c:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7170:	48 89 c7             	mov    %rax,%rdi
    7173:	e8 98 e1 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    7178:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    717c:	48 89 c2             	mov    %rax,%rdx
    717f:	48 8d 05 ff 77 00 00 	lea    0x77ff(%rip),%rax        # e985 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x34d>
    7186:	48 89 c6             	mov    %rax,%rsi
    7189:	48 89 df             	mov    %rbx,%rdi
    718c:	e8 33 26 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7191:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7195:	48 89 c7             	mov    %rax,%rdi
    7198:	e8 73 e0 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    719d:	e9 48 05 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    71a2:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71a6:	48 89 c7             	mov    %rax,%rdi
    71a9:	e8 62 e1 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    71ae:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71b2:	48 89 c2             	mov    %rax,%rdx
    71b5:	48 8d 05 de 77 00 00 	lea    0x77de(%rip),%rax        # e99a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x362>
    71bc:	48 89 c6             	mov    %rax,%rsi
    71bf:	48 89 df             	mov    %rbx,%rdi
    71c2:	e8 fd 25 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71c7:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71cb:	48 89 c7             	mov    %rax,%rdi
    71ce:	e8 3d e0 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    71d3:	e9 12 05 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    71d8:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    71dc:	48 89 c7             	mov    %rax,%rdi
    71df:	e8 2c e1 ff ff       	call   5310 <_ZNSaIcEC1Ev@plt>
    71e4:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    71e8:	48 89 c2             	mov    %rax,%rdx
    71eb:	48 8d 05 c0 77 00 00 	lea    0x77c0(%rip),%rax        # e9b2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x37a>
    71f2:	48 89 c6             	mov    %rax,%rsi
    71f5:	48 89 df             	mov    %rbx,%rdi
    71f8:	e8 c7 25 00 00       	call   97c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71fd:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    7201:	48 89 c7             	mov    %rax,%rdi
    7204:	e8 07 e0 ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7209:	e9 dc 04 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    720e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7211:	89 45 e8             	mov    %eax,-0x18(%rbp)
    7214:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    std::stringstream stream;
    7218:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    721f:	48 89 c7             	mov    %rax,%rdi
    7222:	e8 c9 de ff ff       	call   50f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    stream << std::hex << value;
    7227:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    722e:	48 83 c0 10          	add    $0x10,%rax
    7232:	48 8d 15 bd f3 ff ff 	lea    -0xc43(%rip),%rdx        # 65f6 <_ZSt3hexRSt8ios_base>
    7239:	48 89 d6             	mov    %rdx,%rsi
    723c:	48 89 c7             	mov    %rax,%rdi
    723f:	e8 1c de ff ff       	call   5060 <_ZNSolsEPFRSt8ios_baseS0_E@plt>
    7244:	48 89 c2             	mov    %rax,%rdx
    7247:	8b 45 e8             	mov    -0x18(%rbp),%eax
    724a:	89 c6                	mov    %eax,%esi
    724c:	48 89 d7             	mov    %rdx,%rdi
    724f:	e8 fc df ff ff       	call   5250 <_ZNSolsEj@plt>
    return stream.str();
    7254:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    725b:	48 89 c6             	mov    %rax,%rsi
    725e:	4c 89 e7             	mov    %r12,%rdi
    7261:	e8 ca e0 ff ff       	call   5330 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>
    7266:	90                   	nop
  }
    7267:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    726e:	48 89 c7             	mov    %rax,%rdi
    7271:	e8 aa de ff ff       	call   5120 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    return stream.str();
    7276:	90                   	nop
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    7277:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    727b:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    727f:	48 8d 0d 49 77 00 00 	lea    0x7749(%rip),%rcx        # e9cf <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x397>
    7286:	48 89 ce             	mov    %rcx,%rsi
    7289:	48 89 c7             	mov    %rax,%rdi
    728c:	e8 e9 24 00 00       	call   977a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    7291:	eb 1a                	jmp    72ad <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xaf3>
  }
    7293:	48 89 c3             	mov    %rax,%rbx
    7296:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    729d:	48 89 c7             	mov    %rax,%rdi
    72a0:	e8 7b de ff ff       	call   5120 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    72a5:	48 89 d8             	mov    %rbx,%rax
    72a8:	e9 35 04 00 00       	jmp    76e2 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    72ad:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    72b1:	48 8d 15 22 77 00 00 	lea    0x7722(%rip),%rdx        # e9da <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a2>
    72b8:	48 89 c6             	mov    %rax,%rsi
    72bb:	48 89 df             	mov    %rbx,%rdi
    72be:	e8 ed 25 00 00       	call   98b0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    72c3:	90                   	nop
    72c4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    72c8:	48 89 c7             	mov    %rax,%rdi
    72cb:	e8 5e 23 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    72d0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    72d4:	48 89 c7             	mov    %rax,%rdi
    72d7:	e8 52 23 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    72dc:	e9 09 04 00 00       	jmp    76ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuccess: return "Success";
    72e1:	48 89 c3             	mov    %rax,%rbx
    72e4:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    72e8:	48 89 c7             	mov    %rax,%rdi
    72eb:	e8 20 df ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    72f0:	48 89 d8             	mov    %rbx,%rax
    72f3:	48 89 c7             	mov    %rax,%rdi
    72f6:	e8 05 e0 ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eNotReady: return "NotReady";
    72fb:	48 89 c3             	mov    %rax,%rbx
    72fe:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    7302:	48 89 c7             	mov    %rax,%rdi
    7305:	e8 06 df ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    730a:	48 89 d8             	mov    %rbx,%rax
    730d:	48 89 c7             	mov    %rax,%rdi
    7310:	e8 eb df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eTimeout: return "Timeout";
    7315:	48 89 c3             	mov    %rax,%rbx
    7318:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    731c:	48 89 c7             	mov    %rax,%rdi
    731f:	e8 ec de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7324:	48 89 d8             	mov    %rbx,%rax
    7327:	48 89 c7             	mov    %rax,%rdi
    732a:	e8 d1 df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eEventSet: return "EventSet";
    732f:	48 89 c3             	mov    %rax,%rbx
    7332:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    7336:	48 89 c7             	mov    %rax,%rdi
    7339:	e8 d2 de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    733e:	48 89 d8             	mov    %rbx,%rax
    7341:	48 89 c7             	mov    %rax,%rdi
    7344:	e8 b7 df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eEventReset: return "EventReset";
    7349:	48 89 c3             	mov    %rax,%rbx
    734c:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    7350:	48 89 c7             	mov    %rax,%rdi
    7353:	e8 b8 de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7358:	48 89 d8             	mov    %rbx,%rax
    735b:	48 89 c7             	mov    %rax,%rdi
    735e:	e8 9d df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eIncomplete: return "Incomplete";
    7363:	48 89 c3             	mov    %rax,%rbx
    7366:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    736a:	48 89 c7             	mov    %rax,%rdi
    736d:	e8 9e de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7372:	48 89 d8             	mov    %rbx,%rax
    7375:	48 89 c7             	mov    %rax,%rdi
    7378:	e8 83 df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    737d:	48 89 c3             	mov    %rax,%rbx
    7380:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    7384:	48 89 c7             	mov    %rax,%rdi
    7387:	e8 84 de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    738c:	48 89 d8             	mov    %rbx,%rax
    738f:	48 89 c7             	mov    %rax,%rdi
    7392:	e8 69 df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    7397:	48 89 c3             	mov    %rax,%rbx
    739a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    739e:	48 89 c7             	mov    %rax,%rdi
    73a1:	e8 6a de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    73a6:	48 89 d8             	mov    %rbx,%rax
    73a9:	48 89 c7             	mov    %rax,%rdi
    73ac:	e8 4f df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    73b1:	48 89 c3             	mov    %rax,%rbx
    73b4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    73b8:	48 89 c7             	mov    %rax,%rdi
    73bb:	e8 50 de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    73c0:	48 89 d8             	mov    %rbx,%rax
    73c3:	48 89 c7             	mov    %rax,%rdi
    73c6:	e8 35 df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    73cb:	48 89 c3             	mov    %rax,%rbx
    73ce:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    73d2:	48 89 c7             	mov    %rax,%rdi
    73d5:	e8 36 de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    73da:	48 89 d8             	mov    %rbx,%rax
    73dd:	48 89 c7             	mov    %rax,%rdi
    73e0:	e8 1b df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    73e5:	48 89 c3             	mov    %rax,%rbx
    73e8:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    73ec:	48 89 c7             	mov    %rax,%rdi
    73ef:	e8 1c de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    73f4:	48 89 d8             	mov    %rbx,%rax
    73f7:	48 89 c7             	mov    %rax,%rdi
    73fa:	e8 01 df ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    73ff:	48 89 c3             	mov    %rax,%rbx
    7402:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    7406:	48 89 c7             	mov    %rax,%rdi
    7409:	e8 02 de ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    740e:	48 89 d8             	mov    %rbx,%rax
    7411:	48 89 c7             	mov    %rax,%rdi
    7414:	e8 e7 de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    7419:	48 89 c3             	mov    %rax,%rbx
    741c:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    7420:	48 89 c7             	mov    %rax,%rdi
    7423:	e8 e8 dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7428:	48 89 d8             	mov    %rbx,%rax
    742b:	48 89 c7             	mov    %rax,%rdi
    742e:	e8 cd de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    7433:	48 89 c3             	mov    %rax,%rbx
    7436:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    743a:	48 89 c7             	mov    %rax,%rdi
    743d:	e8 ce dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7442:	48 89 d8             	mov    %rbx,%rax
    7445:	48 89 c7             	mov    %rax,%rdi
    7448:	e8 b3 de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    744d:	48 89 c3             	mov    %rax,%rbx
    7450:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    7454:	48 89 c7             	mov    %rax,%rdi
    7457:	e8 b4 dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    745c:	48 89 d8             	mov    %rbx,%rax
    745f:	48 89 c7             	mov    %rax,%rdi
    7462:	e8 99 de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    7467:	48 89 c3             	mov    %rax,%rbx
    746a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    746e:	48 89 c7             	mov    %rax,%rdi
    7471:	e8 9a dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7476:	48 89 d8             	mov    %rbx,%rax
    7479:	48 89 c7             	mov    %rax,%rdi
    747c:	e8 7f de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    7481:	48 89 c3             	mov    %rax,%rbx
    7484:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7488:	48 89 c7             	mov    %rax,%rdi
    748b:	e8 80 dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7490:	48 89 d8             	mov    %rbx,%rax
    7493:	48 89 c7             	mov    %rax,%rdi
    7496:	e8 65 de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    749b:	48 89 c3             	mov    %rax,%rbx
    749e:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    74a2:	48 89 c7             	mov    %rax,%rdi
    74a5:	e8 66 dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    74aa:	48 89 d8             	mov    %rbx,%rax
    74ad:	48 89 c7             	mov    %rax,%rdi
    74b0:	e8 4b de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorUnknown: return "ErrorUnknown";
    74b5:	48 89 c3             	mov    %rax,%rbx
    74b8:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    74bc:	48 89 c7             	mov    %rax,%rdi
    74bf:	e8 4c dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    74c4:	48 89 d8             	mov    %rbx,%rax
    74c7:	48 89 c7             	mov    %rax,%rdi
    74ca:	e8 31 de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    74cf:	48 89 c3             	mov    %rax,%rbx
    74d2:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    74d6:	48 89 c7             	mov    %rax,%rdi
    74d9:	e8 32 dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    74de:	48 89 d8             	mov    %rbx,%rax
    74e1:	48 89 c7             	mov    %rax,%rdi
    74e4:	e8 17 de ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    74e9:	48 89 c3             	mov    %rax,%rbx
    74ec:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    74f0:	48 89 c7             	mov    %rax,%rdi
    74f3:	e8 18 dd ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    74f8:	48 89 d8             	mov    %rbx,%rax
    74fb:	48 89 c7             	mov    %rax,%rdi
    74fe:	e8 fd dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    7503:	48 89 c3             	mov    %rax,%rbx
    7506:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    750a:	48 89 c7             	mov    %rax,%rdi
    750d:	e8 fe dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7512:	48 89 d8             	mov    %rbx,%rax
    7515:	48 89 c7             	mov    %rax,%rdi
    7518:	e8 e3 dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    751d:	48 89 c3             	mov    %rax,%rbx
    7520:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    7524:	48 89 c7             	mov    %rax,%rdi
    7527:	e8 e4 dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    752c:	48 89 d8             	mov    %rbx,%rax
    752f:	48 89 c7             	mov    %rax,%rdi
    7532:	e8 c9 dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    7537:	48 89 c3             	mov    %rax,%rbx
    753a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    753e:	48 89 c7             	mov    %rax,%rdi
    7541:	e8 ca dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7546:	48 89 d8             	mov    %rbx,%rax
    7549:	48 89 c7             	mov    %rax,%rdi
    754c:	e8 af dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    7551:	48 89 c3             	mov    %rax,%rbx
    7554:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7558:	48 89 c7             	mov    %rax,%rdi
    755b:	e8 b0 dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7560:	48 89 d8             	mov    %rbx,%rax
    7563:	48 89 c7             	mov    %rax,%rdi
    7566:	e8 95 dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    756b:	48 89 c3             	mov    %rax,%rbx
    756e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    7572:	48 89 c7             	mov    %rax,%rdi
    7575:	e8 96 dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    757a:	48 89 d8             	mov    %rbx,%rax
    757d:	48 89 c7             	mov    %rax,%rdi
    7580:	e8 7b dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    7585:	48 89 c3             	mov    %rax,%rbx
    7588:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    758c:	48 89 c7             	mov    %rax,%rdi
    758f:	e8 7c dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7594:	48 89 d8             	mov    %rbx,%rax
    7597:	48 89 c7             	mov    %rax,%rdi
    759a:	e8 61 dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    759f:	48 89 c3             	mov    %rax,%rbx
    75a2:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    75a6:	48 89 c7             	mov    %rax,%rdi
    75a9:	e8 62 dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    75ae:	48 89 d8             	mov    %rbx,%rax
    75b1:	48 89 c7             	mov    %rax,%rdi
    75b4:	e8 47 dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    75b9:	48 89 c3             	mov    %rax,%rbx
    75bc:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    75c0:	48 89 c7             	mov    %rax,%rdi
    75c3:	e8 48 dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    75c8:	48 89 d8             	mov    %rbx,%rax
    75cb:	48 89 c7             	mov    %rax,%rdi
    75ce:	e8 2d dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    75d3:	48 89 c3             	mov    %rax,%rbx
    75d6:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    75da:	48 89 c7             	mov    %rax,%rdi
    75dd:	e8 2e dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    75e2:	48 89 d8             	mov    %rbx,%rax
    75e5:	48 89 c7             	mov    %rax,%rdi
    75e8:	e8 13 dd ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    75ed:	48 89 c3             	mov    %rax,%rbx
    75f0:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    75f4:	48 89 c7             	mov    %rax,%rdi
    75f7:	e8 14 dc ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    75fc:	48 89 d8             	mov    %rbx,%rax
    75ff:	48 89 c7             	mov    %rax,%rdi
    7602:	e8 f9 dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    7607:	48 89 c3             	mov    %rax,%rbx
    760a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    760e:	48 89 c7             	mov    %rax,%rdi
    7611:	e8 fa db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7616:	48 89 d8             	mov    %rbx,%rax
    7619:	48 89 c7             	mov    %rax,%rdi
    761c:	e8 df dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    7621:	48 89 c3             	mov    %rax,%rbx
    7624:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7628:	48 89 c7             	mov    %rax,%rdi
    762b:	e8 e0 db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7630:	48 89 d8             	mov    %rbx,%rax
    7633:	48 89 c7             	mov    %rax,%rdi
    7636:	e8 c5 dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    763b:	48 89 c3             	mov    %rax,%rbx
    763e:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7642:	48 89 c7             	mov    %rax,%rdi
    7645:	e8 c6 db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    764a:	48 89 d8             	mov    %rbx,%rax
    764d:	48 89 c7             	mov    %rax,%rdi
    7650:	e8 ab dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7655:	48 89 c3             	mov    %rax,%rbx
    7658:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    765c:	48 89 c7             	mov    %rax,%rdi
    765f:	e8 ac db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7664:	48 89 d8             	mov    %rbx,%rax
    7667:	48 89 c7             	mov    %rax,%rdi
    766a:	e8 91 dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    766f:	48 89 c3             	mov    %rax,%rbx
    7672:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7676:	48 89 c7             	mov    %rax,%rdi
    7679:	e8 92 db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    767e:	48 89 d8             	mov    %rbx,%rax
    7681:	48 89 c7             	mov    %rax,%rdi
    7684:	e8 77 dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    7689:	48 89 c3             	mov    %rax,%rbx
    768c:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    7690:	48 89 c7             	mov    %rax,%rdi
    7693:	e8 78 db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    7698:	48 89 d8             	mov    %rbx,%rax
    769b:	48 89 c7             	mov    %rax,%rdi
    769e:	e8 5d dc ff ff       	call   5300 <_Unwind_Resume@plt>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    76a3:	48 89 c3             	mov    %rax,%rbx
    76a6:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    76aa:	48 89 c7             	mov    %rax,%rdi
    76ad:	e8 5e db ff ff       	call   5210 <_ZNSaIcED1Ev@plt>
    76b2:	48 89 d8             	mov    %rbx,%rax
    76b5:	48 89 c7             	mov    %rax,%rdi
    76b8:	e8 43 dc ff ff       	call   5300 <_Unwind_Resume@plt>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    76bd:	48 89 c3             	mov    %rax,%rbx
    76c0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    76c4:	48 89 c7             	mov    %rax,%rdi
    76c7:	e8 62 1f 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    76cc:	eb 03                	jmp    76d1 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf17>
    76ce:	48 89 c3             	mov    %rax,%rbx
    76d1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    76d5:	48 89 c7             	mov    %rax,%rdi
    76d8:	e8 51 1f 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    76dd:	48 89 d8             	mov    %rbx,%rax
    76e0:	eb 00                	jmp    76e2 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
    76e2:	48 89 c7             	mov    %rax,%rdi
    76e5:	e8 16 dc ff ff       	call   5300 <_Unwind_Resume@plt>
    }
    76ea:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    76f1:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    76f8:	5b                   	pop    %rbx
    76f9:	41 5c                	pop    %r12
    76fb:	5d                   	pop    %rbp
    76fc:	c3                   	ret
    76fd:	90                   	nop

00000000000076fe <_ZN2vk5ErrorC1Ev>:
    Error() VULKAN_HPP_NOEXCEPT                = default;
    76fe:	55                   	push   %rbp
    76ff:	48 89 e5             	mov    %rsp,%rbp
    7702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7706:	48 8d 15 3b e3 00 00 	lea    0xe33b(%rip),%rdx        # 15a48 <_ZTVN2vk5ErrorE+0x10>
    770d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7711:	48 89 10             	mov    %rdx,(%rax)
    7714:	90                   	nop
    7715:	5d                   	pop    %rbp
    7716:	c3                   	ret
    7717:	90                   	nop

0000000000007718 <_ZN2vk5ErrorD1Ev>:
    virtual ~Error() VULKAN_HPP_NOEXCEPT       = default;
    7718:	55                   	push   %rbp
    7719:	48 89 e5             	mov    %rsp,%rbp
    771c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7720:	48 8d 15 21 e3 00 00 	lea    0xe321(%rip),%rdx        # 15a48 <_ZTVN2vk5ErrorE+0x10>
    7727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    772b:	48 89 10             	mov    %rdx,(%rax)
    772e:	90                   	nop
    772f:	5d                   	pop    %rbp
    7730:	c3                   	ret
    7731:	90                   	nop

0000000000007732 <_ZN2vk5ErrorD0Ev>:
    7732:	55                   	push   %rbp
    7733:	48 89 e5             	mov    %rsp,%rbp
    7736:	48 83 ec 10          	sub    $0x10,%rsp
    773a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    773e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7742:	48 89 c7             	mov    %rax,%rdi
    7745:	e8 ce ff ff ff       	call   7718 <_ZN2vk5ErrorD1Ev>
    774a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    774e:	be 08 00 00 00       	mov    $0x8,%esi
    7753:	48 89 c7             	mov    %rax,%rdi
    7756:	e8 85 da ff ff       	call   51e0 <_ZdlPvm@plt>
    775b:	c9                   	leave
    775c:	c3                   	ret
    775d:	90                   	nop

000000000000775e <_ZN2vk11SystemErrorC1ESt10error_code>:
    SystemError( std::error_code ec ) : Error(), std::system_error( ec ) {}
    775e:	55                   	push   %rbp
    775f:	48 89 e5             	mov    %rsp,%rbp
    7762:	53                   	push   %rbx
    7763:	48 83 ec 28          	sub    $0x28,%rsp
    7767:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    776b:	48 89 d1             	mov    %rdx,%rcx
    776e:	48 89 f0             	mov    %rsi,%rax
    7771:	48 89 fa             	mov    %rdi,%rdx
    7774:	48 89 ca             	mov    %rcx,%rdx
    7777:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    777b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    777f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7783:	48 89 c7             	mov    %rax,%rdi
    7786:	e8 73 ff ff ff       	call   76fe <_ZN2vk5ErrorC1Ev>
    778b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    778f:	48 8d 48 08          	lea    0x8(%rax),%rcx
    7793:	8b 55 d0             	mov    -0x30(%rbp),%edx
    7796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    779a:	89 d6                	mov    %edx,%esi
    779c:	48 89 c2             	mov    %rax,%rdx
    779f:	48 89 cf             	mov    %rcx,%rdi
    77a2:	e8 4d eb ff ff       	call   62f4 <_ZNSt12system_errorC1ESt10error_code>
    77a7:	48 8d 15 e2 e1 00 00 	lea    0xe1e2(%rip),%rdx        # 15990 <_ZTVN2vk11SystemErrorE+0x10>
    77ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77b2:	48 89 10             	mov    %rdx,(%rax)
    77b5:	48 8d 15 fc e1 00 00 	lea    0xe1fc(%rip),%rdx        # 159b8 <_ZTVN2vk11SystemErrorE+0x38>
    77bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77c0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    77c4:	eb 1a                	jmp    77e0 <_ZN2vk11SystemErrorC1ESt10error_code+0x82>
    77c6:	48 89 c3             	mov    %rax,%rbx
    77c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77cd:	48 89 c7             	mov    %rax,%rdi
    77d0:	e8 43 ff ff ff       	call   7718 <_ZN2vk5ErrorD1Ev>
    77d5:	48 89 d8             	mov    %rbx,%rax
    77d8:	48 89 c7             	mov    %rax,%rdi
    77db:	e8 20 db ff ff       	call   5300 <_Unwind_Resume@plt>
    77e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    77e4:	c9                   	leave
    77e5:	c3                   	ret

00000000000077e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>:
    SystemError( std::error_code ec, char const * what ) : Error(), std::system_error( ec, what ) {}
    77e6:	55                   	push   %rbp
    77e7:	48 89 e5             	mov    %rsp,%rbp
    77ea:	53                   	push   %rbx
    77eb:	48 83 ec 28          	sub    $0x28,%rsp
    77ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    77f3:	89 f0                	mov    %esi,%eax
    77f5:	48 89 d6             	mov    %rdx,%rsi
    77f8:	48 89 f2             	mov    %rsi,%rdx
    77fb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    77ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7803:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    7807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    780b:	48 89 c7             	mov    %rax,%rdi
    780e:	e8 eb fe ff ff       	call   76fe <_ZN2vk5ErrorC1Ev>
    7813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7817:	48 8d 78 08          	lea    0x8(%rax),%rdi
    781b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    781f:	8b 55 d0             	mov    -0x30(%rbp),%edx
    7822:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7826:	89 d6                	mov    %edx,%esi
    7828:	48 89 c2             	mov    %rax,%rdx
    782b:	e8 5c eb ff ff       	call   638c <_ZNSt12system_errorC1ESt10error_codePKc>
    7830:	48 8d 15 59 e1 00 00 	lea    0xe159(%rip),%rdx        # 15990 <_ZTVN2vk11SystemErrorE+0x10>
    7837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    783b:	48 89 10             	mov    %rdx,(%rax)
    783e:	48 8d 15 73 e1 00 00 	lea    0xe173(%rip),%rdx        # 159b8 <_ZTVN2vk11SystemErrorE+0x38>
    7845:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7849:	48 89 50 08          	mov    %rdx,0x8(%rax)
    784d:	eb 1a                	jmp    7869 <_ZN2vk11SystemErrorC1ESt10error_codePKc+0x83>
    784f:	48 89 c3             	mov    %rax,%rbx
    7852:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7856:	48 89 c7             	mov    %rax,%rdi
    7859:	e8 ba fe ff ff       	call   7718 <_ZN2vk5ErrorD1Ev>
    785e:	48 89 d8             	mov    %rbx,%rax
    7861:	48 89 c7             	mov    %rax,%rdi
    7864:	e8 97 da ff ff       	call   5300 <_Unwind_Resume@plt>
    7869:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    786d:	c9                   	leave
    786e:	c3                   	ret
    786f:	90                   	nop

0000000000007870 <_ZNK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    7870:	55                   	push   %rbp
    7871:	48 89 e5             	mov    %rsp,%rbp
    7874:	48 83 ec 10          	sub    $0x10,%rsp
    7878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::system_error::what();
    787c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7880:	48 83 c0 08          	add    $0x8,%rax
    7884:	48 89 c7             	mov    %rax,%rdi
    7887:	e8 d4 d9 ff ff       	call   5260 <_ZNKSt13runtime_error4whatEv@plt>
    }
    788c:	c9                   	leave
    788d:	c3                   	ret

000000000000788e <_ZThn8_NK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    788e:	48 83 ef 08          	sub    $0x8,%rdi
    7892:	eb dc                	jmp    7870 <_ZNK2vk11SystemError4whatEv>

0000000000007894 <_ZN2vk11SystemErrorD1Ev>:
  class SystemError
    7894:	55                   	push   %rbp
    7895:	48 89 e5             	mov    %rsp,%rbp
    7898:	48 83 ec 10          	sub    $0x10,%rsp
    789c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78a0:	48 8d 15 e9 e0 00 00 	lea    0xe0e9(%rip),%rdx        # 15990 <_ZTVN2vk11SystemErrorE+0x10>
    78a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78ab:	48 89 10             	mov    %rdx,(%rax)
    78ae:	48 8d 15 03 e1 00 00 	lea    0xe103(%rip),%rdx        # 159b8 <_ZTVN2vk11SystemErrorE+0x38>
    78b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78b9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    78bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78c1:	48 83 c0 08          	add    $0x8,%rax
    78c5:	48 89 c7             	mov    %rax,%rdi
    78c8:	e8 a3 d8 ff ff       	call   5170 <_ZNSt12system_errorD2Ev@plt>
    78cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78d1:	48 89 c7             	mov    %rax,%rdi
    78d4:	e8 3f fe ff ff       	call   7718 <_ZN2vk5ErrorD1Ev>
    78d9:	90                   	nop
    78da:	c9                   	leave
    78db:	c3                   	ret

00000000000078dc <_ZThn8_N2vk11SystemErrorD1Ev>:
    78dc:	48 83 ef 08          	sub    $0x8,%rdi
    78e0:	eb b2                	jmp    7894 <_ZN2vk11SystemErrorD1Ev>

00000000000078e2 <_ZN2vk11SystemErrorD0Ev>:
    78e2:	55                   	push   %rbp
    78e3:	48 89 e5             	mov    %rsp,%rbp
    78e6:	48 83 ec 10          	sub    $0x10,%rsp
    78ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f2:	48 89 c7             	mov    %rax,%rdi
    78f5:	e8 9a ff ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    78fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78fe:	be 28 00 00 00       	mov    $0x28,%esi
    7903:	48 89 c7             	mov    %rax,%rdi
    7906:	e8 d5 d8 ff ff       	call   51e0 <_ZdlPvm@plt>
    790b:	c9                   	leave
    790c:	c3                   	ret

000000000000790d <_ZThn8_N2vk11SystemErrorD0Ev>:
    790d:	48 83 ef 08          	sub    $0x8,%rdi
    7911:	eb cf                	jmp    78e2 <_ZN2vk11SystemErrorD0Ev>
    7913:	90                   	nop

0000000000007914 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>:
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    7914:	55                   	push   %rbp
    7915:	48 89 e5             	mov    %rsp,%rbp
    7918:	53                   	push   %rbx
    7919:	48 83 ec 38          	sub    $0x38,%rsp
    791d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7921:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7925:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7929:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7930:	0f b6 05 a1 e9 00 00 	movzbl 0xe9a1(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7937:	84 c0                	test   %al,%al
    7939:	0f 94 c0             	sete   %al
    793c:	84 c0                	test   %al,%al
    793e:	74 4a                	je     798a <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    7940:	48 8d 05 91 e9 00 00 	lea    0xe991(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7947:	48 89 c7             	mov    %rax,%rdi
    794a:	e8 d1 d9 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    794f:	85 c0                	test   %eax,%eax
    7951:	0f 95 c0             	setne  %al
    7954:	84 c0                	test   %al,%al
    7956:	74 32                	je     798a <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    7958:	48 8d 05 39 e8 00 00 	lea    0xe839(%rip),%rax        # 16198 <__dso_handle>
    795f:	48 89 c2             	mov    %rax,%rdx
    7962:	48 8d 05 37 e8 00 00 	lea    0xe837(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7969:	48 89 c6             	mov    %rax,%rsi
    796c:	48 8d 05 d5 40 00 00 	lea    0x40d5(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7973:	48 89 c7             	mov    %rax,%rdi
    7976:	e8 05 d8 ff ff       	call   5180 <__cxa_atexit@plt>
    797b:	48 8d 05 56 e9 00 00 	lea    0xe956(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7982:	48 89 c7             	mov    %rax,%rdi
    7985:	e8 46 d7 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    798a:	48 8d 15 0f e8 00 00 	lea    0xe80f(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7991:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7994:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7998:	89 ce                	mov    %ecx,%esi
    799a:	48 89 c7             	mov    %rax,%rdi
    799d:	e8 b4 e8 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    79a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    79a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    79aa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    79ae:	48 89 c6             	mov    %rax,%rsi
    79b1:	48 89 d7             	mov    %rdx,%rdi
    79b4:	48 89 d0             	mov    %rdx,%rax
    79b7:	48 89 c2             	mov    %rax,%rdx
    79ba:	48 89 df             	mov    %rbx,%rdi
    79bd:	e8 24 fe ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    79c2:	48 8d 15 77 df 00 00 	lea    0xdf77(%rip),%rdx        # 15940 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    79c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79cd:	48 89 10             	mov    %rdx,(%rax)
    79d0:	48 8d 15 91 df 00 00 	lea    0xdf91(%rip),%rdx        # 15968 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    79d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79db:	48 89 50 08          	mov    %rdx,0x8(%rax)
    79df:	90                   	nop
    79e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79e4:	c9                   	leave
    79e5:	c3                   	ret

00000000000079e6 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>:
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    79e6:	55                   	push   %rbp
    79e7:	48 89 e5             	mov    %rsp,%rbp
    79ea:	53                   	push   %rbx
    79eb:	48 83 ec 38          	sub    $0x38,%rsp
    79ef:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    79f3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    79f7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    79fb:	c7 45 ec fe ff ff ff 	movl   $0xfffffffe,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7a02:	0f b6 05 cf e8 00 00 	movzbl 0xe8cf(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a09:	84 c0                	test   %al,%al
    7a0b:	0f 94 c0             	sete   %al
    7a0e:	84 c0                	test   %al,%al
    7a10:	74 4a                	je     7a5c <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7a12:	48 8d 05 bf e8 00 00 	lea    0xe8bf(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a19:	48 89 c7             	mov    %rax,%rdi
    7a1c:	e8 ff d8 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7a21:	85 c0                	test   %eax,%eax
    7a23:	0f 95 c0             	setne  %al
    7a26:	84 c0                	test   %al,%al
    7a28:	74 32                	je     7a5c <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7a2a:	48 8d 05 67 e7 00 00 	lea    0xe767(%rip),%rax        # 16198 <__dso_handle>
    7a31:	48 89 c2             	mov    %rax,%rdx
    7a34:	48 8d 05 65 e7 00 00 	lea    0xe765(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7a3b:	48 89 c6             	mov    %rax,%rsi
    7a3e:	48 8d 05 03 40 00 00 	lea    0x4003(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7a45:	48 89 c7             	mov    %rax,%rdi
    7a48:	e8 33 d7 ff ff       	call   5180 <__cxa_atexit@plt>
    7a4d:	48 8d 05 84 e8 00 00 	lea    0xe884(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a54:	48 89 c7             	mov    %rax,%rdi
    7a57:	e8 74 d6 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7a5c:	48 8d 15 3d e7 00 00 	lea    0xe73d(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7a63:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7a66:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7a6a:	89 ce                	mov    %ecx,%esi
    7a6c:	48 89 c7             	mov    %rax,%rdi
    7a6f:	e8 e2 e7 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7a74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7a7c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7a80:	48 89 c6             	mov    %rax,%rsi
    7a83:	48 89 d7             	mov    %rdx,%rdi
    7a86:	48 89 d0             	mov    %rdx,%rax
    7a89:	48 89 c2             	mov    %rax,%rdx
    7a8c:	48 89 df             	mov    %rbx,%rdi
    7a8f:	e8 52 fd ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7a94:	48 8d 15 55 de 00 00 	lea    0xde55(%rip),%rdx        # 158f0 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    7a9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a9f:	48 89 10             	mov    %rdx,(%rax)
    7aa2:	48 8d 15 6f de 00 00 	lea    0xde6f(%rip),%rdx        # 15918 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    7aa9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7aad:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7ab1:	90                   	nop
    7ab2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ab6:	c9                   	leave
    7ab7:	c3                   	ret

0000000000007ab8 <_ZN2vk25InitializationFailedErrorC1EPKc>:
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7ab8:	55                   	push   %rbp
    7ab9:	48 89 e5             	mov    %rsp,%rbp
    7abc:	53                   	push   %rbx
    7abd:	48 83 ec 38          	sub    $0x38,%rsp
    7ac1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7ac5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7ac9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7acd:	c7 45 ec fd ff ff ff 	movl   $0xfffffffd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7ad4:	0f b6 05 fd e7 00 00 	movzbl 0xe7fd(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7adb:	84 c0                	test   %al,%al
    7add:	0f 94 c0             	sete   %al
    7ae0:	84 c0                	test   %al,%al
    7ae2:	74 4a                	je     7b2e <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7ae4:	48 8d 05 ed e7 00 00 	lea    0xe7ed(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7aeb:	48 89 c7             	mov    %rax,%rdi
    7aee:	e8 2d d8 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7af3:	85 c0                	test   %eax,%eax
    7af5:	0f 95 c0             	setne  %al
    7af8:	84 c0                	test   %al,%al
    7afa:	74 32                	je     7b2e <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7afc:	48 8d 05 95 e6 00 00 	lea    0xe695(%rip),%rax        # 16198 <__dso_handle>
    7b03:	48 89 c2             	mov    %rax,%rdx
    7b06:	48 8d 05 93 e6 00 00 	lea    0xe693(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7b0d:	48 89 c6             	mov    %rax,%rsi
    7b10:	48 8d 05 31 3f 00 00 	lea    0x3f31(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7b17:	48 89 c7             	mov    %rax,%rdi
    7b1a:	e8 61 d6 ff ff       	call   5180 <__cxa_atexit@plt>
    7b1f:	48 8d 05 b2 e7 00 00 	lea    0xe7b2(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b26:	48 89 c7             	mov    %rax,%rdi
    7b29:	e8 a2 d5 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7b2e:	48 8d 15 6b e6 00 00 	lea    0xe66b(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7b35:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7b38:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7b3c:	89 ce                	mov    %ecx,%esi
    7b3e:	48 89 c7             	mov    %rax,%rdi
    7b41:	e8 10 e7 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7b46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b4a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7b4e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7b52:	48 89 c6             	mov    %rax,%rsi
    7b55:	48 89 d7             	mov    %rdx,%rdi
    7b58:	48 89 d0             	mov    %rdx,%rax
    7b5b:	48 89 c2             	mov    %rax,%rdx
    7b5e:	48 89 df             	mov    %rbx,%rdi
    7b61:	e8 80 fc ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7b66:	48 8d 15 33 dd 00 00 	lea    0xdd33(%rip),%rdx        # 158a0 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    7b6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b71:	48 89 10             	mov    %rdx,(%rax)
    7b74:	48 8d 15 4d dd 00 00 	lea    0xdd4d(%rip),%rdx        # 158c8 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    7b7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7b83:	90                   	nop
    7b84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b88:	c9                   	leave
    7b89:	c3                   	ret

0000000000007b8a <_ZN2vk15DeviceLostErrorC1EPKc>:
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7b8a:	55                   	push   %rbp
    7b8b:	48 89 e5             	mov    %rsp,%rbp
    7b8e:	53                   	push   %rbx
    7b8f:	48 83 ec 38          	sub    $0x38,%rsp
    7b93:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7b97:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7b9b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7b9f:	c7 45 ec fc ff ff ff 	movl   $0xfffffffc,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7ba6:	0f b6 05 2b e7 00 00 	movzbl 0xe72b(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bad:	84 c0                	test   %al,%al
    7baf:	0f 94 c0             	sete   %al
    7bb2:	84 c0                	test   %al,%al
    7bb4:	74 4a                	je     7c00 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7bb6:	48 8d 05 1b e7 00 00 	lea    0xe71b(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bbd:	48 89 c7             	mov    %rax,%rdi
    7bc0:	e8 5b d7 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7bc5:	85 c0                	test   %eax,%eax
    7bc7:	0f 95 c0             	setne  %al
    7bca:	84 c0                	test   %al,%al
    7bcc:	74 32                	je     7c00 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7bce:	48 8d 05 c3 e5 00 00 	lea    0xe5c3(%rip),%rax        # 16198 <__dso_handle>
    7bd5:	48 89 c2             	mov    %rax,%rdx
    7bd8:	48 8d 05 c1 e5 00 00 	lea    0xe5c1(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7bdf:	48 89 c6             	mov    %rax,%rsi
    7be2:	48 8d 05 5f 3e 00 00 	lea    0x3e5f(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7be9:	48 89 c7             	mov    %rax,%rdi
    7bec:	e8 8f d5 ff ff       	call   5180 <__cxa_atexit@plt>
    7bf1:	48 8d 05 e0 e6 00 00 	lea    0xe6e0(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bf8:	48 89 c7             	mov    %rax,%rdi
    7bfb:	e8 d0 d4 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7c00:	48 8d 15 99 e5 00 00 	lea    0xe599(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7c07:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7c0a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7c0e:	89 ce                	mov    %ecx,%esi
    7c10:	48 89 c7             	mov    %rax,%rdi
    7c13:	e8 3e e6 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7c18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c1c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7c20:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7c24:	48 89 c6             	mov    %rax,%rsi
    7c27:	48 89 d7             	mov    %rdx,%rdi
    7c2a:	48 89 d0             	mov    %rdx,%rax
    7c2d:	48 89 c2             	mov    %rax,%rdx
    7c30:	48 89 df             	mov    %rbx,%rdi
    7c33:	e8 ae fb ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7c38:	48 8d 15 11 dc 00 00 	lea    0xdc11(%rip),%rdx        # 15850 <_ZTVN2vk15DeviceLostErrorE+0x10>
    7c3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c43:	48 89 10             	mov    %rdx,(%rax)
    7c46:	48 8d 15 2b dc 00 00 	lea    0xdc2b(%rip),%rdx        # 15878 <_ZTVN2vk15DeviceLostErrorE+0x38>
    7c4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c51:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7c55:	90                   	nop
    7c56:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c5a:	c9                   	leave
    7c5b:	c3                   	ret

0000000000007c5c <_ZN2vk20MemoryMapFailedErrorC1EPKc>:
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7c5c:	55                   	push   %rbp
    7c5d:	48 89 e5             	mov    %rsp,%rbp
    7c60:	53                   	push   %rbx
    7c61:	48 83 ec 38          	sub    $0x38,%rsp
    7c65:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7c69:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7c6d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7c71:	c7 45 ec fb ff ff ff 	movl   $0xfffffffb,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7c78:	0f b6 05 59 e6 00 00 	movzbl 0xe659(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c7f:	84 c0                	test   %al,%al
    7c81:	0f 94 c0             	sete   %al
    7c84:	84 c0                	test   %al,%al
    7c86:	74 4a                	je     7cd2 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7c88:	48 8d 05 49 e6 00 00 	lea    0xe649(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c8f:	48 89 c7             	mov    %rax,%rdi
    7c92:	e8 89 d6 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7c97:	85 c0                	test   %eax,%eax
    7c99:	0f 95 c0             	setne  %al
    7c9c:	84 c0                	test   %al,%al
    7c9e:	74 32                	je     7cd2 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7ca0:	48 8d 05 f1 e4 00 00 	lea    0xe4f1(%rip),%rax        # 16198 <__dso_handle>
    7ca7:	48 89 c2             	mov    %rax,%rdx
    7caa:	48 8d 05 ef e4 00 00 	lea    0xe4ef(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7cb1:	48 89 c6             	mov    %rax,%rsi
    7cb4:	48 8d 05 8d 3d 00 00 	lea    0x3d8d(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7cbb:	48 89 c7             	mov    %rax,%rdi
    7cbe:	e8 bd d4 ff ff       	call   5180 <__cxa_atexit@plt>
    7cc3:	48 8d 05 0e e6 00 00 	lea    0xe60e(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7cca:	48 89 c7             	mov    %rax,%rdi
    7ccd:	e8 fe d3 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7cd2:	48 8d 15 c7 e4 00 00 	lea    0xe4c7(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7cd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7cdc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7ce0:	89 ce                	mov    %ecx,%esi
    7ce2:	48 89 c7             	mov    %rax,%rdi
    7ce5:	e8 6c e5 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7cea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7cee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7cf2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7cf6:	48 89 c6             	mov    %rax,%rsi
    7cf9:	48 89 d7             	mov    %rdx,%rdi
    7cfc:	48 89 d0             	mov    %rdx,%rax
    7cff:	48 89 c2             	mov    %rax,%rdx
    7d02:	48 89 df             	mov    %rbx,%rdi
    7d05:	e8 dc fa ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7d0a:	48 8d 15 ef da 00 00 	lea    0xdaef(%rip),%rdx        # 15800 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    7d11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d15:	48 89 10             	mov    %rdx,(%rax)
    7d18:	48 8d 15 09 db 00 00 	lea    0xdb09(%rip),%rdx        # 15828 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    7d1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d23:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7d27:	90                   	nop
    7d28:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d2c:	c9                   	leave
    7d2d:	c3                   	ret

0000000000007d2e <_ZN2vk20LayerNotPresentErrorC1EPKc>:
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7d2e:	55                   	push   %rbp
    7d2f:	48 89 e5             	mov    %rsp,%rbp
    7d32:	53                   	push   %rbx
    7d33:	48 83 ec 38          	sub    $0x38,%rsp
    7d37:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7d3b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7d3f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7d43:	c7 45 ec fa ff ff ff 	movl   $0xfffffffa,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7d4a:	0f b6 05 87 e5 00 00 	movzbl 0xe587(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d51:	84 c0                	test   %al,%al
    7d53:	0f 94 c0             	sete   %al
    7d56:	84 c0                	test   %al,%al
    7d58:	74 4a                	je     7da4 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7d5a:	48 8d 05 77 e5 00 00 	lea    0xe577(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d61:	48 89 c7             	mov    %rax,%rdi
    7d64:	e8 b7 d5 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7d69:	85 c0                	test   %eax,%eax
    7d6b:	0f 95 c0             	setne  %al
    7d6e:	84 c0                	test   %al,%al
    7d70:	74 32                	je     7da4 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7d72:	48 8d 05 1f e4 00 00 	lea    0xe41f(%rip),%rax        # 16198 <__dso_handle>
    7d79:	48 89 c2             	mov    %rax,%rdx
    7d7c:	48 8d 05 1d e4 00 00 	lea    0xe41d(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7d83:	48 89 c6             	mov    %rax,%rsi
    7d86:	48 8d 05 bb 3c 00 00 	lea    0x3cbb(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7d8d:	48 89 c7             	mov    %rax,%rdi
    7d90:	e8 eb d3 ff ff       	call   5180 <__cxa_atexit@plt>
    7d95:	48 8d 05 3c e5 00 00 	lea    0xe53c(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d9c:	48 89 c7             	mov    %rax,%rdi
    7d9f:	e8 2c d3 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7da4:	48 8d 15 f5 e3 00 00 	lea    0xe3f5(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7dab:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7dae:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7db2:	89 ce                	mov    %ecx,%esi
    7db4:	48 89 c7             	mov    %rax,%rdi
    7db7:	e8 9a e4 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7dbc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7dc0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7dc4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7dc8:	48 89 c6             	mov    %rax,%rsi
    7dcb:	48 89 d7             	mov    %rdx,%rdi
    7dce:	48 89 d0             	mov    %rdx,%rax
    7dd1:	48 89 c2             	mov    %rax,%rdx
    7dd4:	48 89 df             	mov    %rbx,%rdi
    7dd7:	e8 0a fa ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7ddc:	48 8d 15 cd d9 00 00 	lea    0xd9cd(%rip),%rdx        # 157b0 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    7de3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7de7:	48 89 10             	mov    %rdx,(%rax)
    7dea:	48 8d 15 e7 d9 00 00 	lea    0xd9e7(%rip),%rdx        # 157d8 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    7df1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7df5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7df9:	90                   	nop
    7dfa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7dfe:	c9                   	leave
    7dff:	c3                   	ret

0000000000007e00 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>:
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7e00:	55                   	push   %rbp
    7e01:	48 89 e5             	mov    %rsp,%rbp
    7e04:	53                   	push   %rbx
    7e05:	48 83 ec 38          	sub    $0x38,%rsp
    7e09:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7e0d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7e11:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7e15:	c7 45 ec f9 ff ff ff 	movl   $0xfffffff9,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7e1c:	0f b6 05 b5 e4 00 00 	movzbl 0xe4b5(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e23:	84 c0                	test   %al,%al
    7e25:	0f 94 c0             	sete   %al
    7e28:	84 c0                	test   %al,%al
    7e2a:	74 4a                	je     7e76 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7e2c:	48 8d 05 a5 e4 00 00 	lea    0xe4a5(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e33:	48 89 c7             	mov    %rax,%rdi
    7e36:	e8 e5 d4 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7e3b:	85 c0                	test   %eax,%eax
    7e3d:	0f 95 c0             	setne  %al
    7e40:	84 c0                	test   %al,%al
    7e42:	74 32                	je     7e76 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7e44:	48 8d 05 4d e3 00 00 	lea    0xe34d(%rip),%rax        # 16198 <__dso_handle>
    7e4b:	48 89 c2             	mov    %rax,%rdx
    7e4e:	48 8d 05 4b e3 00 00 	lea    0xe34b(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7e55:	48 89 c6             	mov    %rax,%rsi
    7e58:	48 8d 05 e9 3b 00 00 	lea    0x3be9(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7e5f:	48 89 c7             	mov    %rax,%rdi
    7e62:	e8 19 d3 ff ff       	call   5180 <__cxa_atexit@plt>
    7e67:	48 8d 05 6a e4 00 00 	lea    0xe46a(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e6e:	48 89 c7             	mov    %rax,%rdi
    7e71:	e8 5a d2 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7e76:	48 8d 15 23 e3 00 00 	lea    0xe323(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7e7d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7e80:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7e84:	89 ce                	mov    %ecx,%esi
    7e86:	48 89 c7             	mov    %rax,%rdi
    7e89:	e8 c8 e3 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7e8e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7e92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7e96:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7e9a:	48 89 c6             	mov    %rax,%rsi
    7e9d:	48 89 d7             	mov    %rdx,%rdi
    7ea0:	48 89 d0             	mov    %rdx,%rax
    7ea3:	48 89 c2             	mov    %rax,%rdx
    7ea6:	48 89 df             	mov    %rbx,%rdi
    7ea9:	e8 38 f9 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7eae:	48 8d 15 ab d8 00 00 	lea    0xd8ab(%rip),%rdx        # 15760 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    7eb5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7eb9:	48 89 10             	mov    %rdx,(%rax)
    7ebc:	48 8d 15 c5 d8 00 00 	lea    0xd8c5(%rip),%rdx        # 15788 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    7ec3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ec7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7ecb:	90                   	nop
    7ecc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ed0:	c9                   	leave
    7ed1:	c3                   	ret

0000000000007ed2 <_ZN2vk22FeatureNotPresentErrorC1EPKc>:
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7ed2:	55                   	push   %rbp
    7ed3:	48 89 e5             	mov    %rsp,%rbp
    7ed6:	53                   	push   %rbx
    7ed7:	48 83 ec 38          	sub    $0x38,%rsp
    7edb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7edf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7ee3:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7ee7:	c7 45 ec f8 ff ff ff 	movl   $0xfffffff8,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7eee:	0f b6 05 e3 e3 00 00 	movzbl 0xe3e3(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ef5:	84 c0                	test   %al,%al
    7ef7:	0f 94 c0             	sete   %al
    7efa:	84 c0                	test   %al,%al
    7efc:	74 4a                	je     7f48 <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7efe:	48 8d 05 d3 e3 00 00 	lea    0xe3d3(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f05:	48 89 c7             	mov    %rax,%rdi
    7f08:	e8 13 d4 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7f0d:	85 c0                	test   %eax,%eax
    7f0f:	0f 95 c0             	setne  %al
    7f12:	84 c0                	test   %al,%al
    7f14:	74 32                	je     7f48 <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7f16:	48 8d 05 7b e2 00 00 	lea    0xe27b(%rip),%rax        # 16198 <__dso_handle>
    7f1d:	48 89 c2             	mov    %rax,%rdx
    7f20:	48 8d 05 79 e2 00 00 	lea    0xe279(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7f27:	48 89 c6             	mov    %rax,%rsi
    7f2a:	48 8d 05 17 3b 00 00 	lea    0x3b17(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    7f31:	48 89 c7             	mov    %rax,%rdi
    7f34:	e8 47 d2 ff ff       	call   5180 <__cxa_atexit@plt>
    7f39:	48 8d 05 98 e3 00 00 	lea    0xe398(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f40:	48 89 c7             	mov    %rax,%rdi
    7f43:	e8 88 d1 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    7f48:	48 8d 15 51 e2 00 00 	lea    0xe251(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7f4f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7f52:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7f56:	89 ce                	mov    %ecx,%esi
    7f58:	48 89 c7             	mov    %rax,%rdi
    7f5b:	e8 f6 e2 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7f60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f64:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7f68:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7f6c:	48 89 c6             	mov    %rax,%rsi
    7f6f:	48 89 d7             	mov    %rdx,%rdi
    7f72:	48 89 d0             	mov    %rdx,%rax
    7f75:	48 89 c2             	mov    %rax,%rdx
    7f78:	48 89 df             	mov    %rbx,%rdi
    7f7b:	e8 66 f8 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7f80:	48 8d 15 89 d7 00 00 	lea    0xd789(%rip),%rdx        # 15710 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    7f87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f8b:	48 89 10             	mov    %rdx,(%rax)
    7f8e:	48 8d 15 a3 d7 00 00 	lea    0xd7a3(%rip),%rdx        # 15738 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    7f95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f99:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7f9d:	90                   	nop
    7f9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7fa2:	c9                   	leave
    7fa3:	c3                   	ret

0000000000007fa4 <_ZN2vk23IncompatibleDriverErrorC1EPKc>:
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    7fa4:	55                   	push   %rbp
    7fa5:	48 89 e5             	mov    %rsp,%rbp
    7fa8:	53                   	push   %rbx
    7fa9:	48 83 ec 38          	sub    $0x38,%rsp
    7fad:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7fb1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7fb5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7fb9:	c7 45 ec f7 ff ff ff 	movl   $0xfffffff7,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7fc0:	0f b6 05 11 e3 00 00 	movzbl 0xe311(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7fc7:	84 c0                	test   %al,%al
    7fc9:	0f 94 c0             	sete   %al
    7fcc:	84 c0                	test   %al,%al
    7fce:	74 4a                	je     801a <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    7fd0:	48 8d 05 01 e3 00 00 	lea    0xe301(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7fd7:	48 89 c7             	mov    %rax,%rdi
    7fda:	e8 41 d3 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    7fdf:	85 c0                	test   %eax,%eax
    7fe1:	0f 95 c0             	setne  %al
    7fe4:	84 c0                	test   %al,%al
    7fe6:	74 32                	je     801a <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    7fe8:	48 8d 05 a9 e1 00 00 	lea    0xe1a9(%rip),%rax        # 16198 <__dso_handle>
    7fef:	48 89 c2             	mov    %rax,%rdx
    7ff2:	48 8d 05 a7 e1 00 00 	lea    0xe1a7(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    7ff9:	48 89 c6             	mov    %rax,%rsi
    7ffc:	48 8d 05 45 3a 00 00 	lea    0x3a45(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8003:	48 89 c7             	mov    %rax,%rdi
    8006:	e8 75 d1 ff ff       	call   5180 <__cxa_atexit@plt>
    800b:	48 8d 05 c6 e2 00 00 	lea    0xe2c6(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8012:	48 89 c7             	mov    %rax,%rdi
    8015:	e8 b6 d0 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    801a:	48 8d 15 7f e1 00 00 	lea    0xe17f(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8021:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8024:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8028:	89 ce                	mov    %ecx,%esi
    802a:	48 89 c7             	mov    %rax,%rdi
    802d:	e8 24 e2 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8032:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8036:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    803a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    803e:	48 89 c6             	mov    %rax,%rsi
    8041:	48 89 d7             	mov    %rdx,%rdi
    8044:	48 89 d0             	mov    %rdx,%rax
    8047:	48 89 c2             	mov    %rax,%rdx
    804a:	48 89 df             	mov    %rbx,%rdi
    804d:	e8 94 f7 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8052:	48 8d 15 67 d6 00 00 	lea    0xd667(%rip),%rdx        # 156c0 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    8059:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    805d:	48 89 10             	mov    %rdx,(%rax)
    8060:	48 8d 15 81 d6 00 00 	lea    0xd681(%rip),%rdx        # 156e8 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    8067:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    806b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    806f:	90                   	nop
    8070:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8074:	c9                   	leave
    8075:	c3                   	ret

0000000000008076 <_ZN2vk19TooManyObjectsErrorC1EPKc>:
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    8076:	55                   	push   %rbp
    8077:	48 89 e5             	mov    %rsp,%rbp
    807a:	53                   	push   %rbx
    807b:	48 83 ec 38          	sub    $0x38,%rsp
    807f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8083:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8087:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    808b:	c7 45 ec f6 ff ff ff 	movl   $0xfffffff6,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8092:	0f b6 05 3f e2 00 00 	movzbl 0xe23f(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8099:	84 c0                	test   %al,%al
    809b:	0f 94 c0             	sete   %al
    809e:	84 c0                	test   %al,%al
    80a0:	74 4a                	je     80ec <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    80a2:	48 8d 05 2f e2 00 00 	lea    0xe22f(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    80a9:	48 89 c7             	mov    %rax,%rdi
    80ac:	e8 6f d2 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    80b1:	85 c0                	test   %eax,%eax
    80b3:	0f 95 c0             	setne  %al
    80b6:	84 c0                	test   %al,%al
    80b8:	74 32                	je     80ec <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    80ba:	48 8d 05 d7 e0 00 00 	lea    0xe0d7(%rip),%rax        # 16198 <__dso_handle>
    80c1:	48 89 c2             	mov    %rax,%rdx
    80c4:	48 8d 05 d5 e0 00 00 	lea    0xe0d5(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    80cb:	48 89 c6             	mov    %rax,%rsi
    80ce:	48 8d 05 73 39 00 00 	lea    0x3973(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    80d5:	48 89 c7             	mov    %rax,%rdi
    80d8:	e8 a3 d0 ff ff       	call   5180 <__cxa_atexit@plt>
    80dd:	48 8d 05 f4 e1 00 00 	lea    0xe1f4(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    80e4:	48 89 c7             	mov    %rax,%rdi
    80e7:	e8 e4 cf ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    80ec:	48 8d 15 ad e0 00 00 	lea    0xe0ad(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    80f3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    80f6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    80fa:	89 ce                	mov    %ecx,%esi
    80fc:	48 89 c7             	mov    %rax,%rdi
    80ff:	e8 52 e1 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8104:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8108:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    810c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8110:	48 89 c6             	mov    %rax,%rsi
    8113:	48 89 d7             	mov    %rdx,%rdi
    8116:	48 89 d0             	mov    %rdx,%rax
    8119:	48 89 c2             	mov    %rax,%rdx
    811c:	48 89 df             	mov    %rbx,%rdi
    811f:	e8 c2 f6 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8124:	48 8d 15 45 d5 00 00 	lea    0xd545(%rip),%rdx        # 15670 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    812b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    812f:	48 89 10             	mov    %rdx,(%rax)
    8132:	48 8d 15 5f d5 00 00 	lea    0xd55f(%rip),%rdx        # 15698 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    8139:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    813d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8141:	90                   	nop
    8142:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8146:	c9                   	leave
    8147:	c3                   	ret

0000000000008148 <_ZN2vk23FormatNotSupportedErrorC1EPKc>:
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    8148:	55                   	push   %rbp
    8149:	48 89 e5             	mov    %rsp,%rbp
    814c:	53                   	push   %rbx
    814d:	48 83 ec 38          	sub    $0x38,%rsp
    8151:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8155:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8159:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    815d:	c7 45 ec f5 ff ff ff 	movl   $0xfffffff5,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8164:	0f b6 05 6d e1 00 00 	movzbl 0xe16d(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    816b:	84 c0                	test   %al,%al
    816d:	0f 94 c0             	sete   %al
    8170:	84 c0                	test   %al,%al
    8172:	74 4a                	je     81be <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    8174:	48 8d 05 5d e1 00 00 	lea    0xe15d(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    817b:	48 89 c7             	mov    %rax,%rdi
    817e:	e8 9d d1 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8183:	85 c0                	test   %eax,%eax
    8185:	0f 95 c0             	setne  %al
    8188:	84 c0                	test   %al,%al
    818a:	74 32                	je     81be <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    818c:	48 8d 05 05 e0 00 00 	lea    0xe005(%rip),%rax        # 16198 <__dso_handle>
    8193:	48 89 c2             	mov    %rax,%rdx
    8196:	48 8d 05 03 e0 00 00 	lea    0xe003(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    819d:	48 89 c6             	mov    %rax,%rsi
    81a0:	48 8d 05 a1 38 00 00 	lea    0x38a1(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    81a7:	48 89 c7             	mov    %rax,%rdi
    81aa:	e8 d1 cf ff ff       	call   5180 <__cxa_atexit@plt>
    81af:	48 8d 05 22 e1 00 00 	lea    0xe122(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    81b6:	48 89 c7             	mov    %rax,%rdi
    81b9:	e8 12 cf ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    81be:	48 8d 15 db df 00 00 	lea    0xdfdb(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    81c5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    81c8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    81cc:	89 ce                	mov    %ecx,%esi
    81ce:	48 89 c7             	mov    %rax,%rdi
    81d1:	e8 80 e0 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    81d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81da:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    81de:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    81e2:	48 89 c6             	mov    %rax,%rsi
    81e5:	48 89 d7             	mov    %rdx,%rdi
    81e8:	48 89 d0             	mov    %rdx,%rax
    81eb:	48 89 c2             	mov    %rax,%rdx
    81ee:	48 89 df             	mov    %rbx,%rdi
    81f1:	e8 f0 f5 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    81f6:	48 8d 15 23 d4 00 00 	lea    0xd423(%rip),%rdx        # 15620 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    81fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8201:	48 89 10             	mov    %rdx,(%rax)
    8204:	48 8d 15 3d d4 00 00 	lea    0xd43d(%rip),%rdx        # 15648 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    820b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    820f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8213:	90                   	nop
    8214:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8218:	c9                   	leave
    8219:	c3                   	ret

000000000000821a <_ZN2vk19FragmentedPoolErrorC1EPKc>:
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    821a:	55                   	push   %rbp
    821b:	48 89 e5             	mov    %rsp,%rbp
    821e:	53                   	push   %rbx
    821f:	48 83 ec 38          	sub    $0x38,%rsp
    8223:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8227:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    822b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    822f:	c7 45 ec f4 ff ff ff 	movl   $0xfffffff4,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8236:	0f b6 05 9b e0 00 00 	movzbl 0xe09b(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    823d:	84 c0                	test   %al,%al
    823f:	0f 94 c0             	sete   %al
    8242:	84 c0                	test   %al,%al
    8244:	74 4a                	je     8290 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    8246:	48 8d 05 8b e0 00 00 	lea    0xe08b(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    824d:	48 89 c7             	mov    %rax,%rdi
    8250:	e8 cb d0 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8255:	85 c0                	test   %eax,%eax
    8257:	0f 95 c0             	setne  %al
    825a:	84 c0                	test   %al,%al
    825c:	74 32                	je     8290 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    825e:	48 8d 05 33 df 00 00 	lea    0xdf33(%rip),%rax        # 16198 <__dso_handle>
    8265:	48 89 c2             	mov    %rax,%rdx
    8268:	48 8d 05 31 df 00 00 	lea    0xdf31(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    826f:	48 89 c6             	mov    %rax,%rsi
    8272:	48 8d 05 cf 37 00 00 	lea    0x37cf(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8279:	48 89 c7             	mov    %rax,%rdi
    827c:	e8 ff ce ff ff       	call   5180 <__cxa_atexit@plt>
    8281:	48 8d 05 50 e0 00 00 	lea    0xe050(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8288:	48 89 c7             	mov    %rax,%rdi
    828b:	e8 40 ce ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8290:	48 8d 15 09 df 00 00 	lea    0xdf09(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8297:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    829a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    829e:	89 ce                	mov    %ecx,%esi
    82a0:	48 89 c7             	mov    %rax,%rdi
    82a3:	e8 ae df ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    82a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    82ac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    82b0:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    82b4:	48 89 c6             	mov    %rax,%rsi
    82b7:	48 89 d7             	mov    %rdx,%rdi
    82ba:	48 89 d0             	mov    %rdx,%rax
    82bd:	48 89 c2             	mov    %rax,%rdx
    82c0:	48 89 df             	mov    %rbx,%rdi
    82c3:	e8 1e f5 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    82c8:	48 8d 15 01 d3 00 00 	lea    0xd301(%rip),%rdx        # 155d0 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    82cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    82d3:	48 89 10             	mov    %rdx,(%rax)
    82d6:	48 8d 15 1b d3 00 00 	lea    0xd31b(%rip),%rdx        # 155f8 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    82dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    82e1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    82e5:	90                   	nop
    82e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    82ea:	c9                   	leave
    82eb:	c3                   	ret

00000000000082ec <_ZN2vk12UnknownErrorC1EPKc>:
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    82ec:	55                   	push   %rbp
    82ed:	48 89 e5             	mov    %rsp,%rbp
    82f0:	53                   	push   %rbx
    82f1:	48 83 ec 38          	sub    $0x38,%rsp
    82f5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    82f9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    82fd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8301:	c7 45 ec f3 ff ff ff 	movl   $0xfffffff3,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8308:	0f b6 05 c9 df 00 00 	movzbl 0xdfc9(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    830f:	84 c0                	test   %al,%al
    8311:	0f 94 c0             	sete   %al
    8314:	84 c0                	test   %al,%al
    8316:	74 4a                	je     8362 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    8318:	48 8d 05 b9 df 00 00 	lea    0xdfb9(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    831f:	48 89 c7             	mov    %rax,%rdi
    8322:	e8 f9 cf ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8327:	85 c0                	test   %eax,%eax
    8329:	0f 95 c0             	setne  %al
    832c:	84 c0                	test   %al,%al
    832e:	74 32                	je     8362 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    8330:	48 8d 05 61 de 00 00 	lea    0xde61(%rip),%rax        # 16198 <__dso_handle>
    8337:	48 89 c2             	mov    %rax,%rdx
    833a:	48 8d 05 5f de 00 00 	lea    0xde5f(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8341:	48 89 c6             	mov    %rax,%rsi
    8344:	48 8d 05 fd 36 00 00 	lea    0x36fd(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    834b:	48 89 c7             	mov    %rax,%rdi
    834e:	e8 2d ce ff ff       	call   5180 <__cxa_atexit@plt>
    8353:	48 8d 05 7e df 00 00 	lea    0xdf7e(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    835a:	48 89 c7             	mov    %rax,%rdi
    835d:	e8 6e cd ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8362:	48 8d 15 37 de 00 00 	lea    0xde37(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8369:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    836c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8370:	89 ce                	mov    %ecx,%esi
    8372:	48 89 c7             	mov    %rax,%rdi
    8375:	e8 dc de ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    837a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    837e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    8382:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8386:	48 89 c6             	mov    %rax,%rsi
    8389:	48 89 d7             	mov    %rdx,%rdi
    838c:	48 89 d0             	mov    %rdx,%rax
    838f:	48 89 c2             	mov    %rax,%rdx
    8392:	48 89 df             	mov    %rbx,%rdi
    8395:	e8 4c f4 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    839a:	48 8d 15 df d1 00 00 	lea    0xd1df(%rip),%rdx        # 15580 <_ZTVN2vk12UnknownErrorE+0x10>
    83a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    83a5:	48 89 10             	mov    %rdx,(%rax)
    83a8:	48 8d 15 f9 d1 00 00 	lea    0xd1f9(%rip),%rdx        # 155a8 <_ZTVN2vk12UnknownErrorE+0x38>
    83af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    83b3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    83b7:	90                   	nop
    83b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83bc:	c9                   	leave
    83bd:	c3                   	ret

00000000000083be <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>:
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    83be:	55                   	push   %rbp
    83bf:	48 89 e5             	mov    %rsp,%rbp
    83c2:	53                   	push   %rbx
    83c3:	48 83 ec 38          	sub    $0x38,%rsp
    83c7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    83cb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    83cf:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    83d3:	c7 45 ec 78 28 64 c4 	movl   $0xc4642878,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    83da:	0f b6 05 f7 de 00 00 	movzbl 0xdef7(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    83e1:	84 c0                	test   %al,%al
    83e3:	0f 94 c0             	sete   %al
    83e6:	84 c0                	test   %al,%al
    83e8:	74 4a                	je     8434 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    83ea:	48 8d 05 e7 de 00 00 	lea    0xdee7(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    83f1:	48 89 c7             	mov    %rax,%rdi
    83f4:	e8 27 cf ff ff       	call   5320 <__cxa_guard_acquire@plt>
    83f9:	85 c0                	test   %eax,%eax
    83fb:	0f 95 c0             	setne  %al
    83fe:	84 c0                	test   %al,%al
    8400:	74 32                	je     8434 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    8402:	48 8d 05 8f dd 00 00 	lea    0xdd8f(%rip),%rax        # 16198 <__dso_handle>
    8409:	48 89 c2             	mov    %rax,%rdx
    840c:	48 8d 05 8d dd 00 00 	lea    0xdd8d(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8413:	48 89 c6             	mov    %rax,%rsi
    8416:	48 8d 05 2b 36 00 00 	lea    0x362b(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    841d:	48 89 c7             	mov    %rax,%rdi
    8420:	e8 5b cd ff ff       	call   5180 <__cxa_atexit@plt>
    8425:	48 8d 05 ac de 00 00 	lea    0xdeac(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    842c:	48 89 c7             	mov    %rax,%rdi
    842f:	e8 9c cc ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8434:	48 8d 15 65 dd 00 00 	lea    0xdd65(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    843b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    843e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8442:	89 ce                	mov    %ecx,%esi
    8444:	48 89 c7             	mov    %rax,%rdi
    8447:	e8 0a de ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    844c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8450:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    8454:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8458:	48 89 c6             	mov    %rax,%rsi
    845b:	48 89 d7             	mov    %rdx,%rdi
    845e:	48 89 d0             	mov    %rdx,%rax
    8461:	48 89 c2             	mov    %rax,%rdx
    8464:	48 89 df             	mov    %rbx,%rdi
    8467:	e8 7a f3 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    846c:	48 8d 15 bd d0 00 00 	lea    0xd0bd(%rip),%rdx        # 15530 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    8473:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8477:	48 89 10             	mov    %rdx,(%rax)
    847a:	48 8d 15 d7 d0 00 00 	lea    0xd0d7(%rip),%rdx        # 15558 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    8481:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8485:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8489:	90                   	nop
    848a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    848e:	c9                   	leave
    848f:	c3                   	ret

0000000000008490 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>:
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    8490:	55                   	push   %rbp
    8491:	48 89 e5             	mov    %rsp,%rbp
    8494:	53                   	push   %rbx
    8495:	48 83 ec 38          	sub    $0x38,%rsp
    8499:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    849d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    84a1:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    84a5:	c7 45 ec bd 1c 64 c4 	movl   $0xc4641cbd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    84ac:	0f b6 05 25 de 00 00 	movzbl 0xde25(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84b3:	84 c0                	test   %al,%al
    84b5:	0f 94 c0             	sete   %al
    84b8:	84 c0                	test   %al,%al
    84ba:	74 4a                	je     8506 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    84bc:	48 8d 05 15 de 00 00 	lea    0xde15(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84c3:	48 89 c7             	mov    %rax,%rdi
    84c6:	e8 55 ce ff ff       	call   5320 <__cxa_guard_acquire@plt>
    84cb:	85 c0                	test   %eax,%eax
    84cd:	0f 95 c0             	setne  %al
    84d0:	84 c0                	test   %al,%al
    84d2:	74 32                	je     8506 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    84d4:	48 8d 05 bd dc 00 00 	lea    0xdcbd(%rip),%rax        # 16198 <__dso_handle>
    84db:	48 89 c2             	mov    %rax,%rdx
    84de:	48 8d 05 bb dc 00 00 	lea    0xdcbb(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    84e5:	48 89 c6             	mov    %rax,%rsi
    84e8:	48 8d 05 59 35 00 00 	lea    0x3559(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    84ef:	48 89 c7             	mov    %rax,%rdi
    84f2:	e8 89 cc ff ff       	call   5180 <__cxa_atexit@plt>
    84f7:	48 8d 05 da dd 00 00 	lea    0xddda(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84fe:	48 89 c7             	mov    %rax,%rdi
    8501:	e8 ca cb ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8506:	48 8d 15 93 dc 00 00 	lea    0xdc93(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    850d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8510:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8514:	89 ce                	mov    %ecx,%esi
    8516:	48 89 c7             	mov    %rax,%rdi
    8519:	e8 38 dd ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    851e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8522:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    8526:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    852a:	48 89 c6             	mov    %rax,%rsi
    852d:	48 89 d7             	mov    %rdx,%rdi
    8530:	48 89 d0             	mov    %rdx,%rax
    8533:	48 89 c2             	mov    %rax,%rdx
    8536:	48 89 df             	mov    %rbx,%rdi
    8539:	e8 a8 f2 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    853e:	48 8d 15 9b cf 00 00 	lea    0xcf9b(%rip),%rdx        # 154e0 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    8545:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8549:	48 89 10             	mov    %rdx,(%rax)
    854c:	48 8d 15 b5 cf 00 00 	lea    0xcfb5(%rip),%rdx        # 15508 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    8553:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8557:	48 89 50 08          	mov    %rdx,0x8(%rax)
    855b:	90                   	nop
    855c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8560:	c9                   	leave
    8561:	c3                   	ret

0000000000008562 <_ZN2vk18FragmentationErrorC1EPKc>:
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    8562:	55                   	push   %rbp
    8563:	48 89 e5             	mov    %rsp,%rbp
    8566:	53                   	push   %rbx
    8567:	48 83 ec 38          	sub    $0x38,%rsp
    856b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    856f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8573:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8577:	c7 45 ec 18 c1 62 c4 	movl   $0xc462c118,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    857e:	0f b6 05 53 dd 00 00 	movzbl 0xdd53(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8585:	84 c0                	test   %al,%al
    8587:	0f 94 c0             	sete   %al
    858a:	84 c0                	test   %al,%al
    858c:	74 4a                	je     85d8 <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    858e:	48 8d 05 43 dd 00 00 	lea    0xdd43(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8595:	48 89 c7             	mov    %rax,%rdi
    8598:	e8 83 cd ff ff       	call   5320 <__cxa_guard_acquire@plt>
    859d:	85 c0                	test   %eax,%eax
    859f:	0f 95 c0             	setne  %al
    85a2:	84 c0                	test   %al,%al
    85a4:	74 32                	je     85d8 <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    85a6:	48 8d 05 eb db 00 00 	lea    0xdbeb(%rip),%rax        # 16198 <__dso_handle>
    85ad:	48 89 c2             	mov    %rax,%rdx
    85b0:	48 8d 05 e9 db 00 00 	lea    0xdbe9(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    85b7:	48 89 c6             	mov    %rax,%rsi
    85ba:	48 8d 05 87 34 00 00 	lea    0x3487(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    85c1:	48 89 c7             	mov    %rax,%rdi
    85c4:	e8 b7 cb ff ff       	call   5180 <__cxa_atexit@plt>
    85c9:	48 8d 05 08 dd 00 00 	lea    0xdd08(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85d0:	48 89 c7             	mov    %rax,%rdi
    85d3:	e8 f8 ca ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    85d8:	48 8d 15 c1 db 00 00 	lea    0xdbc1(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    85df:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    85e2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    85e6:	89 ce                	mov    %ecx,%esi
    85e8:	48 89 c7             	mov    %rax,%rdi
    85eb:	e8 66 dc ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    85f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    85f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    85f8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    85fc:	48 89 c6             	mov    %rax,%rsi
    85ff:	48 89 d7             	mov    %rdx,%rdi
    8602:	48 89 d0             	mov    %rdx,%rax
    8605:	48 89 c2             	mov    %rax,%rdx
    8608:	48 89 df             	mov    %rbx,%rdi
    860b:	e8 d6 f1 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8610:	48 8d 15 79 ce 00 00 	lea    0xce79(%rip),%rdx        # 15490 <_ZTVN2vk18FragmentationErrorE+0x10>
    8617:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    861b:	48 89 10             	mov    %rdx,(%rax)
    861e:	48 8d 15 93 ce 00 00 	lea    0xce93(%rip),%rdx        # 154b8 <_ZTVN2vk18FragmentationErrorE+0x38>
    8625:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8629:	48 89 50 08          	mov    %rdx,0x8(%rax)
    862d:	90                   	nop
    862e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8632:	c9                   	leave
    8633:	c3                   	ret

0000000000008634 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>:
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    8634:	55                   	push   %rbp
    8635:	48 89 e5             	mov    %rsp,%rbp
    8638:	53                   	push   %rbx
    8639:	48 83 ec 38          	sub    $0x38,%rsp
    863d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8641:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8645:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8649:	c7 45 ec 18 4a 61 c4 	movl   $0xc4614a18,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8650:	0f b6 05 81 dc 00 00 	movzbl 0xdc81(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8657:	84 c0                	test   %al,%al
    8659:	0f 94 c0             	sete   %al
    865c:	84 c0                	test   %al,%al
    865e:	74 4a                	je     86aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    8660:	48 8d 05 71 dc 00 00 	lea    0xdc71(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8667:	48 89 c7             	mov    %rax,%rdi
    866a:	e8 b1 cc ff ff       	call   5320 <__cxa_guard_acquire@plt>
    866f:	85 c0                	test   %eax,%eax
    8671:	0f 95 c0             	setne  %al
    8674:	84 c0                	test   %al,%al
    8676:	74 32                	je     86aa <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    8678:	48 8d 05 19 db 00 00 	lea    0xdb19(%rip),%rax        # 16198 <__dso_handle>
    867f:	48 89 c2             	mov    %rax,%rdx
    8682:	48 8d 05 17 db 00 00 	lea    0xdb17(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8689:	48 89 c6             	mov    %rax,%rsi
    868c:	48 8d 05 b5 33 00 00 	lea    0x33b5(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8693:	48 89 c7             	mov    %rax,%rdi
    8696:	e8 e5 ca ff ff       	call   5180 <__cxa_atexit@plt>
    869b:	48 8d 05 36 dc 00 00 	lea    0xdc36(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    86a2:	48 89 c7             	mov    %rax,%rdi
    86a5:	e8 26 ca ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    86aa:	48 8d 15 ef da 00 00 	lea    0xdaef(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    86b1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    86b4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    86b8:	89 ce                	mov    %ecx,%esi
    86ba:	48 89 c7             	mov    %rax,%rdi
    86bd:	e8 94 db ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    86c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86c6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    86ca:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    86ce:	48 89 c6             	mov    %rax,%rsi
    86d1:	48 89 d7             	mov    %rdx,%rdi
    86d4:	48 89 d0             	mov    %rdx,%rax
    86d7:	48 89 c2             	mov    %rax,%rdx
    86da:	48 89 df             	mov    %rbx,%rdi
    86dd:	e8 04 f1 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    86e2:	48 8d 15 57 cd 00 00 	lea    0xcd57(%rip),%rdx        # 15440 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    86e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    86ed:	48 89 10             	mov    %rdx,(%rax)
    86f0:	48 8d 15 71 cd 00 00 	lea    0xcd71(%rip),%rdx        # 15468 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    86f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    86fb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    86ff:	90                   	nop
    8700:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8704:	c9                   	leave
    8705:	c3                   	ret

0000000000008706 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>:
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    8706:	55                   	push   %rbp
    8707:	48 89 e5             	mov    %rsp,%rbp
    870a:	53                   	push   %rbx
    870b:	48 83 ec 38          	sub    $0x38,%rsp
    870f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8713:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8717:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    871b:	c7 45 ec 00 36 65 c4 	movl   $0xc4653600,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8722:	0f b6 05 af db 00 00 	movzbl 0xdbaf(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8729:	84 c0                	test   %al,%al
    872b:	0f 94 c0             	sete   %al
    872e:	84 c0                	test   %al,%al
    8730:	74 4a                	je     877c <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    8732:	48 8d 05 9f db 00 00 	lea    0xdb9f(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8739:	48 89 c7             	mov    %rax,%rdi
    873c:	e8 df cb ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8741:	85 c0                	test   %eax,%eax
    8743:	0f 95 c0             	setne  %al
    8746:	84 c0                	test   %al,%al
    8748:	74 32                	je     877c <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    874a:	48 8d 05 47 da 00 00 	lea    0xda47(%rip),%rax        # 16198 <__dso_handle>
    8751:	48 89 c2             	mov    %rax,%rdx
    8754:	48 8d 05 45 da 00 00 	lea    0xda45(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    875b:	48 89 c6             	mov    %rax,%rsi
    875e:	48 8d 05 e3 32 00 00 	lea    0x32e3(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8765:	48 89 c7             	mov    %rax,%rdi
    8768:	e8 13 ca ff ff       	call   5180 <__cxa_atexit@plt>
    876d:	48 8d 05 64 db 00 00 	lea    0xdb64(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8774:	48 89 c7             	mov    %rax,%rdi
    8777:	e8 54 c9 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    877c:	48 8d 15 1d da 00 00 	lea    0xda1d(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8783:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8786:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    878a:	89 ce                	mov    %ecx,%esi
    878c:	48 89 c7             	mov    %rax,%rdi
    878f:	e8 c2 da ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8794:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8798:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    879c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    87a0:	48 89 c6             	mov    %rax,%rsi
    87a3:	48 89 d7             	mov    %rdx,%rdi
    87a6:	48 89 d0             	mov    %rdx,%rax
    87a9:	48 89 c2             	mov    %rax,%rdx
    87ac:	48 89 df             	mov    %rbx,%rdi
    87af:	e8 32 f0 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    87b4:	48 8d 15 35 cc 00 00 	lea    0xcc35(%rip),%rdx        # 153f0 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    87bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87bf:	48 89 10             	mov    %rdx,(%rax)
    87c2:	48 8d 15 4f cc 00 00 	lea    0xcc4f(%rip),%rdx        # 15418 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    87c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87cd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    87d1:	90                   	nop
    87d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87d6:	c9                   	leave
    87d7:	c3                   	ret

00000000000087d8 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>:
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    87d8:	55                   	push   %rbp
    87d9:	48 89 e5             	mov    %rsp,%rbp
    87dc:	53                   	push   %rbx
    87dd:	48 83 ec 38          	sub    $0x38,%rsp
    87e1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    87e5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    87e9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    87ed:	c7 45 ec ff 35 65 c4 	movl   $0xc46535ff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    87f4:	0f b6 05 dd da 00 00 	movzbl 0xdadd(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    87fb:	84 c0                	test   %al,%al
    87fd:	0f 94 c0             	sete   %al
    8800:	84 c0                	test   %al,%al
    8802:	74 4a                	je     884e <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    8804:	48 8d 05 cd da 00 00 	lea    0xdacd(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    880b:	48 89 c7             	mov    %rax,%rdi
    880e:	e8 0d cb ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8813:	85 c0                	test   %eax,%eax
    8815:	0f 95 c0             	setne  %al
    8818:	84 c0                	test   %al,%al
    881a:	74 32                	je     884e <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    881c:	48 8d 05 75 d9 00 00 	lea    0xd975(%rip),%rax        # 16198 <__dso_handle>
    8823:	48 89 c2             	mov    %rax,%rdx
    8826:	48 8d 05 73 d9 00 00 	lea    0xd973(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    882d:	48 89 c6             	mov    %rax,%rsi
    8830:	48 8d 05 11 32 00 00 	lea    0x3211(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8837:	48 89 c7             	mov    %rax,%rdi
    883a:	e8 41 c9 ff ff       	call   5180 <__cxa_atexit@plt>
    883f:	48 8d 05 92 da 00 00 	lea    0xda92(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8846:	48 89 c7             	mov    %rax,%rdi
    8849:	e8 82 c8 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    884e:	48 8d 15 4b d9 00 00 	lea    0xd94b(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8855:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8858:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    885c:	89 ce                	mov    %ecx,%esi
    885e:	48 89 c7             	mov    %rax,%rdi
    8861:	e8 f0 d9 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8866:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    886a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    886e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8872:	48 89 c6             	mov    %rax,%rsi
    8875:	48 89 d7             	mov    %rdx,%rdi
    8878:	48 89 d0             	mov    %rdx,%rax
    887b:	48 89 c2             	mov    %rax,%rdx
    887e:	48 89 df             	mov    %rbx,%rdi
    8881:	e8 60 ef ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8886:	48 8d 15 13 cb 00 00 	lea    0xcb13(%rip),%rdx        # 153a0 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    888d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8891:	48 89 10             	mov    %rdx,(%rax)
    8894:	48 8d 15 2d cb 00 00 	lea    0xcb2d(%rip),%rdx        # 153c8 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    889b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    889f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    88a3:	90                   	nop
    88a4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88a8:	c9                   	leave
    88a9:	c3                   	ret

00000000000088aa <_ZN2vk17OutOfDateKHRErrorC1EPKc>:
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    88aa:	55                   	push   %rbp
    88ab:	48 89 e5             	mov    %rsp,%rbp
    88ae:	53                   	push   %rbx
    88af:	48 83 ec 38          	sub    $0x38,%rsp
    88b3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    88b7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    88bb:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    88bf:	c7 45 ec 14 32 65 c4 	movl   $0xc4653214,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    88c6:	0f b6 05 0b da 00 00 	movzbl 0xda0b(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    88cd:	84 c0                	test   %al,%al
    88cf:	0f 94 c0             	sete   %al
    88d2:	84 c0                	test   %al,%al
    88d4:	74 4a                	je     8920 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    88d6:	48 8d 05 fb d9 00 00 	lea    0xd9fb(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    88dd:	48 89 c7             	mov    %rax,%rdi
    88e0:	e8 3b ca ff ff       	call   5320 <__cxa_guard_acquire@plt>
    88e5:	85 c0                	test   %eax,%eax
    88e7:	0f 95 c0             	setne  %al
    88ea:	84 c0                	test   %al,%al
    88ec:	74 32                	je     8920 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    88ee:	48 8d 05 a3 d8 00 00 	lea    0xd8a3(%rip),%rax        # 16198 <__dso_handle>
    88f5:	48 89 c2             	mov    %rax,%rdx
    88f8:	48 8d 05 a1 d8 00 00 	lea    0xd8a1(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    88ff:	48 89 c6             	mov    %rax,%rsi
    8902:	48 8d 05 3f 31 00 00 	lea    0x313f(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8909:	48 89 c7             	mov    %rax,%rdi
    890c:	e8 6f c8 ff ff       	call   5180 <__cxa_atexit@plt>
    8911:	48 8d 05 c0 d9 00 00 	lea    0xd9c0(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8918:	48 89 c7             	mov    %rax,%rdi
    891b:	e8 b0 c7 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8920:	48 8d 15 79 d8 00 00 	lea    0xd879(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8927:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    892a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    892e:	89 ce                	mov    %ecx,%esi
    8930:	48 89 c7             	mov    %rax,%rdi
    8933:	e8 1e d9 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8938:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    893c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    8940:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8944:	48 89 c6             	mov    %rax,%rsi
    8947:	48 89 d7             	mov    %rdx,%rdi
    894a:	48 89 d0             	mov    %rdx,%rax
    894d:	48 89 c2             	mov    %rax,%rdx
    8950:	48 89 df             	mov    %rbx,%rdi
    8953:	e8 8e ee ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8958:	48 8d 15 f1 c9 00 00 	lea    0xc9f1(%rip),%rdx        # 15350 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    895f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8963:	48 89 10             	mov    %rdx,(%rax)
    8966:	48 8d 15 0b ca 00 00 	lea    0xca0b(%rip),%rdx        # 15378 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    896d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8971:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8975:	90                   	nop
    8976:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    897a:	c9                   	leave
    897b:	c3                   	ret

000000000000897c <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>:
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    897c:	55                   	push   %rbp
    897d:	48 89 e5             	mov    %rsp,%rbp
    8980:	53                   	push   %rbx
    8981:	48 83 ec 38          	sub    $0x38,%rsp
    8985:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8989:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    898d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8991:	c7 45 ec 47 2a 65 c4 	movl   $0xc4652a47,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8998:	0f b6 05 39 d9 00 00 	movzbl 0xd939(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    899f:	84 c0                	test   %al,%al
    89a1:	0f 94 c0             	sete   %al
    89a4:	84 c0                	test   %al,%al
    89a6:	74 4a                	je     89f2 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    89a8:	48 8d 05 29 d9 00 00 	lea    0xd929(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    89af:	48 89 c7             	mov    %rax,%rdi
    89b2:	e8 69 c9 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    89b7:	85 c0                	test   %eax,%eax
    89b9:	0f 95 c0             	setne  %al
    89bc:	84 c0                	test   %al,%al
    89be:	74 32                	je     89f2 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    89c0:	48 8d 05 d1 d7 00 00 	lea    0xd7d1(%rip),%rax        # 16198 <__dso_handle>
    89c7:	48 89 c2             	mov    %rax,%rdx
    89ca:	48 8d 05 cf d7 00 00 	lea    0xd7cf(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    89d1:	48 89 c6             	mov    %rax,%rsi
    89d4:	48 8d 05 6d 30 00 00 	lea    0x306d(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    89db:	48 89 c7             	mov    %rax,%rdi
    89de:	e8 9d c7 ff ff       	call   5180 <__cxa_atexit@plt>
    89e3:	48 8d 05 ee d8 00 00 	lea    0xd8ee(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    89ea:	48 89 c7             	mov    %rax,%rdi
    89ed:	e8 de c6 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    89f2:	48 8d 15 a7 d7 00 00 	lea    0xd7a7(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    89f9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    89fc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8a00:	89 ce                	mov    %ecx,%esi
    8a02:	48 89 c7             	mov    %rax,%rdi
    8a05:	e8 4c d8 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8a0a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a0e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    8a12:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8a16:	48 89 c6             	mov    %rax,%rsi
    8a19:	48 89 d7             	mov    %rdx,%rdi
    8a1c:	48 89 d0             	mov    %rdx,%rax
    8a1f:	48 89 c2             	mov    %rax,%rdx
    8a22:	48 89 df             	mov    %rbx,%rdi
    8a25:	e8 bc ed ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8a2a:	48 8d 15 cf c8 00 00 	lea    0xc8cf(%rip),%rdx        # 15300 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    8a31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a35:	48 89 10             	mov    %rdx,(%rax)
    8a38:	48 8d 15 e9 c8 00 00 	lea    0xc8e9(%rip),%rdx        # 15328 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    8a3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a43:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8a47:	90                   	nop
    8a48:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a4c:	c9                   	leave
    8a4d:	c3                   	ret

0000000000008a4e <_ZN2vk24ValidationFailedEXTErrorC1EPKc>:
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8a4e:	55                   	push   %rbp
    8a4f:	48 89 e5             	mov    %rsp,%rbp
    8a52:	53                   	push   %rbx
    8a53:	48 83 ec 38          	sub    $0x38,%rsp
    8a57:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8a5b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8a5f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8a63:	c7 45 ec 07 0b 65 c4 	movl   $0xc4650b07,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8a6a:	0f b6 05 67 d8 00 00 	movzbl 0xd867(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a71:	84 c0                	test   %al,%al
    8a73:	0f 94 c0             	sete   %al
    8a76:	84 c0                	test   %al,%al
    8a78:	74 4a                	je     8ac4 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8a7a:	48 8d 05 57 d8 00 00 	lea    0xd857(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a81:	48 89 c7             	mov    %rax,%rdi
    8a84:	e8 97 c8 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8a89:	85 c0                	test   %eax,%eax
    8a8b:	0f 95 c0             	setne  %al
    8a8e:	84 c0                	test   %al,%al
    8a90:	74 32                	je     8ac4 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8a92:	48 8d 05 ff d6 00 00 	lea    0xd6ff(%rip),%rax        # 16198 <__dso_handle>
    8a99:	48 89 c2             	mov    %rax,%rdx
    8a9c:	48 8d 05 fd d6 00 00 	lea    0xd6fd(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8aa3:	48 89 c6             	mov    %rax,%rsi
    8aa6:	48 8d 05 9b 2f 00 00 	lea    0x2f9b(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8aad:	48 89 c7             	mov    %rax,%rdi
    8ab0:	e8 cb c6 ff ff       	call   5180 <__cxa_atexit@plt>
    8ab5:	48 8d 05 1c d8 00 00 	lea    0xd81c(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8abc:	48 89 c7             	mov    %rax,%rdi
    8abf:	e8 0c c6 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8ac4:	48 8d 15 d5 d6 00 00 	lea    0xd6d5(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8acb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8ace:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8ad2:	89 ce                	mov    %ecx,%esi
    8ad4:	48 89 c7             	mov    %rax,%rdi
    8ad7:	e8 7a d7 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8adc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ae0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8ae4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8ae8:	48 89 c6             	mov    %rax,%rsi
    8aeb:	48 89 d7             	mov    %rdx,%rdi
    8aee:	48 89 d0             	mov    %rdx,%rax
    8af1:	48 89 c2             	mov    %rax,%rdx
    8af4:	48 89 df             	mov    %rbx,%rdi
    8af7:	e8 ea ec ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8afc:	48 8d 15 ad c7 00 00 	lea    0xc7ad(%rip),%rdx        # 152b0 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    8b03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8b07:	48 89 10             	mov    %rdx,(%rax)
    8b0a:	48 8d 15 c7 c7 00 00 	lea    0xc7c7(%rip),%rdx        # 152d8 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    8b11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8b15:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8b19:	90                   	nop
    8b1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b1e:	c9                   	leave
    8b1f:	c3                   	ret

0000000000008b20 <_ZN2vk20InvalidShaderNVErrorC1EPKc>:
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8b20:	55                   	push   %rbp
    8b21:	48 89 e5             	mov    %rsp,%rbp
    8b24:	53                   	push   %rbx
    8b25:	48 83 ec 38          	sub    $0x38,%rsp
    8b29:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8b2d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8b31:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8b35:	c7 45 ec 20 07 65 c4 	movl   $0xc4650720,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8b3c:	0f b6 05 95 d7 00 00 	movzbl 0xd795(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b43:	84 c0                	test   %al,%al
    8b45:	0f 94 c0             	sete   %al
    8b48:	84 c0                	test   %al,%al
    8b4a:	74 4a                	je     8b96 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8b4c:	48 8d 05 85 d7 00 00 	lea    0xd785(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b53:	48 89 c7             	mov    %rax,%rdi
    8b56:	e8 c5 c7 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8b5b:	85 c0                	test   %eax,%eax
    8b5d:	0f 95 c0             	setne  %al
    8b60:	84 c0                	test   %al,%al
    8b62:	74 32                	je     8b96 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8b64:	48 8d 05 2d d6 00 00 	lea    0xd62d(%rip),%rax        # 16198 <__dso_handle>
    8b6b:	48 89 c2             	mov    %rax,%rdx
    8b6e:	48 8d 05 2b d6 00 00 	lea    0xd62b(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8b75:	48 89 c6             	mov    %rax,%rsi
    8b78:	48 8d 05 c9 2e 00 00 	lea    0x2ec9(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8b7f:	48 89 c7             	mov    %rax,%rdi
    8b82:	e8 f9 c5 ff ff       	call   5180 <__cxa_atexit@plt>
    8b87:	48 8d 05 4a d7 00 00 	lea    0xd74a(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b8e:	48 89 c7             	mov    %rax,%rdi
    8b91:	e8 3a c5 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8b96:	48 8d 15 03 d6 00 00 	lea    0xd603(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8b9d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8ba0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8ba4:	89 ce                	mov    %ecx,%esi
    8ba6:	48 89 c7             	mov    %rax,%rdi
    8ba9:	e8 a8 d6 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8bae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bb2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8bb6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8bba:	48 89 c6             	mov    %rax,%rsi
    8bbd:	48 89 d7             	mov    %rdx,%rdi
    8bc0:	48 89 d0             	mov    %rdx,%rax
    8bc3:	48 89 c2             	mov    %rax,%rdx
    8bc6:	48 89 df             	mov    %rbx,%rdi
    8bc9:	e8 18 ec ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8bce:	48 8d 15 8b c6 00 00 	lea    0xc68b(%rip),%rdx        # 15260 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    8bd5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8bd9:	48 89 10             	mov    %rdx,(%rax)
    8bdc:	48 8d 15 a5 c6 00 00 	lea    0xc6a5(%rip),%rdx        # 15288 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    8be3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8be7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8beb:	90                   	nop
    8bec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8bf0:	c9                   	leave
    8bf1:	c3                   	ret

0000000000008bf2 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>:
    InvalidDrmFormatModifierPlaneLayoutEXTError( char const * message )
    8bf2:	55                   	push   %rbp
    8bf3:	48 89 e5             	mov    %rsp,%rbp
    8bf6:	53                   	push   %rbx
    8bf7:	48 83 ec 38          	sub    $0x38,%rsp
    8bfb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8bff:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8c03:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8c07:	c7 45 ec d0 cc 62 c4 	movl   $0xc462ccd0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8c0e:	0f b6 05 c3 d6 00 00 	movzbl 0xd6c3(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c15:	84 c0                	test   %al,%al
    8c17:	0f 94 c0             	sete   %al
    8c1a:	84 c0                	test   %al,%al
    8c1c:	74 4a                	je     8c68 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8c1e:	48 8d 05 b3 d6 00 00 	lea    0xd6b3(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c25:	48 89 c7             	mov    %rax,%rdi
    8c28:	e8 f3 c6 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8c2d:	85 c0                	test   %eax,%eax
    8c2f:	0f 95 c0             	setne  %al
    8c32:	84 c0                	test   %al,%al
    8c34:	74 32                	je     8c68 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8c36:	48 8d 05 5b d5 00 00 	lea    0xd55b(%rip),%rax        # 16198 <__dso_handle>
    8c3d:	48 89 c2             	mov    %rax,%rdx
    8c40:	48 8d 05 59 d5 00 00 	lea    0xd559(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8c47:	48 89 c6             	mov    %rax,%rsi
    8c4a:	48 8d 05 f7 2d 00 00 	lea    0x2df7(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8c51:	48 89 c7             	mov    %rax,%rdi
    8c54:	e8 27 c5 ff ff       	call   5180 <__cxa_atexit@plt>
    8c59:	48 8d 05 78 d6 00 00 	lea    0xd678(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c60:	48 89 c7             	mov    %rax,%rdi
    8c63:	e8 68 c4 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8c68:	48 8d 15 31 d5 00 00 	lea    0xd531(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8c6f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8c72:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8c76:	89 ce                	mov    %ecx,%esi
    8c78:	48 89 c7             	mov    %rax,%rdi
    8c7b:	e8 d6 d5 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8c80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c84:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8c88:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8c8c:	48 89 c6             	mov    %rax,%rsi
    8c8f:	48 89 d7             	mov    %rdx,%rdi
    8c92:	48 89 d0             	mov    %rdx,%rax
    8c95:	48 89 c2             	mov    %rax,%rdx
    8c98:	48 89 df             	mov    %rbx,%rdi
    8c9b:	e8 46 eb ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8ca0:	48 8d 15 69 c5 00 00 	lea    0xc569(%rip),%rdx        # 15210 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    8ca7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8cab:	48 89 10             	mov    %rdx,(%rax)
    8cae:	48 8d 15 83 c5 00 00 	lea    0xc583(%rip),%rdx        # 15238 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    8cb5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8cb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    }
    8cbd:	90                   	nop
    8cbe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cc2:	c9                   	leave
    8cc3:	c3                   	ret

0000000000008cc4 <_ZN2vk20NotPermittedKHRErrorC1EPKc>:
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8cc4:	55                   	push   %rbp
    8cc5:	48 89 e5             	mov    %rsp,%rbp
    8cc8:	53                   	push   %rbx
    8cc9:	48 83 ec 38          	sub    $0x38,%rsp
    8ccd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8cd1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8cd5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8cd9:	c7 45 ec 4f 8e 62 c4 	movl   $0xc4628e4f,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8ce0:	0f b6 05 f1 d5 00 00 	movzbl 0xd5f1(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8ce7:	84 c0                	test   %al,%al
    8ce9:	0f 94 c0             	sete   %al
    8cec:	84 c0                	test   %al,%al
    8cee:	74 4a                	je     8d3a <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8cf0:	48 8d 05 e1 d5 00 00 	lea    0xd5e1(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8cf7:	48 89 c7             	mov    %rax,%rdi
    8cfa:	e8 21 c6 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8cff:	85 c0                	test   %eax,%eax
    8d01:	0f 95 c0             	setne  %al
    8d04:	84 c0                	test   %al,%al
    8d06:	74 32                	je     8d3a <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8d08:	48 8d 05 89 d4 00 00 	lea    0xd489(%rip),%rax        # 16198 <__dso_handle>
    8d0f:	48 89 c2             	mov    %rax,%rdx
    8d12:	48 8d 05 87 d4 00 00 	lea    0xd487(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8d19:	48 89 c6             	mov    %rax,%rsi
    8d1c:	48 8d 05 25 2d 00 00 	lea    0x2d25(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8d23:	48 89 c7             	mov    %rax,%rdi
    8d26:	e8 55 c4 ff ff       	call   5180 <__cxa_atexit@plt>
    8d2b:	48 8d 05 a6 d5 00 00 	lea    0xd5a6(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d32:	48 89 c7             	mov    %rax,%rdi
    8d35:	e8 96 c3 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8d3a:	48 8d 15 5f d4 00 00 	lea    0xd45f(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8d41:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8d44:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8d48:	89 ce                	mov    %ecx,%esi
    8d4a:	48 89 c7             	mov    %rax,%rdi
    8d4d:	e8 04 d5 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8d52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8d56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8d5a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8d5e:	48 89 c6             	mov    %rax,%rsi
    8d61:	48 89 d7             	mov    %rdx,%rdi
    8d64:	48 89 d0             	mov    %rdx,%rax
    8d67:	48 89 c2             	mov    %rax,%rdx
    8d6a:	48 89 df             	mov    %rbx,%rdi
    8d6d:	e8 74 ea ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8d72:	48 8d 15 47 c4 00 00 	lea    0xc447(%rip),%rdx        # 151c0 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    8d79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d7d:	48 89 10             	mov    %rdx,(%rax)
    8d80:	48 8d 15 61 c4 00 00 	lea    0xc461(%rip),%rdx        # 151e8 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    8d87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d8b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8d8f:	90                   	nop
    8d90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d94:	c9                   	leave
    8d95:	c3                   	ret

0000000000008d96 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>:
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8d96:	55                   	push   %rbp
    8d97:	48 89 e5             	mov    %rsp,%rbp
    8d9a:	53                   	push   %rbx
    8d9b:	48 83 ec 38          	sub    $0x38,%rsp
    8d9f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8da3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8da7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8dab:	c7 45 ec b0 0d 60 c4 	movl   $0xc4600db0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8db2:	0f b6 05 1f d5 00 00 	movzbl 0xd51f(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8db9:	84 c0                	test   %al,%al
    8dbb:	0f 94 c0             	sete   %al
    8dbe:	84 c0                	test   %al,%al
    8dc0:	74 4a                	je     8e0c <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8dc2:	48 8d 05 0f d5 00 00 	lea    0xd50f(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8dc9:	48 89 c7             	mov    %rax,%rdi
    8dcc:	e8 4f c5 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    8dd1:	85 c0                	test   %eax,%eax
    8dd3:	0f 95 c0             	setne  %al
    8dd6:	84 c0                	test   %al,%al
    8dd8:	74 32                	je     8e0c <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8dda:	48 8d 05 b7 d3 00 00 	lea    0xd3b7(%rip),%rax        # 16198 <__dso_handle>
    8de1:	48 89 c2             	mov    %rax,%rdx
    8de4:	48 8d 05 b5 d3 00 00 	lea    0xd3b5(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    8deb:	48 89 c6             	mov    %rax,%rsi
    8dee:	48 8d 05 53 2c 00 00 	lea    0x2c53(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    8df5:	48 89 c7             	mov    %rax,%rdi
    8df8:	e8 83 c3 ff ff       	call   5180 <__cxa_atexit@plt>
    8dfd:	48 8d 05 d4 d4 00 00 	lea    0xd4d4(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8e04:	48 89 c7             	mov    %rax,%rdi
    8e07:	e8 c4 c2 ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    8e0c:	48 8d 15 8d d3 00 00 	lea    0xd38d(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8e13:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8e16:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8e1a:	89 ce                	mov    %ecx,%esi
    8e1c:	48 89 c7             	mov    %rax,%rdi
    8e1f:	e8 32 d4 ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8e24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e28:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8e2c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8e30:	48 89 c6             	mov    %rax,%rsi
    8e33:	48 89 d7             	mov    %rdx,%rdi
    8e36:	48 89 d0             	mov    %rdx,%rax
    8e39:	48 89 c2             	mov    %rax,%rdx
    8e3c:	48 89 df             	mov    %rbx,%rdi
    8e3f:	e8 a2 e9 ff ff       	call   77e6 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8e44:	48 8d 15 25 c3 00 00 	lea    0xc325(%rip),%rdx        # 15170 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    8e4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e4f:	48 89 10             	mov    %rdx,(%rax)
    8e52:	48 8d 15 3f c3 00 00 	lea    0xc33f(%rip),%rdx        # 15198 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    8e59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e5d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8e61:	90                   	nop
    8e62:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e66:	c9                   	leave
    8e67:	c3                   	ret

0000000000008e68 <_ZN2vk8InstanceaSEDn>:
    {
      m_instance = instance;
      return *this;
    }

    Instance & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8e68:	55                   	push   %rbp
    8e69:	48 89 e5             	mov    %rsp,%rbp
    8e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_instance = {};
    8e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e78:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    8e7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8e83:	5d                   	pop    %rbp
    8e84:	c3                   	ret
    8e85:	90                   	nop

0000000000008e86 <_ZNK2vk8InstancecvP12VkInstance_TEv>:
                                    Dispatch const & d                                                  VULKAN_HPP_DEFAULT_DISPATCHER_ASSIGNMENT ) const;
#    endif /*VULKAN_HPP_NO_SMART_HANDLE*/
#  endif   /*VULKAN_HPP_DISABLE_ENHANCED_MODE*/
#endif     /*VK_USE_PLATFORM_SCREEN_QNX*/

    operator VkInstance() const VULKAN_HPP_NOEXCEPT
    8e86:	55                   	push   %rbp
    8e87:	48 89 e5             	mov    %rsp,%rbp
    8e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_instance;
    8e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e92:	48 8b 00             	mov    (%rax),%rax
    }
    8e95:	5d                   	pop    %rbp
    8e96:	c3                   	ret
    8e97:	90                   	nop

0000000000008e98 <_ZNK2vk8InstancecvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    8e98:	55                   	push   %rbp
    8e99:	48 89 e5             	mov    %rsp,%rbp
    8e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_instance != VK_NULL_HANDLE;
    8ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea4:	48 8b 00             	mov    (%rax),%rax
    8ea7:	48 85 c0             	test   %rax,%rax
    8eaa:	0f 95 c0             	setne  %al
    }
    8ead:	5d                   	pop    %rbp
    8eae:	c3                   	ret
    8eaf:	90                   	nop

0000000000008eb0 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
  {
  public:
#  ifdef VULKAN_HPP_NO_EXCEPTIONS
    DynamicLoader( std::string const & vulkanLibraryName = {} ) VULKAN_HPP_NOEXCEPT
#  else
    DynamicLoader( std::string const & vulkanLibraryName = {} )
    8eb0:	55                   	push   %rbp
    8eb1:	48 89 e5             	mov    %rsp,%rbp
    8eb4:	41 54                	push   %r12
    8eb6:	53                   	push   %rbx
    8eb7:	48 83 ec 10          	sub    $0x10,%rsp
    8ebb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ebf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
#  endif
    {
      if ( !vulkanLibraryName.empty() )
    8ec3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ec7:	48 89 c7             	mov    %rax,%rdi
    8eca:	e8 29 0a 00 00       	call   98f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>
    8ecf:	83 f0 01             	xor    $0x1,%eax
    8ed2:	84 c0                	test   %al,%al
    8ed4:	74 22                	je     8ef8 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x48>
      {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        m_library = dlopen( vulkanLibraryName.c_str(), RTLD_NOW | RTLD_LOCAL );
    8ed6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8eda:	48 89 c7             	mov    %rax,%rdi
    8edd:	e8 32 07 00 00       	call   9614 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    8ee2:	be 02 00 00 00       	mov    $0x2,%esi
    8ee7:	48 89 c7             	mov    %rax,%rdi
    8eea:	e8 81 c3 ff ff       	call   5270 <dlopen@plt>
    8eef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ef3:	48 89 02             	mov    %rax,(%rdx)
    8ef6:	eb 42                	jmp    8f3a <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a>
#  endif
      }
      else
      {
#  if defined( __unix__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        m_library = dlopen( "libvulkan.so", RTLD_NOW | RTLD_LOCAL );
    8ef8:	be 02 00 00 00       	mov    $0x2,%esi
    8efd:	48 8d 05 10 5b 00 00 	lea    0x5b10(%rip),%rax        # ea14 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3dc>
    8f04:	48 89 c7             	mov    %rax,%rdi
    8f07:	e8 64 c3 ff ff       	call   5270 <dlopen@plt>
    8f0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f10:	48 89 02             	mov    %rax,(%rdx)
        if ( m_library == nullptr )
    8f13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f17:	48 8b 00             	mov    (%rax),%rax
    8f1a:	48 85 c0             	test   %rax,%rax
    8f1d:	75 1b                	jne    8f3a <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a>
        {
          m_library = dlopen( "libvulkan.so.1", RTLD_NOW | RTLD_LOCAL );
    8f1f:	be 02 00 00 00       	mov    $0x2,%esi
    8f24:	48 8d 05 f6 5a 00 00 	lea    0x5af6(%rip),%rax        # ea21 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e9>
    8f2b:	48 89 c7             	mov    %rax,%rdi
    8f2e:	e8 3d c3 ff ff       	call   5270 <dlopen@plt>
    8f33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f37:	48 89 02             	mov    %rax,(%rdx)
#    error unsupported platform
#  endif
      }

#  ifndef VULKAN_HPP_NO_EXCEPTIONS
      if ( m_library == nullptr )
    8f3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f3e:	48 8b 00             	mov    (%rax),%rax
    8f41:	48 85 c0             	test   %rax,%rax
    8f44:	75 51                	jne    8f97 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe7>
      {
        // NOTE there should be an InitializationFailedError, but msvc insists on the symbol does not exist within the scope of this function.
        throw std::runtime_error( "Failed to load vulkan library!" );
    8f46:	bf 10 00 00 00       	mov    $0x10,%edi
    8f4b:	e8 60 c1 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    8f50:	48 89 c3             	mov    %rax,%rbx
    8f53:	48 8d 05 d6 5a 00 00 	lea    0x5ad6(%rip),%rax        # ea30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3f8>
    8f5a:	48 89 c6             	mov    %rax,%rsi
    8f5d:	48 89 df             	mov    %rbx,%rdi
    8f60:	e8 1b c1 ff ff       	call   5080 <_ZNSt13runtime_errorC1EPKc@plt>
    8f65:	48 8b 05 3c d0 00 00 	mov    0xd03c(%rip),%rax        # 15fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8f6c:	48 89 c2             	mov    %rax,%rdx
    8f6f:	48 8d 05 aa ca 00 00 	lea    0xcaaa(%rip),%rax        # 15a20 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8f76:	48 89 c6             	mov    %rax,%rsi
    8f79:	48 89 df             	mov    %rbx,%rdi
    8f7c:	e8 5f c3 ff ff       	call   52e0 <__cxa_throw@plt>
    8f81:	49 89 c4             	mov    %rax,%r12
    8f84:	48 89 df             	mov    %rbx,%rdi
    8f87:	e8 84 c1 ff ff       	call   5110 <__cxa_free_exception@plt>
    8f8c:	4c 89 e0             	mov    %r12,%rax
    8f8f:	48 89 c7             	mov    %rax,%rdi
    8f92:	e8 69 c3 ff ff       	call   5300 <_Unwind_Resume@plt>
      }
#  endif
    }
    8f97:	90                   	nop
    8f98:	48 83 c4 10          	add    $0x10,%rsp
    8f9c:	5b                   	pop    %rbx
    8f9d:	41 5c                	pop    %r12
    8f9f:	5d                   	pop    %rbp
    8fa0:	c3                   	ret
    8fa1:	90                   	nop

0000000000008fa2 <_ZN2vk13DynamicLoaderD1Ev>:
    {
      std::swap( m_library, other.m_library );
      return *this;
    }

    ~DynamicLoader() VULKAN_HPP_NOEXCEPT
    8fa2:	55                   	push   %rbp
    8fa3:	48 89 e5             	mov    %rsp,%rbp
    8fa6:	48 83 ec 10          	sub    $0x10,%rsp
    8faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if ( m_library )
    8fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fb2:	48 8b 00             	mov    (%rax),%rax
    8fb5:	48 85 c0             	test   %rax,%rax
    8fb8:	74 0f                	je     8fc9 <_ZN2vk13DynamicLoaderD1Ev+0x27>
      {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        dlclose( m_library );
    8fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fbe:	48 8b 00             	mov    (%rax),%rax
    8fc1:	48 89 c7             	mov    %rax,%rdi
    8fc4:	e8 77 c1 ff ff       	call   5140 <dlclose@plt>
        ::FreeLibrary( m_library );
#  else
#    error unsupported platform
#  endif
      }
    }
    8fc9:	90                   	nop
    8fca:	c9                   	leave
    8fcb:	c3                   	ret

0000000000008fcc <_ZN2vk4raii17ContextDispatcherC1EPFPFvvEP12VkInstance_TPKcE>:
    }

    class ContextDispatcher : public DispatchLoaderBase
    {
    public:
      ContextDispatcher( PFN_vkGetInstanceProcAddr getProcAddr )
    8fcc:	55                   	push   %rbp
    8fcd:	48 89 e5             	mov    %rsp,%rbp
    8fd0:	48 83 ec 10          	sub    $0x10,%rsp
    8fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
        //=== VK_VERSION_1_0 ===
        , vkCreateInstance( PFN_vkCreateInstance( getProcAddr( NULL, "vkCreateInstance" ) ) )
        , vkEnumerateInstanceExtensionProperties( PFN_vkEnumerateInstanceExtensionProperties( getProcAddr( NULL, "vkEnumerateInstanceExtensionProperties" ) ) )
        , vkEnumerateInstanceLayerProperties( PFN_vkEnumerateInstanceLayerProperties( getProcAddr( NULL, "vkEnumerateInstanceLayerProperties" ) ) )
        //=== VK_VERSION_1_1 ===
        , vkEnumerateInstanceVersion( PFN_vkEnumerateInstanceVersion( getProcAddr( NULL, "vkEnumerateInstanceVersion" ) ) )
    8fdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fe0:	48 89 c7             	mov    %rax,%rdi
    8fe3:	e8 02 d5 ff ff       	call   64ea <_ZN2vk18DispatchLoaderBaseC1Ev>
        : vkGetInstanceProcAddr( getProcAddr )
    8fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ff0:	48 89 50 10          	mov    %rdx,0x10(%rax)
        , vkCreateInstance( PFN_vkCreateInstance( getProcAddr( NULL, "vkCreateInstance" ) ) )
    8ff4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ff8:	48 8d 15 69 5a 00 00 	lea    0x5a69(%rip),%rdx        # ea68 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
    8fff:	48 89 d6             	mov    %rdx,%rsi
    9002:	bf 00 00 00 00       	mov    $0x0,%edi
    9007:	ff d0                	call   *%rax
    9009:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    900d:	48 89 42 18          	mov    %rax,0x18(%rdx)
        , vkEnumerateInstanceExtensionProperties( PFN_vkEnumerateInstanceExtensionProperties( getProcAddr( NULL, "vkEnumerateInstanceExtensionProperties" ) ) )
    9011:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9015:	48 8d 15 64 5a 00 00 	lea    0x5a64(%rip),%rdx        # ea80 <_ZNSt8__detailL19__atomic_spin_countE+0x1c>
    901c:	48 89 d6             	mov    %rdx,%rsi
    901f:	bf 00 00 00 00       	mov    $0x0,%edi
    9024:	ff d0                	call   *%rax
    9026:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    902a:	48 89 42 20          	mov    %rax,0x20(%rdx)
        , vkEnumerateInstanceLayerProperties( PFN_vkEnumerateInstanceLayerProperties( getProcAddr( NULL, "vkEnumerateInstanceLayerProperties" ) ) )
    902e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9032:	48 8d 15 6f 5a 00 00 	lea    0x5a6f(%rip),%rdx        # eaa8 <_ZNSt8__detailL19__atomic_spin_countE+0x44>
    9039:	48 89 d6             	mov    %rdx,%rsi
    903c:	bf 00 00 00 00       	mov    $0x0,%edi
    9041:	ff d0                	call   *%rax
    9043:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9047:	48 89 42 28          	mov    %rax,0x28(%rdx)
        , vkEnumerateInstanceVersion( PFN_vkEnumerateInstanceVersion( getProcAddr( NULL, "vkEnumerateInstanceVersion" ) ) )
    904b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    904f:	48 8d 15 75 5a 00 00 	lea    0x5a75(%rip),%rdx        # eacb <_ZNSt8__detailL19__atomic_spin_countE+0x67>
    9056:	48 89 d6             	mov    %rdx,%rsi
    9059:	bf 00 00 00 00       	mov    $0x0,%edi
    905e:	ff d0                	call   *%rax
    9060:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9064:	48 89 42 30          	mov    %rax,0x30(%rdx)
      {
      }
    9068:	90                   	nop
    9069:	c9                   	leave
    906a:	c3                   	ret
    906b:	90                   	nop

000000000000906c <_ZN2vk4raii7ContextC1Ev>:

    class Context
    {
    public:
#  if VULKAN_HPP_ENABLE_DYNAMIC_LOADER_TOOL
      Context()
    906c:	55                   	push   %rbp
    906d:	48 89 e5             	mov    %rsp,%rbp
    9070:	41 54                	push   %r12
    9072:	53                   	push   %rbx
    9073:	48 83 ec 30          	sub    $0x30,%rsp
    9077:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    907b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    907f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9083:	48 89 c7             	mov    %rax,%rdi
    9086:	e8 af d5 ff ff       	call   663a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
    908b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    908f:	48 89 c6             	mov    %rax,%rsi
    9092:	48 89 df             	mov    %rbx,%rdi
    9095:	e8 16 fe ff ff       	call   8eb0 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    909a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    909e:	48 89 c7             	mov    %rax,%rdi
    90a1:	e8 88 05 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    90a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    90aa:	48 8d 58 08          	lea    0x8(%rax),%rbx
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    90ae:	bf 38 00 00 00       	mov    $0x38,%edi
    90b3:	e8 18 c1 ff ff       	call   51d0 <_Znwm@plt>
    90b8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    90bc:	41 bc 01 00 00 00    	mov    $0x1,%r12d
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    90c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    90c6:	48 8d 15 19 5a 00 00 	lea    0x5a19(%rip),%rdx        # eae6 <_ZNSt8__detailL19__atomic_spin_countE+0x82>
    90cd:	48 89 d6             	mov    %rdx,%rsi
    90d0:	48 89 c7             	mov    %rax,%rdi
    90d3:	e8 40 08 00 00       	call   9918 <_ZNK2vk13DynamicLoader14getProcAddressIPFPFvvEP12VkInstance_TPKcEEET_S7_>
    90d8:	48 89 c6             	mov    %rax,%rsi
    90db:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    90df:	e8 e8 fe ff ff       	call   8fcc <_ZN2vk4raii17ContextDispatcherC1EPFPFvvEP12VkInstance_TPKcE>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    90e4:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    90e8:	48 89 df             	mov    %rbx,%rdi
    90eb:	e8 76 08 00 00       	call   9966 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1IS4_vEEPS2_>
#  else
      Context( PFN_vkGetInstanceProcAddr getInstanceProcAddr )
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher( getInstanceProcAddr ) )
#  endif
      {
      }
    90f0:	eb 4c                	jmp    913e <_ZN2vk4raii7ContextC1Ev+0xd2>
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    90f2:	48 89 c3             	mov    %rax,%rbx
    90f5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    90f9:	48 89 c7             	mov    %rax,%rdi
    90fc:	e8 2d 05 00 00       	call   962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    9101:	48 89 d8             	mov    %rbx,%rax
    9104:	48 89 c7             	mov    %rax,%rdi
    9107:	e8 f4 c1 ff ff       	call   5300 <_Unwind_Resume@plt>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    910c:	48 89 c3             	mov    %rax,%rbx
    910f:	45 84 e4             	test   %r12b,%r12b
    9112:	74 13                	je     9127 <_ZN2vk4raii7ContextC1Ev+0xbb>
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    9114:	be 38 00 00 00       	mov    $0x38,%esi
    9119:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    911d:	e8 be c0 ff ff       	call   51e0 <_ZdlPvm@plt>
    9122:	eb 03                	jmp    9127 <_ZN2vk4raii7ContextC1Ev+0xbb>
      }
    9124:	48 89 c3             	mov    %rax,%rbx
    9127:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    912b:	48 89 c7             	mov    %rax,%rdi
    912e:	e8 6f fe ff ff       	call   8fa2 <_ZN2vk13DynamicLoaderD1Ev>
    9133:	48 89 d8             	mov    %rbx,%rax
    9136:	48 89 c7             	mov    %rax,%rdi
    9139:	e8 c2 c1 ff ff       	call   5300 <_Unwind_Resume@plt>
    913e:	48 83 c4 30          	add    $0x30,%rsp
    9142:	5b                   	pop    %rbx
    9143:	41 5c                	pop    %r12
    9145:	5d                   	pop    %rbp
    9146:	c3                   	ret
    9147:	90                   	nop

0000000000009148 <_ZN2vk4raii8InstanceD1Ev>:
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
      }

      Instance( std::nullptr_t ) {}

      ~Instance()
    9148:	55                   	push   %rbp
    9149:	48 89 e5             	mov    %rsp,%rbp
    914c:	48 83 ec 10          	sub    $0x10,%rsp
    9150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    9154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9158:	48 89 c7             	mov    %rax,%rdi
    915b:	e8 14 00 00 00       	call   9174 <_ZN2vk4raii8Instance5clearEv>
      }
    9160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9164:	48 83 c0 10          	add    $0x10,%rax
    9168:	48 89 c7             	mov    %rax,%rdi
    916b:	e8 80 08 00 00       	call   99f0 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>
    9170:	90                   	nop
    9171:	c9                   	leave
    9172:	c3                   	ret
    9173:	90                   	nop

0000000000009174 <_ZN2vk4raii8Instance5clearEv>:
      VULKAN_HPP_NAMESPACE::Instance const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_instance;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9174:	55                   	push   %rbp
    9175:	48 89 e5             	mov    %rsp,%rbp
    9178:	41 54                	push   %r12
    917a:	53                   	push   %rbx
    917b:	48 83 ec 10          	sub    $0x10,%rsp
    917f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        if ( m_instance )
    9183:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9187:	48 89 c7             	mov    %rax,%rdi
    918a:	e8 09 fd ff ff       	call   8e98 <_ZNK2vk8InstancecvbEv>
    918f:	84 c0                	test   %al,%al
    9191:	74 2d                	je     91c0 <_ZN2vk4raii8Instance5clearEv+0x4c>
        {
          getDispatcher()->vkDestroyInstance( static_cast<VkInstance>( m_instance ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    9193:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9197:	48 89 c7             	mov    %rax,%rdi
    919a:	e8 5d 00 00 00       	call   91fc <_ZNK2vk4raii8Instance13getDispatcherEv>
    919f:	4c 8b 60 10          	mov    0x10(%rax),%r12
    91a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91a7:	48 8b 58 08          	mov    0x8(%rax),%rbx
    91ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91af:	48 89 c7             	mov    %rax,%rdi
    91b2:	e8 cf fc ff ff       	call   8e86 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    91b7:	48 89 de             	mov    %rbx,%rsi
    91ba:	48 89 c7             	mov    %rax,%rdi
    91bd:	41 ff d4             	call   *%r12
        }
        m_instance   = nullptr;
    91c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91c4:	be 00 00 00 00       	mov    $0x0,%esi
    91c9:	48 89 c7             	mov    %rax,%rdi
    91cc:	e8 97 fc ff ff       	call   8e68 <_ZN2vk8InstanceaSEDn>
        m_allocator  = nullptr;
    91d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    91dc:	00 
        m_dispatcher = nullptr;
    91dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91e1:	48 83 c0 10          	add    $0x10,%rax
    91e5:	be 00 00 00 00       	mov    $0x0,%esi
    91ea:	48 89 c7             	mov    %rax,%rdi
    91ed:	e8 98 08 00 00       	call   9a8a <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEaSEDn>
      }
    91f2:	90                   	nop
    91f3:	48 83 c4 10          	add    $0x10,%rsp
    91f7:	5b                   	pop    %rbx
    91f8:	41 5c                	pop    %r12
    91fa:	5d                   	pop    %rbp
    91fb:	c3                   	ret

00000000000091fc <_ZNK2vk4raii8Instance13getDispatcherEv>:

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    91fc:	55                   	push   %rbp
    91fd:	48 89 e5             	mov    %rsp,%rbp
    9200:	48 83 ec 10          	sub    $0x10,%rsp
    9204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    9208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    920c:	48 83 c0 10          	add    $0x10,%rax
    9210:	48 89 c7             	mov    %rax,%rdi
    9213:	e8 9a 08 00 00       	call   9ab2 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEptEv>
    9218:	48 89 c7             	mov    %rax,%rdi
    921b:	e8 80 d2 ff ff       	call   64a0 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    9220:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9226:	74 28                	je     9250 <_ZNK2vk4raii8Instance13getDispatcherEv+0x54>
    9228:	48 8d 05 d1 58 00 00 	lea    0x58d1(%rip),%rax        # eb00 <_ZNSt8__detailL19__atomic_spin_countE+0x9c>
    922f:	48 89 c1             	mov    %rax,%rcx
    9232:	ba 25 0a 00 00       	mov    $0xa25,%edx
    9237:	48 8d 05 12 59 00 00 	lea    0x5912(%rip),%rax        # eb50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    923e:	48 89 c6             	mov    %rax,%rsi
    9241:	48 8d 05 30 59 00 00 	lea    0x5930(%rip),%rax        # eb78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    9248:	48 89 c7             	mov    %rax,%rdi
    924b:	e8 90 be ff ff       	call   50e0 <__assert_fail@plt>
        return &*m_dispatcher;
    9250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9254:	48 83 c0 10          	add    $0x10,%rax
    9258:	48 89 c7             	mov    %rax,%rdi
    925b:	e8 6c 08 00 00       	call   9acc <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv>
      }
    9260:	c9                   	leave
    9261:	c3                   	ret

0000000000009262 <_ZN4rtvc4GLFWC1Ev>:
#include <unordered_map>

namespace rtvc {

struct GLFW {
  GLFW() { glfwInit(); }
    9262:	55                   	push   %rbp
    9263:	48 89 e5             	mov    %rsp,%rbp
    9266:	48 83 ec 10          	sub    $0x10,%rsp
    926a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    926e:	e8 ad bf ff ff       	call   5220 <glfwInit@plt>
    9273:	90                   	nop
    9274:	c9                   	leave
    9275:	c3                   	ret

0000000000009276 <_ZN4rtvc4GLFWD1Ev>:
  ~GLFW() { glfwTerminate(); }
    9276:	55                   	push   %rbp
    9277:	48 89 e5             	mov    %rsp,%rbp
    927a:	48 83 ec 10          	sub    $0x10,%rsp
    927e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9282:	e8 69 bf ff ff       	call   51f0 <glfwTerminate@plt>
    9287:	90                   	nop
    9288:	c9                   	leave
    9289:	c3                   	ret

000000000000928a <_ZN4rtvc6WindowC1Ev>:

class Window {
  typedef GLFWwindow *pGLFWwindow;

public:
  Window() {
    928a:	55                   	push   %rbp
    928b:	48 89 e5             	mov    %rsp,%rbp
    928e:	48 83 ec 10          	sub    $0x10,%rsp
    9292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    9296:	be 00 00 00 00       	mov    $0x0,%esi
    929b:	bf 01 20 02 00       	mov    $0x22001,%edi
    92a0:	e8 bb be ff ff       	call   5160 <glfwWindowHint@plt>
    glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    92a5:	be 00 00 00 00       	mov    $0x0,%esi
    92aa:	bf 03 00 02 00       	mov    $0x20003,%edi
    92af:	e8 ac be ff ff       	call   5160 <glfwWindowHint@plt>
    _window = glfwCreateWindow(800, 600, "VulkanApplication", nullptr, nullptr);
    92b4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    92ba:	b9 00 00 00 00       	mov    $0x0,%ecx
    92bf:	48 8d 05 ea 58 00 00 	lea    0x58ea(%rip),%rax        # ebb0 <_ZNSt8__detailL19__atomic_spin_countE+0x14c>
    92c6:	48 89 c2             	mov    %rax,%rdx
    92c9:	be 58 02 00 00       	mov    $0x258,%esi
    92ce:	bf 20 03 00 00       	mov    $0x320,%edi
    92d3:	e8 d8 bf ff ff       	call   52b0 <glfwCreateWindow@plt>
    92d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92dc:	48 89 02             	mov    %rax,(%rdx)
  }
    92df:	90                   	nop
    92e0:	c9                   	leave
    92e1:	c3                   	ret

00000000000092e2 <_ZN4rtvc6WindowD1Ev>:
  ~Window() { glfwDestroyWindow(_window); }
    92e2:	55                   	push   %rbp
    92e3:	48 89 e5             	mov    %rsp,%rbp
    92e6:	48 83 ec 10          	sub    $0x10,%rsp
    92ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92f2:	48 8b 00             	mov    (%rax),%rax
    92f5:	48 89 c7             	mov    %rax,%rdi
    92f8:	e8 53 bd ff ff       	call   5050 <glfwDestroyWindow@plt>
    92fd:	90                   	nop
    92fe:	c9                   	leave
    92ff:	c3                   	ret

0000000000009300 <_ZN4rtvc6Window3refEv>:
  Window(const Window &) = delete;
  Window(Window &&) = delete;
  Window &operator=(const Window &) = delete;
  Window &operator=(Window &&) = delete;

  const pGLFWwindow &ref() { return _window; }
    9300:	55                   	push   %rbp
    9301:	48 89 e5             	mov    %rsp,%rbp
    9304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    930c:	5d                   	pop    %rbp
    930d:	c3                   	ret

000000000000930e <_ZN2vk4raii7ContextD1Ev>:
      ~Context() = default;
    930e:	55                   	push   %rbp
    930f:	48 89 e5             	mov    %rsp,%rbp
    9312:	48 83 ec 10          	sub    $0x10,%rsp
    9316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    931a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    931e:	48 83 c0 08          	add    $0x8,%rax
    9322:	48 89 c7             	mov    %rax,%rdi
    9325:	e8 62 06 00 00       	call   998c <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev>
    932a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    932e:	48 89 c7             	mov    %rax,%rdi
    9331:	e8 6c fc ff ff       	call   8fa2 <_ZN2vk13DynamicLoaderD1Ev>
    9336:	90                   	nop
    9337:	c9                   	leave
    9338:	c3                   	ret
    9339:	90                   	nop

000000000000933a <_ZN4rtvc9VulkanApp6renderEv>:
  VulkanApp(const VulkanApp &) = delete;
  VulkanApp(VulkanApp &&) = delete;
  VulkanApp &operator=(const VulkanApp &) = delete;
  VulkanApp &operator=(VulkanApp &&) = delete;

  void render() {
    933a:	55                   	push   %rbp
    933b:	48 89 e5             	mov    %rsp,%rbp
    933e:	48 83 ec 10          	sub    $0x10,%rsp
    9342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!glfwWindowShouldClose(_window.ref())) {
    9346:	eb 05                	jmp    934d <_ZN4rtvc9VulkanApp6renderEv+0x13>
      glfwPollEvents();
    9348:	e8 63 be ff ff       	call   51b0 <glfwPollEvents@plt>
    while (!glfwWindowShouldClose(_window.ref())) {
    934d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9351:	48 83 c0 18          	add    $0x18,%rax
    9355:	48 89 c7             	mov    %rax,%rdi
    9358:	e8 a3 ff ff ff       	call   9300 <_ZN4rtvc6Window3refEv>
    935d:	48 8b 00             	mov    (%rax),%rax
    9360:	48 89 c7             	mov    %rax,%rdi
    9363:	e8 d8 bf ff ff       	call   5340 <glfwWindowShouldClose@plt>
    9368:	85 c0                	test   %eax,%eax
    936a:	0f 94 c0             	sete   %al
    936d:	84 c0                	test   %al,%al
    936f:	75 d7                	jne    9348 <_ZN4rtvc9VulkanApp6renderEv+0xe>
    }
  }
    9371:	90                   	nop
    9372:	90                   	nop
    9373:	c9                   	leave
    9374:	c3                   	ret
    9375:	90                   	nop

0000000000009376 <_ZN4rtvc9VulkanAppC1Ev>:
  VulkanApp() = default;
    9376:	55                   	push   %rbp
    9377:	48 89 e5             	mov    %rsp,%rbp
    937a:	53                   	push   %rbx
    937b:	48 83 ec 18          	sub    $0x18,%rsp
    937f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9383:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9387:	48 89 c7             	mov    %rax,%rdi
    938a:	e8 dd fc ff ff       	call   906c <_ZN2vk4raii7ContextC1Ev>
    938f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9393:	48 83 c0 10          	add    $0x10,%rax
    9397:	48 89 c7             	mov    %rax,%rdi
    939a:	e8 c3 fe ff ff       	call   9262 <_ZN4rtvc4GLFWC1Ev>
    939f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93a3:	48 83 c0 18          	add    $0x18,%rax
    93a7:	48 89 c7             	mov    %rax,%rdi
    93aa:	e8 db fe ff ff       	call   928a <_ZN4rtvc6WindowC1Ev>
    93af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93b3:	48 8d 50 20          	lea    0x20(%rax),%rdx
    93b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93bb:	48 89 c6             	mov    %rax,%rsi
    93be:	48 89 d7             	mov    %rdx,%rdi
    93c1:	e8 30 31 00 00       	call   c4f6 <_ZN4rtvc9VulkanApp12makeInstanceEv>
    93c6:	eb 44                	jmp    940c <_ZN4rtvc9VulkanAppC1Ev+0x96>
    93c8:	48 89 c3             	mov    %rax,%rbx
    93cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93cf:	48 83 c0 18          	add    $0x18,%rax
    93d3:	48 89 c7             	mov    %rax,%rdi
    93d6:	e8 07 ff ff ff       	call   92e2 <_ZN4rtvc6WindowD1Ev>
    93db:	eb 03                	jmp    93e0 <_ZN4rtvc9VulkanAppC1Ev+0x6a>
    93dd:	48 89 c3             	mov    %rax,%rbx
    93e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93e4:	48 83 c0 10          	add    $0x10,%rax
    93e8:	48 89 c7             	mov    %rax,%rdi
    93eb:	e8 86 fe ff ff       	call   9276 <_ZN4rtvc4GLFWD1Ev>
    93f0:	eb 03                	jmp    93f5 <_ZN4rtvc9VulkanAppC1Ev+0x7f>
    93f2:	48 89 c3             	mov    %rax,%rbx
    93f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93f9:	48 89 c7             	mov    %rax,%rdi
    93fc:	e8 0d ff ff ff       	call   930e <_ZN2vk4raii7ContextD1Ev>
    9401:	48 89 d8             	mov    %rbx,%rax
    9404:	48 89 c7             	mov    %rax,%rdi
    9407:	e8 f4 be ff ff       	call   5300 <_Unwind_Resume@plt>
    940c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9410:	c9                   	leave
    9411:	c3                   	ret

0000000000009412 <_ZN4rtvc9VulkanAppD1Ev>:
  ~VulkanApp() = default;
    9412:	55                   	push   %rbp
    9413:	48 89 e5             	mov    %rsp,%rbp
    9416:	48 83 ec 10          	sub    $0x10,%rsp
    941a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    941e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9422:	48 83 c0 20          	add    $0x20,%rax
    9426:	48 89 c7             	mov    %rax,%rdi
    9429:	e8 1a fd ff ff       	call   9148 <_ZN2vk4raii8InstanceD1Ev>
    942e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9432:	48 83 c0 18          	add    $0x18,%rax
    9436:	48 89 c7             	mov    %rax,%rdi
    9439:	e8 a4 fe ff ff       	call   92e2 <_ZN4rtvc6WindowD1Ev>
    943e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9442:	48 83 c0 10          	add    $0x10,%rax
    9446:	48 89 c7             	mov    %rax,%rdi
    9449:	e8 28 fe ff ff       	call   9276 <_ZN4rtvc4GLFWD1Ev>
    944e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9452:	48 89 c7             	mov    %rax,%rdi
    9455:	e8 b4 fe ff ff       	call   930e <_ZN2vk4raii7ContextD1Ev>
    945a:	90                   	nop
    945b:	c9                   	leave
    945c:	c3                   	ret

000000000000945d <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    }

#if __cplusplus >= 202002L
  template<typename _Tp, typename... _Args>
    constexpr auto
    construct_at(_Tp* __location, _Args&&... __args)
    945d:	55                   	push   %rbp
    945e:	48 89 e5             	mov    %rsp,%rbp
    9461:	53                   	push   %rbx
    9462:	48 83 ec 18          	sub    $0x18,%rsp
    9466:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    946a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    946e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9472:	48 89 c6             	mov    %rax,%rsi
    9475:	bf 01 00 00 00       	mov    $0x1,%edi
    947a:	e8 78 cc ff ff       	call   60f7 <_ZnwmPv>
    947f:	48 89 c3             	mov    %rax,%rbx
    9482:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9486:	48 89 c7             	mov    %rax,%rdi
    9489:	e8 80 06 00 00       	call   9b0e <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>
    948e:	0f b6 00             	movzbl (%rax),%eax
    9491:	88 03                	mov    %al,(%rbx)
    9493:	48 89 d8             	mov    %rbx,%rax
    9496:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    949a:	c9                   	leave
    949b:	c3                   	ret

000000000000949c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    949c:	55                   	push   %rbp
    949d:	48 89 e5             	mov    %rsp,%rbp
    94a0:	48 83 ec 20          	sub    $0x20,%rsp
    94a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    94a8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    94af:	00 
      while (!eq(__p[__i], char_type()))
    94b0:	eb 05                	jmp    94b7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    94b2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    94b7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    94bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c3:	48 01 c2             	add    %rax,%rdx
    94c6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    94ca:	48 89 c6             	mov    %rax,%rsi
    94cd:	48 89 d7             	mov    %rdx,%rdi
    94d0:	e8 47 06 00 00       	call   9b1c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    94d5:	83 f0 01             	xor    $0x1,%eax
    94d8:	84 c0                	test   %al,%al
    94da:	75 d6                	jne    94b2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    94dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    94e0:	c9                   	leave
    94e1:	c3                   	ret

00000000000094e2 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>:
    char_traits<_CharT>::
    94e2:	55                   	push   %rbp
    94e3:	48 89 e5             	mov    %rsp,%rbp
    94e6:	48 83 ec 30          	sub    $0x30,%rsp
    94ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    94ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    94f2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__n == 0)
    94f6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    94fb:	75 09                	jne    9506 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x24>
	return __s1;
    94fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9501:	e9 8b 00 00 00       	jmp    9591 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      if (std::__is_constant_evaluated())
    9506:	e8 e1 cb ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    950b:	84 c0                	test   %al,%al
    950d:	74 67                	je     9576 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x94>
	  if (__s1 == __s2) // unlikely, but saves a lot of work
    950f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9513:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    9517:	75 06                	jne    951f <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x3d>
	    return __s1;
    9519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    951d:	eb 72                	jmp    9591 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
	  char_type* __tmp = new char_type[__n];
    951f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9523:	48 89 c7             	mov    %rax,%rdi
    9526:	e8 05 bb ff ff       	call   5030 <_Znam@plt>
    952b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  copy(__tmp, __s2, __n);
    952f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9533:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9537:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    953b:	48 89 ce             	mov    %rcx,%rsi
    953e:	48 89 c7             	mov    %rax,%rdi
    9541:	e8 4e 00 00 00       	call   9594 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  copy(__s1, __tmp, __n);
    9546:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    954a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    954e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9552:	48 89 ce             	mov    %rcx,%rsi
    9555:	48 89 c7             	mov    %rax,%rdi
    9558:	e8 37 00 00 00       	call   9594 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  delete[] __tmp;
    955d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9562:	74 0c                	je     9570 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x8e>
    9564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9568:	48 89 c7             	mov    %rax,%rdi
    956b:	e8 d0 bc ff ff       	call   5240 <_ZdaPv@plt>
	  return __s1;
    9570:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9574:	eb 1b                	jmp    9591 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      __builtin_memmove(__s1, __s2, __n * sizeof(char_type));
    9576:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    957a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    957e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9582:	48 89 ce             	mov    %rcx,%rsi
    9585:	48 89 c7             	mov    %rax,%rdi
    9588:	e8 33 bd ff ff       	call   52c0 <memmove@plt>
      return __s1;
    958d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    9591:	c9                   	leave
    9592:	c3                   	ret
    9593:	90                   	nop

0000000000009594 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>:
    char_traits<_CharT>::
    9594:	55                   	push   %rbp
    9595:	48 89 e5             	mov    %rsp,%rbp
    9598:	48 83 ec 30          	sub    $0x30,%rsp
    959c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    95a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (std::__is_constant_evaluated())
    95a8:	e8 3f cb ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    95ad:	84 c0                	test   %al,%al
    95af:	74 40                	je     95f1 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x5d>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    95b1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    95b8:	00 
    95b9:	eb 26                	jmp    95e1 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x4d>
	    std::construct_at(__s1 + __i, __s2[__i]);
    95bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95c3:	48 01 c2             	add    %rax,%rdx
    95c6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    95ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ce:	48 01 c8             	add    %rcx,%rax
    95d1:	48 89 d6             	mov    %rdx,%rsi
    95d4:	48 89 c7             	mov    %rax,%rdi
    95d7:	e8 81 fe ff ff       	call   945d <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    95dc:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    95e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    95e9:	72 d0                	jb     95bb <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x27>
	  return __s1;
    95eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95ef:	eb 21                	jmp    9612 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x7e>
      __builtin_memcpy(__s1, __s2, __n * sizeof(char_type));
    95f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    95f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95f9:	48 89 d1             	mov    %rdx,%rcx
    95fc:	48 89 c6             	mov    %rax,%rsi
    95ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9603:	48 89 c2             	mov    %rax,%rdx
    9606:	48 89 cf             	mov    %rcx,%rdi
    9609:	e8 42 bb ff ff       	call   5150 <memcpy@plt>
      return __s1;
    960e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    9612:	c9                   	leave
    9613:	c3                   	ret

0000000000009614 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
       *  This is a handle to internal data.  Do not modify or dire things may
       *  happen.
      */
      _GLIBCXX20_CONSTEXPR
      const _CharT*
      c_str() const _GLIBCXX_NOEXCEPT
    9614:	55                   	push   %rbp
    9615:	48 89 e5             	mov    %rsp,%rbp
    9618:	48 83 ec 10          	sub    $0x10,%rsp
    961c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data(); }
    9620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9624:	48 89 c7             	mov    %rax,%rdi
    9627:	e8 12 05 00 00       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    962c:	c9                   	leave
    962d:	c3                   	ret

000000000000962e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
      ~basic_string()
    962e:	55                   	push   %rbp
    962f:	48 89 e5             	mov    %rsp,%rbp
    9632:	48 83 ec 10          	sub    $0x10,%rsp
    9636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_dispose(); }
    963a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963e:	48 89 c7             	mov    %rax,%rdi
    9641:	e8 40 05 00 00       	call   9b86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    9646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    964a:	48 89 c7             	mov    %rax,%rdi
    964d:	e8 cc cf ff ff       	call   661e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    9652:	90                   	nop
    9653:	c9                   	leave
    9654:	c3                   	ret
    9655:	90                   	nop

0000000000009656 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
      basic_string(basic_string&& __str) noexcept
    9656:	55                   	push   %rbp
    9657:	48 89 e5             	mov    %rsp,%rbp
    965a:	41 54                	push   %r12
    965c:	53                   	push   %rbx
    965d:	48 83 ec 10          	sub    $0x10,%rsp
    9661:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9665:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    9669:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    966d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9671:	48 89 c7             	mov    %rax,%rdi
    9674:	e8 47 05 00 00       	call   9bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    9679:	48 89 c7             	mov    %rax,%rdi
    967c:	e8 19 d1 ff ff       	call   679a <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    9681:	49 89 c4             	mov    %rax,%r12
    9684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9688:	48 89 c7             	mov    %rax,%rdi
    968b:	e8 6a d0 ff ff       	call   66fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9690:	4c 89 e2             	mov    %r12,%rdx
    9693:	48 89 c6             	mov    %rax,%rsi
    9696:	48 89 df             	mov    %rbx,%rdi
    9699:	e8 bc d0 ff ff       	call   675a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
	if (__str._M_is_local())
    969e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96a2:	48 89 c7             	mov    %rax,%rdi
    96a5:	e8 24 05 00 00       	call   9bce <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    96aa:	84 c0                	test   %al,%al
    96ac:	74 2d                	je     96db <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x85>
			      __str.length() + 1);
    96ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96b2:	48 89 c7             	mov    %rax,%rdi
    96b5:	e8 ae 00 00 00       	call   9768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    96ba:	48 8d 50 01          	lea    0x1(%rax),%rdx
    96be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96c2:	48 8d 48 10          	lea    0x10(%rax),%rcx
    96c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96ca:	48 83 c0 10          	add    $0x10,%rax
    96ce:	48 89 ce             	mov    %rcx,%rsi
    96d1:	48 89 c7             	mov    %rax,%rdi
    96d4:	e8 08 cb ff ff       	call   61e1 <_ZNSt11char_traitsIcE4copyEPcPKcm>
    96d9:	eb 35                	jmp    9710 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0xba>
	    _M_data(__str._M_data());
    96db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96df:	48 89 c7             	mov    %rax,%rdi
    96e2:	e8 57 04 00 00       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    96e7:	48 89 c2             	mov    %rax,%rdx
    96ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96ee:	48 89 d6             	mov    %rdx,%rsi
    96f1:	48 89 c7             	mov    %rax,%rdi
    96f4:	e8 09 05 00 00       	call   9c02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__str._M_allocated_capacity);
    96f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96fd:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9701:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9705:	48 89 d6             	mov    %rdx,%rsi
    9708:	48 89 c7             	mov    %rax,%rdi
    970b:	e8 0c 05 00 00       	call   9c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	_M_length(__str.length());
    9710:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9714:	48 89 c7             	mov    %rax,%rdi
    9717:	e8 4c 00 00 00       	call   9768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    971c:	48 89 c2             	mov    %rax,%rdx
    971f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9723:	48 89 d6             	mov    %rdx,%rsi
    9726:	48 89 c7             	mov    %rax,%rdi
    9729:	e8 0a 05 00 00       	call   9c38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	__str._M_data(__str._M_local_data());
    972e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9732:	48 89 c7             	mov    %rax,%rdi
    9735:	e8 c0 cf ff ff       	call   66fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    973a:	48 89 c2             	mov    %rax,%rdx
    973d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9741:	48 89 d6             	mov    %rdx,%rsi
    9744:	48 89 c7             	mov    %rax,%rdi
    9747:	e8 b6 04 00 00       	call   9c02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	__str._M_set_length(0);
    974c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9750:	be 00 00 00 00       	mov    $0x0,%esi
    9755:	48 89 c7             	mov    %rax,%rdi
    9758:	e8 07 01 00 00       	call   9864 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    975d:	90                   	nop
    975e:	48 83 c4 10          	add    $0x10,%rsp
    9762:	5b                   	pop    %rbx
    9763:	41 5c                	pop    %r12
    9765:	5d                   	pop    %rbp
    9766:	c3                   	ret
    9767:	90                   	nop

0000000000009768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
      length() const _GLIBCXX_NOEXCEPT
    9768:	55                   	push   %rbp
    9769:	48 89 e5             	mov    %rsp,%rbp
    976c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    9770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9774:	48 8b 40 08          	mov    0x8(%rax),%rax
    9778:	5d                   	pop    %rbp
    9779:	c3                   	ret

000000000000977a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    977a:	55                   	push   %rbp
    977b:	48 89 e5             	mov    %rsp,%rbp
    977e:	48 83 ec 20          	sub    $0x20,%rsp
    9782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9786:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    978a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
    { return std::move(__rhs.insert(0, __lhs)); }
    978e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9792:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9796:	be 00 00 00 00       	mov    $0x0,%esi
    979b:	48 89 c7             	mov    %rax,%rdi
    979e:	e8 b7 06 00 00       	call   9e5a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>
    97a3:	48 89 c7             	mov    %rax,%rdi
    97a6:	e8 a0 06 00 00       	call   9e4b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    97ab:	48 89 c2             	mov    %rax,%rdx
    97ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b2:	48 89 d6             	mov    %rdx,%rsi
    97b5:	48 89 c7             	mov    %rax,%rdi
    97b8:	e8 99 fe ff ff       	call   9656 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    97bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c1:	c9                   	leave
    97c2:	c3                   	ret
    97c3:	90                   	nop

00000000000097c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    97c4:	55                   	push   %rbp
    97c5:	48 89 e5             	mov    %rsp,%rbp
    97c8:	53                   	push   %rbx
    97c9:	48 83 ec 38          	sub    $0x38,%rsp
    97cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    97d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    97d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    97d9:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    97dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97e1:	48 89 c7             	mov    %rax,%rdi
    97e4:	e8 11 cf ff ff       	call   66fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    97e9:	48 89 c1             	mov    %rax,%rcx
    97ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97f0:	48 89 c2             	mov    %rax,%rdx
    97f3:	48 89 ce             	mov    %rcx,%rsi
    97f6:	48 89 df             	mov    %rbx,%rdi
    97f9:	e8 52 03 00 00       	call   9b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	if (__s == 0)
    97fe:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    9803:	75 0f                	jne    9814 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    9805:	48 8d 05 cc 53 00 00 	lea    0x53cc(%rip),%rax        # ebd8 <_ZNSt8__detailL19__atomic_spin_countE+0x174>
    980c:	48 89 c7             	mov    %rax,%rdi
    980f:	e8 ec b8 ff ff       	call   5100 <_ZSt19__throw_logic_errorPKc@plt>
	const _CharT* __end = __s + traits_type::length(__s);
    9814:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9818:	48 89 c7             	mov    %rax,%rdi
    981b:	e8 32 c9 ff ff       	call   6152 <_ZNSt11char_traitsIcE6lengthEPKc>
    9820:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9824:	48 01 d0             	add    %rdx,%rax
    9827:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    982b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    982f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9833:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9837:	48 89 ce             	mov    %rcx,%rsi
    983a:	48 89 c7             	mov    %rax,%rdi
    983d:	e8 56 04 00 00       	call   9c98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    9842:	eb 1a                	jmp    985e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    9844:	48 89 c3             	mov    %rax,%rbx
    9847:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    984b:	48 89 c7             	mov    %rax,%rdi
    984e:	e8 cb cd ff ff       	call   661e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    9853:	48 89 d8             	mov    %rbx,%rax
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 a2 ba ff ff       	call   5300 <_Unwind_Resume@plt>
    985e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9862:	c9                   	leave
    9863:	c3                   	ret

0000000000009864 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>:
      _M_set_length(size_type __n)
    9864:	55                   	push   %rbp
    9865:	48 89 e5             	mov    %rsp,%rbp
    9868:	48 83 ec 20          	sub    $0x20,%rsp
    986c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9870:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_length(__n);
    9874:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    987c:	48 89 d6             	mov    %rdx,%rsi
    987f:	48 89 c7             	mov    %rax,%rdi
    9882:	e8 b1 03 00 00       	call   9c38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	traits_type::assign(_M_data()[__n], _CharT());
    9887:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    988b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    988f:	48 89 c7             	mov    %rax,%rdi
    9892:	e8 a7 02 00 00       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9897:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    989b:	48 01 c2             	add    %rax,%rdx
    989e:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    98a2:	48 89 c6             	mov    %rax,%rsi
    98a5:	48 89 d7             	mov    %rdx,%rdi
    98a8:	e8 67 c8 ff ff       	call   6114 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    98ad:	90                   	nop
    98ae:	c9                   	leave
    98af:	c3                   	ret

00000000000098b0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    { return std::move(__rhs.insert(0, 1, __lhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    98b0:	55                   	push   %rbp
    98b1:	48 89 e5             	mov    %rsp,%rbp
    98b4:	48 83 ec 20          	sub    $0x20,%rsp
    98b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    98c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      const _CharT* __rhs)
    { return std::move(__lhs.append(__rhs)); }
    98c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    98c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    98cc:	48 89 d6             	mov    %rdx,%rsi
    98cf:	48 89 c7             	mov    %rax,%rdi
    98d2:	e8 f1 04 00 00       	call   9dc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    98d7:	48 89 c7             	mov    %rax,%rdi
    98da:	e8 6c 05 00 00       	call   9e4b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    98df:	48 89 c2             	mov    %rax,%rdx
    98e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e6:	48 89 d6             	mov    %rdx,%rsi
    98e9:	48 89 c7             	mov    %rax,%rdi
    98ec:	e8 65 fd ff ff       	call   9656 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    98f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f5:	c9                   	leave
    98f6:	c3                   	ret
    98f7:	90                   	nop

00000000000098f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    98f8:	55                   	push   %rbp
    98f9:	48 89 e5             	mov    %rsp,%rbp
    98fc:	48 83 ec 10          	sub    $0x10,%rsp
    9900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->size() == 0; }
    9904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9908:	48 89 c7             	mov    %rax,%rdi
    990b:	e8 34 c9 ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9910:	48 85 c0             	test   %rax,%rax
    9913:	0f 94 c0             	sete   %al
    9916:	c9                   	leave
    9917:	c3                   	ret

0000000000009918 <_ZNK2vk13DynamicLoader14getProcAddressIPFPFvvEP12VkInstance_TPKcEEET_S7_>:

    template <typename T>
    T getProcAddress( const char * function ) const VULKAN_HPP_NOEXCEPT
    9918:	55                   	push   %rbp
    9919:	48 89 e5             	mov    %rsp,%rbp
    991c:	48 83 ec 10          	sub    $0x10,%rsp
    9920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9924:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
      return (T)dlsym( m_library, function );
    9928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    992c:	48 8b 00             	mov    (%rax),%rax
    992f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9933:	48 89 d6             	mov    %rdx,%rsi
    9936:	48 89 c7             	mov    %rax,%rdi
    9939:	e8 52 b8 ff ff       	call   5190 <dlsym@plt>
#  elif defined( _WIN32 )
      return ( T )::GetProcAddress( m_library, function );
#  else
#    error unsupported platform
#  endif
    }
    993e:	c9                   	leave
    993f:	c3                   	ret

0000000000009940 <_ZNSt15__uniq_ptr_dataIN2vk4raii17ContextDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEPS2_>:
  template <typename _Tp, typename _Dp,
	    bool = is_move_constructible<_Dp>::value,
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    9940:	55                   	push   %rbp
    9941:	48 89 e5             	mov    %rsp,%rbp
    9944:	48 83 ec 10          	sub    $0x10,%rsp
    9948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    994c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9954:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9958:	48 89 d6             	mov    %rdx,%rsi
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	e8 9b 05 00 00       	call   9efe <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1EPS2_>
    9963:	90                   	nop
    9964:	c9                   	leave
    9965:	c3                   	ret

0000000000009966 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1IS4_vEEPS2_>:
       * The deleter will be value-initialized.
       */
      template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>
	_GLIBCXX23_CONSTEXPR
	explicit
	unique_ptr(pointer __p) noexcept
    9966:	55                   	push   %rbp
    9967:	48 89 e5             	mov    %rsp,%rbp
    996a:	48 83 ec 10          	sub    $0x10,%rsp
    996e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9972:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    9976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    997e:	48 89 d6             	mov    %rdx,%rsi
    9981:	48 89 c7             	mov    %rax,%rdi
    9984:	e8 b7 ff ff ff       	call   9940 <_ZNSt15__uniq_ptr_dataIN2vk4raii17ContextDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEPS2_>
        { }
    9989:	90                   	nop
    998a:	c9                   	leave
    998b:	c3                   	ret

000000000000998c <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev>:

      /// Destructor, invokes the deleter if the stored pointer is not null.
#if __cplusplus > 202002L && __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~unique_ptr() noexcept
    998c:	55                   	push   %rbp
    998d:	48 89 e5             	mov    %rsp,%rbp
    9990:	53                   	push   %rbx
    9991:	48 83 ec 28          	sub    $0x28,%rsp
    9995:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	auto& __ptr = _M_t._M_ptr();
    9999:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    999d:	48 89 c7             	mov    %rax,%rdi
    99a0:	e8 91 05 00 00       	call   9f36 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    99a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    99a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99ad:	48 8b 00             	mov    (%rax),%rax
    99b0:	48 85 c0             	test   %rax,%rax
    99b3:	74 29                	je     99de <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    99b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99b9:	48 89 c7             	mov    %rax,%rdi
    99bc:	e8 8f 05 00 00       	call   9f50 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    99c1:	48 89 c3             	mov    %rax,%rbx
    99c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99c8:	48 89 c7             	mov    %rax,%rdi
    99cb:	e8 9a 05 00 00       	call   9f6a <_ZSt4moveIRPN2vk4raii17ContextDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    99d0:	48 8b 00             	mov    (%rax),%rax
    99d3:	48 89 c6             	mov    %rax,%rsi
    99d6:	48 89 df             	mov    %rbx,%rdi
    99d9:	e8 9a 05 00 00       	call   9f78 <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_>
	__ptr = pointer();
    99de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99e2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    99e9:	90                   	nop
    99ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99ee:	c9                   	leave
    99ef:	c3                   	ret

00000000000099f0 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>:
      ~unique_ptr() noexcept
    99f0:	55                   	push   %rbp
    99f1:	48 89 e5             	mov    %rsp,%rbp
    99f4:	53                   	push   %rbx
    99f5:	48 83 ec 28          	sub    $0x28,%rsp
    99f9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    99fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a01:	48 89 c7             	mov    %rax,%rdi
    9a04:	e8 99 05 00 00       	call   9fa2 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    9a09:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    9a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a11:	48 8b 00             	mov    (%rax),%rax
    9a14:	48 85 c0             	test   %rax,%rax
    9a17:	74 29                	je     9a42 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    9a19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a1d:	48 89 c7             	mov    %rax,%rdi
    9a20:	e8 97 05 00 00       	call   9fbc <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    9a25:	48 89 c3             	mov    %rax,%rbx
    9a28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a2c:	48 89 c7             	mov    %rax,%rdi
    9a2f:	e8 a2 05 00 00       	call   9fd6 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    9a34:	48 8b 00             	mov    (%rax),%rax
    9a37:	48 89 c6             	mov    %rax,%rsi
    9a3a:	48 89 df             	mov    %rbx,%rdi
    9a3d:	e8 a2 05 00 00       	call   9fe4 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>
	__ptr = pointer();
    9a42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a46:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    9a4d:	90                   	nop
    9a4e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a52:	c9                   	leave
    9a53:	c3                   	ret

0000000000009a54 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
       *
       * The deleter will be invoked if a pointer is already owned.
       */
      _GLIBCXX23_CONSTEXPR
      void
      reset(pointer __p = pointer()) noexcept
    9a54:	55                   	push   %rbp
    9a55:	48 89 e5             	mov    %rsp,%rbp
    9a58:	53                   	push   %rbx
    9a59:	48 83 ec 18          	sub    $0x18,%rsp
    9a5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	_M_t.reset(std::move(__p));
    9a65:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9a69:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9a6d:	48 89 c7             	mov    %rax,%rdi
    9a70:	e8 61 05 00 00       	call   9fd6 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    9a75:	48 8b 00             	mov    (%rax),%rax
    9a78:	48 89 c6             	mov    %rax,%rsi
    9a7b:	48 89 df             	mov    %rbx,%rdi
    9a7e:	e8 8b 05 00 00       	call   a00e <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
    9a83:	90                   	nop
    9a84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a88:	c9                   	leave
    9a89:	c3                   	ret

0000000000009a8a <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEaSEDn>:
      operator=(nullptr_t) noexcept
    9a8a:	55                   	push   %rbp
    9a8b:	48 89 e5             	mov    %rsp,%rbp
    9a8e:	48 83 ec 10          	sub    $0x10,%rsp
    9a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset();
    9a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9e:	be 00 00 00 00       	mov    $0x0,%esi
    9aa3:	48 89 c7             	mov    %rax,%rdi
    9aa6:	e8 a9 ff ff ff       	call   9a54 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
	return *this;
    9aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9aaf:	c9                   	leave
    9ab0:	c3                   	ret
    9ab1:	90                   	nop

0000000000009ab2 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
    9ab2:	55                   	push   %rbp
    9ab3:	48 89 e5             	mov    %rsp,%rbp
    9ab6:	48 83 ec 10          	sub    $0x10,%rsp
    9aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    9abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac2:	48 89 c7             	mov    %rax,%rdi
    9ac5:	e8 a8 05 00 00       	call   a072 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    9aca:	c9                   	leave
    9acb:	c3                   	ret

0000000000009acc <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    9acc:	55                   	push   %rbp
    9acd:	48 89 e5             	mov    %rsp,%rbp
    9ad0:	48 83 ec 10          	sub    $0x10,%rsp
    9ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    9ad8:	e8 0f c6 ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    9add:	84 c0                	test   %al,%al
    9adf:	74 18                	je     9af9 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    9ae1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae5:	48 89 c7             	mov    %rax,%rdi
    9ae8:	e8 85 05 00 00       	call   a072 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
    9aed:	48 85 c0             	test   %rax,%rax
    9af0:	75 07                	jne    9af9 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    9af2:	b8 01 00 00 00       	mov    $0x1,%eax
    9af7:	eb 05                	jmp    9afe <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x32>
    9af9:	b8 00 00 00 00       	mov    $0x0,%eax
    9afe:	84 c0                	test   %al,%al
	return *get();
    9b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b04:	48 89 c7             	mov    %rax,%rdi
    9b07:	e8 66 05 00 00       	call   a072 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    9b0c:	c9                   	leave
    9b0d:	c3                   	ret

0000000000009b0e <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9b0e:	55                   	push   %rbp
    9b0f:	48 89 e5             	mov    %rsp,%rbp
    9b12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1a:	5d                   	pop    %rbp
    9b1b:	c3                   	ret

0000000000009b1c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    9b1c:	55                   	push   %rbp
    9b1d:	48 89 e5             	mov    %rsp,%rbp
    9b20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    9b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b2c:	0f b6 10             	movzbl (%rax),%edx
    9b2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b33:	0f b6 00             	movzbl (%rax),%eax
    9b36:	38 c2                	cmp    %al,%dl
    9b38:	0f 94 c0             	sete   %al
    9b3b:	5d                   	pop    %rbp
    9b3c:	c3                   	ret
    9b3d:	90                   	nop

0000000000009b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
      _M_data() const
    9b3e:	55                   	push   %rbp
    9b3f:	48 89 e5             	mov    %rsp,%rbp
    9b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus._M_p; }
    9b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b4a:	48 8b 00             	mov    (%rax),%rax
    9b4d:	5d                   	pop    %rbp
    9b4e:	c3                   	ret
    9b4f:	90                   	nop

0000000000009b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
	_Alloc_hider(pointer __dat, const _Alloc& __a)
    9b50:	55                   	push   %rbp
    9b51:	48 89 e5             	mov    %rsp,%rbp
    9b54:	48 83 ec 20          	sub    $0x20,%rsp
    9b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(__a), _M_p(__dat) { }
    9b64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b6c:	48 89 d6             	mov    %rdx,%rsi
    9b6f:	48 89 c7             	mov    %rax,%rdi
    9b72:	e8 09 b7 ff ff       	call   5280 <_ZNSaIcEC2ERKS_@plt>
    9b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b7b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b7f:	48 89 10             	mov    %rdx,(%rax)
    9b82:	90                   	nop
    9b83:	c9                   	leave
    9b84:	c3                   	ret
    9b85:	90                   	nop

0000000000009b86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
      _M_dispose()
    9b86:	55                   	push   %rbp
    9b87:	48 89 e5             	mov    %rsp,%rbp
    9b8a:	48 83 ec 10          	sub    $0x10,%rsp
    9b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (!_M_is_local())
    9b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b96:	48 89 c7             	mov    %rax,%rdi
    9b99:	e8 30 00 00 00       	call   9bce <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    9b9e:	83 f0 01             	xor    $0x1,%eax
    9ba1:	84 c0                	test   %al,%al
    9ba3:	74 17                	je     9bbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x36>
	  _M_destroy(_M_allocated_capacity);
    9ba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ba9:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bb1:	48 89 d6             	mov    %rdx,%rsi
    9bb4:	48 89 c7             	mov    %rax,%rdi
    9bb7:	e8 98 05 00 00       	call   a154 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
      }
    9bbc:	90                   	nop
    9bbd:	c9                   	leave
    9bbe:	c3                   	ret
    9bbf:	90                   	nop

0000000000009bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator()
    9bc0:	55                   	push   %rbp
    9bc1:	48 89 e5             	mov    %rsp,%rbp
    9bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    9bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bcc:	5d                   	pop    %rbp
    9bcd:	c3                   	ret

0000000000009bce <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
      _M_is_local() const
    9bce:	55                   	push   %rbp
    9bcf:	48 89 e5             	mov    %rsp,%rbp
    9bd2:	53                   	push   %rbx
    9bd3:	48 83 ec 18          	sub    $0x18,%rsp
    9bd7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_data() == _M_local_data(); }
    9bdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bdf:	48 89 c7             	mov    %rax,%rdi
    9be2:	e8 57 ff ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9be7:	48 89 c3             	mov    %rax,%rbx
    9bea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bee:	48 89 c7             	mov    %rax,%rdi
    9bf1:	e8 ac 05 00 00       	call   a1a2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9bf6:	48 39 c3             	cmp    %rax,%rbx
    9bf9:	0f 94 c0             	sete   %al
    9bfc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c00:	c9                   	leave
    9c01:	c3                   	ret

0000000000009c02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
      _M_data(pointer __p)
    9c02:	55                   	push   %rbp
    9c03:	48 89 e5             	mov    %rsp,%rbp
    9c06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_dataplus._M_p = __p; }
    9c0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c16:	48 89 10             	mov    %rdx,(%rax)
    9c19:	90                   	nop
    9c1a:	5d                   	pop    %rbp
    9c1b:	c3                   	ret

0000000000009c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>:
      _M_capacity(size_type __capacity)
    9c1c:	55                   	push   %rbp
    9c1d:	48 89 e5             	mov    %rsp,%rbp
    9c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_allocated_capacity = __capacity; }
    9c28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c30:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9c34:	90                   	nop
    9c35:	5d                   	pop    %rbp
    9c36:	c3                   	ret
    9c37:	90                   	nop

0000000000009c38 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>:
      _M_length(size_type __length)
    9c38:	55                   	push   %rbp
    9c39:	48 89 e5             	mov    %rsp,%rbp
    9c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_string_length = __length; }
    9c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c4c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9c50:	90                   	nop
    9c51:	5d                   	pop    %rbp
    9c52:	c3                   	ret
    9c53:	90                   	nop

0000000000009c54 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    9c54:	55                   	push   %rbp
    9c55:	48 89 e5             	mov    %rsp,%rbp
    9c58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c68:	48 89 10             	mov    %rdx,(%rax)
    9c6b:	90                   	nop
    9c6c:	5d                   	pop    %rbp
    9c6d:	c3                   	ret

0000000000009c6e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    9c6e:	55                   	push   %rbp
    9c6f:	48 89 e5             	mov    %rsp,%rbp
    9c72:	48 83 ec 10          	sub    $0x10,%rsp
    9c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c7e:	48 8b 00             	mov    (%rax),%rax
    9c81:	48 85 c0             	test   %rax,%rax
    9c84:	74 0f                	je     9c95 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    9c86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c8a:	48 8b 00             	mov    (%rax),%rax
    9c8d:	48 89 c7             	mov    %rax,%rdi
    9c90:	e8 f1 fe ff ff       	call   9b86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    9c95:	90                   	nop
    9c96:	c9                   	leave
    9c97:	c3                   	ret

0000000000009c98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    9c98:	55                   	push   %rbp
    9c99:	48 89 e5             	mov    %rsp,%rbp
    9c9c:	48 83 ec 60          	sub    $0x60,%rsp
    9ca0:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    9ca4:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    9ca8:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    9cac:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9cb0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9cb4:	48 89 d6             	mov    %rdx,%rsi
    9cb7:	48 89 c7             	mov    %rax,%rdi
    9cba:	e8 01 05 00 00       	call   a1c0 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    9cbf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    9cc3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9cc7:	48 83 f8 0f          	cmp    $0xf,%rax
    9ccb:	76 3f                	jbe    9d0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    9ccd:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    9cd1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9cd5:	ba 00 00 00 00       	mov    $0x0,%edx
    9cda:	48 89 ce             	mov    %rcx,%rsi
    9cdd:	48 89 c7             	mov    %rax,%rdi
    9ce0:	e8 a7 03 00 00       	call   a08c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9ce5:	48 89 c2             	mov    %rax,%rdx
    9ce8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9cec:	48 89 d6             	mov    %rdx,%rsi
    9cef:	48 89 c7             	mov    %rax,%rdi
    9cf2:	e8 0b ff ff ff       	call   9c02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
    9cf7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9cfb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9cff:	48 89 d6             	mov    %rdx,%rsi
    9d02:	48 89 c7             	mov    %rax,%rdi
    9d05:	e8 12 ff ff ff       	call   9c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    9d0a:	eb 5e                	jmp    9d6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xd2>
    9d0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9d10:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (std::is_constant_evaluated())
    9d14:	e8 f0 c3 ff ff       	call   6109 <_ZSt21is_constant_evaluatedv>
    9d19:	84 c0                	test   %al,%al
    9d1b:	74 40                	je     9d5d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc5>
	  for (_CharT& __c : _M_local_buf)
    9d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d21:	48 83 c0 10          	add    $0x10,%rax
    9d25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9d29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d2d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9d31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d35:	48 83 c0 10          	add    $0x10,%rax
    9d39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9d3d:	eb 14                	jmp    9d53 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbb>
    9d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d43:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	    __c = _CharT();
    9d47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d4b:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    9d4e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    9d53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9d57:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9d5b:	75 e2                	jne    9d3f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa7>
	return _M_local_data();
    9d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d61:	48 89 c7             	mov    %rax,%rdi
    9d64:	e8 91 c9 ff ff       	call   66fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9d69:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    9d6a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9d6e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    9d72:	48 89 d6             	mov    %rdx,%rsi
    9d75:	48 89 c7             	mov    %rax,%rdi
    9d78:	e8 d7 fe ff ff       	call   9c54 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    9d7d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9d81:	48 89 c7             	mov    %rax,%rdi
    9d84:	e8 b5 fd ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9d89:	48 89 c1             	mov    %rax,%rcx
    9d8c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9d90:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9d94:	48 89 c6             	mov    %rax,%rsi
    9d97:	48 89 cf             	mov    %rcx,%rdi
    9d9a:	e8 52 04 00 00       	call   a1f1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>

	__guard._M_guarded = 0;
    9d9f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    9da6:	00 

	_M_set_length(__dnew);
    9da7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9dab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9daf:	48 89 d6             	mov    %rdx,%rsi
    9db2:	48 89 c7             	mov    %rax,%rdi
    9db5:	e8 aa fa ff ff       	call   9864 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    9dba:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    9dbe:	48 89 c7             	mov    %rax,%rdi
    9dc1:	e8 a8 fe ff ff       	call   9c6e <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    9dc6:	c9                   	leave
    9dc7:	c3                   	ret

0000000000009dc8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
      append(const _CharT* __s)
    9dc8:	55                   	push   %rbp
    9dc9:	48 89 e5             	mov    %rsp,%rbp
    9dcc:	48 83 ec 20          	sub    $0x20,%rsp
    9dd0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9dd4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const size_type __n = traits_type::length(__s);
    9dd8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9ddc:	48 89 c7             	mov    %rax,%rdi
    9ddf:	e8 6e c3 ff ff       	call   6152 <_ZNSt11char_traitsIcE6lengthEPKc>
    9de4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_check_length(size_type(0), __n, "basic_string::append");
    9de8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9dec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9df0:	48 8d 0d 13 4e 00 00 	lea    0x4e13(%rip),%rcx        # ec0a <_ZNSt8__detailL19__atomic_spin_countE+0x1a6>
    9df7:	be 00 00 00 00       	mov    $0x0,%esi
    9dfc:	48 89 c7             	mov    %rax,%rdi
    9dff:	e8 30 04 00 00       	call   a234 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
	return _M_append(__s, __n);
    9e04:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e08:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e10:	48 89 ce             	mov    %rcx,%rsi
    9e13:	48 89 c7             	mov    %rax,%rdi
    9e16:	e8 77 04 00 00       	call   a292 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
      }
    9e1b:	c9                   	leave
    9e1c:	c3                   	ret
    9e1d:	90                   	nop

0000000000009e1e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
    9e1e:	55                   	push   %rbp
    9e1f:	48 89 e5             	mov    %rsp,%rbp
    9e22:	48 83 ec 10          	sub    $0x10,%rsp
    9e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _M_is_local() ? size_type(_S_local_capacity)
    9e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e2e:	48 89 c7             	mov    %rax,%rdi
    9e31:	e8 98 fd ff ff       	call   9bce <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    9e36:	84 c0                	test   %al,%al
    9e38:	74 07                	je     9e41 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x23>
    9e3a:	b8 0f 00 00 00       	mov    $0xf,%eax
	                     : _M_allocated_capacity;
    9e3f:	eb 08                	jmp    9e49 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x2b>
	return _M_is_local() ? size_type(_S_local_capacity)
    9e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e45:	48 8b 40 10          	mov    0x10(%rax),%rax
      }
    9e49:	c9                   	leave
    9e4a:	c3                   	ret

0000000000009e4b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    9e4b:	55                   	push   %rbp
    9e4c:	48 89 e5             	mov    %rsp,%rbp
    9e4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    9e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e57:	5d                   	pop    %rbp
    9e58:	c3                   	ret
    9e59:	90                   	nop

0000000000009e5a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>:
      insert(size_type __pos, const _CharT* __s)
    9e5a:	55                   	push   %rbp
    9e5b:	48 89 e5             	mov    %rsp,%rbp
    9e5e:	48 83 ec 20          	sub    $0x20,%rsp
    9e62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	return this->replace(__pos, size_type(0), __s,
    9e6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e72:	48 89 c7             	mov    %rax,%rdi
    9e75:	e8 d8 c2 ff ff       	call   6152 <_ZNSt11char_traitsIcE6lengthEPKc>
    9e7a:	48 89 c1             	mov    %rax,%rcx
    9e7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e81:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    9e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e89:	49 89 c8             	mov    %rcx,%r8
    9e8c:	48 89 d1             	mov    %rdx,%rcx
    9e8f:	ba 00 00 00 00       	mov    $0x0,%edx
    9e94:	48 89 c7             	mov    %rax,%rdi
    9e97:	e8 c0 04 00 00       	call   a35c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
      }
    9e9c:	c9                   	leave
    9e9d:	c3                   	ret

0000000000009e9e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>:
      _M_check(size_type __pos, const char* __s) const
    9e9e:	55                   	push   %rbp
    9e9f:	48 89 e5             	mov    %rsp,%rbp
    9ea2:	48 83 ec 20          	sub    $0x20,%rsp
    9ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9eae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__pos > this->size())
    9eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eb6:	48 89 c7             	mov    %rax,%rdi
    9eb9:	e8 86 c3 ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9ebe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9ec2:	0f 92 c0             	setb   %al
    9ec5:	84 c0                	test   %al,%al
    9ec7:	74 2e                	je     9ef7 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc+0x59>
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
    9ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ecd:	48 89 c7             	mov    %rax,%rdi
    9ed0:	e8 6f c3 ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9ed5:	48 89 c1             	mov    %rax,%rcx
    9ed8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9edc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ee0:	48 89 c6             	mov    %rax,%rsi
    9ee3:	48 8d 05 36 4d 00 00 	lea    0x4d36(%rip),%rax        # ec20 <_ZNSt8__detailL19__atomic_spin_countE+0x1bc>
    9eea:	48 89 c7             	mov    %rax,%rdi
    9eed:	b8 00 00 00 00       	mov    $0x0,%eax
    9ef2:	e8 99 b3 ff ff       	call   5290 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	return __pos;
    9ef7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
    9efb:	c9                   	leave
    9efc:	c3                   	ret
    9efd:	90                   	nop

0000000000009efe <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1EPS2_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    9efe:	55                   	push   %rbp
    9eff:	48 89 e5             	mov    %rsp,%rbp
    9f02:	53                   	push   %rbx
    9f03:	48 83 ec 18          	sub    $0x18,%rsp
    9f07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f0b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f13:	48 89 c7             	mov    %rax,%rdi
    9f16:	e8 05 05 00 00       	call   a420 <_ZNSt5tupleIJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
    9f1b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    9f1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f23:	48 89 c7             	mov    %rax,%rdi
    9f26:	e8 0b 00 00 00       	call   9f36 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    9f2b:	48 89 18             	mov    %rbx,(%rax)
    9f2e:	90                   	nop
    9f2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f33:	c9                   	leave
    9f34:	c3                   	ret
    9f35:	90                   	nop

0000000000009f36 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    9f36:	55                   	push   %rbp
    9f37:	48 89 e5             	mov    %rsp,%rbp
    9f3a:	48 83 ec 10          	sub    $0x10,%rsp
    9f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f46:	48 89 c7             	mov    %rax,%rdi
    9f49:	e8 ed 04 00 00       	call   a43b <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    9f4e:	c9                   	leave
    9f4f:	c3                   	ret

0000000000009f50 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    9f50:	55                   	push   %rbp
    9f51:	48 89 e5             	mov    %rsp,%rbp
    9f54:	48 83 ec 10          	sub    $0x10,%rsp
    9f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    9f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f60:	48 89 c7             	mov    %rax,%rdi
    9f63:	e8 ee 04 00 00       	call   a456 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    9f68:	c9                   	leave
    9f69:	c3                   	ret

0000000000009f6a <_ZSt4moveIRPN2vk4raii17ContextDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    9f6a:	55                   	push   %rbp
    9f6b:	48 89 e5             	mov    %rsp,%rbp
    9f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    9f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f76:	5d                   	pop    %rbp
    9f77:	c3                   	ret

0000000000009f78 <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    9f78:	55                   	push   %rbp
    9f79:	48 89 e5             	mov    %rsp,%rbp
    9f7c:	48 83 ec 10          	sub    $0x10,%rsp
    9f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    9f88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f8c:	48 85 c0             	test   %rax,%rax
    9f8f:	74 0d                	je     9f9e <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_+0x26>
    9f91:	be 38 00 00 00       	mov    $0x38,%esi
    9f96:	48 89 c7             	mov    %rax,%rdi
    9f99:	e8 42 b2 ff ff       	call   51e0 <_ZdlPvm@plt>
      }
    9f9e:	90                   	nop
    9f9f:	c9                   	leave
    9fa0:	c3                   	ret
    9fa1:	90                   	nop

0000000000009fa2 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    9fa2:	55                   	push   %rbp
    9fa3:	48 89 e5             	mov    %rsp,%rbp
    9fa6:	48 83 ec 10          	sub    $0x10,%rsp
    9faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb2:	48 89 c7             	mov    %rax,%rdi
    9fb5:	e8 b6 04 00 00       	call   a470 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    9fba:	c9                   	leave
    9fbb:	c3                   	ret

0000000000009fbc <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    9fbc:	55                   	push   %rbp
    9fbd:	48 89 e5             	mov    %rsp,%rbp
    9fc0:	48 83 ec 10          	sub    $0x10,%rsp
    9fc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    9fc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fcc:	48 89 c7             	mov    %rax,%rdi
    9fcf:	e8 b6 04 00 00       	call   a48a <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    9fd4:	c9                   	leave
    9fd5:	c3                   	ret

0000000000009fd6 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    9fd6:	55                   	push   %rbp
    9fd7:	48 89 e5             	mov    %rsp,%rbp
    9fda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    9fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fe2:	5d                   	pop    %rbp
    9fe3:	c3                   	ret

0000000000009fe4 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    9fe4:	55                   	push   %rbp
    9fe5:	48 89 e5             	mov    %rsp,%rbp
    9fe8:	48 83 ec 10          	sub    $0x10,%rsp
    9fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    9ff4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ff8:	48 85 c0             	test   %rax,%rax
    9ffb:	74 0d                	je     a00a <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_+0x26>
    9ffd:	be 48 03 00 00       	mov    $0x348,%esi
    a002:	48 89 c7             	mov    %rax,%rdi
    a005:	e8 d6 b1 ff ff       	call   51e0 <_ZdlPvm@plt>
      }
    a00a:	90                   	nop
    a00b:	c9                   	leave
    a00c:	c3                   	ret
    a00d:	90                   	nop

000000000000a00e <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
      void reset(pointer __p) noexcept
    a00e:	55                   	push   %rbp
    a00f:	48 89 e5             	mov    %rsp,%rbp
    a012:	53                   	push   %rbx
    a013:	48 83 ec 28          	sub    $0x28,%rsp
    a017:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a01b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    a01f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a023:	48 89 c7             	mov    %rax,%rdi
    a026:	e8 77 ff ff ff       	call   9fa2 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a02b:	48 8b 00             	mov    (%rax),%rax
    a02e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    a032:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    a036:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a03a:	48 89 c7             	mov    %rax,%rdi
    a03d:	e8 60 ff ff ff       	call   9fa2 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a042:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    a045:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    a04a:	74 1e                	je     a06a <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_+0x5c>
	  _M_deleter()(__old_p);
    a04c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a050:	48 89 c7             	mov    %rax,%rdi
    a053:	e8 32 04 00 00       	call   a48a <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    a058:	48 89 c2             	mov    %rax,%rdx
    a05b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a05f:	48 89 c6             	mov    %rax,%rsi
    a062:	48 89 d7             	mov    %rdx,%rdi
    a065:	e8 7a ff ff ff       	call   9fe4 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>
      }
    a06a:	90                   	nop
    a06b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a06f:	c9                   	leave
    a070:	c3                   	ret
    a071:	90                   	nop

000000000000a072 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
    a072:	55                   	push   %rbp
    a073:	48 89 e5             	mov    %rsp,%rbp
    a076:	48 83 ec 10          	sub    $0x10,%rsp
    a07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    a07e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a082:	48 89 c7             	mov    %rax,%rdi
    a085:	e8 1a 04 00 00       	call   a4a4 <_ZNKSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a08a:	c9                   	leave
    a08b:	c3                   	ret

000000000000a08c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>:
    basic_string<_CharT, _Traits, _Alloc>::
    a08c:	55                   	push   %rbp
    a08d:	48 89 e5             	mov    %rsp,%rbp
    a090:	53                   	push   %rbx
    a091:	48 83 ec 28          	sub    $0x28,%rsp
    a095:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a099:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a09d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__capacity > max_size())
    a0a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a0a5:	48 8b 18             	mov    (%rax),%rbx
    a0a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0ac:	48 89 c7             	mov    %rax,%rdi
    a0af:	e8 0e 04 00 00       	call   a4c2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a0b4:	48 39 d8             	cmp    %rbx,%rax
    a0b7:	0f 92 c0             	setb   %al
    a0ba:	84 c0                	test   %al,%al
    a0bc:	74 0f                	je     a0cd <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0x41>
	std::__throw_length_error(__N("basic_string::_M_create"));
    a0be:	48 8d 05 92 4b 00 00 	lea    0x4b92(%rip),%rax        # ec57 <_ZNSt8__detailL19__atomic_spin_countE+0x1f3>
    a0c5:	48 89 c7             	mov    %rax,%rdi
    a0c8:	e8 f3 af ff ff       	call   50c0 <_ZSt20__throw_length_errorPKc@plt>
      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
    a0cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a0d1:	48 8b 00             	mov    (%rax),%rax
    a0d4:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    a0d8:	73 52                	jae    a12c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
    a0da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a0de:	48 8b 10             	mov    (%rax),%rdx
    a0e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a0e5:	48 01 c0             	add    %rax,%rax
    a0e8:	48 39 c2             	cmp    %rax,%rdx
    a0eb:	73 3f                	jae    a12c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	  __capacity = 2 * __old_capacity;
    a0ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a0f1:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    a0f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a0f9:	48 89 10             	mov    %rdx,(%rax)
	  if (__capacity > max_size())
    a0fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a100:	48 8b 18             	mov    (%rax),%rbx
    a103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a107:	48 89 c7             	mov    %rax,%rdi
    a10a:	e8 b3 03 00 00       	call   a4c2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a10f:	48 39 d8             	cmp    %rbx,%rax
    a112:	0f 92 c0             	setb   %al
    a115:	84 c0                	test   %al,%al
    a117:	74 13                	je     a12c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	    __capacity = max_size();
    a119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a11d:	48 89 c7             	mov    %rax,%rdi
    a120:	e8 9d 03 00 00       	call   a4c2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a125:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a129:	48 89 02             	mov    %rax,(%rdx)
      return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
    a12c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a130:	48 8b 00             	mov    (%rax),%rax
    a133:	48 8d 58 01          	lea    0x1(%rax),%rbx
    a137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a13b:	48 89 c7             	mov    %rax,%rdi
    a13e:	e8 7d fa ff ff       	call   9bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a143:	48 89 de             	mov    %rbx,%rsi
    a146:	48 89 c7             	mov    %rax,%rdi
    a149:	e8 9d 03 00 00       	call   a4eb <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    }
    a14e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a152:	c9                   	leave
    a153:	c3                   	ret

000000000000a154 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>:
      _M_destroy(size_type __size) throw()
    a154:	55                   	push   %rbp
    a155:	48 89 e5             	mov    %rsp,%rbp
    a158:	41 54                	push   %r12
    a15a:	53                   	push   %rbx
    a15b:	48 83 ec 10          	sub    $0x10,%rsp
    a15f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a163:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    a167:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a16b:	48 8d 58 01          	lea    0x1(%rax),%rbx
    a16f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a173:	48 89 c7             	mov    %rax,%rdi
    a176:	e8 c3 f9 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a17b:	49 89 c4             	mov    %rax,%r12
    a17e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a182:	48 89 c7             	mov    %rax,%rdi
    a185:	e8 36 fa ff ff       	call   9bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a18a:	48 89 da             	mov    %rbx,%rdx
    a18d:	4c 89 e6             	mov    %r12,%rsi
    a190:	48 89 c7             	mov    %rax,%rdi
    a193:	e8 c1 03 00 00       	call   a559 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
    a198:	90                   	nop
    a199:	48 83 c4 10          	add    $0x10,%rsp
    a19d:	5b                   	pop    %rbx
    a19e:	41 5c                	pop    %r12
    a1a0:	5d                   	pop    %rbp
    a1a1:	c3                   	ret

000000000000a1a2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data() const
    a1a2:	55                   	push   %rbp
    a1a3:	48 89 e5             	mov    %rsp,%rbp
    a1a6:	48 83 ec 10          	sub    $0x10,%rsp
    a1aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    a1ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b2:	48 83 c0 10          	add    $0x10,%rax
    a1b6:	48 89 c7             	mov    %rax,%rdi
    a1b9:	e8 f9 03 00 00       	call   a5b7 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>
      }
    a1be:	c9                   	leave
    a1bf:	c3                   	ret

000000000000a1c0 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    a1c0:	55                   	push   %rbp
    a1c1:	48 89 e5             	mov    %rsp,%rbp
    a1c4:	48 83 ec 10          	sub    $0x10,%rsp
    a1c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    a1d0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a1d4:	48 89 c7             	mov    %rax,%rdi
    a1d7:	e8 f5 03 00 00       	call   a5d1 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    a1dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1e4:	48 89 d6             	mov    %rdx,%rsi
    a1e7:	48 89 c7             	mov    %rax,%rdi
    a1ea:	e8 ed 03 00 00       	call   a5dc <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    a1ef:	c9                   	leave
    a1f0:	c3                   	ret

000000000000a1f1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
    a1f1:	55                   	push   %rbp
    a1f2:	48 89 e5             	mov    %rsp,%rbp
    a1f5:	48 83 ec 20          	sub    $0x20,%rsp
    a1f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a201:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { _S_copy(__p, __k1, __k2 - __k1); }
    a205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a209:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    a20d:	48 89 c2             	mov    %rax,%rdx
    a210:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a218:	48 89 ce             	mov    %rcx,%rsi
    a21b:	48 89 c7             	mov    %rax,%rdi
    a21e:	e8 cf 03 00 00       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a223:	90                   	nop
    a224:	c9                   	leave
    a225:	c3                   	ret

000000000000a226 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator() const
    a226:	55                   	push   %rbp
    a227:	48 89 e5             	mov    %rsp,%rbp
    a22a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    a22e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a232:	5d                   	pop    %rbp
    a233:	c3                   	ret

000000000000a234 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>:
      _M_check_length(size_type __n1, size_type __n2, const char* __s) const
    a234:	55                   	push   %rbp
    a235:	48 89 e5             	mov    %rsp,%rbp
    a238:	53                   	push   %rbx
    a239:	48 83 ec 28          	sub    $0x28,%rsp
    a23d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a241:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a245:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a249:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	if (this->max_size() - (this->size() - __n1) < __n2)
    a24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a251:	48 89 c7             	mov    %rax,%rdi
    a254:	e8 69 02 00 00       	call   a4c2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    a259:	48 89 c3             	mov    %rax,%rbx
    a25c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a260:	48 89 c7             	mov    %rax,%rdi
    a263:	e8 dc bf ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a268:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a26c:	48 29 c2             	sub    %rax,%rdx
    a26f:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
    a273:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a277:	0f 92 c0             	setb   %al
    a27a:	84 c0                	test   %al,%al
    a27c:	74 0c                	je     a28a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc+0x56>
	  __throw_length_error(__N(__s));
    a27e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a282:	48 89 c7             	mov    %rax,%rdi
    a285:	e8 36 ae ff ff       	call   50c0 <_ZSt20__throw_length_errorPKc@plt>
      }
    a28a:	90                   	nop
    a28b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a28f:	c9                   	leave
    a290:	c3                   	ret
    a291:	90                   	nop

000000000000a292 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    a292:	55                   	push   %rbp
    a293:	48 89 e5             	mov    %rsp,%rbp
    a296:	53                   	push   %rbx
    a297:	48 83 ec 38          	sub    $0x38,%rsp
    a29b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a29f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a2a3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    _M_append(const _CharT* __s, size_type __n)
    {
      const size_type __len = __n + this->size();
    a2a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2ab:	48 89 c7             	mov    %rax,%rdi
    a2ae:	e8 91 bf ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a2b3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a2b7:	48 01 d0             	add    %rdx,%rax
    a2ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      if (__len <= this->capacity())
    a2be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2c2:	48 89 c7             	mov    %rax,%rdi
    a2c5:	e8 54 fb ff ff       	call   9e1e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    a2ca:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    a2ce:	0f 93 c0             	setae  %al
    a2d1:	84 c0                	test   %al,%al
    a2d3:	74 3b                	je     a310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x7e>
	{
	  if (__n)
    a2d5:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    a2da:	74 62                	je     a33e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
    a2dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2e0:	48 89 c7             	mov    %rax,%rdi
    a2e3:	e8 56 f8 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a2e8:	48 89 c3             	mov    %rax,%rbx
    a2eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2ef:	48 89 c7             	mov    %rax,%rdi
    a2f2:	e8 4d bf ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a2f7:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    a2fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a2ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a303:	48 89 c6             	mov    %rax,%rsi
    a306:	48 89 cf             	mov    %rcx,%rdi
    a309:	e8 e4 02 00 00       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a30e:	eb 2e                	jmp    a33e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	}
      else
	this->_M_mutate(this->size(), size_type(0), __s, __n);
    a310:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a314:	48 89 c7             	mov    %rax,%rdi
    a317:	e8 28 bf ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a31c:	48 89 c6             	mov    %rax,%rsi
    a31f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    a323:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a327:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a32b:	49 89 c8             	mov    %rcx,%r8
    a32e:	48 89 d1             	mov    %rdx,%rcx
    a331:	ba 00 00 00 00       	mov    $0x0,%edx
    a336:	48 89 c7             	mov    %rax,%rdi
    a339:	e8 fe 02 00 00       	call   a63c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__len);
    a33e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a342:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a346:	48 89 d6             	mov    %rdx,%rsi
    a349:	48 89 c7             	mov    %rax,%rdi
    a34c:	e8 13 f5 ff ff       	call   9864 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    a351:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    }
    a355:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a359:	c9                   	leave
    a35a:	c3                   	ret
    a35b:	90                   	nop

000000000000a35c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>:
      replace(size_type __pos, size_type __n1, const _CharT* __s,
    a35c:	55                   	push   %rbp
    a35d:	48 89 e5             	mov    %rsp,%rbp
    a360:	53                   	push   %rbx
    a361:	48 83 ec 38          	sub    $0x38,%rsp
    a365:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a369:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a36d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a371:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a375:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
    a379:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a37d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a385:	48 89 ce             	mov    %rcx,%rsi
    a388:	48 89 c7             	mov    %rax,%rdi
    a38b:	e8 44 00 00 00       	call   a3d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    a390:	48 89 c3             	mov    %rax,%rbx
    a393:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a397:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a39b:	48 8d 15 cd 48 00 00 	lea    0x48cd(%rip),%rdx        # ec6f <_ZNSt8__detailL19__atomic_spin_countE+0x20b>
    a3a2:	48 89 ce             	mov    %rcx,%rsi
    a3a5:	48 89 c7             	mov    %rax,%rdi
    a3a8:	e8 f1 fa ff ff       	call   9e9e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    a3ad:	48 89 c6             	mov    %rax,%rsi
    a3b0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    a3b4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a3b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3bc:	49 89 c8             	mov    %rcx,%r8
    a3bf:	48 89 d1             	mov    %rdx,%rcx
    a3c2:	48 89 da             	mov    %rbx,%rdx
    a3c5:	48 89 c7             	mov    %rax,%rdi
    a3c8:	e8 b3 03 00 00       	call   a780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
      }
    a3cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a3d1:	c9                   	leave
    a3d2:	c3                   	ret
    a3d3:	90                   	nop

000000000000a3d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>:
      _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
    a3d4:	55                   	push   %rbp
    a3d5:	48 89 e5             	mov    %rsp,%rbp
    a3d8:	48 83 ec 30          	sub    $0x30,%rsp
    a3dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a3e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a3e4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const bool __testoff =  __off < this->size() - __pos;
    a3e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3ec:	48 89 c7             	mov    %rax,%rdi
    a3ef:	e8 50 be ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a3f4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    a3f8:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    a3fc:	0f 92 c0             	setb   %al
    a3ff:	88 45 ff             	mov    %al,-0x1(%rbp)
	return __testoff ? __off : this->size() - __pos;
    a402:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    a406:	74 06                	je     a40e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x3a>
    a408:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a40c:	eb 10                	jmp    a41e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x4a>
    a40e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a412:	48 89 c7             	mov    %rax,%rdi
    a415:	e8 2a be ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a41a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
      }
    a41e:	c9                   	leave
    a41f:	c3                   	ret

000000000000a420 <_ZNSt5tupleIJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:

    public:
      template<bool _Dummy = true,
	       _ImplicitDefaultCtor<_Dummy, _T1, _T2> = true>
	constexpr
	tuple()
    a420:	55                   	push   %rbp
    a421:	48 89 e5             	mov    %rsp,%rbp
    a424:	48 83 ec 10          	sub    $0x10,%rsp
    a428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	noexcept(__nothrow_default_constructible())
	: _Inherited() { }
    a42c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a430:	48 89 c7             	mov    %rax,%rdi
    a433:	e8 f0 06 00 00       	call   ab28 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1Ev>
    a438:	90                   	nop
    a439:	c9                   	leave
    a43a:	c3                   	ret

000000000000a43b <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    __get_helper(const tuple<_Types...>&) = delete;

  /// Return a reference to the ith element of a tuple.
  template<size_t __i, typename... _Elements>
    constexpr __tuple_element_t<__i, tuple<_Elements...>>&
    get(tuple<_Elements...>& __t) noexcept
    a43b:	55                   	push   %rbp
    a43c:	48 89 e5             	mov    %rsp,%rbp
    a43f:	48 83 ec 10          	sub    $0x10,%rsp
    a443:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a44b:	48 89 c7             	mov    %rax,%rdi
    a44e:	e8 fc 06 00 00       	call   ab4f <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    a453:	c9                   	leave
    a454:	c3                   	ret
    a455:	90                   	nop

000000000000a456 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    a456:	55                   	push   %rbp
    a457:	48 89 e5             	mov    %rsp,%rbp
    a45a:	48 83 ec 10          	sub    $0x10,%rsp
    a45e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a466:	48 89 c7             	mov    %rax,%rdi
    a469:	e8 fb 06 00 00       	call   ab69 <_ZSt3getILm1EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    a46e:	c9                   	leave
    a46f:	c3                   	ret

000000000000a470 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    a470:	55                   	push   %rbp
    a471:	48 89 e5             	mov    %rsp,%rbp
    a474:	48 83 ec 10          	sub    $0x10,%rsp
    a478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a47c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a480:	48 89 c7             	mov    %rax,%rdi
    a483:	e8 fb 06 00 00       	call   ab83 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    a488:	c9                   	leave
    a489:	c3                   	ret

000000000000a48a <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
    a48a:	55                   	push   %rbp
    a48b:	48 89 e5             	mov    %rsp,%rbp
    a48e:	48 83 ec 10          	sub    $0x10,%rsp
    a492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49a:	48 89 c7             	mov    %rax,%rdi
    a49d:	e8 fb 06 00 00       	call   ab9d <_ZSt3getILm1EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    a4a2:	c9                   	leave
    a4a3:	c3                   	ret

000000000000a4a4 <_ZNKSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    a4a4:	55                   	push   %rbp
    a4a5:	48 89 e5             	mov    %rsp,%rbp
    a4a8:	48 83 ec 10          	sub    $0x10,%rsp
    a4ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b4:	48 89 c7             	mov    %rax,%rdi
    a4b7:	e8 fb 06 00 00       	call   abb7 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
    a4bc:	48 8b 00             	mov    (%rax),%rax
    a4bf:	c9                   	leave
    a4c0:	c3                   	ret
    a4c1:	90                   	nop

000000000000a4c2 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    a4c2:	55                   	push   %rbp
    a4c3:	48 89 e5             	mov    %rsp,%rbp
    a4c6:	48 83 ec 10          	sub    $0x10,%rsp
    a4ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
    a4ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d2:	48 89 c7             	mov    %rax,%rdi
    a4d5:	e8 4c fd ff ff       	call   a226 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a4da:	48 89 c7             	mov    %rax,%rdi
    a4dd:	e8 ef 06 00 00       	call   abd1 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    a4e2:	48 83 e8 01          	sub    $0x1,%rax
    a4e6:	48 d1 e8             	shr    %rax
    a4e9:	c9                   	leave
    a4ea:	c3                   	ret

000000000000a4eb <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
       *  @param  __n  The number of objects to allocate space for.
       *
       *  Calls @c a.allocate(n)
      */
      _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
      allocate(allocator_type& __a, size_type __n)
    a4eb:	55                   	push   %rbp
    a4ec:	48 89 e5             	mov    %rsp,%rbp
    a4ef:	48 83 ec 20          	sub    $0x20,%rsp
    a4f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a4f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a4fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a503:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a507:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
#if __cplusplus > 201703L
      [[nodiscard,__gnu__::__always_inline__]]
      constexpr _Tp*
      allocate(size_t __n)
      {
	if (std::__is_constant_evaluated())
    a50b:	e8 dc bb ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    a510:	84 c0                	test   %al,%al
    a512:	74 2a                	je     a53e <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x53>
	  {
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
    a514:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a518:	ba 00 00 00 00       	mov    $0x0,%edx
    a51d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a521:	48 89 d0             	mov    %rdx,%rax
    a524:	83 e0 01             	and    $0x1,%eax
    a527:	84 c0                	test   %al,%al
    a529:	74 05                	je     a530 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x45>
	      std::__throw_bad_array_new_length();
    a52b:	e8 00 ac ff ff       	call   5130 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
    a530:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a534:	48 89 c7             	mov    %rax,%rdi
    a537:	e8 94 ac ff ff       	call   51d0 <_Znwm@plt>
    a53c:	eb 19                	jmp    a557 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x6c>
	  }

	return __allocator_base<_Tp>::allocate(__n, 0);
    a53e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a546:	ba 00 00 00 00       	mov    $0x0,%edx
    a54b:	48 89 ce             	mov    %rcx,%rsi
    a54e:	48 89 c7             	mov    %rax,%rdi
    a551:	e8 24 08 00 00       	call   ad7a <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    a556:	90                   	nop
      { return __a.allocate(__n); }
    a557:	c9                   	leave
    a558:	c3                   	ret

000000000000a559 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a559:	55                   	push   %rbp
    a55a:	48 89 e5             	mov    %rsp,%rbp
    a55d:	48 83 ec 40          	sub    $0x40,%rsp
    a561:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a565:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a569:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a56d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a571:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a575:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a579:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a57d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a581:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      [[__gnu__::__always_inline__]]
      constexpr void
      deallocate(_Tp* __p, size_t __n)
      {
	if (std::__is_constant_evaluated())
    a585:	e8 62 bb ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    a58a:	84 c0                	test   %al,%al
    a58c:	74 0e                	je     a59c <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x43>
	  {
	    ::operator delete(__p);
    a58e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a592:	48 89 c7             	mov    %rax,%rdi
    a595:	e8 06 ac ff ff       	call   51a0 <_ZdlPv@plt>
	    return;
    a59a:	eb 18                	jmp    a5b4 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x5b>
	  }
	__allocator_base<_Tp>::deallocate(__p, __n);
    a59c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a5a0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a5a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a8:	48 89 ce             	mov    %rcx,%rsi
    a5ab:	48 89 c7             	mov    %rax,%rdi
    a5ae:	e8 0f 08 00 00       	call   adc2 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
      { __a.deallocate(__p, __n); }
    a5b3:	90                   	nop
    a5b4:	90                   	nop
    a5b5:	c9                   	leave
    a5b6:	c3                   	ret

000000000000a5b7 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>:
      pointer_to(element_type& __r) noexcept
    a5b7:	55                   	push   %rbp
    a5b8:	48 89 e5             	mov    %rsp,%rbp
    a5bb:	48 83 ec 10          	sub    $0x10,%rsp
    a5bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    a5c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c7:	48 89 c7             	mov    %rax,%rdi
    a5ca:	e8 13 06 00 00       	call   abe2 <_ZSt9addressofIKcEPT_RS1_>
    a5cf:	c9                   	leave
    a5d0:	c3                   	ret

000000000000a5d1 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    a5d1:	55                   	push   %rbp
    a5d2:	48 89 e5             	mov    %rsp,%rbp
    a5d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a5d9:	90                   	nop
    a5da:	5d                   	pop    %rbp
    a5db:	c3                   	ret

000000000000a5dc <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    a5dc:	55                   	push   %rbp
    a5dd:	48 89 e5             	mov    %rsp,%rbp
    a5e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    a5e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a5ec:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    a5f0:	5d                   	pop    %rbp
    a5f1:	c3                   	ret

000000000000a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>:
      _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
    a5f2:	55                   	push   %rbp
    a5f3:	48 89 e5             	mov    %rsp,%rbp
    a5f6:	48 83 ec 20          	sub    $0x20,%rsp
    a5fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a602:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    a606:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    a60b:	75 15                	jne    a622 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    a60d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a615:	48 89 d6             	mov    %rdx,%rsi
    a618:	48 89 c7             	mov    %rax,%rdi
    a61b:	e8 f4 ba ff ff       	call   6114 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    a620:	eb 17                	jmp    a639 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x47>
	  traits_type::copy(__d, __s, __n);
    a622:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a626:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a62a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a62e:	48 89 ce             	mov    %rcx,%rsi
    a631:	48 89 c7             	mov    %rax,%rdi
    a634:	e8 a8 bb ff ff       	call   61e1 <_ZNSt11char_traitsIcE4copyEPcPKcm>
      }
    a639:	90                   	nop
    a63a:	c9                   	leave
    a63b:	c3                   	ret

000000000000a63c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>:
    basic_string<_CharT, _Traits, _Alloc>::
    a63c:	55                   	push   %rbp
    a63d:	48 89 e5             	mov    %rsp,%rbp
    a640:	48 83 ec 50          	sub    $0x50,%rsp
    a644:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a648:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a64c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a650:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    a654:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      const size_type __how_much = length() - __pos - __len1;
    a658:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a65c:	48 89 c7             	mov    %rax,%rdi
    a65f:	e8 04 f1 ff ff       	call   9768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a664:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    a668:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    a66c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      size_type __new_capacity = length() + __len2 - __len1;
    a670:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a674:	48 89 c7             	mov    %rax,%rdi
    a677:	e8 ec f0 ff ff       	call   9768 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a67c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    a680:	48 01 d0             	add    %rdx,%rax
    a683:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    a687:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __r = _M_create(__new_capacity, capacity());
    a68b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a68f:	48 89 c7             	mov    %rax,%rdi
    a692:	e8 87 f7 ff ff       	call   9e1e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    a697:	48 89 c2             	mov    %rax,%rdx
    a69a:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    a69e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6a2:	48 89 ce             	mov    %rcx,%rsi
    a6a5:	48 89 c7             	mov    %rax,%rdi
    a6a8:	e8 df f9 ff ff       	call   a08c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a6ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      if (__pos)
    a6b1:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a6b6:	74 22                	je     a6da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x9e>
	this->_S_copy(__r, _M_data(), __pos);
    a6b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6bc:	48 89 c7             	mov    %rax,%rdi
    a6bf:	e8 7a f4 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a6c4:	48 89 c1             	mov    %rax,%rcx
    a6c7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a6cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6cf:	48 89 ce             	mov    %rcx,%rsi
    a6d2:	48 89 c7             	mov    %rax,%rdi
    a6d5:	e8 18 ff ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__s && __len2)
    a6da:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    a6df:	74 26                	je     a707 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
    a6e1:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    a6e6:	74 1f                	je     a707 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
	this->_S_copy(__r + __pos, __s, __len2);
    a6e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a6f0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a6f4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    a6f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a6fc:	48 89 c6             	mov    %rax,%rsi
    a6ff:	48 89 cf             	mov    %rcx,%rdi
    a702:	e8 eb fe ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__how_much)
    a707:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a70c:	74 3d                	je     a74b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x10f>
		      _M_data() + __pos + __len1, __how_much);
    a70e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a712:	48 89 c7             	mov    %rax,%rdi
    a715:	e8 24 f4 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a71a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a71e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a722:	48 01 ca             	add    %rcx,%rdx
    a725:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
	this->_S_copy(__r + __pos + __len2,
    a729:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a72d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a731:	48 01 c2             	add    %rax,%rdx
    a734:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a738:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a73c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a740:	48 89 c2             	mov    %rax,%rdx
    a743:	48 89 cf             	mov    %rcx,%rdi
    a746:	e8 a7 fe ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      _M_dispose();
    a74b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a74f:	48 89 c7             	mov    %rax,%rdi
    a752:	e8 2f f4 ff ff       	call   9b86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
      _M_data(__r);
    a757:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a75b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a75f:	48 89 d6             	mov    %rdx,%rsi
    a762:	48 89 c7             	mov    %rax,%rdi
    a765:	e8 98 f4 ff ff       	call   9c02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
      _M_capacity(__new_capacity);
    a76a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a76e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a772:	48 89 d6             	mov    %rdx,%rsi
    a775:	48 89 c7             	mov    %rax,%rdi
    a778:	e8 9f f4 ff ff       	call   9c1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    a77d:	90                   	nop
    a77e:	c9                   	leave
    a77f:	c3                   	ret

000000000000a780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    a780:	55                   	push   %rbp
    a781:	48 89 e5             	mov    %rsp,%rbp
    a784:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a788:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    a78c:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    a790:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    a794:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    a798:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
	       const size_type __len2)
    {
      _M_check_length(__len1, __len2, "basic_string::_M_replace");
    a79c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a7a0:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    a7a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a7a8:	48 8d 0d d6 44 00 00 	lea    0x44d6(%rip),%rcx        # ec85 <_ZNSt8__detailL19__atomic_spin_countE+0x221>
    a7af:	48 89 c7             	mov    %rax,%rdi
    a7b2:	e8 7d fa ff ff       	call   a234 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>

      const size_type __old_size = this->size();
    a7b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a7bb:	48 89 c7             	mov    %rax,%rdi
    a7be:	e8 81 ba ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a7c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      const size_type __new_size = __old_size + __len2 - __len1;
    a7c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a7cb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a7cf:	48 01 d0             	add    %rdx,%rax
    a7d2:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    a7d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

      if (__new_size <= this->capacity())
    a7da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a7de:	48 89 c7             	mov    %rax,%rdi
    a7e1:	e8 38 f6 ff ff       	call   9e1e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    a7e6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a7ea:	0f 93 c0             	setae  %al
    a7ed:	84 c0                	test   %al,%al
    a7ef:	0f 84 fa 02 00 00    	je     aaef <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x36f>
	{
	  pointer __p = this->_M_data() + __pos;
    a7f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a7f9:	48 89 c7             	mov    %rax,%rdi
    a7fc:	e8 3d f3 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a801:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    a805:	48 01 d0             	add    %rdx,%rax
    a808:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

	  const size_type __how_much = __old_size - __pos - __len1;
    a80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a810:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
    a814:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    a818:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
#if __cpp_lib_is_constant_evaluated
	  if (std::is_constant_evaluated())
    a81c:	e8 e8 b8 ff ff       	call   6109 <_ZSt21is_constant_evaluatedv>
    a821:	84 c0                	test   %al,%al
    a823:	0f 84 09 01 00 00    	je     a932 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x1b2>
	    {
	      auto __newp = _Alloc_traits::allocate(_M_get_allocator(),
    a829:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a82d:	48 89 c7             	mov    %rax,%rdi
    a830:	e8 8b f3 ff ff       	call   9bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a835:	48 89 c2             	mov    %rax,%rdx
    a838:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a83c:	48 89 c6             	mov    %rax,%rsi
    a83f:	48 89 d7             	mov    %rdx,%rdi
    a842:	e8 a4 fc ff ff       	call   a4eb <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    a847:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
						    __new_size);
	      _S_copy(__newp, this->_M_data(), __pos);
    a84b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a84f:	48 89 c7             	mov    %rax,%rdi
    a852:	e8 e7 f2 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a857:	48 89 c1             	mov    %rax,%rcx
    a85a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    a85e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a862:	48 89 ce             	mov    %rcx,%rsi
    a865:	48 89 c7             	mov    %rax,%rdi
    a868:	e8 85 fd ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos, __s, __len2);
    a86d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a871:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a875:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a879:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a87d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a881:	48 89 c6             	mov    %rax,%rsi
    a884:	48 89 cf             	mov    %rcx,%rdi
    a887:	e8 66 fd ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos + __len2, __p + __len1, __how_much);
    a88c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a890:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a894:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a898:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    a89c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a8a0:	48 01 c2             	add    %rax,%rdx
    a8a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8a7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a8ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a8af:	48 89 c2             	mov    %rax,%rdx
    a8b2:	48 89 cf             	mov    %rcx,%rdi
    a8b5:	e8 38 fd ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(this->_M_data(), __newp, __new_size);
    a8ba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a8be:	48 89 c7             	mov    %rax,%rdi
    a8c1:	e8 78 f2 ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a8c6:	48 89 c1             	mov    %rax,%rcx
    a8c9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8d1:	48 89 c6             	mov    %rax,%rsi
    a8d4:	48 89 cf             	mov    %rcx,%rdi
    a8d7:	e8 16 fd ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      this->_M_get_allocator().deallocate(__newp, __new_size);
    a8dc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a8e0:	48 89 c7             	mov    %rax,%rdi
    a8e3:	e8 d8 f2 ff ff       	call   9bc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a8e8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a8ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8f0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    a8f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8f8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	if (std::__is_constant_evaluated())
    a8fc:	e8 eb b7 ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    a901:	84 c0                	test   %al,%al
    a903:	74 11                	je     a916 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x196>
	    ::operator delete(__p);
    a905:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a909:	48 89 c7             	mov    %rax,%rdi
    a90c:	e8 8f a8 ff ff       	call   51a0 <_ZdlPv@plt>
	    return;
    a911:	e9 f8 01 00 00       	jmp    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	__allocator_base<_Tp>::deallocate(__p, __n);
    a916:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    a91a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    a91e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a922:	48 89 ce             	mov    %rcx,%rsi
    a925:	48 89 c7             	mov    %rax,%rdi
    a928:	e8 95 04 00 00       	call   adc2 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    a92d:	e9 dc 01 00 00       	jmp    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
#endif
	  if (_M_disjunct(__s))
    a932:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    a936:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a93a:	48 89 d6             	mov    %rdx,%rsi
    a93d:	48 89 c7             	mov    %rax,%rdi
    a940:	e8 b7 02 00 00       	call   abfc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
    a945:	84 c0                	test   %al,%al
    a947:	74 5f                	je     a9a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x228>
	    {
	      if (__how_much && __len1 != __len2)
    a949:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a94e:	74 31                	je     a981 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
    a950:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a954:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    a958:	74 27                	je     a981 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    a95a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a95e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a962:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a966:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a96a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a96e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a972:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a976:	48 89 c2             	mov    %rax,%rdx
    a979:	48 89 cf             	mov    %rcx,%rdi
    a97c:	e8 fa 02 00 00       	call   ac7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2)
    a981:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    a986:	0f 84 82 01 00 00    	je     ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		this->_S_copy(__p, __s, __len2);
    a98c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a990:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a994:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a998:	48 89 ce             	mov    %rcx,%rsi
    a99b:	48 89 c7             	mov    %rax,%rdi
    a99e:	e8 4f fc ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a9a3:	e9 66 01 00 00       	jmp    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
	    {
	      // Work in-place.
	      if (__len2 && __len2 <= __len1)
    a9a8:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    a9ad:	74 21                	je     a9d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
    a9af:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a9b3:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    a9b7:	72 17                	jb     a9d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
		this->_S_move(__p, __s, __len2);
    a9b9:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a9bd:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a9c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9c5:	48 89 ce             	mov    %rcx,%rsi
    a9c8:	48 89 c7             	mov    %rax,%rdi
    a9cb:	e8 ab 02 00 00       	call   ac7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__how_much && __len1 != __len2)
    a9d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a9d5:	74 31                	je     aa08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
    a9d7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a9db:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    a9df:	74 27                	je     aa08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    a9e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a9e5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a9e9:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a9ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a9f1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a9f5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a9f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9fd:	48 89 c2             	mov    %rax,%rdx
    aa00:	48 89 cf             	mov    %rcx,%rdi
    aa03:	e8 73 02 00 00       	call   ac7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2 > __len1)
    aa08:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aa0c:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    aa10:	0f 83 f8 00 00 00    	jae    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		{
		  if (__s + __len2 <= __p + __len1)
    aa16:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    aa1a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aa1e:	48 01 d0             	add    %rdx,%rax
    aa21:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aa25:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    aa29:	48 01 ca             	add    %rcx,%rdx
    aa2c:	48 39 c2             	cmp    %rax,%rdx
    aa2f:	72 1c                	jb     aa4d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x2cd>
		    this->_S_move(__p, __s, __len2);
    aa31:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    aa35:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    aa39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa3d:	48 89 ce             	mov    %rcx,%rsi
    aa40:	48 89 c7             	mov    %rax,%rdi
    aa43:	e8 33 02 00 00       	call   ac7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
    aa48:	e9 c1 00 00 00       	jmp    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		  else if (__s >= __p + __len1)
    aa4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa51:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    aa55:	48 01 d0             	add    %rdx,%rax
    aa58:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    aa5c:	72 3b                	jb     aa99 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x319>
		    {
		      // Hint to middle end that __p and __s overlap
		      // (PR 98465).
		      const size_type __poff = (__s - __p) + (__len2 - __len1);
    aa5e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    aa62:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    aa66:	48 89 c2             	mov    %rax,%rdx
    aa69:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aa6d:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    aa71:	48 01 d0             	add    %rdx,%rax
    aa74:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
		      this->_S_copy(__p, __p + __poff, __len2);
    aa78:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    aa80:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    aa84:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    aa88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa8c:	48 89 ce             	mov    %rcx,%rsi
    aa8f:	48 89 c7             	mov    %rax,%rdi
    aa92:	e8 5b fb ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    aa97:	eb 75                	jmp    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		  else
		    {
		      const size_type __nleft = (__p + __len1) - __s;
    aa99:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa9d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    aaa1:	48 01 d0             	add    %rdx,%rax
    aaa4:	48 2b 45 90          	sub    -0x70(%rbp),%rax
    aaa8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
		      this->_S_move(__p, __s, __nleft);
    aaac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    aab0:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    aab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aab8:	48 89 ce             	mov    %rcx,%rsi
    aabb:	48 89 c7             	mov    %rax,%rdi
    aabe:	e8 b8 01 00 00       	call   ac7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
		      this->_S_copy(__p + __nleft, __p + __len2,
    aac3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aac7:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    aacb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aacf:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    aad3:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    aad7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aadb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    aadf:	48 01 d1             	add    %rdx,%rcx
    aae2:	48 89 c2             	mov    %rax,%rdx
    aae5:	48 89 cf             	mov    %rcx,%rdi
    aae8:	e8 05 fb ff ff       	call   a5f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    aaed:	eb 1f                	jmp    ab0e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		}
	    }
	}
      else
	this->_M_mutate(__pos, __len1, __s, __len2);
    aaef:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    aaf3:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    aaf7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    aafb:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    aaff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab03:	49 89 f8             	mov    %rdi,%r8
    ab06:	48 89 c7             	mov    %rax,%rdi
    ab09:	e8 2e fb ff ff       	call   a63c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__new_size);
    ab0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab12:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab16:	48 89 d6             	mov    %rdx,%rsi
    ab19:	48 89 c7             	mov    %rax,%rdi
    ab1c:	e8 43 ed ff ff       	call   9864 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    ab21:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    }
    ab25:	c9                   	leave
    ab26:	c3                   	ret
    ab27:	90                   	nop

000000000000ab28 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
    ab28:	55                   	push   %rbp
    ab29:	48 89 e5             	mov    %rsp,%rbp
    ab2c:	48 83 ec 10          	sub    $0x10,%rsp
    ab30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    ab34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab38:	48 89 c7             	mov    %rax,%rdi
    ab3b:	e8 86 01 00 00       	call   acc6 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEEC1Ev>
    ab40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab44:	48 89 c7             	mov    %rax,%rdi
    ab47:	e8 96 01 00 00       	call   ace2 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EEC1Ev>
    ab4c:	90                   	nop
    ab4d:	c9                   	leave
    ab4e:	c3                   	ret

000000000000ab4f <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ab4f:	55                   	push   %rbp
    ab50:	48 89 e5             	mov    %rsp,%rbp
    ab53:	48 83 ec 10          	sub    $0x10,%rsp
    ab57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ab5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab5f:	48 89 c7             	mov    %rax,%rdi
    ab62:	e8 91 01 00 00       	call   acf8 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    ab67:	c9                   	leave
    ab68:	c3                   	ret

000000000000ab69 <_ZSt3getILm1EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    ab69:	55                   	push   %rbp
    ab6a:	48 89 e5             	mov    %rsp,%rbp
    ab6d:	48 83 ec 10          	sub    $0x10,%rsp
    ab71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ab75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab79:	48 89 c7             	mov    %rax,%rdi
    ab7c:	e8 91 01 00 00       	call   ad12 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    ab81:	c9                   	leave
    ab82:	c3                   	ret

000000000000ab83 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ab83:	55                   	push   %rbp
    ab84:	48 89 e5             	mov    %rsp,%rbp
    ab87:	48 83 ec 10          	sub    $0x10,%rsp
    ab8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ab8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab93:	48 89 c7             	mov    %rax,%rdi
    ab96:	e8 91 01 00 00       	call   ad2c <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    ab9b:	c9                   	leave
    ab9c:	c3                   	ret

000000000000ab9d <_ZSt3getILm1EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    ab9d:	55                   	push   %rbp
    ab9e:	48 89 e5             	mov    %rsp,%rbp
    aba1:	48 83 ec 10          	sub    $0x10,%rsp
    aba5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    aba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abad:	48 89 c7             	mov    %rax,%rdi
    abb0:	e8 91 01 00 00       	call   ad46 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    abb5:	c9                   	leave
    abb6:	c3                   	ret

000000000000abb7 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:

  /// Return a const reference to the ith element of a const tuple.
  template<size_t __i, typename... _Elements>
    constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
    get(const tuple<_Elements...>& __t) noexcept
    abb7:	55                   	push   %rbp
    abb8:	48 89 e5             	mov    %rsp,%rbp
    abbb:	48 83 ec 10          	sub    $0x10,%rsp
    abbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    abc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc7:	48 89 c7             	mov    %rax,%rdi
    abca:	e8 91 01 00 00       	call   ad60 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
    abcf:	c9                   	leave
    abd0:	c3                   	ret

000000000000abd1 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    abd1:	55                   	push   %rbp
    abd2:	48 89 e5             	mov    %rsp,%rbp
    abd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
#else
	return size_t(-1) / sizeof(value_type);
    abd9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
#endif
      }
    abe0:	5d                   	pop    %rbp
    abe1:	c3                   	ret

000000000000abe2 <_ZSt9addressofIKcEPT_RS1_>:
    addressof(_Tp& __r) noexcept
    abe2:	55                   	push   %rbp
    abe3:	48 89 e5             	mov    %rsp,%rbp
    abe6:	48 83 ec 10          	sub    $0x10,%rsp
    abea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    abee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abf2:	48 89 c7             	mov    %rax,%rdi
    abf5:	e8 f1 01 00 00       	call   adeb <_ZSt11__addressofIKcEPT_RS1_>
    abfa:	c9                   	leave
    abfb:	c3                   	ret

000000000000abfc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
      _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
    abfc:	55                   	push   %rbp
    abfd:	48 89 e5             	mov    %rsp,%rbp
    ac00:	53                   	push   %rbx
    ac01:	48 83 ec 28          	sub    $0x28,%rsp
    ac05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ac09:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	return (less<const _CharT*>()(__s, _M_data())
    ac0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac11:	48 89 c7             	mov    %rax,%rdi
    ac14:	e8 25 ef ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    ac19:	48 89 c2             	mov    %rax,%rdx
    ac1c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    ac20:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    ac24:	48 89 ce             	mov    %rcx,%rsi
    ac27:	48 89 c7             	mov    %rax,%rdi
    ac2a:	e8 cb 01 00 00       	call   adfa <_ZNKSt4lessIPKcEclES1_S1_>
		|| less<const _CharT*>()(_M_data() + this->size(), __s));
    ac2f:	84 c0                	test   %al,%al
    ac31:	75 36                	jne    ac69 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x6d>
    ac33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac37:	48 89 c7             	mov    %rax,%rdi
    ac3a:	e8 ff ee ff ff       	call   9b3e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    ac3f:	48 89 c3             	mov    %rax,%rbx
    ac42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac46:	48 89 c7             	mov    %rax,%rdi
    ac49:	e8 f6 b5 ff ff       	call   6244 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    ac4e:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    ac52:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ac56:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ac5a:	48 89 ce             	mov    %rcx,%rsi
    ac5d:	48 89 c7             	mov    %rax,%rdi
    ac60:	e8 95 01 00 00       	call   adfa <_ZNKSt4lessIPKcEclES1_S1_>
    ac65:	84 c0                	test   %al,%al
    ac67:	74 07                	je     ac70 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x74>
    ac69:	b8 01 00 00 00       	mov    $0x1,%eax
    ac6e:	eb 05                	jmp    ac75 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x79>
    ac70:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ac75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac79:	c9                   	leave
    ac7a:	c3                   	ret

000000000000ac7b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>:
      _S_move(_CharT* __d, const _CharT* __s, size_type __n)
    ac7b:	55                   	push   %rbp
    ac7c:	48 89 e5             	mov    %rsp,%rbp
    ac7f:	48 83 ec 20          	sub    $0x20,%rsp
    ac83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac8b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    ac8f:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    ac94:	75 15                	jne    acab <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    ac96:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac9e:	48 89 d6             	mov    %rdx,%rsi
    aca1:	48 89 c7             	mov    %rax,%rdi
    aca4:	e8 6b b4 ff ff       	call   6114 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    aca9:	eb 17                	jmp    acc2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x47>
	  traits_type::move(__d, __s, __n);
    acab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    acaf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    acb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb7:	48 89 ce             	mov    %rcx,%rsi
    acba:	48 89 c7             	mov    %rax,%rdi
    acbd:	e8 c2 b4 ff ff       	call   6184 <_ZNSt11char_traitsIcE4moveEPcPKcm>
      }
    acc2:	90                   	nop
    acc3:	c9                   	leave
    acc4:	c3                   	ret
    acc5:	90                   	nop

000000000000acc6 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEEC1Ev>:
      _Tuple_impl()
    acc6:	55                   	push   %rbp
    acc7:	48 89 e5             	mov    %rsp,%rbp
    acca:	48 83 ec 10          	sub    $0x10,%rsp
    acce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    acd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acd6:	48 89 c7             	mov    %rax,%rdi
    acd9:	e8 56 01 00 00       	call   ae34 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EEC1Ev>
    acde:	90                   	nop
    acdf:	c9                   	leave
    ace0:	c3                   	ret
    ace1:	90                   	nop

000000000000ace2 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
    ace2:	55                   	push   %rbp
    ace3:	48 89 e5             	mov    %rsp,%rbp
    ace6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    acea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acee:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    acf5:	90                   	nop
    acf6:	5d                   	pop    %rbp
    acf7:	c3                   	ret

000000000000acf8 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    acf8:	55                   	push   %rbp
    acf9:	48 89 e5             	mov    %rsp,%rbp
    acfc:	48 83 ec 10          	sub    $0x10,%rsp
    ad00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad08:	48 89 c7             	mov    %rax,%rdi
    ad0b:	e8 2f 01 00 00       	call   ae3f <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERS4_>
    ad10:	c9                   	leave
    ad11:	c3                   	ret

000000000000ad12 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad12:	55                   	push   %rbp
    ad13:	48 89 e5             	mov    %rsp,%rbp
    ad16:	48 83 ec 10          	sub    $0x10,%rsp
    ad1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad22:	48 89 c7             	mov    %rax,%rdi
    ad25:	e8 23 01 00 00       	call   ae4d <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEE7_M_headERS5_>
    ad2a:	c9                   	leave
    ad2b:	c3                   	ret

000000000000ad2c <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ad2c:	55                   	push   %rbp
    ad2d:	48 89 e5             	mov    %rsp,%rbp
    ad30:	48 83 ec 10          	sub    $0x10,%rsp
    ad34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad3c:	48 89 c7             	mov    %rax,%rdi
    ad3f:	e8 23 01 00 00       	call   ae67 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERS4_>
    ad44:	c9                   	leave
    ad45:	c3                   	ret

000000000000ad46 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad46:	55                   	push   %rbp
    ad47:	48 89 e5             	mov    %rsp,%rbp
    ad4a:	48 83 ec 10          	sub    $0x10,%rsp
    ad4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad56:	48 89 c7             	mov    %rax,%rdi
    ad59:	e8 17 01 00 00       	call   ae75 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEE7_M_headERS5_>
    ad5e:	c9                   	leave
    ad5f:	c3                   	ret

000000000000ad60 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad60:	55                   	push   %rbp
    ad61:	48 89 e5             	mov    %rsp,%rbp
    ad64:	48 83 ec 10          	sub    $0x10,%rsp
    ad68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad70:	48 89 c7             	mov    %rax,%rdi
    ad73:	e8 17 01 00 00       	call   ae8f <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
    ad78:	c9                   	leave
    ad79:	c3                   	ret

000000000000ad7a <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
#endif

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      _GLIBCXX_NODISCARD _Tp*
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ad7a:	55                   	push   %rbp
    ad7b:	48 89 e5             	mov    %rsp,%rbp
    ad7e:	48 83 ec 20          	sub    $0x20,%rsp
    ad82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3308. std::allocator<void>().allocate(n)
	static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
#endif

	if (__builtin_expect(__n > this->_M_max_size(), false))
    ad8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad92:	48 89 c7             	mov    %rax,%rdi
    ad95:	e8 10 01 00 00       	call   aeaa <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    ad9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ad9e:	0f 92 c0             	setb   %al
    ada1:	0f b6 c0             	movzbl %al,%eax
    ada4:	48 85 c0             	test   %rax,%rax
    ada7:	0f 95 c0             	setne  %al
    adaa:	84 c0                	test   %al,%al
    adac:	74 05                	je     adb3 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	  {
	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
	    // 3190. allocator::allocate sometimes returns too little storage
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	      std::__throw_bad_array_new_length();
	    std::__throw_bad_alloc();
    adae:	e8 bd a2 ff ff       	call   5070 <_ZSt17__throw_bad_allocv@plt>
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
							   __al));
	  }
#endif
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    adb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adb7:	48 89 c7             	mov    %rax,%rdi
    adba:	e8 11 a4 ff ff       	call   51d0 <_Znwm@plt>
    adbf:	90                   	nop
      }
    adc0:	c9                   	leave
    adc1:	c3                   	ret

000000000000adc2 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    adc2:	55                   	push   %rbp
    adc3:	48 89 e5             	mov    %rsp,%rbp
    adc6:	48 83 ec 20          	sub    $0x20,%rsp
    adca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    add2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    add6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    adda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adde:	48 89 d6             	mov    %rdx,%rsi
    ade1:	48 89 c7             	mov    %rax,%rdi
    ade4:	e8 f7 a3 ff ff       	call   51e0 <_ZdlPvm@plt>
      }
    ade9:	c9                   	leave
    adea:	c3                   	ret

000000000000adeb <_ZSt11__addressofIKcEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    adeb:	55                   	push   %rbp
    adec:	48 89 e5             	mov    %rsp,%rbp
    adef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    adf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf7:	5d                   	pop    %rbp
    adf8:	c3                   	ret
    adf9:	90                   	nop

000000000000adfa <_ZNKSt4lessIPKcEclES1_S1_>:
  // Partial specialization of std::less for pointers.
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
    adfa:	55                   	push   %rbp
    adfb:	48 89 e5             	mov    %rsp,%rbp
    adfe:	48 83 ec 20          	sub    $0x20,%rsp
    ae02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
    ae0e:	e8 d9 b2 ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    ae13:	84 c0                	test   %al,%al
    ae15:	74 0d                	je     ae24 <_ZNKSt4lessIPKcEclES1_S1_+0x2a>
	  return __x < __y;
    ae17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae1b:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    ae1f:	0f 92 c0             	setb   %al
    ae22:	eb 0e                	jmp    ae32 <_ZNKSt4lessIPKcEclES1_S1_+0x38>
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
    ae24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae2c:	48 39 c2             	cmp    %rax,%rdx
    ae2f:	0f 92 c0             	setb   %al
      }
    ae32:	c9                   	leave
    ae33:	c3                   	ret

000000000000ae34 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
    ae34:	55                   	push   %rbp
    ae35:	48 89 e5             	mov    %rsp,%rbp
    ae38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    ae3c:	90                   	nop
    ae3d:	5d                   	pop    %rbp
    ae3e:	c3                   	ret

000000000000ae3f <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    ae3f:	55                   	push   %rbp
    ae40:	48 89 e5             	mov    %rsp,%rbp
    ae43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4b:	5d                   	pop    %rbp
    ae4c:	c3                   	ret

000000000000ae4d <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ae4d:	55                   	push   %rbp
    ae4e:	48 89 e5             	mov    %rsp,%rbp
    ae51:	48 83 ec 10          	sub    $0x10,%rsp
    ae55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae5d:	48 89 c7             	mov    %rax,%rdi
    ae60:	e8 59 00 00 00       	call   aebe <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EE7_M_headERS5_>
    ae65:	c9                   	leave
    ae66:	c3                   	ret

000000000000ae67 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    ae67:	55                   	push   %rbp
    ae68:	48 89 e5             	mov    %rsp,%rbp
    ae6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae73:	5d                   	pop    %rbp
    ae74:	c3                   	ret

000000000000ae75 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ae75:	55                   	push   %rbp
    ae76:	48 89 e5             	mov    %rsp,%rbp
    ae79:	48 83 ec 10          	sub    $0x10,%rsp
    ae7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae85:	48 89 c7             	mov    %rax,%rdi
    ae88:	e8 3f 00 00 00       	call   aecc <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EE7_M_headERS5_>
    ae8d:	c9                   	leave
    ae8e:	c3                   	ret

000000000000ae8f <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ae8f:	55                   	push   %rbp
    ae90:	48 89 e5             	mov    %rsp,%rbp
    ae93:	48 83 ec 10          	sub    $0x10,%rsp
    ae97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae9f:	48 89 c7             	mov    %rax,%rdi
    aea2:	e8 33 00 00 00       	call   aeda <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERKS4_>
    aea7:	c9                   	leave
    aea8:	c3                   	ret
    aea9:	90                   	nop

000000000000aeaa <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    aeaa:	55                   	push   %rbp
    aeab:	48 89 e5             	mov    %rsp,%rbp
    aeae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    aeb2:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    aeb9:	ff ff 7f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    aebc:	5d                   	pop    %rbp
    aebd:	c3                   	ret

000000000000aebe <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    aebe:	55                   	push   %rbp
    aebf:	48 89 e5             	mov    %rsp,%rbp
    aec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeca:	5d                   	pop    %rbp
    aecb:	c3                   	ret

000000000000aecc <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EE7_M_headERS5_>:
    aecc:	55                   	push   %rbp
    aecd:	48 89 e5             	mov    %rsp,%rbp
    aed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aed8:	5d                   	pop    %rbp
    aed9:	c3                   	ret

000000000000aeda <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    aeda:	55                   	push   %rbp
    aedb:	48 89 e5             	mov    %rsp,%rbp
    aede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aee6:	5d                   	pop    %rbp
    aee7:	c3                   	ret

000000000000aee8 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>:
  class CompressionExhaustedEXTError : public SystemError
    aee8:	55                   	push   %rbp
    aee9:	48 89 e5             	mov    %rsp,%rbp
    aeec:	48 83 ec 10          	sub    $0x10,%rsp
    aef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aef4:	48 8d 15 75 a2 00 00 	lea    0xa275(%rip),%rdx        # 15170 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    aefb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeff:	48 89 10             	mov    %rdx,(%rax)
    af02:	48 8d 15 8f a2 00 00 	lea    0xa28f(%rip),%rdx        # 15198 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    af09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af0d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    af11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af15:	48 89 c7             	mov    %rax,%rdi
    af18:	e8 77 c9 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    af1d:	90                   	nop
    af1e:	c9                   	leave
    af1f:	c3                   	ret

000000000000af20 <_ZThn8_N2vk28CompressionExhaustedEXTErrorD1Ev>:
    af20:	48 83 ef 08          	sub    $0x8,%rdi
    af24:	eb c2                	jmp    aee8 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>

000000000000af26 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>:
    af26:	55                   	push   %rbp
    af27:	48 89 e5             	mov    %rsp,%rbp
    af2a:	48 83 ec 10          	sub    $0x10,%rsp
    af2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af36:	48 89 c7             	mov    %rax,%rdi
    af39:	e8 aa ff ff ff       	call   aee8 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    af3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af42:	be 28 00 00 00       	mov    $0x28,%esi
    af47:	48 89 c7             	mov    %rax,%rdi
    af4a:	e8 91 a2 ff ff       	call   51e0 <_ZdlPvm@plt>
    af4f:	c9                   	leave
    af50:	c3                   	ret

000000000000af51 <_ZThn8_N2vk28CompressionExhaustedEXTErrorD0Ev>:
    af51:	48 83 ef 08          	sub    $0x8,%rdi
    af55:	eb cf                	jmp    af26 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>
    af57:	90                   	nop

000000000000af58 <_ZN2vk20NotPermittedKHRErrorD1Ev>:
  class NotPermittedKHRError : public SystemError
    af58:	55                   	push   %rbp
    af59:	48 89 e5             	mov    %rsp,%rbp
    af5c:	48 83 ec 10          	sub    $0x10,%rsp
    af60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af64:	48 8d 15 55 a2 00 00 	lea    0xa255(%rip),%rdx        # 151c0 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    af6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af6f:	48 89 10             	mov    %rdx,(%rax)
    af72:	48 8d 15 6f a2 00 00 	lea    0xa26f(%rip),%rdx        # 151e8 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    af79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    af81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af85:	48 89 c7             	mov    %rax,%rdi
    af88:	e8 07 c9 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    af8d:	90                   	nop
    af8e:	c9                   	leave
    af8f:	c3                   	ret

000000000000af90 <_ZThn8_N2vk20NotPermittedKHRErrorD1Ev>:
    af90:	48 83 ef 08          	sub    $0x8,%rdi
    af94:	eb c2                	jmp    af58 <_ZN2vk20NotPermittedKHRErrorD1Ev>

000000000000af96 <_ZN2vk20NotPermittedKHRErrorD0Ev>:
    af96:	55                   	push   %rbp
    af97:	48 89 e5             	mov    %rsp,%rbp
    af9a:	48 83 ec 10          	sub    $0x10,%rsp
    af9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa6:	48 89 c7             	mov    %rax,%rdi
    afa9:	e8 aa ff ff ff       	call   af58 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    afae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb2:	be 28 00 00 00       	mov    $0x28,%esi
    afb7:	48 89 c7             	mov    %rax,%rdi
    afba:	e8 21 a2 ff ff       	call   51e0 <_ZdlPvm@plt>
    afbf:	c9                   	leave
    afc0:	c3                   	ret

000000000000afc1 <_ZThn8_N2vk20NotPermittedKHRErrorD0Ev>:
    afc1:	48 83 ef 08          	sub    $0x8,%rdi
    afc5:	eb cf                	jmp    af96 <_ZN2vk20NotPermittedKHRErrorD0Ev>
    afc7:	90                   	nop

000000000000afc8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
  class InvalidDrmFormatModifierPlaneLayoutEXTError : public SystemError
    afc8:	55                   	push   %rbp
    afc9:	48 89 e5             	mov    %rsp,%rbp
    afcc:	48 83 ec 10          	sub    $0x10,%rsp
    afd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afd4:	48 8d 15 35 a2 00 00 	lea    0xa235(%rip),%rdx        # 15210 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    afdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afdf:	48 89 10             	mov    %rdx,(%rax)
    afe2:	48 8d 15 4f a2 00 00 	lea    0xa24f(%rip),%rdx        # 15238 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    afe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afed:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff5:	48 89 c7             	mov    %rax,%rdi
    aff8:	e8 97 c8 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    affd:	90                   	nop
    affe:	c9                   	leave
    afff:	c3                   	ret

000000000000b000 <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
    b000:	48 83 ef 08          	sub    $0x8,%rdi
    b004:	eb c2                	jmp    afc8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>

000000000000b006 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    b006:	55                   	push   %rbp
    b007:	48 89 e5             	mov    %rsp,%rbp
    b00a:	48 83 ec 10          	sub    $0x10,%rsp
    b00e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b016:	48 89 c7             	mov    %rax,%rdi
    b019:	e8 aa ff ff ff       	call   afc8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    b01e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b022:	be 28 00 00 00       	mov    $0x28,%esi
    b027:	48 89 c7             	mov    %rax,%rdi
    b02a:	e8 b1 a1 ff ff       	call   51e0 <_ZdlPvm@plt>
    b02f:	c9                   	leave
    b030:	c3                   	ret

000000000000b031 <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    b031:	48 83 ef 08          	sub    $0x8,%rdi
    b035:	eb cf                	jmp    b006 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>
    b037:	90                   	nop

000000000000b038 <_ZN2vk20InvalidShaderNVErrorD1Ev>:
  class InvalidShaderNVError : public SystemError
    b038:	55                   	push   %rbp
    b039:	48 89 e5             	mov    %rsp,%rbp
    b03c:	48 83 ec 10          	sub    $0x10,%rsp
    b040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b044:	48 8d 15 15 a2 00 00 	lea    0xa215(%rip),%rdx        # 15260 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    b04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b04f:	48 89 10             	mov    %rdx,(%rax)
    b052:	48 8d 15 2f a2 00 00 	lea    0xa22f(%rip),%rdx        # 15288 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    b059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b05d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b065:	48 89 c7             	mov    %rax,%rdi
    b068:	e8 27 c8 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b06d:	90                   	nop
    b06e:	c9                   	leave
    b06f:	c3                   	ret

000000000000b070 <_ZThn8_N2vk20InvalidShaderNVErrorD1Ev>:
    b070:	48 83 ef 08          	sub    $0x8,%rdi
    b074:	eb c2                	jmp    b038 <_ZN2vk20InvalidShaderNVErrorD1Ev>

000000000000b076 <_ZN2vk20InvalidShaderNVErrorD0Ev>:
    b076:	55                   	push   %rbp
    b077:	48 89 e5             	mov    %rsp,%rbp
    b07a:	48 83 ec 10          	sub    $0x10,%rsp
    b07e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b086:	48 89 c7             	mov    %rax,%rdi
    b089:	e8 aa ff ff ff       	call   b038 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    b08e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b092:	be 28 00 00 00       	mov    $0x28,%esi
    b097:	48 89 c7             	mov    %rax,%rdi
    b09a:	e8 41 a1 ff ff       	call   51e0 <_ZdlPvm@plt>
    b09f:	c9                   	leave
    b0a0:	c3                   	ret

000000000000b0a1 <_ZThn8_N2vk20InvalidShaderNVErrorD0Ev>:
    b0a1:	48 83 ef 08          	sub    $0x8,%rdi
    b0a5:	eb cf                	jmp    b076 <_ZN2vk20InvalidShaderNVErrorD0Ev>
    b0a7:	90                   	nop

000000000000b0a8 <_ZN2vk24ValidationFailedEXTErrorD1Ev>:
  class ValidationFailedEXTError : public SystemError
    b0a8:	55                   	push   %rbp
    b0a9:	48 89 e5             	mov    %rsp,%rbp
    b0ac:	48 83 ec 10          	sub    $0x10,%rsp
    b0b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0b4:	48 8d 15 f5 a1 00 00 	lea    0xa1f5(%rip),%rdx        # 152b0 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    b0bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0bf:	48 89 10             	mov    %rdx,(%rax)
    b0c2:	48 8d 15 0f a2 00 00 	lea    0xa20f(%rip),%rdx        # 152d8 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    b0c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0cd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b0d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0d5:	48 89 c7             	mov    %rax,%rdi
    b0d8:	e8 b7 c7 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b0dd:	90                   	nop
    b0de:	c9                   	leave
    b0df:	c3                   	ret

000000000000b0e0 <_ZThn8_N2vk24ValidationFailedEXTErrorD1Ev>:
    b0e0:	48 83 ef 08          	sub    $0x8,%rdi
    b0e4:	eb c2                	jmp    b0a8 <_ZN2vk24ValidationFailedEXTErrorD1Ev>

000000000000b0e6 <_ZN2vk24ValidationFailedEXTErrorD0Ev>:
    b0e6:	55                   	push   %rbp
    b0e7:	48 89 e5             	mov    %rsp,%rbp
    b0ea:	48 83 ec 10          	sub    $0x10,%rsp
    b0ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0f6:	48 89 c7             	mov    %rax,%rdi
    b0f9:	e8 aa ff ff ff       	call   b0a8 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    b0fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b102:	be 28 00 00 00       	mov    $0x28,%esi
    b107:	48 89 c7             	mov    %rax,%rdi
    b10a:	e8 d1 a0 ff ff       	call   51e0 <_ZdlPvm@plt>
    b10f:	c9                   	leave
    b110:	c3                   	ret

000000000000b111 <_ZThn8_N2vk24ValidationFailedEXTErrorD0Ev>:
    b111:	48 83 ef 08          	sub    $0x8,%rdi
    b115:	eb cf                	jmp    b0e6 <_ZN2vk24ValidationFailedEXTErrorD0Ev>
    b117:	90                   	nop

000000000000b118 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>:
  class IncompatibleDisplayKHRError : public SystemError
    b118:	55                   	push   %rbp
    b119:	48 89 e5             	mov    %rsp,%rbp
    b11c:	48 83 ec 10          	sub    $0x10,%rsp
    b120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b124:	48 8d 15 d5 a1 00 00 	lea    0xa1d5(%rip),%rdx        # 15300 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    b12b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b12f:	48 89 10             	mov    %rdx,(%rax)
    b132:	48 8d 15 ef a1 00 00 	lea    0xa1ef(%rip),%rdx        # 15328 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    b139:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b13d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b145:	48 89 c7             	mov    %rax,%rdi
    b148:	e8 47 c7 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b14d:	90                   	nop
    b14e:	c9                   	leave
    b14f:	c3                   	ret

000000000000b150 <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD1Ev>:
    b150:	48 83 ef 08          	sub    $0x8,%rdi
    b154:	eb c2                	jmp    b118 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>

000000000000b156 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>:
    b156:	55                   	push   %rbp
    b157:	48 89 e5             	mov    %rsp,%rbp
    b15a:	48 83 ec 10          	sub    $0x10,%rsp
    b15e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b166:	48 89 c7             	mov    %rax,%rdi
    b169:	e8 aa ff ff ff       	call   b118 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    b16e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b172:	be 28 00 00 00       	mov    $0x28,%esi
    b177:	48 89 c7             	mov    %rax,%rdi
    b17a:	e8 61 a0 ff ff       	call   51e0 <_ZdlPvm@plt>
    b17f:	c9                   	leave
    b180:	c3                   	ret

000000000000b181 <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD0Ev>:
    b181:	48 83 ef 08          	sub    $0x8,%rdi
    b185:	eb cf                	jmp    b156 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>
    b187:	90                   	nop

000000000000b188 <_ZN2vk17OutOfDateKHRErrorD1Ev>:
  class OutOfDateKHRError : public SystemError
    b188:	55                   	push   %rbp
    b189:	48 89 e5             	mov    %rsp,%rbp
    b18c:	48 83 ec 10          	sub    $0x10,%rsp
    b190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b194:	48 8d 15 b5 a1 00 00 	lea    0xa1b5(%rip),%rdx        # 15350 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    b19b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b19f:	48 89 10             	mov    %rdx,(%rax)
    b1a2:	48 8d 15 cf a1 00 00 	lea    0xa1cf(%rip),%rdx        # 15378 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    b1a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b1b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1b5:	48 89 c7             	mov    %rax,%rdi
    b1b8:	e8 d7 c6 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b1bd:	90                   	nop
    b1be:	c9                   	leave
    b1bf:	c3                   	ret

000000000000b1c0 <_ZThn8_N2vk17OutOfDateKHRErrorD1Ev>:
    b1c0:	48 83 ef 08          	sub    $0x8,%rdi
    b1c4:	eb c2                	jmp    b188 <_ZN2vk17OutOfDateKHRErrorD1Ev>

000000000000b1c6 <_ZN2vk17OutOfDateKHRErrorD0Ev>:
    b1c6:	55                   	push   %rbp
    b1c7:	48 89 e5             	mov    %rsp,%rbp
    b1ca:	48 83 ec 10          	sub    $0x10,%rsp
    b1ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d6:	48 89 c7             	mov    %rax,%rdi
    b1d9:	e8 aa ff ff ff       	call   b188 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    b1de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1e2:	be 28 00 00 00       	mov    $0x28,%esi
    b1e7:	48 89 c7             	mov    %rax,%rdi
    b1ea:	e8 f1 9f ff ff       	call   51e0 <_ZdlPvm@plt>
    b1ef:	c9                   	leave
    b1f0:	c3                   	ret

000000000000b1f1 <_ZThn8_N2vk17OutOfDateKHRErrorD0Ev>:
    b1f1:	48 83 ef 08          	sub    $0x8,%rdi
    b1f5:	eb cf                	jmp    b1c6 <_ZN2vk17OutOfDateKHRErrorD0Ev>
    b1f7:	90                   	nop

000000000000b1f8 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>:
  class NativeWindowInUseKHRError : public SystemError
    b1f8:	55                   	push   %rbp
    b1f9:	48 89 e5             	mov    %rsp,%rbp
    b1fc:	48 83 ec 10          	sub    $0x10,%rsp
    b200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b204:	48 8d 15 95 a1 00 00 	lea    0xa195(%rip),%rdx        # 153a0 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    b20b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b20f:	48 89 10             	mov    %rdx,(%rax)
    b212:	48 8d 15 af a1 00 00 	lea    0xa1af(%rip),%rdx        # 153c8 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    b219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b21d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b225:	48 89 c7             	mov    %rax,%rdi
    b228:	e8 67 c6 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b22d:	90                   	nop
    b22e:	c9                   	leave
    b22f:	c3                   	ret

000000000000b230 <_ZThn8_N2vk25NativeWindowInUseKHRErrorD1Ev>:
    b230:	48 83 ef 08          	sub    $0x8,%rdi
    b234:	eb c2                	jmp    b1f8 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>

000000000000b236 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>:
    b236:	55                   	push   %rbp
    b237:	48 89 e5             	mov    %rsp,%rbp
    b23a:	48 83 ec 10          	sub    $0x10,%rsp
    b23e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b246:	48 89 c7             	mov    %rax,%rdi
    b249:	e8 aa ff ff ff       	call   b1f8 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    b24e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b252:	be 28 00 00 00       	mov    $0x28,%esi
    b257:	48 89 c7             	mov    %rax,%rdi
    b25a:	e8 81 9f ff ff       	call   51e0 <_ZdlPvm@plt>
    b25f:	c9                   	leave
    b260:	c3                   	ret

000000000000b261 <_ZThn8_N2vk25NativeWindowInUseKHRErrorD0Ev>:
    b261:	48 83 ef 08          	sub    $0x8,%rdi
    b265:	eb cf                	jmp    b236 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>
    b267:	90                   	nop

000000000000b268 <_ZN2vk19SurfaceLostKHRErrorD1Ev>:
  class SurfaceLostKHRError : public SystemError
    b268:	55                   	push   %rbp
    b269:	48 89 e5             	mov    %rsp,%rbp
    b26c:	48 83 ec 10          	sub    $0x10,%rsp
    b270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b274:	48 8d 15 75 a1 00 00 	lea    0xa175(%rip),%rdx        # 153f0 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    b27b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b27f:	48 89 10             	mov    %rdx,(%rax)
    b282:	48 8d 15 8f a1 00 00 	lea    0xa18f(%rip),%rdx        # 15418 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    b289:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b28d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b295:	48 89 c7             	mov    %rax,%rdi
    b298:	e8 f7 c5 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b29d:	90                   	nop
    b29e:	c9                   	leave
    b29f:	c3                   	ret

000000000000b2a0 <_ZThn8_N2vk19SurfaceLostKHRErrorD1Ev>:
    b2a0:	48 83 ef 08          	sub    $0x8,%rdi
    b2a4:	eb c2                	jmp    b268 <_ZN2vk19SurfaceLostKHRErrorD1Ev>

000000000000b2a6 <_ZN2vk19SurfaceLostKHRErrorD0Ev>:
    b2a6:	55                   	push   %rbp
    b2a7:	48 89 e5             	mov    %rsp,%rbp
    b2aa:	48 83 ec 10          	sub    $0x10,%rsp
    b2ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2b6:	48 89 c7             	mov    %rax,%rdi
    b2b9:	e8 aa ff ff ff       	call   b268 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    b2be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c2:	be 28 00 00 00       	mov    $0x28,%esi
    b2c7:	48 89 c7             	mov    %rax,%rdi
    b2ca:	e8 11 9f ff ff       	call   51e0 <_ZdlPvm@plt>
    b2cf:	c9                   	leave
    b2d0:	c3                   	ret

000000000000b2d1 <_ZThn8_N2vk19SurfaceLostKHRErrorD0Ev>:
    b2d1:	48 83 ef 08          	sub    $0x8,%rdi
    b2d5:	eb cf                	jmp    b2a6 <_ZN2vk19SurfaceLostKHRErrorD0Ev>
    b2d7:	90                   	nop

000000000000b2d8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
  class InvalidOpaqueCaptureAddressError : public SystemError
    b2d8:	55                   	push   %rbp
    b2d9:	48 89 e5             	mov    %rsp,%rbp
    b2dc:	48 83 ec 10          	sub    $0x10,%rsp
    b2e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2e4:	48 8d 15 55 a1 00 00 	lea    0xa155(%rip),%rdx        # 15440 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    b2eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ef:	48 89 10             	mov    %rdx,(%rax)
    b2f2:	48 8d 15 6f a1 00 00 	lea    0xa16f(%rip),%rdx        # 15468 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    b2f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b305:	48 89 c7             	mov    %rax,%rdi
    b308:	e8 87 c5 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b30d:	90                   	nop
    b30e:	c9                   	leave
    b30f:	c3                   	ret

000000000000b310 <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
    b310:	48 83 ef 08          	sub    $0x8,%rdi
    b314:	eb c2                	jmp    b2d8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>

000000000000b316 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    b316:	55                   	push   %rbp
    b317:	48 89 e5             	mov    %rsp,%rbp
    b31a:	48 83 ec 10          	sub    $0x10,%rsp
    b31e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b326:	48 89 c7             	mov    %rax,%rdi
    b329:	e8 aa ff ff ff       	call   b2d8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    b32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b332:	be 28 00 00 00       	mov    $0x28,%esi
    b337:	48 89 c7             	mov    %rax,%rdi
    b33a:	e8 a1 9e ff ff       	call   51e0 <_ZdlPvm@plt>
    b33f:	c9                   	leave
    b340:	c3                   	ret

000000000000b341 <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    b341:	48 83 ef 08          	sub    $0x8,%rdi
    b345:	eb cf                	jmp    b316 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>
    b347:	90                   	nop

000000000000b348 <_ZN2vk18FragmentationErrorD1Ev>:
  class FragmentationError : public SystemError
    b348:	55                   	push   %rbp
    b349:	48 89 e5             	mov    %rsp,%rbp
    b34c:	48 83 ec 10          	sub    $0x10,%rsp
    b350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b354:	48 8d 15 35 a1 00 00 	lea    0xa135(%rip),%rdx        # 15490 <_ZTVN2vk18FragmentationErrorE+0x10>
    b35b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b35f:	48 89 10             	mov    %rdx,(%rax)
    b362:	48 8d 15 4f a1 00 00 	lea    0xa14f(%rip),%rdx        # 154b8 <_ZTVN2vk18FragmentationErrorE+0x38>
    b369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b36d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b375:	48 89 c7             	mov    %rax,%rdi
    b378:	e8 17 c5 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b37d:	90                   	nop
    b37e:	c9                   	leave
    b37f:	c3                   	ret

000000000000b380 <_ZThn8_N2vk18FragmentationErrorD1Ev>:
    b380:	48 83 ef 08          	sub    $0x8,%rdi
    b384:	eb c2                	jmp    b348 <_ZN2vk18FragmentationErrorD1Ev>

000000000000b386 <_ZN2vk18FragmentationErrorD0Ev>:
    b386:	55                   	push   %rbp
    b387:	48 89 e5             	mov    %rsp,%rbp
    b38a:	48 83 ec 10          	sub    $0x10,%rsp
    b38e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b396:	48 89 c7             	mov    %rax,%rdi
    b399:	e8 aa ff ff ff       	call   b348 <_ZN2vk18FragmentationErrorD1Ev>
    b39e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a2:	be 28 00 00 00       	mov    $0x28,%esi
    b3a7:	48 89 c7             	mov    %rax,%rdi
    b3aa:	e8 31 9e ff ff       	call   51e0 <_ZdlPvm@plt>
    b3af:	c9                   	leave
    b3b0:	c3                   	ret

000000000000b3b1 <_ZThn8_N2vk18FragmentationErrorD0Ev>:
    b3b1:	48 83 ef 08          	sub    $0x8,%rdi
    b3b5:	eb cf                	jmp    b386 <_ZN2vk18FragmentationErrorD0Ev>
    b3b7:	90                   	nop

000000000000b3b8 <_ZN2vk26InvalidExternalHandleErrorD1Ev>:
  class InvalidExternalHandleError : public SystemError
    b3b8:	55                   	push   %rbp
    b3b9:	48 89 e5             	mov    %rsp,%rbp
    b3bc:	48 83 ec 10          	sub    $0x10,%rsp
    b3c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3c4:	48 8d 15 15 a1 00 00 	lea    0xa115(%rip),%rdx        # 154e0 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    b3cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3cf:	48 89 10             	mov    %rdx,(%rax)
    b3d2:	48 8d 15 2f a1 00 00 	lea    0xa12f(%rip),%rdx        # 15508 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    b3d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b3e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3e5:	48 89 c7             	mov    %rax,%rdi
    b3e8:	e8 a7 c4 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b3ed:	90                   	nop
    b3ee:	c9                   	leave
    b3ef:	c3                   	ret

000000000000b3f0 <_ZThn8_N2vk26InvalidExternalHandleErrorD1Ev>:
    b3f0:	48 83 ef 08          	sub    $0x8,%rdi
    b3f4:	eb c2                	jmp    b3b8 <_ZN2vk26InvalidExternalHandleErrorD1Ev>

000000000000b3f6 <_ZN2vk26InvalidExternalHandleErrorD0Ev>:
    b3f6:	55                   	push   %rbp
    b3f7:	48 89 e5             	mov    %rsp,%rbp
    b3fa:	48 83 ec 10          	sub    $0x10,%rsp
    b3fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b406:	48 89 c7             	mov    %rax,%rdi
    b409:	e8 aa ff ff ff       	call   b3b8 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    b40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b412:	be 28 00 00 00       	mov    $0x28,%esi
    b417:	48 89 c7             	mov    %rax,%rdi
    b41a:	e8 c1 9d ff ff       	call   51e0 <_ZdlPvm@plt>
    b41f:	c9                   	leave
    b420:	c3                   	ret

000000000000b421 <_ZThn8_N2vk26InvalidExternalHandleErrorD0Ev>:
    b421:	48 83 ef 08          	sub    $0x8,%rdi
    b425:	eb cf                	jmp    b3f6 <_ZN2vk26InvalidExternalHandleErrorD0Ev>
    b427:	90                   	nop

000000000000b428 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>:
  class OutOfPoolMemoryError : public SystemError
    b428:	55                   	push   %rbp
    b429:	48 89 e5             	mov    %rsp,%rbp
    b42c:	48 83 ec 10          	sub    $0x10,%rsp
    b430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b434:	48 8d 15 f5 a0 00 00 	lea    0xa0f5(%rip),%rdx        # 15530 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    b43b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b43f:	48 89 10             	mov    %rdx,(%rax)
    b442:	48 8d 15 0f a1 00 00 	lea    0xa10f(%rip),%rdx        # 15558 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    b449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b455:	48 89 c7             	mov    %rax,%rdi
    b458:	e8 37 c4 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b45d:	90                   	nop
    b45e:	c9                   	leave
    b45f:	c3                   	ret

000000000000b460 <_ZThn8_N2vk20OutOfPoolMemoryErrorD1Ev>:
    b460:	48 83 ef 08          	sub    $0x8,%rdi
    b464:	eb c2                	jmp    b428 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>

000000000000b466 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>:
    b466:	55                   	push   %rbp
    b467:	48 89 e5             	mov    %rsp,%rbp
    b46a:	48 83 ec 10          	sub    $0x10,%rsp
    b46e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b476:	48 89 c7             	mov    %rax,%rdi
    b479:	e8 aa ff ff ff       	call   b428 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    b47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b482:	be 28 00 00 00       	mov    $0x28,%esi
    b487:	48 89 c7             	mov    %rax,%rdi
    b48a:	e8 51 9d ff ff       	call   51e0 <_ZdlPvm@plt>
    b48f:	c9                   	leave
    b490:	c3                   	ret

000000000000b491 <_ZThn8_N2vk20OutOfPoolMemoryErrorD0Ev>:
    b491:	48 83 ef 08          	sub    $0x8,%rdi
    b495:	eb cf                	jmp    b466 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>
    b497:	90                   	nop

000000000000b498 <_ZN2vk12UnknownErrorD1Ev>:
  class UnknownError : public SystemError
    b498:	55                   	push   %rbp
    b499:	48 89 e5             	mov    %rsp,%rbp
    b49c:	48 83 ec 10          	sub    $0x10,%rsp
    b4a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4a4:	48 8d 15 d5 a0 00 00 	lea    0xa0d5(%rip),%rdx        # 15580 <_ZTVN2vk12UnknownErrorE+0x10>
    b4ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4af:	48 89 10             	mov    %rdx,(%rax)
    b4b2:	48 8d 15 ef a0 00 00 	lea    0xa0ef(%rip),%rdx        # 155a8 <_ZTVN2vk12UnknownErrorE+0x38>
    b4b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b4c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4c5:	48 89 c7             	mov    %rax,%rdi
    b4c8:	e8 c7 c3 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b4cd:	90                   	nop
    b4ce:	c9                   	leave
    b4cf:	c3                   	ret

000000000000b4d0 <_ZThn8_N2vk12UnknownErrorD1Ev>:
    b4d0:	48 83 ef 08          	sub    $0x8,%rdi
    b4d4:	eb c2                	jmp    b498 <_ZN2vk12UnknownErrorD1Ev>

000000000000b4d6 <_ZN2vk12UnknownErrorD0Ev>:
    b4d6:	55                   	push   %rbp
    b4d7:	48 89 e5             	mov    %rsp,%rbp
    b4da:	48 83 ec 10          	sub    $0x10,%rsp
    b4de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4e6:	48 89 c7             	mov    %rax,%rdi
    b4e9:	e8 aa ff ff ff       	call   b498 <_ZN2vk12UnknownErrorD1Ev>
    b4ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f2:	be 28 00 00 00       	mov    $0x28,%esi
    b4f7:	48 89 c7             	mov    %rax,%rdi
    b4fa:	e8 e1 9c ff ff       	call   51e0 <_ZdlPvm@plt>
    b4ff:	c9                   	leave
    b500:	c3                   	ret

000000000000b501 <_ZThn8_N2vk12UnknownErrorD0Ev>:
    b501:	48 83 ef 08          	sub    $0x8,%rdi
    b505:	eb cf                	jmp    b4d6 <_ZN2vk12UnknownErrorD0Ev>
    b507:	90                   	nop

000000000000b508 <_ZN2vk19FragmentedPoolErrorD1Ev>:
  class FragmentedPoolError : public SystemError
    b508:	55                   	push   %rbp
    b509:	48 89 e5             	mov    %rsp,%rbp
    b50c:	48 83 ec 10          	sub    $0x10,%rsp
    b510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b514:	48 8d 15 b5 a0 00 00 	lea    0xa0b5(%rip),%rdx        # 155d0 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    b51b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b51f:	48 89 10             	mov    %rdx,(%rax)
    b522:	48 8d 15 cf a0 00 00 	lea    0xa0cf(%rip),%rdx        # 155f8 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    b529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b52d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b535:	48 89 c7             	mov    %rax,%rdi
    b538:	e8 57 c3 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b53d:	90                   	nop
    b53e:	c9                   	leave
    b53f:	c3                   	ret

000000000000b540 <_ZThn8_N2vk19FragmentedPoolErrorD1Ev>:
    b540:	48 83 ef 08          	sub    $0x8,%rdi
    b544:	eb c2                	jmp    b508 <_ZN2vk19FragmentedPoolErrorD1Ev>

000000000000b546 <_ZN2vk19FragmentedPoolErrorD0Ev>:
    b546:	55                   	push   %rbp
    b547:	48 89 e5             	mov    %rsp,%rbp
    b54a:	48 83 ec 10          	sub    $0x10,%rsp
    b54e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b556:	48 89 c7             	mov    %rax,%rdi
    b559:	e8 aa ff ff ff       	call   b508 <_ZN2vk19FragmentedPoolErrorD1Ev>
    b55e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b562:	be 28 00 00 00       	mov    $0x28,%esi
    b567:	48 89 c7             	mov    %rax,%rdi
    b56a:	e8 71 9c ff ff       	call   51e0 <_ZdlPvm@plt>
    b56f:	c9                   	leave
    b570:	c3                   	ret

000000000000b571 <_ZThn8_N2vk19FragmentedPoolErrorD0Ev>:
    b571:	48 83 ef 08          	sub    $0x8,%rdi
    b575:	eb cf                	jmp    b546 <_ZN2vk19FragmentedPoolErrorD0Ev>
    b577:	90                   	nop

000000000000b578 <_ZN2vk23FormatNotSupportedErrorD1Ev>:
  class FormatNotSupportedError : public SystemError
    b578:	55                   	push   %rbp
    b579:	48 89 e5             	mov    %rsp,%rbp
    b57c:	48 83 ec 10          	sub    $0x10,%rsp
    b580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b584:	48 8d 15 95 a0 00 00 	lea    0xa095(%rip),%rdx        # 15620 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    b58b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b58f:	48 89 10             	mov    %rdx,(%rax)
    b592:	48 8d 15 af a0 00 00 	lea    0xa0af(%rip),%rdx        # 15648 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    b599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b59d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a5:	48 89 c7             	mov    %rax,%rdi
    b5a8:	e8 e7 c2 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b5ad:	90                   	nop
    b5ae:	c9                   	leave
    b5af:	c3                   	ret

000000000000b5b0 <_ZThn8_N2vk23FormatNotSupportedErrorD1Ev>:
    b5b0:	48 83 ef 08          	sub    $0x8,%rdi
    b5b4:	eb c2                	jmp    b578 <_ZN2vk23FormatNotSupportedErrorD1Ev>

000000000000b5b6 <_ZN2vk23FormatNotSupportedErrorD0Ev>:
    b5b6:	55                   	push   %rbp
    b5b7:	48 89 e5             	mov    %rsp,%rbp
    b5ba:	48 83 ec 10          	sub    $0x10,%rsp
    b5be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5c6:	48 89 c7             	mov    %rax,%rdi
    b5c9:	e8 aa ff ff ff       	call   b578 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    b5ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5d2:	be 28 00 00 00       	mov    $0x28,%esi
    b5d7:	48 89 c7             	mov    %rax,%rdi
    b5da:	e8 01 9c ff ff       	call   51e0 <_ZdlPvm@plt>
    b5df:	c9                   	leave
    b5e0:	c3                   	ret

000000000000b5e1 <_ZThn8_N2vk23FormatNotSupportedErrorD0Ev>:
    b5e1:	48 83 ef 08          	sub    $0x8,%rdi
    b5e5:	eb cf                	jmp    b5b6 <_ZN2vk23FormatNotSupportedErrorD0Ev>
    b5e7:	90                   	nop

000000000000b5e8 <_ZN2vk19TooManyObjectsErrorD1Ev>:
  class TooManyObjectsError : public SystemError
    b5e8:	55                   	push   %rbp
    b5e9:	48 89 e5             	mov    %rsp,%rbp
    b5ec:	48 83 ec 10          	sub    $0x10,%rsp
    b5f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5f4:	48 8d 15 75 a0 00 00 	lea    0xa075(%rip),%rdx        # 15670 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    b5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ff:	48 89 10             	mov    %rdx,(%rax)
    b602:	48 8d 15 8f a0 00 00 	lea    0xa08f(%rip),%rdx        # 15698 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    b609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b60d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b615:	48 89 c7             	mov    %rax,%rdi
    b618:	e8 77 c2 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b61d:	90                   	nop
    b61e:	c9                   	leave
    b61f:	c3                   	ret

000000000000b620 <_ZThn8_N2vk19TooManyObjectsErrorD1Ev>:
    b620:	48 83 ef 08          	sub    $0x8,%rdi
    b624:	eb c2                	jmp    b5e8 <_ZN2vk19TooManyObjectsErrorD1Ev>

000000000000b626 <_ZN2vk19TooManyObjectsErrorD0Ev>:
    b626:	55                   	push   %rbp
    b627:	48 89 e5             	mov    %rsp,%rbp
    b62a:	48 83 ec 10          	sub    $0x10,%rsp
    b62e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b636:	48 89 c7             	mov    %rax,%rdi
    b639:	e8 aa ff ff ff       	call   b5e8 <_ZN2vk19TooManyObjectsErrorD1Ev>
    b63e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b642:	be 28 00 00 00       	mov    $0x28,%esi
    b647:	48 89 c7             	mov    %rax,%rdi
    b64a:	e8 91 9b ff ff       	call   51e0 <_ZdlPvm@plt>
    b64f:	c9                   	leave
    b650:	c3                   	ret

000000000000b651 <_ZThn8_N2vk19TooManyObjectsErrorD0Ev>:
    b651:	48 83 ef 08          	sub    $0x8,%rdi
    b655:	eb cf                	jmp    b626 <_ZN2vk19TooManyObjectsErrorD0Ev>
    b657:	90                   	nop

000000000000b658 <_ZN2vk23IncompatibleDriverErrorD1Ev>:
  class IncompatibleDriverError : public SystemError
    b658:	55                   	push   %rbp
    b659:	48 89 e5             	mov    %rsp,%rbp
    b65c:	48 83 ec 10          	sub    $0x10,%rsp
    b660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b664:	48 8d 15 55 a0 00 00 	lea    0xa055(%rip),%rdx        # 156c0 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    b66b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b66f:	48 89 10             	mov    %rdx,(%rax)
    b672:	48 8d 15 6f a0 00 00 	lea    0xa06f(%rip),%rdx        # 156e8 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    b679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b67d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b685:	48 89 c7             	mov    %rax,%rdi
    b688:	e8 07 c2 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b68d:	90                   	nop
    b68e:	c9                   	leave
    b68f:	c3                   	ret

000000000000b690 <_ZThn8_N2vk23IncompatibleDriverErrorD1Ev>:
    b690:	48 83 ef 08          	sub    $0x8,%rdi
    b694:	eb c2                	jmp    b658 <_ZN2vk23IncompatibleDriverErrorD1Ev>

000000000000b696 <_ZN2vk23IncompatibleDriverErrorD0Ev>:
    b696:	55                   	push   %rbp
    b697:	48 89 e5             	mov    %rsp,%rbp
    b69a:	48 83 ec 10          	sub    $0x10,%rsp
    b69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6a6:	48 89 c7             	mov    %rax,%rdi
    b6a9:	e8 aa ff ff ff       	call   b658 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    b6ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b2:	be 28 00 00 00       	mov    $0x28,%esi
    b6b7:	48 89 c7             	mov    %rax,%rdi
    b6ba:	e8 21 9b ff ff       	call   51e0 <_ZdlPvm@plt>
    b6bf:	c9                   	leave
    b6c0:	c3                   	ret

000000000000b6c1 <_ZThn8_N2vk23IncompatibleDriverErrorD0Ev>:
    b6c1:	48 83 ef 08          	sub    $0x8,%rdi
    b6c5:	eb cf                	jmp    b696 <_ZN2vk23IncompatibleDriverErrorD0Ev>
    b6c7:	90                   	nop

000000000000b6c8 <_ZN2vk22FeatureNotPresentErrorD1Ev>:
  class FeatureNotPresentError : public SystemError
    b6c8:	55                   	push   %rbp
    b6c9:	48 89 e5             	mov    %rsp,%rbp
    b6cc:	48 83 ec 10          	sub    $0x10,%rsp
    b6d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6d4:	48 8d 15 35 a0 00 00 	lea    0xa035(%rip),%rdx        # 15710 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    b6db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6df:	48 89 10             	mov    %rdx,(%rax)
    b6e2:	48 8d 15 4f a0 00 00 	lea    0xa04f(%rip),%rdx        # 15738 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    b6e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6f5:	48 89 c7             	mov    %rax,%rdi
    b6f8:	e8 97 c1 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b6fd:	90                   	nop
    b6fe:	c9                   	leave
    b6ff:	c3                   	ret

000000000000b700 <_ZThn8_N2vk22FeatureNotPresentErrorD1Ev>:
    b700:	48 83 ef 08          	sub    $0x8,%rdi
    b704:	eb c2                	jmp    b6c8 <_ZN2vk22FeatureNotPresentErrorD1Ev>

000000000000b706 <_ZN2vk22FeatureNotPresentErrorD0Ev>:
    b706:	55                   	push   %rbp
    b707:	48 89 e5             	mov    %rsp,%rbp
    b70a:	48 83 ec 10          	sub    $0x10,%rsp
    b70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b716:	48 89 c7             	mov    %rax,%rdi
    b719:	e8 aa ff ff ff       	call   b6c8 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    b71e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b722:	be 28 00 00 00       	mov    $0x28,%esi
    b727:	48 89 c7             	mov    %rax,%rdi
    b72a:	e8 b1 9a ff ff       	call   51e0 <_ZdlPvm@plt>
    b72f:	c9                   	leave
    b730:	c3                   	ret

000000000000b731 <_ZThn8_N2vk22FeatureNotPresentErrorD0Ev>:
    b731:	48 83 ef 08          	sub    $0x8,%rdi
    b735:	eb cf                	jmp    b706 <_ZN2vk22FeatureNotPresentErrorD0Ev>
    b737:	90                   	nop

000000000000b738 <_ZN2vk24ExtensionNotPresentErrorD1Ev>:
  class ExtensionNotPresentError : public SystemError
    b738:	55                   	push   %rbp
    b739:	48 89 e5             	mov    %rsp,%rbp
    b73c:	48 83 ec 10          	sub    $0x10,%rsp
    b740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b744:	48 8d 15 15 a0 00 00 	lea    0xa015(%rip),%rdx        # 15760 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    b74b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b74f:	48 89 10             	mov    %rdx,(%rax)
    b752:	48 8d 15 2f a0 00 00 	lea    0xa02f(%rip),%rdx        # 15788 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    b759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b75d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b765:	48 89 c7             	mov    %rax,%rdi
    b768:	e8 27 c1 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b76d:	90                   	nop
    b76e:	c9                   	leave
    b76f:	c3                   	ret

000000000000b770 <_ZThn8_N2vk24ExtensionNotPresentErrorD1Ev>:
    b770:	48 83 ef 08          	sub    $0x8,%rdi
    b774:	eb c2                	jmp    b738 <_ZN2vk24ExtensionNotPresentErrorD1Ev>

000000000000b776 <_ZN2vk24ExtensionNotPresentErrorD0Ev>:
    b776:	55                   	push   %rbp
    b777:	48 89 e5             	mov    %rsp,%rbp
    b77a:	48 83 ec 10          	sub    $0x10,%rsp
    b77e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b786:	48 89 c7             	mov    %rax,%rdi
    b789:	e8 aa ff ff ff       	call   b738 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    b78e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b792:	be 28 00 00 00       	mov    $0x28,%esi
    b797:	48 89 c7             	mov    %rax,%rdi
    b79a:	e8 41 9a ff ff       	call   51e0 <_ZdlPvm@plt>
    b79f:	c9                   	leave
    b7a0:	c3                   	ret

000000000000b7a1 <_ZThn8_N2vk24ExtensionNotPresentErrorD0Ev>:
    b7a1:	48 83 ef 08          	sub    $0x8,%rdi
    b7a5:	eb cf                	jmp    b776 <_ZN2vk24ExtensionNotPresentErrorD0Ev>
    b7a7:	90                   	nop

000000000000b7a8 <_ZN2vk20LayerNotPresentErrorD1Ev>:
  class LayerNotPresentError : public SystemError
    b7a8:	55                   	push   %rbp
    b7a9:	48 89 e5             	mov    %rsp,%rbp
    b7ac:	48 83 ec 10          	sub    $0x10,%rsp
    b7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7b4:	48 8d 15 f5 9f 00 00 	lea    0x9ff5(%rip),%rdx        # 157b0 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    b7bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7bf:	48 89 10             	mov    %rdx,(%rax)
    b7c2:	48 8d 15 0f a0 00 00 	lea    0xa00f(%rip),%rdx        # 157d8 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    b7c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b7d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7d5:	48 89 c7             	mov    %rax,%rdi
    b7d8:	e8 b7 c0 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b7dd:	90                   	nop
    b7de:	c9                   	leave
    b7df:	c3                   	ret

000000000000b7e0 <_ZThn8_N2vk20LayerNotPresentErrorD1Ev>:
    b7e0:	48 83 ef 08          	sub    $0x8,%rdi
    b7e4:	eb c2                	jmp    b7a8 <_ZN2vk20LayerNotPresentErrorD1Ev>

000000000000b7e6 <_ZN2vk20LayerNotPresentErrorD0Ev>:
    b7e6:	55                   	push   %rbp
    b7e7:	48 89 e5             	mov    %rsp,%rbp
    b7ea:	48 83 ec 10          	sub    $0x10,%rsp
    b7ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f6:	48 89 c7             	mov    %rax,%rdi
    b7f9:	e8 aa ff ff ff       	call   b7a8 <_ZN2vk20LayerNotPresentErrorD1Ev>
    b7fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b802:	be 28 00 00 00       	mov    $0x28,%esi
    b807:	48 89 c7             	mov    %rax,%rdi
    b80a:	e8 d1 99 ff ff       	call   51e0 <_ZdlPvm@plt>
    b80f:	c9                   	leave
    b810:	c3                   	ret

000000000000b811 <_ZThn8_N2vk20LayerNotPresentErrorD0Ev>:
    b811:	48 83 ef 08          	sub    $0x8,%rdi
    b815:	eb cf                	jmp    b7e6 <_ZN2vk20LayerNotPresentErrorD0Ev>
    b817:	90                   	nop

000000000000b818 <_ZN2vk20MemoryMapFailedErrorD1Ev>:
  class MemoryMapFailedError : public SystemError
    b818:	55                   	push   %rbp
    b819:	48 89 e5             	mov    %rsp,%rbp
    b81c:	48 83 ec 10          	sub    $0x10,%rsp
    b820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b824:	48 8d 15 d5 9f 00 00 	lea    0x9fd5(%rip),%rdx        # 15800 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    b82b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b82f:	48 89 10             	mov    %rdx,(%rax)
    b832:	48 8d 15 ef 9f 00 00 	lea    0x9fef(%rip),%rdx        # 15828 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    b839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b83d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b845:	48 89 c7             	mov    %rax,%rdi
    b848:	e8 47 c0 ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b84d:	90                   	nop
    b84e:	c9                   	leave
    b84f:	c3                   	ret

000000000000b850 <_ZThn8_N2vk20MemoryMapFailedErrorD1Ev>:
    b850:	48 83 ef 08          	sub    $0x8,%rdi
    b854:	eb c2                	jmp    b818 <_ZN2vk20MemoryMapFailedErrorD1Ev>

000000000000b856 <_ZN2vk20MemoryMapFailedErrorD0Ev>:
    b856:	55                   	push   %rbp
    b857:	48 89 e5             	mov    %rsp,%rbp
    b85a:	48 83 ec 10          	sub    $0x10,%rsp
    b85e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b866:	48 89 c7             	mov    %rax,%rdi
    b869:	e8 aa ff ff ff       	call   b818 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    b86e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b872:	be 28 00 00 00       	mov    $0x28,%esi
    b877:	48 89 c7             	mov    %rax,%rdi
    b87a:	e8 61 99 ff ff       	call   51e0 <_ZdlPvm@plt>
    b87f:	c9                   	leave
    b880:	c3                   	ret

000000000000b881 <_ZThn8_N2vk20MemoryMapFailedErrorD0Ev>:
    b881:	48 83 ef 08          	sub    $0x8,%rdi
    b885:	eb cf                	jmp    b856 <_ZN2vk20MemoryMapFailedErrorD0Ev>
    b887:	90                   	nop

000000000000b888 <_ZN2vk15DeviceLostErrorD1Ev>:
  class DeviceLostError : public SystemError
    b888:	55                   	push   %rbp
    b889:	48 89 e5             	mov    %rsp,%rbp
    b88c:	48 83 ec 10          	sub    $0x10,%rsp
    b890:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b894:	48 8d 15 b5 9f 00 00 	lea    0x9fb5(%rip),%rdx        # 15850 <_ZTVN2vk15DeviceLostErrorE+0x10>
    b89b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b89f:	48 89 10             	mov    %rdx,(%rax)
    b8a2:	48 8d 15 cf 9f 00 00 	lea    0x9fcf(%rip),%rdx        # 15878 <_ZTVN2vk15DeviceLostErrorE+0x38>
    b8a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b8b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8b5:	48 89 c7             	mov    %rax,%rdi
    b8b8:	e8 d7 bf ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b8bd:	90                   	nop
    b8be:	c9                   	leave
    b8bf:	c3                   	ret

000000000000b8c0 <_ZThn8_N2vk15DeviceLostErrorD1Ev>:
    b8c0:	48 83 ef 08          	sub    $0x8,%rdi
    b8c4:	eb c2                	jmp    b888 <_ZN2vk15DeviceLostErrorD1Ev>

000000000000b8c6 <_ZN2vk15DeviceLostErrorD0Ev>:
    b8c6:	55                   	push   %rbp
    b8c7:	48 89 e5             	mov    %rsp,%rbp
    b8ca:	48 83 ec 10          	sub    $0x10,%rsp
    b8ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8d6:	48 89 c7             	mov    %rax,%rdi
    b8d9:	e8 aa ff ff ff       	call   b888 <_ZN2vk15DeviceLostErrorD1Ev>
    b8de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8e2:	be 28 00 00 00       	mov    $0x28,%esi
    b8e7:	48 89 c7             	mov    %rax,%rdi
    b8ea:	e8 f1 98 ff ff       	call   51e0 <_ZdlPvm@plt>
    b8ef:	c9                   	leave
    b8f0:	c3                   	ret

000000000000b8f1 <_ZThn8_N2vk15DeviceLostErrorD0Ev>:
    b8f1:	48 83 ef 08          	sub    $0x8,%rdi
    b8f5:	eb cf                	jmp    b8c6 <_ZN2vk15DeviceLostErrorD0Ev>
    b8f7:	90                   	nop

000000000000b8f8 <_ZN2vk25InitializationFailedErrorD1Ev>:
  class InitializationFailedError : public SystemError
    b8f8:	55                   	push   %rbp
    b8f9:	48 89 e5             	mov    %rsp,%rbp
    b8fc:	48 83 ec 10          	sub    $0x10,%rsp
    b900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b904:	48 8d 15 95 9f 00 00 	lea    0x9f95(%rip),%rdx        # 158a0 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    b90b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b90f:	48 89 10             	mov    %rdx,(%rax)
    b912:	48 8d 15 af 9f 00 00 	lea    0x9faf(%rip),%rdx        # 158c8 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    b919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b91d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b925:	48 89 c7             	mov    %rax,%rdi
    b928:	e8 67 bf ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b92d:	90                   	nop
    b92e:	c9                   	leave
    b92f:	c3                   	ret

000000000000b930 <_ZThn8_N2vk25InitializationFailedErrorD1Ev>:
    b930:	48 83 ef 08          	sub    $0x8,%rdi
    b934:	eb c2                	jmp    b8f8 <_ZN2vk25InitializationFailedErrorD1Ev>

000000000000b936 <_ZN2vk25InitializationFailedErrorD0Ev>:
    b936:	55                   	push   %rbp
    b937:	48 89 e5             	mov    %rsp,%rbp
    b93a:	48 83 ec 10          	sub    $0x10,%rsp
    b93e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b946:	48 89 c7             	mov    %rax,%rdi
    b949:	e8 aa ff ff ff       	call   b8f8 <_ZN2vk25InitializationFailedErrorD1Ev>
    b94e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b952:	be 28 00 00 00       	mov    $0x28,%esi
    b957:	48 89 c7             	mov    %rax,%rdi
    b95a:	e8 81 98 ff ff       	call   51e0 <_ZdlPvm@plt>
    b95f:	c9                   	leave
    b960:	c3                   	ret

000000000000b961 <_ZThn8_N2vk25InitializationFailedErrorD0Ev>:
    b961:	48 83 ef 08          	sub    $0x8,%rdi
    b965:	eb cf                	jmp    b936 <_ZN2vk25InitializationFailedErrorD0Ev>
    b967:	90                   	nop

000000000000b968 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>:
  class OutOfDeviceMemoryError : public SystemError
    b968:	55                   	push   %rbp
    b969:	48 89 e5             	mov    %rsp,%rbp
    b96c:	48 83 ec 10          	sub    $0x10,%rsp
    b970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b974:	48 8d 15 75 9f 00 00 	lea    0x9f75(%rip),%rdx        # 158f0 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    b97b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b97f:	48 89 10             	mov    %rdx,(%rax)
    b982:	48 8d 15 8f 9f 00 00 	lea    0x9f8f(%rip),%rdx        # 15918 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    b989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b98d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b995:	48 89 c7             	mov    %rax,%rdi
    b998:	e8 f7 be ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    b99d:	90                   	nop
    b99e:	c9                   	leave
    b99f:	c3                   	ret

000000000000b9a0 <_ZThn8_N2vk22OutOfDeviceMemoryErrorD1Ev>:
    b9a0:	48 83 ef 08          	sub    $0x8,%rdi
    b9a4:	eb c2                	jmp    b968 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>

000000000000b9a6 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>:
    b9a6:	55                   	push   %rbp
    b9a7:	48 89 e5             	mov    %rsp,%rbp
    b9aa:	48 83 ec 10          	sub    $0x10,%rsp
    b9ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9b6:	48 89 c7             	mov    %rax,%rdi
    b9b9:	e8 aa ff ff ff       	call   b968 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    b9be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9c2:	be 28 00 00 00       	mov    $0x28,%esi
    b9c7:	48 89 c7             	mov    %rax,%rdi
    b9ca:	e8 11 98 ff ff       	call   51e0 <_ZdlPvm@plt>
    b9cf:	c9                   	leave
    b9d0:	c3                   	ret

000000000000b9d1 <_ZThn8_N2vk22OutOfDeviceMemoryErrorD0Ev>:
    b9d1:	48 83 ef 08          	sub    $0x8,%rdi
    b9d5:	eb cf                	jmp    b9a6 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>
    b9d7:	90                   	nop

000000000000b9d8 <_ZN2vk20OutOfHostMemoryErrorD1Ev>:
  class OutOfHostMemoryError : public SystemError
    b9d8:	55                   	push   %rbp
    b9d9:	48 89 e5             	mov    %rsp,%rbp
    b9dc:	48 83 ec 10          	sub    $0x10,%rsp
    b9e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9e4:	48 8d 15 55 9f 00 00 	lea    0x9f55(%rip),%rdx        # 15940 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    b9eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ef:	48 89 10             	mov    %rdx,(%rax)
    b9f2:	48 8d 15 6f 9f 00 00 	lea    0x9f6f(%rip),%rdx        # 15968 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    b9f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ba01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba05:	48 89 c7             	mov    %rax,%rdi
    ba08:	e8 87 be ff ff       	call   7894 <_ZN2vk11SystemErrorD1Ev>
    ba0d:	90                   	nop
    ba0e:	c9                   	leave
    ba0f:	c3                   	ret

000000000000ba10 <_ZThn8_N2vk20OutOfHostMemoryErrorD1Ev>:
    ba10:	48 83 ef 08          	sub    $0x8,%rdi
    ba14:	eb c2                	jmp    b9d8 <_ZN2vk20OutOfHostMemoryErrorD1Ev>

000000000000ba16 <_ZN2vk20OutOfHostMemoryErrorD0Ev>:
    ba16:	55                   	push   %rbp
    ba17:	48 89 e5             	mov    %rsp,%rbp
    ba1a:	48 83 ec 10          	sub    $0x10,%rsp
    ba1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba26:	48 89 c7             	mov    %rax,%rdi
    ba29:	e8 aa ff ff ff       	call   b9d8 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    ba2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba32:	be 28 00 00 00       	mov    $0x28,%esi
    ba37:	48 89 c7             	mov    %rax,%rdi
    ba3a:	e8 a1 97 ff ff       	call   51e0 <_ZdlPvm@plt>
    ba3f:	c9                   	leave
    ba40:	c3                   	ret

000000000000ba41 <_ZThn8_N2vk20OutOfHostMemoryErrorD0Ev>:
    ba41:	48 83 ef 08          	sub    $0x8,%rdi
    ba45:	eb cf                	jmp    ba16 <_ZN2vk20OutOfHostMemoryErrorD0Ev>
    ba47:	90                   	nop

000000000000ba48 <_ZN2vk17ErrorCategoryImplD1Ev>:
  class ErrorCategoryImpl : public std::error_category
    ba48:	55                   	push   %rbp
    ba49:	48 89 e5             	mov    %rsp,%rbp
    ba4c:	48 83 ec 10          	sub    $0x10,%rsp
    ba50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba54:	48 8d 15 15 a0 00 00 	lea    0xa015(%rip),%rdx        # 15a70 <_ZTVN2vk17ErrorCategoryImplE+0x10>
    ba5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba5f:	48 89 10             	mov    %rdx,(%rax)
    ba62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba66:	48 89 c7             	mov    %rax,%rdi
    ba69:	e8 82 98 ff ff       	call   52f0 <_ZNSt3_V214error_categoryD2Ev@plt>
    ba6e:	90                   	nop
    ba6f:	c9                   	leave
    ba70:	c3                   	ret
    ba71:	90                   	nop

000000000000ba72 <_ZN2vk17ErrorCategoryImplD0Ev>:
    ba72:	55                   	push   %rbp
    ba73:	48 89 e5             	mov    %rsp,%rbp
    ba76:	48 83 ec 10          	sub    $0x10,%rsp
    ba7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba82:	48 89 c7             	mov    %rax,%rdi
    ba85:	e8 be ff ff ff       	call   ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    ba8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba8e:	be 08 00 00 00       	mov    $0x8,%esi
    ba93:	48 89 c7             	mov    %rax,%rdi
    ba96:	e8 45 97 ff ff       	call   51e0 <_ZdlPvm@plt>
    ba9b:	c9                   	leave
    ba9c:	c3                   	ret
    ba9d:	90                   	nop

000000000000ba9e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
    ba9e:	55                   	push   %rbp
    ba9f:	48 89 e5             	mov    %rsp,%rbp
    baa2:	41 54                	push   %r12
    baa4:	53                   	push   %rbx
    baa5:	48 83 ec 30          	sub    $0x30,%rsp
    baa9:	89 7d cc             	mov    %edi,-0x34(%rbp)
    baac:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    bab0:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    bab4:	0f 89 28 07 00 00    	jns    c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    baba:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    babe:	0f 8d 3d 01 00 00    	jge    bc01 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    bac4:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    bacb:	0f 84 19 05 00 00    	je     bfea <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    bad1:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    bad8:	0f 8f 04 07 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bade:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    bae5:	0f 84 37 05 00 00    	je     c022 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    baeb:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    baf2:	0f 8f ea 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    baf8:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    baff:	0f 84 55 05 00 00    	je     c05a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    bb05:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    bb0c:	0f 8f d0 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bb12:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    bb19:	0f 84 73 05 00 00    	je     c092 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    bb1f:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    bb26:	0f 8f b6 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bb2c:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    bb33:	0f 84 91 05 00 00    	je     c0ca <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    bb39:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    bb40:	0f 8f 9c 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bb46:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    bb4d:	0f 84 af 05 00 00    	je     c102 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    bb53:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    bb5a:	0f 8f 82 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bb60:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    bb67:	0f 84 9d 03 00 00    	je     bf0a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    bb6d:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    bb74:	0f 8f 68 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bb7a:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    bb81:	0f 84 bb 03 00 00    	je     bf42 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    bb87:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    bb8e:	0f 8f 4e 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bb94:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    bb9b:	0f 84 99 05 00 00    	je     c13a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    bba1:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    bba8:	0f 8f 34 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bbae:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    bbb5:	0f 84 bf 03 00 00    	je     bf7a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    bbbb:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    bbc2:	0f 8f 1a 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bbc8:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    bbcf:	0f 84 9d 05 00 00    	je     c172 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    bbd5:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    bbdc:	0f 8f 00 06 00 00    	jg     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bbe2:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    bbe9:	0f 84 bb 05 00 00    	je     c1aa <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    bbef:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    bbf6:	0f 84 b6 03 00 00    	je     bfb2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    bbfc:	e9 e1 05 00 00       	jmp    c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bc01:	8b 45 cc             	mov    -0x34(%rbp),%eax
    bc04:	83 c0 0d             	add    $0xd,%eax
    bc07:	83 f8 0c             	cmp    $0xc,%eax
    bc0a:	0f 87 d2 05 00 00    	ja     c1e2 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    bc10:	89 c0                	mov    %eax,%eax
    bc12:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    bc19:	00 
    bc1a:	48 8d 05 17 3f 00 00 	lea    0x3f17(%rip),%rax        # fb38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    bc21:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    bc24:	48 98                	cltq
    bc26:	48 8d 15 0b 3f 00 00 	lea    0x3f0b(%rip),%rdx        # fb38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    bc2d:	48 01 d0             	add    %rdx,%rax
    bc30:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    bc32:	bf 28 00 00 00       	mov    $0x28,%edi
    bc37:	e8 74 94 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bc3c:	48 89 c3             	mov    %rax,%rbx
    bc3f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bc43:	48 89 c6             	mov    %rax,%rsi
    bc46:	48 89 df             	mov    %rbx,%rdi
    bc49:	e8 c6 bc ff ff       	call   7914 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    bc4e:	48 8d 05 83 fd ff ff 	lea    -0x27d(%rip),%rax        # b9d8 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    bc55:	48 89 c2             	mov    %rax,%rdx
    bc58:	48 8d 05 a9 a0 00 00 	lea    0xa0a9(%rip),%rax        # 15d08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bc5f:	48 89 c6             	mov    %rax,%rsi
    bc62:	48 89 df             	mov    %rbx,%rdi
    bc65:	e8 76 96 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    bc6a:	bf 28 00 00 00       	mov    $0x28,%edi
    bc6f:	e8 3c 94 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bc74:	48 89 c3             	mov    %rax,%rbx
    bc77:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bc7b:	48 89 c6             	mov    %rax,%rsi
    bc7e:	48 89 df             	mov    %rbx,%rdi
    bc81:	e8 60 bd ff ff       	call   79e6 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    bc86:	48 8d 05 db fc ff ff 	lea    -0x325(%rip),%rax        # b968 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    bc8d:	48 89 c2             	mov    %rax,%rdx
    bc90:	48 8d 05 59 a0 00 00 	lea    0xa059(%rip),%rax        # 15cf0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bc97:	48 89 c6             	mov    %rax,%rsi
    bc9a:	48 89 df             	mov    %rbx,%rdi
    bc9d:	e8 3e 96 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    bca2:	bf 28 00 00 00       	mov    $0x28,%edi
    bca7:	e8 04 94 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bcac:	48 89 c3             	mov    %rax,%rbx
    bcaf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bcb3:	48 89 c6             	mov    %rax,%rsi
    bcb6:	48 89 df             	mov    %rbx,%rdi
    bcb9:	e8 fa bd ff ff       	call   7ab8 <_ZN2vk25InitializationFailedErrorC1EPKc>
    bcbe:	48 8d 05 33 fc ff ff 	lea    -0x3cd(%rip),%rax        # b8f8 <_ZN2vk25InitializationFailedErrorD1Ev>
    bcc5:	48 89 c2             	mov    %rax,%rdx
    bcc8:	48 8d 05 09 a0 00 00 	lea    0xa009(%rip),%rax        # 15cd8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bccf:	48 89 c6             	mov    %rax,%rsi
    bcd2:	48 89 df             	mov    %rbx,%rdi
    bcd5:	e8 06 96 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    bcda:	bf 28 00 00 00       	mov    $0x28,%edi
    bcdf:	e8 cc 93 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bce4:	48 89 c3             	mov    %rax,%rbx
    bce7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bceb:	48 89 c6             	mov    %rax,%rsi
    bcee:	48 89 df             	mov    %rbx,%rdi
    bcf1:	e8 94 be ff ff       	call   7b8a <_ZN2vk15DeviceLostErrorC1EPKc>
    bcf6:	48 8d 05 8b fb ff ff 	lea    -0x475(%rip),%rax        # b888 <_ZN2vk15DeviceLostErrorD1Ev>
    bcfd:	48 89 c2             	mov    %rax,%rdx
    bd00:	48 8d 05 b9 9f 00 00 	lea    0x9fb9(%rip),%rax        # 15cc0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bd07:	48 89 c6             	mov    %rax,%rsi
    bd0a:	48 89 df             	mov    %rbx,%rdi
    bd0d:	e8 ce 95 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    bd12:	bf 28 00 00 00       	mov    $0x28,%edi
    bd17:	e8 94 93 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bd1c:	48 89 c3             	mov    %rax,%rbx
    bd1f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bd23:	48 89 c6             	mov    %rax,%rsi
    bd26:	48 89 df             	mov    %rbx,%rdi
    bd29:	e8 2e bf ff ff       	call   7c5c <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    bd2e:	48 8d 05 e3 fa ff ff 	lea    -0x51d(%rip),%rax        # b818 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    bd35:	48 89 c2             	mov    %rax,%rdx
    bd38:	48 8d 05 69 9f 00 00 	lea    0x9f69(%rip),%rax        # 15ca8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bd3f:	48 89 c6             	mov    %rax,%rsi
    bd42:	48 89 df             	mov    %rbx,%rdi
    bd45:	e8 96 95 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    bd4a:	bf 28 00 00 00       	mov    $0x28,%edi
    bd4f:	e8 5c 93 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bd54:	48 89 c3             	mov    %rax,%rbx
    bd57:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bd5b:	48 89 c6             	mov    %rax,%rsi
    bd5e:	48 89 df             	mov    %rbx,%rdi
    bd61:	e8 c8 bf ff ff       	call   7d2e <_ZN2vk20LayerNotPresentErrorC1EPKc>
    bd66:	48 8d 05 3b fa ff ff 	lea    -0x5c5(%rip),%rax        # b7a8 <_ZN2vk20LayerNotPresentErrorD1Ev>
    bd6d:	48 89 c2             	mov    %rax,%rdx
    bd70:	48 8d 05 19 9f 00 00 	lea    0x9f19(%rip),%rax        # 15c90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bd77:	48 89 c6             	mov    %rax,%rsi
    bd7a:	48 89 df             	mov    %rbx,%rdi
    bd7d:	e8 5e 95 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    bd82:	bf 28 00 00 00       	mov    $0x28,%edi
    bd87:	e8 24 93 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bd8c:	48 89 c3             	mov    %rax,%rbx
    bd8f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bd93:	48 89 c6             	mov    %rax,%rsi
    bd96:	48 89 df             	mov    %rbx,%rdi
    bd99:	e8 62 c0 ff ff       	call   7e00 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    bd9e:	48 8d 05 93 f9 ff ff 	lea    -0x66d(%rip),%rax        # b738 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    bda5:	48 89 c2             	mov    %rax,%rdx
    bda8:	48 8d 05 c9 9e 00 00 	lea    0x9ec9(%rip),%rax        # 15c78 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bdaf:	48 89 c6             	mov    %rax,%rsi
    bdb2:	48 89 df             	mov    %rbx,%rdi
    bdb5:	e8 26 95 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    bdba:	bf 28 00 00 00       	mov    $0x28,%edi
    bdbf:	e8 ec 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bdc4:	48 89 c3             	mov    %rax,%rbx
    bdc7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bdcb:	48 89 c6             	mov    %rax,%rsi
    bdce:	48 89 df             	mov    %rbx,%rdi
    bdd1:	e8 fc c0 ff ff       	call   7ed2 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    bdd6:	48 8d 05 eb f8 ff ff 	lea    -0x715(%rip),%rax        # b6c8 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    bddd:	48 89 c2             	mov    %rax,%rdx
    bde0:	48 8d 05 79 9e 00 00 	lea    0x9e79(%rip),%rax        # 15c60 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bde7:	48 89 c6             	mov    %rax,%rsi
    bdea:	48 89 df             	mov    %rbx,%rdi
    bded:	e8 ee 94 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    bdf2:	bf 28 00 00 00       	mov    $0x28,%edi
    bdf7:	e8 b4 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bdfc:	48 89 c3             	mov    %rax,%rbx
    bdff:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be03:	48 89 c6             	mov    %rax,%rsi
    be06:	48 89 df             	mov    %rbx,%rdi
    be09:	e8 96 c1 ff ff       	call   7fa4 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    be0e:	48 8d 05 43 f8 ff ff 	lea    -0x7bd(%rip),%rax        # b658 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    be15:	48 89 c2             	mov    %rax,%rdx
    be18:	48 8d 05 29 9e 00 00 	lea    0x9e29(%rip),%rax        # 15c48 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    be1f:	48 89 c6             	mov    %rax,%rsi
    be22:	48 89 df             	mov    %rbx,%rdi
    be25:	e8 b6 94 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    be2a:	bf 28 00 00 00       	mov    $0x28,%edi
    be2f:	e8 7c 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    be34:	48 89 c3             	mov    %rax,%rbx
    be37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be3b:	48 89 c6             	mov    %rax,%rsi
    be3e:	48 89 df             	mov    %rbx,%rdi
    be41:	e8 30 c2 ff ff       	call   8076 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    be46:	48 8d 05 9b f7 ff ff 	lea    -0x865(%rip),%rax        # b5e8 <_ZN2vk19TooManyObjectsErrorD1Ev>
    be4d:	48 89 c2             	mov    %rax,%rdx
    be50:	48 8d 05 d9 9d 00 00 	lea    0x9dd9(%rip),%rax        # 15c30 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    be57:	48 89 c6             	mov    %rax,%rsi
    be5a:	48 89 df             	mov    %rbx,%rdi
    be5d:	e8 7e 94 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    be62:	bf 28 00 00 00       	mov    $0x28,%edi
    be67:	e8 44 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    be6c:	48 89 c3             	mov    %rax,%rbx
    be6f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be73:	48 89 c6             	mov    %rax,%rsi
    be76:	48 89 df             	mov    %rbx,%rdi
    be79:	e8 ca c2 ff ff       	call   8148 <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    be7e:	48 8d 05 f3 f6 ff ff 	lea    -0x90d(%rip),%rax        # b578 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    be85:	48 89 c2             	mov    %rax,%rdx
    be88:	48 8d 05 89 9d 00 00 	lea    0x9d89(%rip),%rax        # 15c18 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    be8f:	48 89 c6             	mov    %rax,%rsi
    be92:	48 89 df             	mov    %rbx,%rdi
    be95:	e8 46 94 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    be9a:	bf 28 00 00 00       	mov    $0x28,%edi
    be9f:	e8 0c 92 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bea4:	48 89 c3             	mov    %rax,%rbx
    bea7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    beab:	48 89 c6             	mov    %rax,%rsi
    beae:	48 89 df             	mov    %rbx,%rdi
    beb1:	e8 64 c3 ff ff       	call   821a <_ZN2vk19FragmentedPoolErrorC1EPKc>
    beb6:	48 8d 05 4b f6 ff ff 	lea    -0x9b5(%rip),%rax        # b508 <_ZN2vk19FragmentedPoolErrorD1Ev>
    bebd:	48 89 c2             	mov    %rax,%rdx
    bec0:	48 8d 05 39 9d 00 00 	lea    0x9d39(%rip),%rax        # 15c00 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bec7:	48 89 c6             	mov    %rax,%rsi
    beca:	48 89 df             	mov    %rbx,%rdi
    becd:	e8 0e 94 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    bed2:	bf 28 00 00 00       	mov    $0x28,%edi
    bed7:	e8 d4 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bedc:	48 89 c3             	mov    %rax,%rbx
    bedf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bee3:	48 89 c6             	mov    %rax,%rsi
    bee6:	48 89 df             	mov    %rbx,%rdi
    bee9:	e8 fe c3 ff ff       	call   82ec <_ZN2vk12UnknownErrorC1EPKc>
    beee:	48 8d 05 a3 f5 ff ff 	lea    -0xa5d(%rip),%rax        # b498 <_ZN2vk12UnknownErrorD1Ev>
    bef5:	48 89 c2             	mov    %rax,%rdx
    bef8:	48 8d 05 e9 9c 00 00 	lea    0x9ce9(%rip),%rax        # 15be8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    beff:	48 89 c6             	mov    %rax,%rsi
    bf02:	48 89 df             	mov    %rbx,%rdi
    bf05:	e8 d6 93 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    bf0a:	bf 28 00 00 00       	mov    $0x28,%edi
    bf0f:	e8 9c 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bf14:	48 89 c3             	mov    %rax,%rbx
    bf17:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf1b:	48 89 c6             	mov    %rax,%rsi
    bf1e:	48 89 df             	mov    %rbx,%rdi
    bf21:	e8 98 c4 ff ff       	call   83be <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    bf26:	48 8d 05 fb f4 ff ff 	lea    -0xb05(%rip),%rax        # b428 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    bf2d:	48 89 c2             	mov    %rax,%rdx
    bf30:	48 8d 05 99 9c 00 00 	lea    0x9c99(%rip),%rax        # 15bd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bf37:	48 89 c6             	mov    %rax,%rsi
    bf3a:	48 89 df             	mov    %rbx,%rdi
    bf3d:	e8 9e 93 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    bf42:	bf 28 00 00 00       	mov    $0x28,%edi
    bf47:	e8 64 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bf4c:	48 89 c3             	mov    %rax,%rbx
    bf4f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf53:	48 89 c6             	mov    %rax,%rsi
    bf56:	48 89 df             	mov    %rbx,%rdi
    bf59:	e8 32 c5 ff ff       	call   8490 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    bf5e:	48 8d 05 53 f4 ff ff 	lea    -0xbad(%rip),%rax        # b3b8 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    bf65:	48 89 c2             	mov    %rax,%rdx
    bf68:	48 8d 05 49 9c 00 00 	lea    0x9c49(%rip),%rax        # 15bb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bf6f:	48 89 c6             	mov    %rax,%rsi
    bf72:	48 89 df             	mov    %rbx,%rdi
    bf75:	e8 66 93 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    bf7a:	bf 28 00 00 00       	mov    $0x28,%edi
    bf7f:	e8 2c 91 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bf84:	48 89 c3             	mov    %rax,%rbx
    bf87:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf8b:	48 89 c6             	mov    %rax,%rsi
    bf8e:	48 89 df             	mov    %rbx,%rdi
    bf91:	e8 cc c5 ff ff       	call   8562 <_ZN2vk18FragmentationErrorC1EPKc>
    bf96:	48 8d 05 ab f3 ff ff 	lea    -0xc55(%rip),%rax        # b348 <_ZN2vk18FragmentationErrorD1Ev>
    bf9d:	48 89 c2             	mov    %rax,%rdx
    bfa0:	48 8d 05 f9 9b 00 00 	lea    0x9bf9(%rip),%rax        # 15ba0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bfa7:	48 89 c6             	mov    %rax,%rsi
    bfaa:	48 89 df             	mov    %rbx,%rdi
    bfad:	e8 2e 93 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    bfb2:	bf 28 00 00 00       	mov    $0x28,%edi
    bfb7:	e8 f4 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bfbc:	48 89 c3             	mov    %rax,%rbx
    bfbf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bfc3:	48 89 c6             	mov    %rax,%rsi
    bfc6:	48 89 df             	mov    %rbx,%rdi
    bfc9:	e8 66 c6 ff ff       	call   8634 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    bfce:	48 8d 05 03 f3 ff ff 	lea    -0xcfd(%rip),%rax        # b2d8 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    bfd5:	48 89 c2             	mov    %rax,%rdx
    bfd8:	48 8d 05 a9 9b 00 00 	lea    0x9ba9(%rip),%rax        # 15b88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bfdf:	48 89 c6             	mov    %rax,%rsi
    bfe2:	48 89 df             	mov    %rbx,%rdi
    bfe5:	e8 f6 92 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    bfea:	bf 28 00 00 00       	mov    $0x28,%edi
    bfef:	e8 bc 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    bff4:	48 89 c3             	mov    %rax,%rbx
    bff7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bffb:	48 89 c6             	mov    %rax,%rsi
    bffe:	48 89 df             	mov    %rbx,%rdi
    c001:	e8 00 c7 ff ff       	call   8706 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    c006:	48 8d 05 5b f2 ff ff 	lea    -0xda5(%rip),%rax        # b268 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    c00d:	48 89 c2             	mov    %rax,%rdx
    c010:	48 8d 05 59 9b 00 00 	lea    0x9b59(%rip),%rax        # 15b70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c017:	48 89 c6             	mov    %rax,%rsi
    c01a:	48 89 df             	mov    %rbx,%rdi
    c01d:	e8 be 92 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    c022:	bf 28 00 00 00       	mov    $0x28,%edi
    c027:	e8 84 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c02c:	48 89 c3             	mov    %rax,%rbx
    c02f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c033:	48 89 c6             	mov    %rax,%rsi
    c036:	48 89 df             	mov    %rbx,%rdi
    c039:	e8 9a c7 ff ff       	call   87d8 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    c03e:	48 8d 05 b3 f1 ff ff 	lea    -0xe4d(%rip),%rax        # b1f8 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    c045:	48 89 c2             	mov    %rax,%rdx
    c048:	48 8d 05 09 9b 00 00 	lea    0x9b09(%rip),%rax        # 15b58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c04f:	48 89 c6             	mov    %rax,%rsi
    c052:	48 89 df             	mov    %rbx,%rdi
    c055:	e8 86 92 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    c05a:	bf 28 00 00 00       	mov    $0x28,%edi
    c05f:	e8 4c 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c064:	48 89 c3             	mov    %rax,%rbx
    c067:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c06b:	48 89 c6             	mov    %rax,%rsi
    c06e:	48 89 df             	mov    %rbx,%rdi
    c071:	e8 34 c8 ff ff       	call   88aa <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    c076:	48 8d 05 0b f1 ff ff 	lea    -0xef5(%rip),%rax        # b188 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    c07d:	48 89 c2             	mov    %rax,%rdx
    c080:	48 8d 05 b9 9a 00 00 	lea    0x9ab9(%rip),%rax        # 15b40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c087:	48 89 c6             	mov    %rax,%rsi
    c08a:	48 89 df             	mov    %rbx,%rdi
    c08d:	e8 4e 92 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    c092:	bf 28 00 00 00       	mov    $0x28,%edi
    c097:	e8 14 90 ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c09c:	48 89 c3             	mov    %rax,%rbx
    c09f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c0a3:	48 89 c6             	mov    %rax,%rsi
    c0a6:	48 89 df             	mov    %rbx,%rdi
    c0a9:	e8 ce c8 ff ff       	call   897c <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    c0ae:	48 8d 05 63 f0 ff ff 	lea    -0xf9d(%rip),%rax        # b118 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    c0b5:	48 89 c2             	mov    %rax,%rdx
    c0b8:	48 8d 05 69 9a 00 00 	lea    0x9a69(%rip),%rax        # 15b28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c0bf:	48 89 c6             	mov    %rax,%rsi
    c0c2:	48 89 df             	mov    %rbx,%rdi
    c0c5:	e8 16 92 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    c0ca:	bf 28 00 00 00       	mov    $0x28,%edi
    c0cf:	e8 dc 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c0d4:	48 89 c3             	mov    %rax,%rbx
    c0d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c0db:	48 89 c6             	mov    %rax,%rsi
    c0de:	48 89 df             	mov    %rbx,%rdi
    c0e1:	e8 68 c9 ff ff       	call   8a4e <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    c0e6:	48 8d 05 bb ef ff ff 	lea    -0x1045(%rip),%rax        # b0a8 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    c0ed:	48 89 c2             	mov    %rax,%rdx
    c0f0:	48 8d 05 19 9a 00 00 	lea    0x9a19(%rip),%rax        # 15b10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c0f7:	48 89 c6             	mov    %rax,%rsi
    c0fa:	48 89 df             	mov    %rbx,%rdi
    c0fd:	e8 de 91 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    c102:	bf 28 00 00 00       	mov    $0x28,%edi
    c107:	e8 a4 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c10c:	48 89 c3             	mov    %rax,%rbx
    c10f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c113:	48 89 c6             	mov    %rax,%rsi
    c116:	48 89 df             	mov    %rbx,%rdi
    c119:	e8 02 ca ff ff       	call   8b20 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    c11e:	48 8d 05 13 ef ff ff 	lea    -0x10ed(%rip),%rax        # b038 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    c125:	48 89 c2             	mov    %rax,%rdx
    c128:	48 8d 05 c9 99 00 00 	lea    0x99c9(%rip),%rax        # 15af8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c12f:	48 89 c6             	mov    %rax,%rsi
    c132:	48 89 df             	mov    %rbx,%rdi
    c135:	e8 a6 91 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    c13a:	bf 28 00 00 00       	mov    $0x28,%edi
    c13f:	e8 6c 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c144:	48 89 c3             	mov    %rax,%rbx
    c147:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c14b:	48 89 c6             	mov    %rax,%rsi
    c14e:	48 89 df             	mov    %rbx,%rdi
    c151:	e8 9c ca ff ff       	call   8bf2 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    c156:	48 8d 05 6b ee ff ff 	lea    -0x1195(%rip),%rax        # afc8 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    c15d:	48 89 c2             	mov    %rax,%rdx
    c160:	48 8d 05 79 99 00 00 	lea    0x9979(%rip),%rax        # 15ae0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c167:	48 89 c6             	mov    %rax,%rsi
    c16a:	48 89 df             	mov    %rbx,%rdi
    c16d:	e8 6e 91 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    c172:	bf 28 00 00 00       	mov    $0x28,%edi
    c177:	e8 34 8f ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c17c:	48 89 c3             	mov    %rax,%rbx
    c17f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c183:	48 89 c6             	mov    %rax,%rsi
    c186:	48 89 df             	mov    %rbx,%rdi
    c189:	e8 36 cb ff ff       	call   8cc4 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    c18e:	48 8d 05 c3 ed ff ff 	lea    -0x123d(%rip),%rax        # af58 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    c195:	48 89 c2             	mov    %rax,%rdx
    c198:	48 8d 05 29 99 00 00 	lea    0x9929(%rip),%rax        # 15ac8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c19f:	48 89 c6             	mov    %rax,%rsi
    c1a2:	48 89 df             	mov    %rbx,%rdi
    c1a5:	e8 36 91 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    c1aa:	bf 28 00 00 00       	mov    $0x28,%edi
    c1af:	e8 fc 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c1b4:	48 89 c3             	mov    %rax,%rbx
    c1b7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c1bb:	48 89 c6             	mov    %rax,%rsi
    c1be:	48 89 df             	mov    %rbx,%rdi
    c1c1:	e8 d0 cb ff ff       	call   8d96 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    c1c6:	48 8d 05 1b ed ff ff 	lea    -0x12e5(%rip),%rax        # aee8 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    c1cd:	48 89 c2             	mov    %rax,%rdx
    c1d0:	48 8d 05 d9 98 00 00 	lea    0x98d9(%rip),%rax        # 15ab0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    c1d7:	48 89 c6             	mov    %rax,%rsi
    c1da:	48 89 df             	mov    %rbx,%rdi
    c1dd:	e8 fe 90 ff ff       	call   52e0 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    c1e2:	bf 28 00 00 00       	mov    $0x28,%edi
    c1e7:	e8 c4 8e ff ff       	call   50b0 <__cxa_allocate_exception@plt>
    c1ec:	48 89 c3             	mov    %rax,%rbx
    c1ef:	8b 45 cc             	mov    -0x34(%rbp),%eax
    c1f2:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    c1f5:	0f b6 05 dc a0 00 00 	movzbl 0xa0dc(%rip),%eax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    c1fc:	84 c0                	test   %al,%al
    c1fe:	0f 94 c0             	sete   %al
    c201:	84 c0                	test   %al,%al
    c203:	74 4a                	je     c24f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    c205:	48 8d 05 cc a0 00 00 	lea    0xa0cc(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    c20c:	48 89 c7             	mov    %rax,%rdi
    c20f:	e8 0c 91 ff ff       	call   5320 <__cxa_guard_acquire@plt>
    c214:	85 c0                	test   %eax,%eax
    c216:	0f 95 c0             	setne  %al
    c219:	84 c0                	test   %al,%al
    c21b:	74 32                	je     c24f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    c21d:	48 8d 05 74 9f 00 00 	lea    0x9f74(%rip),%rax        # 16198 <__dso_handle>
    c224:	48 89 c2             	mov    %rax,%rdx
    c227:	48 8d 05 72 9f 00 00 	lea    0x9f72(%rip),%rax        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    c22e:	48 89 c6             	mov    %rax,%rsi
    c231:	48 8d 05 10 f8 ff ff 	lea    -0x7f0(%rip),%rax        # ba48 <_ZN2vk17ErrorCategoryImplD1Ev>
    c238:	48 89 c7             	mov    %rax,%rdi
    c23b:	e8 40 8f ff ff       	call   5180 <__cxa_atexit@plt>
    c240:	48 8d 05 91 a0 00 00 	lea    0xa091(%rip),%rax        # 162d8 <_ZGVZN2vk13errorCategoryEvE8instance>
    c247:	48 89 c7             	mov    %rax,%rdi
    c24a:	e8 81 8e ff ff       	call   50d0 <__cxa_guard_release@plt>
    return instance;
    c24f:	48 8d 15 4a 9f 00 00 	lea    0x9f4a(%rip),%rdx        # 161a0 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    c256:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    c259:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c25d:	89 ce                	mov    %ecx,%esi
    c25f:	48 89 c7             	mov    %rax,%rdi
    c262:	e8 ef 9f ff ff       	call   6256 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    c267:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c26b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    c26f:	48 89 c6             	mov    %rax,%rsi
    c272:	48 89 d7             	mov    %rdx,%rdi
    c275:	89 f1                	mov    %esi,%ecx
    c277:	48 89 d0             	mov    %rdx,%rax
    c27a:	89 ce                	mov    %ecx,%esi
    c27c:	48 89 c2             	mov    %rax,%rdx
    c27f:	48 89 df             	mov    %rbx,%rdi
    c282:	e8 d7 b4 ff ff       	call   775e <_ZN2vk11SystemErrorC1ESt10error_code>
    c287:	48 8d 05 06 b6 ff ff 	lea    -0x49fa(%rip),%rax        # 7894 <_ZN2vk11SystemErrorD1Ev>
    c28e:	48 89 c2             	mov    %rax,%rdx
    c291:	48 8d 05 88 9a 00 00 	lea    0x9a88(%rip),%rax        # 15d20 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    c298:	48 89 c6             	mov    %rax,%rsi
    c29b:	48 89 df             	mov    %rbx,%rdi
    c29e:	e8 3d 90 ff ff       	call   52e0 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    c2a3:	49 89 c4             	mov    %rax,%r12
    c2a6:	48 89 df             	mov    %rbx,%rdi
    c2a9:	e8 62 8e ff ff       	call   5110 <__cxa_free_exception@plt>
    c2ae:	4c 89 e0             	mov    %r12,%rax
    c2b1:	48 89 c7             	mov    %rax,%rdi
    c2b4:	e8 47 90 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    c2b9:	49 89 c4             	mov    %rax,%r12
    c2bc:	48 89 df             	mov    %rbx,%rdi
    c2bf:	e8 4c 8e ff ff       	call   5110 <__cxa_free_exception@plt>
    c2c4:	4c 89 e0             	mov    %r12,%rax
    c2c7:	48 89 c7             	mov    %rax,%rdi
    c2ca:	e8 31 90 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    c2cf:	49 89 c4             	mov    %rax,%r12
    c2d2:	48 89 df             	mov    %rbx,%rdi
    c2d5:	e8 36 8e ff ff       	call   5110 <__cxa_free_exception@plt>
    c2da:	4c 89 e0             	mov    %r12,%rax
    c2dd:	48 89 c7             	mov    %rax,%rdi
    c2e0:	e8 1b 90 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    c2e5:	49 89 c4             	mov    %rax,%r12
    c2e8:	48 89 df             	mov    %rbx,%rdi
    c2eb:	e8 20 8e ff ff       	call   5110 <__cxa_free_exception@plt>
    c2f0:	4c 89 e0             	mov    %r12,%rax
    c2f3:	48 89 c7             	mov    %rax,%rdi
    c2f6:	e8 05 90 ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    c2fb:	49 89 c4             	mov    %rax,%r12
    c2fe:	48 89 df             	mov    %rbx,%rdi
    c301:	e8 0a 8e ff ff       	call   5110 <__cxa_free_exception@plt>
    c306:	4c 89 e0             	mov    %r12,%rax
    c309:	48 89 c7             	mov    %rax,%rdi
    c30c:	e8 ef 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    c311:	49 89 c4             	mov    %rax,%r12
    c314:	48 89 df             	mov    %rbx,%rdi
    c317:	e8 f4 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c31c:	4c 89 e0             	mov    %r12,%rax
    c31f:	48 89 c7             	mov    %rax,%rdi
    c322:	e8 d9 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    c327:	49 89 c4             	mov    %rax,%r12
    c32a:	48 89 df             	mov    %rbx,%rdi
    c32d:	e8 de 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c332:	4c 89 e0             	mov    %r12,%rax
    c335:	48 89 c7             	mov    %rax,%rdi
    c338:	e8 c3 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    c33d:	49 89 c4             	mov    %rax,%r12
    c340:	48 89 df             	mov    %rbx,%rdi
    c343:	e8 c8 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c348:	4c 89 e0             	mov    %r12,%rax
    c34b:	48 89 c7             	mov    %rax,%rdi
    c34e:	e8 ad 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    c353:	49 89 c4             	mov    %rax,%r12
    c356:	48 89 df             	mov    %rbx,%rdi
    c359:	e8 b2 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c35e:	4c 89 e0             	mov    %r12,%rax
    c361:	48 89 c7             	mov    %rax,%rdi
    c364:	e8 97 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    c369:	49 89 c4             	mov    %rax,%r12
    c36c:	48 89 df             	mov    %rbx,%rdi
    c36f:	e8 9c 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c374:	4c 89 e0             	mov    %r12,%rax
    c377:	48 89 c7             	mov    %rax,%rdi
    c37a:	e8 81 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    c37f:	49 89 c4             	mov    %rax,%r12
    c382:	48 89 df             	mov    %rbx,%rdi
    c385:	e8 86 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c38a:	4c 89 e0             	mov    %r12,%rax
    c38d:	48 89 c7             	mov    %rax,%rdi
    c390:	e8 6b 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    c395:	49 89 c4             	mov    %rax,%r12
    c398:	48 89 df             	mov    %rbx,%rdi
    c39b:	e8 70 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c3a0:	4c 89 e0             	mov    %r12,%rax
    c3a3:	48 89 c7             	mov    %rax,%rdi
    c3a6:	e8 55 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    c3ab:	49 89 c4             	mov    %rax,%r12
    c3ae:	48 89 df             	mov    %rbx,%rdi
    c3b1:	e8 5a 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c3b6:	4c 89 e0             	mov    %r12,%rax
    c3b9:	48 89 c7             	mov    %rax,%rdi
    c3bc:	e8 3f 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    c3c1:	49 89 c4             	mov    %rax,%r12
    c3c4:	48 89 df             	mov    %rbx,%rdi
    c3c7:	e8 44 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c3cc:	4c 89 e0             	mov    %r12,%rax
    c3cf:	48 89 c7             	mov    %rax,%rdi
    c3d2:	e8 29 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    c3d7:	49 89 c4             	mov    %rax,%r12
    c3da:	48 89 df             	mov    %rbx,%rdi
    c3dd:	e8 2e 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c3e2:	4c 89 e0             	mov    %r12,%rax
    c3e5:	48 89 c7             	mov    %rax,%rdi
    c3e8:	e8 13 8f ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    c3ed:	49 89 c4             	mov    %rax,%r12
    c3f0:	48 89 df             	mov    %rbx,%rdi
    c3f3:	e8 18 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c3f8:	4c 89 e0             	mov    %r12,%rax
    c3fb:	48 89 c7             	mov    %rax,%rdi
    c3fe:	e8 fd 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    c403:	49 89 c4             	mov    %rax,%r12
    c406:	48 89 df             	mov    %rbx,%rdi
    c409:	e8 02 8d ff ff       	call   5110 <__cxa_free_exception@plt>
    c40e:	4c 89 e0             	mov    %r12,%rax
    c411:	48 89 c7             	mov    %rax,%rdi
    c414:	e8 e7 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    c419:	49 89 c4             	mov    %rax,%r12
    c41c:	48 89 df             	mov    %rbx,%rdi
    c41f:	e8 ec 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c424:	4c 89 e0             	mov    %r12,%rax
    c427:	48 89 c7             	mov    %rax,%rdi
    c42a:	e8 d1 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    c42f:	49 89 c4             	mov    %rax,%r12
    c432:	48 89 df             	mov    %rbx,%rdi
    c435:	e8 d6 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c43a:	4c 89 e0             	mov    %r12,%rax
    c43d:	48 89 c7             	mov    %rax,%rdi
    c440:	e8 bb 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    c445:	49 89 c4             	mov    %rax,%r12
    c448:	48 89 df             	mov    %rbx,%rdi
    c44b:	e8 c0 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c450:	4c 89 e0             	mov    %r12,%rax
    c453:	48 89 c7             	mov    %rax,%rdi
    c456:	e8 a5 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    c45b:	49 89 c4             	mov    %rax,%r12
    c45e:	48 89 df             	mov    %rbx,%rdi
    c461:	e8 aa 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c466:	4c 89 e0             	mov    %r12,%rax
    c469:	48 89 c7             	mov    %rax,%rdi
    c46c:	e8 8f 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    c471:	49 89 c4             	mov    %rax,%r12
    c474:	48 89 df             	mov    %rbx,%rdi
    c477:	e8 94 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c47c:	4c 89 e0             	mov    %r12,%rax
    c47f:	48 89 c7             	mov    %rax,%rdi
    c482:	e8 79 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    c487:	49 89 c4             	mov    %rax,%r12
    c48a:	48 89 df             	mov    %rbx,%rdi
    c48d:	e8 7e 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c492:	4c 89 e0             	mov    %r12,%rax
    c495:	48 89 c7             	mov    %rax,%rdi
    c498:	e8 63 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    c49d:	49 89 c4             	mov    %rax,%r12
    c4a0:	48 89 df             	mov    %rbx,%rdi
    c4a3:	e8 68 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4a8:	4c 89 e0             	mov    %r12,%rax
    c4ab:	48 89 c7             	mov    %rax,%rdi
    c4ae:	e8 4d 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    c4b3:	49 89 c4             	mov    %rax,%r12
    c4b6:	48 89 df             	mov    %rbx,%rdi
    c4b9:	e8 52 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4be:	4c 89 e0             	mov    %r12,%rax
    c4c1:	48 89 c7             	mov    %rax,%rdi
    c4c4:	e8 37 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    c4c9:	49 89 c4             	mov    %rax,%r12
    c4cc:	48 89 df             	mov    %rbx,%rdi
    c4cf:	e8 3c 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4d4:	4c 89 e0             	mov    %r12,%rax
    c4d7:	48 89 c7             	mov    %rax,%rdi
    c4da:	e8 21 8e ff ff       	call   5300 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    c4df:	49 89 c4             	mov    %rax,%r12
    c4e2:	48 89 df             	mov    %rbx,%rdi
    c4e5:	e8 26 8c ff ff       	call   5110 <__cxa_free_exception@plt>
    c4ea:	4c 89 e0             	mov    %r12,%rax
    c4ed:	48 89 c7             	mov    %rax,%rdi
    c4f0:	e8 0b 8e ff ff       	call   5300 <_Unwind_Resume@plt>
    c4f5:	90                   	nop

000000000000c4f6 <_ZN4rtvc9VulkanApp12makeInstanceEv>:
#include "vulkan_app.hpp"

namespace rtvc {

vk::raii::Instance VulkanApp::makeInstance() {
    c4f6:	55                   	push   %rbp
    c4f7:	48 89 e5             	mov    %rsp,%rbp
    c4fa:	53                   	push   %rbx
    c4fb:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    c502:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    c509:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  vk::ApplicationInfo applicationInfo{
    c510:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    c517:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c51e:	00 
    c51f:	48 8d 05 0b 43 00 00 	lea    0x430b(%rip),%rax        # 10831 <_ZNSt8__detailL19__atomic_spin_countE+0xcb5>
    c526:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c52a:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
    c531:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    c538:	00 
    c539:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    c540:	c7 45 dc 00 10 40 00 	movl   $0x401000,-0x24(%rbp)
      .pApplicationName{"Vulkan Application"},
      .applicationVersion{VK_MAKE_VERSION(1, 0, 0)},
      .apiVersion{VK_API_VERSION_1_1},
  };

  vk::InstanceCreateInfo instanceInfo{
    c547:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c54b:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    c552:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    c556:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    c55a:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    c55e:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%rbp)
    c565:	00 00 00 
      .pApplicationInfo{&applicationInfo},
  };
    c568:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    c56f:	48 83 c0 10          	add    $0x10,%rax
    c573:	48 89 c7             	mov    %rax,%rdi
    c576:	e8 f5 14 00 00       	call   da70 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ev>
    c57b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c57f:	48 89 45 88          	mov    %rax,-0x78(%rbp)

  vk::raii::Instance instance{
      _context,
    c583:	48 8b 9d 60 ff ff ff 	mov    -0xa0(%rbp),%rbx
      instanceInfo,
  };
    c58a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c58e:	be 00 00 00 00       	mov    $0x0,%esi
    c593:	48 89 c7             	mov    %rax,%rdi
    c596:	e8 b7 15 00 00       	call   db52 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
    c59b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c59f:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    c5a6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c5ad:	48 89 de             	mov    %rbx,%rsi
    c5b0:	48 89 c7             	mov    %rax,%rdi
    c5b3:	e8 80 13 00 00       	call   d938 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>
  return instance;
    c5b8:	90                   	nop
}
    c5b9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c5c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c5c4:	c9                   	leave
    c5c5:	c3                   	ret

000000000000c5c6 <_ZN4rtvc18makeDebugMessengerEv>:

vk::raii::DebugUtilsMessengerEXT makeDebugMessenger() {
    c5c6:	55                   	push   %rbp
    c5c7:	48 89 e5             	mov    %rsp,%rbp
    c5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  //   vk::raii::DebugUtilsMessengerEXT debugMessenger{

  //   };
}
    c5ce:	90                   	nop
    c5cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d3:	5d                   	pop    %rbp
    c5d4:	c3                   	ret
    c5d5:	90                   	nop

000000000000c5d6 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_>:
      InstanceDispatcher( PFN_vkGetInstanceProcAddr getProcAddr, VkInstance instance ) : vkGetInstanceProcAddr( getProcAddr )
    c5d6:	55                   	push   %rbp
    c5d7:	48 89 e5             	mov    %rsp,%rbp
    c5da:	48 83 ec 20          	sub    $0x20,%rsp
    c5de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    c5ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ee:	48 89 c7             	mov    %rax,%rdi
    c5f1:	e8 f4 9e ff ff       	call   64ea <_ZN2vk18DispatchLoaderBaseC1Ev>
    c5f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5fa:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c601:	00 
    c602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c606:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    c60d:	00 
    c60e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c612:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    c619:	00 
    c61a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c61e:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c625:	00 
    c626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c62a:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    c631:	00 
    c632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c636:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    c63d:	00 
    c63e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c642:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    c649:	00 
    c64a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c64e:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    c655:	00 
    c656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c65a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c65e:	48 89 50 50          	mov    %rdx,0x50(%rax)
    c662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c666:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
    c66d:	00 
    c66e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c672:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    c679:	00 
    c67a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c67e:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
    c685:	00 
    c686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c68a:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
    c691:	00 
    c692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c696:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
    c69d:	00 
    c69e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6a2:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
    c6a9:	00 00 00 00 
    c6ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6b1:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
    c6b8:	00 00 00 00 
    c6bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c0:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
    c6c7:	00 00 00 00 
    c6cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6cf:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
    c6d6:	00 00 00 00 
    c6da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6de:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
    c6e5:	00 00 00 00 
    c6e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ed:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
    c6f4:	00 00 00 00 
    c6f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6fc:	48 c7 80 b0 00 00 00 	movq   $0x0,0xb0(%rax)
    c703:	00 00 00 00 
    c707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c70b:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
    c712:	00 00 00 00 
    c716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71a:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)
    c721:	00 00 00 00 
    c725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c729:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
    c730:	00 00 00 00 
    c734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c738:	48 c7 80 d0 00 00 00 	movq   $0x0,0xd0(%rax)
    c73f:	00 00 00 00 
    c743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c747:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
    c74e:	00 00 00 00 
    c752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c756:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
    c75d:	00 00 00 00 
    c761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c765:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
    c76c:	00 00 00 00 
    c770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c774:	48 c7 80 f0 00 00 00 	movq   $0x0,0xf0(%rax)
    c77b:	00 00 00 00 
    c77f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c783:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
    c78a:	00 00 00 00 
    c78e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c792:	48 c7 80 00 01 00 00 	movq   $0x0,0x100(%rax)
    c799:	00 00 00 00 
    c79d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7a1:	48 c7 80 08 01 00 00 	movq   $0x0,0x108(%rax)
    c7a8:	00 00 00 00 
    c7ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7b0:	48 c7 80 10 01 00 00 	movq   $0x0,0x110(%rax)
    c7b7:	00 00 00 00 
    c7bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7bf:	48 c7 80 18 01 00 00 	movq   $0x0,0x118(%rax)
    c7c6:	00 00 00 00 
    c7ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ce:	48 c7 80 20 01 00 00 	movq   $0x0,0x120(%rax)
    c7d5:	00 00 00 00 
    c7d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7dd:	48 c7 80 28 01 00 00 	movq   $0x0,0x128(%rax)
    c7e4:	00 00 00 00 
    c7e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ec:	48 c7 80 30 01 00 00 	movq   $0x0,0x130(%rax)
    c7f3:	00 00 00 00 
    c7f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7fb:	48 c7 80 38 01 00 00 	movq   $0x0,0x138(%rax)
    c802:	00 00 00 00 
    c806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c80a:	48 c7 80 40 01 00 00 	movq   $0x0,0x140(%rax)
    c811:	00 00 00 00 
    c815:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c819:	48 c7 80 48 01 00 00 	movq   $0x0,0x148(%rax)
    c820:	00 00 00 00 
    c824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c828:	48 c7 80 50 01 00 00 	movq   $0x0,0x150(%rax)
    c82f:	00 00 00 00 
    c833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c837:	48 c7 80 58 01 00 00 	movq   $0x0,0x158(%rax)
    c83e:	00 00 00 00 
    c842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c846:	48 c7 80 60 01 00 00 	movq   $0x0,0x160(%rax)
    c84d:	00 00 00 00 
    c851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c855:	48 c7 80 68 01 00 00 	movq   $0x0,0x168(%rax)
    c85c:	00 00 00 00 
    c860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c864:	48 c7 80 70 01 00 00 	movq   $0x0,0x170(%rax)
    c86b:	00 00 00 00 
    c86f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c873:	48 c7 80 78 01 00 00 	movq   $0x0,0x178(%rax)
    c87a:	00 00 00 00 
    c87e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c882:	48 c7 80 80 01 00 00 	movq   $0x0,0x180(%rax)
    c889:	00 00 00 00 
    c88d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c891:	48 c7 80 88 01 00 00 	movq   $0x0,0x188(%rax)
    c898:	00 00 00 00 
    c89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8a0:	48 c7 80 90 01 00 00 	movq   $0x0,0x190(%rax)
    c8a7:	00 00 00 00 
    c8ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8af:	48 c7 80 98 01 00 00 	movq   $0x0,0x198(%rax)
    c8b6:	00 00 00 00 
    c8ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8be:	48 c7 80 a0 01 00 00 	movq   $0x0,0x1a0(%rax)
    c8c5:	00 00 00 00 
    c8c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8cd:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
    c8d4:	00 00 00 00 
    c8d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8dc:	48 c7 80 b0 01 00 00 	movq   $0x0,0x1b0(%rax)
    c8e3:	00 00 00 00 
    c8e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8eb:	48 c7 80 b8 01 00 00 	movq   $0x0,0x1b8(%rax)
    c8f2:	00 00 00 00 
    c8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8fa:	48 c7 80 c0 01 00 00 	movq   $0x0,0x1c0(%rax)
    c901:	00 00 00 00 
    c905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c909:	48 c7 80 c8 01 00 00 	movq   $0x0,0x1c8(%rax)
    c910:	00 00 00 00 
    c914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c918:	48 c7 80 d0 01 00 00 	movq   $0x0,0x1d0(%rax)
    c91f:	00 00 00 00 
    c923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c927:	48 c7 80 d8 01 00 00 	movq   $0x0,0x1d8(%rax)
    c92e:	00 00 00 00 
    c932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c936:	48 c7 80 e0 01 00 00 	movq   $0x0,0x1e0(%rax)
    c93d:	00 00 00 00 
    c941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c945:	48 c7 80 e8 01 00 00 	movq   $0x0,0x1e8(%rax)
    c94c:	00 00 00 00 
    c950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c954:	48 c7 80 f0 01 00 00 	movq   $0x0,0x1f0(%rax)
    c95b:	00 00 00 00 
    c95f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c963:	48 c7 80 f8 01 00 00 	movq   $0x0,0x1f8(%rax)
    c96a:	00 00 00 00 
    c96e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c972:	48 c7 80 00 02 00 00 	movq   $0x0,0x200(%rax)
    c979:	00 00 00 00 
    c97d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c981:	48 c7 80 08 02 00 00 	movq   $0x0,0x208(%rax)
    c988:	00 00 00 00 
    c98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c990:	48 c7 80 10 02 00 00 	movq   $0x0,0x210(%rax)
    c997:	00 00 00 00 
    c99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99f:	48 c7 80 18 02 00 00 	movq   $0x0,0x218(%rax)
    c9a6:	00 00 00 00 
    c9aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ae:	48 c7 80 20 02 00 00 	movq   $0x0,0x220(%rax)
    c9b5:	00 00 00 00 
    c9b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9bd:	48 c7 80 28 02 00 00 	movq   $0x0,0x228(%rax)
    c9c4:	00 00 00 00 
    c9c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9cc:	48 c7 80 30 02 00 00 	movq   $0x0,0x230(%rax)
    c9d3:	00 00 00 00 
    c9d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9db:	48 c7 80 38 02 00 00 	movq   $0x0,0x238(%rax)
    c9e2:	00 00 00 00 
    c9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ea:	48 c7 80 40 02 00 00 	movq   $0x0,0x240(%rax)
    c9f1:	00 00 00 00 
    c9f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9f9:	48 c7 80 48 02 00 00 	movq   $0x0,0x248(%rax)
    ca00:	00 00 00 00 
    ca04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca08:	48 c7 80 50 02 00 00 	movq   $0x0,0x250(%rax)
    ca0f:	00 00 00 00 
    ca13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca17:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
    ca1e:	00 00 00 00 
    ca22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca26:	48 c7 80 60 02 00 00 	movq   $0x0,0x260(%rax)
    ca2d:	00 00 00 00 
    ca31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca35:	48 c7 80 68 02 00 00 	movq   $0x0,0x268(%rax)
    ca3c:	00 00 00 00 
    ca40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca44:	48 c7 80 70 02 00 00 	movq   $0x0,0x270(%rax)
    ca4b:	00 00 00 00 
    ca4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca53:	48 c7 80 78 02 00 00 	movq   $0x0,0x278(%rax)
    ca5a:	00 00 00 00 
    ca5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca62:	48 c7 80 80 02 00 00 	movq   $0x0,0x280(%rax)
    ca69:	00 00 00 00 
    ca6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca71:	48 c7 80 88 02 00 00 	movq   $0x0,0x288(%rax)
    ca78:	00 00 00 00 
    ca7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca80:	48 c7 80 90 02 00 00 	movq   $0x0,0x290(%rax)
    ca87:	00 00 00 00 
    ca8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca8f:	48 c7 80 98 02 00 00 	movq   $0x0,0x298(%rax)
    ca96:	00 00 00 00 
    ca9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca9e:	48 c7 80 a0 02 00 00 	movq   $0x0,0x2a0(%rax)
    caa5:	00 00 00 00 
    caa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caad:	48 c7 80 a8 02 00 00 	movq   $0x0,0x2a8(%rax)
    cab4:	00 00 00 00 
    cab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cabc:	48 c7 80 b0 02 00 00 	movq   $0x0,0x2b0(%rax)
    cac3:	00 00 00 00 
    cac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cacb:	48 c7 80 b8 02 00 00 	movq   $0x0,0x2b8(%rax)
    cad2:	00 00 00 00 
    cad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cada:	48 c7 80 c0 02 00 00 	movq   $0x0,0x2c0(%rax)
    cae1:	00 00 00 00 
    cae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cae9:	48 c7 80 c8 02 00 00 	movq   $0x0,0x2c8(%rax)
    caf0:	00 00 00 00 
    caf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caf8:	48 c7 80 d0 02 00 00 	movq   $0x0,0x2d0(%rax)
    caff:	00 00 00 00 
    cb03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb07:	48 c7 80 d8 02 00 00 	movq   $0x0,0x2d8(%rax)
    cb0e:	00 00 00 00 
    cb12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb16:	48 c7 80 e0 02 00 00 	movq   $0x0,0x2e0(%rax)
    cb1d:	00 00 00 00 
    cb21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb25:	48 c7 80 e8 02 00 00 	movq   $0x0,0x2e8(%rax)
    cb2c:	00 00 00 00 
    cb30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb34:	48 c7 80 f0 02 00 00 	movq   $0x0,0x2f0(%rax)
    cb3b:	00 00 00 00 
    cb3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb43:	48 c7 80 f8 02 00 00 	movq   $0x0,0x2f8(%rax)
    cb4a:	00 00 00 00 
    cb4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb52:	48 c7 80 00 03 00 00 	movq   $0x0,0x300(%rax)
    cb59:	00 00 00 00 
    cb5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb61:	48 c7 80 08 03 00 00 	movq   $0x0,0x308(%rax)
    cb68:	00 00 00 00 
    cb6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb70:	48 c7 80 10 03 00 00 	movq   $0x0,0x310(%rax)
    cb77:	00 00 00 00 
    cb7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb7f:	48 c7 80 18 03 00 00 	movq   $0x0,0x318(%rax)
    cb86:	00 00 00 00 
    cb8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb8e:	48 c7 80 20 03 00 00 	movq   $0x0,0x320(%rax)
    cb95:	00 00 00 00 
    cb99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb9d:	48 c7 80 28 03 00 00 	movq   $0x0,0x328(%rax)
    cba4:	00 00 00 00 
    cba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbac:	48 c7 80 30 03 00 00 	movq   $0x0,0x330(%rax)
    cbb3:	00 00 00 00 
    cbb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbbb:	48 c7 80 38 03 00 00 	movq   $0x0,0x338(%rax)
    cbc2:	00 00 00 00 
    cbc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbca:	48 c7 80 40 03 00 00 	movq   $0x0,0x340(%rax)
    cbd1:	00 00 00 00 
        vkDestroyInstance           = PFN_vkDestroyInstance( vkGetInstanceProcAddr( instance, "vkDestroyInstance" ) );
    cbd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd9:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cbdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbe1:	48 8d 0d 98 2f 00 00 	lea    0x2f98(%rip),%rcx        # fb80 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
    cbe8:	48 89 ce             	mov    %rcx,%rsi
    cbeb:	48 89 c7             	mov    %rax,%rdi
    cbee:	ff d2                	call   *%rdx
    cbf0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cbf4:	48 89 42 10          	mov    %rax,0x10(%rdx)
        vkEnumeratePhysicalDevices  = PFN_vkEnumeratePhysicalDevices( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDevices" ) );
    cbf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbfc:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cc00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc04:	48 8d 0d 87 2f 00 00 	lea    0x2f87(%rip),%rcx        # fb92 <_ZNSt8__detailL19__atomic_spin_countE+0x16>
    cc0b:	48 89 ce             	mov    %rcx,%rsi
    cc0e:	48 89 c7             	mov    %rax,%rdi
    cc11:	ff d2                	call   *%rdx
    cc13:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc17:	48 89 42 18          	mov    %rax,0x18(%rdx)
        vkGetPhysicalDeviceFeatures = PFN_vkGetPhysicalDeviceFeatures( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures" ) );
    cc1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc1f:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cc23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc27:	48 8d 0d 7f 2f 00 00 	lea    0x2f7f(%rip),%rcx        # fbad <_ZNSt8__detailL19__atomic_spin_countE+0x31>
    cc2e:	48 89 ce             	mov    %rcx,%rsi
    cc31:	48 89 c7             	mov    %rax,%rdi
    cc34:	ff d2                	call   *%rdx
    cc36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc3a:	48 89 42 20          	mov    %rax,0x20(%rdx)
          PFN_vkGetPhysicalDeviceFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties" ) );
    cc3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc42:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cc46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc4a:	48 8d 0d 7f 2f 00 00 	lea    0x2f7f(%rip),%rcx        # fbd0 <_ZNSt8__detailL19__atomic_spin_countE+0x54>
    cc51:	48 89 ce             	mov    %rcx,%rsi
    cc54:	48 89 c7             	mov    %rax,%rdi
    cc57:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties =
    cc59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc5d:	48 89 42 28          	mov    %rax,0x28(%rdx)
          PFN_vkGetPhysicalDeviceImageFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties" ) );
    cc61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc65:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cc69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc6d:	48 8d 0d 84 2f 00 00 	lea    0x2f84(%rip),%rcx        # fbf8 <_ZNSt8__detailL19__atomic_spin_countE+0x7c>
    cc74:	48 89 ce             	mov    %rcx,%rsi
    cc77:	48 89 c7             	mov    %rax,%rdi
    cc7a:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties =
    cc7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc80:	48 89 42 30          	mov    %rax,0x30(%rdx)
        vkGetPhysicalDeviceProperties = PFN_vkGetPhysicalDeviceProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties" ) );
    cc84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc88:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cc8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc90:	48 8d 0d 8a 2f 00 00 	lea    0x2f8a(%rip),%rcx        # fc21 <_ZNSt8__detailL19__atomic_spin_countE+0xa5>
    cc97:	48 89 ce             	mov    %rcx,%rsi
    cc9a:	48 89 c7             	mov    %rax,%rdi
    cc9d:	ff d2                	call   *%rdx
    cc9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cca3:	48 89 42 38          	mov    %rax,0x38(%rdx)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties" ) );
    cca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccab:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ccaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccb3:	48 8d 0d 86 2f 00 00 	lea    0x2f86(%rip),%rcx        # fc40 <_ZNSt8__detailL19__atomic_spin_countE+0xc4>
    ccba:	48 89 ce             	mov    %rcx,%rsi
    ccbd:	48 89 c7             	mov    %rax,%rdi
    ccc0:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties =
    ccc2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ccc6:	48 89 42 40          	mov    %rax,0x40(%rdx)
          PFN_vkGetPhysicalDeviceMemoryProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties" ) );
    ccca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccce:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ccd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccd6:	48 8d 0d 93 2f 00 00 	lea    0x2f93(%rip),%rcx        # fc70 <_ZNSt8__detailL19__atomic_spin_countE+0xf4>
    ccdd:	48 89 ce             	mov    %rcx,%rsi
    cce0:	48 89 c7             	mov    %rax,%rdi
    cce3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties =
    cce5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cce9:	48 89 42 48          	mov    %rax,0x48(%rdx)
        vkCreateDevice = PFN_vkCreateDevice( vkGetInstanceProcAddr( instance, "vkCreateDevice" ) );
    cced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccf1:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ccf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccf9:	48 8d 0d 94 2f 00 00 	lea    0x2f94(%rip),%rcx        # fc94 <_ZNSt8__detailL19__atomic_spin_countE+0x118>
    cd00:	48 89 ce             	mov    %rcx,%rsi
    cd03:	48 89 c7             	mov    %rax,%rdi
    cd06:	ff d2                	call   *%rdx
    cd08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd0c:	48 89 42 58          	mov    %rax,0x58(%rdx)
          PFN_vkEnumerateDeviceExtensionProperties( vkGetInstanceProcAddr( instance, "vkEnumerateDeviceExtensionProperties" ) );
    cd10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd14:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cd18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd1c:	48 8d 0d 85 2f 00 00 	lea    0x2f85(%rip),%rcx        # fca8 <_ZNSt8__detailL19__atomic_spin_countE+0x12c>
    cd23:	48 89 ce             	mov    %rcx,%rsi
    cd26:	48 89 c7             	mov    %rax,%rdi
    cd29:	ff d2                	call   *%rdx
        vkEnumerateDeviceExtensionProperties =
    cd2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd2f:	48 89 42 60          	mov    %rax,0x60(%rdx)
        vkEnumerateDeviceLayerProperties = PFN_vkEnumerateDeviceLayerProperties( vkGetInstanceProcAddr( instance, "vkEnumerateDeviceLayerProperties" ) );
    cd33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd37:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cd3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd3f:	48 8d 0d 8a 2f 00 00 	lea    0x2f8a(%rip),%rcx        # fcd0 <_ZNSt8__detailL19__atomic_spin_countE+0x154>
    cd46:	48 89 ce             	mov    %rcx,%rsi
    cd49:	48 89 c7             	mov    %rax,%rdi
    cd4c:	ff d2                	call   *%rdx
    cd4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd52:	48 89 42 68          	mov    %rax,0x68(%rdx)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties" ) );
    cd56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd5a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cd5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd62:	48 8d 0d 8f 2f 00 00 	lea    0x2f8f(%rip),%rcx        # fcf8 <_ZNSt8__detailL19__atomic_spin_countE+0x17c>
    cd69:	48 89 ce             	mov    %rcx,%rsi
    cd6c:	48 89 c7             	mov    %rax,%rdi
    cd6f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties =
    cd71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd75:	48 89 42 70          	mov    %rax,0x70(%rdx)
        vkEnumeratePhysicalDeviceGroups = PFN_vkEnumeratePhysicalDeviceGroups( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceGroups" ) );
    cd79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7d:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cd81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd85:	48 8d 0d 9c 2f 00 00 	lea    0x2f9c(%rip),%rcx        # fd28 <_ZNSt8__detailL19__atomic_spin_countE+0x1ac>
    cd8c:	48 89 ce             	mov    %rcx,%rsi
    cd8f:	48 89 c7             	mov    %rax,%rdi
    cd92:	ff d2                	call   *%rdx
    cd94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd98:	48 89 42 78          	mov    %rax,0x78(%rdx)
        vkGetPhysicalDeviceFeatures2    = PFN_vkGetPhysicalDeviceFeatures2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures2" ) );
    cd9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cda0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cda4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cda8:	48 8d 0d 99 2f 00 00 	lea    0x2f99(%rip),%rcx        # fd48 <_ZNSt8__detailL19__atomic_spin_countE+0x1cc>
    cdaf:	48 89 ce             	mov    %rcx,%rsi
    cdb2:	48 89 c7             	mov    %rax,%rdi
    cdb5:	ff d2                	call   *%rdx
    cdb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cdbb:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
        vkGetPhysicalDeviceProperties2  = PFN_vkGetPhysicalDeviceProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties2" ) );
    cdc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdc6:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cdca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdce:	48 8d 0d 93 2f 00 00 	lea    0x2f93(%rip),%rcx        # fd68 <_ZNSt8__detailL19__atomic_spin_countE+0x1ec>
    cdd5:	48 89 ce             	mov    %rcx,%rsi
    cdd8:	48 89 c7             	mov    %rax,%rdi
    cddb:	ff d2                	call   *%rdx
    cddd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cde1:	48 89 82 88 00 00 00 	mov    %rax,0x88(%rdx)
          PFN_vkGetPhysicalDeviceFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties2" ) );
    cde8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdec:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cdf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdf4:	48 8d 0d 8d 2f 00 00 	lea    0x2f8d(%rip),%rcx        # fd88 <_ZNSt8__detailL19__atomic_spin_countE+0x20c>
    cdfb:	48 89 ce             	mov    %rcx,%rsi
    cdfe:	48 89 c7             	mov    %rax,%rdi
    ce01:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties2 =
    ce03:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce07:	48 89 82 90 00 00 00 	mov    %rax,0x90(%rdx)
          PFN_vkGetPhysicalDeviceImageFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties2" ) );
    ce0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce12:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ce16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce1a:	48 8d 0d 8f 2f 00 00 	lea    0x2f8f(%rip),%rcx        # fdb0 <_ZNSt8__detailL19__atomic_spin_countE+0x234>
    ce21:	48 89 ce             	mov    %rcx,%rsi
    ce24:	48 89 c7             	mov    %rax,%rdi
    ce27:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties2 =
    ce29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce2d:	48 89 82 98 00 00 00 	mov    %rax,0x98(%rdx)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties2" ) );
    ce34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce38:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ce3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce40:	48 8d 0d 99 2f 00 00 	lea    0x2f99(%rip),%rcx        # fde0 <_ZNSt8__detailL19__atomic_spin_countE+0x264>
    ce47:	48 89 ce             	mov    %rcx,%rsi
    ce4a:	48 89 c7             	mov    %rax,%rdi
    ce4d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties2 =
    ce4f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce53:	48 89 82 a0 00 00 00 	mov    %rax,0xa0(%rdx)
          PFN_vkGetPhysicalDeviceMemoryProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties2" ) );
    ce5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ce62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce66:	48 8d 0d a3 2f 00 00 	lea    0x2fa3(%rip),%rcx        # fe10 <_ZNSt8__detailL19__atomic_spin_countE+0x294>
    ce6d:	48 89 ce             	mov    %rcx,%rsi
    ce70:	48 89 c7             	mov    %rax,%rdi
    ce73:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties2 =
    ce75:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce79:	48 89 82 a8 00 00 00 	mov    %rax,0xa8(%rdx)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties2" ) );
    ce80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce84:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ce88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce8c:	48 8d 0d a5 2f 00 00 	lea    0x2fa5(%rip),%rcx        # fe38 <_ZNSt8__detailL19__atomic_spin_countE+0x2bc>
    ce93:	48 89 ce             	mov    %rcx,%rsi
    ce96:	48 89 c7             	mov    %rax,%rdi
    ce99:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties2 =
    ce9b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce9f:	48 89 82 b0 00 00 00 	mov    %rax,0xb0(%rdx)
          PFN_vkGetPhysicalDeviceExternalBufferProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalBufferProperties" ) );
    cea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceaa:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ceae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceb2:	48 8d 0d af 2f 00 00 	lea    0x2faf(%rip),%rcx        # fe68 <_ZNSt8__detailL19__atomic_spin_countE+0x2ec>
    ceb9:	48 89 ce             	mov    %rcx,%rsi
    cebc:	48 89 c7             	mov    %rax,%rdi
    cebf:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalBufferProperties =
    cec1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cec5:	48 89 82 b8 00 00 00 	mov    %rax,0xb8(%rdx)
          PFN_vkGetPhysicalDeviceExternalFenceProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalFenceProperties" ) );
    cecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ced0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ced4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ced8:	48 8d 0d b9 2f 00 00 	lea    0x2fb9(%rip),%rcx        # fe98 <_ZNSt8__detailL19__atomic_spin_countE+0x31c>
    cedf:	48 89 ce             	mov    %rcx,%rsi
    cee2:	48 89 c7             	mov    %rax,%rdi
    cee5:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalFenceProperties =
    cee7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ceeb:	48 89 82 c0 00 00 00 	mov    %rax,0xc0(%rdx)
          PFN_vkGetPhysicalDeviceExternalSemaphoreProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalSemaphoreProperties" ) );
    cef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cef6:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cefa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cefe:	48 8d 0d c3 2f 00 00 	lea    0x2fc3(%rip),%rcx        # fec8 <_ZNSt8__detailL19__atomic_spin_countE+0x34c>
    cf05:	48 89 ce             	mov    %rcx,%rsi
    cf08:	48 89 c7             	mov    %rax,%rdi
    cf0b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalSemaphoreProperties =
    cf0d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf11:	48 89 82 c8 00 00 00 	mov    %rax,0xc8(%rdx)
        vkGetPhysicalDeviceToolProperties = PFN_vkGetPhysicalDeviceToolProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceToolProperties" ) );
    cf18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf1c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cf20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf24:	48 8d 0d cd 2f 00 00 	lea    0x2fcd(%rip),%rcx        # fef8 <_ZNSt8__detailL19__atomic_spin_countE+0x37c>
    cf2b:	48 89 ce             	mov    %rcx,%rsi
    cf2e:	48 89 c7             	mov    %rax,%rdi
    cf31:	ff d2                	call   *%rdx
    cf33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf37:	48 89 82 d0 00 00 00 	mov    %rax,0xd0(%rdx)
        vkAcquireDrmDisplayEXT = PFN_vkAcquireDrmDisplayEXT( vkGetInstanceProcAddr( instance, "vkAcquireDrmDisplayEXT" ) );
    cf3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf42:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cf46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf4a:	48 8d 0d c9 2f 00 00 	lea    0x2fc9(%rip),%rcx        # ff1a <_ZNSt8__detailL19__atomic_spin_countE+0x39e>
    cf51:	48 89 ce             	mov    %rcx,%rsi
    cf54:	48 89 c7             	mov    %rax,%rdi
    cf57:	ff d2                	call   *%rdx
    cf59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf5d:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)
        vkGetDrmDisplayEXT     = PFN_vkGetDrmDisplayEXT( vkGetInstanceProcAddr( instance, "vkGetDrmDisplayEXT" ) );
    cf64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf68:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cf6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf70:	48 8d 0d ba 2f 00 00 	lea    0x2fba(%rip),%rcx        # ff31 <_ZNSt8__detailL19__atomic_spin_countE+0x3b5>
    cf77:	48 89 ce             	mov    %rcx,%rsi
    cf7a:	48 89 c7             	mov    %rax,%rdi
    cf7d:	ff d2                	call   *%rdx
    cf7f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf83:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)
          PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT" ) );
    cf8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cf92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf96:	48 8d 0d ab 2f 00 00 	lea    0x2fab(%rip),%rcx        # ff48 <_ZNSt8__detailL19__atomic_spin_countE+0x3cc>
    cf9d:	48 89 ce             	mov    %rcx,%rsi
    cfa0:	48 89 c7             	mov    %rax,%rdi
    cfa3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceCalibrateableTimeDomainsEXT =
    cfa5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cfa9:	48 89 82 f8 00 00 00 	mov    %rax,0xf8(%rdx)
        vkCreateDebugReportCallbackEXT  = PFN_vkCreateDebugReportCallbackEXT( vkGetInstanceProcAddr( instance, "vkCreateDebugReportCallbackEXT" ) );
    cfb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfb4:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cfb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfbc:	48 8d 0d b5 2f 00 00 	lea    0x2fb5(%rip),%rcx        # ff78 <_ZNSt8__detailL19__atomic_spin_countE+0x3fc>
    cfc3:	48 89 ce             	mov    %rcx,%rsi
    cfc6:	48 89 c7             	mov    %rax,%rdi
    cfc9:	ff d2                	call   *%rdx
    cfcb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cfcf:	48 89 82 00 01 00 00 	mov    %rax,0x100(%rdx)
        vkDestroyDebugReportCallbackEXT = PFN_vkDestroyDebugReportCallbackEXT( vkGetInstanceProcAddr( instance, "vkDestroyDebugReportCallbackEXT" ) );
    cfd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfda:	48 8b 50 50          	mov    0x50(%rax),%rdx
    cfde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfe2:	48 8d 0d af 2f 00 00 	lea    0x2faf(%rip),%rcx        # ff98 <_ZNSt8__detailL19__atomic_spin_countE+0x41c>
    cfe9:	48 89 ce             	mov    %rcx,%rsi
    cfec:	48 89 c7             	mov    %rax,%rdi
    cfef:	ff d2                	call   *%rdx
    cff1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cff5:	48 89 82 08 01 00 00 	mov    %rax,0x108(%rdx)
        vkDebugReportMessageEXT         = PFN_vkDebugReportMessageEXT( vkGetInstanceProcAddr( instance, "vkDebugReportMessageEXT" ) );
    cffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d000:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d004:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d008:	48 8d 0d a9 2f 00 00 	lea    0x2fa9(%rip),%rcx        # ffb8 <_ZNSt8__detailL19__atomic_spin_countE+0x43c>
    d00f:	48 89 ce             	mov    %rcx,%rsi
    d012:	48 89 c7             	mov    %rax,%rdi
    d015:	ff d2                	call   *%rdx
    d017:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d01b:	48 89 82 10 01 00 00 	mov    %rax,0x110(%rdx)
        vkCreateDebugUtilsMessengerEXT  = PFN_vkCreateDebugUtilsMessengerEXT( vkGetInstanceProcAddr( instance, "vkCreateDebugUtilsMessengerEXT" ) );
    d022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d026:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d02a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d02e:	48 8d 0d 9b 2f 00 00 	lea    0x2f9b(%rip),%rcx        # ffd0 <_ZNSt8__detailL19__atomic_spin_countE+0x454>
    d035:	48 89 ce             	mov    %rcx,%rsi
    d038:	48 89 c7             	mov    %rax,%rdi
    d03b:	ff d2                	call   *%rdx
    d03d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d041:	48 89 82 18 01 00 00 	mov    %rax,0x118(%rdx)
        vkDestroyDebugUtilsMessengerEXT = PFN_vkDestroyDebugUtilsMessengerEXT( vkGetInstanceProcAddr( instance, "vkDestroyDebugUtilsMessengerEXT" ) );
    d048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d050:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d054:	48 8d 0d 95 2f 00 00 	lea    0x2f95(%rip),%rcx        # fff0 <_ZNSt8__detailL19__atomic_spin_countE+0x474>
    d05b:	48 89 ce             	mov    %rcx,%rsi
    d05e:	48 89 c7             	mov    %rax,%rdi
    d061:	ff d2                	call   *%rdx
    d063:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d067:	48 89 82 20 01 00 00 	mov    %rax,0x120(%rdx)
        vkSubmitDebugUtilsMessageEXT    = PFN_vkSubmitDebugUtilsMessageEXT( vkGetInstanceProcAddr( instance, "vkSubmitDebugUtilsMessageEXT" ) );
    d06e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d072:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d07a:	48 8d 0d 8f 2f 00 00 	lea    0x2f8f(%rip),%rcx        # 10010 <_ZNSt8__detailL19__atomic_spin_countE+0x494>
    d081:	48 89 ce             	mov    %rcx,%rsi
    d084:	48 89 c7             	mov    %rax,%rdi
    d087:	ff d2                	call   *%rdx
    d089:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d08d:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
        vkReleaseDisplayEXT = PFN_vkReleaseDisplayEXT( vkGetInstanceProcAddr( instance, "vkReleaseDisplayEXT" ) );
    d094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d098:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0a0:	48 8d 0d 86 2f 00 00 	lea    0x2f86(%rip),%rcx        # 1002d <_ZNSt8__detailL19__atomic_spin_countE+0x4b1>
    d0a7:	48 89 ce             	mov    %rcx,%rsi
    d0aa:	48 89 c7             	mov    %rax,%rdi
    d0ad:	ff d2                	call   *%rdx
    d0af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d0b3:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT" ) );
    d0ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0be:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d0c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0c6:	48 8d 0d 7b 2f 00 00 	lea    0x2f7b(%rip),%rcx        # 10048 <_ZNSt8__detailL19__atomic_spin_countE+0x4cc>
    d0cd:	48 89 ce             	mov    %rcx,%rsi
    d0d0:	48 89 c7             	mov    %rax,%rdi
    d0d3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilities2EXT =
    d0d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d0d9:	48 89 82 48 01 00 00 	mov    %rax,0x148(%rdx)
        vkCreateHeadlessSurfaceEXT = PFN_vkCreateHeadlessSurfaceEXT( vkGetInstanceProcAddr( instance, "vkCreateHeadlessSurfaceEXT" ) );
    d0e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e4:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d0e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0ec:	48 8d 0d 80 2f 00 00 	lea    0x2f80(%rip),%rcx        # 10073 <_ZNSt8__detailL19__atomic_spin_countE+0x4f7>
    d0f3:	48 89 ce             	mov    %rcx,%rsi
    d0f6:	48 89 c7             	mov    %rax,%rdi
    d0f9:	ff d2                	call   *%rdx
    d0fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d0ff:	48 89 82 58 01 00 00 	mov    %rax,0x158(%rdx)
          PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMultisamplePropertiesEXT" ) );
    d106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d10a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d10e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d112:	48 8d 0d 77 2f 00 00 	lea    0x2f77(%rip),%rcx        # 10090 <_ZNSt8__detailL19__atomic_spin_countE+0x514>
    d119:	48 89 ce             	mov    %rcx,%rsi
    d11c:	48 89 c7             	mov    %rax,%rdi
    d11f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMultisamplePropertiesEXT =
    d121:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d125:	48 89 82 68 01 00 00 	mov    %rax,0x168(%rdx)
          PFN_vkGetPhysicalDeviceToolPropertiesEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceToolPropertiesEXT" ) );
    d12c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d130:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d138:	48 8d 0d 81 2f 00 00 	lea    0x2f81(%rip),%rcx        # 100c0 <_ZNSt8__detailL19__atomic_spin_countE+0x544>
    d13f:	48 89 ce             	mov    %rcx,%rsi
    d142:	48 89 c7             	mov    %rax,%rdi
    d145:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceToolPropertiesEXT =
    d147:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d14b:	48 89 82 70 01 00 00 	mov    %rax,0x170(%rdx)
        if ( !vkGetPhysicalDeviceToolProperties )
    d152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d156:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    d15d:	48 85 c0             	test   %rax,%rax
    d160:	75 16                	jne    d178 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xba2>
          vkGetPhysicalDeviceToolProperties = vkGetPhysicalDeviceToolPropertiesEXT;
    d162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d166:	48 8b 90 70 01 00 00 	mov    0x170(%rax),%rdx
    d16d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d171:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
          PFN_vkGetPhysicalDevicePresentRectanglesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDevicePresentRectanglesKHR" ) );
    d178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d17c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d180:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d184:	48 8d 0d 5d 2f 00 00 	lea    0x2f5d(%rip),%rcx        # 100e8 <_ZNSt8__detailL19__atomic_spin_countE+0x56c>
    d18b:	48 89 ce             	mov    %rcx,%rsi
    d18e:	48 89 c7             	mov    %rax,%rdi
    d191:	ff d2                	call   *%rdx
        vkGetPhysicalDevicePresentRectanglesKHR =
    d193:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d197:	48 89 82 90 01 00 00 	mov    %rax,0x190(%rdx)
        vkEnumeratePhysicalDeviceGroupsKHR = PFN_vkEnumeratePhysicalDeviceGroupsKHR( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceGroupsKHR" ) );
    d19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1a2:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d1a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1aa:	48 8d 0d 5f 2f 00 00 	lea    0x2f5f(%rip),%rcx        # 10110 <_ZNSt8__detailL19__atomic_spin_countE+0x594>
    d1b1:	48 89 ce             	mov    %rcx,%rsi
    d1b4:	48 89 c7             	mov    %rax,%rdi
    d1b7:	ff d2                	call   *%rdx
    d1b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d1bd:	48 89 82 98 01 00 00 	mov    %rax,0x198(%rdx)
        if ( !vkEnumeratePhysicalDeviceGroups )
    d1c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1c8:	48 8b 40 78          	mov    0x78(%rax),%rax
    d1cc:	48 85 c0             	test   %rax,%rax
    d1cf:	75 13                	jne    d1e4 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xc0e>
          vkEnumeratePhysicalDeviceGroups = vkEnumeratePhysicalDeviceGroupsKHR;
    d1d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1d5:	48 8b 90 98 01 00 00 	mov    0x198(%rax),%rdx
    d1dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e0:	48 89 50 78          	mov    %rdx,0x78(%rax)
          PFN_vkGetPhysicalDeviceDisplayPropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPropertiesKHR" ) );
    d1e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d1ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1f0:	48 8d 0d 41 2f 00 00 	lea    0x2f41(%rip),%rcx        # 10138 <_ZNSt8__detailL19__atomic_spin_countE+0x5bc>
    d1f7:	48 89 ce             	mov    %rcx,%rsi
    d1fa:	48 89 c7             	mov    %rax,%rdi
    d1fd:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPropertiesKHR =
    d1ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d203:	48 89 82 a0 01 00 00 	mov    %rax,0x1a0(%rdx)
          PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR" ) );
    d20a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d212:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d216:	48 8d 0d 43 2f 00 00 	lea    0x2f43(%rip),%rcx        # 10160 <_ZNSt8__detailL19__atomic_spin_countE+0x5e4>
    d21d:	48 89 ce             	mov    %rcx,%rsi
    d220:	48 89 c7             	mov    %rax,%rdi
    d223:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPlanePropertiesKHR =
    d225:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d229:	48 89 82 a8 01 00 00 	mov    %rax,0x1a8(%rdx)
          PFN_vkGetDisplayPlaneSupportedDisplaysKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneSupportedDisplaysKHR" ) );
    d230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d234:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d23c:	48 8d 0d 4d 2f 00 00 	lea    0x2f4d(%rip),%rcx        # 10190 <_ZNSt8__detailL19__atomic_spin_countE+0x614>
    d243:	48 89 ce             	mov    %rcx,%rsi
    d246:	48 89 c7             	mov    %rax,%rdi
    d249:	ff d2                	call   *%rdx
        vkGetDisplayPlaneSupportedDisplaysKHR =
    d24b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d24f:	48 89 82 b0 01 00 00 	mov    %rax,0x1b0(%rdx)
        vkGetDisplayModePropertiesKHR    = PFN_vkGetDisplayModePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayModePropertiesKHR" ) );
    d256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d25a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d25e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d262:	48 8d 0d 4d 2f 00 00 	lea    0x2f4d(%rip),%rcx        # 101b6 <_ZNSt8__detailL19__atomic_spin_countE+0x63a>
    d269:	48 89 ce             	mov    %rcx,%rsi
    d26c:	48 89 c7             	mov    %rax,%rdi
    d26f:	ff d2                	call   *%rdx
    d271:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d275:	48 89 82 b8 01 00 00 	mov    %rax,0x1b8(%rdx)
        vkCreateDisplayModeKHR           = PFN_vkCreateDisplayModeKHR( vkGetInstanceProcAddr( instance, "vkCreateDisplayModeKHR" ) );
    d27c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d280:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d284:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d288:	48 8d 0d 45 2f 00 00 	lea    0x2f45(%rip),%rcx        # 101d4 <_ZNSt8__detailL19__atomic_spin_countE+0x658>
    d28f:	48 89 ce             	mov    %rcx,%rsi
    d292:	48 89 c7             	mov    %rax,%rdi
    d295:	ff d2                	call   *%rdx
    d297:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d29b:	48 89 82 c0 01 00 00 	mov    %rax,0x1c0(%rdx)
        vkGetDisplayPlaneCapabilitiesKHR = PFN_vkGetDisplayPlaneCapabilitiesKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneCapabilitiesKHR" ) );
    d2a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2a6:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d2aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2ae:	48 8d 0d 3b 2f 00 00 	lea    0x2f3b(%rip),%rcx        # 101f0 <_ZNSt8__detailL19__atomic_spin_countE+0x674>
    d2b5:	48 89 ce             	mov    %rcx,%rsi
    d2b8:	48 89 c7             	mov    %rax,%rdi
    d2bb:	ff d2                	call   *%rdx
    d2bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2c1:	48 89 82 c8 01 00 00 	mov    %rax,0x1c8(%rdx)
        vkCreateDisplayPlaneSurfaceKHR   = PFN_vkCreateDisplayPlaneSurfaceKHR( vkGetInstanceProcAddr( instance, "vkCreateDisplayPlaneSurfaceKHR" ) );
    d2c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2cc:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d2d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2d4:	48 8d 0d 3d 2f 00 00 	lea    0x2f3d(%rip),%rcx        # 10218 <_ZNSt8__detailL19__atomic_spin_countE+0x69c>
    d2db:	48 89 ce             	mov    %rcx,%rsi
    d2de:	48 89 c7             	mov    %rax,%rdi
    d2e1:	ff d2                	call   *%rdx
    d2e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2e7:	48 89 82 d0 01 00 00 	mov    %rax,0x1d0(%rdx)
          PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalFencePropertiesKHR" ) );
    d2ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f2:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d2f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2fa:	48 8d 0d 37 2f 00 00 	lea    0x2f37(%rip),%rcx        # 10238 <_ZNSt8__detailL19__atomic_spin_countE+0x6bc>
    d301:	48 89 ce             	mov    %rcx,%rsi
    d304:	48 89 c7             	mov    %rax,%rdi
    d307:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalFencePropertiesKHR =
    d309:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d30d:	48 89 82 d8 01 00 00 	mov    %rax,0x1d8(%rdx)
        if ( !vkGetPhysicalDeviceExternalFenceProperties )
    d314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d318:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    d31f:	48 85 c0             	test   %rax,%rax
    d322:	75 16                	jne    d33a <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xd64>
          vkGetPhysicalDeviceExternalFenceProperties = vkGetPhysicalDeviceExternalFencePropertiesKHR;
    d324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d328:	48 8b 90 d8 01 00 00 	mov    0x1d8(%rax),%rdx
    d32f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d333:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
          PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalBufferPropertiesKHR" ) );
    d33a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d33e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d342:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d346:	48 8d 0d 1b 2f 00 00 	lea    0x2f1b(%rip),%rcx        # 10268 <_ZNSt8__detailL19__atomic_spin_countE+0x6ec>
    d34d:	48 89 ce             	mov    %rcx,%rsi
    d350:	48 89 c7             	mov    %rax,%rdi
    d353:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalBufferPropertiesKHR =
    d355:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d359:	48 89 82 e0 01 00 00 	mov    %rax,0x1e0(%rdx)
        if ( !vkGetPhysicalDeviceExternalBufferProperties )
    d360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d364:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
    d36b:	48 85 c0             	test   %rax,%rax
    d36e:	75 16                	jne    d386 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xdb0>
          vkGetPhysicalDeviceExternalBufferProperties = vkGetPhysicalDeviceExternalBufferPropertiesKHR;
    d370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d374:	48 8b 90 e0 01 00 00 	mov    0x1e0(%rax),%rdx
    d37b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d37f:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
          PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR" ) );
    d386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d38a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d38e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d392:	48 8d 0d ff 2e 00 00 	lea    0x2eff(%rip),%rcx        # 10298 <_ZNSt8__detailL19__atomic_spin_countE+0x71c>
    d399:	48 89 ce             	mov    %rcx,%rsi
    d39c:	48 89 c7             	mov    %rax,%rdi
    d39f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalSemaphorePropertiesKHR =
    d3a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3a5:	48 89 82 e8 01 00 00 	mov    %rax,0x1e8(%rdx)
        if ( !vkGetPhysicalDeviceExternalSemaphoreProperties )
    d3ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b0:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    d3b7:	48 85 c0             	test   %rax,%rax
    d3ba:	75 16                	jne    d3d2 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xdfc>
          vkGetPhysicalDeviceExternalSemaphoreProperties = vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
    d3bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3c0:	48 8b 90 e8 01 00 00 	mov    0x1e8(%rax),%rdx
    d3c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3cb:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
          PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFragmentShadingRatesKHR" ) );
    d3d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3d6:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d3da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3de:	48 8d 0d eb 2e 00 00 	lea    0x2eeb(%rip),%rcx        # 102d0 <_ZNSt8__detailL19__atomic_spin_countE+0x754>
    d3e5:	48 89 ce             	mov    %rcx,%rsi
    d3e8:	48 89 c7             	mov    %rax,%rdi
    d3eb:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFragmentShadingRatesKHR =
    d3ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3f1:	48 89 82 f0 01 00 00 	mov    %rax,0x1f0(%rdx)
          PFN_vkGetPhysicalDeviceDisplayProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayProperties2KHR" ) );
    d3f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3fc:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d404:	48 8d 0d f5 2e 00 00 	lea    0x2ef5(%rip),%rcx        # 10300 <_ZNSt8__detailL19__atomic_spin_countE+0x784>
    d40b:	48 89 ce             	mov    %rcx,%rsi
    d40e:	48 89 c7             	mov    %rax,%rdi
    d411:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayProperties2KHR =
    d413:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d417:	48 89 82 f8 01 00 00 	mov    %rax,0x1f8(%rdx)
          PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR" ) );
    d41e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d422:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d42a:	48 8d 0d ff 2e 00 00 	lea    0x2eff(%rip),%rcx        # 10330 <_ZNSt8__detailL19__atomic_spin_countE+0x7b4>
    d431:	48 89 ce             	mov    %rcx,%rsi
    d434:	48 89 c7             	mov    %rax,%rdi
    d437:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPlaneProperties2KHR =
    d439:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d43d:	48 89 82 00 02 00 00 	mov    %rax,0x200(%rdx)
        vkGetDisplayModeProperties2KHR    = PFN_vkGetDisplayModeProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetDisplayModeProperties2KHR" ) );
    d444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d448:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d44c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d450:	48 8d 0d 09 2f 00 00 	lea    0x2f09(%rip),%rcx        # 10360 <_ZNSt8__detailL19__atomic_spin_countE+0x7e4>
    d457:	48 89 ce             	mov    %rcx,%rsi
    d45a:	48 89 c7             	mov    %rax,%rdi
    d45d:	ff d2                	call   *%rdx
    d45f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d463:	48 89 82 08 02 00 00 	mov    %rax,0x208(%rdx)
        vkGetDisplayPlaneCapabilities2KHR = PFN_vkGetDisplayPlaneCapabilities2KHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneCapabilities2KHR" ) );
    d46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d46e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d476:	48 8d 0d 03 2f 00 00 	lea    0x2f03(%rip),%rcx        # 10380 <_ZNSt8__detailL19__atomic_spin_countE+0x804>
    d47d:	48 89 ce             	mov    %rcx,%rsi
    d480:	48 89 c7             	mov    %rax,%rdi
    d483:	ff d2                	call   *%rdx
    d485:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d489:	48 89 82 10 02 00 00 	mov    %rax,0x210(%rdx)
        vkGetPhysicalDeviceFeatures2KHR = PFN_vkGetPhysicalDeviceFeatures2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures2KHR" ) );
    d490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d494:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d49c:	48 8d 0d 05 2f 00 00 	lea    0x2f05(%rip),%rcx        # 103a8 <_ZNSt8__detailL19__atomic_spin_countE+0x82c>
    d4a3:	48 89 ce             	mov    %rcx,%rsi
    d4a6:	48 89 c7             	mov    %rax,%rdi
    d4a9:	ff d2                	call   *%rdx
    d4ab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4af:	48 89 82 18 02 00 00 	mov    %rax,0x218(%rdx)
        if ( !vkGetPhysicalDeviceFeatures2 )
    d4b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4ba:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    d4c1:	48 85 c0             	test   %rax,%rax
    d4c4:	75 16                	jne    d4dc <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf06>
          vkGetPhysicalDeviceFeatures2 = vkGetPhysicalDeviceFeatures2KHR;
    d4c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4ca:	48 8b 90 18 02 00 00 	mov    0x218(%rax),%rdx
    d4d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4d5:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
        vkGetPhysicalDeviceProperties2KHR = PFN_vkGetPhysicalDeviceProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties2KHR" ) );
    d4dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4e0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d4e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4e8:	48 8d 0d d9 2e 00 00 	lea    0x2ed9(%rip),%rcx        # 103c8 <_ZNSt8__detailL19__atomic_spin_countE+0x84c>
    d4ef:	48 89 ce             	mov    %rcx,%rsi
    d4f2:	48 89 c7             	mov    %rax,%rdi
    d4f5:	ff d2                	call   *%rdx
    d4f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4fb:	48 89 82 20 02 00 00 	mov    %rax,0x220(%rdx)
        if ( !vkGetPhysicalDeviceProperties2 )
    d502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d506:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    d50d:	48 85 c0             	test   %rax,%rax
    d510:	75 16                	jne    d528 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf52>
          vkGetPhysicalDeviceProperties2 = vkGetPhysicalDeviceProperties2KHR;
    d512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d516:	48 8b 90 20 02 00 00 	mov    0x220(%rax),%rdx
    d51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d521:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
          PFN_vkGetPhysicalDeviceFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties2KHR" ) );
    d528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d52c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d530:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d534:	48 8d 0d b5 2e 00 00 	lea    0x2eb5(%rip),%rcx        # 103f0 <_ZNSt8__detailL19__atomic_spin_countE+0x874>
    d53b:	48 89 ce             	mov    %rcx,%rsi
    d53e:	48 89 c7             	mov    %rax,%rdi
    d541:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties2KHR =
    d543:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d547:	48 89 82 28 02 00 00 	mov    %rax,0x228(%rdx)
        if ( !vkGetPhysicalDeviceFormatProperties2 )
    d54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d552:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    d559:	48 85 c0             	test   %rax,%rax
    d55c:	75 16                	jne    d574 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf9e>
          vkGetPhysicalDeviceFormatProperties2 = vkGetPhysicalDeviceFormatProperties2KHR;
    d55e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d562:	48 8b 90 28 02 00 00 	mov    0x228(%rax),%rdx
    d569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d56d:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
          PFN_vkGetPhysicalDeviceImageFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties2KHR" ) );
    d574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d578:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d57c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d580:	48 8d 0d 91 2e 00 00 	lea    0x2e91(%rip),%rcx        # 10418 <_ZNSt8__detailL19__atomic_spin_countE+0x89c>
    d587:	48 89 ce             	mov    %rcx,%rsi
    d58a:	48 89 c7             	mov    %rax,%rdi
    d58d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties2KHR =
    d58f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d593:	48 89 82 30 02 00 00 	mov    %rax,0x230(%rdx)
        if ( !vkGetPhysicalDeviceImageFormatProperties2 )
    d59a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d59e:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    d5a5:	48 85 c0             	test   %rax,%rax
    d5a8:	75 16                	jne    d5c0 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xfea>
          vkGetPhysicalDeviceImageFormatProperties2 = vkGetPhysicalDeviceImageFormatProperties2KHR;
    d5aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5ae:	48 8b 90 30 02 00 00 	mov    0x230(%rax),%rdx
    d5b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5b9:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties2KHR" ) );
    d5c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5c4:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d5c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5cc:	48 8d 0d 75 2e 00 00 	lea    0x2e75(%rip),%rcx        # 10448 <_ZNSt8__detailL19__atomic_spin_countE+0x8cc>
    d5d3:	48 89 ce             	mov    %rcx,%rsi
    d5d6:	48 89 c7             	mov    %rax,%rdi
    d5d9:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties2KHR =
    d5db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d5df:	48 89 82 38 02 00 00 	mov    %rax,0x238(%rdx)
        if ( !vkGetPhysicalDeviceQueueFamilyProperties2 )
    d5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5ea:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
    d5f1:	48 85 c0             	test   %rax,%rax
    d5f4:	75 16                	jne    d60c <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x1036>
          vkGetPhysicalDeviceQueueFamilyProperties2 = vkGetPhysicalDeviceQueueFamilyProperties2KHR;
    d5f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5fa:	48 8b 90 38 02 00 00 	mov    0x238(%rax),%rdx
    d601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d605:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
          PFN_vkGetPhysicalDeviceMemoryProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties2KHR" ) );
    d60c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d610:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d618:	48 8d 0d 59 2e 00 00 	lea    0x2e59(%rip),%rcx        # 10478 <_ZNSt8__detailL19__atomic_spin_countE+0x8fc>
    d61f:	48 89 ce             	mov    %rcx,%rsi
    d622:	48 89 c7             	mov    %rax,%rdi
    d625:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties2KHR =
    d627:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d62b:	48 89 82 40 02 00 00 	mov    %rax,0x240(%rdx)
        if ( !vkGetPhysicalDeviceMemoryProperties2 )
    d632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d636:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
    d63d:	48 85 c0             	test   %rax,%rax
    d640:	75 16                	jne    d658 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x1082>
          vkGetPhysicalDeviceMemoryProperties2 = vkGetPhysicalDeviceMemoryProperties2KHR;
    d642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d646:	48 8b 90 40 02 00 00 	mov    0x240(%rax),%rdx
    d64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d651:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR" ) );
    d658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d65c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d660:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d664:	48 8d 0d 35 2e 00 00 	lea    0x2e35(%rip),%rcx        # 104a0 <_ZNSt8__detailL19__atomic_spin_countE+0x924>
    d66b:	48 89 ce             	mov    %rcx,%rsi
    d66e:	48 89 c7             	mov    %rax,%rdi
    d671:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties2KHR =
    d673:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d677:	48 89 82 48 02 00 00 	mov    %rax,0x248(%rdx)
        if ( !vkGetPhysicalDeviceSparseImageFormatProperties2 )
    d67e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d682:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
    d689:	48 85 c0             	test   %rax,%rax
    d68c:	75 16                	jne    d6a4 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x10ce>
          vkGetPhysicalDeviceSparseImageFormatProperties2 = vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
    d68e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d692:	48 8b 90 48 02 00 00 	mov    0x248(%rax),%rdx
    d699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d69d:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
          PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR" ) );
    d6a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6a8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d6ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6b0:	48 8d 0d 21 2e 00 00 	lea    0x2e21(%rip),%rcx        # 104d8 <_ZNSt8__detailL19__atomic_spin_countE+0x95c>
    d6b7:	48 89 ce             	mov    %rcx,%rsi
    d6ba:	48 89 c7             	mov    %rax,%rdi
    d6bd:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilities2KHR =
    d6bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d6c3:	48 89 82 50 02 00 00 	mov    %rax,0x250(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceFormats2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceFormats2KHR" ) );
    d6ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6ce:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d6d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6d6:	48 8d 0d 2b 2e 00 00 	lea    0x2e2b(%rip),%rcx        # 10508 <_ZNSt8__detailL19__atomic_spin_countE+0x98c>
    d6dd:	48 89 ce             	mov    %rcx,%rsi
    d6e0:	48 89 c7             	mov    %rax,%rdi
    d6e3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceFormats2KHR =
    d6e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d6e9:	48 89 82 58 02 00 00 	mov    %rax,0x258(%rdx)
          vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR" ) );
    d6f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6f4:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d6f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6fc:	48 8d 0d 2d 2e 00 00 	lea    0x2e2d(%rip),%rcx        # 10530 <_ZNSt8__detailL19__atomic_spin_countE+0x9b4>
    d703:	48 89 ce             	mov    %rcx,%rsi
    d706:	48 89 c7             	mov    %rax,%rdi
    d709:	ff d2                	call   *%rdx
        vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
    d70b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d70f:	48 89 82 60 02 00 00 	mov    %rax,0x260(%rdx)
          vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR" ) );
    d716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d71a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d71e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d722:	48 8d 0d 47 2e 00 00 	lea    0x2e47(%rip),%rcx        # 10570 <_ZNSt8__detailL19__atomic_spin_countE+0x9f4>
    d729:	48 89 ce             	mov    %rcx,%rsi
    d72c:	48 89 c7             	mov    %rax,%rdi
    d72f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
    d731:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d735:	48 89 82 68 02 00 00 	mov    %rax,0x268(%rdx)
        vkDestroySurfaceKHR = PFN_vkDestroySurfaceKHR( vkGetInstanceProcAddr( instance, "vkDestroySurfaceKHR" ) );
    d73c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d740:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d744:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d748:	48 8d 0d 59 2e 00 00 	lea    0x2e59(%rip),%rcx        # 105a8 <_ZNSt8__detailL19__atomic_spin_countE+0xa2c>
    d74f:	48 89 ce             	mov    %rcx,%rsi
    d752:	48 89 c7             	mov    %rax,%rdi
    d755:	ff d2                	call   *%rdx
    d757:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d75b:	48 89 82 70 02 00 00 	mov    %rax,0x270(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceSupportKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceSupportKHR" ) );
    d762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d766:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d76a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d76e:	48 8d 0d 4b 2e 00 00 	lea    0x2e4b(%rip),%rcx        # 105c0 <_ZNSt8__detailL19__atomic_spin_countE+0xa44>
    d775:	48 89 ce             	mov    %rcx,%rsi
    d778:	48 89 c7             	mov    %rax,%rdi
    d77b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceSupportKHR =
    d77d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d781:	48 89 82 78 02 00 00 	mov    %rax,0x278(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR" ) );
    d788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d78c:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d794:	48 8d 0d 4d 2e 00 00 	lea    0x2e4d(%rip),%rcx        # 105e8 <_ZNSt8__detailL19__atomic_spin_countE+0xa6c>
    d79b:	48 89 ce             	mov    %rcx,%rsi
    d79e:	48 89 c7             	mov    %rax,%rdi
    d7a1:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilitiesKHR =
    d7a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7a7:	48 89 82 80 02 00 00 	mov    %rax,0x280(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceFormatsKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceFormatsKHR" ) );
    d7ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7b2:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d7b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7ba:	48 8d 0d 57 2e 00 00 	lea    0x2e57(%rip),%rcx        # 10618 <_ZNSt8__detailL19__atomic_spin_countE+0xa9c>
    d7c1:	48 89 ce             	mov    %rcx,%rsi
    d7c4:	48 89 c7             	mov    %rax,%rdi
    d7c7:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceFormatsKHR =
    d7c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7cd:	48 89 82 88 02 00 00 	mov    %rax,0x288(%rdx)
          PFN_vkGetPhysicalDeviceSurfacePresentModesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfacePresentModesKHR" ) );
    d7d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7d8:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d7dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7e0:	48 8d 0d 59 2e 00 00 	lea    0x2e59(%rip),%rcx        # 10640 <_ZNSt8__detailL19__atomic_spin_countE+0xac4>
    d7e7:	48 89 ce             	mov    %rcx,%rsi
    d7ea:	48 89 c7             	mov    %rax,%rdi
    d7ed:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfacePresentModesKHR =
    d7ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7f3:	48 89 82 90 02 00 00 	mov    %rax,0x290(%rdx)
          PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV" ) );
    d7fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7fe:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d802:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d806:	48 8d 0d 63 2e 00 00 	lea    0x2e63(%rip),%rcx        # 10670 <_ZNSt8__detailL19__atomic_spin_countE+0xaf4>
    d80d:	48 89 ce             	mov    %rcx,%rsi
    d810:	48 89 c7             	mov    %rax,%rdi
    d813:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceCooperativeMatrixPropertiesNV =
    d815:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d819:	48 89 82 10 03 00 00 	mov    %rax,0x310(%rdx)
          vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV" ) );
    d820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d824:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d828:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d82c:	48 8d 0d 75 2e 00 00 	lea    0x2e75(%rip),%rcx        # 106a8 <_ZNSt8__detailL19__atomic_spin_countE+0xb2c>
    d833:	48 89 ce             	mov    %rcx,%rsi
    d836:	48 89 c7             	mov    %rax,%rdi
    d839:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
    d83b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d83f:	48 89 82 18 03 00 00 	mov    %rax,0x318(%rdx)
          PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV" ) );
    d846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d84a:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d84e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d852:	48 8d 0d 97 2e 00 00 	lea    0x2e97(%rip),%rcx        # 106f0 <_ZNSt8__detailL19__atomic_spin_countE+0xb74>
    d859:	48 89 ce             	mov    %rcx,%rsi
    d85c:	48 89 c7             	mov    %rax,%rdi
    d85f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalImageFormatPropertiesNV =
    d861:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d865:	48 89 82 20 03 00 00 	mov    %rax,0x320(%rdx)
          PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceOpticalFlowImageFormatsNV" ) );
    d86c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d870:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d874:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d878:	48 8d 0d a9 2e 00 00 	lea    0x2ea9(%rip),%rcx        # 10728 <_ZNSt8__detailL19__atomic_spin_countE+0xbac>
    d87f:	48 89 ce             	mov    %rcx,%rsi
    d882:	48 89 c7             	mov    %rax,%rdi
    d885:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceOpticalFlowImageFormatsNV =
    d887:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d88b:	48 89 82 28 03 00 00 	mov    %rax,0x328(%rdx)
        vkGetDeviceProcAddr = PFN_vkGetDeviceProcAddr( vkGetInstanceProcAddr( instance, "vkGetDeviceProcAddr" ) );
    d892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d896:	48 8b 50 50          	mov    0x50(%rax),%rdx
    d89a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d89e:	48 8d 0d b0 2e 00 00 	lea    0x2eb0(%rip),%rcx        # 10755 <_ZNSt8__detailL19__atomic_spin_countE+0xbd9>
    d8a5:	48 89 ce             	mov    %rcx,%rsi
    d8a8:	48 89 c7             	mov    %rax,%rdi
    d8ab:	ff d2                	call   *%rdx
    d8ad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d8b1:	48 89 82 40 03 00 00 	mov    %rax,0x340(%rdx)
      }
    d8b8:	90                   	nop
    d8b9:	c9                   	leave
    d8ba:	c3                   	ret
    d8bb:	90                   	nop

000000000000d8bc <_ZNK2vk4raii7Context13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher const * getDispatcher() const
    d8bc:	55                   	push   %rbp
    d8bd:	48 89 e5             	mov    %rsp,%rbp
    d8c0:	48 83 ec 10          	sub    $0x10,%rsp
    d8c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    d8c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8cc:	48 83 c0 08          	add    $0x8,%rax
    d8d0:	48 89 c7             	mov    %rax,%rdi
    d8d3:	e8 ae 01 00 00       	call   da86 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEptEv>
    d8d8:	48 89 c7             	mov    %rax,%rdi
    d8db:	e8 c0 8b ff ff       	call   64a0 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    d8e0:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    d8e6:	74 28                	je     d910 <_ZNK2vk4raii7Context13getDispatcherEv+0x54>
    d8e8:	48 8d 05 81 2e 00 00 	lea    0x2e81(%rip),%rax        # 10770 <_ZNSt8__detailL19__atomic_spin_countE+0xbf4>
    d8ef:	48 89 c1             	mov    %rax,%rcx
    d8f2:	ba b1 09 00 00       	mov    $0x9b1,%edx
    d8f7:	48 8d 05 c2 2e 00 00 	lea    0x2ec2(%rip),%rax        # 107c0 <_ZNSt8__detailL19__atomic_spin_countE+0xc44>
    d8fe:	48 89 c6             	mov    %rax,%rsi
    d901:	48 8d 05 e0 2e 00 00 	lea    0x2ee0(%rip),%rax        # 107e8 <_ZNSt8__detailL19__atomic_spin_countE+0xc6c>
    d908:	48 89 c7             	mov    %rax,%rdi
    d90b:	e8 d0 77 ff ff       	call   50e0 <__assert_fail@plt>
        return &*m_dispatcher;
    d910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d914:	48 83 c0 08          	add    $0x8,%rax
    d918:	48 89 c7             	mov    %rax,%rdi
    d91b:	e8 80 01 00 00       	call   daa0 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv>
      }
    d920:	c9                   	leave
    d921:	c3                   	ret

000000000000d922 <_ZN2vk8InstanceC1Ev>:
    VULKAN_HPP_CONSTEXPR Instance() = default;
    d922:	55                   	push   %rbp
    d923:	48 89 e5             	mov    %rsp,%rbp
    d926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d92a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d92e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d935:	90                   	nop
    d936:	5d                   	pop    %rbp
    d937:	c3                   	ret

000000000000d938 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      Instance( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Context const &                context,
    d938:	55                   	push   %rbp
    d939:	48 89 e5             	mov    %rsp,%rbp
    d93c:	41 55                	push   %r13
    d93e:	41 54                	push   %r12
    d940:	53                   	push   %rbx
    d941:	48 83 ec 48          	sub    $0x48,%rsp
    d945:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d949:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    d94d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    d951:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
    d955:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d959:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d960:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d964:	48 89 c7             	mov    %rax,%rdi
    d967:	e8 b6 ff ff ff       	call   d922 <_ZN2vk8InstanceC1Ev>
    d96c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d970:	48 89 c7             	mov    %rax,%rdi
    d973:	e8 6a 01 00 00       	call   dae2 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
    d978:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d97c:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d980:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d984:	48 83 c0 10          	add    $0x10,%rax
    d988:	48 89 c7             	mov    %rax,%rdi
    d98b:	e8 9c 01 00 00       	call   db2c <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>
          static_cast<VULKAN_HPP_NAMESPACE::Result>( context.getDispatcher()->vkCreateInstance( reinterpret_cast<const VkInstanceCreateInfo *>( &createInfo ),
    d990:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d994:	48 89 c7             	mov    %rax,%rdi
    d997:	e8 20 ff ff ff       	call   d8bc <_ZNK2vk4raii7Context13getDispatcherEv>
    d99c:	4c 8b 40 18          	mov    0x18(%rax),%r8
                                                                                                reinterpret_cast<VkInstance *>( &m_instance ) ) );
    d9a0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
                                                                                                reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
    d9a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d9a8:	48 8b 48 08          	mov    0x8(%rax),%rcx
          static_cast<VULKAN_HPP_NAMESPACE::Result>( context.getDispatcher()->vkCreateInstance( reinterpret_cast<const VkInstanceCreateInfo *>( &createInfo ),
    d9ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d9b0:	48 89 ce             	mov    %rcx,%rsi
    d9b3:	48 89 c7             	mov    %rax,%rdi
    d9b6:	41 ff d0             	call   *%r8
    d9b9:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
    d9bc:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    d9c0:	74 14                	je     d9d6 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x9e>
          throwResultException( result, "vkCreateInstance" );
    d9c2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d9c5:	48 8d 15 54 2e 00 00 	lea    0x2e54(%rip),%rdx        # 10820 <_ZNSt8__detailL19__atomic_spin_countE+0xca4>
    d9cc:	48 89 d6             	mov    %rdx,%rsi
    d9cf:	89 c7                	mov    %eax,%edi
    d9d1:	e8 c8 e0 ff ff       	call   ba9e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    d9d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d9da:	48 8d 58 10          	lea    0x10(%rax),%rbx
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    d9de:	bf 48 03 00 00       	mov    $0x348,%edi
    d9e3:	e8 e8 77 ff ff       	call   51d0 <_Znwm@plt>
    d9e8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    d9ec:	41 bd 01 00 00 00    	mov    $0x1,%r13d
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    d9f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d9f6:	48 89 c7             	mov    %rax,%rdi
    d9f9:	e8 88 b4 ff ff       	call   8e86 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    d9fe:	49 89 c4             	mov    %rax,%r12
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    da01:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    da05:	48 89 c7             	mov    %rax,%rdi
    da08:	e8 af fe ff ff       	call   d8bc <_ZNK2vk4raii7Context13getDispatcherEv>
    da0d:	48 8b 40 10          	mov    0x10(%rax),%rax
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    da11:	4c 89 e2             	mov    %r12,%rdx
    da14:	48 89 c6             	mov    %rax,%rsi
    da17:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    da1b:	e8 b6 eb ff ff       	call   c5d6 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    da20:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    da24:	48 89 df             	mov    %rbx,%rdi
    da27:	e8 28 c0 ff ff       	call   9a54 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
    da2c:	eb 36                	jmp    da64 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x12c>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
    da2e:	48 89 c3             	mov    %rax,%rbx
    da31:	45 84 ed             	test   %r13b,%r13b
    da34:	74 13                	je     da49 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x111>
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
    da36:	be 48 03 00 00       	mov    $0x348,%esi
    da3b:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    da3f:	e8 9c 77 ff ff       	call   51e0 <_ZdlPvm@plt>
    da44:	eb 03                	jmp    da49 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x111>
      }
    da46:	48 89 c3             	mov    %rax,%rbx
    da49:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    da4d:	48 83 c0 10          	add    $0x10,%rax
    da51:	48 89 c7             	mov    %rax,%rdi
    da54:	e8 97 bf ff ff       	call   99f0 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>
    da59:	48 89 d8             	mov    %rbx,%rax
    da5c:	48 89 c7             	mov    %rax,%rdi
    da5f:	e8 9c 78 ff ff       	call   5300 <_Unwind_Resume@plt>
    da64:	48 83 c4 48          	add    $0x48,%rsp
    da68:	5b                   	pop    %rbx
    da69:	41 5c                	pop    %r12
    da6b:	41 5d                	pop    %r13
    da6d:	5d                   	pop    %rbp
    da6e:	c3                   	ret
    da6f:	90                   	nop

000000000000da70 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
    da70:	55                   	push   %rbp
    da71:	48 89 e5             	mov    %rsp,%rbp
    da74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da7c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    da82:	90                   	nop
    da83:	5d                   	pop    %rbp
    da84:	c3                   	ret
    da85:	90                   	nop

000000000000da86 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
    da86:	55                   	push   %rbp
    da87:	48 89 e5             	mov    %rsp,%rbp
    da8a:	48 83 ec 10          	sub    $0x10,%rsp
    da8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    da92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da96:	48 89 c7             	mov    %rax,%rdi
    da99:	e8 ce 00 00 00       	call   db6c <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
      }
    da9e:	c9                   	leave
    da9f:	c3                   	ret

000000000000daa0 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    daa0:	55                   	push   %rbp
    daa1:	48 89 e5             	mov    %rsp,%rbp
    daa4:	48 83 ec 10          	sub    $0x10,%rsp
    daa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    daac:	e8 3b 86 ff ff       	call   60ec <_ZSt23__is_constant_evaluatedv>
    dab1:	84 c0                	test   %al,%al
    dab3:	74 18                	je     dacd <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    dab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dab9:	48 89 c7             	mov    %rax,%rdi
    dabc:	e8 ab 00 00 00       	call   db6c <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
    dac1:	48 85 c0             	test   %rax,%rax
    dac4:	75 07                	jne    dacd <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    dac6:	b8 01 00 00 00       	mov    $0x1,%eax
    dacb:	eb 05                	jmp    dad2 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x32>
    dacd:	b8 00 00 00 00       	mov    $0x0,%eax
    dad2:	84 c0                	test   %al,%al
	return *get();
    dad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dad8:	48 89 c7             	mov    %rax,%rdi
    dadb:	e8 8c 00 00 00       	call   db6c <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
      }
    dae0:	c9                   	leave
    dae1:	c3                   	ret

000000000000dae2 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>:
    operator RefType *() const VULKAN_HPP_NOEXCEPT
    dae2:	55                   	push   %rbp
    dae3:	48 89 e5             	mov    %rsp,%rbp
    dae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return m_ptr;
    daea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daee:	48 8b 00             	mov    (%rax),%rax
    }
    daf1:	5d                   	pop    %rbp
    daf2:	c3                   	ret
    daf3:	90                   	nop

000000000000daf4 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1Ev>:
      __uniq_ptr_impl() = default;
    daf4:	55                   	push   %rbp
    daf5:	48 89 e5             	mov    %rsp,%rbp
    daf8:	48 83 ec 10          	sub    $0x10,%rsp
    dafc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db04:	48 89 c7             	mov    %rax,%rdi
    db07:	e8 7a 00 00 00       	call   db86 <_ZNSt5tupleIJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
    db0c:	90                   	nop
    db0d:	c9                   	leave
    db0e:	c3                   	ret
    db0f:	90                   	nop

000000000000db10 <_ZNSt15__uniq_ptr_dataIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    db10:	55                   	push   %rbp
    db11:	48 89 e5             	mov    %rsp,%rbp
    db14:	48 83 ec 10          	sub    $0x10,%rsp
    db18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db20:	48 89 c7             	mov    %rax,%rdi
    db23:	e8 cc ff ff ff       	call   daf4 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1Ev>
    db28:	90                   	nop
    db29:	c9                   	leave
    db2a:	c3                   	ret
    db2b:	90                   	nop

000000000000db2c <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>:
	constexpr unique_ptr() noexcept
    db2c:	55                   	push   %rbp
    db2d:	48 89 e5             	mov    %rsp,%rbp
    db30:	48 83 ec 10          	sub    $0x10,%rsp
    db34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    db38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db3c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    db43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db47:	48 89 c7             	mov    %rax,%rdi
    db4a:	e8 c1 ff ff ff       	call   db10 <_ZNSt15__uniq_ptr_dataIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>
	{ }
    db4f:	90                   	nop
    db50:	c9                   	leave
    db51:	c3                   	ret

000000000000db52 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>:
    Optional( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    db52:	55                   	push   %rbp
    db53:	48 89 e5             	mov    %rsp,%rbp
    db56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      m_ptr = nullptr;
    db5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db62:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    db69:	90                   	nop
    db6a:	5d                   	pop    %rbp
    db6b:	c3                   	ret

000000000000db6c <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
    db6c:	55                   	push   %rbp
    db6d:	48 89 e5             	mov    %rsp,%rbp
    db70:	48 83 ec 10          	sub    $0x10,%rsp
    db74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    db78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db7c:	48 89 c7             	mov    %rax,%rdi
    db7f:	e8 1e 00 00 00       	call   dba2 <_ZNKSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    db84:	c9                   	leave
    db85:	c3                   	ret

000000000000db86 <_ZNSt5tupleIJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:
	tuple()
    db86:	55                   	push   %rbp
    db87:	48 89 e5             	mov    %rsp,%rbp
    db8a:	48 83 ec 10          	sub    $0x10,%rsp
    db8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    db92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db96:	48 89 c7             	mov    %rax,%rdi
    db99:	e8 22 00 00 00       	call   dbc0 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1Ev>
    db9e:	90                   	nop
    db9f:	c9                   	leave
    dba0:	c3                   	ret
    dba1:	90                   	nop

000000000000dba2 <_ZNKSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    dba2:	55                   	push   %rbp
    dba3:	48 89 e5             	mov    %rsp,%rbp
    dba6:	48 83 ec 10          	sub    $0x10,%rsp
    dbaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbb2:	48 89 c7             	mov    %rax,%rdi
    dbb5:	e8 2d 00 00 00       	call   dbe7 <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
    dbba:	48 8b 00             	mov    (%rax),%rax
    dbbd:	c9                   	leave
    dbbe:	c3                   	ret
    dbbf:	90                   	nop

000000000000dbc0 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
    dbc0:	55                   	push   %rbp
    dbc1:	48 89 e5             	mov    %rsp,%rbp
    dbc4:	48 83 ec 10          	sub    $0x10,%rsp
    dbc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    dbcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbd0:	48 89 c7             	mov    %rax,%rdi
    dbd3:	e8 2a 00 00 00       	call   dc02 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEEC1Ev>
    dbd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbdc:	48 89 c7             	mov    %rax,%rdi
    dbdf:	e8 3a 00 00 00       	call   dc1e <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EEC1Ev>
    dbe4:	90                   	nop
    dbe5:	c9                   	leave
    dbe6:	c3                   	ret

000000000000dbe7 <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:
    get(const tuple<_Elements...>& __t) noexcept
    dbe7:	55                   	push   %rbp
    dbe8:	48 89 e5             	mov    %rsp,%rbp
    dbeb:	48 83 ec 10          	sub    $0x10,%rsp
    dbef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    dbf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbf7:	48 89 c7             	mov    %rax,%rdi
    dbfa:	e8 35 00 00 00       	call   dc34 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
    dbff:	c9                   	leave
    dc00:	c3                   	ret
    dc01:	90                   	nop

000000000000dc02 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEEC1Ev>:
      _Tuple_impl()
    dc02:	55                   	push   %rbp
    dc03:	48 89 e5             	mov    %rsp,%rbp
    dc06:	48 83 ec 10          	sub    $0x10,%rsp
    dc0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    dc0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc12:	48 89 c7             	mov    %rax,%rdi
    dc15:	e8 34 00 00 00       	call   dc4e <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EEC1Ev>
    dc1a:	90                   	nop
    dc1b:	c9                   	leave
    dc1c:	c3                   	ret
    dc1d:	90                   	nop

000000000000dc1e <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
    dc1e:	55                   	push   %rbp
    dc1f:	48 89 e5             	mov    %rsp,%rbp
    dc22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    dc26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    dc31:	90                   	nop
    dc32:	5d                   	pop    %rbp
    dc33:	c3                   	ret

000000000000dc34 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    dc34:	55                   	push   %rbp
    dc35:	48 89 e5             	mov    %rsp,%rbp
    dc38:	48 83 ec 10          	sub    $0x10,%rsp
    dc3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    dc40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc44:	48 89 c7             	mov    %rax,%rdi
    dc47:	e8 0d 00 00 00       	call   dc59 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
    dc4c:	c9                   	leave
    dc4d:	c3                   	ret

000000000000dc4e <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
    dc4e:	55                   	push   %rbp
    dc4f:	48 89 e5             	mov    %rsp,%rbp
    dc52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    dc56:	90                   	nop
    dc57:	5d                   	pop    %rbp
    dc58:	c3                   	ret

000000000000dc59 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    dc59:	55                   	push   %rbp
    dc5a:	48 89 e5             	mov    %rsp,%rbp
    dc5d:	48 83 ec 10          	sub    $0x10,%rsp
    dc61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc69:	48 89 c7             	mov    %rax,%rdi
    dc6c:	e8 02 00 00 00       	call   dc73 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERKS4_>
    dc71:	c9                   	leave
    dc72:	c3                   	ret

000000000000dc73 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    dc73:	55                   	push   %rbp
    dc74:	48 89 e5             	mov    %rsp,%rbp
    dc77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc7f:	5d                   	pop    %rbp
    dc80:	c3                   	ret

Disassembly of section .fini:

000000000000dc84 <_fini>:
    dc84:	48 83 ec 08          	sub    $0x8,%rsp
    dc88:	48 83 c4 08          	add    $0x8,%rsp
    dc8c:	c3                   	ret
