
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 ad df 00 00 	mov    0xdfad(%rip),%rax        # ffb8 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <vkDeviceWaitIdle@plt-0x10>:
    2020:	ff 35 ca df 00 00    	push   0xdfca(%rip)        # fff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc df 00 00    	jmp    *0xdfcc(%rip)        # fff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <vkDeviceWaitIdle@plt>:
    2030:	ff 25 ca df 00 00    	jmp    *0xdfca(%rip)        # 10000 <vkDeviceWaitIdle@Base>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <glfwDestroyWindow@plt>:
    2040:	ff 25 c2 df 00 00    	jmp    *0xdfc2(%rip)        # 10008 <glfwDestroyWindow@Base>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <_ZSt17__throw_bad_allocv@plt>:
    2050:	ff 25 ba df 00 00    	jmp    *0xdfba(%rip)        # 10010 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <_ZNSt13runtime_errorC1EPKc@plt>:
    2060:	ff 25 b2 df 00 00    	jmp    *0xdfb2(%rip)        # 10018 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <vkGetPhysicalDeviceProperties@plt>:
    2070:	ff 25 aa df 00 00    	jmp    *0xdfaa(%rip)        # 10020 <vkGetPhysicalDeviceProperties@Base>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <__cxa_begin_catch@plt>:
    2080:	ff 25 a2 df 00 00    	jmp    *0xdfa2(%rip)        # 10028 <__cxa_begin_catch@CXXABI_1.3>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <strlen@plt>:
    2090:	ff 25 9a df 00 00    	jmp    *0xdf9a(%rip)        # 10030 <strlen@GLIBC_2.2.5>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <memcmp@plt>:
    20a0:	ff 25 92 df 00 00    	jmp    *0xdf92(%rip)        # 10038 <memcmp@GLIBC_2.2.5>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <__cxa_allocate_exception@plt>:
    20b0:	ff 25 8a df 00 00    	jmp    *0xdf8a(%rip)        # 10040 <__cxa_allocate_exception@CXXABI_1.3>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <_ZSt20__throw_length_errorPKc@plt>:
    20c0:	ff 25 82 df 00 00    	jmp    *0xdf82(%rip)        # 10048 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <vkEnumeratePhysicalDevices@plt>:
    20d0:	ff 25 7a df 00 00    	jmp    *0xdf7a(%rip)        # 10050 <vkEnumeratePhysicalDevices@Base>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    20e0:	ff 25 72 df 00 00    	jmp    *0xdf72(%rip)        # 10058 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <__cxa_free_exception@plt>:
    20f0:	ff 25 6a df 00 00    	jmp    *0xdf6a(%rip)        # 10060 <__cxa_free_exception@CXXABI_1.3>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    2100:	ff 25 62 df 00 00    	jmp    *0xdf62(%rip)        # 10068 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <glfwGetRequiredInstanceExtensions@plt>:
    2110:	ff 25 5a df 00 00    	jmp    *0xdf5a(%rip)        # 10070 <glfwGetRequiredInstanceExtensions@Base>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    2120:	ff 25 52 df 00 00    	jmp    *0xdf52(%rip)        # 10078 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <vkDestroyDevice@plt>:
    2130:	ff 25 4a df 00 00    	jmp    *0xdf4a(%rip)        # 10080 <vkDestroyDevice@Base>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <vkEnumerateInstanceExtensionProperties@plt>:
    2140:	ff 25 42 df 00 00    	jmp    *0xdf42(%rip)        # 10088 <vkEnumerateInstanceExtensionProperties@Base>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <glfwWindowHint@plt>:
    2150:	ff 25 3a df 00 00    	jmp    *0xdf3a(%rip)        # 10090 <glfwWindowHint@Base>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <__cxa_atexit@plt>:
    2160:	ff 25 32 df 00 00    	jmp    *0xdf32(%rip)        # 10098 <__cxa_atexit@GLIBC_2.2.5>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <vkGetPhysicalDeviceProperties2@plt>:
    2170:	ff 25 2a df 00 00    	jmp    *0xdf2a(%rip)        # 100a0 <vkGetPhysicalDeviceProperties2@Base>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <vkGetInstanceProcAddr@plt>:
    2180:	ff 25 22 df 00 00    	jmp    *0xdf22(%rip)        # 100a8 <vkGetInstanceProcAddr@Base>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <glfwPollEvents@plt>:
    2190:	ff 25 1a df 00 00    	jmp    *0xdf1a(%rip)        # 100b0 <glfwPollEvents@Base>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    21a0:	ff 25 12 df 00 00    	jmp    *0xdf12(%rip)        # 100b8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <_Znwm@plt>:
    21b0:	ff 25 0a df 00 00    	jmp    *0xdf0a(%rip)        # 100c0 <_Znwm@GLIBCXX_3.4>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <_ZdlPvm@plt>:
    21c0:	ff 25 02 df 00 00    	jmp    *0xdf02(%rip)        # 100c8 <_ZdlPvm@CXXABI_1.3.9>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <vkDestroyInstance@plt>:
    21d0:	ff 25 fa de 00 00    	jmp    *0xdefa(%rip)        # 100d0 <vkDestroyInstance@Base>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <glfwTerminate@plt>:
    21e0:	ff 25 f2 de 00 00    	jmp    *0xdef2(%rip)        # 100d8 <glfwTerminate@Base>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <_ZNSolsEPFRSoS_E@plt>:
    21f0:	ff 25 ea de 00 00    	jmp    *0xdeea(%rip)        # 100e0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <vkEnumerateInstanceLayerProperties@plt>:
    2200:	ff 25 e2 de 00 00    	jmp    *0xdee2(%rip)        # 100e8 <vkEnumerateInstanceLayerProperties@Base>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002210 <glfwInit@plt>:
    2210:	ff 25 da de 00 00    	jmp    *0xdeda(%rip)        # 100f0 <glfwInit@Base>
    2216:	68 1e 00 00 00       	push   $0x1e
    221b:	e9 00 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    2220:	ff 25 d2 de 00 00    	jmp    *0xded2(%rip)        # 100f8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    2226:	68 1f 00 00 00       	push   $0x1f
    222b:	e9 f0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002230 <vkCreateInstance@plt>:
    2230:	ff 25 ca de 00 00    	jmp    *0xdeca(%rip)        # 10100 <vkCreateInstance@Base>
    2236:	68 20 00 00 00       	push   $0x20
    223b:	e9 e0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002240 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    2240:	ff 25 c2 de 00 00    	jmp    *0xdec2(%rip)        # 10108 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    2246:	68 21 00 00 00       	push   $0x21
    224b:	e9 d0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002250 <vkGetDeviceQueue@plt>:
    2250:	ff 25 ba de 00 00    	jmp    *0xdeba(%rip)        # 10110 <vkGetDeviceQueue@Base>
    2256:	68 22 00 00 00       	push   $0x22
    225b:	e9 c0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    2260:	ff 25 b2 de 00 00    	jmp    *0xdeb2(%rip)        # 10118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    2266:	68 23 00 00 00       	push   $0x23
    226b:	e9 b0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002270 <vkEnumerateDeviceExtensionProperties@plt>:
    2270:	ff 25 aa de 00 00    	jmp    *0xdeaa(%rip)        # 10120 <vkEnumerateDeviceExtensionProperties@Base>
    2276:	68 24 00 00 00       	push   $0x24
    227b:	e9 a0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    2280:	ff 25 a2 de 00 00    	jmp    *0xdea2(%rip)        # 10128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    2286:	68 25 00 00 00       	push   $0x25
    228b:	e9 90 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002290 <vkCreateDevice@plt>:
    2290:	ff 25 9a de 00 00    	jmp    *0xde9a(%rip)        # 10130 <vkCreateDevice@Base>
    2296:	68 26 00 00 00       	push   $0x26
    229b:	e9 80 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022a0 <_ZNSt8ios_base4InitC1Ev@plt>:
    22a0:	ff 25 92 de 00 00    	jmp    *0xde92(%rip)        # 10138 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    22a6:	68 27 00 00 00       	push   $0x27
    22ab:	e9 70 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022b0 <glfwCreateWindowSurface@plt>:
    22b0:	ff 25 8a de 00 00    	jmp    *0xde8a(%rip)        # 10140 <glfwCreateWindowSurface@Base>
    22b6:	68 28 00 00 00       	push   $0x28
    22bb:	e9 60 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022c0 <glfwCreateWindow@plt>:
    22c0:	ff 25 82 de 00 00    	jmp    *0xde82(%rip)        # 10148 <glfwCreateWindow@Base>
    22c6:	68 29 00 00 00       	push   $0x29
    22cb:	e9 50 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022d0 <memmove@plt>:
    22d0:	ff 25 7a de 00 00    	jmp    *0xde7a(%rip)        # 10150 <memmove@GLIBC_2.2.5>
    22d6:	68 2a 00 00 00       	push   $0x2a
    22db:	e9 40 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022e0 <__cxa_end_catch@plt>:
    22e0:	ff 25 72 de 00 00    	jmp    *0xde72(%rip)        # 10158 <__cxa_end_catch@CXXABI_1.3>
    22e6:	68 2b 00 00 00       	push   $0x2b
    22eb:	e9 30 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022f0 <__cxa_throw@plt>:
    22f0:	ff 25 6a de 00 00    	jmp    *0xde6a(%rip)        # 10160 <__cxa_throw@CXXABI_1.3>
    22f6:	68 2c 00 00 00       	push   $0x2c
    22fb:	e9 20 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002300 <vkDestroySurfaceKHR@plt>:
    2300:	ff 25 62 de 00 00    	jmp    *0xde62(%rip)        # 10168 <vkDestroySurfaceKHR@Base>
    2306:	68 2d 00 00 00       	push   $0x2d
    230b:	e9 10 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002310 <_Unwind_Resume@plt>:
    2310:	ff 25 5a de 00 00    	jmp    *0xde5a(%rip)        # 10170 <_Unwind_Resume@GCC_3.0>
    2316:	68 2e 00 00 00       	push   $0x2e
    231b:	e9 00 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002320 <_ZNSt9exceptionD2Ev@plt>:
    2320:	ff 25 52 de 00 00    	jmp    *0xde52(%rip)        # 10178 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    2326:	68 2f 00 00 00       	push   $0x2f
    232b:	e9 f0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002330 <glfwWindowShouldClose@plt>:
    2330:	ff 25 4a de 00 00    	jmp    *0xde4a(%rip)        # 10180 <glfwWindowShouldClose@Base>
    2336:	68 30 00 00 00       	push   $0x30
    233b:	e9 e0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002340 <_ZNSolsEd@plt>:
    2340:	ff 25 42 de 00 00    	jmp    *0xde42(%rip)        # 10188 <_ZNSolsEd@GLIBCXX_3.4>
    2346:	68 31 00 00 00       	push   $0x31
    234b:	e9 d0 fc ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

0000000000002350 <__cxa_finalize@plt>:
    2350:	ff 25 3a dc 00 00    	jmp    *0xdc3a(%rip)        # ff90 <__cxa_finalize@GLIBC_2.2.5>
    2356:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002360 <_start>:
    2360:	31 ed                	xor    %ebp,%ebp
    2362:	49 89 d1             	mov    %rdx,%r9
    2365:	5e                   	pop    %rsi
    2366:	48 89 e2             	mov    %rsp,%rdx
    2369:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    236d:	50                   	push   %rax
    236e:	54                   	push   %rsp
    236f:	45 31 c0             	xor    %r8d,%r8d
    2372:	31 c9                	xor    %ecx,%ecx
    2374:	48 8d 3d 24 01 00 00 	lea    0x124(%rip),%rdi        # 249f <main>
    237b:	ff 15 1f dc 00 00    	call   *0xdc1f(%rip)        # ffa0 <__libc_start_main@GLIBC_2.34>
    2381:	f4                   	hlt
    2382:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2389:	00 00 00 
    238c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002390 <deregister_tm_clones>:
    2390:	48 8d 3d 19 de 00 00 	lea    0xde19(%rip),%rdi        # 101b0 <__TMC_END__>
    2397:	48 8d 05 12 de 00 00 	lea    0xde12(%rip),%rax        # 101b0 <__TMC_END__>
    239e:	48 39 f8             	cmp    %rdi,%rax
    23a1:	74 15                	je     23b8 <deregister_tm_clones+0x28>
    23a3:	48 8b 05 06 dc 00 00 	mov    0xdc06(%rip),%rax        # ffb0 <_ITM_deregisterTMCloneTable@Base>
    23aa:	48 85 c0             	test   %rax,%rax
    23ad:	74 09                	je     23b8 <deregister_tm_clones+0x28>
    23af:	ff e0                	jmp    *%rax
    23b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    23b8:	c3                   	ret
    23b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000023c0 <register_tm_clones>:
    23c0:	48 8d 3d e9 dd 00 00 	lea    0xdde9(%rip),%rdi        # 101b0 <__TMC_END__>
    23c7:	48 8d 35 e2 dd 00 00 	lea    0xdde2(%rip),%rsi        # 101b0 <__TMC_END__>
    23ce:	48 29 fe             	sub    %rdi,%rsi
    23d1:	48 89 f0             	mov    %rsi,%rax
    23d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    23d8:	48 c1 f8 03          	sar    $0x3,%rax
    23dc:	48 01 c6             	add    %rax,%rsi
    23df:	48 d1 fe             	sar    %rsi
    23e2:	74 14                	je     23f8 <register_tm_clones+0x38>
    23e4:	48 8b 05 d5 db 00 00 	mov    0xdbd5(%rip),%rax        # ffc0 <_ITM_registerTMCloneTable@Base>
    23eb:	48 85 c0             	test   %rax,%rax
    23ee:	74 08                	je     23f8 <register_tm_clones+0x38>
    23f0:	ff e0                	jmp    *%rax
    23f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    23f8:	c3                   	ret
    23f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002400 <__do_global_dtors_aux>:
    2400:	f3 0f 1e fa          	endbr64
    2404:	80 3d e5 df 00 00 00 	cmpb   $0x0,0xdfe5(%rip)        # 103f0 <completed.0>
    240b:	75 2b                	jne    2438 <__do_global_dtors_aux+0x38>
    240d:	55                   	push   %rbp
    240e:	48 83 3d 7a db 00 00 	cmpq   $0x0,0xdb7a(%rip)        # ff90 <__cxa_finalize@GLIBC_2.2.5>
    2415:	00 
    2416:	48 89 e5             	mov    %rsp,%rbp
    2419:	74 0c                	je     2427 <__do_global_dtors_aux+0x27>
    241b:	48 8b 3d 76 dd 00 00 	mov    0xdd76(%rip),%rdi        # 10198 <__dso_handle>
    2422:	e8 29 ff ff ff       	call   2350 <__cxa_finalize@plt>
    2427:	e8 64 ff ff ff       	call   2390 <deregister_tm_clones>
    242c:	c6 05 bd df 00 00 01 	movb   $0x1,0xdfbd(%rip)        # 103f0 <completed.0>
    2433:	5d                   	pop    %rbp
    2434:	c3                   	ret
    2435:	0f 1f 00             	nopl   (%rax)
    2438:	c3                   	ret
    2439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002440 <frame_dummy>:
    2440:	f3 0f 1e fa          	endbr64
    2444:	e9 77 ff ff ff       	jmp    23c0 <register_tm_clones>

0000000000002449 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    2449:	55                   	push   %rbp
    244a:	48 89 e5             	mov    %rsp,%rbp
    244d:	53                   	push   %rbx
    244e:	48 83 ec 58          	sub    $0x58,%rsp
  VulkanApp app;
    2452:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2456:	48 89 c7             	mov    %rax,%rdi
    2459:	e8 62 4b 00 00       	call   6fc0 <_ZN9VulkanAppC1Ev>
  app.run();
    245e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2462:	48 89 c7             	mov    %rax,%rdi
    2465:	e8 e0 4c 00 00       	call   714a <_ZN9VulkanApp3runEv>
  // std::cout << 2 & 1 << '\n';
  return EXIT_SUCCESS;
    246a:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    246f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2473:	48 89 c7             	mov    %rax,%rdi
    2476:	e8 31 4c 00 00       	call   70ac <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    247b:	89 d8                	mov    %ebx,%eax
    247d:	eb 1a                	jmp    2499 <_Z14protected_mainv+0x50>
}
    247f:	48 89 c3             	mov    %rax,%rbx
    2482:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2486:	48 89 c7             	mov    %rax,%rdi
    2489:	e8 1e 4c 00 00       	call   70ac <_ZN9VulkanAppD1Ev>
    248e:	48 89 d8             	mov    %rbx,%rax
    2491:	48 89 c7             	mov    %rax,%rdi
    2494:	e8 77 fe ff ff       	call   2310 <_Unwind_Resume@plt>
    2499:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    249d:	c9                   	leave
    249e:	c3                   	ret

000000000000249f <main>:

int main() {
    249f:	55                   	push   %rbp
    24a0:	48 89 e5             	mov    %rsp,%rbp
    24a3:	53                   	push   %rbx
    24a4:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    24a8:	e8 9c ff ff ff       	call   2449 <_Z14protected_mainv>
    24ad:	e9 aa 00 00 00       	jmp    255c <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    24b2:	b8 01 00 00 00       	mov    $0x1,%eax
    24b7:	e9 a0 00 00 00       	jmp    255c <main+0xbd>
  } catch (const std::exception &e) {
    24bc:	48 83 fa 01          	cmp    $0x1,%rdx
    24c0:	75 49                	jne    250b <main+0x6c>
    24c2:	48 89 c7             	mov    %rax,%rdi
    24c5:	e8 b6 fb ff ff       	call   2080 <__cxa_begin_catch@plt>
    24ca:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    24ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24d2:	48 8b 00             	mov    (%rax),%rax
    24d5:	48 83 c0 10          	add    $0x10,%rax
    24d9:	48 8b 10             	mov    (%rax),%rdx
    24dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24e0:	48 89 c7             	mov    %rax,%rdi
    24e3:	ff d2                	call   *%rdx
    24e5:	48 89 c6             	mov    %rax,%rsi
    24e8:	48 8d 05 f1 dd 00 00 	lea    0xddf1(%rip),%rax        # 102e0 <_ZSt4cerr@GLIBCXX_3.4>
    24ef:	48 89 c7             	mov    %rax,%rdi
    24f2:	e8 a9 fc ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    24f7:	be 0a 00 00 00       	mov    $0xa,%esi
    24fc:	48 89 c7             	mov    %rax,%rdi
    24ff:	e8 1c fd ff ff       	call   2220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    2504:	e8 d7 fd ff ff       	call   22e0 <__cxa_end_catch@plt>
    2509:	eb a7                	jmp    24b2 <main+0x13>
    250b:	48 89 c7             	mov    %rax,%rdi
    250e:	e8 6d fb ff ff       	call   2080 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    2513:	48 8d 05 ce 60 00 00 	lea    0x60ce(%rip),%rax        # 85e8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    251a:	48 89 c6             	mov    %rax,%rsi
    251d:	48 8d 05 bc dd 00 00 	lea    0xddbc(%rip),%rax        # 102e0 <_ZSt4cerr@GLIBCXX_3.4>
    2524:	48 89 c7             	mov    %rax,%rdi
    2527:	e8 74 fc ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    252c:	e8 af fd ff ff       	call   22e0 <__cxa_end_catch@plt>
    2531:	e9 7c ff ff ff       	jmp    24b2 <main+0x13>
  } catch (...) {
    2536:	48 89 c3             	mov    %rax,%rbx
    2539:	e8 a2 fd ff ff       	call   22e0 <__cxa_end_catch@plt>
    253e:	48 89 d8             	mov    %rbx,%rax
    2541:	48 89 c7             	mov    %rax,%rdi
    2544:	e8 c7 fd ff ff       	call   2310 <_Unwind_Resume@plt>
  }
    2549:	48 89 c3             	mov    %rax,%rbx
    254c:	e8 8f fd ff ff       	call   22e0 <__cxa_end_catch@plt>
    2551:	48 89 d8             	mov    %rbx,%rax
    2554:	48 89 c7             	mov    %rax,%rdi
    2557:	e8 b4 fd ff ff       	call   2310 <_Unwind_Resume@plt>
    255c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2560:	c9                   	leave
    2561:	c3                   	ret

0000000000002562 <_Z41__static_initialization_and_destruction_0ii>:
    2562:	55                   	push   %rbp
    2563:	48 89 e5             	mov    %rsp,%rbp
    2566:	48 83 ec 10          	sub    $0x10,%rsp
    256a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    256d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2570:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    2574:	75 3b                	jne    25b1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    2576:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    257d:	75 32                	jne    25b1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    257f:	48 8d 05 6b de 00 00 	lea    0xde6b(%rip),%rax        # 103f1 <_ZStL8__ioinit>
    2586:	48 89 c7             	mov    %rax,%rdi
    2589:	e8 12 fd ff ff       	call   22a0 <_ZNSt8ios_base4InitC1Ev@plt>
    258e:	48 8d 05 03 dc 00 00 	lea    0xdc03(%rip),%rax        # 10198 <__dso_handle>
    2595:	48 89 c2             	mov    %rax,%rdx
    2598:	48 8d 05 52 de 00 00 	lea    0xde52(%rip),%rax        # 103f1 <_ZStL8__ioinit>
    259f:	48 89 c6             	mov    %rax,%rsi
    25a2:	48 8b 05 1f da 00 00 	mov    0xda1f(%rip),%rax        # ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    25a9:	48 89 c7             	mov    %rax,%rdi
    25ac:	e8 af fb ff ff       	call   2160 <__cxa_atexit@plt>
    25b1:	90                   	nop
    25b2:	c9                   	leave
    25b3:	c3                   	ret

00000000000025b4 <_GLOBAL__sub_I__Z14protected_mainv>:
    25b4:	55                   	push   %rbp
    25b5:	48 89 e5             	mov    %rsp,%rbp
    25b8:	be ff ff 00 00       	mov    $0xffff,%esi
    25bd:	bf 01 00 00 00       	mov    $0x1,%edi
    25c2:	e8 9b ff ff ff       	call   2562 <_Z41__static_initialization_and_destruction_0ii>
    25c7:	5d                   	pop    %rbp
    25c8:	c3                   	ret

00000000000025c9 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    25c9:	55                   	push   %rbp
    25ca:	48 89 e5             	mov    %rsp,%rbp
    25cd:	48 83 ec 20          	sub    $0x20,%rsp
    25d1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    25d4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    25d7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    25db:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    25df:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    25e3:	be 00 00 00 00       	mov    $0x0,%esi
    25e8:	bf 01 20 02 00       	mov    $0x22001,%edi
    25ed:	e8 5e fb ff ff       	call   2150 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    25f2:	be 00 00 00 00       	mov    $0x0,%esi
    25f7:	bf 03 00 02 00       	mov    $0x20003,%edi
    25fc:	e8 4f fb ff ff       	call   2150 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    2601:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2605:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2609:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    260d:	8b 75 f8             	mov    -0x8(%rbp),%esi
    2610:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2613:	49 89 f8             	mov    %rdi,%r8
    2616:	89 c7                	mov    %eax,%edi
    2618:	e8 a3 fc ff ff       	call   22c0 <glfwCreateWindow@plt>
}
    261d:	c9                   	leave
    261e:	c3                   	ret

000000000000261f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    261f:	55                   	push   %rbp
    2620:	48 89 e5             	mov    %rsp,%rbp
    2623:	41 54                	push   %r12
    2625:	53                   	push   %rbx
    2626:	48 83 ec 20          	sub    $0x20,%rsp
    262a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    262e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    2632:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2636:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    263a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    263e:	48 89 ce             	mov    %rcx,%rsi
    2641:	48 89 c7             	mov    %rax,%rdi
    2644:	e8 e7 fb ff ff       	call   2230 <vkCreateInstance@plt>
    2649:	85 c0                	test   %eax,%eax
    264b:	0f 95 c0             	setne  %al
    264e:	84 c0                	test   %al,%al
    2650:	74 3b                	je     268d <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    2652:	bf 10 00 00 00       	mov    $0x10,%edi
    2657:	e8 54 fa ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    265c:	48 89 c3             	mov    %rax,%rbx
    265f:	48 8d 05 72 65 00 00 	lea    0x6572(%rip),%rax        # 8bd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2666:	48 89 c6             	mov    %rax,%rsi
    2669:	48 89 df             	mov    %rbx,%rdi
    266c:	e8 ef f9 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2671:	48 8b 05 30 d9 00 00 	mov    0xd930(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2678:	48 89 c2             	mov    %rax,%rdx
    267b:	48 8d 05 be d6 00 00 	lea    0xd6be(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2682:	48 89 c6             	mov    %rax,%rsi
    2685:	48 89 df             	mov    %rbx,%rdi
    2688:	e8 63 fc ff ff       	call   22f0 <__cxa_throw@plt>
  }
  return instance;
    268d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2691:	eb 16                	jmp    26a9 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    2693:	49 89 c4             	mov    %rax,%r12
    2696:	48 89 df             	mov    %rbx,%rdi
    2699:	e8 52 fa ff ff       	call   20f0 <__cxa_free_exception@plt>
    269e:	4c 89 e0             	mov    %r12,%rax
    26a1:	48 89 c7             	mov    %rax,%rdi
    26a4:	e8 67 fc ff ff       	call   2310 <_Unwind_Resume@plt>
}
    26a9:	48 83 c4 20          	add    $0x20,%rsp
    26ad:	5b                   	pop    %rbx
    26ae:	41 5c                	pop    %r12
    26b0:	5d                   	pop    %rbp
    26b1:	c3                   	ret

00000000000026b2 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    26b2:	55                   	push   %rbp
    26b3:	48 89 e5             	mov    %rsp,%rbp
    26b6:	41 54                	push   %r12
    26b8:	53                   	push   %rbx
    26b9:	48 83 ec 30          	sub    $0x30,%rsp
    26bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    26c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    26c5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    26c9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    26cd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    26d1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    26d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26d9:	48 89 c7             	mov    %rax,%rdi
    26dc:	e8 af fb ff ff       	call   2290 <vkCreateDevice@plt>
    26e1:	85 c0                	test   %eax,%eax
    26e3:	0f 95 c0             	setne  %al
    26e6:	84 c0                	test   %al,%al
    26e8:	74 3b                	je     2725 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    26ea:	bf 10 00 00 00       	mov    $0x10,%edi
    26ef:	e8 bc f9 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    26f4:	48 89 c3             	mov    %rax,%rbx
    26f7:	48 8d 05 fa 64 00 00 	lea    0x64fa(%rip),%rax        # 8bf8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    26fe:	48 89 c6             	mov    %rax,%rsi
    2701:	48 89 df             	mov    %rbx,%rdi
    2704:	e8 57 f9 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2709:	48 8b 05 98 d8 00 00 	mov    0xd898(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2710:	48 89 c2             	mov    %rax,%rdx
    2713:	48 8d 05 26 d6 00 00 	lea    0xd626(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    271a:	48 89 c6             	mov    %rax,%rsi
    271d:	48 89 df             	mov    %rbx,%rdi
    2720:	e8 cb fb ff ff       	call   22f0 <__cxa_throw@plt>
  }
  return device;
    2725:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2729:	eb 16                	jmp    2741 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    272b:	49 89 c4             	mov    %rax,%r12
    272e:	48 89 df             	mov    %rbx,%rdi
    2731:	e8 ba f9 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2736:	4c 89 e0             	mov    %r12,%rax
    2739:	48 89 c7             	mov    %rax,%rdi
    273c:	e8 cf fb ff ff       	call   2310 <_Unwind_Resume@plt>
}
    2741:	48 83 c4 30          	add    $0x30,%rsp
    2745:	5b                   	pop    %rbx
    2746:	41 5c                	pop    %r12
    2748:	5d                   	pop    %rbp
    2749:	c3                   	ret

000000000000274a <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    274a:	55                   	push   %rbp
    274b:	48 89 e5             	mov    %rsp,%rbp
    274e:	48 83 ec 10          	sub    $0x10,%rsp
    2752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    275a:	48 89 c7             	mov    %rax,%rdi
    275d:	e8 de f8 ff ff       	call   2040 <glfwDestroyWindow@plt>
    2762:	90                   	nop
    2763:	c9                   	leave
    2764:	c3                   	ret

0000000000002765 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    2765:	55                   	push   %rbp
    2766:	48 89 e5             	mov    %rsp,%rbp
    2769:	48 83 ec 10          	sub    $0x10,%rsp
    276d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2771:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    2775:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    277d:	48 89 d6             	mov    %rdx,%rsi
    2780:	48 89 c7             	mov    %rax,%rdi
    2783:	e8 48 fa ff ff       	call   21d0 <vkDestroyInstance@plt>
}
    2788:	90                   	nop
    2789:	c9                   	leave
    278a:	c3                   	ret

000000000000278b <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    278b:	55                   	push   %rbp
    278c:	48 89 e5             	mov    %rsp,%rbp
    278f:	48 83 ec 10          	sub    $0x10,%rsp
    2793:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2797:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    279b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    279f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27a3:	48 89 d6             	mov    %rdx,%rsi
    27a6:	48 89 c7             	mov    %rax,%rdi
    27a9:	e8 82 f9 ff ff       	call   2130 <vkDestroyDevice@plt>
}
    27ae:	90                   	nop
    27af:	c9                   	leave
    27b0:	c3                   	ret

00000000000027b1 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    27b1:	55                   	push   %rbp
    27b2:	48 89 e5             	mov    %rsp,%rbp
    27b5:	41 54                	push   %r12
    27b7:	53                   	push   %rbx
    27b8:	48 83 ec 20          	sub    $0x20,%rsp
    27bc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    27c0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    27c4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    27c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    27cc:	ba 00 00 00 00       	mov    $0x0,%edx
    27d1:	48 89 ce             	mov    %rcx,%rsi
    27d4:	48 89 c7             	mov    %rax,%rdi
    27d7:	e8 64 f9 ff ff       	call   2140 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    27dc:	85 c0                	test   %eax,%eax
    27de:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    27e1:	84 c0                	test   %al,%al
    27e3:	74 3b                	je     2820 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    27e5:	bf 10 00 00 00       	mov    $0x10,%edi
    27ea:	e8 c1 f8 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    27ef:	48 89 c3             	mov    %rax,%rbx
    27f2:	48 8d 05 d7 6f 00 00 	lea    0x6fd7(%rip),%rax        # 97d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    27f9:	48 89 c6             	mov    %rax,%rsi
    27fc:	48 89 df             	mov    %rbx,%rdi
    27ff:	e8 5c f8 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2804:	48 8b 05 9d d7 00 00 	mov    0xd79d(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    280b:	48 89 c2             	mov    %rax,%rdx
    280e:	48 8d 05 2b d5 00 00 	lea    0xd52b(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2815:	48 89 c6             	mov    %rax,%rsi
    2818:	48 89 df             	mov    %rbx,%rdi
    281b:	e8 d0 fa ff ff       	call   22f0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2820:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2823:	89 c3                	mov    %eax,%ebx
    2825:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2829:	48 89 c7             	mov    %rax,%rdi
    282c:	e8 4f 07 00 00       	call   2f80 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2831:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2835:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2839:	48 89 de             	mov    %rbx,%rsi
    283c:	48 89 c7             	mov    %rax,%rdi
    283f:	e8 74 07 00 00       	call   2fb8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2844:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2848:	48 89 c7             	mov    %rax,%rdi
    284b:	e8 4c 07 00 00       	call   2f9c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2850:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2854:	48 89 c7             	mov    %rax,%rdi
    2857:	e8 16 08 00 00       	call   3072 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    285c:	48 89 c2             	mov    %rax,%rdx
    285f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2863:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2867:	48 89 ce             	mov    %rcx,%rsi
    286a:	48 89 c7             	mov    %rax,%rdi
    286d:	e8 ce f8 ff ff       	call   2140 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    2872:	85 c0                	test   %eax,%eax
    2874:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2877:	84 c0                	test   %al,%al
    2879:	0f 84 95 00 00 00    	je     2914 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    287f:	bf 10 00 00 00       	mov    $0x10,%edi
    2884:	e8 27 f8 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2889:	48 89 c3             	mov    %rax,%rbx
    288c:	48 8d 05 3d 6f 00 00 	lea    0x6f3d(%rip),%rax        # 97d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2893:	48 89 c6             	mov    %rax,%rsi
    2896:	48 89 df             	mov    %rbx,%rdi
    2899:	e8 c2 f7 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    289e:	48 8b 05 03 d7 00 00 	mov    0xd703(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    28a5:	48 89 c2             	mov    %rax,%rdx
    28a8:	48 8d 05 91 d4 00 00 	lea    0xd491(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    28af:	48 89 c6             	mov    %rax,%rsi
    28b2:	48 89 df             	mov    %rbx,%rdi
    28b5:	e8 36 fa ff ff       	call   22f0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    28ba:	49 89 c4             	mov    %rax,%r12
    28bd:	48 89 df             	mov    %rbx,%rdi
    28c0:	e8 2b f8 ff ff       	call   20f0 <__cxa_free_exception@plt>
    28c5:	4c 89 e0             	mov    %r12,%rax
    28c8:	48 89 c7             	mov    %rax,%rdi
    28cb:	e8 40 fa ff ff       	call   2310 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    28d0:	48 89 c3             	mov    %rax,%rbx
    28d3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    28d7:	48 89 c7             	mov    %rax,%rdi
    28da:	e8 bd 06 00 00       	call   2f9c <_ZNSaI21VkExtensionPropertiesED1Ev>
    28df:	48 89 d8             	mov    %rbx,%rax
    28e2:	48 89 c7             	mov    %rax,%rdi
    28e5:	e8 26 fa ff ff       	call   2310 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    28ea:	49 89 c4             	mov    %rax,%r12
    28ed:	48 89 df             	mov    %rbx,%rdi
    28f0:	e8 fb f7 ff ff       	call   20f0 <__cxa_free_exception@plt>
    28f5:	4c 89 e3             	mov    %r12,%rbx
    28f8:	eb 03                	jmp    28fd <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    28fa:	48 89 c3             	mov    %rax,%rbx
    28fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2901:	48 89 c7             	mov    %rax,%rdi
    2904:	e8 25 07 00 00       	call   302e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2909:	48 89 d8             	mov    %rbx,%rax
    290c:	48 89 c7             	mov    %rax,%rdi
    290f:	e8 fc f9 ff ff       	call   2310 <_Unwind_Resume@plt>
  return instanceExtensions;
    2914:	90                   	nop
}
    2915:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2919:	48 83 c4 20          	add    $0x20,%rsp
    291d:	5b                   	pop    %rbx
    291e:	41 5c                	pop    %r12
    2920:	5d                   	pop    %rbp
    2921:	c3                   	ret

0000000000002922 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    2922:	55                   	push   %rbp
    2923:	48 89 e5             	mov    %rsp,%rbp
    2926:	41 54                	push   %r12
    2928:	53                   	push   %rbx
    2929:	48 83 ec 30          	sub    $0x30,%rsp
    292d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2931:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2935:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    2939:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    293d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2941:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2945:	b9 00 00 00 00       	mov    $0x0,%ecx
    294a:	48 89 c7             	mov    %rax,%rdi
    294d:	e8 1e f9 ff ff       	call   2270 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    2952:	85 c0                	test   %eax,%eax
    2954:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2957:	84 c0                	test   %al,%al
    2959:	74 3b                	je     2996 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    295b:	bf 10 00 00 00       	mov    $0x10,%edi
    2960:	e8 4b f7 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2965:	48 89 c3             	mov    %rax,%rbx
    2968:	48 8d 05 89 6e 00 00 	lea    0x6e89(%rip),%rax        # 97f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    296f:	48 89 c6             	mov    %rax,%rsi
    2972:	48 89 df             	mov    %rbx,%rdi
    2975:	e8 e6 f6 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    297a:	48 8b 05 27 d6 00 00 	mov    0xd627(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2981:	48 89 c2             	mov    %rax,%rdx
    2984:	48 8d 05 b5 d3 00 00 	lea    0xd3b5(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    298b:	48 89 c6             	mov    %rax,%rsi
    298e:	48 89 df             	mov    %rbx,%rdi
    2991:	e8 5a f9 ff ff       	call   22f0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2996:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2999:	89 c3                	mov    %eax,%ebx
    299b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    299f:	48 89 c7             	mov    %rax,%rdi
    29a2:	e8 d9 05 00 00       	call   2f80 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    29a7:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    29ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29af:	48 89 de             	mov    %rbx,%rsi
    29b2:	48 89 c7             	mov    %rax,%rdi
    29b5:	e8 fe 05 00 00       	call   2fb8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    29ba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    29be:	48 89 c7             	mov    %rax,%rdi
    29c1:	e8 d6 05 00 00       	call   2f9c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    29c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29ca:	48 89 c7             	mov    %rax,%rdi
    29cd:	e8 a0 06 00 00       	call   3072 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    29d2:	48 89 c1             	mov    %rax,%rcx
    29d5:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    29d9:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    29dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    29e1:	48 89 c7             	mov    %rax,%rdi
    29e4:	e8 87 f8 ff ff       	call   2270 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    29e9:	85 c0                	test   %eax,%eax
    29eb:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    29ee:	84 c0                	test   %al,%al
    29f0:	0f 84 95 00 00 00    	je     2a8b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    29f6:	bf 10 00 00 00       	mov    $0x10,%edi
    29fb:	e8 b0 f6 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2a00:	48 89 c3             	mov    %rax,%rbx
    2a03:	48 8d 05 ee 6d 00 00 	lea    0x6dee(%rip),%rax        # 97f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2a0a:	48 89 c6             	mov    %rax,%rsi
    2a0d:	48 89 df             	mov    %rbx,%rdi
    2a10:	e8 4b f6 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2a15:	48 8b 05 8c d5 00 00 	mov    0xd58c(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2a1c:	48 89 c2             	mov    %rax,%rdx
    2a1f:	48 8d 05 1a d3 00 00 	lea    0xd31a(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2a26:	48 89 c6             	mov    %rax,%rsi
    2a29:	48 89 df             	mov    %rbx,%rdi
    2a2c:	e8 bf f8 ff ff       	call   22f0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2a31:	49 89 c4             	mov    %rax,%r12
    2a34:	48 89 df             	mov    %rbx,%rdi
    2a37:	e8 b4 f6 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2a3c:	4c 89 e0             	mov    %r12,%rax
    2a3f:	48 89 c7             	mov    %rax,%rdi
    2a42:	e8 c9 f8 ff ff       	call   2310 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2a47:	48 89 c3             	mov    %rax,%rbx
    2a4a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2a4e:	48 89 c7             	mov    %rax,%rdi
    2a51:	e8 46 05 00 00       	call   2f9c <_ZNSaI21VkExtensionPropertiesED1Ev>
    2a56:	48 89 d8             	mov    %rbx,%rax
    2a59:	48 89 c7             	mov    %rax,%rdi
    2a5c:	e8 af f8 ff ff       	call   2310 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2a61:	49 89 c4             	mov    %rax,%r12
    2a64:	48 89 df             	mov    %rbx,%rdi
    2a67:	e8 84 f6 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2a6c:	4c 89 e3             	mov    %r12,%rbx
    2a6f:	eb 03                	jmp    2a74 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    2a71:	48 89 c3             	mov    %rax,%rbx
    2a74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a78:	48 89 c7             	mov    %rax,%rdi
    2a7b:	e8 ae 05 00 00       	call   302e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2a80:	48 89 d8             	mov    %rbx,%rax
    2a83:	48 89 c7             	mov    %rax,%rdi
    2a86:	e8 85 f8 ff ff       	call   2310 <_Unwind_Resume@plt>
  return deviceExtensions;
    2a8b:	90                   	nop
}
    2a8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a90:	48 83 c4 30          	add    $0x30,%rsp
    2a94:	5b                   	pop    %rbx
    2a95:	41 5c                	pop    %r12
    2a97:	5d                   	pop    %rbp
    2a98:	c3                   	ret

0000000000002a99 <_ZN3vkh36getRequiredInstanceExtensionNameListEb>:

std::vector<const char *>
getRequiredInstanceExtensionNameList(bool enableValidationLayers) {
    2a99:	55                   	push   %rbp
    2a9a:	48 89 e5             	mov    %rsp,%rbp
    2a9d:	53                   	push   %rbx
    2a9e:	48 83 ec 38          	sub    $0x38,%rsp
    2aa2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2aa6:	89 f0                	mov    %esi,%eax
    2aa8:	88 45 c4             	mov    %al,-0x3c(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    2aab:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2aaf:	48 89 c7             	mov    %rax,%rdi
    2ab2:	e8 59 f6 ff ff       	call   2110 <glfwGetRequiredInstanceExtensions@plt>
    2ab7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2abb:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2abe:	89 c3                	mov    %eax,%ebx
    2ac0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2ac4:	48 89 c7             	mov    %rax,%rdi
    2ac7:	e8 22 06 00 00       	call   30ee <_ZNSaIPKcEC1Ev>
    2acc:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    2ad0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2ad4:	48 89 de             	mov    %rbx,%rsi
    2ad7:	48 89 c7             	mov    %rax,%rdi
    2ada:	e8 47 06 00 00       	call   3126 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    2adf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2ae3:	48 89 c7             	mov    %rax,%rdi
    2ae6:	e8 1f 06 00 00       	call   310a <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2aeb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2af2:	eb 2e                	jmp    2b22 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x89>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    2af4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2af7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2afe:	00 
    2aff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2b03:	48 01 d0             	add    %rdx,%rax
    2b06:	48 8b 18             	mov    (%rax),%rbx
    2b09:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2b0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b10:	48 89 d6             	mov    %rdx,%rsi
    2b13:	48 89 c7             	mov    %rax,%rdi
    2b16:	e8 c5 06 00 00       	call   31e0 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    2b1b:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2b1e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2b22:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2b25:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2b28:	72 ca                	jb     2af4 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x5b>
  }
  if (enableValidationLayers) {
    2b2a:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    2b2e:	74 54                	je     2b84 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
    requiredInstanceExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    2b30:	48 8d 05 e6 6c 00 00 	lea    0x6ce6(%rip),%rax        # 981d <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x55>
    2b37:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2b3b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2b3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b43:	48 89 d6             	mov    %rdx,%rsi
    2b46:	48 89 c7             	mov    %rax,%rdi
    2b49:	e8 b2 06 00 00       	call   3200 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
  }
  return requiredInstanceExtensions;
    2b4e:	eb 34                	jmp    2b84 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2b50:	48 89 c3             	mov    %rax,%rbx
    2b53:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2b57:	48 89 c7             	mov    %rax,%rdi
    2b5a:	e8 ab 05 00 00       	call   310a <_ZNSaIPKcED1Ev>
    2b5f:	48 89 d8             	mov    %rbx,%rax
    2b62:	48 89 c7             	mov    %rax,%rdi
    2b65:	e8 a6 f7 ff ff       	call   2310 <_Unwind_Resume@plt>
}
    2b6a:	48 89 c3             	mov    %rax,%rbx
    2b6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b71:	48 89 c7             	mov    %rax,%rdi
    2b74:	e8 23 06 00 00       	call   319c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    2b79:	48 89 d8             	mov    %rbx,%rax
    2b7c:	48 89 c7             	mov    %rax,%rdi
    2b7f:	e8 8c f7 ff ff       	call   2310 <_Unwind_Resume@plt>
  return requiredInstanceExtensions;
    2b84:	90                   	nop
}
    2b85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2b89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2b8d:	c9                   	leave
    2b8e:	c3                   	ret

0000000000002b8f <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    2b8f:	55                   	push   %rbp
    2b90:	48 89 e5             	mov    %rsp,%rbp
    2b93:	53                   	push   %rbx
    2b94:	48 83 ec 28          	sub    $0x28,%rsp
    2b98:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    2b9c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2ba0:	be 00 00 00 00       	mov    $0x0,%esi
    2ba5:	48 89 c7             	mov    %rax,%rdi
    2ba8:	e8 53 f6 ff ff       	call   2200 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2bad:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2bb0:	89 c3                	mov    %eax,%ebx
    2bb2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2bb6:	48 89 c7             	mov    %rax,%rdi
    2bb9:	e8 c2 06 00 00       	call   3280 <_ZNSaI17VkLayerPropertiesEC1Ev>
    2bbe:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2bc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2bc6:	48 89 de             	mov    %rbx,%rsi
    2bc9:	48 89 c7             	mov    %rax,%rdi
    2bcc:	e8 e7 06 00 00       	call   32b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    2bd1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2bd5:	48 89 c7             	mov    %rax,%rdi
    2bd8:	e8 bf 06 00 00       	call   329c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    2bdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2be1:	48 89 c7             	mov    %rax,%rdi
    2be4:	e8 89 07 00 00       	call   3372 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    2be9:	48 89 c2             	mov    %rax,%rdx
    2bec:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2bf0:	48 89 d6             	mov    %rdx,%rsi
    2bf3:	48 89 c7             	mov    %rax,%rdi
    2bf6:	e8 05 f6 ff ff       	call   2200 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    2bfb:	eb 34                	jmp    2c31 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2bfd:	48 89 c3             	mov    %rax,%rbx
    2c00:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c04:	48 89 c7             	mov    %rax,%rdi
    2c07:	e8 90 06 00 00       	call   329c <_ZNSaI17VkLayerPropertiesED1Ev>
    2c0c:	48 89 d8             	mov    %rbx,%rax
    2c0f:	48 89 c7             	mov    %rax,%rdi
    2c12:	e8 f9 f6 ff ff       	call   2310 <_Unwind_Resume@plt>
}
    2c17:	48 89 c3             	mov    %rax,%rbx
    2c1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c1e:	48 89 c7             	mov    %rax,%rdi
    2c21:	e8 08 07 00 00       	call   332e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    2c26:	48 89 d8             	mov    %rbx,%rax
    2c29:	48 89 c7             	mov    %rax,%rdi
    2c2c:	e8 df f6 ff ff       	call   2310 <_Unwind_Resume@plt>
    2c31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c35:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2c39:	c9                   	leave
    2c3a:	c3                   	ret

0000000000002c3b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    2c3b:	55                   	push   %rbp
    2c3c:	48 89 e5             	mov    %rsp,%rbp
    2c3f:	41 54                	push   %r12
    2c41:	53                   	push   %rbx
    2c42:	48 83 ec 20          	sub    $0x20,%rsp
    2c46:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2c4a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    2c4e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2c52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2c56:	ba 00 00 00 00       	mov    $0x0,%edx
    2c5b:	48 89 ce             	mov    %rcx,%rsi
    2c5e:	48 89 c7             	mov    %rax,%rdi
    2c61:	e8 6a f4 ff ff       	call   20d0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    2c66:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2c69:	85 c0                	test   %eax,%eax
    2c6b:	75 3b                	jne    2ca8 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    2c6d:	bf 10 00 00 00       	mov    $0x10,%edi
    2c72:	e8 39 f4 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2c77:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    2c7a:	48 8d 05 af 6b 00 00 	lea    0x6baf(%rip),%rax        # 9830 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    2c81:	48 89 c6             	mov    %rax,%rsi
    2c84:	48 89 df             	mov    %rbx,%rdi
    2c87:	e8 d4 f3 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    2c8c:	48 8b 05 15 d3 00 00 	mov    0xd315(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2c93:	48 89 c2             	mov    %rax,%rdx
    2c96:	48 8d 05 a3 d0 00 00 	lea    0xd0a3(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2c9d:	48 89 c6             	mov    %rax,%rsi
    2ca0:	48 89 df             	mov    %rbx,%rdi
    2ca3:	e8 48 f6 ff ff       	call   22f0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2ca8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2cab:	89 c3                	mov    %eax,%ebx
    2cad:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2cb1:	48 89 c7             	mov    %rax,%rdi
    2cb4:	e8 35 07 00 00       	call   33ee <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    2cb9:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2cbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cc1:	48 89 de             	mov    %rbx,%rsi
    2cc4:	48 89 c7             	mov    %rax,%rdi
    2cc7:	e8 5a 07 00 00       	call   3426 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    2ccc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2cd0:	48 89 c7             	mov    %rax,%rdi
    2cd3:	e8 32 07 00 00       	call   340a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2cd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cdc:	48 89 c7             	mov    %rax,%rdi
    2cdf:	e8 fc 07 00 00       	call   34e0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    2ce4:	48 89 c2             	mov    %rax,%rdx
    2ce7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2ceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2cef:	48 89 ce             	mov    %rcx,%rsi
    2cf2:	48 89 c7             	mov    %rax,%rdi
    2cf5:	e8 d6 f3 ff ff       	call   20d0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    2cfa:	85 c0                	test   %eax,%eax
    2cfc:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2cff:	84 c0                	test   %al,%al
    2d01:	0f 84 95 00 00 00    	je     2d9c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    2d07:	bf 10 00 00 00       	mov    $0x10,%edi
    2d0c:	e8 9f f3 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2d11:	48 89 c3             	mov    %rax,%rbx
    2d14:	48 8d 05 4d 6b 00 00 	lea    0x6b4d(%rip),%rax        # 9868 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xa0>
    2d1b:	48 89 c6             	mov    %rax,%rsi
    2d1e:	48 89 df             	mov    %rbx,%rdi
    2d21:	e8 3a f3 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2d26:	48 8b 05 7b d2 00 00 	mov    0xd27b(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2d2d:	48 89 c2             	mov    %rax,%rdx
    2d30:	48 8d 05 09 d0 00 00 	lea    0xd009(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2d37:	48 89 c6             	mov    %rax,%rsi
    2d3a:	48 89 df             	mov    %rbx,%rdi
    2d3d:	e8 ae f5 ff ff       	call   22f0 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    2d42:	49 89 c4             	mov    %rax,%r12
    2d45:	48 89 df             	mov    %rbx,%rdi
    2d48:	e8 a3 f3 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2d4d:	4c 89 e0             	mov    %r12,%rax
    2d50:	48 89 c7             	mov    %rax,%rdi
    2d53:	e8 b8 f5 ff ff       	call   2310 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2d58:	48 89 c3             	mov    %rax,%rbx
    2d5b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2d5f:	48 89 c7             	mov    %rax,%rdi
    2d62:	e8 a3 06 00 00       	call   340a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2d67:	48 89 d8             	mov    %rbx,%rax
    2d6a:	48 89 c7             	mov    %rax,%rdi
    2d6d:	e8 9e f5 ff ff       	call   2310 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    2d72:	49 89 c4             	mov    %rax,%r12
    2d75:	48 89 df             	mov    %rbx,%rdi
    2d78:	e8 73 f3 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2d7d:	4c 89 e3             	mov    %r12,%rbx
    2d80:	eb 03                	jmp    2d85 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    2d82:	48 89 c3             	mov    %rax,%rbx
    2d85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d89:	48 89 c7             	mov    %rax,%rdi
    2d8c:	e8 0b 07 00 00       	call   349c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    2d91:	48 89 d8             	mov    %rbx,%rax
    2d94:	48 89 c7             	mov    %rax,%rdi
    2d97:	e8 74 f5 ff ff       	call   2310 <_Unwind_Resume@plt>
  return physicalDevices;
    2d9c:	90                   	nop
}
    2d9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2da1:	48 83 c4 20          	add    $0x20,%rsp
    2da5:	5b                   	pop    %rbx
    2da6:	41 5c                	pop    %r12
    2da8:	5d                   	pop    %rbp
    2da9:	c3                   	ret

0000000000002daa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    2daa:	55                   	push   %rbp
    2dab:	48 89 e5             	mov    %rsp,%rbp
    2dae:	48 83 ec 10          	sub    $0x10,%rsp
    2db2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2db6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    2dba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2dbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2dc2:	48 89 d6             	mov    %rdx,%rsi
    2dc5:	48 89 c7             	mov    %rax,%rdi
    2dc8:	e8 a3 f2 ff ff       	call   2070 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    2dcd:	90                   	nop
}
    2dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dd2:	c9                   	leave
    2dd3:	c3                   	ret

0000000000002dd4 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    2dd4:	55                   	push   %rbp
    2dd5:	48 89 e5             	mov    %rsp,%rbp
    2dd8:	48 83 ec 20          	sub    $0x20,%rsp
    2ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2de0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2de4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    2de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dec:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    2df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2df6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2dfa:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    2dfe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2e02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e06:	48 89 d6             	mov    %rdx,%rsi
    2e09:	48 89 c7             	mov    %rax,%rdi
    2e0c:	e8 5f f3 ff ff       	call   2170 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    2e11:	90                   	nop
}
    2e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e16:	c9                   	leave
    2e17:	c3                   	ret

0000000000002e18 <_ZN3vkh34getPhysicalDeviceQueuePropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueuePropertyList(VkPhysicalDevice physicalDevice) {
    2e18:	55                   	push   %rbp
    2e19:	48 89 e5             	mov    %rsp,%rbp
    2e1c:	53                   	push   %rbx
    2e1d:	48 83 ec 28          	sub    $0x28,%rsp
    2e21:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2e25:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    2e29:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2e2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2e31:	ba 00 00 00 00       	mov    $0x0,%edx
    2e36:	48 89 ce             	mov    %rcx,%rsi
    2e39:	48 89 c7             	mov    %rax,%rdi
    2e3c:	e8 bf f2 ff ff       	call   2100 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    2e41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2e44:	89 c3                	mov    %eax,%ebx
    2e46:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e4a:	48 89 c7             	mov    %rax,%rdi
    2e4d:	e8 00 07 00 00       	call   3552 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    2e52:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2e56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e5a:	48 89 de             	mov    %rbx,%rsi
    2e5d:	48 89 c7             	mov    %rax,%rdi
    2e60:	e8 25 07 00 00       	call   358a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    2e65:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e69:	48 89 c7             	mov    %rax,%rdi
    2e6c:	e8 fd 06 00 00       	call   356e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    2e71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e75:	48 89 c7             	mov    %rax,%rdi
    2e78:	e8 c7 07 00 00       	call   3644 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    2e7d:	48 89 c2             	mov    %rax,%rdx
    2e80:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2e84:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2e88:	48 89 ce             	mov    %rcx,%rsi
    2e8b:	48 89 c7             	mov    %rax,%rdi
    2e8e:	e8 6d f2 ff ff       	call   2100 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    2e93:	eb 34                	jmp    2ec9 <_ZN3vkh34getPhysicalDeviceQueuePropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    2e95:	48 89 c3             	mov    %rax,%rbx
    2e98:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e9c:	48 89 c7             	mov    %rax,%rdi
    2e9f:	e8 ca 06 00 00       	call   356e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    2ea4:	48 89 d8             	mov    %rbx,%rax
    2ea7:	48 89 c7             	mov    %rax,%rdi
    2eaa:	e8 61 f4 ff ff       	call   2310 <_Unwind_Resume@plt>
}
    2eaf:	48 89 c3             	mov    %rax,%rbx
    2eb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2eb6:	48 89 c7             	mov    %rax,%rdi
    2eb9:	e8 42 07 00 00       	call   3600 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    2ebe:	48 89 d8             	mov    %rbx,%rax
    2ec1:	48 89 c7             	mov    %rax,%rdi
    2ec4:	e8 47 f4 ff ff       	call   2310 <_Unwind_Resume@plt>
    2ec9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ecd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2ed1:	c9                   	leave
    2ed2:	c3                   	ret

0000000000002ed3 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    2ed3:	55                   	push   %rbp
    2ed4:	48 89 e5             	mov    %rsp,%rbp
    2ed7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2edb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2edf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2ee3:	5d                   	pop    %rbp
    2ee4:	c3                   	ret

0000000000002ee5 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    2ee5:	55                   	push   %rbp
    2ee6:	48 89 e5             	mov    %rsp,%rbp
    2ee9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2eed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ef1:	5d                   	pop    %rbp
    2ef2:	c3                   	ret
    2ef3:	90                   	nop

0000000000002ef4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    2ef4:	55                   	push   %rbp
    2ef5:	48 89 e5             	mov    %rsp,%rbp
    2ef8:	48 83 ec 10          	sub    $0x10,%rsp
    2efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f04:	48 89 c7             	mov    %rax,%rdi
    2f07:	e8 90 00 00 00       	call   2f9c <_ZNSaI21VkExtensionPropertiesED1Ev>
    2f0c:	90                   	nop
    2f0d:	c9                   	leave
    2f0e:	c3                   	ret
    2f0f:	90                   	nop

0000000000002f10 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    2f10:	55                   	push   %rbp
    2f11:	48 89 e5             	mov    %rsp,%rbp
    2f14:	48 83 ec 10          	sub    $0x10,%rsp
    2f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f20:	48 89 c7             	mov    %rax,%rdi
    2f23:	e8 e2 01 00 00       	call   310a <_ZNSaIPKcED1Ev>
    2f28:	90                   	nop
    2f29:	c9                   	leave
    2f2a:	c3                   	ret
    2f2b:	90                   	nop

0000000000002f2c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
    2f2c:	55                   	push   %rbp
    2f2d:	48 89 e5             	mov    %rsp,%rbp
    2f30:	48 83 ec 10          	sub    $0x10,%rsp
    2f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f3c:	48 89 c7             	mov    %rax,%rdi
    2f3f:	e8 58 03 00 00       	call   329c <_ZNSaI17VkLayerPropertiesED1Ev>
    2f44:	90                   	nop
    2f45:	c9                   	leave
    2f46:	c3                   	ret
    2f47:	90                   	nop

0000000000002f48 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    2f48:	55                   	push   %rbp
    2f49:	48 89 e5             	mov    %rsp,%rbp
    2f4c:	48 83 ec 10          	sub    $0x10,%rsp
    2f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f58:	48 89 c7             	mov    %rax,%rdi
    2f5b:	e8 aa 04 00 00       	call   340a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2f60:	90                   	nop
    2f61:	c9                   	leave
    2f62:	c3                   	ret
    2f63:	90                   	nop

0000000000002f64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    2f64:	55                   	push   %rbp
    2f65:	48 89 e5             	mov    %rsp,%rbp
    2f68:	48 83 ec 10          	sub    $0x10,%rsp
    2f6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f74:	48 89 c7             	mov    %rax,%rdi
    2f77:	e8 f2 05 00 00       	call   356e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    2f7c:	90                   	nop
    2f7d:	c9                   	leave
    2f7e:	c3                   	ret
    2f7f:	90                   	nop

0000000000002f80 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    2f80:	55                   	push   %rbp
    2f81:	48 89 e5             	mov    %rsp,%rbp
    2f84:	48 83 ec 10          	sub    $0x10,%rsp
    2f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f90:	48 89 c7             	mov    %rax,%rdi
    2f93:	e8 28 07 00 00       	call   36c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    2f98:	90                   	nop
    2f99:	c9                   	leave
    2f9a:	c3                   	ret
    2f9b:	90                   	nop

0000000000002f9c <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    2f9c:	55                   	push   %rbp
    2f9d:	48 89 e5             	mov    %rsp,%rbp
    2fa0:	48 83 ec 10          	sub    $0x10,%rsp
    2fa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fac:	48 89 c7             	mov    %rax,%rdi
    2faf:	e8 18 07 00 00       	call   36cc <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    2fb4:	90                   	nop
    2fb5:	c9                   	leave
    2fb6:	c3                   	ret
    2fb7:	90                   	nop

0000000000002fb8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    2fb8:	55                   	push   %rbp
    2fb9:	48 89 e5             	mov    %rsp,%rbp
    2fbc:	53                   	push   %rbx
    2fbd:	48 83 ec 28          	sub    $0x28,%rsp
    2fc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2fc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2fc9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    2fcd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    2fd1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2fd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2fd9:	48 89 d6             	mov    %rdx,%rsi
    2fdc:	48 89 c7             	mov    %rax,%rdi
    2fdf:	e8 f3 06 00 00       	call   36d7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    2fe4:	48 89 c1             	mov    %rax,%rcx
    2fe7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2feb:	48 89 c2             	mov    %rax,%rdx
    2fee:	48 89 ce             	mov    %rcx,%rsi
    2ff1:	48 89 df             	mov    %rbx,%rdi
    2ff4:	e8 3f 07 00 00       	call   3738 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    2ff9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2ffd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3001:	48 89 d6             	mov    %rdx,%rsi
    3004:	48 89 c7             	mov    %rax,%rdi
    3007:	e8 8a 07 00 00       	call   3796 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    300c:	eb 1a                	jmp    3028 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    300e:	48 89 c3             	mov    %rax,%rbx
    3011:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3015:	48 89 c7             	mov    %rax,%rdi
    3018:	e8 79 00 00 00       	call   3096 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    301d:	48 89 d8             	mov    %rbx,%rax
    3020:	48 89 c7             	mov    %rax,%rdi
    3023:	e8 e8 f2 ff ff       	call   2310 <_Unwind_Resume@plt>
    3028:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    302c:	c9                   	leave
    302d:	c3                   	ret

000000000000302e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    302e:	55                   	push   %rbp
    302f:	48 89 e5             	mov    %rsp,%rbp
    3032:	48 83 ec 10          	sub    $0x10,%rsp
    3036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    303a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    303e:	48 89 c7             	mov    %rax,%rdi
    3041:	e8 90 07 00 00       	call   37d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3046:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    304d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3055:	48 8b 00             	mov    (%rax),%rax
    3058:	48 89 ce             	mov    %rcx,%rsi
    305b:	48 89 c7             	mov    %rax,%rdi
    305e:	e8 81 07 00 00       	call   37e4 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    3063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3067:	48 89 c7             	mov    %rax,%rdi
    306a:	e8 27 00 00 00       	call   3096 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    306f:	90                   	nop
    3070:	c9                   	leave
    3071:	c3                   	ret

0000000000003072 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    3072:	55                   	push   %rbp
    3073:	48 89 e5             	mov    %rsp,%rbp
    3076:	48 83 ec 10          	sub    $0x10,%rsp
    307a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    307e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3082:	48 8b 10             	mov    (%rax),%rdx
    3085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3089:	48 89 d6             	mov    %rdx,%rsi
    308c:	48 89 c7             	mov    %rax,%rdi
    308f:	e8 7a 07 00 00       	call   380e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3094:	c9                   	leave
    3095:	c3                   	ret

0000000000003096 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3096:	55                   	push   %rbp
    3097:	48 89 e5             	mov    %rsp,%rbp
    309a:	48 83 ec 10          	sub    $0x10,%rsp
    309e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    30a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30a6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    30aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30ae:	48 8b 00             	mov    (%rax),%rax
    30b1:	48 29 c2             	sub    %rax,%rdx
    30b4:	48 c1 fa 02          	sar    $0x2,%rdx
    30b8:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    30bf:	fc c0 0f 
    30c2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    30c6:	48 89 c2             	mov    %rax,%rdx
    30c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30cd:	48 8b 08             	mov    (%rax),%rcx
    30d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30d4:	48 89 ce             	mov    %rcx,%rsi
    30d7:	48 89 c7             	mov    %rax,%rdi
    30da:	e8 67 07 00 00       	call   3846 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    30df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30e3:	48 89 c7             	mov    %rax,%rdi
    30e6:	e8 09 fe ff ff       	call   2ef4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    30eb:	90                   	nop
    30ec:	c9                   	leave
    30ed:	c3                   	ret

00000000000030ee <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    30ee:	55                   	push   %rbp
    30ef:	48 89 e5             	mov    %rsp,%rbp
    30f2:	48 83 ec 10          	sub    $0x10,%rsp
    30f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    30fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30fe:	48 89 c7             	mov    %rax,%rdi
    3101:	e8 76 07 00 00       	call   387c <_ZNSt15__new_allocatorIPKcEC1Ev>
    3106:	90                   	nop
    3107:	c9                   	leave
    3108:	c3                   	ret
    3109:	90                   	nop

000000000000310a <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    310a:	55                   	push   %rbp
    310b:	48 89 e5             	mov    %rsp,%rbp
    310e:	48 83 ec 10          	sub    $0x10,%rsp
    3112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    311a:	48 89 c7             	mov    %rax,%rdi
    311d:	e8 66 07 00 00       	call   3888 <_ZNSt15__new_allocatorIPKcED1Ev>
    3122:	90                   	nop
    3123:	c9                   	leave
    3124:	c3                   	ret
    3125:	90                   	nop

0000000000003126 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3126:	55                   	push   %rbp
    3127:	48 89 e5             	mov    %rsp,%rbp
    312a:	53                   	push   %rbx
    312b:	48 83 ec 28          	sub    $0x28,%rsp
    312f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3133:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3137:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    313b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    313f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3143:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3147:	48 89 d6             	mov    %rdx,%rsi
    314a:	48 89 c7             	mov    %rax,%rdi
    314d:	e8 41 07 00 00       	call   3893 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    3152:	48 89 c1             	mov    %rax,%rcx
    3155:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3159:	48 89 c2             	mov    %rax,%rdx
    315c:	48 89 ce             	mov    %rcx,%rsi
    315f:	48 89 df             	mov    %rbx,%rdi
    3162:	e8 8d 07 00 00       	call   38f4 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    3167:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    316b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    316f:	48 89 d6             	mov    %rdx,%rsi
    3172:	48 89 c7             	mov    %rax,%rdi
    3175:	e8 d8 07 00 00       	call   3952 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    317a:	eb 1a                	jmp    3196 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    317c:	48 89 c3             	mov    %rax,%rbx
    317f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3183:	48 89 c7             	mov    %rax,%rdi
    3186:	e8 a7 00 00 00       	call   3232 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    318b:	48 89 d8             	mov    %rbx,%rax
    318e:	48 89 c7             	mov    %rax,%rdi
    3191:	e8 7a f1 ff ff       	call   2310 <_Unwind_Resume@plt>
    3196:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    319a:	c9                   	leave
    319b:	c3                   	ret

000000000000319c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    319c:	55                   	push   %rbp
    319d:	48 89 e5             	mov    %rsp,%rbp
    31a0:	48 83 ec 10          	sub    $0x10,%rsp
    31a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    31a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31ac:	48 89 c7             	mov    %rax,%rdi
    31af:	e8 de 07 00 00       	call   3992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    31b4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    31b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31bb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    31bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31c3:	48 8b 00             	mov    (%rax),%rax
    31c6:	48 89 ce             	mov    %rcx,%rsi
    31c9:	48 89 c7             	mov    %rax,%rdi
    31cc:	e8 cf 07 00 00       	call   39a0 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    31d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31d5:	48 89 c7             	mov    %rax,%rdi
    31d8:	e8 55 00 00 00       	call   3232 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    31dd:	90                   	nop
    31de:	c9                   	leave
    31df:	c3                   	ret

00000000000031e0 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    31e0:	55                   	push   %rbp
    31e1:	48 89 e5             	mov    %rsp,%rbp
    31e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    31e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    31ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31f0:	48 8b 00             	mov    (%rax),%rax
    31f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    31f7:	48 c1 e2 03          	shl    $0x3,%rdx
    31fb:	48 01 d0             	add    %rdx,%rax
      }
    31fe:	5d                   	pop    %rbp
    31ff:	c3                   	ret

0000000000003200 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      }

#if __cplusplus >= 201103L
      _GLIBCXX20_CONSTEXPR
      void
      push_back(value_type&& __x)
    3200:	55                   	push   %rbp
    3201:	48 89 e5             	mov    %rsp,%rbp
    3204:	48 83 ec 10          	sub    $0x10,%rsp
    3208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    320c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    3210:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3214:	48 89 c7             	mov    %rax,%rdi
    3217:	e8 ae 07 00 00       	call   39ca <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    321c:	48 89 c2             	mov    %rax,%rdx
    321f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3223:	48 89 d6             	mov    %rdx,%rsi
    3226:	48 89 c7             	mov    %rax,%rdi
    3229:	e8 aa 07 00 00       	call   39d8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    322e:	90                   	nop
    322f:	c9                   	leave
    3230:	c3                   	ret
    3231:	90                   	nop

0000000000003232 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3232:	55                   	push   %rbp
    3233:	48 89 e5             	mov    %rsp,%rbp
    3236:	48 83 ec 10          	sub    $0x10,%rsp
    323a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    323e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3242:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    324a:	48 8b 00             	mov    (%rax),%rax
    324d:	48 29 c2             	sub    %rax,%rdx
    3250:	48 89 d0             	mov    %rdx,%rax
    3253:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3257:	48 89 c2             	mov    %rax,%rdx
    325a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    325e:	48 8b 08             	mov    (%rax),%rcx
    3261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3265:	48 89 ce             	mov    %rcx,%rsi
    3268:	48 89 c7             	mov    %rax,%rdi
    326b:	e8 32 08 00 00       	call   3aa2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    3270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3274:	48 89 c7             	mov    %rax,%rdi
    3277:	e8 94 fc ff ff       	call   2f10 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    327c:	90                   	nop
    327d:	c9                   	leave
    327e:	c3                   	ret
    327f:	90                   	nop

0000000000003280 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3280:	55                   	push   %rbp
    3281:	48 89 e5             	mov    %rsp,%rbp
    3284:	48 83 ec 10          	sub    $0x10,%rsp
    3288:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    328c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3290:	48 89 c7             	mov    %rax,%rdi
    3293:	e8 40 08 00 00       	call   3ad8 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    3298:	90                   	nop
    3299:	c9                   	leave
    329a:	c3                   	ret
    329b:	90                   	nop

000000000000329c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    329c:	55                   	push   %rbp
    329d:	48 89 e5             	mov    %rsp,%rbp
    32a0:	48 83 ec 10          	sub    $0x10,%rsp
    32a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    32a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32ac:	48 89 c7             	mov    %rax,%rdi
    32af:	e8 30 08 00 00       	call   3ae4 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    32b4:	90                   	nop
    32b5:	c9                   	leave
    32b6:	c3                   	ret
    32b7:	90                   	nop

00000000000032b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    32b8:	55                   	push   %rbp
    32b9:	48 89 e5             	mov    %rsp,%rbp
    32bc:	53                   	push   %rbx
    32bd:	48 83 ec 28          	sub    $0x28,%rsp
    32c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    32c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    32c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    32cd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    32d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    32d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    32d9:	48 89 d6             	mov    %rdx,%rsi
    32dc:	48 89 c7             	mov    %rax,%rdi
    32df:	e8 0b 08 00 00       	call   3aef <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    32e4:	48 89 c1             	mov    %rax,%rcx
    32e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    32eb:	48 89 c2             	mov    %rax,%rdx
    32ee:	48 89 ce             	mov    %rcx,%rsi
    32f1:	48 89 df             	mov    %rbx,%rdi
    32f4:	e8 57 08 00 00       	call   3b50 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    32f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    32fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3301:	48 89 d6             	mov    %rdx,%rsi
    3304:	48 89 c7             	mov    %rax,%rdi
    3307:	e8 a2 08 00 00       	call   3bae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    330c:	eb 1a                	jmp    3328 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    330e:	48 89 c3             	mov    %rax,%rbx
    3311:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3315:	48 89 c7             	mov    %rax,%rdi
    3318:	e8 79 00 00 00       	call   3396 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    331d:	48 89 d8             	mov    %rbx,%rax
    3320:	48 89 c7             	mov    %rax,%rdi
    3323:	e8 e8 ef ff ff       	call   2310 <_Unwind_Resume@plt>
    3328:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    332c:	c9                   	leave
    332d:	c3                   	ret

000000000000332e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    332e:	55                   	push   %rbp
    332f:	48 89 e5             	mov    %rsp,%rbp
    3332:	48 83 ec 10          	sub    $0x10,%rsp
    3336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    333a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    333e:	48 89 c7             	mov    %rax,%rdi
    3341:	e8 a8 08 00 00       	call   3bee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3346:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    334d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3355:	48 8b 00             	mov    (%rax),%rax
    3358:	48 89 ce             	mov    %rcx,%rsi
    335b:	48 89 c7             	mov    %rax,%rdi
    335e:	e8 99 08 00 00       	call   3bfc <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    3363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3367:	48 89 c7             	mov    %rax,%rdi
    336a:	e8 27 00 00 00       	call   3396 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    336f:	90                   	nop
    3370:	c9                   	leave
    3371:	c3                   	ret

0000000000003372 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    3372:	55                   	push   %rbp
    3373:	48 89 e5             	mov    %rsp,%rbp
    3376:	48 83 ec 10          	sub    $0x10,%rsp
    337a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    337e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3382:	48 8b 10             	mov    (%rax),%rdx
    3385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3389:	48 89 d6             	mov    %rdx,%rsi
    338c:	48 89 c7             	mov    %rax,%rdi
    338f:	e8 92 08 00 00       	call   3c26 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3394:	c9                   	leave
    3395:	c3                   	ret

0000000000003396 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3396:	55                   	push   %rbp
    3397:	48 89 e5             	mov    %rsp,%rbp
    339a:	48 83 ec 10          	sub    $0x10,%rsp
    339e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    33a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33a6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    33aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33ae:	48 8b 00             	mov    (%rax),%rax
    33b1:	48 29 c2             	sub    %rax,%rdx
    33b4:	48 c1 fa 03          	sar    $0x3,%rdx
    33b8:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    33bf:	fc c0 0f 
    33c2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    33c6:	48 89 c2             	mov    %rax,%rdx
    33c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33cd:	48 8b 08             	mov    (%rax),%rcx
    33d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33d4:	48 89 ce             	mov    %rcx,%rsi
    33d7:	48 89 c7             	mov    %rax,%rdi
    33da:	e8 7f 08 00 00       	call   3c5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    33df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33e3:	48 89 c7             	mov    %rax,%rdi
    33e6:	e8 41 fb ff ff       	call   2f2c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    33eb:	90                   	nop
    33ec:	c9                   	leave
    33ed:	c3                   	ret

00000000000033ee <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    33ee:	55                   	push   %rbp
    33ef:	48 89 e5             	mov    %rsp,%rbp
    33f2:	48 83 ec 10          	sub    $0x10,%rsp
    33f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33fe:	48 89 c7             	mov    %rax,%rdi
    3401:	e8 8e 08 00 00       	call   3c94 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    3406:	90                   	nop
    3407:	c9                   	leave
    3408:	c3                   	ret
    3409:	90                   	nop

000000000000340a <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    340a:	55                   	push   %rbp
    340b:	48 89 e5             	mov    %rsp,%rbp
    340e:	48 83 ec 10          	sub    $0x10,%rsp
    3412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    341a:	48 89 c7             	mov    %rax,%rdi
    341d:	e8 7e 08 00 00       	call   3ca0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    3422:	90                   	nop
    3423:	c9                   	leave
    3424:	c3                   	ret
    3425:	90                   	nop

0000000000003426 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3426:	55                   	push   %rbp
    3427:	48 89 e5             	mov    %rsp,%rbp
    342a:	53                   	push   %rbx
    342b:	48 83 ec 28          	sub    $0x28,%rsp
    342f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3433:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3437:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    343b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    343f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3443:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3447:	48 89 d6             	mov    %rdx,%rsi
    344a:	48 89 c7             	mov    %rax,%rdi
    344d:	e8 59 08 00 00       	call   3cab <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    3452:	48 89 c1             	mov    %rax,%rcx
    3455:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3459:	48 89 c2             	mov    %rax,%rdx
    345c:	48 89 ce             	mov    %rcx,%rsi
    345f:	48 89 df             	mov    %rbx,%rdi
    3462:	e8 a5 08 00 00       	call   3d0c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    3467:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    346b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    346f:	48 89 d6             	mov    %rdx,%rsi
    3472:	48 89 c7             	mov    %rax,%rdi
    3475:	e8 f0 08 00 00       	call   3d6a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    347a:	eb 1a                	jmp    3496 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    347c:	48 89 c3             	mov    %rax,%rbx
    347f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3483:	48 89 c7             	mov    %rax,%rdi
    3486:	e8 79 00 00 00       	call   3504 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    348b:	48 89 d8             	mov    %rbx,%rax
    348e:	48 89 c7             	mov    %rax,%rdi
    3491:	e8 7a ee ff ff       	call   2310 <_Unwind_Resume@plt>
    3496:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    349a:	c9                   	leave
    349b:	c3                   	ret

000000000000349c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    349c:	55                   	push   %rbp
    349d:	48 89 e5             	mov    %rsp,%rbp
    34a0:	48 83 ec 10          	sub    $0x10,%rsp
    34a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    34a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34ac:	48 89 c7             	mov    %rax,%rdi
    34af:	e8 f6 08 00 00       	call   3daa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    34b4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    34b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34bb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    34bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34c3:	48 8b 00             	mov    (%rax),%rax
    34c6:	48 89 ce             	mov    %rcx,%rsi
    34c9:	48 89 c7             	mov    %rax,%rdi
    34cc:	e8 e7 08 00 00       	call   3db8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    34d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34d5:	48 89 c7             	mov    %rax,%rdi
    34d8:	e8 27 00 00 00       	call   3504 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    34dd:	90                   	nop
    34de:	c9                   	leave
    34df:	c3                   	ret

00000000000034e0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    34e0:	55                   	push   %rbp
    34e1:	48 89 e5             	mov    %rsp,%rbp
    34e4:	48 83 ec 10          	sub    $0x10,%rsp
    34e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    34ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34f0:	48 8b 10             	mov    (%rax),%rdx
    34f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34f7:	48 89 d6             	mov    %rdx,%rsi
    34fa:	48 89 c7             	mov    %rax,%rdi
    34fd:	e8 e0 08 00 00       	call   3de2 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    3502:	c9                   	leave
    3503:	c3                   	ret

0000000000003504 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3504:	55                   	push   %rbp
    3505:	48 89 e5             	mov    %rsp,%rbp
    3508:	48 83 ec 10          	sub    $0x10,%rsp
    350c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3514:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    351c:	48 8b 00             	mov    (%rax),%rax
    351f:	48 29 c2             	sub    %rax,%rdx
    3522:	48 89 d0             	mov    %rdx,%rax
    3525:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3529:	48 89 c2             	mov    %rax,%rdx
    352c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3530:	48 8b 08             	mov    (%rax),%rcx
    3533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3537:	48 89 ce             	mov    %rcx,%rsi
    353a:	48 89 c7             	mov    %rax,%rdi
    353d:	e8 d8 08 00 00       	call   3e1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3546:	48 89 c7             	mov    %rax,%rdi
    3549:	e8 fa f9 ff ff       	call   2f48 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    354e:	90                   	nop
    354f:	c9                   	leave
    3550:	c3                   	ret
    3551:	90                   	nop

0000000000003552 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3552:	55                   	push   %rbp
    3553:	48 89 e5             	mov    %rsp,%rbp
    3556:	48 83 ec 10          	sub    $0x10,%rsp
    355a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    355e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3562:	48 89 c7             	mov    %rax,%rdi
    3565:	e8 e6 08 00 00       	call   3e50 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    356a:	90                   	nop
    356b:	c9                   	leave
    356c:	c3                   	ret
    356d:	90                   	nop

000000000000356e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    356e:	55                   	push   %rbp
    356f:	48 89 e5             	mov    %rsp,%rbp
    3572:	48 83 ec 10          	sub    $0x10,%rsp
    3576:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    357a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    357e:	48 89 c7             	mov    %rax,%rdi
    3581:	e8 d6 08 00 00       	call   3e5c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    3586:	90                   	nop
    3587:	c9                   	leave
    3588:	c3                   	ret
    3589:	90                   	nop

000000000000358a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    358a:	55                   	push   %rbp
    358b:	48 89 e5             	mov    %rsp,%rbp
    358e:	53                   	push   %rbx
    358f:	48 83 ec 28          	sub    $0x28,%rsp
    3593:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3597:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    359b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    359f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    35a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    35a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    35ab:	48 89 d6             	mov    %rdx,%rsi
    35ae:	48 89 c7             	mov    %rax,%rdi
    35b1:	e8 b1 08 00 00       	call   3e67 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    35b6:	48 89 c1             	mov    %rax,%rcx
    35b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    35bd:	48 89 c2             	mov    %rax,%rdx
    35c0:	48 89 ce             	mov    %rcx,%rsi
    35c3:	48 89 df             	mov    %rbx,%rdi
    35c6:	e8 fd 08 00 00       	call   3ec8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    35cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    35cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35d3:	48 89 d6             	mov    %rdx,%rsi
    35d6:	48 89 c7             	mov    %rax,%rdi
    35d9:	e8 48 09 00 00       	call   3f26 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    35de:	eb 1a                	jmp    35fa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    35e0:	48 89 c3             	mov    %rax,%rbx
    35e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35e7:	48 89 c7             	mov    %rax,%rdi
    35ea:	e8 79 00 00 00       	call   3668 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    35ef:	48 89 d8             	mov    %rbx,%rax
    35f2:	48 89 c7             	mov    %rax,%rdi
    35f5:	e8 16 ed ff ff       	call   2310 <_Unwind_Resume@plt>
    35fa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    35fe:	c9                   	leave
    35ff:	c3                   	ret

0000000000003600 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3600:	55                   	push   %rbp
    3601:	48 89 e5             	mov    %rsp,%rbp
    3604:	48 83 ec 10          	sub    $0x10,%rsp
    3608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    360c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3610:	48 89 c7             	mov    %rax,%rdi
    3613:	e8 4e 09 00 00       	call   3f66 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3618:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    361b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    361f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3627:	48 8b 00             	mov    (%rax),%rax
    362a:	48 89 ce             	mov    %rcx,%rsi
    362d:	48 89 c7             	mov    %rax,%rdi
    3630:	e8 3f 09 00 00       	call   3f74 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    3635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3639:	48 89 c7             	mov    %rax,%rdi
    363c:	e8 27 00 00 00       	call   3668 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    3641:	90                   	nop
    3642:	c9                   	leave
    3643:	c3                   	ret

0000000000003644 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    3644:	55                   	push   %rbp
    3645:	48 89 e5             	mov    %rsp,%rbp
    3648:	48 83 ec 10          	sub    $0x10,%rsp
    364c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    3650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3654:	48 8b 10             	mov    (%rax),%rdx
    3657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    365b:	48 89 d6             	mov    %rdx,%rsi
    365e:	48 89 c7             	mov    %rax,%rdi
    3661:	e8 38 09 00 00       	call   3f9e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3666:	c9                   	leave
    3667:	c3                   	ret

0000000000003668 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3668:	55                   	push   %rbp
    3669:	48 89 e5             	mov    %rsp,%rbp
    366c:	48 83 ec 10          	sub    $0x10,%rsp
    3670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3678:	48 8b 50 10          	mov    0x10(%rax),%rdx
    367c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3680:	48 8b 00             	mov    (%rax),%rax
    3683:	48 29 c2             	sub    %rax,%rdx
    3686:	48 c1 fa 03          	sar    $0x3,%rdx
    368a:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    3691:	aa aa aa 
    3694:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    3698:	48 89 c2             	mov    %rax,%rdx
    369b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    369f:	48 8b 08             	mov    (%rax),%rcx
    36a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36a6:	48 89 ce             	mov    %rcx,%rsi
    36a9:	48 89 c7             	mov    %rax,%rdi
    36ac:	e8 25 09 00 00       	call   3fd6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    36b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36b5:	48 89 c7             	mov    %rax,%rdi
    36b8:	e8 a7 f8 ff ff       	call   2f64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    36bd:	90                   	nop
    36be:	c9                   	leave
    36bf:	c3                   	ret

00000000000036c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    36c0:	55                   	push   %rbp
    36c1:	48 89 e5             	mov    %rsp,%rbp
    36c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36c8:	90                   	nop
    36c9:	5d                   	pop    %rbp
    36ca:	c3                   	ret
    36cb:	90                   	nop

00000000000036cc <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    36cc:	55                   	push   %rbp
    36cd:	48 89 e5             	mov    %rsp,%rbp
    36d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36d4:	90                   	nop
    36d5:	5d                   	pop    %rbp
    36d6:	c3                   	ret

00000000000036d7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    36d7:	55                   	push   %rbp
    36d8:	48 89 e5             	mov    %rsp,%rbp
    36db:	53                   	push   %rbx
    36dc:	48 83 ec 28          	sub    $0x28,%rsp
    36e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    36e4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    36e8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    36ec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    36f0:	48 89 d6             	mov    %rdx,%rsi
    36f3:	48 89 c7             	mov    %rax,%rdi
    36f6:	e8 25 01 00 00       	call   3820 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    36fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    36ff:	48 89 c7             	mov    %rax,%rdi
    3702:	e8 04 09 00 00       	call   400b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3707:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    370b:	0f 92 c3             	setb   %bl
    370e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3712:	48 89 c7             	mov    %rax,%rdi
    3715:	e8 82 f8 ff ff       	call   2f9c <_ZNSaI21VkExtensionPropertiesED1Ev>
    371a:	84 db                	test   %bl,%bl
    371c:	74 0f                	je     372d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    371e:	48 8d 05 6b 61 00 00 	lea    0x616b(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3725:	48 89 c7             	mov    %rax,%rdi
    3728:	e8 93 e9 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    372d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3731:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3735:	c9                   	leave
    3736:	c3                   	ret
    3737:	90                   	nop

0000000000003738 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3738:	55                   	push   %rbp
    3739:	48 89 e5             	mov    %rsp,%rbp
    373c:	53                   	push   %rbx
    373d:	48 83 ec 28          	sub    $0x28,%rsp
    3741:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3745:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3749:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    374d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3751:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3755:	48 89 d6             	mov    %rdx,%rsi
    3758:	48 89 c7             	mov    %rax,%rdi
    375b:	e8 ee 08 00 00       	call   404e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3760:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3768:	48 89 d6             	mov    %rdx,%rsi
    376b:	48 89 c7             	mov    %rax,%rdi
    376e:	e8 0d 09 00 00       	call   4080 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    3773:	eb 1a                	jmp    378f <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3775:	48 89 c3             	mov    %rax,%rbx
    3778:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    377c:	48 89 c7             	mov    %rax,%rdi
    377f:	e8 70 f7 ff ff       	call   2ef4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    3784:	48 89 d8             	mov    %rbx,%rax
    3787:	48 89 c7             	mov    %rax,%rdi
    378a:	e8 81 eb ff ff       	call   2310 <_Unwind_Resume@plt>
    378f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3793:	c9                   	leave
    3794:	c3                   	ret
    3795:	90                   	nop

0000000000003796 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3796:	55                   	push   %rbp
    3797:	48 89 e5             	mov    %rsp,%rbp
    379a:	48 83 ec 10          	sub    $0x10,%rsp
    379e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    37a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37aa:	48 89 c7             	mov    %rax,%rdi
    37ad:	e8 24 00 00 00       	call   37d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    37b2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    37b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37b9:	48 8b 00             	mov    (%rax),%rax
    37bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    37c0:	48 89 ce             	mov    %rcx,%rsi
    37c3:	48 89 c7             	mov    %rax,%rdi
    37c6:	e8 16 09 00 00       	call   40e1 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    37cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    37cf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    37d3:	90                   	nop
    37d4:	c9                   	leave
    37d5:	c3                   	ret

00000000000037d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    37d6:	55                   	push   %rbp
    37d7:	48 89 e5             	mov    %rsp,%rbp
    37da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    37de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37e2:	5d                   	pop    %rbp
    37e3:	c3                   	ret

00000000000037e4 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    37e4:	55                   	push   %rbp
    37e5:	48 89 e5             	mov    %rsp,%rbp
    37e8:	48 83 ec 20          	sub    $0x20,%rsp
    37ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    37f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    37f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    37fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3800:	48 89 d6             	mov    %rdx,%rsi
    3803:	48 89 c7             	mov    %rax,%rdi
    3806:	e8 ff 08 00 00       	call   410a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    380b:	90                   	nop
    380c:	c9                   	leave
    380d:	c3                   	ret

000000000000380e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    380e:	55                   	push   %rbp
    380f:	48 89 e5             	mov    %rsp,%rbp
    3812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3816:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    381a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    381e:	5d                   	pop    %rbp
    381f:	c3                   	ret

0000000000003820 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3820:	55                   	push   %rbp
    3821:	48 89 e5             	mov    %rsp,%rbp
    3824:	48 83 ec 10          	sub    $0x10,%rsp
    3828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    382c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3830:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3838:	48 89 d6             	mov    %rdx,%rsi
    383b:	48 89 c7             	mov    %rax,%rdi
    383e:	e8 ed 08 00 00       	call   4130 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    3843:	90                   	nop
    3844:	c9                   	leave
    3845:	c3                   	ret

0000000000003846 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3846:	55                   	push   %rbp
    3847:	48 89 e5             	mov    %rsp,%rbp
    384a:	48 83 ec 20          	sub    $0x20,%rsp
    384e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3852:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3856:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    385a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    385f:	74 17                	je     3878 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3865:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3869:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    386d:	48 89 ce             	mov    %rcx,%rsi
    3870:	48 89 c7             	mov    %rax,%rdi
    3873:	e8 c7 08 00 00       	call   413f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    3878:	90                   	nop
    3879:	c9                   	leave
    387a:	c3                   	ret
    387b:	90                   	nop

000000000000387c <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    387c:	55                   	push   %rbp
    387d:	48 89 e5             	mov    %rsp,%rbp
    3880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3884:	90                   	nop
    3885:	5d                   	pop    %rbp
    3886:	c3                   	ret
    3887:	90                   	nop

0000000000003888 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3888:	55                   	push   %rbp
    3889:	48 89 e5             	mov    %rsp,%rbp
    388c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3890:	90                   	nop
    3891:	5d                   	pop    %rbp
    3892:	c3                   	ret

0000000000003893 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3893:	55                   	push   %rbp
    3894:	48 89 e5             	mov    %rsp,%rbp
    3897:	53                   	push   %rbx
    3898:	48 83 ec 28          	sub    $0x28,%rsp
    389c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    38a0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    38a4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    38a8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    38ac:	48 89 d6             	mov    %rdx,%rsi
    38af:	48 89 c7             	mov    %rax,%rdi
    38b2:	e8 c5 01 00 00       	call   3a7c <_ZNSaIPKcEC1ERKS1_>
    38b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    38bb:	48 89 c7             	mov    %rax,%rdi
    38be:	e8 aa 08 00 00       	call   416d <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    38c3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    38c7:	0f 92 c3             	setb   %bl
    38ca:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    38ce:	48 89 c7             	mov    %rax,%rdi
    38d1:	e8 34 f8 ff ff       	call   310a <_ZNSaIPKcED1Ev>
    38d6:	84 db                	test   %bl,%bl
    38d8:	74 0f                	je     38e9 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    38da:	48 8d 05 af 5f 00 00 	lea    0x5faf(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    38e1:	48 89 c7             	mov    %rax,%rdi
    38e4:	e8 d7 e7 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    38e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    38ed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    38f1:	c9                   	leave
    38f2:	c3                   	ret
    38f3:	90                   	nop

00000000000038f4 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    38f4:	55                   	push   %rbp
    38f5:	48 89 e5             	mov    %rsp,%rbp
    38f8:	53                   	push   %rbx
    38f9:	48 83 ec 28          	sub    $0x28,%rsp
    38fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3901:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3905:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    390d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3911:	48 89 d6             	mov    %rdx,%rsi
    3914:	48 89 c7             	mov    %rax,%rdi
    3917:	e8 94 08 00 00       	call   41b0 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    391c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3920:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3924:	48 89 d6             	mov    %rdx,%rsi
    3927:	48 89 c7             	mov    %rax,%rdi
    392a:	e8 b3 08 00 00       	call   41e2 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    392f:	eb 1a                	jmp    394b <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    3931:	48 89 c3             	mov    %rax,%rbx
    3934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3938:	48 89 c7             	mov    %rax,%rdi
    393b:	e8 d0 f5 ff ff       	call   2f10 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    3940:	48 89 d8             	mov    %rbx,%rax
    3943:	48 89 c7             	mov    %rax,%rdi
    3946:	e8 c5 e9 ff ff       	call   2310 <_Unwind_Resume@plt>
    394b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    394f:	c9                   	leave
    3950:	c3                   	ret
    3951:	90                   	nop

0000000000003952 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3952:	55                   	push   %rbp
    3953:	48 89 e5             	mov    %rsp,%rbp
    3956:	48 83 ec 10          	sub    $0x10,%rsp
    395a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    395e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3966:	48 89 c7             	mov    %rax,%rdi
    3969:	e8 24 00 00 00       	call   3992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    396e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3975:	48 8b 00             	mov    (%rax),%rax
    3978:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    397c:	48 89 ce             	mov    %rcx,%rsi
    397f:	48 89 c7             	mov    %rax,%rdi
    3982:	e8 b1 08 00 00       	call   4238 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3987:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    398b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    398f:	90                   	nop
    3990:	c9                   	leave
    3991:	c3                   	ret

0000000000003992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3992:	55                   	push   %rbp
    3993:	48 89 e5             	mov    %rsp,%rbp
    3996:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    399a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    399e:	5d                   	pop    %rbp
    399f:	c3                   	ret

00000000000039a0 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    39a0:	55                   	push   %rbp
    39a1:	48 89 e5             	mov    %rsp,%rbp
    39a4:	48 83 ec 20          	sub    $0x20,%rsp
    39a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    39b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    39b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    39b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39bc:	48 89 d6             	mov    %rdx,%rsi
    39bf:	48 89 c7             	mov    %rax,%rdi
    39c2:	e8 9a 08 00 00       	call   4261 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    39c7:	90                   	nop
    39c8:	c9                   	leave
    39c9:	c3                   	ret

00000000000039ca <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    39ca:	55                   	push   %rbp
    39cb:	48 89 e5             	mov    %rsp,%rbp
    39ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    39d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39d6:	5d                   	pop    %rbp
    39d7:	c3                   	ret

00000000000039d8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    39d8:	55                   	push   %rbp
    39d9:	48 89 e5             	mov    %rsp,%rbp
    39dc:	53                   	push   %rbx
    39dd:	48 83 ec 18          	sub    $0x18,%rsp
    39e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    39e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    39e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39ed:	48 8b 50 08          	mov    0x8(%rax),%rdx
    39f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39f5:	48 8b 40 10          	mov    0x10(%rax),%rax
    39f9:	48 39 c2             	cmp    %rax,%rdx
    39fc:	74 3c                	je     3a3a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    39fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a02:	48 89 c7             	mov    %rax,%rdi
    3a05:	e8 7d 08 00 00       	call   4287 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    3a0a:	48 89 c2             	mov    %rax,%rdx
    3a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a11:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a19:	48 89 ce             	mov    %rcx,%rsi
    3a1c:	48 89 c7             	mov    %rax,%rdi
    3a1f:	e8 71 08 00 00       	call   4295 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    3a24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a28:	48 8b 40 08          	mov    0x8(%rax),%rax
    3a2c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3a30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a34:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3a38:	eb 30                	jmp    3a6a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    3a3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a3e:	48 89 c7             	mov    %rax,%rdi
    3a41:	e8 41 08 00 00       	call   4287 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    3a46:	48 89 c3             	mov    %rax,%rbx
    3a49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a4d:	48 89 c7             	mov    %rax,%rdi
    3a50:	e8 79 08 00 00       	call   42ce <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    3a55:	48 89 c1             	mov    %rax,%rcx
    3a58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a5c:	48 89 da             	mov    %rbx,%rdx
    3a5f:	48 89 ce             	mov    %rcx,%rsi
    3a62:	48 89 c7             	mov    %rax,%rdi
    3a65:	e8 8e 08 00 00       	call   42f8 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    3a6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a6e:	48 89 c7             	mov    %rax,%rdi
    3a71:	e8 14 0a 00 00       	call   448a <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    3a76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a7a:	c9                   	leave
    3a7b:	c3                   	ret

0000000000003a7c <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3a7c:	55                   	push   %rbp
    3a7d:	48 89 e5             	mov    %rsp,%rbp
    3a80:	48 83 ec 10          	sub    $0x10,%rsp
    3a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3a8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a94:	48 89 d6             	mov    %rdx,%rsi
    3a97:	48 89 c7             	mov    %rax,%rdi
    3a9a:	e8 2b 0a 00 00       	call   44ca <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    3a9f:	90                   	nop
    3aa0:	c9                   	leave
    3aa1:	c3                   	ret

0000000000003aa2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3aa2:	55                   	push   %rbp
    3aa3:	48 89 e5             	mov    %rsp,%rbp
    3aa6:	48 83 ec 20          	sub    $0x20,%rsp
    3aaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3aae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3ab2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3ab6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3abb:	74 17                	je     3ad4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ac1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ac5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3ac9:	48 89 ce             	mov    %rcx,%rsi
    3acc:	48 89 c7             	mov    %rax,%rdi
    3acf:	e8 05 0a 00 00       	call   44d9 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    3ad4:	90                   	nop
    3ad5:	c9                   	leave
    3ad6:	c3                   	ret
    3ad7:	90                   	nop

0000000000003ad8 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3ad8:	55                   	push   %rbp
    3ad9:	48 89 e5             	mov    %rsp,%rbp
    3adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ae0:	90                   	nop
    3ae1:	5d                   	pop    %rbp
    3ae2:	c3                   	ret
    3ae3:	90                   	nop

0000000000003ae4 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3ae4:	55                   	push   %rbp
    3ae5:	48 89 e5             	mov    %rsp,%rbp
    3ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3aec:	90                   	nop
    3aed:	5d                   	pop    %rbp
    3aee:	c3                   	ret

0000000000003aef <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3aef:	55                   	push   %rbp
    3af0:	48 89 e5             	mov    %rsp,%rbp
    3af3:	53                   	push   %rbx
    3af4:	48 83 ec 28          	sub    $0x28,%rsp
    3af8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3afc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3b00:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3b04:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b08:	48 89 d6             	mov    %rdx,%rsi
    3b0b:	48 89 c7             	mov    %rax,%rdi
    3b0e:	e8 25 01 00 00       	call   3c38 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    3b13:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b17:	48 89 c7             	mov    %rax,%rdi
    3b1a:	e8 e8 09 00 00       	call   4507 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3b1f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3b23:	0f 92 c3             	setb   %bl
    3b26:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3b2a:	48 89 c7             	mov    %rax,%rdi
    3b2d:	e8 6a f7 ff ff       	call   329c <_ZNSaI17VkLayerPropertiesED1Ev>
    3b32:	84 db                	test   %bl,%bl
    3b34:	74 0f                	je     3b45 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3b36:	48 8d 05 53 5d 00 00 	lea    0x5d53(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3b3d:	48 89 c7             	mov    %rax,%rdi
    3b40:	e8 7b e5 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3b45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3b49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3b4d:	c9                   	leave
    3b4e:	c3                   	ret
    3b4f:	90                   	nop

0000000000003b50 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3b50:	55                   	push   %rbp
    3b51:	48 89 e5             	mov    %rsp,%rbp
    3b54:	53                   	push   %rbx
    3b55:	48 83 ec 28          	sub    $0x28,%rsp
    3b59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3b5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3b61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3b65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3b6d:	48 89 d6             	mov    %rdx,%rsi
    3b70:	48 89 c7             	mov    %rax,%rdi
    3b73:	e8 d2 09 00 00       	call   454a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3b78:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3b7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b80:	48 89 d6             	mov    %rdx,%rsi
    3b83:	48 89 c7             	mov    %rax,%rdi
    3b86:	e8 f1 09 00 00       	call   457c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    3b8b:	eb 1a                	jmp    3ba7 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3b8d:	48 89 c3             	mov    %rax,%rbx
    3b90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b94:	48 89 c7             	mov    %rax,%rdi
    3b97:	e8 90 f3 ff ff       	call   2f2c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    3b9c:	48 89 d8             	mov    %rbx,%rax
    3b9f:	48 89 c7             	mov    %rax,%rdi
    3ba2:	e8 69 e7 ff ff       	call   2310 <_Unwind_Resume@plt>
    3ba7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3bab:	c9                   	leave
    3bac:	c3                   	ret
    3bad:	90                   	nop

0000000000003bae <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3bae:	55                   	push   %rbp
    3baf:	48 89 e5             	mov    %rsp,%rbp
    3bb2:	48 83 ec 10          	sub    $0x10,%rsp
    3bb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bc2:	48 89 c7             	mov    %rax,%rdi
    3bc5:	e8 24 00 00 00       	call   3bee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3bca:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bd1:	48 8b 00             	mov    (%rax),%rax
    3bd4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3bd8:	48 89 ce             	mov    %rcx,%rsi
    3bdb:	48 89 c7             	mov    %rax,%rdi
    3bde:	e8 fa 09 00 00       	call   45dd <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3be3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3be7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3beb:	90                   	nop
    3bec:	c9                   	leave
    3bed:	c3                   	ret

0000000000003bee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3bee:	55                   	push   %rbp
    3bef:	48 89 e5             	mov    %rsp,%rbp
    3bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bfa:	5d                   	pop    %rbp
    3bfb:	c3                   	ret

0000000000003bfc <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3bfc:	55                   	push   %rbp
    3bfd:	48 89 e5             	mov    %rsp,%rbp
    3c00:	48 83 ec 20          	sub    $0x20,%rsp
    3c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3c10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c18:	48 89 d6             	mov    %rdx,%rsi
    3c1b:	48 89 c7             	mov    %rax,%rdi
    3c1e:	e8 e3 09 00 00       	call   4606 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    3c23:	90                   	nop
    3c24:	c9                   	leave
    3c25:	c3                   	ret

0000000000003c26 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3c26:	55                   	push   %rbp
    3c27:	48 89 e5             	mov    %rsp,%rbp
    3c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3c32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c36:	5d                   	pop    %rbp
    3c37:	c3                   	ret

0000000000003c38 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3c38:	55                   	push   %rbp
    3c39:	48 89 e5             	mov    %rsp,%rbp
    3c3c:	48 83 ec 10          	sub    $0x10,%rsp
    3c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3c48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c50:	48 89 d6             	mov    %rdx,%rsi
    3c53:	48 89 c7             	mov    %rax,%rdi
    3c56:	e8 d1 09 00 00       	call   462c <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    3c5b:	90                   	nop
    3c5c:	c9                   	leave
    3c5d:	c3                   	ret

0000000000003c5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3c5e:	55                   	push   %rbp
    3c5f:	48 89 e5             	mov    %rsp,%rbp
    3c62:	48 83 ec 20          	sub    $0x20,%rsp
    3c66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3c72:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3c77:	74 17                	je     3c90 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3c81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3c85:	48 89 ce             	mov    %rcx,%rsi
    3c88:	48 89 c7             	mov    %rax,%rdi
    3c8b:	e8 ab 09 00 00       	call   463b <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    3c90:	90                   	nop
    3c91:	c9                   	leave
    3c92:	c3                   	ret
    3c93:	90                   	nop

0000000000003c94 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3c94:	55                   	push   %rbp
    3c95:	48 89 e5             	mov    %rsp,%rbp
    3c98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c9c:	90                   	nop
    3c9d:	5d                   	pop    %rbp
    3c9e:	c3                   	ret
    3c9f:	90                   	nop

0000000000003ca0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3ca0:	55                   	push   %rbp
    3ca1:	48 89 e5             	mov    %rsp,%rbp
    3ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ca8:	90                   	nop
    3ca9:	5d                   	pop    %rbp
    3caa:	c3                   	ret

0000000000003cab <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3cab:	55                   	push   %rbp
    3cac:	48 89 e5             	mov    %rsp,%rbp
    3caf:	53                   	push   %rbx
    3cb0:	48 83 ec 28          	sub    $0x28,%rsp
    3cb4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3cb8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3cbc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3cc0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3cc4:	48 89 d6             	mov    %rdx,%rsi
    3cc7:	48 89 c7             	mov    %rax,%rdi
    3cca:	e8 25 01 00 00       	call   3df4 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    3ccf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3cd3:	48 89 c7             	mov    %rax,%rdi
    3cd6:	e8 8e 09 00 00       	call   4669 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    3cdb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3cdf:	0f 92 c3             	setb   %bl
    3ce2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ce6:	48 89 c7             	mov    %rax,%rdi
    3ce9:	e8 1c f7 ff ff       	call   340a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    3cee:	84 db                	test   %bl,%bl
    3cf0:	74 0f                	je     3d01 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    3cf2:	48 8d 05 97 5b 00 00 	lea    0x5b97(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3cf9:	48 89 c7             	mov    %rax,%rdi
    3cfc:	e8 bf e3 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3d01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3d05:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3d09:	c9                   	leave
    3d0a:	c3                   	ret
    3d0b:	90                   	nop

0000000000003d0c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3d0c:	55                   	push   %rbp
    3d0d:	48 89 e5             	mov    %rsp,%rbp
    3d10:	53                   	push   %rbx
    3d11:	48 83 ec 28          	sub    $0x28,%rsp
    3d15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3d19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3d1d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3d21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d25:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3d29:	48 89 d6             	mov    %rdx,%rsi
    3d2c:	48 89 c7             	mov    %rax,%rdi
    3d2f:	e8 78 09 00 00       	call   46ac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    3d34:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3d38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d3c:	48 89 d6             	mov    %rdx,%rsi
    3d3f:	48 89 c7             	mov    %rax,%rdi
    3d42:	e8 97 09 00 00       	call   46de <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    3d47:	eb 1a                	jmp    3d63 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    3d49:	48 89 c3             	mov    %rax,%rbx
    3d4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d50:	48 89 c7             	mov    %rax,%rdi
    3d53:	e8 f0 f1 ff ff       	call   2f48 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3d58:	48 89 d8             	mov    %rbx,%rax
    3d5b:	48 89 c7             	mov    %rax,%rdi
    3d5e:	e8 ad e5 ff ff       	call   2310 <_Unwind_Resume@plt>
    3d63:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3d67:	c9                   	leave
    3d68:	c3                   	ret
    3d69:	90                   	nop

0000000000003d6a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3d6a:	55                   	push   %rbp
    3d6b:	48 89 e5             	mov    %rsp,%rbp
    3d6e:	48 83 ec 10          	sub    $0x10,%rsp
    3d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d7e:	48 89 c7             	mov    %rax,%rdi
    3d81:	e8 24 00 00 00       	call   3daa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3d86:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d8d:	48 8b 00             	mov    (%rax),%rax
    3d90:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3d94:	48 89 ce             	mov    %rcx,%rsi
    3d97:	48 89 c7             	mov    %rax,%rdi
    3d9a:	e8 95 09 00 00       	call   4734 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3d9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3da3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3da7:	90                   	nop
    3da8:	c9                   	leave
    3da9:	c3                   	ret

0000000000003daa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3daa:	55                   	push   %rbp
    3dab:	48 89 e5             	mov    %rsp,%rbp
    3dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db6:	5d                   	pop    %rbp
    3db7:	c3                   	ret

0000000000003db8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3db8:	55                   	push   %rbp
    3db9:	48 89 e5             	mov    %rsp,%rbp
    3dbc:	48 83 ec 20          	sub    $0x20,%rsp
    3dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3dc8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3dcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dd4:	48 89 d6             	mov    %rdx,%rsi
    3dd7:	48 89 c7             	mov    %rax,%rdi
    3dda:	e8 7e 09 00 00       	call   475d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    3ddf:	90                   	nop
    3de0:	c9                   	leave
    3de1:	c3                   	ret

0000000000003de2 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3de2:	55                   	push   %rbp
    3de3:	48 89 e5             	mov    %rsp,%rbp
    3de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3dee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3df2:	5d                   	pop    %rbp
    3df3:	c3                   	ret

0000000000003df4 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3df4:	55                   	push   %rbp
    3df5:	48 89 e5             	mov    %rsp,%rbp
    3df8:	48 83 ec 10          	sub    $0x10,%rsp
    3dfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3e04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e0c:	48 89 d6             	mov    %rdx,%rsi
    3e0f:	48 89 c7             	mov    %rax,%rdi
    3e12:	e8 6d 09 00 00       	call   4784 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    3e17:	90                   	nop
    3e18:	c9                   	leave
    3e19:	c3                   	ret

0000000000003e1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3e1a:	55                   	push   %rbp
    3e1b:	48 89 e5             	mov    %rsp,%rbp
    3e1e:	48 83 ec 20          	sub    $0x20,%rsp
    3e22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3e2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3e2e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3e33:	74 17                	je     3e4c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e39:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3e3d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3e41:	48 89 ce             	mov    %rcx,%rsi
    3e44:	48 89 c7             	mov    %rax,%rdi
    3e47:	e8 47 09 00 00       	call   4793 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    3e4c:	90                   	nop
    3e4d:	c9                   	leave
    3e4e:	c3                   	ret
    3e4f:	90                   	nop

0000000000003e50 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3e50:	55                   	push   %rbp
    3e51:	48 89 e5             	mov    %rsp,%rbp
    3e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e58:	90                   	nop
    3e59:	5d                   	pop    %rbp
    3e5a:	c3                   	ret
    3e5b:	90                   	nop

0000000000003e5c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3e5c:	55                   	push   %rbp
    3e5d:	48 89 e5             	mov    %rsp,%rbp
    3e60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e64:	90                   	nop
    3e65:	5d                   	pop    %rbp
    3e66:	c3                   	ret

0000000000003e67 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3e67:	55                   	push   %rbp
    3e68:	48 89 e5             	mov    %rsp,%rbp
    3e6b:	53                   	push   %rbx
    3e6c:	48 83 ec 28          	sub    $0x28,%rsp
    3e70:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3e74:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3e78:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3e7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3e80:	48 89 d6             	mov    %rdx,%rsi
    3e83:	48 89 c7             	mov    %rax,%rdi
    3e86:	e8 25 01 00 00       	call   3fb0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    3e8b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3e8f:	48 89 c7             	mov    %rax,%rdi
    3e92:	e8 2a 09 00 00       	call   47c1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3e97:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3e9b:	0f 92 c3             	setb   %bl
    3e9e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ea2:	48 89 c7             	mov    %rax,%rdi
    3ea5:	e8 c4 f6 ff ff       	call   356e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    3eaa:	84 db                	test   %bl,%bl
    3eac:	74 0f                	je     3ebd <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3eae:	48 8d 05 db 59 00 00 	lea    0x59db(%rip),%rax        # 9890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3eb5:	48 89 c7             	mov    %rax,%rdi
    3eb8:	e8 03 e2 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3ebd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3ec1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3ec5:	c9                   	leave
    3ec6:	c3                   	ret
    3ec7:	90                   	nop

0000000000003ec8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3ec8:	55                   	push   %rbp
    3ec9:	48 89 e5             	mov    %rsp,%rbp
    3ecc:	53                   	push   %rbx
    3ecd:	48 83 ec 28          	sub    $0x28,%rsp
    3ed1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3ed5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3ed9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3edd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ee1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3ee5:	48 89 d6             	mov    %rdx,%rsi
    3ee8:	48 89 c7             	mov    %rax,%rdi
    3eeb:	e8 14 09 00 00       	call   4804 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3ef0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3ef4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ef8:	48 89 d6             	mov    %rdx,%rsi
    3efb:	48 89 c7             	mov    %rax,%rdi
    3efe:	e8 33 09 00 00       	call   4836 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    3f03:	eb 1a                	jmp    3f1f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3f05:	48 89 c3             	mov    %rax,%rbx
    3f08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f0c:	48 89 c7             	mov    %rax,%rdi
    3f0f:	e8 50 f0 ff ff       	call   2f64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    3f14:	48 89 d8             	mov    %rbx,%rax
    3f17:	48 89 c7             	mov    %rax,%rdi
    3f1a:	e8 f1 e3 ff ff       	call   2310 <_Unwind_Resume@plt>
    3f1f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f23:	c9                   	leave
    3f24:	c3                   	ret
    3f25:	90                   	nop

0000000000003f26 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3f26:	55                   	push   %rbp
    3f27:	48 89 e5             	mov    %rsp,%rbp
    3f2a:	48 83 ec 10          	sub    $0x10,%rsp
    3f2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f3a:	48 89 c7             	mov    %rax,%rdi
    3f3d:	e8 24 00 00 00       	call   3f66 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3f42:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3f45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f49:	48 8b 00             	mov    (%rax),%rax
    3f4c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f50:	48 89 ce             	mov    %rcx,%rsi
    3f53:	48 89 c7             	mov    %rax,%rdi
    3f56:	e8 3b 09 00 00       	call   4896 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3f5b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f5f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3f63:	90                   	nop
    3f64:	c9                   	leave
    3f65:	c3                   	ret

0000000000003f66 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3f66:	55                   	push   %rbp
    3f67:	48 89 e5             	mov    %rsp,%rbp
    3f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f72:	5d                   	pop    %rbp
    3f73:	c3                   	ret

0000000000003f74 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3f74:	55                   	push   %rbp
    3f75:	48 89 e5             	mov    %rsp,%rbp
    3f78:	48 83 ec 20          	sub    $0x20,%rsp
    3f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3f84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3f88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f90:	48 89 d6             	mov    %rdx,%rsi
    3f93:	48 89 c7             	mov    %rax,%rdi
    3f96:	e8 24 09 00 00       	call   48bf <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    3f9b:	90                   	nop
    3f9c:	c9                   	leave
    3f9d:	c3                   	ret

0000000000003f9e <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3f9e:	55                   	push   %rbp
    3f9f:	48 89 e5             	mov    %rsp,%rbp
    3fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3faa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3fae:	5d                   	pop    %rbp
    3faf:	c3                   	ret

0000000000003fb0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3fb0:	55                   	push   %rbp
    3fb1:	48 89 e5             	mov    %rsp,%rbp
    3fb4:	48 83 ec 10          	sub    $0x10,%rsp
    3fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3fc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fc8:	48 89 d6             	mov    %rdx,%rsi
    3fcb:	48 89 c7             	mov    %rax,%rdi
    3fce:	e8 13 09 00 00       	call   48e6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    3fd3:	90                   	nop
    3fd4:	c9                   	leave
    3fd5:	c3                   	ret

0000000000003fd6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3fd6:	55                   	push   %rbp
    3fd7:	48 89 e5             	mov    %rsp,%rbp
    3fda:	48 83 ec 20          	sub    $0x20,%rsp
    3fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fe2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3fe6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3fea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3fef:	74 17                	je     4008 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ff5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ff9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3ffd:	48 89 ce             	mov    %rcx,%rsi
    4000:	48 89 c7             	mov    %rax,%rdi
    4003:	e8 ed 08 00 00       	call   48f5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    4008:	90                   	nop
    4009:	c9                   	leave
    400a:	c3                   	ret

000000000000400b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    400b:	55                   	push   %rbp
    400c:	48 89 e5             	mov    %rsp,%rbp
    400f:	48 83 ec 20          	sub    $0x20,%rsp
    4013:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4017:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    401e:	07 7e 00 
    4021:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4025:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4029:	48 89 c7             	mov    %rax,%rdi
    402c:	e8 f2 08 00 00       	call   4923 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    4031:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4035:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4039:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    403d:	48 89 d6             	mov    %rdx,%rsi
    4040:	48 89 c7             	mov    %rax,%rdi
    4043:	e8 f5 08 00 00       	call   493d <_ZSt3minImERKT_S2_S2_>
    4048:	48 8b 00             	mov    (%rax),%rax
      }
    404b:	c9                   	leave
    404c:	c3                   	ret
    404d:	90                   	nop

000000000000404e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    404e:	55                   	push   %rbp
    404f:	48 89 e5             	mov    %rsp,%rbp
    4052:	48 83 ec 10          	sub    $0x10,%rsp
    4056:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    405a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    405e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4066:	48 89 d6             	mov    %rdx,%rsi
    4069:	48 89 c7             	mov    %rax,%rdi
    406c:	e8 af f7 ff ff       	call   3820 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    4071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4075:	48 89 c7             	mov    %rax,%rdi
    4078:	e8 eb 08 00 00       	call   4968 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    407d:	90                   	nop
    407e:	c9                   	leave
    407f:	c3                   	ret

0000000000004080 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4080:	55                   	push   %rbp
    4081:	48 89 e5             	mov    %rsp,%rbp
    4084:	48 83 ec 10          	sub    $0x10,%rsp
    4088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    408c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4090:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4098:	48 89 d6             	mov    %rdx,%rsi
    409b:	48 89 c7             	mov    %rax,%rdi
    409e:	e8 f3 08 00 00       	call   4996 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    40a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    40a7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    40aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40ae:	48 8b 10             	mov    (%rax),%rdx
    40b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40b5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    40b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40bd:	48 8b 08             	mov    (%rax),%rcx
    40c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40c4:	48 89 d0             	mov    %rdx,%rax
    40c7:	48 c1 e0 06          	shl    $0x6,%rax
    40cb:	48 01 d0             	add    %rdx,%rax
    40ce:	48 c1 e0 02          	shl    $0x2,%rax
    40d2:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    40d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40da:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    40de:	90                   	nop
    40df:	c9                   	leave
    40e0:	c3                   	ret

00000000000040e1 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    40e1:	55                   	push   %rbp
    40e2:	48 89 e5             	mov    %rsp,%rbp
    40e5:	48 83 ec 20          	sub    $0x20,%rsp
    40e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    40f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    40f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40fd:	48 89 d6             	mov    %rdx,%rsi
    4100:	48 89 c7             	mov    %rax,%rdi
    4103:	e8 c1 08 00 00       	call   49c9 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    4108:	c9                   	leave
    4109:	c3                   	ret

000000000000410a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    410a:	55                   	push   %rbp
    410b:	48 89 e5             	mov    %rsp,%rbp
    410e:	48 83 ec 10          	sub    $0x10,%rsp
    4112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    411a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    411e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4122:	48 89 d6             	mov    %rdx,%rsi
    4125:	48 89 c7             	mov    %rax,%rdi
    4128:	e8 c5 08 00 00       	call   49f2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    412d:	90                   	nop
    412e:	c9                   	leave
    412f:	c3                   	ret

0000000000004130 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    4130:	55                   	push   %rbp
    4131:	48 89 e5             	mov    %rsp,%rbp
    4134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4138:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    413c:	90                   	nop
    413d:	5d                   	pop    %rbp
    413e:	c3                   	ret

000000000000413f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    413f:	55                   	push   %rbp
    4140:	48 89 e5             	mov    %rsp,%rbp
    4143:	48 83 ec 20          	sub    $0x20,%rsp
    4147:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    414b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    414f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4153:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4157:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    415b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    415f:	48 89 ce             	mov    %rcx,%rsi
    4162:	48 89 c7             	mov    %rax,%rdi
    4165:	e8 98 08 00 00       	call   4a02 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    416a:	90                   	nop
    416b:	c9                   	leave
    416c:	c3                   	ret

000000000000416d <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    416d:	55                   	push   %rbp
    416e:	48 89 e5             	mov    %rsp,%rbp
    4171:	48 83 ec 20          	sub    $0x20,%rsp
    4175:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4179:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    4180:	ff ff 0f 
    4183:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    418b:	48 89 c7             	mov    %rax,%rdi
    418e:	e8 a9 08 00 00       	call   4a3c <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    4193:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4197:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    419b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    419f:	48 89 d6             	mov    %rdx,%rsi
    41a2:	48 89 c7             	mov    %rax,%rdi
    41a5:	e8 93 07 00 00       	call   493d <_ZSt3minImERKT_S2_S2_>
    41aa:	48 8b 00             	mov    (%rax),%rax
      }
    41ad:	c9                   	leave
    41ae:	c3                   	ret
    41af:	90                   	nop

00000000000041b0 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    41b0:	55                   	push   %rbp
    41b1:	48 89 e5             	mov    %rsp,%rbp
    41b4:	48 83 ec 10          	sub    $0x10,%rsp
    41b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    41c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41c8:	48 89 d6             	mov    %rdx,%rsi
    41cb:	48 89 c7             	mov    %rax,%rdi
    41ce:	e8 a9 f8 ff ff       	call   3a7c <_ZNSaIPKcEC1ERKS1_>
    41d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41d7:	48 89 c7             	mov    %rax,%rdi
    41da:	e8 77 08 00 00       	call   4a56 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    41df:	90                   	nop
    41e0:	c9                   	leave
    41e1:	c3                   	ret

00000000000041e2 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    41e2:	55                   	push   %rbp
    41e3:	48 89 e5             	mov    %rsp,%rbp
    41e6:	48 83 ec 10          	sub    $0x10,%rsp
    41ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    41f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41fa:	48 89 d6             	mov    %rdx,%rsi
    41fd:	48 89 c7             	mov    %rax,%rdi
    4200:	e8 7f 08 00 00       	call   4a84 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    4205:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4209:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    420c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4210:	48 8b 10             	mov    (%rax),%rdx
    4213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4217:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    421b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    421f:	48 8b 00             	mov    (%rax),%rax
    4222:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4226:	48 c1 e2 03          	shl    $0x3,%rdx
    422a:	48 01 c2             	add    %rax,%rdx
    422d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4231:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4235:	90                   	nop
    4236:	c9                   	leave
    4237:	c3                   	ret

0000000000004238 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4238:	55                   	push   %rbp
    4239:	48 89 e5             	mov    %rsp,%rbp
    423c:	48 83 ec 20          	sub    $0x20,%rsp
    4240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4244:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4248:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    424c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4254:	48 89 d6             	mov    %rdx,%rsi
    4257:	48 89 c7             	mov    %rax,%rdi
    425a:	e8 58 08 00 00       	call   4ab7 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    425f:	c9                   	leave
    4260:	c3                   	ret

0000000000004261 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4261:	55                   	push   %rbp
    4262:	48 89 e5             	mov    %rsp,%rbp
    4265:	48 83 ec 10          	sub    $0x10,%rsp
    4269:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    426d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    4271:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4279:	48 89 d6             	mov    %rdx,%rsi
    427c:	48 89 c7             	mov    %rax,%rdi
    427f:	e8 5c 08 00 00       	call   4ae0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    4284:	90                   	nop
    4285:	c9                   	leave
    4286:	c3                   	ret

0000000000004287 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    4287:	55                   	push   %rbp
    4288:	48 89 e5             	mov    %rsp,%rbp
    428b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    428f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4293:	5d                   	pop    %rbp
    4294:	c3                   	ret

0000000000004295 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    4295:	55                   	push   %rbp
    4296:	48 89 e5             	mov    %rsp,%rbp
    4299:	48 83 ec 20          	sub    $0x20,%rsp
    429d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    42a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42ad:	48 89 c7             	mov    %rax,%rdi
    42b0:	e8 d2 ff ff ff       	call   4287 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    42b5:	48 89 c2             	mov    %rax,%rdx
    42b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    42bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42c0:	48 89 ce             	mov    %rcx,%rsi
    42c3:	48 89 c7             	mov    %rax,%rdi
    42c6:	e8 25 08 00 00       	call   4af0 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    42cb:	90                   	nop
    42cc:	c9                   	leave
    42cd:	c3                   	ret

00000000000042ce <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    42ce:	55                   	push   %rbp
    42cf:	48 89 e5             	mov    %rsp,%rbp
    42d2:	48 83 ec 20          	sub    $0x20,%rsp
    42d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    42da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42de:	48 8d 50 08          	lea    0x8(%rax),%rdx
    42e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    42e6:	48 89 d6             	mov    %rdx,%rsi
    42e9:	48 89 c7             	mov    %rax,%rdi
    42ec:	e8 41 08 00 00       	call   4b32 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    42f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42f5:	c9                   	leave
    42f6:	c3                   	ret
    42f7:	90                   	nop

00000000000042f8 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    42f8:	55                   	push   %rbp
    42f9:	48 89 e5             	mov    %rsp,%rbp
    42fc:	53                   	push   %rbx
    42fd:	48 83 ec 68          	sub    $0x68,%rsp
    4301:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    4305:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    4309:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    430d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4311:	48 8d 15 a9 55 00 00 	lea    0x55a9(%rip),%rdx        # 98c1 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf9>
    4318:	be 01 00 00 00       	mov    $0x1,%esi
    431d:	48 89 c7             	mov    %rax,%rdi
    4320:	e8 2b 08 00 00       	call   4b50 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    4325:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    4329:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    432d:	48 8b 00             	mov    (%rax),%rax
    4330:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    4334:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4338:	48 8b 40 08          	mov    0x8(%rax),%rax
    433c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    4340:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4344:	48 89 c7             	mov    %rax,%rdi
    4347:	e8 cc 08 00 00       	call   4c18 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    434c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4350:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    4354:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4358:	48 89 d6             	mov    %rdx,%rsi
    435b:	48 89 c7             	mov    %rax,%rdi
    435e:	e8 da 08 00 00       	call   4c3d <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    4363:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    4367:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    436b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    436f:	48 89 d6             	mov    %rdx,%rsi
    4372:	48 89 c7             	mov    %rax,%rdi
    4375:	e8 0a 07 00 00       	call   4a84 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    437a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    437e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4382:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    4386:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    438a:	48 89 c7             	mov    %rax,%rdi
    438d:	e8 f5 fe ff ff       	call   4287 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4392:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    4395:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4399:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    43a0:	00 
	  _Alloc_traits::construct(this->_M_impl,
    43a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    43a5:	48 01 c1             	add    %rax,%rcx
    43a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43ac:	48 89 ce             	mov    %rcx,%rsi
    43af:	48 89 c7             	mov    %rax,%rdi
    43b2:	e8 de fe ff ff       	call   4295 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    43b7:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    43be:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    43bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43c3:	48 89 c7             	mov    %rax,%rdi
    43c6:	e8 c7 f5 ff ff       	call   3992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    43cb:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    43ce:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    43d2:	48 89 c7             	mov    %rax,%rdi
    43d5:	e8 d8 08 00 00       	call   4cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    43da:	48 8b 30             	mov    (%rax),%rsi
    43dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    43e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43e5:	48 89 d9             	mov    %rbx,%rcx
    43e8:	48 89 c7             	mov    %rax,%rdi
    43eb:	e8 8f 08 00 00       	call   4c7f <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    43f0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    43f4:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    43f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43fd:	48 89 c7             	mov    %rax,%rdi
    4400:	e8 8d f5 ff ff       	call   3992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4405:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    4408:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    440c:	48 89 c7             	mov    %rax,%rdi
    440f:	e8 9e 08 00 00       	call   4cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4414:	48 8b 00             	mov    (%rax),%rax
    4417:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    441b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    441f:	48 89 d9             	mov    %rbx,%rcx
    4422:	48 89 c7             	mov    %rax,%rdi
    4425:	e8 55 08 00 00       	call   4c7f <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    442a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    442e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    4432:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4436:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    443a:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    443e:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    4442:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4446:	48 89 ce             	mov    %rcx,%rsi
    4449:	48 89 c7             	mov    %rax,%rdi
    444c:	e8 51 f6 ff ff       	call   3aa2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    4451:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4455:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4459:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    445c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4460:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    4464:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    4468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    446c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4473:	00 
    4474:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4478:	48 01 c2             	add    %rax,%rdx
    447b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    447f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    4483:	90                   	nop
    4484:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4488:	c9                   	leave
    4489:	c3                   	ret

000000000000448a <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    448a:	55                   	push   %rbp
    448b:	48 89 e5             	mov    %rsp,%rbp
    448e:	48 83 ec 20          	sub    $0x20,%rsp
    4492:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    4496:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    449a:	48 89 c7             	mov    %rax,%rdi
    449d:	e8 2c fe ff ff       	call   42ce <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    44a2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    44a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    44aa:	be 01 00 00 00       	mov    $0x1,%esi
    44af:	48 89 c7             	mov    %rax,%rdi
    44b2:	e8 09 08 00 00       	call   4cc0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    44b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    44bb:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    44bf:	48 89 c7             	mov    %rax,%rdi
    44c2:	e8 3b 08 00 00       	call   4d02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    44c7:	c9                   	leave
    44c8:	c3                   	ret
    44c9:	90                   	nop

00000000000044ca <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    44ca:	55                   	push   %rbp
    44cb:	48 89 e5             	mov    %rsp,%rbp
    44ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44d6:	90                   	nop
    44d7:	5d                   	pop    %rbp
    44d8:	c3                   	ret

00000000000044d9 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    44d9:	55                   	push   %rbp
    44da:	48 89 e5             	mov    %rsp,%rbp
    44dd:	48 83 ec 20          	sub    $0x20,%rsp
    44e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    44ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    44f1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    44f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44f9:	48 89 ce             	mov    %rcx,%rsi
    44fc:	48 89 c7             	mov    %rax,%rdi
    44ff:	e8 10 08 00 00       	call   4d14 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    4504:	90                   	nop
    4505:	c9                   	leave
    4506:	c3                   	ret

0000000000004507 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4507:	55                   	push   %rbp
    4508:	48 89 e5             	mov    %rsp,%rbp
    450b:	48 83 ec 20          	sub    $0x20,%rsp
    450f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4513:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    451a:	03 3f 00 
    451d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4521:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4525:	48 89 c7             	mov    %rax,%rdi
    4528:	e8 18 08 00 00       	call   4d45 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    452d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4531:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4535:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4539:	48 89 d6             	mov    %rdx,%rsi
    453c:	48 89 c7             	mov    %rax,%rdi
    453f:	e8 f9 03 00 00       	call   493d <_ZSt3minImERKT_S2_S2_>
    4544:	48 8b 00             	mov    (%rax),%rax
      }
    4547:	c9                   	leave
    4548:	c3                   	ret
    4549:	90                   	nop

000000000000454a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    454a:	55                   	push   %rbp
    454b:	48 89 e5             	mov    %rsp,%rbp
    454e:	48 83 ec 10          	sub    $0x10,%rsp
    4552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4556:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    455a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    455e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4562:	48 89 d6             	mov    %rdx,%rsi
    4565:	48 89 c7             	mov    %rax,%rdi
    4568:	e8 cb f6 ff ff       	call   3c38 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    456d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4571:	48 89 c7             	mov    %rax,%rdi
    4574:	e8 e7 07 00 00       	call   4d60 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    4579:	90                   	nop
    457a:	c9                   	leave
    457b:	c3                   	ret

000000000000457c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    457c:	55                   	push   %rbp
    457d:	48 89 e5             	mov    %rsp,%rbp
    4580:	48 83 ec 10          	sub    $0x10,%rsp
    4584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4588:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    458c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4594:	48 89 d6             	mov    %rdx,%rsi
    4597:	48 89 c7             	mov    %rax,%rdi
    459a:	e8 ef 07 00 00       	call   4d8e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    459f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    45a3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    45a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45aa:	48 8b 10             	mov    (%rax),%rdx
    45ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    45b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45b9:	48 8b 08             	mov    (%rax),%rcx
    45bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45c0:	48 89 d0             	mov    %rdx,%rax
    45c3:	48 c1 e0 06          	shl    $0x6,%rax
    45c7:	48 01 d0             	add    %rdx,%rax
    45ca:	48 c1 e0 03          	shl    $0x3,%rax
    45ce:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    45d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45d6:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    45da:	90                   	nop
    45db:	c9                   	leave
    45dc:	c3                   	ret

00000000000045dd <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    45dd:	55                   	push   %rbp
    45de:	48 89 e5             	mov    %rsp,%rbp
    45e1:	48 83 ec 20          	sub    $0x20,%rsp
    45e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    45f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f9:	48 89 d6             	mov    %rdx,%rsi
    45fc:	48 89 c7             	mov    %rax,%rdi
    45ff:	e8 bd 07 00 00       	call   4dc1 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    4604:	c9                   	leave
    4605:	c3                   	ret

0000000000004606 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4606:	55                   	push   %rbp
    4607:	48 89 e5             	mov    %rsp,%rbp
    460a:	48 83 ec 10          	sub    $0x10,%rsp
    460e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    4616:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    461a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    461e:	48 89 d6             	mov    %rdx,%rsi
    4621:	48 89 c7             	mov    %rax,%rdi
    4624:	e8 c1 07 00 00       	call   4dea <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    4629:	90                   	nop
    462a:	c9                   	leave
    462b:	c3                   	ret

000000000000462c <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
    462c:	55                   	push   %rbp
    462d:	48 89 e5             	mov    %rsp,%rbp
    4630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4634:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4638:	90                   	nop
    4639:	5d                   	pop    %rbp
    463a:	c3                   	ret

000000000000463b <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    463b:	55                   	push   %rbp
    463c:	48 89 e5             	mov    %rsp,%rbp
    463f:	48 83 ec 20          	sub    $0x20,%rsp
    4643:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4647:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    464b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    464f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4653:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    465b:	48 89 ce             	mov    %rcx,%rsi
    465e:	48 89 c7             	mov    %rax,%rdi
    4661:	e8 94 07 00 00       	call   4dfa <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    4666:	90                   	nop
    4667:	c9                   	leave
    4668:	c3                   	ret

0000000000004669 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4669:	55                   	push   %rbp
    466a:	48 89 e5             	mov    %rsp,%rbp
    466d:	48 83 ec 20          	sub    $0x20,%rsp
    4671:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4675:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    467c:	ff ff 0f 
    467f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4683:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4687:	48 89 c7             	mov    %rax,%rdi
    468a:	e8 a5 07 00 00       	call   4e34 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    468f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4693:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4697:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    469b:	48 89 d6             	mov    %rdx,%rsi
    469e:	48 89 c7             	mov    %rax,%rdi
    46a1:	e8 97 02 00 00       	call   493d <_ZSt3minImERKT_S2_S2_>
    46a6:	48 8b 00             	mov    (%rax),%rax
      }
    46a9:	c9                   	leave
    46aa:	c3                   	ret
    46ab:	90                   	nop

00000000000046ac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    46ac:	55                   	push   %rbp
    46ad:	48 89 e5             	mov    %rsp,%rbp
    46b0:	48 83 ec 10          	sub    $0x10,%rsp
    46b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    46bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46c4:	48 89 d6             	mov    %rdx,%rsi
    46c7:	48 89 c7             	mov    %rax,%rdi
    46ca:	e8 25 f7 ff ff       	call   3df4 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    46cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46d3:	48 89 c7             	mov    %rax,%rdi
    46d6:	e8 73 07 00 00       	call   4e4e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    46db:	90                   	nop
    46dc:	c9                   	leave
    46dd:	c3                   	ret

00000000000046de <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    46de:	55                   	push   %rbp
    46df:	48 89 e5             	mov    %rsp,%rbp
    46e2:	48 83 ec 10          	sub    $0x10,%rsp
    46e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    46ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46f6:	48 89 d6             	mov    %rdx,%rsi
    46f9:	48 89 c7             	mov    %rax,%rdi
    46fc:	e8 7b 07 00 00       	call   4e7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    4701:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4705:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    470c:	48 8b 10             	mov    (%rax),%rdx
    470f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4713:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    471b:	48 8b 00             	mov    (%rax),%rax
    471e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4722:	48 c1 e2 03          	shl    $0x3,%rdx
    4726:	48 01 c2             	add    %rax,%rdx
    4729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    472d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4731:	90                   	nop
    4732:	c9                   	leave
    4733:	c3                   	ret

0000000000004734 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4734:	55                   	push   %rbp
    4735:	48 89 e5             	mov    %rsp,%rbp
    4738:	48 83 ec 20          	sub    $0x20,%rsp
    473c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4740:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4744:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    4748:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    474c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4750:	48 89 d6             	mov    %rdx,%rsi
    4753:	48 89 c7             	mov    %rax,%rdi
    4756:	e8 54 07 00 00       	call   4eaf <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    475b:	c9                   	leave
    475c:	c3                   	ret

000000000000475d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    475d:	55                   	push   %rbp
    475e:	48 89 e5             	mov    %rsp,%rbp
    4761:	48 83 ec 10          	sub    $0x10,%rsp
    4765:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4769:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    476d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4775:	48 89 d6             	mov    %rdx,%rsi
    4778:	48 89 c7             	mov    %rax,%rdi
    477b:	e8 58 07 00 00       	call   4ed8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    4780:	90                   	nop
    4781:	c9                   	leave
    4782:	c3                   	ret
    4783:	90                   	nop

0000000000004784 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    4784:	55                   	push   %rbp
    4785:	48 89 e5             	mov    %rsp,%rbp
    4788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    478c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4790:	90                   	nop
    4791:	5d                   	pop    %rbp
    4792:	c3                   	ret

0000000000004793 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4793:	55                   	push   %rbp
    4794:	48 89 e5             	mov    %rsp,%rbp
    4797:	48 83 ec 20          	sub    $0x20,%rsp
    479b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    479f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    47a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    47a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    47ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    47af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47b3:	48 89 ce             	mov    %rcx,%rsi
    47b6:	48 89 c7             	mov    %rax,%rdi
    47b9:	e8 2a 07 00 00       	call   4ee8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    47be:	90                   	nop
    47bf:	c9                   	leave
    47c0:	c3                   	ret

00000000000047c1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    47c1:	55                   	push   %rbp
    47c2:	48 89 e5             	mov    %rsp,%rbp
    47c5:	48 83 ec 20          	sub    $0x20,%rsp
    47c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    47cd:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    47d4:	55 55 05 
    47d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    47db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    47df:	48 89 c7             	mov    %rax,%rdi
    47e2:	e8 32 07 00 00       	call   4f19 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    47e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    47eb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    47ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    47f3:	48 89 d6             	mov    %rdx,%rsi
    47f6:	48 89 c7             	mov    %rax,%rdi
    47f9:	e8 3f 01 00 00       	call   493d <_ZSt3minImERKT_S2_S2_>
    47fe:	48 8b 00             	mov    (%rax),%rax
      }
    4801:	c9                   	leave
    4802:	c3                   	ret
    4803:	90                   	nop

0000000000004804 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4804:	55                   	push   %rbp
    4805:	48 89 e5             	mov    %rsp,%rbp
    4808:	48 83 ec 10          	sub    $0x10,%rsp
    480c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4810:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    4814:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    481c:	48 89 d6             	mov    %rdx,%rsi
    481f:	48 89 c7             	mov    %rax,%rdi
    4822:	e8 89 f7 ff ff       	call   3fb0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    4827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    482b:	48 89 c7             	mov    %rax,%rdi
    482e:	e8 01 07 00 00       	call   4f34 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    4833:	90                   	nop
    4834:	c9                   	leave
    4835:	c3                   	ret

0000000000004836 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4836:	55                   	push   %rbp
    4837:	48 89 e5             	mov    %rsp,%rbp
    483a:	48 83 ec 10          	sub    $0x10,%rsp
    483e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4846:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    484a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    484e:	48 89 d6             	mov    %rdx,%rsi
    4851:	48 89 c7             	mov    %rax,%rdi
    4854:	e8 09 07 00 00       	call   4f62 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    4859:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    485d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4864:	48 8b 10             	mov    (%rax),%rdx
    4867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    486b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    486f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4873:	48 8b 08             	mov    (%rax),%rcx
    4876:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    487a:	48 89 d0             	mov    %rdx,%rax
    487d:	48 01 c0             	add    %rax,%rax
    4880:	48 01 d0             	add    %rdx,%rax
    4883:	48 c1 e0 03          	shl    $0x3,%rax
    4887:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    488b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    488f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4893:	90                   	nop
    4894:	c9                   	leave
    4895:	c3                   	ret

0000000000004896 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4896:	55                   	push   %rbp
    4897:	48 89 e5             	mov    %rsp,%rbp
    489a:	48 83 ec 20          	sub    $0x20,%rsp
    489e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    48aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    48ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48b2:	48 89 d6             	mov    %rdx,%rsi
    48b5:	48 89 c7             	mov    %rax,%rdi
    48b8:	e8 d8 06 00 00       	call   4f95 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    48bd:	c9                   	leave
    48be:	c3                   	ret

00000000000048bf <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    48bf:	55                   	push   %rbp
    48c0:	48 89 e5             	mov    %rsp,%rbp
    48c3:	48 83 ec 10          	sub    $0x10,%rsp
    48c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    48cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    48d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48d7:	48 89 d6             	mov    %rdx,%rsi
    48da:	48 89 c7             	mov    %rax,%rdi
    48dd:	e8 dc 06 00 00       	call   4fbe <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    48e2:	90                   	nop
    48e3:	c9                   	leave
    48e4:	c3                   	ret
    48e5:	90                   	nop

00000000000048e6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    48e6:	55                   	push   %rbp
    48e7:	48 89 e5             	mov    %rsp,%rbp
    48ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48f2:	90                   	nop
    48f3:	5d                   	pop    %rbp
    48f4:	c3                   	ret

00000000000048f5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    48f5:	55                   	push   %rbp
    48f6:	48 89 e5             	mov    %rsp,%rbp
    48f9:	48 83 ec 20          	sub    $0x20,%rsp
    48fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4901:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4905:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4909:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    490d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4915:	48 89 ce             	mov    %rcx,%rsi
    4918:	48 89 c7             	mov    %rax,%rdi
    491b:	e8 ae 06 00 00       	call   4fce <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    4920:	90                   	nop
    4921:	c9                   	leave
    4922:	c3                   	ret

0000000000004923 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4923:	55                   	push   %rbp
    4924:	48 89 e5             	mov    %rsp,%rbp
    4927:	48 83 ec 10          	sub    $0x10,%rsp
    492b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    492f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4933:	48 89 c7             	mov    %rax,%rdi
    4936:	e8 cd 06 00 00       	call   5008 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    493b:	c9                   	leave
    493c:	c3                   	ret

000000000000493d <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    493d:	55                   	push   %rbp
    493e:	48 89 e5             	mov    %rsp,%rbp
    4941:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4945:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    4949:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    494d:	48 8b 10             	mov    (%rax),%rdx
    4950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4954:	48 8b 00             	mov    (%rax),%rax
    4957:	48 39 c2             	cmp    %rax,%rdx
    495a:	73 06                	jae    4962 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    495c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4960:	eb 04                	jmp    4966 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    4962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4966:	5d                   	pop    %rbp
    4967:	c3                   	ret

0000000000004968 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4968:	55                   	push   %rbp
    4969:	48 89 e5             	mov    %rsp,%rbp
    496c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4974:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    497b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    497f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4986:	00 
    4987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    498b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4992:	00 
	{ }
    4993:	90                   	nop
    4994:	5d                   	pop    %rbp
    4995:	c3                   	ret

0000000000004996 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4996:	55                   	push   %rbp
    4997:	48 89 e5             	mov    %rsp,%rbp
    499a:	48 83 ec 10          	sub    $0x10,%rsp
    499e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    49a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    49ab:	74 15                	je     49c2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    49ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    49b5:	48 89 d6             	mov    %rdx,%rsi
    49b8:	48 89 c7             	mov    %rax,%rdi
    49bb:	e8 62 06 00 00       	call   5022 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    49c0:	eb 05                	jmp    49c7 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    49c2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    49c7:	c9                   	leave
    49c8:	c3                   	ret

00000000000049c9 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    49c9:	55                   	push   %rbp
    49ca:	48 89 e5             	mov    %rsp,%rbp
    49cd:	48 83 ec 20          	sub    $0x20,%rsp
    49d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    49d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    49d9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    49dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    49e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49e5:	48 89 d6             	mov    %rdx,%rsi
    49e8:	48 89 c7             	mov    %rax,%rdi
    49eb:	e8 5c 06 00 00       	call   504c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    49f0:	c9                   	leave
    49f1:	c3                   	ret

00000000000049f2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    49f2:	55                   	push   %rbp
    49f3:	48 89 e5             	mov    %rsp,%rbp
    49f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    49fe:	90                   	nop
    49ff:	5d                   	pop    %rbp
    4a00:	c3                   	ret
    4a01:	90                   	nop

0000000000004a02 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4a02:	55                   	push   %rbp
    4a03:	48 89 e5             	mov    %rsp,%rbp
    4a06:	48 83 ec 20          	sub    $0x20,%rsp
    4a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4a16:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a1a:	48 89 d0             	mov    %rdx,%rax
    4a1d:	48 c1 e0 06          	shl    $0x6,%rax
    4a21:	48 01 d0             	add    %rdx,%rax
    4a24:	48 c1 e0 02          	shl    $0x2,%rax
    4a28:	48 89 c2             	mov    %rax,%rdx
    4a2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a2f:	48 89 d6             	mov    %rdx,%rsi
    4a32:	48 89 c7             	mov    %rax,%rdi
    4a35:	e8 86 d7 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    4a3a:	c9                   	leave
    4a3b:	c3                   	ret

0000000000004a3c <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4a3c:	55                   	push   %rbp
    4a3d:	48 89 e5             	mov    %rsp,%rbp
    4a40:	48 83 ec 10          	sub    $0x10,%rsp
    4a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a4c:	48 89 c7             	mov    %rax,%rdi
    4a4f:	e8 58 06 00 00       	call   50ac <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    4a54:	c9                   	leave
    4a55:	c3                   	ret

0000000000004a56 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4a56:	55                   	push   %rbp
    4a57:	48 89 e5             	mov    %rsp,%rbp
    4a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a62:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a6d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4a74:	00 
    4a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a79:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4a80:	00 
	{ }
    4a81:	90                   	nop
    4a82:	5d                   	pop    %rbp
    4a83:	c3                   	ret

0000000000004a84 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4a84:	55                   	push   %rbp
    4a85:	48 89 e5             	mov    %rsp,%rbp
    4a88:	48 83 ec 10          	sub    $0x10,%rsp
    4a8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4a94:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4a99:	74 15                	je     4ab0 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    4a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4aa3:	48 89 d6             	mov    %rdx,%rsi
    4aa6:	48 89 c7             	mov    %rax,%rdi
    4aa9:	e8 18 06 00 00       	call   50c6 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    4aae:	eb 05                	jmp    4ab5 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    4ab0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4ab5:	c9                   	leave
    4ab6:	c3                   	ret

0000000000004ab7 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4ab7:	55                   	push   %rbp
    4ab8:	48 89 e5             	mov    %rsp,%rbp
    4abb:	48 83 ec 20          	sub    $0x20,%rsp
    4abf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ac3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4ac7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4acb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ad3:	48 89 d6             	mov    %rdx,%rsi
    4ad6:	48 89 c7             	mov    %rax,%rdi
    4ad9:	e8 12 06 00 00       	call   50f0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    4ade:	c9                   	leave
    4adf:	c3                   	ret

0000000000004ae0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    4ae0:	55                   	push   %rbp
    4ae1:	48 89 e5             	mov    %rsp,%rbp
    4ae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ae8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4aec:	90                   	nop
    4aed:	5d                   	pop    %rbp
    4aee:	c3                   	ret
    4aef:	90                   	nop

0000000000004af0 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    4af0:	55                   	push   %rbp
    4af1:	48 89 e5             	mov    %rsp,%rbp
    4af4:	53                   	push   %rbx
    4af5:	48 83 ec 28          	sub    $0x28,%rsp
    4af9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4afd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4b01:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    4b05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b09:	48 89 c6             	mov    %rax,%rsi
    4b0c:	bf 08 00 00 00       	mov    $0x8,%edi
    4b11:	e8 bd e3 ff ff       	call   2ed3 <_ZnwmPv>
    4b16:	48 89 c3             	mov    %rax,%rbx
    4b19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b1d:	48 89 c7             	mov    %rax,%rdi
    4b20:	e8 62 f7 ff ff       	call   4287 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4b25:	48 8b 00             	mov    (%rax),%rax
    4b28:	48 89 03             	mov    %rax,(%rbx)
    4b2b:	90                   	nop
    4b2c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b30:	c9                   	leave
    4b31:	c3                   	ret

0000000000004b32 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:

      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit _GLIBCXX20_CONSTEXPR
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    4b32:	55                   	push   %rbp
    4b33:	48 89 e5             	mov    %rsp,%rbp
    4b36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    4b3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b42:	48 8b 10             	mov    (%rax),%rdx
    4b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b49:	48 89 10             	mov    %rdx,(%rax)
    4b4c:	90                   	nop
    4b4d:	5d                   	pop    %rbp
    4b4e:	c3                   	ret
    4b4f:	90                   	nop

0000000000004b50 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    4b50:	55                   	push   %rbp
    4b51:	48 89 e5             	mov    %rsp,%rbp
    4b54:	53                   	push   %rbx
    4b55:	48 83 ec 38          	sub    $0x38,%rsp
    4b59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    4b65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b69:	48 89 c7             	mov    %rax,%rdi
    4b6c:	e8 dd 05 00 00       	call   514e <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    4b71:	48 89 c3             	mov    %rax,%rbx
    4b74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b78:	48 89 c7             	mov    %rax,%rdi
    4b7b:	e8 f0 05 00 00       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4b80:	48 29 c3             	sub    %rax,%rbx
    4b83:	48 89 da             	mov    %rbx,%rdx
    4b86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b8a:	48 39 c2             	cmp    %rax,%rdx
    4b8d:	0f 92 c0             	setb   %al
    4b90:	84 c0                	test   %al,%al
    4b92:	74 0c                	je     4ba0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    4b94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b98:	48 89 c7             	mov    %rax,%rdi
    4b9b:	e8 20 d5 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    4ba0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ba4:	48 89 c7             	mov    %rax,%rdi
    4ba7:	e8 c4 05 00 00       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4bac:	48 89 c3             	mov    %rax,%rbx
    4baf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bb3:	48 89 c7             	mov    %rax,%rdi
    4bb6:	e8 b5 05 00 00       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4bbb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4bbf:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4bc3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4bc7:	48 89 d6             	mov    %rdx,%rsi
    4bca:	48 89 c7             	mov    %rax,%rdi
    4bcd:	e8 c1 05 00 00       	call   5193 <_ZSt3maxImERKT_S2_S2_>
    4bd2:	48 8b 00             	mov    (%rax),%rax
    4bd5:	48 01 d8             	add    %rbx,%rax
    4bd8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4bdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4be0:	48 89 c7             	mov    %rax,%rdi
    4be3:	e8 88 05 00 00       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4be8:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    4bec:	72 12                	jb     4c00 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    4bee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bf2:	48 89 c7             	mov    %rax,%rdi
    4bf5:	e8 54 05 00 00       	call   514e <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    4bfa:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    4bfe:	73 0e                	jae    4c0e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    4c00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c04:	48 89 c7             	mov    %rax,%rdi
    4c07:	e8 42 05 00 00       	call   514e <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    4c0c:	eb 04                	jmp    4c12 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    4c0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    4c12:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c16:	c9                   	leave
    4c17:	c3                   	ret

0000000000004c18 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4c18:	55                   	push   %rbp
    4c19:	48 89 e5             	mov    %rsp,%rbp
    4c1c:	48 83 ec 20          	sub    $0x20,%rsp
    4c20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4c24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c28:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4c2c:	48 89 d6             	mov    %rdx,%rsi
    4c2f:	48 89 c7             	mov    %rax,%rdi
    4c32:	e8 fb fe ff ff       	call   4b32 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c3b:	c9                   	leave
    4c3c:	c3                   	ret

0000000000004c3d <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    4c3d:	55                   	push   %rbp
    4c3e:	48 89 e5             	mov    %rsp,%rbp
    4c41:	53                   	push   %rbx
    4c42:	48 83 ec 18          	sub    $0x18,%rsp
    4c46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c4a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    4c4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c52:	48 89 c7             	mov    %rax,%rdi
    4c55:	e8 58 00 00 00       	call   4cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4c5a:	48 8b 18             	mov    (%rax),%rbx
    4c5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c61:	48 89 c7             	mov    %rax,%rdi
    4c64:	e8 49 00 00 00       	call   4cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4c69:	48 8b 00             	mov    (%rax),%rax
    4c6c:	48 89 da             	mov    %rbx,%rdx
    4c6f:	48 29 c2             	sub    %rax,%rdx
    4c72:	48 89 d0             	mov    %rdx,%rax
    4c75:	48 c1 f8 03          	sar    $0x3,%rax
    4c79:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c7d:	c9                   	leave
    4c7e:	c3                   	ret

0000000000004c7f <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    4c7f:	55                   	push   %rbp
    4c80:	48 89 e5             	mov    %rsp,%rbp
    4c83:	48 83 ec 20          	sub    $0x20,%rsp
    4c87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c8b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4c8f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    4c93:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    4c97:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4c9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c9f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    4ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ca7:	48 89 c7             	mov    %rax,%rdi
    4caa:	e8 0f 05 00 00       	call   51be <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    4caf:	c9                   	leave
    4cb0:	c3                   	ret
    4cb1:	90                   	nop

0000000000004cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    4cb2:	55                   	push   %rbp
    4cb3:	48 89 e5             	mov    %rsp,%rbp
    4cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    4cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cbe:	5d                   	pop    %rbp
    4cbf:	c3                   	ret

0000000000004cc0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    4cc0:	55                   	push   %rbp
    4cc1:	48 89 e5             	mov    %rsp,%rbp
    4cc4:	48 83 ec 20          	sub    $0x20,%rsp
    4cc8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ccc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    4cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cd4:	48 8b 00             	mov    (%rax),%rax
    4cd7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4cdb:	48 c1 e2 03          	shl    $0x3,%rdx
    4cdf:	48 f7 da             	neg    %rdx
    4ce2:	48 01 d0             	add    %rdx,%rax
    4ce5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ce9:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    4ced:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    4cf1:	48 89 d6             	mov    %rdx,%rsi
    4cf4:	48 89 c7             	mov    %rax,%rdi
    4cf7:	e8 36 fe ff ff       	call   4b32 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4cfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d00:	c9                   	leave
    4d01:	c3                   	ret

0000000000004d02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4d02:	55                   	push   %rbp
    4d03:	48 89 e5             	mov    %rsp,%rbp
    4d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4d0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d0e:	48 8b 00             	mov    (%rax),%rax
    4d11:	5d                   	pop    %rbp
    4d12:	c3                   	ret
    4d13:	90                   	nop

0000000000004d14 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4d14:	55                   	push   %rbp
    4d15:	48 89 e5             	mov    %rsp,%rbp
    4d18:	48 83 ec 20          	sub    $0x20,%rsp
    4d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4d24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d2c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4d33:	00 
    4d34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d38:	48 89 d6             	mov    %rdx,%rsi
    4d3b:	48 89 c7             	mov    %rax,%rdi
    4d3e:	e8 7d d4 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    4d43:	c9                   	leave
    4d44:	c3                   	ret

0000000000004d45 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4d45:	55                   	push   %rbp
    4d46:	48 89 e5             	mov    %rsp,%rbp
    4d49:	48 83 ec 10          	sub    $0x10,%rsp
    4d4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d55:	48 89 c7             	mov    %rax,%rdi
    4d58:	e8 c5 04 00 00       	call   5222 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    4d5d:	c9                   	leave
    4d5e:	c3                   	ret
    4d5f:	90                   	nop

0000000000004d60 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4d60:	55                   	push   %rbp
    4d61:	48 89 e5             	mov    %rsp,%rbp
    4d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d6c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4d7e:	00 
    4d7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d83:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4d8a:	00 
	{ }
    4d8b:	90                   	nop
    4d8c:	5d                   	pop    %rbp
    4d8d:	c3                   	ret

0000000000004d8e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4d8e:	55                   	push   %rbp
    4d8f:	48 89 e5             	mov    %rsp,%rbp
    4d92:	48 83 ec 10          	sub    $0x10,%rsp
    4d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4d9e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4da3:	74 15                	je     4dba <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    4da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4da9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4dad:	48 89 d6             	mov    %rdx,%rsi
    4db0:	48 89 c7             	mov    %rax,%rdi
    4db3:	e8 84 04 00 00       	call   523c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    4db8:	eb 05                	jmp    4dbf <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    4dba:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4dbf:	c9                   	leave
    4dc0:	c3                   	ret

0000000000004dc1 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4dc1:	55                   	push   %rbp
    4dc2:	48 89 e5             	mov    %rsp,%rbp
    4dc5:	48 83 ec 20          	sub    $0x20,%rsp
    4dc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4dcd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4dd1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4dd5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4dd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ddd:	48 89 d6             	mov    %rdx,%rsi
    4de0:	48 89 c7             	mov    %rax,%rdi
    4de3:	e8 7e 04 00 00       	call   5266 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    4de8:	c9                   	leave
    4de9:	c3                   	ret

0000000000004dea <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    4dea:	55                   	push   %rbp
    4deb:	48 89 e5             	mov    %rsp,%rbp
    4dee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4df2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4df6:	90                   	nop
    4df7:	5d                   	pop    %rbp
    4df8:	c3                   	ret
    4df9:	90                   	nop

0000000000004dfa <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4dfa:	55                   	push   %rbp
    4dfb:	48 89 e5             	mov    %rsp,%rbp
    4dfe:	48 83 ec 20          	sub    $0x20,%rsp
    4e02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4e0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4e12:	48 89 d0             	mov    %rdx,%rax
    4e15:	48 c1 e0 06          	shl    $0x6,%rax
    4e19:	48 01 d0             	add    %rdx,%rax
    4e1c:	48 c1 e0 03          	shl    $0x3,%rax
    4e20:	48 89 c2             	mov    %rax,%rdx
    4e23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e27:	48 89 d6             	mov    %rdx,%rsi
    4e2a:	48 89 c7             	mov    %rax,%rdi
    4e2d:	e8 8e d3 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    4e32:	c9                   	leave
    4e33:	c3                   	ret

0000000000004e34 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4e34:	55                   	push   %rbp
    4e35:	48 89 e5             	mov    %rsp,%rbp
    4e38:	48 83 ec 10          	sub    $0x10,%rsp
    4e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e44:	48 89 c7             	mov    %rax,%rdi
    4e47:	e8 7a 04 00 00       	call   52c6 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    4e4c:	c9                   	leave
    4e4d:	c3                   	ret

0000000000004e4e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4e4e:	55                   	push   %rbp
    4e4f:	48 89 e5             	mov    %rsp,%rbp
    4e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e5a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e65:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4e6c:	00 
    4e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e71:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4e78:	00 
	{ }
    4e79:	90                   	nop
    4e7a:	5d                   	pop    %rbp
    4e7b:	c3                   	ret

0000000000004e7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4e7c:	55                   	push   %rbp
    4e7d:	48 89 e5             	mov    %rsp,%rbp
    4e80:	48 83 ec 10          	sub    $0x10,%rsp
    4e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4e8c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4e91:	74 15                	je     4ea8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    4e93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e97:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4e9b:	48 89 d6             	mov    %rdx,%rsi
    4e9e:	48 89 c7             	mov    %rax,%rdi
    4ea1:	e8 3a 04 00 00       	call   52e0 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    4ea6:	eb 05                	jmp    4ead <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    4ea8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4ead:	c9                   	leave
    4eae:	c3                   	ret

0000000000004eaf <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4eaf:	55                   	push   %rbp
    4eb0:	48 89 e5             	mov    %rsp,%rbp
    4eb3:	48 83 ec 20          	sub    $0x20,%rsp
    4eb7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ebb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4ebf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4ec3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ec7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ecb:	48 89 d6             	mov    %rdx,%rsi
    4ece:	48 89 c7             	mov    %rax,%rdi
    4ed1:	e8 34 04 00 00       	call   530a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    4ed6:	c9                   	leave
    4ed7:	c3                   	ret

0000000000004ed8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    4ed8:	55                   	push   %rbp
    4ed9:	48 89 e5             	mov    %rsp,%rbp
    4edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ee0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4ee4:	90                   	nop
    4ee5:	5d                   	pop    %rbp
    4ee6:	c3                   	ret
    4ee7:	90                   	nop

0000000000004ee8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4ee8:	55                   	push   %rbp
    4ee9:	48 89 e5             	mov    %rsp,%rbp
    4eec:	48 83 ec 20          	sub    $0x20,%rsp
    4ef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ef4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4ef8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4efc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f00:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4f07:	00 
    4f08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f0c:	48 89 d6             	mov    %rdx,%rsi
    4f0f:	48 89 c7             	mov    %rax,%rdi
    4f12:	e8 a9 d2 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    4f17:	c9                   	leave
    4f18:	c3                   	ret

0000000000004f19 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4f19:	55                   	push   %rbp
    4f1a:	48 89 e5             	mov    %rsp,%rbp
    4f1d:	48 83 ec 10          	sub    $0x10,%rsp
    4f21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4f25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f29:	48 89 c7             	mov    %rax,%rdi
    4f2c:	e8 37 04 00 00       	call   5368 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    4f31:	c9                   	leave
    4f32:	c3                   	ret
    4f33:	90                   	nop

0000000000004f34 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4f34:	55                   	push   %rbp
    4f35:	48 89 e5             	mov    %rsp,%rbp
    4f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f40:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4f47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f4b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4f52:	00 
    4f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f57:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4f5e:	00 
	{ }
    4f5f:	90                   	nop
    4f60:	5d                   	pop    %rbp
    4f61:	c3                   	ret

0000000000004f62 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4f62:	55                   	push   %rbp
    4f63:	48 89 e5             	mov    %rsp,%rbp
    4f66:	48 83 ec 10          	sub    $0x10,%rsp
    4f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4f72:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4f77:	74 15                	je     4f8e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    4f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f7d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4f81:	48 89 d6             	mov    %rdx,%rsi
    4f84:	48 89 c7             	mov    %rax,%rdi
    4f87:	e8 f6 03 00 00       	call   5382 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    4f8c:	eb 05                	jmp    4f93 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    4f8e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4f93:	c9                   	leave
    4f94:	c3                   	ret

0000000000004f95 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4f95:	55                   	push   %rbp
    4f96:	48 89 e5             	mov    %rsp,%rbp
    4f99:	48 83 ec 20          	sub    $0x20,%rsp
    4f9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4fa1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    4fa5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    4fa9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4fad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fb1:	48 89 d6             	mov    %rdx,%rsi
    4fb4:	48 89 c7             	mov    %rax,%rdi
    4fb7:	e8 f0 03 00 00       	call   53ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    4fbc:	c9                   	leave
    4fbd:	c3                   	ret

0000000000004fbe <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    4fbe:	55                   	push   %rbp
    4fbf:	48 89 e5             	mov    %rsp,%rbp
    4fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4fca:	90                   	nop
    4fcb:	5d                   	pop    %rbp
    4fcc:	c3                   	ret
    4fcd:	90                   	nop

0000000000004fce <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4fce:	55                   	push   %rbp
    4fcf:	48 89 e5             	mov    %rsp,%rbp
    4fd2:	48 83 ec 20          	sub    $0x20,%rsp
    4fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4fde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4fe2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4fe6:	48 89 d0             	mov    %rdx,%rax
    4fe9:	48 01 c0             	add    %rax,%rax
    4fec:	48 01 d0             	add    %rdx,%rax
    4fef:	48 c1 e0 03          	shl    $0x3,%rax
    4ff3:	48 89 c2             	mov    %rax,%rdx
    4ff6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ffa:	48 89 d6             	mov    %rdx,%rsi
    4ffd:	48 89 c7             	mov    %rax,%rdi
    5000:	e8 bb d1 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    5005:	c9                   	leave
    5006:	c3                   	ret
    5007:	90                   	nop

0000000000005008 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5008:	55                   	push   %rbp
    5009:	48 89 e5             	mov    %rsp,%rbp
    500c:	48 83 ec 10          	sub    $0x10,%rsp
    5010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5018:	48 89 c7             	mov    %rax,%rdi
    501b:	e8 ea 03 00 00       	call   540a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    5020:	c9                   	leave
    5021:	c3                   	ret

0000000000005022 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    5022:	55                   	push   %rbp
    5023:	48 89 e5             	mov    %rsp,%rbp
    5026:	48 83 ec 10          	sub    $0x10,%rsp
    502a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    502e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5032:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    503a:	ba 00 00 00 00       	mov    $0x0,%edx
    503f:	48 89 ce             	mov    %rcx,%rsi
    5042:	48 89 c7             	mov    %rax,%rdi
    5045:	e8 d4 03 00 00       	call   541e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    504a:	c9                   	leave
    504b:	c3                   	ret

000000000000504c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    504c:	55                   	push   %rbp
    504d:	48 89 e5             	mov    %rsp,%rbp
    5050:	48 83 ec 20          	sub    $0x20,%rsp
    5054:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5058:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    505c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5061:	74 43                	je     50a6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    5063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5067:	48 89 c7             	mov    %rax,%rdi
    506a:	e8 1a 04 00 00       	call   5489 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    506f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5077:	48 89 c7             	mov    %rax,%rdi
    507a:	e8 18 04 00 00       	call   5497 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    507f:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    5086:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    5087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    508b:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    508f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5097:	48 89 ce             	mov    %rcx,%rsi
    509a:	48 89 c7             	mov    %rax,%rdi
    509d:	e8 4f 04 00 00       	call   54f1 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    50a2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    50a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    50aa:	c9                   	leave
    50ab:	c3                   	ret

00000000000050ac <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    50ac:	55                   	push   %rbp
    50ad:	48 89 e5             	mov    %rsp,%rbp
    50b0:	48 83 ec 10          	sub    $0x10,%rsp
    50b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    50b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50bc:	48 89 c7             	mov    %rax,%rdi
    50bf:	e8 72 04 00 00       	call   5536 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    50c4:	c9                   	leave
    50c5:	c3                   	ret

00000000000050c6 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    50c6:	55                   	push   %rbp
    50c7:	48 89 e5             	mov    %rsp,%rbp
    50ca:	48 83 ec 10          	sub    $0x10,%rsp
    50ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    50d6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    50da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50de:	ba 00 00 00 00       	mov    $0x0,%edx
    50e3:	48 89 ce             	mov    %rcx,%rsi
    50e6:	48 89 c7             	mov    %rax,%rdi
    50e9:	e8 5c 04 00 00       	call   554a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    50ee:	c9                   	leave
    50ef:	c3                   	ret

00000000000050f0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    50f0:	55                   	push   %rbp
    50f1:	48 89 e5             	mov    %rsp,%rbp
    50f4:	48 83 ec 20          	sub    $0x20,%rsp
    50f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5100:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5105:	74 40                	je     5147 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    5107:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    510b:	48 89 c7             	mov    %rax,%rdi
    510e:	e8 98 04 00 00       	call   55ab <_ZSt11__addressofIPKcEPT_RS2_>
    5113:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    511b:	48 89 c7             	mov    %rax,%rdi
    511e:	e8 96 04 00 00       	call   55b9 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    5123:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5128:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    512c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5130:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5138:	48 89 ce             	mov    %rcx,%rsi
    513b:	48 89 c7             	mov    %rax,%rdi
    513e:	e8 9d 04 00 00       	call   55e0 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    5143:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    514b:	c9                   	leave
    514c:	c3                   	ret
    514d:	90                   	nop

000000000000514e <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    514e:	55                   	push   %rbp
    514f:	48 89 e5             	mov    %rsp,%rbp
    5152:	48 83 ec 10          	sub    $0x10,%rsp
    5156:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    515a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    515e:	48 89 c7             	mov    %rax,%rdi
    5161:	e8 be 04 00 00       	call   5624 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5166:	48 89 c7             	mov    %rax,%rdi
    5169:	e8 ff ef ff ff       	call   416d <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    516e:	c9                   	leave
    516f:	c3                   	ret

0000000000005170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5170:	55                   	push   %rbp
    5171:	48 89 e5             	mov    %rsp,%rbp
    5174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    517c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5184:	48 8b 00             	mov    (%rax),%rax
    5187:	48 29 c2             	sub    %rax,%rdx
    518a:	48 89 d0             	mov    %rdx,%rax
    518d:	48 c1 f8 03          	sar    $0x3,%rax
    5191:	5d                   	pop    %rbp
    5192:	c3                   	ret

0000000000005193 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    5193:	55                   	push   %rbp
    5194:	48 89 e5             	mov    %rsp,%rbp
    5197:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    519b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    519f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a3:	48 8b 10             	mov    (%rax),%rdx
    51a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51aa:	48 8b 00             	mov    (%rax),%rax
    51ad:	48 39 c2             	cmp    %rax,%rdx
    51b0:	73 06                	jae    51b8 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    51b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51b6:	eb 04                	jmp    51bc <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    51b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    51bc:	5d                   	pop    %rbp
    51bd:	c3                   	ret

00000000000051be <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    51be:	55                   	push   %rbp
    51bf:	48 89 e5             	mov    %rsp,%rbp
    51c2:	41 54                	push   %r12
    51c4:	53                   	push   %rbx
    51c5:	48 83 ec 20          	sub    $0x20,%rsp
    51c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    51d1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    51d5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    51d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51dd:	48 89 c7             	mov    %rax,%rdi
    51e0:	e8 4d 04 00 00       	call   5632 <_ZSt12__niter_baseIPPKcET_S3_>
    51e5:	49 89 c4             	mov    %rax,%r12
    51e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51ec:	48 89 c7             	mov    %rax,%rdi
    51ef:	e8 3e 04 00 00       	call   5632 <_ZSt12__niter_baseIPPKcET_S3_>
    51f4:	48 89 c3             	mov    %rax,%rbx
    51f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51fb:	48 89 c7             	mov    %rax,%rdi
    51fe:	e8 2f 04 00 00       	call   5632 <_ZSt12__niter_baseIPPKcET_S3_>
    5203:	48 89 c7             	mov    %rax,%rdi
    5206:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    520a:	48 89 c1             	mov    %rax,%rcx
    520d:	4c 89 e2             	mov    %r12,%rdx
    5210:	48 89 de             	mov    %rbx,%rsi
    5213:	e8 28 04 00 00       	call   5640 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    5218:	48 83 c4 20          	add    $0x20,%rsp
    521c:	5b                   	pop    %rbx
    521d:	41 5c                	pop    %r12
    521f:	5d                   	pop    %rbp
    5220:	c3                   	ret
    5221:	90                   	nop

0000000000005222 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5222:	55                   	push   %rbp
    5223:	48 89 e5             	mov    %rsp,%rbp
    5226:	48 83 ec 10          	sub    $0x10,%rsp
    522a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    522e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5232:	48 89 c7             	mov    %rax,%rdi
    5235:	e8 6a 04 00 00       	call   56a4 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    523a:	c9                   	leave
    523b:	c3                   	ret

000000000000523c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    523c:	55                   	push   %rbp
    523d:	48 89 e5             	mov    %rsp,%rbp
    5240:	48 83 ec 10          	sub    $0x10,%rsp
    5244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5248:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    524c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5254:	ba 00 00 00 00       	mov    $0x0,%edx
    5259:	48 89 ce             	mov    %rcx,%rsi
    525c:	48 89 c7             	mov    %rax,%rdi
    525f:	e8 54 04 00 00       	call   56b8 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    5264:	c9                   	leave
    5265:	c3                   	ret

0000000000005266 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5266:	55                   	push   %rbp
    5267:	48 89 e5             	mov    %rsp,%rbp
    526a:	48 83 ec 20          	sub    $0x20,%rsp
    526e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5272:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5276:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    527b:	74 43                	je     52c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    527d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5281:	48 89 c7             	mov    %rax,%rdi
    5284:	e8 9a 04 00 00       	call   5723 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    5289:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    528d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5291:	48 89 c7             	mov    %rax,%rdi
    5294:	e8 98 04 00 00       	call   5731 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    5299:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    52a0:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    52a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    52a5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    52a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    52ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52b1:	48 89 ce             	mov    %rcx,%rsi
    52b4:	48 89 c7             	mov    %rax,%rdi
    52b7:	e8 cf 04 00 00       	call   578b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    52bc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    52c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    52c4:	c9                   	leave
    52c5:	c3                   	ret

00000000000052c6 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    52c6:	55                   	push   %rbp
    52c7:	48 89 e5             	mov    %rsp,%rbp
    52ca:	48 83 ec 10          	sub    $0x10,%rsp
    52ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    52d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d6:	48 89 c7             	mov    %rax,%rdi
    52d9:	e8 f2 04 00 00       	call   57d0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    52de:	c9                   	leave
    52df:	c3                   	ret

00000000000052e0 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    52e0:	55                   	push   %rbp
    52e1:	48 89 e5             	mov    %rsp,%rbp
    52e4:	48 83 ec 10          	sub    $0x10,%rsp
    52e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    52f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52f8:	ba 00 00 00 00       	mov    $0x0,%edx
    52fd:	48 89 ce             	mov    %rcx,%rsi
    5300:	48 89 c7             	mov    %rax,%rdi
    5303:	e8 dc 04 00 00       	call   57e4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    5308:	c9                   	leave
    5309:	c3                   	ret

000000000000530a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    530a:	55                   	push   %rbp
    530b:	48 89 e5             	mov    %rsp,%rbp
    530e:	48 83 ec 20          	sub    $0x20,%rsp
    5312:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5316:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    531a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    531f:	74 40                	je     5361 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    5321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5325:	48 89 c7             	mov    %rax,%rdi
    5328:	e8 18 05 00 00       	call   5845 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    532d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5331:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5335:	48 89 c7             	mov    %rax,%rdi
    5338:	e8 16 05 00 00       	call   5853 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    533d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5342:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5346:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    534a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    534e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5352:	48 89 ce             	mov    %rcx,%rsi
    5355:	48 89 c7             	mov    %rax,%rdi
    5358:	e8 1d 05 00 00       	call   587a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    535d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5365:	c9                   	leave
    5366:	c3                   	ret
    5367:	90                   	nop

0000000000005368 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5368:	55                   	push   %rbp
    5369:	48 89 e5             	mov    %rsp,%rbp
    536c:	48 83 ec 10          	sub    $0x10,%rsp
    5370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5378:	48 89 c7             	mov    %rax,%rdi
    537b:	e8 3e 05 00 00       	call   58be <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    5380:	c9                   	leave
    5381:	c3                   	ret

0000000000005382 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    5382:	55                   	push   %rbp
    5383:	48 89 e5             	mov    %rsp,%rbp
    5386:	48 83 ec 10          	sub    $0x10,%rsp
    538a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    538e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5392:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    539a:	ba 00 00 00 00       	mov    $0x0,%edx
    539f:	48 89 ce             	mov    %rcx,%rsi
    53a2:	48 89 c7             	mov    %rax,%rdi
    53a5:	e8 28 05 00 00       	call   58d2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    53aa:	c9                   	leave
    53ab:	c3                   	ret

00000000000053ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    53ac:	55                   	push   %rbp
    53ad:	48 89 e5             	mov    %rsp,%rbp
    53b0:	48 83 ec 20          	sub    $0x20,%rsp
    53b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    53bc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    53c1:	74 40                	je     5403 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    53c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53c7:	48 89 c7             	mov    %rax,%rdi
    53ca:	e8 6d 05 00 00       	call   593c <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    53cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    53d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d7:	48 89 c7             	mov    %rax,%rdi
    53da:	e8 6b 05 00 00       	call   594a <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    53df:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    53e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    53e8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    53ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    53f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53f4:	48 89 ce             	mov    %rcx,%rsi
    53f7:	48 89 c7             	mov    %rax,%rdi
    53fa:	e8 94 05 00 00       	call   5993 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    53ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5403:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5407:	c9                   	leave
    5408:	c3                   	ret
    5409:	90                   	nop

000000000000540a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    540a:	55                   	push   %rbp
    540b:	48 89 e5             	mov    %rsp,%rbp
    540e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    5412:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    5419:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    541c:	5d                   	pop    %rbp
    541d:	c3                   	ret

000000000000541e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    541e:	55                   	push   %rbp
    541f:	48 89 e5             	mov    %rsp,%rbp
    5422:	48 83 ec 20          	sub    $0x20,%rsp
    5426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    542a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    542e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    5432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5436:	48 89 c7             	mov    %rax,%rdi
    5439:	e8 cc ff ff ff       	call   540a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    543e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5442:	0f 92 c0             	setb   %al
    5445:	0f b6 c0             	movzbl %al,%eax
    5448:	48 85 c0             	test   %rax,%rax
    544b:	0f 95 c0             	setne  %al
    544e:	84 c0                	test   %al,%al
    5450:	74 1a                	je     546c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5452:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    5459:	0f fc 00 
    545c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5460:	73 05                	jae    5467 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5462:	e8 b9 cc ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5467:	e8 e4 cb ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    546c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5470:	48 89 d0             	mov    %rdx,%rax
    5473:	48 c1 e0 06          	shl    $0x6,%rax
    5477:	48 01 d0             	add    %rdx,%rax
    547a:	48 c1 e0 02          	shl    $0x2,%rax
    547e:	48 89 c7             	mov    %rax,%rdi
    5481:	e8 2a cd ff ff       	call   21b0 <_Znwm@plt>
    5486:	90                   	nop
      }
    5487:	c9                   	leave
    5488:	c3                   	ret

0000000000005489 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5489:	55                   	push   %rbp
    548a:	48 89 e5             	mov    %rsp,%rbp
    548d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5495:	5d                   	pop    %rbp
    5496:	c3                   	ret

0000000000005497 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5497:	55                   	push   %rbp
    5498:	48 89 e5             	mov    %rsp,%rbp
    549b:	48 83 ec 10          	sub    $0x10,%rsp
    549f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    54a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54a7:	48 89 c6             	mov    %rax,%rsi
    54aa:	bf 04 01 00 00       	mov    $0x104,%edi
    54af:	e8 1f da ff ff       	call   2ed3 <_ZnwmPv>
    54b4:	b9 04 01 00 00       	mov    $0x104,%ecx
    54b9:	be 00 00 00 00       	mov    $0x0,%esi
    54be:	48 89 30             	mov    %rsi,(%rax)
    54c1:	89 ca                	mov    %ecx,%edx
    54c3:	48 01 c2             	add    %rax,%rdx
    54c6:	48 83 c2 08          	add    $0x8,%rdx
    54ca:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    54ce:	48 8d 50 08          	lea    0x8(%rax),%rdx
    54d2:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    54d6:	48 29 d0             	sub    %rdx,%rax
    54d9:	01 c1                	add    %eax,%ecx
    54db:	83 e1 f8             	and    $0xfffffff8,%ecx
    54de:	89 c8                	mov    %ecx,%eax
    54e0:	c1 e8 03             	shr    $0x3,%eax
    54e3:	89 c1                	mov    %eax,%ecx
    54e5:	48 89 d7             	mov    %rdx,%rdi
    54e8:	48 89 f0             	mov    %rsi,%rax
    54eb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    54ee:	90                   	nop
    54ef:	c9                   	leave
    54f0:	c3                   	ret

00000000000054f1 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    54f1:	55                   	push   %rbp
    54f2:	48 89 e5             	mov    %rsp,%rbp
    54f5:	48 83 ec 20          	sub    $0x20,%rsp
    54f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5501:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5505:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5509:	48 89 c7             	mov    %rax,%rdi
    550c:	e8 c6 04 00 00       	call   59d7 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5511:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5515:	48 89 c7             	mov    %rax,%rdi
    5518:	e8 c8 d9 ff ff       	call   2ee5 <_ZSt17__size_to_integerm>
    551d:	48 89 c1             	mov    %rax,%rcx
    5520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5524:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5528:	48 89 ce             	mov    %rcx,%rsi
    552b:	48 89 c7             	mov    %rax,%rdi
    552e:	e8 af 04 00 00       	call   59e2 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    5533:	c9                   	leave
    5534:	c3                   	ret
    5535:	90                   	nop

0000000000005536 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5536:	55                   	push   %rbp
    5537:	48 89 e5             	mov    %rsp,%rbp
    553a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    553e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5545:	ff ff 0f 
      }
    5548:	5d                   	pop    %rbp
    5549:	c3                   	ret

000000000000554a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    554a:	55                   	push   %rbp
    554b:	48 89 e5             	mov    %rsp,%rbp
    554e:	48 83 ec 20          	sub    $0x20,%rsp
    5552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5556:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    555a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    555e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5562:	48 89 c7             	mov    %rax,%rdi
    5565:	e8 cc ff ff ff       	call   5536 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    556a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    556e:	0f 92 c0             	setb   %al
    5571:	0f b6 c0             	movzbl %al,%eax
    5574:	48 85 c0             	test   %rax,%rax
    5577:	0f 95 c0             	setne  %al
    557a:	84 c0                	test   %al,%al
    557c:	74 1a                	je     5598 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    557e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    5585:	ff ff 1f 
    5588:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    558c:	73 05                	jae    5593 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    558e:	e8 8d cb ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5593:	e8 b8 ca ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5598:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    559c:	48 c1 e0 03          	shl    $0x3,%rax
    55a0:	48 89 c7             	mov    %rax,%rdi
    55a3:	e8 08 cc ff ff       	call   21b0 <_Znwm@plt>
    55a8:	90                   	nop
      }
    55a9:	c9                   	leave
    55aa:	c3                   	ret

00000000000055ab <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    55ab:	55                   	push   %rbp
    55ac:	48 89 e5             	mov    %rsp,%rbp
    55af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    55b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55b7:	5d                   	pop    %rbp
    55b8:	c3                   	ret

00000000000055b9 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    55b9:	55                   	push   %rbp
    55ba:	48 89 e5             	mov    %rsp,%rbp
    55bd:	48 83 ec 10          	sub    $0x10,%rsp
    55c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    55c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55c9:	48 89 c6             	mov    %rax,%rsi
    55cc:	bf 08 00 00 00       	mov    $0x8,%edi
    55d1:	e8 fd d8 ff ff       	call   2ed3 <_ZnwmPv>
    55d6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    55dd:	90                   	nop
    55de:	c9                   	leave
    55df:	c3                   	ret

00000000000055e0 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    55e0:	55                   	push   %rbp
    55e1:	48 89 e5             	mov    %rsp,%rbp
    55e4:	48 83 ec 20          	sub    $0x20,%rsp
    55e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    55f4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    55f8:	48 89 c7             	mov    %rax,%rdi
    55fb:	e8 51 04 00 00       	call   5a51 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5600:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5604:	48 89 c7             	mov    %rax,%rdi
    5607:	e8 d9 d8 ff ff       	call   2ee5 <_ZSt17__size_to_integerm>
    560c:	48 89 c1             	mov    %rax,%rcx
    560f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5613:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5617:	48 89 ce             	mov    %rcx,%rsi
    561a:	48 89 c7             	mov    %rax,%rdi
    561d:	e8 3a 04 00 00       	call   5a5c <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5622:	c9                   	leave
    5623:	c3                   	ret

0000000000005624 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    5624:	55                   	push   %rbp
    5625:	48 89 e5             	mov    %rsp,%rbp
    5628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    562c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5630:	5d                   	pop    %rbp
    5631:	c3                   	ret

0000000000005632 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    5632:	55                   	push   %rbp
    5633:	48 89 e5             	mov    %rsp,%rbp
    5636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    563a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    563e:	5d                   	pop    %rbp
    563f:	c3                   	ret

0000000000005640 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    5640:	55                   	push   %rbp
    5641:	48 89 e5             	mov    %rsp,%rbp
    5644:	48 83 ec 30          	sub    $0x30,%rsp
    5648:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    564c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5650:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5654:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    5658:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    565c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    5660:	48 c1 f8 03          	sar    $0x3,%rax
    5664:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    5668:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    566d:	7e 1f                	jle    568e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    566f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5673:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    567a:	00 
    567b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    567f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5683:	48 89 ce             	mov    %rcx,%rsi
    5686:	48 89 c7             	mov    %rax,%rdi
    5689:	e8 42 cc ff ff       	call   22d0 <memmove@plt>
      return __result + __count;
    568e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5692:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5699:	00 
    569a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    569e:	48 01 d0             	add    %rdx,%rax
    }
    56a1:	c9                   	leave
    56a2:	c3                   	ret
    56a3:	90                   	nop

00000000000056a4 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    56a4:	55                   	push   %rbp
    56a5:	48 89 e5             	mov    %rsp,%rbp
    56a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    56ac:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    56b3:	03 3f 00 
      }
    56b6:	5d                   	pop    %rbp
    56b7:	c3                   	ret

00000000000056b8 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    56b8:	55                   	push   %rbp
    56b9:	48 89 e5             	mov    %rsp,%rbp
    56bc:	48 83 ec 20          	sub    $0x20,%rsp
    56c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    56c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    56cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56d0:	48 89 c7             	mov    %rax,%rdi
    56d3:	e8 cc ff ff ff       	call   56a4 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    56d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    56dc:	0f 92 c0             	setb   %al
    56df:	0f b6 c0             	movzbl %al,%eax
    56e2:	48 85 c0             	test   %rax,%rax
    56e5:	0f 95 c0             	setne  %al
    56e8:	84 c0                	test   %al,%al
    56ea:	74 1a                	je     5706 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    56ec:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    56f3:	07 7e 00 
    56f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    56fa:	73 05                	jae    5701 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    56fc:	e8 1f ca ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5701:	e8 4a c9 ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5706:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    570a:	48 89 d0             	mov    %rdx,%rax
    570d:	48 c1 e0 06          	shl    $0x6,%rax
    5711:	48 01 d0             	add    %rdx,%rax
    5714:	48 c1 e0 03          	shl    $0x3,%rax
    5718:	48 89 c7             	mov    %rax,%rdi
    571b:	e8 90 ca ff ff       	call   21b0 <_Znwm@plt>
    5720:	90                   	nop
      }
    5721:	c9                   	leave
    5722:	c3                   	ret

0000000000005723 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5723:	55                   	push   %rbp
    5724:	48 89 e5             	mov    %rsp,%rbp
    5727:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    572b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    572f:	5d                   	pop    %rbp
    5730:	c3                   	ret

0000000000005731 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5731:	55                   	push   %rbp
    5732:	48 89 e5             	mov    %rsp,%rbp
    5735:	48 83 ec 10          	sub    $0x10,%rsp
    5739:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    573d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5741:	48 89 c6             	mov    %rax,%rsi
    5744:	bf 08 02 00 00       	mov    $0x208,%edi
    5749:	e8 85 d7 ff ff       	call   2ed3 <_ZnwmPv>
    574e:	b9 08 02 00 00       	mov    $0x208,%ecx
    5753:	be 00 00 00 00       	mov    $0x0,%esi
    5758:	48 89 30             	mov    %rsi,(%rax)
    575b:	89 ca                	mov    %ecx,%edx
    575d:	48 01 c2             	add    %rax,%rdx
    5760:	48 83 c2 08          	add    $0x8,%rdx
    5764:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5768:	48 8d 50 08          	lea    0x8(%rax),%rdx
    576c:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    5770:	48 29 d0             	sub    %rdx,%rax
    5773:	01 c1                	add    %eax,%ecx
    5775:	83 e1 f8             	and    $0xfffffff8,%ecx
    5778:	89 c8                	mov    %ecx,%eax
    577a:	c1 e8 03             	shr    $0x3,%eax
    577d:	89 c1                	mov    %eax,%ecx
    577f:	48 89 d7             	mov    %rdx,%rdi
    5782:	48 89 f0             	mov    %rsi,%rax
    5785:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    5788:	90                   	nop
    5789:	c9                   	leave
    578a:	c3                   	ret

000000000000578b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    578b:	55                   	push   %rbp
    578c:	48 89 e5             	mov    %rsp,%rbp
    578f:	48 83 ec 20          	sub    $0x20,%rsp
    5793:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5797:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    579b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    579f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    57a3:	48 89 c7             	mov    %rax,%rdi
    57a6:	e8 0e 03 00 00       	call   5ab9 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    57ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57af:	48 89 c7             	mov    %rax,%rdi
    57b2:	e8 2e d7 ff ff       	call   2ee5 <_ZSt17__size_to_integerm>
    57b7:	48 89 c1             	mov    %rax,%rcx
    57ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    57c2:	48 89 ce             	mov    %rcx,%rsi
    57c5:	48 89 c7             	mov    %rax,%rdi
    57c8:	e8 f7 02 00 00       	call   5ac4 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    57cd:	c9                   	leave
    57ce:	c3                   	ret
    57cf:	90                   	nop

00000000000057d0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    57d0:	55                   	push   %rbp
    57d1:	48 89 e5             	mov    %rsp,%rbp
    57d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    57d8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    57df:	ff ff 0f 
      }
    57e2:	5d                   	pop    %rbp
    57e3:	c3                   	ret

00000000000057e4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    57e4:	55                   	push   %rbp
    57e5:	48 89 e5             	mov    %rsp,%rbp
    57e8:	48 83 ec 20          	sub    $0x20,%rsp
    57ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    57f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57fc:	48 89 c7             	mov    %rax,%rdi
    57ff:	e8 cc ff ff ff       	call   57d0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    5804:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5808:	0f 92 c0             	setb   %al
    580b:	0f b6 c0             	movzbl %al,%eax
    580e:	48 85 c0             	test   %rax,%rax
    5811:	0f 95 c0             	setne  %al
    5814:	84 c0                	test   %al,%al
    5816:	74 1a                	je     5832 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5818:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    581f:	ff ff 1f 
    5822:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5826:	73 05                	jae    582d <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5828:	e8 f3 c8 ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    582d:	e8 1e c8 ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5832:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5836:	48 c1 e0 03          	shl    $0x3,%rax
    583a:	48 89 c7             	mov    %rax,%rdi
    583d:	e8 6e c9 ff ff       	call   21b0 <_Znwm@plt>
    5842:	90                   	nop
      }
    5843:	c9                   	leave
    5844:	c3                   	ret

0000000000005845 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5845:	55                   	push   %rbp
    5846:	48 89 e5             	mov    %rsp,%rbp
    5849:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    584d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5851:	5d                   	pop    %rbp
    5852:	c3                   	ret

0000000000005853 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5853:	55                   	push   %rbp
    5854:	48 89 e5             	mov    %rsp,%rbp
    5857:	48 83 ec 10          	sub    $0x10,%rsp
    585b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    585f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5863:	48 89 c6             	mov    %rax,%rsi
    5866:	bf 08 00 00 00       	mov    $0x8,%edi
    586b:	e8 63 d6 ff ff       	call   2ed3 <_ZnwmPv>
    5870:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    5877:	90                   	nop
    5878:	c9                   	leave
    5879:	c3                   	ret

000000000000587a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    587a:	55                   	push   %rbp
    587b:	48 89 e5             	mov    %rsp,%rbp
    587e:	48 83 ec 20          	sub    $0x20,%rsp
    5882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    588a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    588e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5892:	48 89 c7             	mov    %rax,%rdi
    5895:	e8 99 02 00 00       	call   5b33 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    589a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    589e:	48 89 c7             	mov    %rax,%rdi
    58a1:	e8 3f d6 ff ff       	call   2ee5 <_ZSt17__size_to_integerm>
    58a6:	48 89 c1             	mov    %rax,%rcx
    58a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    58b1:	48 89 ce             	mov    %rcx,%rsi
    58b4:	48 89 c7             	mov    %rax,%rdi
    58b7:	e8 82 02 00 00       	call   5b3e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    58bc:	c9                   	leave
    58bd:	c3                   	ret

00000000000058be <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    58be:	55                   	push   %rbp
    58bf:	48 89 e5             	mov    %rsp,%rbp
    58c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    58c6:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    58cd:	55 55 05 
      }
    58d0:	5d                   	pop    %rbp
    58d1:	c3                   	ret

00000000000058d2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    58d2:	55                   	push   %rbp
    58d3:	48 89 e5             	mov    %rsp,%rbp
    58d6:	48 83 ec 20          	sub    $0x20,%rsp
    58da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    58e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ea:	48 89 c7             	mov    %rax,%rdi
    58ed:	e8 cc ff ff ff       	call   58be <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    58f2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    58f6:	0f 92 c0             	setb   %al
    58f9:	0f b6 c0             	movzbl %al,%eax
    58fc:	48 85 c0             	test   %rax,%rax
    58ff:	0f 95 c0             	setne  %al
    5902:	84 c0                	test   %al,%al
    5904:	74 1a                	je     5920 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    5906:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    590d:	aa aa 0a 
    5910:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5914:	73 05                	jae    591b <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    5916:	e8 05 c8 ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    591b:	e8 30 c7 ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5920:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5924:	48 89 d0             	mov    %rdx,%rax
    5927:	48 01 c0             	add    %rax,%rax
    592a:	48 01 d0             	add    %rdx,%rax
    592d:	48 c1 e0 03          	shl    $0x3,%rax
    5931:	48 89 c7             	mov    %rax,%rdi
    5934:	e8 77 c8 ff ff       	call   21b0 <_Znwm@plt>
    5939:	90                   	nop
      }
    593a:	c9                   	leave
    593b:	c3                   	ret

000000000000593c <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    593c:	55                   	push   %rbp
    593d:	48 89 e5             	mov    %rsp,%rbp
    5940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5948:	5d                   	pop    %rbp
    5949:	c3                   	ret

000000000000594a <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    594a:	55                   	push   %rbp
    594b:	48 89 e5             	mov    %rsp,%rbp
    594e:	48 83 ec 10          	sub    $0x10,%rsp
    5952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    595a:	48 89 c6             	mov    %rax,%rsi
    595d:	bf 18 00 00 00       	mov    $0x18,%edi
    5962:	e8 6c d5 ff ff       	call   2ed3 <_ZnwmPv>
    5967:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    596d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    5974:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    597b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    5982:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    5989:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    5990:	90                   	nop
    5991:	c9                   	leave
    5992:	c3                   	ret

0000000000005993 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5993:	55                   	push   %rbp
    5994:	48 89 e5             	mov    %rsp,%rbp
    5997:	48 83 ec 20          	sub    $0x20,%rsp
    599b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    599f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    59a7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    59ab:	48 89 c7             	mov    %rax,%rdi
    59ae:	e8 e8 01 00 00       	call   5b9b <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    59b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59b7:	48 89 c7             	mov    %rax,%rdi
    59ba:	e8 26 d5 ff ff       	call   2ee5 <_ZSt17__size_to_integerm>
    59bf:	48 89 c1             	mov    %rax,%rcx
    59c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    59ca:	48 89 ce             	mov    %rcx,%rsi
    59cd:	48 89 c7             	mov    %rax,%rdi
    59d0:	e8 d1 01 00 00       	call   5ba6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    59d5:	c9                   	leave
    59d6:	c3                   	ret

00000000000059d7 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    59d7:	55                   	push   %rbp
    59d8:	48 89 e5             	mov    %rsp,%rbp
    59db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    59df:	90                   	nop
    59e0:	5d                   	pop    %rbp
    59e1:	c3                   	ret

00000000000059e2 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    59e2:	55                   	push   %rbp
    59e3:	48 89 e5             	mov    %rsp,%rbp
    59e6:	48 83 ec 20          	sub    $0x20,%rsp
    59ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    59f6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    59fb:	75 06                	jne    5a03 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    59fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a01:	eb 4c                	jmp    5a4f <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    5a03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a07:	48 89 d0             	mov    %rdx,%rax
    5a0a:	48 c1 e0 06          	shl    $0x6,%rax
    5a0e:	48 01 d0             	add    %rdx,%rax
    5a11:	48 c1 e0 02          	shl    $0x2,%rax
    5a15:	48 89 c2             	mov    %rax,%rdx
    5a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a1c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5a20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a28:	48 89 ce             	mov    %rcx,%rsi
    5a2b:	48 89 c7             	mov    %rax,%rdi
    5a2e:	e8 e0 01 00 00       	call   5c13 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5a33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a37:	48 89 d0             	mov    %rdx,%rax
    5a3a:	48 c1 e0 06          	shl    $0x6,%rax
    5a3e:	48 01 d0             	add    %rdx,%rax
    5a41:	48 c1 e0 02          	shl    $0x2,%rax
    5a45:	48 89 c2             	mov    %rax,%rdx
    5a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a4c:	48 01 d0             	add    %rdx,%rax
    }
    5a4f:	c9                   	leave
    5a50:	c3                   	ret

0000000000005a51 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5a51:	55                   	push   %rbp
    5a52:	48 89 e5             	mov    %rsp,%rbp
    5a55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5a59:	90                   	nop
    5a5a:	5d                   	pop    %rbp
    5a5b:	c3                   	ret

0000000000005a5c <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5a5c:	55                   	push   %rbp
    5a5d:	48 89 e5             	mov    %rsp,%rbp
    5a60:	48 83 ec 20          	sub    $0x20,%rsp
    5a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5a6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5a70:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5a75:	75 06                	jne    5a7d <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a7b:	eb 3a                	jmp    5ab7 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    5a7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a81:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5a88:	00 
    5a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a8d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5a91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5a95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a99:	48 89 ce             	mov    %rcx,%rsi
    5a9c:	48 89 c7             	mov    %rax,%rdi
    5a9f:	e8 9d 01 00 00       	call   5c41 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    5aa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5aa8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5aaf:	00 
    5ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ab4:	48 01 d0             	add    %rdx,%rax
    }
    5ab7:	c9                   	leave
    5ab8:	c3                   	ret

0000000000005ab9 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    5ab9:	55                   	push   %rbp
    5aba:	48 89 e5             	mov    %rsp,%rbp
    5abd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5ac1:	90                   	nop
    5ac2:	5d                   	pop    %rbp
    5ac3:	c3                   	ret

0000000000005ac4 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5ac4:	55                   	push   %rbp
    5ac5:	48 89 e5             	mov    %rsp,%rbp
    5ac8:	48 83 ec 20          	sub    $0x20,%rsp
    5acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ad4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5ad8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5add:	75 06                	jne    5ae5 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ae3:	eb 4c                	jmp    5b31 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    5ae5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ae9:	48 89 d0             	mov    %rdx,%rax
    5aec:	48 c1 e0 06          	shl    $0x6,%rax
    5af0:	48 01 d0             	add    %rdx,%rax
    5af3:	48 c1 e0 03          	shl    $0x3,%rax
    5af7:	48 89 c2             	mov    %rax,%rdx
    5afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5afe:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5b02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b0a:	48 89 ce             	mov    %rcx,%rsi
    5b0d:	48 89 c7             	mov    %rax,%rdi
    5b10:	e8 5a 01 00 00       	call   5c6f <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5b15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b19:	48 89 d0             	mov    %rdx,%rax
    5b1c:	48 c1 e0 06          	shl    $0x6,%rax
    5b20:	48 01 d0             	add    %rdx,%rax
    5b23:	48 c1 e0 03          	shl    $0x3,%rax
    5b27:	48 89 c2             	mov    %rax,%rdx
    5b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b2e:	48 01 d0             	add    %rdx,%rax
    }
    5b31:	c9                   	leave
    5b32:	c3                   	ret

0000000000005b33 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5b33:	55                   	push   %rbp
    5b34:	48 89 e5             	mov    %rsp,%rbp
    5b37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5b3b:	90                   	nop
    5b3c:	5d                   	pop    %rbp
    5b3d:	c3                   	ret

0000000000005b3e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5b3e:	55                   	push   %rbp
    5b3f:	48 89 e5             	mov    %rsp,%rbp
    5b42:	48 83 ec 20          	sub    $0x20,%rsp
    5b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5b52:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5b57:	75 06                	jne    5b5f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5d:	eb 3a                	jmp    5b99 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    5b5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b63:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5b6a:	00 
    5b6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b6f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5b73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b7b:	48 89 ce             	mov    %rcx,%rsi
    5b7e:	48 89 c7             	mov    %rax,%rdi
    5b81:	e8 17 01 00 00       	call   5c9d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5b86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b8a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5b91:	00 
    5b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b96:	48 01 d0             	add    %rdx,%rax
    }
    5b99:	c9                   	leave
    5b9a:	c3                   	ret

0000000000005b9b <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    5b9b:	55                   	push   %rbp
    5b9c:	48 89 e5             	mov    %rsp,%rbp
    5b9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5ba3:	90                   	nop
    5ba4:	5d                   	pop    %rbp
    5ba5:	c3                   	ret

0000000000005ba6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5ba6:	55                   	push   %rbp
    5ba7:	48 89 e5             	mov    %rsp,%rbp
    5baa:	48 83 ec 20          	sub    $0x20,%rsp
    5bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5bba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5bbf:	75 06                	jne    5bc7 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    5bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bc5:	eb 4a                	jmp    5c11 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    5bc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bcb:	48 89 d0             	mov    %rdx,%rax
    5bce:	48 01 c0             	add    %rax,%rax
    5bd1:	48 01 d0             	add    %rdx,%rax
    5bd4:	48 c1 e0 03          	shl    $0x3,%rax
    5bd8:	48 89 c2             	mov    %rax,%rdx
    5bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bdf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5be3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5beb:	48 89 ce             	mov    %rcx,%rsi
    5bee:	48 89 c7             	mov    %rax,%rdi
    5bf1:	e8 d5 00 00 00       	call   5ccb <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    5bf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bfa:	48 89 d0             	mov    %rdx,%rax
    5bfd:	48 01 c0             	add    %rax,%rax
    5c00:	48 01 d0             	add    %rdx,%rax
    5c03:	48 c1 e0 03          	shl    $0x3,%rax
    5c07:	48 89 c2             	mov    %rax,%rdx
    5c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c0e:	48 01 d0             	add    %rdx,%rax
    }
    5c11:	c9                   	leave
    5c12:	c3                   	ret

0000000000005c13 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5c13:	55                   	push   %rbp
    5c14:	48 89 e5             	mov    %rsp,%rbp
    5c17:	48 83 ec 20          	sub    $0x20,%rsp
    5c1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5c27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c2b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c33:	48 89 ce             	mov    %rcx,%rsi
    5c36:	48 89 c7             	mov    %rax,%rdi
    5c39:	e8 bb 00 00 00       	call   5cf9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5c3e:	90                   	nop
    5c3f:	c9                   	leave
    5c40:	c3                   	ret

0000000000005c41 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5c41:	55                   	push   %rbp
    5c42:	48 89 e5             	mov    %rsp,%rbp
    5c45:	48 83 ec 20          	sub    $0x20,%rsp
    5c49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c51:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5c55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c61:	48 89 ce             	mov    %rcx,%rsi
    5c64:	48 89 c7             	mov    %rax,%rdi
    5c67:	e8 05 01 00 00       	call   5d71 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5c6c:	90                   	nop
    5c6d:	c9                   	leave
    5c6e:	c3                   	ret

0000000000005c6f <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5c6f:	55                   	push   %rbp
    5c70:	48 89 e5             	mov    %rsp,%rbp
    5c73:	48 83 ec 20          	sub    $0x20,%rsp
    5c77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c7f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5c83:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5c87:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c8f:	48 89 ce             	mov    %rcx,%rsi
    5c92:	48 89 c7             	mov    %rax,%rdi
    5c95:	e8 12 01 00 00       	call   5dac <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5c9a:	90                   	nop
    5c9b:	c9                   	leave
    5c9c:	c3                   	ret

0000000000005c9d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5c9d:	55                   	push   %rbp
    5c9e:	48 89 e5             	mov    %rsp,%rbp
    5ca1:	48 83 ec 20          	sub    $0x20,%rsp
    5ca5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ca9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5cb1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5cb5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5cb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cbd:	48 89 ce             	mov    %rcx,%rsi
    5cc0:	48 89 c7             	mov    %rax,%rdi
    5cc3:	e8 5c 01 00 00       	call   5e24 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5cc8:	90                   	nop
    5cc9:	c9                   	leave
    5cca:	c3                   	ret

0000000000005ccb <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    5ccb:	55                   	push   %rbp
    5ccc:	48 89 e5             	mov    %rsp,%rbp
    5ccf:	48 83 ec 20          	sub    $0x20,%rsp
    5cd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cdb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5cdf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ce3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ceb:	48 89 ce             	mov    %rcx,%rsi
    5cee:	48 89 c7             	mov    %rax,%rdi
    5cf1:	e8 69 01 00 00       	call   5e5f <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    5cf6:	90                   	nop
    5cf7:	c9                   	leave
    5cf8:	c3                   	ret

0000000000005cf9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5cf9:	55                   	push   %rbp
    5cfa:	48 89 e5             	mov    %rsp,%rbp
    5cfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d05:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5d09:	eb 58                	jmp    5d63 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    5d0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d13:	b9 04 01 00 00       	mov    $0x104,%ecx
    5d18:	48 8b 32             	mov    (%rdx),%rsi
    5d1b:	48 89 30             	mov    %rsi,(%rax)
    5d1e:	89 ce                	mov    %ecx,%esi
    5d20:	48 01 c6             	add    %rax,%rsi
    5d23:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    5d27:	89 ce                	mov    %ecx,%esi
    5d29:	48 01 d6             	add    %rdx,%rsi
    5d2c:	48 83 c6 08          	add    $0x8,%rsi
    5d30:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    5d34:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    5d38:	48 8d 78 08          	lea    0x8(%rax),%rdi
    5d3c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5d40:	48 29 f8             	sub    %rdi,%rax
    5d43:	48 29 c2             	sub    %rax,%rdx
    5d46:	01 c1                	add    %eax,%ecx
    5d48:	83 e1 f8             	and    $0xfffffff8,%ecx
    5d4b:	89 c8                	mov    %ecx,%eax
    5d4d:	c1 e8 03             	shr    $0x3,%eax
    5d50:	89 c0                	mov    %eax,%eax
    5d52:	48 89 d6             	mov    %rdx,%rsi
    5d55:	48 89 c1             	mov    %rax,%rcx
    5d58:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    5d5b:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    5d62:	00 
    5d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d67:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5d6b:	75 9e                	jne    5d0b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    5d6d:	90                   	nop
    5d6e:	90                   	nop
    5d6f:	5d                   	pop    %rbp
    5d70:	c3                   	ret

0000000000005d71 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5d71:	55                   	push   %rbp
    5d72:	48 89 e5             	mov    %rsp,%rbp
    5d75:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d79:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5d7d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    5d81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d85:	48 8b 00             	mov    (%rax),%rax
    5d88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5d8c:	eb 10                	jmp    5d9e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5d8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d92:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5d96:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5d99:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5d9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5da2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5da6:	75 e6                	jne    5d8e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5da8:	90                   	nop
    5da9:	90                   	nop
    5daa:	5d                   	pop    %rbp
    5dab:	c3                   	ret

0000000000005dac <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5dac:	55                   	push   %rbp
    5dad:	48 89 e5             	mov    %rsp,%rbp
    5db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5db4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5db8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5dbc:	eb 58                	jmp    5e16 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    5dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5dc6:	b9 08 02 00 00       	mov    $0x208,%ecx
    5dcb:	48 8b 32             	mov    (%rdx),%rsi
    5dce:	48 89 30             	mov    %rsi,(%rax)
    5dd1:	89 ce                	mov    %ecx,%esi
    5dd3:	48 01 c6             	add    %rax,%rsi
    5dd6:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    5dda:	89 ce                	mov    %ecx,%esi
    5ddc:	48 01 d6             	add    %rdx,%rsi
    5ddf:	48 83 c6 08          	add    $0x8,%rsi
    5de3:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    5de7:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    5deb:	48 8d 78 08          	lea    0x8(%rax),%rdi
    5def:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5df3:	48 29 f8             	sub    %rdi,%rax
    5df6:	48 29 c2             	sub    %rax,%rdx
    5df9:	01 c1                	add    %eax,%ecx
    5dfb:	83 e1 f8             	and    $0xfffffff8,%ecx
    5dfe:	89 c8                	mov    %ecx,%eax
    5e00:	c1 e8 03             	shr    $0x3,%eax
    5e03:	89 c0                	mov    %eax,%eax
    5e05:	48 89 d6             	mov    %rdx,%rsi
    5e08:	48 89 c1             	mov    %rax,%rcx
    5e0b:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    5e0e:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    5e15:	00 
    5e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e1a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5e1e:	75 9e                	jne    5dbe <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    5e20:	90                   	nop
    5e21:	90                   	nop
    5e22:	5d                   	pop    %rbp
    5e23:	c3                   	ret

0000000000005e24 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5e24:	55                   	push   %rbp
    5e25:	48 89 e5             	mov    %rsp,%rbp
    5e28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5e2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5e30:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    5e34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e38:	48 8b 00             	mov    (%rax),%rax
    5e3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5e3f:	eb 10                	jmp    5e51 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5e41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e45:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5e49:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5e4c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e55:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5e59:	75 e6                	jne    5e41 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5e5b:	90                   	nop
    5e5c:	90                   	nop
    5e5d:	5d                   	pop    %rbp
    5e5e:	c3                   	ret

0000000000005e5f <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5e5f:	55                   	push   %rbp
    5e60:	48 89 e5             	mov    %rsp,%rbp
    5e63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    5e6f:	eb 23                	jmp    5e94 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    5e71:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    5e75:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    5e79:	48 8b 06             	mov    (%rsi),%rax
    5e7c:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    5e80:	48 89 01             	mov    %rax,(%rcx)
    5e83:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5e87:	48 8b 46 10          	mov    0x10(%rsi),%rax
    5e8b:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    5e8f:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    5e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e98:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5e9c:	75 d3                	jne    5e71 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    5e9e:	90                   	nop
    5e9f:	90                   	nop
    5ea0:	5d                   	pop    %rbp
    5ea1:	c3                   	ret

0000000000005ea2 <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    5ea2:	55                   	push   %rbp
    5ea3:	48 89 e5             	mov    %rsp,%rbp
    5ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    5eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5eb6:	0f 11 00             	movups %xmm0,(%rax)
    5eb9:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5ebd:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    5ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    5ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ecf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ed3:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    5ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5edb:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    5ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee6:	48 8d 15 d3 3f 00 00 	lea    0x3fd3(%rip),%rdx        # 9ec0 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    5eed:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    5ef1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef5:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    5efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f00:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    5f07:	90                   	nop
}
    5f08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f0c:	5d                   	pop    %rbp
    5f0d:	c3                   	ret

0000000000005f0e <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledExtensionCount,
    const char *const *ppEnabledExtensionNames, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    5f0e:	55                   	push   %rbp
    5f0f:	48 89 e5             	mov    %rsp,%rbp
    5f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f1a:	89 55 ec             	mov    %edx,-0x14(%rbp)
    5f1d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5f21:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
    5f25:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkInstanceCreateInfo createInfo{};
    5f29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f2d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f31:	0f 11 00             	movups %xmm0,(%rax)
    5f34:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5f38:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    5f3c:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    5f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f44:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    5f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f4e:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5f52:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    5f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f5e:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    5f62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f66:	8b 55 e8             	mov    -0x18(%rbp),%edx
    5f69:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    5f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f70:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5f74:	48 89 50 28          	mov    %rdx,0x28(%rax)
  createInfo.enabledExtensionCount = enabledExtensionCount;
    5f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f7c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    5f7f:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    5f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f86:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5f8a:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    5f8e:	90                   	nop
}
    5f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f93:	5d                   	pop    %rbp
    5f94:	c3                   	ret

0000000000005f95 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfoPK24VkPhysicalDeviceFeaturesjPKPKcPKv>:
makeDeviceCreateInfo(uint32_t queueCreateInfoCount,
                     const VkDeviceQueueCreateInfo *pQueueCreateInfos,
                     const VkPhysicalDeviceFeatures *pEnabledFeatures,
                     uint32_t enabledLayerCount,
                     const char *const *ppEnabledLayerNames,
                     const void *pNext) {
    5f95:	55                   	push   %rbp
    5f96:	48 89 e5             	mov    %rsp,%rbp
    5f99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f9d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    5fa0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5fa4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5fa8:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
    5fac:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkDeviceCreateInfo deviceCreateInfo{};
    5fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fb4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5fb8:	0f 11 00             	movups %xmm0,(%rax)
    5fbb:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5fbf:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    5fc3:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    5fc7:	66 0f d6 40 40       	movq   %xmm0,0x40(%rax)
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    5fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fd0:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  deviceCreateInfo.pNext = pNext;
    5fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fda:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    5fde:	48 89 50 08          	mov    %rdx,0x8(%rax)
  deviceCreateInfo.queueCreateInfoCount = queueCreateInfoCount;
    5fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe6:	8b 55 f4             	mov    -0xc(%rbp),%edx
    5fe9:	89 50 14             	mov    %edx,0x14(%rax)
  deviceCreateInfo.pQueueCreateInfos = pQueueCreateInfos;
    5fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ff0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ff4:	48 89 50 18          	mov    %rdx,0x18(%rax)
  deviceCreateInfo.pEnabledFeatures = pEnabledFeatures;
    5ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ffc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6000:	48 89 50 40          	mov    %rdx,0x40(%rax)
  deviceCreateInfo.enabledLayerCount = enabledLayerCount;
    6004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6008:	8b 55 f0             	mov    -0x10(%rbp),%edx
    600b:	89 50 20             	mov    %edx,0x20(%rax)
  deviceCreateInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    600e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6012:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6016:	48 89 50 28          	mov    %rdx,0x28(%rax)
  return deviceCreateInfo;
    601a:	90                   	nop
}
    601b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    601f:	5d                   	pop    %rbp
    6020:	c3                   	ret

0000000000006021 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>:

VkDeviceQueueCreateInfo makeDeviceQueueCreateInfo(uint32_t queueFamilyIndex,
                                                  uint32_t queueCount,
                                                  const float *pQueuePriorities,
                                                  const void *pNext) {
    6021:	55                   	push   %rbp
    6022:	48 89 e5             	mov    %rsp,%rbp
    6025:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6029:	89 75 f4             	mov    %esi,-0xc(%rbp)
    602c:	89 55 f0             	mov    %edx,-0x10(%rbp)
    602f:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    6033:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo{};
    6037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    603b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    603f:	0f 11 00             	movups %xmm0,(%rax)
    6042:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    6046:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
  queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    604b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    604f:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  queueCreateInfo.pNext = pNext;
    6055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6059:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    605d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  queueCreateInfo.queueFamilyIndex = queueFamilyIndex;
    6061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6065:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6068:	89 50 14             	mov    %edx,0x14(%rax)
  queueCreateInfo.queueCount = queueCount;
    606b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    606f:	8b 55 f0             	mov    -0x10(%rbp),%edx
    6072:	89 50 18             	mov    %edx,0x18(%rax)
  queueCreateInfo.pQueuePriorities = pQueuePriorities;
    6075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6079:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    607d:	48 89 50 20          	mov    %rdx,0x20(%rax)
  return queueCreateInfo;
    6081:	90                   	nop
}
    6082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6086:	5d                   	pop    %rbp
    6087:	c3                   	ret

0000000000006088 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    6088:	55                   	push   %rbp
    6089:	48 89 e5             	mov    %rsp,%rbp
    608c:	53                   	push   %rbx
    608d:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6091:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    6095:	be 00 00 00 00       	mov    $0x0,%esi
    609a:	48 89 c7             	mov    %rax,%rdi
    609d:	e8 5e c1 ff ff       	call   2200 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    60a2:	8b 45 c8             	mov    -0x38(%rbp),%eax
    60a5:	89 c3                	mov    %eax,%ebx
    60a7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    60ab:	48 89 c7             	mov    %rax,%rdi
    60ae:	e8 cd d1 ff ff       	call   3280 <_ZNSaI17VkLayerPropertiesEC1Ev>
    60b3:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    60b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    60bb:	48 89 de             	mov    %rbx,%rsi
    60be:	48 89 c7             	mov    %rax,%rdi
    60c1:	e8 f2 d1 ff ff       	call   32b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    60c6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    60ca:	48 89 c7             	mov    %rax,%rdi
    60cd:	e8 ca d1 ff ff       	call   329c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    60d2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    60d6:	48 89 c7             	mov    %rax,%rdi
    60d9:	e8 94 d2 ff ff       	call   3372 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    60de:	48 89 c2             	mov    %rax,%rdx
    60e1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    60e5:	48 89 d6             	mov    %rdx,%rsi
    60e8:	48 89 c7             	mov    %rax,%rdi
    60eb:	e8 10 c1 ff ff       	call   2200 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    60f0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    60f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    60f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60fc:	48 89 c7             	mov    %rax,%rdi
    60ff:	e8 08 05 00 00       	call   660c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    6104:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6108:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    610c:	48 89 c7             	mov    %rax,%rdi
    610f:	e8 1e 05 00 00       	call   6632 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    6114:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6118:	eb 5b                	jmp    6175 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    611a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    611e:	48 89 c7             	mov    %rax,%rdi
    6121:	e8 94 05 00 00       	call   66ba <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    6126:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    612a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    612e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6132:	48 89 d6             	mov    %rdx,%rsi
    6135:	48 89 c7             	mov    %rax,%rdi
    6138:	e8 35 04 00 00       	call   6572 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    613d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6141:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6145:	48 8b 3d 74 9b 00 00 	mov    0x9b74(%rip),%rdi        # fcc0 <_ZN3vkh19validationLayerNameE>
    614c:	48 8b 35 75 9b 00 00 	mov    0x9b75(%rip),%rsi        # fcc8 <_ZN3vkh19validationLayerNameE+0x8>
    6153:	48 89 d1             	mov    %rdx,%rcx
    6156:	48 89 c2             	mov    %rax,%rdx
    6159:	e8 7f 05 00 00       	call   66dd <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    615e:	84 c0                	test   %al,%al
    6160:	74 07                	je     6169 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    6162:	bb 01 00 00 00       	mov    $0x1,%ebx
    6167:	eb 28                	jmp    6191 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    6169:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    616d:	48 89 c7             	mov    %rax,%rdi
    6170:	e8 21 05 00 00       	call   6696 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    6175:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    6179:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    617d:	48 89 d6             	mov    %rdx,%rsi
    6180:	48 89 c7             	mov    %rax,%rdi
    6183:	e8 d3 04 00 00       	call   665b <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    6188:	84 c0                	test   %al,%al
    618a:	75 8e                	jne    611a <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    618c:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    6191:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6195:	48 89 c7             	mov    %rax,%rdi
    6198:	e8 91 d1 ff ff       	call   332e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    619d:	89 d8                	mov    %ebx,%eax
    619f:	eb 34                	jmp    61d5 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    61a1:	48 89 c3             	mov    %rax,%rbx
    61a4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    61a8:	48 89 c7             	mov    %rax,%rdi
    61ab:	e8 ec d0 ff ff       	call   329c <_ZNSaI17VkLayerPropertiesED1Ev>
    61b0:	48 89 d8             	mov    %rbx,%rax
    61b3:	48 89 c7             	mov    %rax,%rdi
    61b6:	e8 55 c1 ff ff       	call   2310 <_Unwind_Resume@plt>
}
    61bb:	48 89 c3             	mov    %rax,%rbx
    61be:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    61c2:	48 89 c7             	mov    %rax,%rdi
    61c5:	e8 64 d1 ff ff       	call   332e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    61ca:	48 89 d8             	mov    %rbx,%rax
    61cd:	48 89 c7             	mov    %rax,%rdi
    61d0:	e8 3b c1 ff ff       	call   2310 <_Unwind_Resume@plt>
    61d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61d9:	c9                   	leave
    61da:	c3                   	ret

00000000000061db <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    61db:	55                   	push   %rbp
    61dc:	48 89 e5             	mov    %rsp,%rbp
    61df:	48 83 ec 20          	sub    $0x20,%rsp
    61e3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    61e6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    61e9:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    61ed:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    61f1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    61f4:	83 f8 01             	cmp    $0x1,%eax
    61f7:	7e 3c                	jle    6235 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    61f9:	be 0a 00 00 00       	mov    $0xa,%esi
    61fe:	48 8d 05 db a0 00 00 	lea    0xa0db(%rip),%rax        # 102e0 <_ZSt4cerr@GLIBCXX_3.4>
    6205:	48 89 c7             	mov    %rax,%rdi
    6208:	e8 13 c0 ff ff       	call   2220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    620d:	48 89 c2             	mov    %rax,%rdx
    6210:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6214:	48 8b 40 28          	mov    0x28(%rax),%rax
    6218:	48 89 c6             	mov    %rax,%rsi
    621b:	48 89 d7             	mov    %rdx,%rdi
    621e:	e8 7d bf ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    6223:	48 8b 15 6e 9d 00 00 	mov    0x9d6e(%rip),%rdx        # ff98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    622a:	48 89 d6             	mov    %rdx,%rsi
    622d:	48 89 c7             	mov    %rax,%rdi
    6230:	e8 bb bf ff ff       	call   21f0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    6235:	b8 00 00 00 00       	mov    $0x0,%eax
}
    623a:	c9                   	leave
    623b:	c3                   	ret

000000000000623c <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    623c:	55                   	push   %rbp
    623d:	48 89 e5             	mov    %rsp,%rbp
    6240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    6244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6248:	66 0f ef c0          	pxor   %xmm0,%xmm0
    624c:	0f 11 00             	movups %xmm0,(%rax)
    624f:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    6253:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    6257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625b:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    6261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6265:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    626c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6270:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    6277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    627b:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # 61db <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    6282:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    6286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    6291:	00 
}
    6292:	90                   	nop
    6293:	5d                   	pop    %rbp
    6294:	c3                   	ret

0000000000006295 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    6295:	55                   	push   %rbp
    6296:	48 89 e5             	mov    %rsp,%rbp
    6299:	48 83 ec 30          	sub    $0x30,%rsp
    629d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    62a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    62a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    62a9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    62ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62b1:	48 8d 15 10 42 00 00 	lea    0x4210(%rip),%rdx        # a4c8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    62b8:	48 89 d6             	mov    %rdx,%rsi
    62bb:	48 89 c7             	mov    %rax,%rdi
    62be:	e8 bd be ff ff       	call   2180 <vkGetInstanceProcAddr@plt>
    62c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    62c7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    62cc:	75 07                	jne    62d5 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    62ce:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    62d3:	eb 1b                	jmp    62f0 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    62d5:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    62d9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    62dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    62e1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    62e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62e9:	48 89 c7             	mov    %rax,%rdi
    62ec:	41 ff d0             	call   *%r8
    62ef:	90                   	nop
}
    62f0:	c9                   	leave
    62f1:	c3                   	ret

00000000000062f2 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    62f2:	55                   	push   %rbp
    62f3:	48 89 e5             	mov    %rsp,%rbp
    62f6:	41 54                	push   %r12
    62f8:	53                   	push   %rbx
    62f9:	48 83 ec 50          	sub    $0x50,%rsp
    62fd:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    6301:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6305:	48 89 c7             	mov    %rax,%rdi
    6308:	e8 2f ff ff ff       	call   623c <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    630d:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    6314:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    6315:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    6319:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    631d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6321:	48 89 d1             	mov    %rdx,%rcx
    6324:	ba 00 00 00 00       	mov    $0x0,%edx
    6329:	48 89 c7             	mov    %rax,%rdi
    632c:	e8 64 ff ff ff       	call   6295 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    6331:	85 c0                	test   %eax,%eax
    6333:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    6336:	84 c0                	test   %al,%al
    6338:	74 3b                	je     6375 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    633a:	bf 10 00 00 00       	mov    $0x10,%edi
    633f:	e8 6c bd ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    6344:	48 89 c3             	mov    %rax,%rbx
    6347:	48 8d 05 9a 41 00 00 	lea    0x419a(%rip),%rax        # a4e8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    634e:	48 89 c6             	mov    %rax,%rsi
    6351:	48 89 df             	mov    %rbx,%rdi
    6354:	e8 07 bd ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    6359:	48 8b 05 48 9c 00 00 	mov    0x9c48(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6360:	48 89 c2             	mov    %rax,%rdx
    6363:	48 8d 05 d6 99 00 00 	lea    0x99d6(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    636a:	48 89 c6             	mov    %rax,%rsi
    636d:	48 89 df             	mov    %rbx,%rdi
    6370:	e8 7b bf ff ff       	call   22f0 <__cxa_throw@plt>
  }
  return debugMessenger;
    6375:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6379:	eb 16                	jmp    6391 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    637b:	49 89 c4             	mov    %rax,%r12
    637e:	48 89 df             	mov    %rbx,%rdi
    6381:	e8 6a bd ff ff       	call   20f0 <__cxa_free_exception@plt>
    6386:	4c 89 e0             	mov    %r12,%rax
    6389:	48 89 c7             	mov    %rax,%rdi
    638c:	e8 7f bf ff ff       	call   2310 <_Unwind_Resume@plt>
}
    6391:	48 83 c4 50          	add    $0x50,%rsp
    6395:	5b                   	pop    %rbx
    6396:	41 5c                	pop    %r12
    6398:	5d                   	pop    %rbp
    6399:	c3                   	ret

000000000000639a <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    639a:	55                   	push   %rbp
    639b:	48 89 e5             	mov    %rsp,%rbp
    639e:	48 83 ec 30          	sub    $0x30,%rsp
    63a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    63a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    63aa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    63ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63b2:	48 8d 15 4f 41 00 00 	lea    0x414f(%rip),%rdx        # a508 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    63b9:	48 89 d6             	mov    %rdx,%rsi
    63bc:	48 89 c7             	mov    %rax,%rdi
    63bf:	e8 bc bd ff ff       	call   2180 <vkGetInstanceProcAddr@plt>
    63c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    63c8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    63cd:	74 19                	je     63e8 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    63cf:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    63d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    63d7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    63db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63df:	48 89 ce             	mov    %rcx,%rsi
    63e2:	48 89 c7             	mov    %rax,%rdi
    63e5:	41 ff d0             	call   *%r8
  }
}
    63e8:	90                   	nop
    63e9:	c9                   	leave
    63ea:	c3                   	ret

00000000000063eb <_Z41__static_initialization_and_destruction_0ii>:

    63eb:	55                   	push   %rbp
    63ec:	48 89 e5             	mov    %rsp,%rbp
    63ef:	48 83 ec 10          	sub    $0x10,%rsp
    63f3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    63f6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    63f9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    63fd:	75 3b                	jne    643a <_Z41__static_initialization_and_destruction_0ii+0x4f>
    63ff:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6406:	75 32                	jne    643a <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6408:	48 8d 05 e3 9f 00 00 	lea    0x9fe3(%rip),%rax        # 103f2 <_ZStL8__ioinit>
    640f:	48 89 c7             	mov    %rax,%rdi
    6412:	e8 89 be ff ff       	call   22a0 <_ZNSt8ios_base4InitC1Ev@plt>
    6417:	48 8d 05 7a 9d 00 00 	lea    0x9d7a(%rip),%rax        # 10198 <__dso_handle>
    641e:	48 89 c2             	mov    %rax,%rdx
    6421:	48 8d 05 ca 9f 00 00 	lea    0x9fca(%rip),%rax        # 103f2 <_ZStL8__ioinit>
    6428:	48 89 c6             	mov    %rax,%rsi
    642b:	48 8b 05 96 9b 00 00 	mov    0x9b96(%rip),%rax        # ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    6432:	48 89 c7             	mov    %rax,%rdi
    6435:	e8 26 bd ff ff       	call   2160 <__cxa_atexit@plt>
    643a:	90                   	nop
    643b:	c9                   	leave
    643c:	c3                   	ret

000000000000643d <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    643d:	55                   	push   %rbp
    643e:	48 89 e5             	mov    %rsp,%rbp
    6441:	be ff ff 00 00       	mov    $0xffff,%esi
    6446:	bf 01 00 00 00       	mov    $0x1,%edi
    644b:	e8 9b ff ff ff       	call   63eb <_Z41__static_initialization_and_destruction_0ii>
    6450:	5d                   	pop    %rbp
    6451:	c3                   	ret

0000000000006452 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    6452:	55                   	push   %rbp
    6453:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    6456:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    645b:	5d                   	pop    %rbp
    645c:	c3                   	ret

000000000000645d <_ZNSt11char_traitsIcE2ltERKcS2_>:
      static _GLIBCXX_CONSTEXPR bool
      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { return __c1 == __c2; }

      static _GLIBCXX_CONSTEXPR bool
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    645d:	55                   	push   %rbp
    645e:	48 89 e5             	mov    %rsp,%rbp
    6461:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6465:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	// LWG 467.
	return (static_cast<unsigned char>(__c1)
    6469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646d:	0f b6 00             	movzbl (%rax),%eax
    6470:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    6472:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6476:	0f b6 00             	movzbl (%rax),%eax
    6479:	38 c2                	cmp    %al,%dl
    647b:	0f 92 c0             	setb   %al
      }
    647e:	5d                   	pop    %rbp
    647f:	c3                   	ret

0000000000006480 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:

      static _GLIBCXX17_CONSTEXPR int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    6480:	55                   	push   %rbp
    6481:	48 89 e5             	mov    %rsp,%rbp
    6484:	48 83 ec 30          	sub    $0x30,%rsp
    6488:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    648c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6490:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      {
	if (__n == 0)
    6494:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    6499:	75 0a                	jne    64a5 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    649b:	b8 00 00 00 00       	mov    $0x0,%eax
    64a0:	e9 99 00 00 00       	jmp    653e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    64a5:	e8 a8 ff ff ff       	call   6452 <_ZSt23__is_constant_evaluatedv>
    64aa:	84 c0                	test   %al,%al
    64ac:	74 78                	je     6526 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	  {
	    for (size_t __i = 0; __i < __n; ++__i)
    64ae:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    64b5:	00 
    64b6:	eb 5d                	jmp    6515 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    64b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    64bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c0:	48 01 c2             	add    %rax,%rdx
    64c3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    64c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64cb:	48 01 c8             	add    %rcx,%rax
    64ce:	48 89 d6             	mov    %rdx,%rsi
    64d1:	48 89 c7             	mov    %rax,%rdi
    64d4:	e8 84 ff ff ff       	call   645d <_ZNSt11char_traitsIcE2ltERKcS2_>
    64d9:	84 c0                	test   %al,%al
    64db:	74 07                	je     64e4 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    64dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    64e2:	eb 5a                	jmp    653e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    64e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    64e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ec:	48 01 c2             	add    %rax,%rdx
    64ef:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    64f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f7:	48 01 c8             	add    %rcx,%rax
    64fa:	48 89 d6             	mov    %rdx,%rsi
    64fd:	48 89 c7             	mov    %rax,%rdi
    6500:	e8 58 ff ff ff       	call   645d <_ZNSt11char_traitsIcE2ltERKcS2_>
    6505:	84 c0                	test   %al,%al
    6507:	74 07                	je     6510 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    6509:	b8 01 00 00 00       	mov    $0x1,%eax
    650e:	eb 2e                	jmp    653e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    6510:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    6515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6519:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    651d:	72 99                	jb     64b8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    651f:	b8 00 00 00 00       	mov    $0x0,%eax
    6524:	eb 18                	jmp    653e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	  }
#endif
	return __builtin_memcmp(__s1, __s2, __n);
    6526:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    652a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    652e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6532:	48 89 ce             	mov    %rcx,%rsi
    6535:	48 89 c7             	mov    %rax,%rdi
    6538:	e8 63 bb ff ff       	call   20a0 <memcmp@plt>
    653d:	90                   	nop
      }
    653e:	c9                   	leave
    653f:	c3                   	ret

0000000000006540 <_ZNSt11char_traitsIcE6lengthEPKc>:

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    6540:	55                   	push   %rbp
    6541:	48 89 e5             	mov    %rsp,%rbp
    6544:	48 83 ec 10          	sub    $0x10,%rsp
    6548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    654c:	e8 01 ff ff ff       	call   6452 <_ZSt23__is_constant_evaluatedv>
    6551:	84 c0                	test   %al,%al
    6553:	74 0e                	je     6563 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    6555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6559:	48 89 c7             	mov    %rax,%rdi
    655c:	e8 43 00 00 00       	call   65a4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    6561:	eb 0d                	jmp    6570 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    6563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6567:	48 89 c7             	mov    %rax,%rdi
    656a:	e8 21 bb ff ff       	call   2090 <strlen@plt>
    656f:	90                   	nop
      }
    6570:	c9                   	leave
    6571:	c3                   	ret

0000000000006572 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    6572:	55                   	push   %rbp
    6573:	48 89 e5             	mov    %rsp,%rbp
    6576:	48 83 ec 10          	sub    $0x10,%rsp
    657a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    657e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    6582:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6586:	48 89 c7             	mov    %rax,%rdi
    6589:	e8 b2 ff ff ff       	call   6540 <_ZNSt11char_traitsIcE6lengthEPKc>
    658e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6592:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    6595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6599:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    659d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    65a1:	90                   	nop
    65a2:	c9                   	leave
    65a3:	c3                   	ret

00000000000065a4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    65a4:	55                   	push   %rbp
    65a5:	48 89 e5             	mov    %rsp,%rbp
    65a8:	48 83 ec 20          	sub    $0x20,%rsp
    65ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    65b0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    65b7:	00 
      while (!eq(__p[__i], char_type()))
    65b8:	eb 05                	jmp    65bf <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    65ba:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    65bf:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    65c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65cb:	48 01 c2             	add    %rax,%rdx
    65ce:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    65d2:	48 89 c6             	mov    %rax,%rsi
    65d5:	48 89 d7             	mov    %rdx,%rdi
    65d8:	e8 0d 00 00 00       	call   65ea <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    65dd:	83 f0 01             	xor    $0x1,%eax
    65e0:	84 c0                	test   %al,%al
    65e2:	75 d6                	jne    65ba <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    65e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    65e8:	c9                   	leave
    65e9:	c3                   	ret

00000000000065ea <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    65ea:	55                   	push   %rbp
    65eb:	48 89 e5             	mov    %rsp,%rbp
    65ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    65f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65fa:	0f b6 10             	movzbl (%rax),%edx
    65fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6601:	0f b6 00             	movzbl (%rax),%eax
    6604:	38 c2                	cmp    %al,%dl
    6606:	0f 94 c0             	sete   %al
    6609:	5d                   	pop    %rbp
    660a:	c3                   	ret
    660b:	90                   	nop

000000000000660c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    660c:	55                   	push   %rbp
    660d:	48 89 e5             	mov    %rsp,%rbp
    6610:	48 83 ec 20          	sub    $0x20,%rsp
    6614:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6618:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    661c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6620:	48 89 d6             	mov    %rdx,%rsi
    6623:	48 89 c7             	mov    %rax,%rdi
    6626:	e8 27 01 00 00       	call   6752 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    662b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    662f:	c9                   	leave
    6630:	c3                   	ret
    6631:	90                   	nop

0000000000006632 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6632:	55                   	push   %rbp
    6633:	48 89 e5             	mov    %rsp,%rbp
    6636:	48 83 ec 20          	sub    $0x20,%rsp
    663a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    663e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6642:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6646:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    664a:	48 89 d6             	mov    %rdx,%rsi
    664d:	48 89 c7             	mov    %rax,%rdi
    6650:	e8 fd 00 00 00       	call   6752 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    6655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6659:	c9                   	leave
    665a:	c3                   	ret

000000000000665b <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    665b:	55                   	push   %rbp
    665c:	48 89 e5             	mov    %rsp,%rbp
    665f:	53                   	push   %rbx
    6660:	48 83 ec 18          	sub    $0x18,%rsp
    6664:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6668:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    666c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6670:	48 89 c7             	mov    %rax,%rdi
    6673:	e8 f8 00 00 00       	call   6770 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    6678:	48 8b 18             	mov    (%rax),%rbx
    667b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    667f:	48 89 c7             	mov    %rax,%rdi
    6682:	e8 e9 00 00 00       	call   6770 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    6687:	48 8b 00             	mov    (%rax),%rax
    668a:	48 39 c3             	cmp    %rax,%rbx
    668d:	0f 95 c0             	setne  %al
    6690:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6694:	c9                   	leave
    6695:	c3                   	ret

0000000000006696 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6696:	55                   	push   %rbp
    6697:	48 89 e5             	mov    %rsp,%rbp
    669a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    669e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a2:	48 8b 00             	mov    (%rax),%rax
    66a5:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    66ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66b0:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    66b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    66b7:	5d                   	pop    %rbp
    66b8:	c3                   	ret
    66b9:	90                   	nop

00000000000066ba <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    66ba:	55                   	push   %rbp
    66bb:	48 89 e5             	mov    %rsp,%rbp
    66be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    66c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c6:	48 8b 00             	mov    (%rax),%rax
    66c9:	5d                   	pop    %rbp
    66ca:	c3                   	ret
    66cb:	90                   	nop

00000000000066cc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    66cc:	55                   	push   %rbp
    66cd:	48 89 e5             	mov    %rsp,%rbp
    66d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    66d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d8:	48 8b 00             	mov    (%rax),%rax
    66db:	5d                   	pop    %rbp
    66dc:	c3                   	ret

00000000000066dd <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    66dd:	55                   	push   %rbp
    66de:	48 89 e5             	mov    %rsp,%rbp
    66e1:	53                   	push   %rbx
    66e2:	48 83 ec 28          	sub    $0x28,%rsp
    66e6:	48 89 f0             	mov    %rsi,%rax
    66e9:	49 89 f8             	mov    %rdi,%r8
    66ec:	4c 89 c6             	mov    %r8,%rsi
    66ef:	4c 89 cf             	mov    %r9,%rdi
    66f2:	48 89 c7             	mov    %rax,%rdi
    66f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    66f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    66fd:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    6701:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    6705:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6709:	48 89 c7             	mov    %rax,%rdi
    670c:	e8 bb ff ff ff       	call   66cc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    6711:	48 89 c3             	mov    %rax,%rbx
    6714:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6718:	48 89 c7             	mov    %rax,%rdi
    671b:	e8 ac ff ff ff       	call   66cc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    6720:	48 39 c3             	cmp    %rax,%rbx
    6723:	75 22                	jne    6747 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    6725:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6729:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    672d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6731:	48 89 ce             	mov    %rcx,%rsi
    6734:	48 89 c7             	mov    %rax,%rdi
    6737:	e8 42 00 00 00       	call   677e <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    673c:	85 c0                	test   %eax,%eax
    673e:	75 07                	jne    6747 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    6740:	b8 01 00 00 00       	mov    $0x1,%eax
    6745:	eb 05                	jmp    674c <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    6747:	b8 00 00 00 00       	mov    $0x0,%eax
    674c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6750:	c9                   	leave
    6751:	c3                   	ret

0000000000006752 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6752:	55                   	push   %rbp
    6753:	48 89 e5             	mov    %rsp,%rbp
    6756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    675a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    675e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6762:	48 8b 10             	mov    (%rax),%rdx
    6765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6769:	48 89 10             	mov    %rdx,(%rax)
    676c:	90                   	nop
    676d:	5d                   	pop    %rbp
    676e:	c3                   	ret
    676f:	90                   	nop

0000000000006770 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6770:	55                   	push   %rbp
    6771:	48 89 e5             	mov    %rsp,%rbp
    6774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    677c:	5d                   	pop    %rbp
    677d:	c3                   	ret

000000000000677e <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    677e:	55                   	push   %rbp
    677f:	48 89 e5             	mov    %rsp,%rbp
    6782:	48 83 ec 30          	sub    $0x30,%rsp
    6786:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    678a:	48 89 d1             	mov    %rdx,%rcx
    678d:	48 89 f0             	mov    %rsi,%rax
    6790:	48 89 fa             	mov    %rdi,%rdx
    6793:	48 89 ca             	mov    %rcx,%rdx
    6796:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    679a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    679e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67a2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    67a6:	48 89 d6             	mov    %rdx,%rsi
    67a9:	48 89 c7             	mov    %rax,%rdi
    67ac:	e8 8c e1 ff ff       	call   493d <_ZSt3minImERKT_S2_S2_>
    67b1:	48 8b 00             	mov    (%rax),%rax
    67b4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    67b8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    67bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67c0:	48 8b 40 08          	mov    0x8(%rax),%rax
    67c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67c8:	48 89 ce             	mov    %rcx,%rsi
    67cb:	48 89 c7             	mov    %rax,%rdi
    67ce:	e8 ad fc ff ff       	call   6480 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    67d3:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    67d6:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    67da:	75 19                	jne    67f5 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    67dc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    67e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67e4:	48 8b 00             	mov    (%rax),%rax
    67e7:	48 89 d6             	mov    %rdx,%rsi
    67ea:	48 89 c7             	mov    %rax,%rdi
    67ed:	e8 08 00 00 00       	call   67fa <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    67f2:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    67f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    67f8:	c9                   	leave
    67f9:	c3                   	ret

00000000000067fa <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    67fa:	55                   	push   %rbp
    67fb:	48 89 e5             	mov    %rsp,%rbp
    67fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6802:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    6806:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    680a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    680e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    6812:	b8 00 00 00 80       	mov    $0x80000000,%eax
    6817:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    681b:	7c 07                	jl     6824 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    681d:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    6822:	eb 1b                	jmp    683f <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    6824:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    682b:	ff ff ff 
    682e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    6832:	7f 07                	jg     683b <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    6834:	b8 00 00 00 80       	mov    $0x80000000,%eax
    6839:	eb 04                	jmp    683f <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    683b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    683f:	5d                   	pop    %rbp
    6840:	c3                   	ret
    6841:	90                   	nop

0000000000006842 <_ZN9VulkanApp12createWindowEv>:
#include "vkh.hpp"

void VulkanApp::createWindow() {
    6842:	55                   	push   %rbp
    6843:	48 89 e5             	mov    %rsp,%rbp
    6846:	48 83 ec 10          	sub    $0x10,%rsp
    684a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    684e:	e8 bd b9 ff ff       	call   2210 <glfwInit@plt>
  this->window = vkh::createWindow(800, 600);
    6853:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    6859:	b9 00 00 00 00       	mov    $0x0,%ecx
    685e:	48 8d 05 ef 42 00 00 	lea    0x42ef(%rip),%rax        # ab54 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    6865:	48 89 c2             	mov    %rax,%rdx
    6868:	be 58 02 00 00       	mov    $0x258,%esi
    686d:	bf 20 03 00 00       	mov    $0x320,%edi
    6872:	e8 52 bd ff ff       	call   25c9 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    6877:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    687b:	48 89 02             	mov    %rax,(%rdx)
}
    687e:	90                   	nop
    687f:	c9                   	leave
    6880:	c3                   	ret
    6881:	90                   	nop

0000000000006882 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    6882:	55                   	push   %rbp
    6883:	48 89 e5             	mov    %rsp,%rbp
    6886:	41 55                	push   %r13
    6888:	41 54                	push   %r12
    688a:	53                   	push   %rbx
    688b:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    6892:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  auto appInfo = vkh::makeApplicationInfo();
    6899:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    689d:	48 8d 15 b0 42 00 00 	lea    0x42b0(%rip),%rdx        # ab54 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    68a4:	48 89 d6             	mov    %rdx,%rsi
    68a7:	48 89 c7             	mov    %rax,%rdi
    68aa:	e8 f3 f5 ff ff       	call   5ea2 <_ZN3vkh19makeApplicationInfoEPKc>
  auto extensions = vkh::getRequiredInstanceExtensionNameList(true);
    68af:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    68b3:	be 01 00 00 00       	mov    $0x1,%esi
    68b8:	48 89 c7             	mov    %rax,%rdi
    68bb:	e8 d9 c1 ff ff       	call   2a99 <_ZN3vkh36getRequiredInstanceExtensionNameListEb>
  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    68c0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    68c4:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    68cb:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    68d2:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    68d9:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    68e0:	48 89 c7             	mov    %rax,%rdi
    68e3:	e8 54 f9 ff ff       	call   623c <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  auto createInfo = vkh::makeInstanceCreateInfo(
    68e8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    68ef:	48 83 c0 10          	add    $0x10,%rax
    68f3:	48 89 c7             	mov    %rax,%rdi
    68f6:	e8 df 0b 00 00       	call   74da <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    68fb:	49 89 c4             	mov    %rax,%r12
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
      static_cast<uint32_t>(this->layers.size()), this->layers.data(),
    68fe:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6905:	48 83 c0 10          	add    $0x10,%rax
    6909:	48 89 c7             	mov    %rax,%rdi
    690c:	e8 5f e8 ff ff       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    6911:	41 89 c5             	mov    %eax,%r13d
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
    6914:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6918:	48 89 c7             	mov    %rax,%rdi
    691b:	e8 96 0b 00 00       	call   74b6 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    6920:	48 89 c3             	mov    %rax,%rbx
    6923:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6927:	48 89 c7             	mov    %rax,%rdi
    692a:	e8 41 e8 ff ff       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    692f:	89 c7                	mov    %eax,%edi
    6931:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    6938:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    693c:	48 83 ec 08          	sub    $0x8,%rsp
    6940:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    6947:	52                   	push   %rdx
    6948:	4d 89 e1             	mov    %r12,%r9
    694b:	45 89 e8             	mov    %r13d,%r8d
    694e:	48 89 d9             	mov    %rbx,%rcx
    6951:	89 fa                	mov    %edi,%edx
    6953:	48 89 c7             	mov    %rax,%rdi
    6956:	e8 b3 f5 ff ff       	call   5f0e <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>
    695b:	48 83 c4 10          	add    $0x10,%rsp
      (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo);
  this->instance = vkh::createInstance(&createInfo);
    695f:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    6966:	be 00 00 00 00       	mov    $0x0,%esi
    696b:	48 89 c7             	mov    %rax,%rdi
    696e:	e8 ac bc ff ff       	call   261f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    6973:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    697a:	48 89 42 08          	mov    %rax,0x8(%rdx)

  for (const auto &ext : extensions) {
    697e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6982:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6986:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    698a:	48 89 c7             	mov    %rax,%rdi
    698d:	e8 86 e2 ff ff       	call   4c18 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    6992:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    6999:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    699d:	48 89 c7             	mov    %rax,%rdi
    69a0:	e8 29 d9 ff ff       	call   42ce <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    69a5:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    69ac:	eb 48                	jmp    69f6 <_ZN9VulkanApp14createInstanceEv+0x174>
    69ae:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    69b5:	48 89 c7             	mov    %rax,%rdi
    69b8:	e8 45 e3 ff ff       	call   4d02 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    69bd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    std::cout << ext << '\n';
    69c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    69c5:	48 8b 00             	mov    (%rax),%rax
    69c8:	48 89 c6             	mov    %rax,%rsi
    69cb:	48 8d 05 ee 97 00 00 	lea    0x97ee(%rip),%rax        # 101c0 <_ZSt4cout@GLIBCXX_3.4>
    69d2:	48 89 c7             	mov    %rax,%rdi
    69d5:	e8 c6 b7 ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    69da:	be 0a 00 00 00       	mov    $0xa,%esi
    69df:	48 89 c7             	mov    %rax,%rdi
    69e2:	e8 39 b8 ff ff       	call   2220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &ext : extensions) {
    69e7:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    69ee:	48 89 c7             	mov    %rax,%rdi
    69f1:	e8 44 0b 00 00       	call   753a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    69f6:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    69fd:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    6a04:	48 89 d6             	mov    %rdx,%rsi
    6a07:	48 89 c7             	mov    %rax,%rdi
    6a0a:	e8 ef 0a 00 00       	call   74fe <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6a0f:	84 c0                	test   %al,%al
    6a11:	75 9b                	jne    69ae <_ZN9VulkanApp14createInstanceEv+0x12c>
  }
}
    6a13:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6a17:	48 89 c7             	mov    %rax,%rdi
    6a1a:	e8 7d c7 ff ff       	call   319c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    6a1f:	eb 1a                	jmp    6a3b <_ZN9VulkanApp14createInstanceEv+0x1b9>
    6a21:	48 89 c3             	mov    %rax,%rbx
    6a24:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6a28:	48 89 c7             	mov    %rax,%rdi
    6a2b:	e8 6c c7 ff ff       	call   319c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    6a30:	48 89 d8             	mov    %rbx,%rax
    6a33:	48 89 c7             	mov    %rax,%rdi
    6a36:	e8 d5 b8 ff ff       	call   2310 <_Unwind_Resume@plt>
    6a3b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    6a3f:	5b                   	pop    %rbx
    6a40:	41 5c                	pop    %r12
    6a42:	41 5d                	pop    %r13
    6a44:	5d                   	pop    %rbp
    6a45:	c3                   	ret

0000000000006a46 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    6a46:	55                   	push   %rbp
    6a47:	48 89 e5             	mov    %rsp,%rbp
    6a4a:	48 83 ec 10          	sub    $0x10,%rsp
    6a4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  this->debugMessenger = vkh::createDebugMessenger(this->instance);
    6a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a56:	48 8b 40 08          	mov    0x8(%rax),%rax
    6a5a:	48 89 c7             	mov    %rax,%rdi
    6a5d:	e8 90 f8 ff ff       	call   62f2 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    6a62:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6a66:	48 89 42 28          	mov    %rax,0x28(%rdx)
}
    6a6a:	90                   	nop
    6a6b:	c9                   	leave
    6a6c:	c3                   	ret
    6a6d:	90                   	nop

0000000000006a6e <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    6a6e:	55                   	push   %rbp
    6a6f:	48 89 e5             	mov    %rsp,%rbp
    6a72:	41 54                	push   %r12
    6a74:	53                   	push   %rbx
    6a75:	48 81 ec 90 05 00 00 	sub    $0x590,%rsp
    6a7c:	48 89 bd 98 fa ff ff 	mov    %rdi,-0x568(%rbp)

  /* Select a suitable physical device */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(this->instance);
    6a83:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6a8a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6a8e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6a92:	48 89 d6             	mov    %rdx,%rsi
    6a95:	48 89 c7             	mov    %rax,%rdi
    6a98:	e8 9e c1 ff ff       	call   2c3b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    6a9d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6aa4:	00 
  QueueFamilyIndices selectedIndices;
    6aa5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6aa9:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
  for (const auto &physicalDevice : physicalDeviceList) {
    6aad:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6ab1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6ab5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6ab9:	48 89 c7             	mov    %rax,%rdi
    6abc:	e8 99 0a 00 00       	call   755a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    6ac1:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    6ac8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6acc:	48 89 c7             	mov    %rax,%rdi
    6acf:	e8 ac 0a 00 00       	call   7580 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    6ad4:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    6adb:	e9 8c 01 00 00       	jmp    6c6c <_ZN9VulkanApp12createDeviceEv+0x1fe>
    6ae0:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    6ae7:	48 89 c7             	mov    %rax,%rdi
    6aea:	e8 15 0b 00 00       	call   7604 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    6aef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    auto physDevPropList = vkh::getPhysicalDevicePropertyList(physicalDevice);
    6af3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6af7:	48 8b 10             	mov    (%rax),%rdx
    6afa:	48 8d 85 a0 fa ff ff 	lea    -0x560(%rbp),%rax
    6b01:	48 89 d6             	mov    %rdx,%rsi
    6b04:	48 89 c7             	mov    %rax,%rdi
    6b07:	e8 9e c2 ff ff       	call   2daa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    if (physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) {
    6b0c:	8b 85 b0 fa ff ff    	mov    -0x550(%rbp),%eax
    6b12:	83 f8 02             	cmp    $0x2,%eax
    6b15:	0f 85 42 01 00 00    	jne    6c5d <_ZN9VulkanApp12createDeviceEv+0x1ef>
      /* Select queue families */
      QueueFamilyIndices indices;
    6b1b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6b1f:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
      auto queueFamilies =
          vkh::getPhysicalDeviceQueuePropertyList(physicalDevice);
    6b26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b2a:	48 8b 10             	mov    (%rax),%rdx
    6b2d:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    6b34:	48 89 d6             	mov    %rdx,%rsi
    6b37:	48 89 c7             	mov    %rax,%rdi
    6b3a:	e8 d9 c2 ff ff       	call   2e18 <_ZN3vkh34getPhysicalDeviceQueuePropertyListEP18VkPhysicalDevice_T>
      for (std::size_t i = 0; i < queueFamilies.size(); ++i) {
    6b3f:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    6b46:	00 00 00 00 
    6b4a:	e9 96 00 00 00       	jmp    6be5 <_ZN9VulkanApp12createDeviceEv+0x177>
        if (queueFamilies[i].queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    6b4f:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
    6b56:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    6b5d:	48 89 d6             	mov    %rdx,%rsi
    6b60:	48 89 c7             	mov    %rax,%rdi
    6b63:	e8 dc 0a 00 00       	call   7644 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEixEm>
    6b68:	8b 00                	mov    (%rax),%eax
    6b6a:	83 e0 01             	and    $0x1,%eax
    6b6d:	85 c0                	test   %eax,%eax
    6b6f:	0f 95 c0             	setne  %al
    6b72:	84 c0                	test   %al,%al
    6b74:	74 19                	je     6b8f <_ZN9VulkanApp12createDeviceEv+0x121>
          indices.graphicsFamily = i;
    6b76:	48 8d 95 d8 fd ff ff 	lea    -0x228(%rbp),%rdx
    6b7d:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    6b84:	48 89 d6             	mov    %rdx,%rsi
    6b87:	48 89 c7             	mov    %rax,%rdi
    6b8a:	e8 df 0a 00 00       	call   766e <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>
        }
        if (queueFamilies[i].queueFlags & VK_QUEUE_COMPUTE_BIT) {
    6b8f:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
    6b96:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    6b9d:	48 89 d6             	mov    %rdx,%rsi
    6ba0:	48 89 c7             	mov    %rax,%rdi
    6ba3:	e8 9c 0a 00 00       	call   7644 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEixEm>
    6ba8:	8b 00                	mov    (%rax),%eax
    6baa:	83 e0 02             	and    $0x2,%eax
    6bad:	85 c0                	test   %eax,%eax
    6baf:	0f 95 c0             	setne  %al
    6bb2:	84 c0                	test   %al,%al
    6bb4:	74 1d                	je     6bd3 <_ZN9VulkanApp12createDeviceEv+0x165>
          indices.computeFamily = i;
    6bb6:	48 8d 85 d8 fd ff ff 	lea    -0x228(%rbp),%rax
    6bbd:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    6bc4:	48 83 c2 08          	add    $0x8,%rdx
    6bc8:	48 89 c6             	mov    %rax,%rsi
    6bcb:	48 89 d7             	mov    %rdx,%rdi
    6bce:	e8 9b 0a 00 00       	call   766e <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>
      for (std::size_t i = 0; i < queueFamilies.size(); ++i) {
    6bd3:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
    6bda:	48 83 c0 01          	add    $0x1,%rax
    6bde:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
    6be5:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    6bec:	48 89 c7             	mov    %rax,%rdi
    6bef:	e8 22 0a 00 00       	call   7616 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    6bf4:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
    6bfb:	48 39 c2             	cmp    %rax,%rdx
    6bfe:	0f 92 c0             	setb   %al
    6c01:	84 c0                	test   %al,%al
    6c03:	0f 85 46 ff ff ff    	jne    6b4f <_ZN9VulkanApp12createDeviceEv+0xe1>
        }
      }
      if (indices.isComplete()) {
    6c09:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    6c10:	48 89 c7             	mov    %rax,%rdi
    6c13:	e8 be 07 00 00       	call   73d6 <_ZN18QueueFamilyIndices10isCompleteEv>
    6c18:	84 c0                	test   %al,%al
    6c1a:	74 28                	je     6c44 <_ZN9VulkanApp12createDeviceEv+0x1d6>
        selectedPhysDev = physicalDevice;
    6c1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c20:	48 8b 00             	mov    (%rax),%rax
    6c23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
        selectedIndices.graphicsFamily = indices.graphicsFamily;
    6c27:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
    6c2e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
        selectedIndices.computeFamily = indices.computeFamily;
    6c32:	48 8b 85 08 fe ff ff 	mov    -0x1f8(%rbp),%rax
    6c39:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
        break;
    6c3d:	bb 00 00 00 00       	mov    $0x0,%ebx
    6c42:	eb 05                	jmp    6c49 <_ZN9VulkanApp12createDeviceEv+0x1db>
      }
    }
    6c44:	bb 01 00 00 00       	mov    $0x1,%ebx
    6c49:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    6c50:	48 89 c7             	mov    %rax,%rdi
    6c53:	e8 a8 c9 ff ff       	call   3600 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    6c58:	83 fb 01             	cmp    $0x1,%ebx
    6c5b:	75 30                	jne    6c8d <_ZN9VulkanApp12createDeviceEv+0x21f>
  for (const auto &physicalDevice : physicalDeviceList) {
    6c5d:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    6c64:	48 89 c7             	mov    %rax,%rdi
    6c67:	e8 78 09 00 00       	call   75e4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    6c6c:	48 8d 95 10 fe ff ff 	lea    -0x1f0(%rbp),%rdx
    6c73:	48 8d 85 18 fe ff ff 	lea    -0x1e8(%rbp),%rax
    6c7a:	48 89 d6             	mov    %rdx,%rsi
    6c7d:	48 89 c7             	mov    %rax,%rdi
    6c80:	e8 24 09 00 00       	call   75a9 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6c85:	84 c0                	test   %al,%al
    6c87:	0f 85 53 fe ff ff    	jne    6ae0 <_ZN9VulkanApp12createDeviceEv+0x72>
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    6c8d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6c92:	75 3b                	jne    6ccf <_ZN9VulkanApp12createDeviceEv+0x261>
    throw std::runtime_error("Failed to select a physical device.");
    6c94:	bf 10 00 00 00       	mov    $0x10,%edi
    6c99:	e8 12 b4 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    6c9e:	48 89 c3             	mov    %rax,%rbx
    6ca1:	48 8d 05 c0 3e 00 00 	lea    0x3ec0(%rip),%rax        # ab68 <_ZN6__pstl9execution2v1L5unseqE+0x29>
    6ca8:	48 89 c6             	mov    %rax,%rsi
    6cab:	48 89 df             	mov    %rbx,%rdi
    6cae:	e8 ad b3 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    6cb3:	48 8b 05 ee 92 00 00 	mov    0x92ee(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6cba:	48 89 c2             	mov    %rax,%rdx
    6cbd:	48 8d 05 7c 90 00 00 	lea    0x907c(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cc4:	48 89 c6             	mov    %rax,%rsi
    6cc7:	48 89 df             	mov    %rbx,%rdi
    6cca:	e8 21 b6 ff ff       	call   22f0 <__cxa_throw@plt>
  }

  /* Setup the selected queue families' createInfos */

  VkDeviceQueueCreateInfo queueCreateInfos[2];
  const float queuePriorities[2] = {1.0f, 0.8f};
    6ccf:	f3 0f 10 05 35 3f 00 	movss  0x3f35(%rip),%xmm0        # ac0c <_ZN6__pstl9execution2v1L5unseqE+0xcd>
    6cd6:	00 
    6cd7:	f3 0f 11 85 58 ff ff 	movss  %xmm0,-0xa8(%rbp)
    6cde:	ff 
    6cdf:	f3 0f 10 05 29 3f 00 	movss  0x3f29(%rip),%xmm0        # ac10 <_ZN6__pstl9execution2v1L5unseqE+0xd1>
    6ce6:	00 
    6ce7:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    6cee:	ff 
  queueCreateInfos[0] = vkh::makeDeviceQueueCreateInfo(
      selectedIndices.graphicsFamily.value(), 1, &queuePriorities[0]);
    6cef:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6cf3:	48 89 c7             	mov    %rax,%rdi
    6cf6:	e8 dd 09 00 00       	call   76d8 <_ZNRSt8optionalIjE5valueEv>
  queueCreateInfos[0] = vkh::makeDeviceQueueCreateInfo(
    6cfb:	8b 30                	mov    (%rax),%esi
    6cfd:	48 8d 85 60 fa ff ff 	lea    -0x5a0(%rbp),%rax
    6d04:	48 8d 95 58 ff ff ff 	lea    -0xa8(%rbp),%rdx
    6d0b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    6d11:	48 89 d1             	mov    %rdx,%rcx
    6d14:	ba 01 00 00 00       	mov    $0x1,%edx
    6d19:	48 89 c7             	mov    %rax,%rdi
    6d1c:	e8 00 f3 ff ff       	call   6021 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    6d21:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
    6d28:	48 8b 95 68 fa ff ff 	mov    -0x598(%rbp),%rdx
    6d2f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6d36:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    6d3d:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
    6d44:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    6d4b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6d52:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    6d59:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
    6d60:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  queueCreateInfos[1] = vkh::makeDeviceQueueCreateInfo(
      selectedIndices.computeFamily.value(), 1, &queuePriorities[1]);
    6d64:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6d68:	48 83 c0 08          	add    $0x8,%rax
    6d6c:	48 89 c7             	mov    %rax,%rdi
    6d6f:	e8 64 09 00 00       	call   76d8 <_ZNRSt8optionalIjE5valueEv>
  queueCreateInfos[1] = vkh::makeDeviceQueueCreateInfo(
    6d74:	8b 30                	mov    (%rax),%esi
    6d76:	48 8d 85 60 fa ff ff 	lea    -0x5a0(%rbp),%rax
    6d7d:	48 8d 95 58 ff ff ff 	lea    -0xa8(%rbp),%rdx
    6d84:	48 83 c2 04          	add    $0x4,%rdx
    6d88:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    6d8e:	48 89 d1             	mov    %rdx,%rcx
    6d91:	ba 01 00 00 00       	mov    $0x1,%edx
    6d96:	48 89 c7             	mov    %rax,%rdi
    6d99:	e8 83 f2 ff ff       	call   6021 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    6d9e:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
    6da5:	48 8b 95 68 fa ff ff 	mov    -0x598(%rbp),%rdx
    6dac:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6db0:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    6db4:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
    6dbb:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
    6dc2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6dc6:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    6dca:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
    6dd1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)

  /* Create the logical device */

  VkPhysicalDeviceFeatures deviceFeatures{};
    6dd5:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
    6ddc:	b8 00 00 00 00       	mov    $0x0,%eax
    6de1:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    6de6:	48 89 d7             	mov    %rdx,%rdi
    6de9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6dec:	48 89 fa             	mov    %rdi,%rdx
    6def:	89 02                	mov    %eax,(%rdx)
    6df1:	48 83 c2 04          	add    $0x4,%rdx
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    6df5:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6dfc:	48 83 c0 10          	add    $0x10,%rax
    6e00:	48 89 c7             	mov    %rax,%rdi
    6e03:	e8 d2 06 00 00       	call   74da <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    6e08:	48 89 c3             	mov    %rax,%rbx
      2, queueCreateInfos, &deviceFeatures,
      static_cast<uint32_t>(this->layers.size()), this->layers.data());
    6e0b:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6e12:	48 83 c0 10          	add    $0x10,%rax
    6e16:	48 89 c7             	mov    %rax,%rdi
    6e19:	e8 52 e3 ff ff       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    6e1e:	89 c6                	mov    %eax,%esi
    6e20:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    6e27:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
    6e2e:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    6e35:	48 83 ec 08          	sub    $0x8,%rsp
    6e39:	6a 00                	push   $0x0
    6e3b:	49 89 d9             	mov    %rbx,%r9
    6e3e:	41 89 f0             	mov    %esi,%r8d
    6e41:	be 02 00 00 00       	mov    $0x2,%esi
    6e46:	48 89 c7             	mov    %rax,%rdi
    6e49:	e8 47 f1 ff ff       	call   5f95 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfoPK24VkPhysicalDeviceFeaturesjPKPKcPKv>
    6e4e:	48 83 c4 10          	add    $0x10,%rsp
  this->device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    6e52:	48 8d 8d 20 fe ff ff 	lea    -0x1e0(%rbp),%rcx
    6e59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e5d:	ba 00 00 00 00       	mov    $0x0,%edx
    6e62:	48 89 ce             	mov    %rcx,%rsi
    6e65:	48 89 c7             	mov    %rax,%rdi
    6e68:	e8 45 b8 ff ff       	call   26b2 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    6e6d:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
    6e74:	48 89 42 38          	mov    %rax,0x38(%rdx)

  /* Get queue handles */

  vkGetDeviceQueue(this->device, selectedIndices.graphicsFamily.value(), 0,
    6e78:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6e7f:	48 8d 58 40          	lea    0x40(%rax),%rbx
    6e83:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6e87:	48 89 c7             	mov    %rax,%rdi
    6e8a:	e8 49 08 00 00       	call   76d8 <_ZNRSt8optionalIjE5valueEv>
    6e8f:	8b 30                	mov    (%rax),%esi
    6e91:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6e98:	48 8b 40 38          	mov    0x38(%rax),%rax
    6e9c:	48 89 d9             	mov    %rbx,%rcx
    6e9f:	ba 00 00 00 00       	mov    $0x0,%edx
    6ea4:	48 89 c7             	mov    %rax,%rdi
    6ea7:	e8 a4 b3 ff ff       	call   2250 <vkGetDeviceQueue@plt>
                   &this->graphicsQueue);
  vkGetDeviceQueue(this->device, selectedIndices.computeFamily.value(), 0,
    6eac:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6eb3:	48 8d 58 48          	lea    0x48(%rax),%rbx
    6eb7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6ebb:	48 83 c0 08          	add    $0x8,%rax
    6ebf:	48 89 c7             	mov    %rax,%rdi
    6ec2:	e8 11 08 00 00       	call   76d8 <_ZNRSt8optionalIjE5valueEv>
    6ec7:	8b 30                	mov    (%rax),%esi
    6ec9:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
    6ed0:	48 8b 40 38          	mov    0x38(%rax),%rax
    6ed4:	48 89 d9             	mov    %rbx,%rcx
    6ed7:	ba 00 00 00 00       	mov    $0x0,%edx
    6edc:	48 89 c7             	mov    %rax,%rdi
    6edf:	e8 6c b3 ff ff       	call   2250 <vkGetDeviceQueue@plt>
                   &this->computeQueue);
}
    6ee4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6ee8:	48 89 c7             	mov    %rax,%rdi
    6eeb:	e8 ac c5 ff ff       	call   349c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6ef0:	eb 2a                	jmp    6f1c <_ZN9VulkanApp12createDeviceEv+0x4ae>
    throw std::runtime_error("Failed to select a physical device.");
    6ef2:	49 89 c4             	mov    %rax,%r12
    6ef5:	48 89 df             	mov    %rbx,%rdi
    6ef8:	e8 f3 b1 ff ff       	call   20f0 <__cxa_free_exception@plt>
    6efd:	4c 89 e3             	mov    %r12,%rbx
    6f00:	eb 03                	jmp    6f05 <_ZN9VulkanApp12createDeviceEv+0x497>
}
    6f02:	48 89 c3             	mov    %rax,%rbx
    6f05:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6f09:	48 89 c7             	mov    %rax,%rdi
    6f0c:	e8 8b c5 ff ff       	call   349c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6f11:	48 89 d8             	mov    %rbx,%rax
    6f14:	48 89 c7             	mov    %rax,%rdi
    6f17:	e8 f4 b3 ff ff       	call   2310 <_Unwind_Resume@plt>
    6f1c:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    6f20:	5b                   	pop    %rbx
    6f21:	41 5c                	pop    %r12
    6f23:	5d                   	pop    %rbp
    6f24:	c3                   	ret
    6f25:	90                   	nop

0000000000006f26 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    6f26:	55                   	push   %rbp
    6f27:	48 89 e5             	mov    %rsp,%rbp
    6f2a:	41 54                	push   %r12
    6f2c:	53                   	push   %rbx
    6f2d:	48 83 ec 10          	sub    $0x10,%rsp
    6f31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (glfwCreateWindowSurface(this->instance, this->window, nullptr,
    6f35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f39:	48 8d 50 30          	lea    0x30(%rax),%rdx
    6f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f41:	48 8b 30             	mov    (%rax),%rsi
    6f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f48:	48 8b 40 08          	mov    0x8(%rax),%rax
    6f4c:	48 89 d1             	mov    %rdx,%rcx
    6f4f:	ba 00 00 00 00       	mov    $0x0,%edx
    6f54:	48 89 c7             	mov    %rax,%rdi
    6f57:	e8 54 b3 ff ff       	call   22b0 <glfwCreateWindowSurface@plt>
                              &this->surface) != VK_SUCCESS) {
    6f5c:	85 c0                	test   %eax,%eax
    6f5e:	0f 95 c0             	setne  %al
  if (glfwCreateWindowSurface(this->instance, this->window, nullptr,
    6f61:	84 c0                	test   %al,%al
    6f63:	74 51                	je     6fb6 <_ZN9VulkanApp13createSurfaceEv+0x90>
    throw std::runtime_error("Failed to create window surface.");
    6f65:	bf 10 00 00 00       	mov    $0x10,%edi
    6f6a:	e8 41 b1 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    6f6f:	48 89 c3             	mov    %rax,%rbx
    6f72:	48 8d 05 17 3c 00 00 	lea    0x3c17(%rip),%rax        # ab90 <_ZN6__pstl9execution2v1L5unseqE+0x51>
    6f79:	48 89 c6             	mov    %rax,%rsi
    6f7c:	48 89 df             	mov    %rbx,%rdi
    6f7f:	e8 dc b0 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    6f84:	48 8b 05 1d 90 00 00 	mov    0x901d(%rip),%rax        # ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6f8b:	48 89 c2             	mov    %rax,%rdx
    6f8e:	48 8d 05 ab 8d 00 00 	lea    0x8dab(%rip),%rax        # fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6f95:	48 89 c6             	mov    %rax,%rsi
    6f98:	48 89 df             	mov    %rbx,%rdi
    6f9b:	e8 50 b3 ff ff       	call   22f0 <__cxa_throw@plt>
    6fa0:	49 89 c4             	mov    %rax,%r12
    6fa3:	48 89 df             	mov    %rbx,%rdi
    6fa6:	e8 45 b1 ff ff       	call   20f0 <__cxa_free_exception@plt>
    6fab:	4c 89 e0             	mov    %r12,%rax
    6fae:	48 89 c7             	mov    %rax,%rdi
    6fb1:	e8 5a b3 ff ff       	call   2310 <_Unwind_Resume@plt>
  }
}
    6fb6:	90                   	nop
    6fb7:	48 83 c4 10          	add    $0x10,%rsp
    6fbb:	5b                   	pop    %rbx
    6fbc:	41 5c                	pop    %r12
    6fbe:	5d                   	pop    %rbp
    6fbf:	c3                   	ret

0000000000006fc0 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    6fc0:	55                   	push   %rbp
    6fc1:	48 89 e5             	mov    %rsp,%rbp
    6fc4:	41 55                	push   %r13
    6fc6:	41 54                	push   %r12
    6fc8:	53                   	push   %rbx
    6fc9:	48 83 ec 28          	sub    $0x28,%rsp
    6fcd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6fd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6fd5:	48 8d 58 10          	lea    0x10(%rax),%rbx
    6fd9:	48 8d 05 d1 3b 00 00 	lea    0x3bd1(%rip),%rax        # abb1 <_ZN6__pstl9execution2v1L5unseqE+0x72>
    6fe0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6fe4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6fe8:	49 89 c4             	mov    %rax,%r12
    6feb:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    6ff1:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6ff5:	48 89 c7             	mov    %rax,%rdi
    6ff8:	e8 f1 c0 ff ff       	call   30ee <_ZNSaIPKcEC1Ev>
    6ffd:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7001:	4d 89 e0             	mov    %r12,%r8
    7004:	4d 89 e9             	mov    %r13,%r9
    7007:	4c 89 e6             	mov    %r12,%rsi
    700a:	4c 89 ef             	mov    %r13,%rdi
    700d:	48 89 fa             	mov    %rdi,%rdx
    7010:	48 89 c1             	mov    %rax,%rcx
    7013:	4c 89 c6             	mov    %r8,%rsi
    7016:	48 89 df             	mov    %rbx,%rdi
    7019:	e8 10 04 00 00       	call   742e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    701e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7022:	48 89 c7             	mov    %rax,%rdi
    7025:	e8 e0 c0 ff ff       	call   310a <_ZNSaIPKcED1Ev>
  createWindow();
    702a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    702e:	48 89 c7             	mov    %rax,%rdi
    7031:	e8 0c f8 ff ff       	call   6842 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    7036:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    703a:	48 89 c7             	mov    %rax,%rdi
    703d:	e8 40 f8 ff ff       	call   6882 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    7042:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7046:	48 89 c7             	mov    %rax,%rdi
    7049:	e8 f8 f9 ff ff       	call   6a46 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    704e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7052:	48 89 c7             	mov    %rax,%rdi
    7055:	e8 cc fe ff ff       	call   6f26 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    705a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    705e:	48 89 c7             	mov    %rax,%rdi
    7061:	e8 08 fa ff ff       	call   6a6e <_ZN9VulkanApp12createDeviceEv>
}
    7066:	eb 38                	jmp    70a0 <_ZN9VulkanAppC1Ev+0xe0>
VulkanApp::VulkanApp() {
    7068:	48 89 c3             	mov    %rax,%rbx
    706b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    706f:	48 89 c7             	mov    %rax,%rdi
    7072:	e8 93 c0 ff ff       	call   310a <_ZNSaIPKcED1Ev>
    7077:	48 89 d8             	mov    %rbx,%rax
    707a:	48 89 c7             	mov    %rax,%rdi
    707d:	e8 8e b2 ff ff       	call   2310 <_Unwind_Resume@plt>
    7082:	48 89 c3             	mov    %rax,%rbx
    7085:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7089:	48 83 c0 10          	add    $0x10,%rax
}
    708d:	48 89 c7             	mov    %rax,%rdi
    7090:	e8 07 c1 ff ff       	call   319c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    7095:	48 89 d8             	mov    %rbx,%rax
    7098:	48 89 c7             	mov    %rax,%rdi
    709b:	e8 70 b2 ff ff       	call   2310 <_Unwind_Resume@plt>
    70a0:	48 83 c4 28          	add    $0x28,%rsp
    70a4:	5b                   	pop    %rbx
    70a5:	41 5c                	pop    %r12
    70a7:	41 5d                	pop    %r13
    70a9:	5d                   	pop    %rbp
    70aa:	c3                   	ret
    70ab:	90                   	nop

00000000000070ac <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    70ac:	55                   	push   %rbp
    70ad:	48 89 e5             	mov    %rsp,%rbp
    70b0:	48 83 ec 10          	sub    $0x10,%rsp
    70b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  vkh::destroyDevice(this->device);
    70b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70bc:	48 8b 40 38          	mov    0x38(%rax),%rax
    70c0:	be 00 00 00 00       	mov    $0x0,%esi
    70c5:	48 89 c7             	mov    %rax,%rdi
    70c8:	e8 be b6 ff ff       	call   278b <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(this->instance, this->debugMessenger,
    70cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70d1:	48 8b 48 28          	mov    0x28(%rax),%rcx
    70d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    70dd:	ba 00 00 00 00       	mov    $0x0,%edx
    70e2:	48 89 ce             	mov    %rcx,%rsi
    70e5:	48 89 c7             	mov    %rax,%rdi
    70e8:	e8 ad f2 ff ff       	call   639a <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
                                     nullptr);
  vkDestroySurfaceKHR(this->instance, this->surface, nullptr);
    70ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70f1:	48 8b 48 30          	mov    0x30(%rax),%rcx
    70f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70f9:	48 8b 40 08          	mov    0x8(%rax),%rax
    70fd:	ba 00 00 00 00       	mov    $0x0,%edx
    7102:	48 89 ce             	mov    %rcx,%rsi
    7105:	48 89 c7             	mov    %rax,%rdi
    7108:	e8 f3 b1 ff ff       	call   2300 <vkDestroySurfaceKHR@plt>
  vkh::destroyInstance(this->instance, nullptr);
    710d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7111:	48 8b 40 08          	mov    0x8(%rax),%rax
    7115:	be 00 00 00 00       	mov    $0x0,%esi
    711a:	48 89 c7             	mov    %rax,%rdi
    711d:	e8 43 b6 ff ff       	call   2765 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(this->window);
    7122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7126:	48 8b 00             	mov    (%rax),%rax
    7129:	48 89 c7             	mov    %rax,%rdi
    712c:	e8 0f af ff ff       	call   2040 <glfwDestroyWindow@plt>
  glfwTerminate();
    7131:	e8 aa b0 ff ff       	call   21e0 <glfwTerminate@plt>
VulkanApp::~VulkanApp() {
    7136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    713a:	48 83 c0 10          	add    $0x10,%rax
}
    713e:	48 89 c7             	mov    %rax,%rdi
    7141:	e8 56 c0 ff ff       	call   319c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    7146:	90                   	nop
    7147:	c9                   	leave
    7148:	c3                   	ret
    7149:	90                   	nop

000000000000714a <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    714a:	55                   	push   %rbp
    714b:	48 89 e5             	mov    %rsp,%rbp
    714e:	53                   	push   %rbx
    714f:	48 83 ec 78          	sub    $0x78,%rsp
    7153:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  vkh::Timer time_total;
    7157:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    715b:	48 89 c7             	mov    %rax,%rdi
    715e:	e8 a7 05 00 00       	call   770a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    7163:	f2 0f 10 05 ad 3a 00 	movsd  0x3aad(%rip),%xmm0        # ac18 <_ZN6__pstl9execution2v1L5unseqE+0xd9>
    716a:	00 
    716b:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    7170:	e9 94 00 00 00       	jmp    7209 <_ZN9VulkanApp3runEv+0xbf>
    vkh::Timer time_circle;
    7175:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7179:	48 89 c7             	mov    %rax,%rdi
    717c:	e8 89 05 00 00       	call   770a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>

    glfwPollEvents();
    7181:	e8 0a b0 ff ff       	call   2190 <glfwPollEvents@plt>

    if (time_total.current() >= sec_to_mics) {
    7186:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    718a:	48 89 c7             	mov    %rax,%rdi
    718d:	e8 16 06 00 00       	call   77a8 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    7192:	66 48 0f 7e c0       	movq   %xmm0,%rax
    7197:	66 48 0f 6e d0       	movq   %rax,%xmm2
    719c:	66 0f 2f 15 74 3a 00 	comisd 0x3a74(%rip),%xmm2        # ac18 <_ZN6__pstl9execution2v1L5unseqE+0xd9>
    71a3:	00 
    71a4:	0f 93 c0             	setae  %al
    71a7:	84 c0                	test   %al,%al
    71a9:	74 52                	je     71fd <_ZN9VulkanApp3runEv+0xb3>
      std::cout << sec_to_mics / time_circle.current() << " FPS\n";
    71ab:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    71af:	48 89 c7             	mov    %rax,%rdi
    71b2:	e8 f1 05 00 00       	call   77a8 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    71b7:	f2 0f 10 0d 59 3a 00 	movsd  0x3a59(%rip),%xmm1        # ac18 <_ZN6__pstl9execution2v1L5unseqE+0xd9>
    71be:	00 
    71bf:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    71c3:	66 48 0f 7e c8       	movq   %xmm1,%rax
    71c8:	66 48 0f 6e c0       	movq   %rax,%xmm0
    71cd:	48 8d 05 ec 8f 00 00 	lea    0x8fec(%rip),%rax        # 101c0 <_ZSt4cout@GLIBCXX_3.4>
    71d4:	48 89 c7             	mov    %rax,%rdi
    71d7:	e8 64 b1 ff ff       	call   2340 <_ZNSolsEd@plt>
    71dc:	48 89 c2             	mov    %rax,%rdx
    71df:	48 8d 05 e7 39 00 00 	lea    0x39e7(%rip),%rax        # abcd <_ZN6__pstl9execution2v1L5unseqE+0x8e>
    71e6:	48 89 c6             	mov    %rax,%rsi
    71e9:	48 89 d7             	mov    %rdx,%rdi
    71ec:	e8 af af ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    71f1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    71f5:	48 89 c7             	mov    %rax,%rdi
    71f8:	e8 0d 06 00 00       	call   780a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    71fd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7201:	48 89 c7             	mov    %rax,%rdi
    7204:	e8 77 05 00 00       	call   7780 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    7209:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    720d:	48 8b 00             	mov    (%rax),%rax
    7210:	48 89 c7             	mov    %rax,%rdi
    7213:	e8 18 b1 ff ff       	call   2330 <glfwWindowShouldClose@plt>
    7218:	85 c0                	test   %eax,%eax
    721a:	0f 94 c0             	sete   %al
    721d:	84 c0                	test   %al,%al
    721f:	0f 85 50 ff ff ff    	jne    7175 <_ZN9VulkanApp3runEv+0x2b>

  vkDeviceWaitIdle(this->device);
    7225:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7229:	48 8b 40 38          	mov    0x38(%rax),%rax
    722d:	48 89 c7             	mov    %rax,%rdi
    7230:	e8 fb ad ff ff       	call   2030 <vkDeviceWaitIdle@plt>
    7235:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7239:	48 89 c7             	mov    %rax,%rdi
    723c:	e8 3f 05 00 00       	call   7780 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    7241:	eb 2b                	jmp    726e <_ZN9VulkanApp3runEv+0x124>
  }
    7243:	48 89 c3             	mov    %rax,%rbx
    7246:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    724a:	48 89 c7             	mov    %rax,%rdi
    724d:	e8 2e 05 00 00       	call   7780 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    7252:	eb 03                	jmp    7257 <_ZN9VulkanApp3runEv+0x10d>
    7254:	48 89 c3             	mov    %rax,%rbx
    7257:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    725b:	48 89 c7             	mov    %rax,%rdi
    725e:	e8 1d 05 00 00       	call   7780 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    7263:	48 89 d8             	mov    %rbx,%rax
    7266:	48 89 c7             	mov    %rax,%rdi
    7269:	e8 a2 b0 ff ff       	call   2310 <_Unwind_Resume@plt>
    726e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7272:	c9                   	leave
    7273:	c3                   	ret

0000000000007274 <_Z41__static_initialization_and_destruction_0ii>:
    7274:	55                   	push   %rbp
    7275:	48 89 e5             	mov    %rsp,%rbp
    7278:	48 83 ec 10          	sub    $0x10,%rsp
    727c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    727f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    7282:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    7286:	75 3b                	jne    72c3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    7288:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    728f:	75 32                	jne    72c3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    7291:	48 8d 05 5b 91 00 00 	lea    0x915b(%rip),%rax        # 103f3 <_ZStL8__ioinit>
    7298:	48 89 c7             	mov    %rax,%rdi
    729b:	e8 00 b0 ff ff       	call   22a0 <_ZNSt8ios_base4InitC1Ev@plt>
    72a0:	48 8d 05 f1 8e 00 00 	lea    0x8ef1(%rip),%rax        # 10198 <__dso_handle>
    72a7:	48 89 c2             	mov    %rax,%rdx
    72aa:	48 8d 05 42 91 00 00 	lea    0x9142(%rip),%rax        # 103f3 <_ZStL8__ioinit>
    72b1:	48 89 c6             	mov    %rax,%rsi
    72b4:	48 8b 05 0d 8d 00 00 	mov    0x8d0d(%rip),%rax        # ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    72bb:	48 89 c7             	mov    %rax,%rdi
    72be:	e8 9d ae ff ff       	call   2160 <__cxa_atexit@plt>
    72c3:	90                   	nop
    72c4:	c9                   	leave
    72c5:	c3                   	ret

00000000000072c6 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    72c6:	55                   	push   %rbp
    72c7:	48 89 e5             	mov    %rsp,%rbp
    72ca:	be ff ff 00 00       	mov    $0xffff,%esi
    72cf:	bf 01 00 00 00       	mov    $0x1,%edi
    72d4:	e8 9b ff ff ff       	call   7274 <_Z41__static_initialization_and_destruction_0ii>
    72d9:	5d                   	pop    %rbp
    72da:	c3                   	ret
    72db:	90                   	nop

00000000000072dc <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    72dc:	55                   	push   %rbp
    72dd:	48 89 e5             	mov    %rsp,%rbp
    72e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72e4:	48 8d 15 25 8a 00 00 	lea    0x8a25(%rip),%rdx        # fd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    72eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72ef:	48 89 10             	mov    %rdx,(%rax)
    72f2:	90                   	nop
    72f3:	5d                   	pop    %rbp
    72f4:	c3                   	ret

00000000000072f5 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    72f5:	55                   	push   %rbp
    72f6:	48 89 e5             	mov    %rsp,%rbp
    72f9:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    72fd:	e8 3b 00 00 00       	call   733d <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    7302:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7306:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    730a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    730e:	48 89 d6             	mov    %rdx,%rsi
    7311:	48 89 c7             	mov    %rax,%rdi
    7314:	e8 07 00 00 00       	call   7320 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    7319:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    731d:	c9                   	leave
    731e:	c3                   	ret
    731f:	90                   	nop

0000000000007320 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    7320:	55                   	push   %rbp
    7321:	48 89 e5             	mov    %rsp,%rbp
    7324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7328:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    732c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7330:	48 8b 10             	mov    (%rax),%rdx
    7333:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7337:	48 89 10             	mov    %rdx,(%rax)
    733a:	90                   	nop
    733b:	5d                   	pop    %rbp
    733c:	c3                   	ret

000000000000733d <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    733d:	55                   	push   %rbp
    733e:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    7341:	b8 00 00 00 00       	mov    $0x0,%eax
    7346:	5d                   	pop    %rbp
    7347:	c3                   	ret

0000000000007348 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    7348:	55                   	push   %rbp
    7349:	48 89 e5             	mov    %rsp,%rbp
    734c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    7350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7354:	48 8b 00             	mov    (%rax),%rax
    7357:	5d                   	pop    %rbp
    7358:	c3                   	ret
    7359:	90                   	nop

000000000000735a <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
    735a:	55                   	push   %rbp
    735b:	48 89 e5             	mov    %rsp,%rbp
    735e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    7362:	48 8d 05 d7 37 00 00 	lea    0x37d7(%rip),%rax        # ab40 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    7369:	5d                   	pop    %rbp
    736a:	c3                   	ret
    736b:	90                   	nop

000000000000736c <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    736c:	55                   	push   %rbp
    736d:	48 89 e5             	mov    %rsp,%rbp
    7370:	48 83 ec 10          	sub    $0x10,%rsp
    7374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    737c:	48 89 c7             	mov    %rax,%rdi
    737f:	e8 58 ff ff ff       	call   72dc <_ZNSt9exceptionC1Ev>
    7384:	48 8d 15 55 89 00 00 	lea    0x8955(%rip),%rdx        # fce0 <_ZTVSt19bad_optional_access+0x10>
    738b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738f:	48 89 10             	mov    %rdx,(%rax)
    7392:	90                   	nop
    7393:	c9                   	leave
    7394:	c3                   	ret

0000000000007395 <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    7395:	55                   	push   %rbp
    7396:	48 89 e5             	mov    %rsp,%rbp
    7399:	53                   	push   %rbx
    739a:	48 83 ec 08          	sub    $0x8,%rsp
    739e:	bf 08 00 00 00       	mov    $0x8,%edi
    73a3:	e8 08 ad ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    73a8:	48 89 c3             	mov    %rax,%rbx
    73ab:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    73b2:	48 89 df             	mov    %rbx,%rdi
    73b5:	e8 b2 ff ff ff       	call   736c <_ZNSt19bad_optional_accessC1Ev>
    73ba:	48 8d 05 15 0b 00 00 	lea    0xb15(%rip),%rax        # 7ed6 <_ZNSt19bad_optional_accessD1Ev>
    73c1:	48 89 c2             	mov    %rax,%rdx
    73c4:	48 8d 05 8d 89 00 00 	lea    0x898d(%rip),%rax        # fd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    73cb:	48 89 c6             	mov    %rax,%rsi
    73ce:	48 89 df             	mov    %rbx,%rdi
    73d1:	e8 1a af ff ff       	call   22f0 <__cxa_throw@plt>

00000000000073d6 <_ZN18QueueFamilyIndices10isCompleteEv>:

struct QueueFamilyIndices {
  std::optional<uint32_t> graphicsFamily;
  std::optional<uint32_t> computeFamily;

  bool isComplete() {
    73d6:	55                   	push   %rbp
    73d7:	48 89 e5             	mov    %rsp,%rbp
    73da:	48 83 ec 10          	sub    $0x10,%rsp
    73de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    return graphicsFamily.has_value() && computeFamily.has_value();
    73e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73e6:	48 89 c7             	mov    %rax,%rdi
    73e9:	e8 26 00 00 00       	call   7414 <_ZNKSt8optionalIjE9has_valueEv>
    73ee:	84 c0                	test   %al,%al
    73f0:	74 1b                	je     740d <_ZN18QueueFamilyIndices10isCompleteEv+0x37>
    73f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73f6:	48 83 c0 08          	add    $0x8,%rax
    73fa:	48 89 c7             	mov    %rax,%rdi
    73fd:	e8 12 00 00 00       	call   7414 <_ZNKSt8optionalIjE9has_valueEv>
    7402:	84 c0                	test   %al,%al
    7404:	74 07                	je     740d <_ZN18QueueFamilyIndices10isCompleteEv+0x37>
    7406:	b8 01 00 00 00       	mov    $0x1,%eax
    740b:	eb 05                	jmp    7412 <_ZN18QueueFamilyIndices10isCompleteEv+0x3c>
    740d:	b8 00 00 00 00       	mov    $0x0,%eax
  }
    7412:	c9                   	leave
    7413:	c3                   	ret

0000000000007414 <_ZNKSt8optionalIjE9has_valueEv>:
      { return std::move(this->_M_get()); }

      constexpr explicit operator bool() const noexcept
      { return this->_M_is_engaged(); }

      constexpr bool has_value() const noexcept
    7414:	55                   	push   %rbp
    7415:	48 89 e5             	mov    %rsp,%rbp
    7418:	48 83 ec 10          	sub    $0x10,%rsp
    741c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    7420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7424:	48 89 c7             	mov    %rax,%rdi
    7427:	e8 fe 03 00 00       	call   782a <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    742c:	c9                   	leave
    742d:	c3                   	ret

000000000000742e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    742e:	55                   	push   %rbp
    742f:	48 89 e5             	mov    %rsp,%rbp
    7432:	53                   	push   %rbx
    7433:	48 83 ec 38          	sub    $0x38,%rsp
    7437:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    743b:	48 89 f0             	mov    %rsi,%rax
    743e:	48 89 d6             	mov    %rdx,%rsi
    7441:	48 89 f2             	mov    %rsi,%rdx
    7444:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7448:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    744c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    7450:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7454:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7458:	48 89 d6             	mov    %rdx,%rsi
    745b:	48 89 c7             	mov    %rax,%rdi
    745e:	e8 d9 03 00 00       	call   783c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    7463:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7467:	48 89 c7             	mov    %rax,%rdi
    746a:	e8 05 04 00 00       	call   7874 <_ZNKSt16initializer_listIPKcE3endEv>
    746f:	48 89 c3             	mov    %rax,%rbx
    7472:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7476:	48 89 c7             	mov    %rax,%rdi
    7479:	e8 e4 03 00 00       	call   7862 <_ZNKSt16initializer_listIPKcE5beginEv>
    747e:	48 89 c1             	mov    %rax,%rcx
    7481:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7485:	48 89 da             	mov    %rbx,%rdx
    7488:	48 89 ce             	mov    %rcx,%rsi
    748b:	48 89 c7             	mov    %rax,%rdi
    748e:	e8 47 04 00 00       	call   78da <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    7493:	eb 1a                	jmp    74af <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    7495:	48 89 c3             	mov    %rax,%rbx
    7498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    749c:	48 89 c7             	mov    %rax,%rdi
    749f:	e8 8e bd ff ff       	call   3232 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    74a4:	48 89 d8             	mov    %rbx,%rax
    74a7:	48 89 c7             	mov    %rax,%rdi
    74aa:	e8 61 ae ff ff       	call   2310 <_Unwind_Resume@plt>
    74af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74b3:	c9                   	leave
    74b4:	c3                   	ret
    74b5:	90                   	nop

00000000000074b6 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    74b6:	55                   	push   %rbp
    74b7:	48 89 e5             	mov    %rsp,%rbp
    74ba:	48 83 ec 10          	sub    $0x10,%rsp
    74be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    74c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c6:	48 8b 10             	mov    (%rax),%rdx
    74c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74cd:	48 89 d6             	mov    %rdx,%rsi
    74d0:	48 89 c7             	mov    %rax,%rdi
    74d3:	e8 b2 04 00 00       	call   798a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    74d8:	c9                   	leave
    74d9:	c3                   	ret

00000000000074da <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    74da:	55                   	push   %rbp
    74db:	48 89 e5             	mov    %rsp,%rbp
    74de:	48 83 ec 10          	sub    $0x10,%rsp
    74e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    74e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74ea:	48 8b 10             	mov    (%rax),%rdx
    74ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74f1:	48 89 d6             	mov    %rdx,%rsi
    74f4:	48 89 c7             	mov    %rax,%rdi
    74f7:	e8 8e 04 00 00       	call   798a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    74fc:	c9                   	leave
    74fd:	c3                   	ret

00000000000074fe <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    74fe:	55                   	push   %rbp
    74ff:	48 89 e5             	mov    %rsp,%rbp
    7502:	53                   	push   %rbx
    7503:	48 83 ec 18          	sub    $0x18,%rsp
    7507:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    750b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    750f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7513:	48 89 c7             	mov    %rax,%rdi
    7516:	e8 97 d7 ff ff       	call   4cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    751b:	48 8b 18             	mov    (%rax),%rbx
    751e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7522:	48 89 c7             	mov    %rax,%rdi
    7525:	e8 88 d7 ff ff       	call   4cb2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    752a:	48 8b 00             	mov    (%rax),%rax
    752d:	48 39 c3             	cmp    %rax,%rbx
    7530:	0f 95 c0             	setne  %al
    7533:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7537:	c9                   	leave
    7538:	c3                   	ret
    7539:	90                   	nop

000000000000753a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    753a:	55                   	push   %rbp
    753b:	48 89 e5             	mov    %rsp,%rbp
    753e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7546:	48 8b 00             	mov    (%rax),%rax
    7549:	48 8d 50 08          	lea    0x8(%rax),%rdx
    754d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7551:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    7554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7558:	5d                   	pop    %rbp
    7559:	c3                   	ret

000000000000755a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    755a:	55                   	push   %rbp
    755b:	48 89 e5             	mov    %rsp,%rbp
    755e:	48 83 ec 20          	sub    $0x20,%rsp
    7562:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    7566:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    756a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    756e:	48 89 d6             	mov    %rdx,%rsi
    7571:	48 89 c7             	mov    %rax,%rdi
    7574:	e8 23 04 00 00       	call   799c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    7579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    757d:	c9                   	leave
    757e:	c3                   	ret
    757f:	90                   	nop

0000000000007580 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7580:	55                   	push   %rbp
    7581:	48 89 e5             	mov    %rsp,%rbp
    7584:	48 83 ec 20          	sub    $0x20,%rsp
    7588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    758c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7590:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7594:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7598:	48 89 d6             	mov    %rdx,%rsi
    759b:	48 89 c7             	mov    %rax,%rdi
    759e:	e8 f9 03 00 00       	call   799c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    75a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75a7:	c9                   	leave
    75a8:	c3                   	ret

00000000000075a9 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    75a9:	55                   	push   %rbp
    75aa:	48 89 e5             	mov    %rsp,%rbp
    75ad:	53                   	push   %rbx
    75ae:	48 83 ec 18          	sub    $0x18,%rsp
    75b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75b6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    75ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75be:	48 89 c7             	mov    %rax,%rdi
    75c1:	e8 f4 03 00 00       	call   79ba <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    75c6:	48 8b 18             	mov    (%rax),%rbx
    75c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    75cd:	48 89 c7             	mov    %rax,%rdi
    75d0:	e8 e5 03 00 00       	call   79ba <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    75d5:	48 8b 00             	mov    (%rax),%rax
    75d8:	48 39 c3             	cmp    %rax,%rbx
    75db:	0f 95 c0             	setne  %al
    75de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75e2:	c9                   	leave
    75e3:	c3                   	ret

00000000000075e4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    75e4:	55                   	push   %rbp
    75e5:	48 89 e5             	mov    %rsp,%rbp
    75e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    75ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75f0:	48 8b 00             	mov    (%rax),%rax
    75f3:	48 8d 50 08          	lea    0x8(%rax),%rdx
    75f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75fb:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    75fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7602:	5d                   	pop    %rbp
    7603:	c3                   	ret

0000000000007604 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7604:	55                   	push   %rbp
    7605:	48 89 e5             	mov    %rsp,%rbp
    7608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    760c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7610:	48 8b 00             	mov    (%rax),%rax
    7613:	5d                   	pop    %rbp
    7614:	c3                   	ret
    7615:	90                   	nop

0000000000007616 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7616:	55                   	push   %rbp
    7617:	48 89 e5             	mov    %rsp,%rbp
    761a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    761e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7622:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    762a:	48 8b 00             	mov    (%rax),%rax
    762d:	48 29 c2             	sub    %rax,%rdx
    7630:	48 c1 fa 03          	sar    $0x3,%rdx
    7634:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    763b:	aa aa aa 
    763e:	48 0f af c2          	imul   %rdx,%rax
    7642:	5d                   	pop    %rbp
    7643:	c3                   	ret

0000000000007644 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7644:	55                   	push   %rbp
    7645:	48 89 e5             	mov    %rsp,%rbp
    7648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    764c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    7650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7654:	48 8b 08             	mov    (%rax),%rcx
    7657:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    765b:	48 89 d0             	mov    %rdx,%rax
    765e:	48 01 c0             	add    %rax,%rax
    7661:	48 01 d0             	add    %rdx,%rax
    7664:	48 c1 e0 03          	shl    $0x3,%rax
    7668:	48 01 c8             	add    %rcx,%rax
      }
    766b:	5d                   	pop    %rbp
    766c:	c3                   	ret
    766d:	90                   	nop

000000000000766e <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>:
	operator=(_Up&& __u)
    766e:	55                   	push   %rbp
    766f:	48 89 e5             	mov    %rsp,%rbp
    7672:	53                   	push   %rbx
    7673:	48 83 ec 18          	sub    $0x18,%rsp
    7677:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    767b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (this->_M_is_engaged())
    767f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7683:	48 89 c7             	mov    %rax,%rdi
    7686:	e8 9f 01 00 00       	call   782a <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    768b:	84 c0                	test   %al,%al
    768d:	74 21                	je     76b0 <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x42>
	    this->_M_get() = std::forward<_Up>(__u);
    768f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7693:	48 89 c7             	mov    %rax,%rdi
    7696:	e8 71 03 00 00       	call   7a0c <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    769b:	48 8b 00             	mov    (%rax),%rax
    769e:	89 c3                	mov    %eax,%ebx
    76a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76a4:	48 89 c7             	mov    %rax,%rdi
    76a7:	e8 1c 03 00 00       	call   79c8 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    76ac:	89 18                	mov    %ebx,(%rax)
    76ae:	eb 1e                	jmp    76ce <_ZNSt8optionalIjEaSIRmEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x60>
	    this->_M_construct(std::forward<_Up>(__u));
    76b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76b4:	48 89 c7             	mov    %rax,%rdi
    76b7:	e8 50 03 00 00       	call   7a0c <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    76bc:	48 89 c2             	mov    %rax,%rdx
    76bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76c3:	48 89 d6             	mov    %rdx,%rsi
    76c6:	48 89 c7             	mov    %rax,%rdi
    76c9:	e8 4c 03 00 00       	call   7a1a <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRmEEEvDpOT_>
	  return *this;
    76ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    76d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76d6:	c9                   	leave
    76d7:	c3                   	ret

00000000000076d8 <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    76d8:	55                   	push   %rbp
    76d9:	48 89 e5             	mov    %rsp,%rbp
    76dc:	48 83 ec 10          	sub    $0x10,%rsp
    76e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    76e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76e8:	48 89 c7             	mov    %rax,%rdi
    76eb:	e8 3a 01 00 00       	call   782a <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    76f0:	84 c0                	test   %al,%al
    76f2:	74 0e                	je     7702 <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
    76f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76f8:	48 89 c7             	mov    %rax,%rdi
    76fb:	e8 c8 02 00 00       	call   79c8 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    7700:	eb 05                	jmp    7707 <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
    7702:	e8 8e fc ff ff       	call   7395 <_ZSt27__throw_bad_optional_accessv>
      }
    7707:	c9                   	leave
    7708:	c3                   	ret
    7709:	90                   	nop

000000000000770a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
private:
  std::chrono::steady_clock::time_point start;
  std::string time_unit;

public:
  Timer() {
    770a:	55                   	push   %rbp
    770b:	48 89 e5             	mov    %rsp,%rbp
    770e:	53                   	push   %rbx
    770f:	48 83 ec 18          	sub    $0x18,%rsp
    7713:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7717:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    771b:	48 89 c7             	mov    %rax,%rdi
    771e:	e8 2b 03 00 00       	call   7a4e <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    7723:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7727:	48 83 c0 08          	add    $0x8,%rax
    772b:	48 89 c7             	mov    %rax,%rdi
    772e:	e8 4d ab ff ff       	call   2280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
    if (std::is_same_v<DurationType, mic>)
      this->time_unit = "μs";
    7733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7737:	48 83 c0 08          	add    $0x8,%rax
    773b:	48 8d 15 91 34 00 00 	lea    0x3491(%rip),%rdx        # abd3 <_ZN6__pstl9execution2v1L5unseqE+0x94>
    7742:	48 89 d6             	mov    %rdx,%rsi
    7745:	48 89 c7             	mov    %rax,%rdi
    7748:	e8 13 ab ff ff       	call   2260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    else if (std::is_same_v<DurationType, hr>)
      this->time_unit = "hrs";
    else
      static_assert("Unkown time unit.");

    this->start = std::chrono::steady_clock::now();
    774d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7751:	e8 ea aa ff ff       	call   2240 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    7756:	48 89 03             	mov    %rax,(%rbx)
  }
    7759:	eb 1e                	jmp    7779 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    775b:	48 89 c3             	mov    %rax,%rbx
    775e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7762:	48 83 c0 08          	add    $0x8,%rax
    7766:	48 89 c7             	mov    %rax,%rdi
    7769:	e8 72 a9 ff ff       	call   20e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    776e:	48 89 d8             	mov    %rbx,%rax
    7771:	48 89 c7             	mov    %rax,%rdi
    7774:	e8 97 ab ff ff       	call   2310 <_Unwind_Resume@plt>
    7779:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    777d:	c9                   	leave
    777e:	c3                   	ret
    777f:	90                   	nop

0000000000007780 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:

  ~Timer() {
    7780:	55                   	push   %rbp
    7781:	48 89 e5             	mov    %rsp,%rbp
    7784:	48 83 ec 20          	sub    $0x20,%rsp
    7788:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    778c:	e8 af aa ff ff       	call   2240 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    7791:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (when_destroyed == announce)
      std::cout
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }
    7795:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7799:	48 83 c0 08          	add    $0x8,%rax
    779d:	48 89 c7             	mov    %rax,%rdi
    77a0:	e8 3b a9 ff ff       	call   20e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    77a5:	90                   	nop
    77a6:	c9                   	leave
    77a7:	c3                   	ret

00000000000077a8 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:

  double current() const {
    77a8:	55                   	push   %rbp
    77a9:	48 89 e5             	mov    %rsp,%rbp
    77ac:	53                   	push   %rbx
    77ad:	48 83 ec 38          	sub    $0x38,%rsp
    77b1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    77b5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    77b9:	e8 82 aa ff ff       	call   2240 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    77be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    77c2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    77c6:	48 89 de             	mov    %rbx,%rsi
    77c9:	48 89 c7             	mov    %rax,%rdi
    77cc:	e8 9d 02 00 00       	call   7a6e <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    77d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    77d5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    77d9:	48 89 c7             	mov    %rax,%rdi
    77dc:	e8 d2 02 00 00       	call   7ab3 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    77e1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    77e5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    77e9:	48 89 c7             	mov    %rax,%rdi
    77ec:	e8 dd 02 00 00       	call   7ace <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
    77f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    77f5:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    77fa:	66 48 0f 7e c0       	movq   %xmm0,%rax
  }
    77ff:	66 48 0f 6e c0       	movq   %rax,%xmm0
    7804:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7808:	c9                   	leave
    7809:	c3                   	ret

000000000000780a <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    780a:	55                   	push   %rbp
    780b:	48 89 e5             	mov    %rsp,%rbp
    780e:	53                   	push   %rbx
    780f:	48 83 ec 18          	sub    $0x18,%rsp
    7813:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7817:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    781b:	e8 20 aa ff ff       	call   2240 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    7820:	48 89 03             	mov    %rax,(%rbx)
    7823:	90                   	nop
    7824:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7828:	c9                   	leave
    7829:	c3                   	ret

000000000000782a <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    782a:	55                   	push   %rbp
    782b:	48 89 e5             	mov    %rsp,%rbp
    782e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    7832:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7836:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    783a:	5d                   	pop    %rbp
    783b:	c3                   	ret

000000000000783c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    783c:	55                   	push   %rbp
    783d:	48 89 e5             	mov    %rsp,%rbp
    7840:	48 83 ec 10          	sub    $0x10,%rsp
    7844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7848:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    784c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7850:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7854:	48 89 d6             	mov    %rdx,%rsi
    7857:	48 89 c7             	mov    %rax,%rdi
    785a:	e8 51 c9 ff ff       	call   41b0 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    785f:	90                   	nop
    7860:	c9                   	leave
    7861:	c3                   	ret

0000000000007862 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    7862:	55                   	push   %rbp
    7863:	48 89 e5             	mov    %rsp,%rbp
    7866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    786a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    786e:	48 8b 00             	mov    (%rax),%rax
    7871:	5d                   	pop    %rbp
    7872:	c3                   	ret
    7873:	90                   	nop

0000000000007874 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    7874:	55                   	push   %rbp
    7875:	48 89 e5             	mov    %rsp,%rbp
    7878:	53                   	push   %rbx
    7879:	48 83 ec 18          	sub    $0x18,%rsp
    787d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7881:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7885:	48 89 c7             	mov    %rax,%rdi
    7888:	e8 d5 ff ff ff       	call   7862 <_ZNKSt16initializer_listIPKcE5beginEv>
    788d:	48 89 c3             	mov    %rax,%rbx
    7890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7894:	48 89 c7             	mov    %rax,%rdi
    7897:	e8 44 02 00 00       	call   7ae0 <_ZNKSt16initializer_listIPKcE4sizeEv>
    789c:	48 c1 e0 03          	shl    $0x3,%rax
    78a0:	48 01 d8             	add    %rbx,%rax
    78a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    78a7:	c9                   	leave
    78a8:	c3                   	ret

00000000000078a9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    78a9:	55                   	push   %rbp
    78aa:	48 89 e5             	mov    %rsp,%rbp
    78ad:	48 83 ec 10          	sub    $0x10,%rsp
    78b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    78b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    78bd:	48 89 c7             	mov    %rax,%rdi
    78c0:	e8 2d 02 00 00       	call   7af2 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    78c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78c9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78cd:	48 89 d6             	mov    %rdx,%rsi
    78d0:	48 89 c7             	mov    %rax,%rdi
    78d3:	e8 25 02 00 00       	call   7afd <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    78d8:	c9                   	leave
    78d9:	c3                   	ret

00000000000078da <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    78da:	55                   	push   %rbp
    78db:	48 89 e5             	mov    %rsp,%rbp
    78de:	53                   	push   %rbx
    78df:	48 83 ec 38          	sub    $0x38,%rsp
    78e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    78e7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    78eb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    78ef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    78f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78f7:	48 89 d6             	mov    %rdx,%rsi
    78fa:	48 89 c7             	mov    %rax,%rdi
    78fd:	e8 a7 ff ff ff       	call   78a9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    7902:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    7906:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    790a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    790e:	48 89 c7             	mov    %rax,%rdi
    7911:	e8 7c c0 ff ff       	call   3992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    7916:	48 89 c2             	mov    %rax,%rdx
    7919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    791d:	48 89 d6             	mov    %rdx,%rsi
    7920:	48 89 c7             	mov    %rax,%rdi
    7923:	e8 6b bf ff ff       	call   3893 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    7928:	48 89 c6             	mov    %rax,%rsi
    792b:	48 89 df             	mov    %rbx,%rdi
    792e:	e8 51 d1 ff ff       	call   4a84 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    7933:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7937:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    793a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    793e:	48 8b 00             	mov    (%rax),%rax
    7941:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7945:	48 c1 e2 03          	shl    $0x3,%rdx
    7949:	48 01 c2             	add    %rax,%rdx
    794c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7950:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    7954:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7958:	48 89 c7             	mov    %rax,%rdi
    795b:	e8 32 c0 ff ff       	call   3992 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    7960:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    7963:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7967:	48 8b 10             	mov    (%rax),%rdx
    796a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    796e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7972:	48 89 c7             	mov    %rax,%rdi
    7975:	e8 9d 01 00 00       	call   7b17 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    797a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    797e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    7982:	90                   	nop
    7983:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7987:	c9                   	leave
    7988:	c3                   	ret
    7989:	90                   	nop

000000000000798a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    798a:	55                   	push   %rbp
    798b:	48 89 e5             	mov    %rsp,%rbp
    798e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7992:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7996:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    799a:	5d                   	pop    %rbp
    799b:	c3                   	ret

000000000000799c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    799c:	55                   	push   %rbp
    799d:	48 89 e5             	mov    %rsp,%rbp
    79a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    79a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79ac:	48 8b 10             	mov    (%rax),%rdx
    79af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79b3:	48 89 10             	mov    %rdx,(%rax)
    79b6:	90                   	nop
    79b7:	5d                   	pop    %rbp
    79b8:	c3                   	ret
    79b9:	90                   	nop

00000000000079ba <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    79ba:	55                   	push   %rbp
    79bb:	48 89 e5             	mov    %rsp,%rbp
    79be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    79c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c6:	5d                   	pop    %rbp
    79c7:	c3                   	ret

00000000000079c8 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    79c8:	55                   	push   %rbp
    79c9:	48 89 e5             	mov    %rsp,%rbp
    79cc:	48 83 ec 10          	sub    $0x10,%rsp
    79d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    79d4:	e8 79 ea ff ff       	call   6452 <_ZSt23__is_constant_evaluatedv>
    79d9:	84 c0                	test   %al,%al
    79db:	74 1a                	je     79f7 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    79dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79e1:	48 89 c7             	mov    %rax,%rdi
    79e4:	e8 41 fe ff ff       	call   782a <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    79e9:	83 f0 01             	xor    $0x1,%eax
    79ec:	84 c0                	test   %al,%al
    79ee:	74 07                	je     79f7 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    79f0:	b8 01 00 00 00       	mov    $0x1,%eax
    79f5:	eb 05                	jmp    79fc <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    79f7:	b8 00 00 00 00       	mov    $0x0,%eax
    79fc:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    79fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a02:	48 89 c7             	mov    %rax,%rdi
    7a05:	e8 3e 01 00 00       	call   7b48 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
    7a0a:	c9                   	leave
    7a0b:	c3                   	ret

0000000000007a0c <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7a0c:	55                   	push   %rbp
    7a0d:	48 89 e5             	mov    %rsp,%rbp
    7a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a18:	5d                   	pop    %rbp
    7a19:	c3                   	ret

0000000000007a1a <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRmEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    7a1a:	55                   	push   %rbp
    7a1b:	48 89 e5             	mov    %rsp,%rbp
    7a1e:	53                   	push   %rbx
    7a1f:	48 83 ec 18          	sub    $0x18,%rsp
    7a23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    7a2b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7a2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a33:	48 89 c7             	mov    %rax,%rdi
    7a36:	e8 d1 ff ff ff       	call   7a0c <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    7a3b:	48 89 c6             	mov    %rax,%rsi
    7a3e:	48 89 df             	mov    %rbx,%rdi
    7a41:	e8 10 01 00 00       	call   7b56 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRmEEEvDpOT_>
	}
    7a46:	90                   	nop
    7a47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a4b:	c9                   	leave
    7a4c:	c3                   	ret
    7a4d:	90                   	nop

0000000000007a4e <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	typedef _Clock						clock;
	typedef _Dur						duration;
	typedef typename duration::rep				rep;
	typedef typename duration::period			period;

	constexpr time_point() : __d(duration::zero())
    7a4e:	55                   	push   %rbp
    7a4f:	48 89 e5             	mov    %rsp,%rbp
    7a52:	53                   	push   %rbx
    7a53:	48 83 ec 18          	sub    $0x18,%rsp
    7a57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a5b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7a5f:	e8 91 f8 ff ff       	call   72f5 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
    7a64:	48 89 03             	mov    %rax,(%rbx)
	{ }
    7a67:	90                   	nop
    7a68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a6c:	c9                   	leave
    7a6d:	c3                   	ret

0000000000007a6e <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    7a6e:	55                   	push   %rbp
    7a6f:	48 89 e5             	mov    %rsp,%rbp
    7a72:	48 83 ec 20          	sub    $0x20,%rsp
    7a76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a7a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    7a7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a82:	48 89 c7             	mov    %rax,%rdi
    7a85:	e8 12 01 00 00       	call   7b9c <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    7a8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7a8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a92:	48 89 c7             	mov    %rax,%rdi
    7a95:	e8 02 01 00 00       	call   7b9c <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    7a9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7a9e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7aa2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7aa6:	48 89 d6             	mov    %rdx,%rsi
    7aa9:	48 89 c7             	mov    %rax,%rdi
    7aac:	e8 fc 00 00 00       	call   7bad <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    7ab1:	c9                   	leave
    7ab2:	c3                   	ret

0000000000007ab3 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    7ab3:	55                   	push   %rbp
    7ab4:	48 89 e5             	mov    %rsp,%rbp
    7ab7:	48 83 ec 10          	sub    $0x10,%rsp
    7abb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    7abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac3:	48 89 c7             	mov    %rax,%rdi
    7ac6:	e8 4b 01 00 00       	call   7c16 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    7acb:	c9                   	leave
    7acc:	c3                   	ret
    7acd:	90                   	nop

0000000000007ace <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    7ace:	55                   	push   %rbp
    7acf:	48 89 e5             	mov    %rsp,%rbp
    7ad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    7ad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ada:	48 8b 00             	mov    (%rax),%rax
    7add:	5d                   	pop    %rbp
    7ade:	c3                   	ret
    7adf:	90                   	nop

0000000000007ae0 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    7ae0:	55                   	push   %rbp
    7ae1:	48 89 e5             	mov    %rsp,%rbp
    7ae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7aec:	48 8b 40 08          	mov    0x8(%rax),%rax
    7af0:	5d                   	pop    %rbp
    7af1:	c3                   	ret

0000000000007af2 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    7af2:	55                   	push   %rbp
    7af3:	48 89 e5             	mov    %rsp,%rbp
    7af6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7afa:	90                   	nop
    7afb:	5d                   	pop    %rbp
    7afc:	c3                   	ret

0000000000007afd <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    7afd:	55                   	push   %rbp
    7afe:	48 89 e5             	mov    %rsp,%rbp
    7b01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b05:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    7b09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b0d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    7b11:	48 c1 f8 03          	sar    $0x3,%rax
    }
    7b15:	5d                   	pop    %rbp
    7b16:	c3                   	ret

0000000000007b17 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    7b17:	55                   	push   %rbp
    7b18:	48 89 e5             	mov    %rsp,%rbp
    7b1b:	48 83 ec 20          	sub    $0x20,%rsp
    7b1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b27:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7b2b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    7b2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b33:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b3b:	48 89 ce             	mov    %rcx,%rsi
    7b3e:	48 89 c7             	mov    %rax,%rdi
    7b41:	e8 29 01 00 00       	call   7c6f <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    7b46:	c9                   	leave
    7b47:	c3                   	ret

0000000000007b48 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
    7b48:	55                   	push   %rbp
    7b49:	48 89 e5             	mov    %rsp,%rbp
    7b4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    7b50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b54:	5d                   	pop    %rbp
    7b55:	c3                   	ret

0000000000007b56 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRmEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    7b56:	55                   	push   %rbp
    7b57:	48 89 e5             	mov    %rsp,%rbp
    7b5a:	53                   	push   %rbx
    7b5b:	48 83 ec 18          	sub    $0x18,%rsp
    7b5f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b63:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    7b67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b6b:	48 89 c7             	mov    %rax,%rdi
    7b6e:	e8 99 fe ff ff       	call   7a0c <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    7b73:	48 89 c3             	mov    %rax,%rbx
    7b76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b7a:	48 89 c7             	mov    %rax,%rdi
    7b7d:	e8 22 01 00 00       	call   7ca4 <_ZSt11__addressofIjEPT_RS0_>
    7b82:	48 89 de             	mov    %rbx,%rsi
    7b85:	48 89 c7             	mov    %rax,%rdi
    7b88:	e8 25 01 00 00       	call   7cb2 <_ZSt10_ConstructIjJRmEEvPT_DpOT0_>
	  this->_M_engaged = true;
    7b8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b91:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	}
    7b95:	90                   	nop
    7b96:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b9a:	c9                   	leave
    7b9b:	c3                   	ret

0000000000007b9c <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    7b9c:	55                   	push   %rbp
    7b9d:	48 89 e5             	mov    %rsp,%rbp
    7ba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    7ba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ba8:	48 8b 00             	mov    (%rax),%rax
    7bab:	5d                   	pop    %rbp
    7bac:	c3                   	ret

0000000000007bad <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    7bad:	55                   	push   %rbp
    7bae:	48 89 e5             	mov    %rsp,%rbp
    7bb1:	53                   	push   %rbx
    7bb2:	48 83 ec 38          	sub    $0x38,%rsp
    7bb6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7bba:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    7bbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7bc2:	48 8b 00             	mov    (%rax),%rax
    7bc5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7bc9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7bcd:	48 89 c7             	mov    %rax,%rdi
    7bd0:	e8 73 f7 ff ff       	call   7348 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    7bd5:	48 89 c3             	mov    %rax,%rbx
    7bd8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7bdc:	48 8b 00             	mov    (%rax),%rax
    7bdf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7be3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7be7:	48 89 c7             	mov    %rax,%rdi
    7bea:	e8 59 f7 ff ff       	call   7348 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    7bef:	48 29 c3             	sub    %rax,%rbx
    7bf2:	48 89 da             	mov    %rbx,%rdx
    7bf5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7bf9:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    7bfd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7c01:	48 89 d6             	mov    %rdx,%rsi
    7c04:	48 89 c7             	mov    %rax,%rdi
    7c07:	e8 14 f7 ff ff       	call   7320 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    7c0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    7c10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c14:	c9                   	leave
    7c15:	c3                   	ret

0000000000007c16 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    7c16:	55                   	push   %rbp
    7c17:	48 89 e5             	mov    %rsp,%rbp
    7c1a:	48 83 ec 20          	sub    $0x20,%rsp
    7c1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7c22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c26:	48 89 c7             	mov    %rax,%rdi
    7c29:	e8 1a f7 ff ff       	call   7348 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    7c2e:	48 89 c1             	mov    %rax,%rcx
    7c31:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    7c38:	9b c4 20 
    7c3b:	48 89 c8             	mov    %rcx,%rax
    7c3e:	48 f7 ea             	imul   %rdx
    7c41:	48 89 d0             	mov    %rdx,%rax
    7c44:	48 c1 f8 07          	sar    $0x7,%rax
    7c48:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7c4c:	48 89 ca             	mov    %rcx,%rdx
    7c4f:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    7c52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7c56:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    7c5a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    7c5e:	48 89 d6             	mov    %rdx,%rsi
    7c61:	48 89 c7             	mov    %rax,%rdi
    7c64:	e8 87 00 00 00       	call   7cf0 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    7c69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    7c6d:	c9                   	leave
    7c6e:	c3                   	ret

0000000000007c6f <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    7c6f:	55                   	push   %rbp
    7c70:	48 89 e5             	mov    %rsp,%rbp
    7c73:	48 83 ec 30          	sub    $0x30,%rsp
    7c77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7c7f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    7c83:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    7c87:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    7c8b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7c8f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7c93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c97:	48 89 ce             	mov    %rcx,%rsi
    7c9a:	48 89 c7             	mov    %rax,%rdi
    7c9d:	e8 6b 00 00 00       	call   7d0d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    7ca2:	c9                   	leave
    7ca3:	c3                   	ret

0000000000007ca4 <_ZSt11__addressofIjEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7ca4:	55                   	push   %rbp
    7ca5:	48 89 e5             	mov    %rsp,%rbp
    7ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cb0:	5d                   	pop    %rbp
    7cb1:	c3                   	ret

0000000000007cb2 <_ZSt10_ConstructIjJRmEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7cb2:	55                   	push   %rbp
    7cb3:	48 89 e5             	mov    %rsp,%rbp
    7cb6:	53                   	push   %rbx
    7cb7:	48 83 ec 18          	sub    $0x18,%rsp
    7cbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7cbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7cc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cc7:	48 89 c6             	mov    %rax,%rsi
    7cca:	bf 04 00 00 00       	mov    $0x4,%edi
    7ccf:	e8 ff b1 ff ff       	call   2ed3 <_ZnwmPv>
    7cd4:	48 89 c3             	mov    %rax,%rbx
    7cd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7cdb:	48 89 c7             	mov    %rax,%rdi
    7cde:	e8 29 fd ff ff       	call   7a0c <_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE>
    7ce3:	48 8b 00             	mov    (%rax),%rax
    7ce6:	89 03                	mov    %eax,(%rbx)
    }
    7ce8:	90                   	nop
    7ce9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ced:	c9                   	leave
    7cee:	c3                   	ret
    7cef:	90                   	nop

0000000000007cf0 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    7cf0:	55                   	push   %rbp
    7cf1:	48 89 e5             	mov    %rsp,%rbp
    7cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    7cfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d00:	48 8b 10             	mov    (%rax),%rdx
    7d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d07:	48 89 10             	mov    %rdx,(%rax)
    7d0a:	90                   	nop
    7d0b:	5d                   	pop    %rbp
    7d0c:	c3                   	ret

0000000000007d0d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    7d0d:	55                   	push   %rbp
    7d0e:	48 89 e5             	mov    %rsp,%rbp
    7d11:	48 83 ec 20          	sub    $0x20,%rsp
    7d15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    7d21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7d25:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d2d:	48 89 ce             	mov    %rcx,%rsi
    7d30:	48 89 c7             	mov    %rax,%rdi
    7d33:	e8 02 00 00 00       	call   7d3a <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    7d38:	c9                   	leave
    7d39:	c3                   	ret

0000000000007d3a <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    7d3a:	55                   	push   %rbp
    7d3b:	48 89 e5             	mov    %rsp,%rbp
    7d3e:	53                   	push   %rbx
    7d3f:	48 83 ec 28          	sub    $0x28,%rsp
    7d43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7d47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7d4b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    7d4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d53:	48 89 c7             	mov    %rax,%rdi
    7d56:	e8 2a 00 00 00       	call   7d85 <_ZSt12__miter_baseIPKPKcET_S4_>
    7d5b:	48 89 c3             	mov    %rax,%rbx
    7d5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d62:	48 89 c7             	mov    %rax,%rdi
    7d65:	e8 1b 00 00 00       	call   7d85 <_ZSt12__miter_baseIPKPKcET_S4_>
    7d6a:	48 89 c1             	mov    %rax,%rcx
    7d6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d71:	48 89 c2             	mov    %rax,%rdx
    7d74:	48 89 de             	mov    %rbx,%rsi
    7d77:	48 89 cf             	mov    %rcx,%rdi
    7d7a:	e8 14 00 00 00       	call   7d93 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    7d7f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d83:	c9                   	leave
    7d84:	c3                   	ret

0000000000007d85 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    7d85:	55                   	push   %rbp
    7d86:	48 89 e5             	mov    %rsp,%rbp
    7d89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d91:	5d                   	pop    %rbp
    7d92:	c3                   	ret

0000000000007d93 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    7d93:	55                   	push   %rbp
    7d94:	48 89 e5             	mov    %rsp,%rbp
    7d97:	41 54                	push   %r12
    7d99:	53                   	push   %rbx
    7d9a:	48 83 ec 20          	sub    $0x20,%rsp
    7d9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7da2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7da6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    7daa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dae:	48 89 c7             	mov    %rax,%rdi
    7db1:	e8 7c d8 ff ff       	call   5632 <_ZSt12__niter_baseIPPKcET_S3_>
    7db6:	49 89 c4             	mov    %rax,%r12
    7db9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7dbd:	48 89 c7             	mov    %rax,%rdi
    7dc0:	e8 38 00 00 00       	call   7dfd <_ZSt12__niter_baseIPKPKcET_S4_>
    7dc5:	48 89 c3             	mov    %rax,%rbx
    7dc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dcc:	48 89 c7             	mov    %rax,%rdi
    7dcf:	e8 29 00 00 00       	call   7dfd <_ZSt12__niter_baseIPKPKcET_S4_>
    7dd4:	4c 89 e2             	mov    %r12,%rdx
    7dd7:	48 89 de             	mov    %rbx,%rsi
    7dda:	48 89 c7             	mov    %rax,%rdi
    7ddd:	e8 29 00 00 00       	call   7e0b <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    7de2:	48 89 c2             	mov    %rax,%rdx
    7de5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7de9:	48 89 d6             	mov    %rdx,%rsi
    7dec:	48 89 c7             	mov    %rax,%rdi
    7def:	e8 44 00 00 00       	call   7e38 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    7df4:	48 83 c4 20          	add    $0x20,%rsp
    7df8:	5b                   	pop    %rbx
    7df9:	41 5c                	pop    %r12
    7dfb:	5d                   	pop    %rbp
    7dfc:	c3                   	ret

0000000000007dfd <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    7dfd:	55                   	push   %rbp
    7dfe:	48 89 e5             	mov    %rsp,%rbp
    7e01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e09:	5d                   	pop    %rbp
    7e0a:	c3                   	ret

0000000000007e0b <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    7e0b:	55                   	push   %rbp
    7e0c:	48 89 e5             	mov    %rsp,%rbp
    7e0f:	48 83 ec 20          	sub    $0x20,%rsp
    7e13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    7e1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e2b:	48 89 ce             	mov    %rcx,%rsi
    7e2e:	48 89 c7             	mov    %rax,%rdi
    7e31:	e8 14 00 00 00       	call   7e4a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    7e36:	c9                   	leave
    7e37:	c3                   	ret

0000000000007e38 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    7e38:	55                   	push   %rbp
    7e39:	48 89 e5             	mov    %rsp,%rbp
    7e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    7e44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7e48:	5d                   	pop    %rbp
    7e49:	c3                   	ret

0000000000007e4a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    7e4a:	55                   	push   %rbp
    7e4b:	48 89 e5             	mov    %rsp,%rbp
    7e4e:	48 83 ec 20          	sub    $0x20,%rsp
    7e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    7e5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e62:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e6a:	48 89 ce             	mov    %rcx,%rsi
    7e6d:	48 89 c7             	mov    %rax,%rdi
    7e70:	e8 02 00 00 00       	call   7e77 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    7e75:	c9                   	leave
    7e76:	c3                   	ret

0000000000007e77 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    7e77:	55                   	push   %rbp
    7e78:	48 89 e5             	mov    %rsp,%rbp
    7e7b:	48 83 ec 30          	sub    $0x30,%rsp
    7e7f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e83:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7e87:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    7e8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e8f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    7e93:	48 c1 f8 03          	sar    $0x3,%rax
    7e97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    7e9b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7ea0:	74 1f                	je     7ec1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    7ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ead:	00 
    7eae:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7eb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7eb6:	48 89 ce             	mov    %rcx,%rsi
    7eb9:	48 89 c7             	mov    %rax,%rdi
    7ebc:	e8 0f a4 ff ff       	call   22d0 <memmove@plt>
	  return __result + _Num;
    7ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ec5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ecc:	00 
    7ecd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ed1:	48 01 d0             	add    %rdx,%rax
	}
    7ed4:	c9                   	leave
    7ed5:	c3                   	ret

0000000000007ed6 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    7ed6:	55                   	push   %rbp
    7ed7:	48 89 e5             	mov    %rsp,%rbp
    7eda:	48 83 ec 10          	sub    $0x10,%rsp
    7ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ee2:	48 8d 15 f7 7d 00 00 	lea    0x7df7(%rip),%rdx        # fce0 <_ZTVSt19bad_optional_access+0x10>
    7ee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eed:	48 89 10             	mov    %rdx,(%rax)
    7ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ef4:	48 89 c7             	mov    %rax,%rdi
    7ef7:	e8 24 a4 ff ff       	call   2320 <_ZNSt9exceptionD2Ev@plt>
    7efc:	90                   	nop
    7efd:	c9                   	leave
    7efe:	c3                   	ret
    7eff:	90                   	nop

0000000000007f00 <_ZNSt19bad_optional_accessD0Ev>:
    7f00:	55                   	push   %rbp
    7f01:	48 89 e5             	mov    %rsp,%rbp
    7f04:	48 83 ec 10          	sub    $0x10,%rsp
    7f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f10:	48 89 c7             	mov    %rax,%rdi
    7f13:	e8 be ff ff ff       	call   7ed6 <_ZNSt19bad_optional_accessD1Ev>
    7f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f1c:	be 08 00 00 00       	mov    $0x8,%esi
    7f21:	48 89 c7             	mov    %rax,%rdi
    7f24:	e8 97 a2 ff ff       	call   21c0 <_ZdlPvm@plt>
    7f29:	c9                   	leave
    7f2a:	c3                   	ret

Disassembly of section .fini:

0000000000007f2c <_fini>:
    7f2c:	48 83 ec 08          	sub    $0x8,%rsp
    7f30:	48 83 c4 08          	add    $0x8,%rsp
    7f34:	c3                   	ret
